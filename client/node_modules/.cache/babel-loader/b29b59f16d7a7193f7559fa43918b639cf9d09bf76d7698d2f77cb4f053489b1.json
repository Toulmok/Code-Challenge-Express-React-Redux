{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { texelFetch as o } from \"../util/WebGL2Utils.js\";\nimport { FloatPassUniform as e } from \"../../shaderModules/FloatPassUniform.js\";\nimport { glsl as r } from \"../../shaderModules/interfaces.js\";\nimport { Texture2DPassUniform as a } from \"../../shaderModules/Texture2DPassUniform.js\";\nfunction l(l, t) {\n  l.fragment.uniforms.add([new a(\"u_colormap\", o => o.u_colormap), new e(\"u_colormapOffset\", o => o.colormap.u_colormapOffset), new e(\"u_colormapMaxIndex\", o => o.colormap.u_colormapMaxIndex), new e(\"u_opacity\", o => o.common.u_opacity)]), l.fragment.code.add(r`\n    vec4 colormap(vec4 currentPixel, bool isFloat) {\n      float colorIndex = isFloat ? currentPixel.r - u_colormapOffset : currentPixel.r * 255.0 - u_colormapOffset;\n      vec4 result;\n      // handle no data and out of range pixels\n      if (currentPixel.a == 0.0 || colorIndex > u_colormapMaxIndex) {\n        result = vec4(0.0, 0.0, 0.0, 0.0);\n      } else {\n        // colormap lookup\n        vec2 texelCoordinates = vec2((colorIndex + 0.5), 0.5);\n        result = ${o(t, \"u_colormap\", \"texelCoordinates\", \"(1.0 / vec2(u_colormapMaxIndex + 1.0, 1.0))\")};\n      }\n      return result;\n    }\n  `);\n}\nexport { l as Colormap };","map":{"version":3,"names":["texelFetch","o","FloatPassUniform","e","glsl","r","Texture2DPassUniform","a","l","t","fragment","uniforms","add","u_colormap","colormap","u_colormapOffset","u_colormapMaxIndex","common","u_opacity","code","Colormap"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/raster/Colormap.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{texelFetch as o}from\"../util/WebGL2Utils.js\";import{FloatPassUniform as e}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as a}from\"../../shaderModules/Texture2DPassUniform.js\";function l(l,t){l.fragment.uniforms.add([new a(\"u_colormap\",(o=>o.u_colormap)),new e(\"u_colormapOffset\",(o=>o.colormap.u_colormapOffset)),new e(\"u_colormapMaxIndex\",(o=>o.colormap.u_colormapMaxIndex)),new e(\"u_opacity\",(o=>o.common.u_opacity))]),l.fragment.code.add(r`\n    vec4 colormap(vec4 currentPixel, bool isFloat) {\n      float colorIndex = isFloat ? currentPixel.r - u_colormapOffset : currentPixel.r * 255.0 - u_colormapOffset;\n      vec4 result;\n      // handle no data and out of range pixels\n      if (currentPixel.a == 0.0 || colorIndex > u_colormapMaxIndex) {\n        result = vec4(0.0, 0.0, 0.0, 0.0);\n      } else {\n        // colormap lookup\n        vec2 texelCoordinates = vec2((colorIndex + 0.5), 0.5);\n        result = ${o(t,\"u_colormap\",\"texelCoordinates\",\"(1.0 / vec2(u_colormapMaxIndex + 1.0, 1.0))\")};\n      }\n      return result;\n    }\n  `)}export{l as Colormap};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,UAAU,IAAIC,CAAC,QAAK,wBAAwB;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,yCAAyC;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,oBAAoB,IAAIC,CAAC,QAAK,6CAA6C;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAACD,CAAC,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,CAAC,IAAIL,CAAC,CAAC,YAAY,EAAEN,CAAC,IAAEA,CAAC,CAACY,UAAU,CAAE,EAAC,IAAIV,CAAC,CAAC,kBAAkB,EAAEF,CAAC,IAAEA,CAAC,CAACa,QAAQ,CAACC,gBAAgB,CAAE,EAAC,IAAIZ,CAAC,CAAC,oBAAoB,EAAEF,CAAC,IAAEA,CAAC,CAACa,QAAQ,CAACE,kBAAkB,CAAE,EAAC,IAAIb,CAAC,CAAC,WAAW,EAAEF,CAAC,IAAEA,CAAC,CAACgB,MAAM,CAACC,SAAS,CAAE,CAAC,CAAC,EAACV,CAAC,CAACE,QAAQ,CAACS,IAAI,CAACP,GAAG,CAACP,CAAE;AACvhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBJ,CAAC,CAACQ,CAAC,EAAC,YAAY,EAAC,kBAAkB,EAAC,6CAA6C,CAAE;AACtG;AACA;AACA;AACA,GAAG,CAAC;AAAA;AAAC,SAAOD,CAAC,IAAIY,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}