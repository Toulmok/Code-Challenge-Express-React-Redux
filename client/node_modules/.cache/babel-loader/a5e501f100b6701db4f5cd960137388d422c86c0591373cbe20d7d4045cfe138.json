{"ast":null,"code":"/* Copyright 2017 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\n/*eslint-disable */\nimport Portal from '@arcgis/core/portal/Portal';\n/* eslint-enable */\n\nimport { LOAD_PORTAL, SET_IDENTITY, GET_USER_ITEMS, SET_USER_ITEMS } from '../constants/action-types';\n\n//const portal = new Portal({ authMode: 'immediate' })\n\n/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */\nconst arcgisMiddleWare = store => next => action => {\n  switch (action.type) {\n    case LOAD_PORTAL:\n      let portal = new Portal({\n        authMode: 'immediate'\n      });\n      portal.load().then(() => {\n        store.dispatch({\n          type: SET_IDENTITY,\n          username: portal.user.username,\n          fullname: portal.user.fullName,\n          email: portal.user.email,\n          thumbnailurl: portal.user.thumbnailUrl\n        });\n        store.dispatch({\n          type: GET_USER_ITEMS\n        });\n      });\n    case GET_USER_ITEMS:\n      next(action);\n      console.log(portal.user);\n      return portal.queryItems({\n        query: `owner:${portal.user.username}`,\n        sortField: 'modified',\n        sortOrder: 'desc',\n        num: 15\n      }).then(_ref => {\n        let {\n          results\n        } = _ref;\n        return store.dispatch({\n          type: SET_USER_ITEMS,\n          userItems: results\n        });\n      });\n    default:\n      return next(action);\n  }\n};\nexport default arcgisMiddleWare;","map":{"version":3,"names":["Portal","LOAD_PORTAL","SET_IDENTITY","GET_USER_ITEMS","SET_USER_ITEMS","arcgisMiddleWare","store","next","action","type","portal","authMode","load","then","dispatch","username","user","fullname","fullName","email","thumbnailurl","thumbnailUrl","console","log","queryItems","query","sortField","sortOrder","num","_ref","results","userItems"],"sources":["C:/code-challenge-react/frontend/src/middleware/arcgis-portal.js"],"sourcesContent":["/* Copyright 2017 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n/*eslint-disable */\r\nimport Portal from '@arcgis/core/portal/Portal'\r\n/* eslint-enable */\r\n\r\nimport {\r\n  LOAD_PORTAL,\r\n  SET_IDENTITY,\r\n  GET_USER_ITEMS,\r\n  SET_USER_ITEMS,\r\n} from '../constants/action-types'\r\n\r\n//const portal = new Portal({ authMode: 'immediate' })\r\n\r\n/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */\r\nconst arcgisMiddleWare = store => next => (action) => {\r\n  switch (action.type) {\r\n    case LOAD_PORTAL:\r\n      let portal = new Portal({ authMode: 'immediate' })\r\n      portal.load()\r\n      .then(() => {\r\n        store.dispatch({\r\n          type: SET_IDENTITY,\r\n          username: portal.user.username,\r\n          fullname: portal.user.fullName,\r\n          email: portal.user.email,\r\n          thumbnailurl: portal.user.thumbnailUrl,\r\n        })\r\n        store.dispatch({ type: GET_USER_ITEMS })\r\n      })\r\n\r\n    case GET_USER_ITEMS:\r\n      next(action)\r\n      console.log(portal.user)\r\n      return portal.queryItems({\r\n        query: `owner:${portal.user.username}`,\r\n        sortField: 'modified',\r\n        sortOrder: 'desc',\r\n        num: 15,\r\n      })\r\n        .then(({ results }) => store.dispatch({\r\n          type: SET_USER_ITEMS,\r\n          userItems: results,\r\n        }))\r\n\r\n    default:\r\n      return next(action)\r\n  }\r\n}\r\n\r\nexport default arcgisMiddleWare"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C;;AAEA,SACEC,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,cAAc,QACT,2BAA2B;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAKC,MAAM,IAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,WAAW;MACd,IAAIS,MAAM,GAAG,IAAIV,MAAM,CAAC;QAAEW,QAAQ,EAAE;MAAY,CAAC,CAAC;MAClDD,MAAM,CAACE,IAAI,EAAE,CACZC,IAAI,CAAC,MAAM;QACVP,KAAK,CAACQ,QAAQ,CAAC;UACbL,IAAI,EAAEP,YAAY;UAClBa,QAAQ,EAAEL,MAAM,CAACM,IAAI,CAACD,QAAQ;UAC9BE,QAAQ,EAAEP,MAAM,CAACM,IAAI,CAACE,QAAQ;UAC9BC,KAAK,EAAET,MAAM,CAACM,IAAI,CAACG,KAAK;UACxBC,YAAY,EAAEV,MAAM,CAACM,IAAI,CAACK;QAC5B,CAAC,CAAC;QACFf,KAAK,CAACQ,QAAQ,CAAC;UAAEL,IAAI,EAAEN;QAAe,CAAC,CAAC;MAC1C,CAAC,CAAC;IAEJ,KAAKA,cAAc;MACjBI,IAAI,CAACC,MAAM,CAAC;MACZc,OAAO,CAACC,GAAG,CAACb,MAAM,CAACM,IAAI,CAAC;MACxB,OAAON,MAAM,CAACc,UAAU,CAAC;QACvBC,KAAK,EAAG,SAAQf,MAAM,CAACM,IAAI,CAACD,QAAS,EAAC;QACtCW,SAAS,EAAE,UAAU;QACrBC,SAAS,EAAE,MAAM;QACjBC,GAAG,EAAE;MACP,CAAC,CAAC,CACCf,IAAI,CAACgB,IAAA;QAAA,IAAC;UAAEC;QAAQ,CAAC,GAAAD,IAAA;QAAA,OAAKvB,KAAK,CAACQ,QAAQ,CAAC;UACpCL,IAAI,EAAEL,cAAc;UACpB2B,SAAS,EAAED;QACb,CAAC,CAAC;MAAA,EAAC;IAEP;MACE,OAAOvB,IAAI,CAACC,MAAM,CAAC;EAAA;AAEzB,CAAC;AAED,eAAeH,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}