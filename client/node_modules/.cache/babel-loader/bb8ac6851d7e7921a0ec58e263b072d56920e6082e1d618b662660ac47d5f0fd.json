{"ast":null,"code":"import{default as storeState}from'../store/store';import{LOAD_PORTAL,SET_IDENTITY,GET_USER_ITEMS,SET_USER_ITEMS,GET_USER_TAGS,SET_USER_TAGS,ADD_ITEM_TAGS,DELETE_ITEM_TAGS}from'../constants/action-types';var qParamArray=['title','type','created','tag'];var tagsCsv=[];//: { id: string, tag: string, }[] = []\nvar tagsToUpdate=[];var xButton=undefined;var qString='';/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */var arcgisMiddleWare=function arcgisMiddleWare(store){return function(next){return function(action){switch(action.type){case LOAD_PORTAL:fetch('/getUser').then(function(res){return res.json();})//.json is asynch; .parse is sync\n.then(function(user){//console.log(user)\nstore.dispatch({type:SET_IDENTITY,username:user.username,fullname:user.fullname,email:user.email,thumbnailurl:user.thumbnailurl});}).then(function(){return store.dispatch({type:GET_USER_ITEMS});}).then(function(){store.dispatch({type:GET_USER_TAGS});});return next(action);case GET_USER_ITEMS://Does this sanitize?\nvar myUrlGet=new URL(window.location.href);//console.log(myUrlGet.toString())\nvar myUrlHas=new URLSearchParams(myUrlGet.search);if(myUrlHas.has(\"dcreated\")){var qDCreated=myUrlHas.get(\"dcreated\");//console.log(qDCreated)\nif(qDCreated!==''){var created=new Date(qDCreated);var createdUnix=created.getTime().toString();if(myUrlHas.get(\"rcreated\")===\"before\"){createdUnix='[0 TO '+createdUnix+']';}else if(myUrlHas.get(\"rcreated\")===\"after\"){createdUnix='['+createdUnix+' TO 99999999999999]';}//console.log(createdUnix)\nmyUrlHas.set(\"created\",createdUnix);}}myUrlGet.search=myUrlHas.toString();//const new_url = myUrlGet.toString(); console.log(new_url)\nwindow.history.replaceState('','',myUrlGet.search);qString='';for(var _i=0,_qParamArray=qParamArray;_i<_qParamArray.length;_i++){var field=_qParamArray[_i];if(myUrlHas.has(field)){if(myUrlGet.searchParams.get(field)!==''){qString+=' AND '+field+':'+myUrlGet.searchParams.get(field);}}}if(storeState.getState().user.username===null){//console.log(\"query string is \" + qString)\nreturn next(action);}else{//portal.user.fetchItems() might be better\ntry{fetch('/getItems',{method:\"POST\",body:JSON.stringify({q:\"owner:\".concat(storeState.getState().user.username)+qString,sortField:'modified',sortOrder:'desc',num:20,//max is 100, default is 10\nstart:1}),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){return res.json();})//.json is asynch; .parse is sync\n.then(function(_ref){var results=_ref.results;//console.log(results)\nstore.dispatch({type:SET_USER_ITEMS,userItems:results});});}catch(err){console.log(err.message);}finally{console.log(storeState.getState().user.username+' is getting items');}}return next(action);case GET_USER_TAGS:if(storeState.getState().user.username===null){return next(action);}else{try{return fetch('/getTags').then(function(res){return res.json();})//.json is asynch; .parse is sync\n.then(function(tagsObj){//console.log(tagsObj.tags.map(({tag}) => tag) )\nstore.dispatch({type:SET_USER_TAGS,userTags:tagsObj.tags.map(function(_ref2){var tag=_ref2.tag;return tag;})});});}catch(err){console.log(err.message);}finally{console.log(storeState.getState().user.username+' is fetching tags');}}return next(action);case ADD_ITEM_TAGS:next(action);tagsCsv=[];tagsToUpdate=[];document.querySelectorAll(\"input.inputTags\").forEach(function(input){if(input.value!==''){tagsCsv.push({id:input.id.replace('input',''),//(option as HTMLInputElement) //removes first instance of word\ntag:input.value});}});//console.log(tagsCsv)\ndocument.querySelectorAll(\"select.selectTags option:checked\").forEach(function(option){if(option.id!==''){tagsCsv.push({id:option.id.replace(option.value,''),//(option as HTMLInputElement) //removes first instance of word\ntag:option.value});}});//console.log(tagsCsv)\ntagsCsv.forEach(function(itemToUpdate){//__esri.PortalItemUpdateParams\ntagsToUpdate=storeState.getState().query.userItems.find(function(item){return item.id===itemToUpdate.id;}).tags.sort();tagsToUpdate.push(itemToUpdate.tag);try{//console.log(tagsToUpdate)\nfetch('/updateTags',{method:\"POST\",body:JSON.stringify({id:itemToUpdate.id,tags:tagsToUpdate}),headers:{\"Content-Type\":\"application/json\"}}).then(function(){return window.location.reload();});}catch(err){console.log(err);}finally{console.log(storeState.getState().user.username+' is adding tags');}});break;case DELETE_ITEM_TAGS:next(action);tagsCsv=[];tagsToUpdate=[];xButton=document.querySelector(\"button.deleteMe\");if(xButton.value!==''){tagsCsv.push({id:xButton.id.replace('delete'+xButton.value,''),//(option as HTMLInputElement) //removes first instance of word\ntag:xButton.value});};console.log(tagsCsv[0]);console.log(storeState.getState().query.userItems.find(function(item){return item.id===tagsCsv[0].id;}).tags.sort());tagsToUpdate=storeState.getState().query.userItems.find(function(item){return item.id==='25433567283d4f5190918c290eb71581';}).tags.sort();tagsToUpdate=tagsToUpdate.filter(function(tag){return tag!==tagsCsv.tag;});try{//console.log(tagsToUpdate)\nfetch('/updateTags',{method:\"POST\",body:JSON.stringify({id:tagsCsv[0].id,tags:tagsToUpdate}),headers:{\"Content-Type\":\"application/json\"}}).then(function(){return window.location.reload();});}catch(err){console.log(err);}finally{console.log(storeState.getState().user.username+' is deleting a tag');}break;default:return next(action);}};};};export default arcgisMiddleWare;","map":{"version":3,"names":["default","storeState","LOAD_PORTAL","SET_IDENTITY","GET_USER_ITEMS","SET_USER_ITEMS","GET_USER_TAGS","SET_USER_TAGS","ADD_ITEM_TAGS","DELETE_ITEM_TAGS","qParamArray","tagsCsv","tagsToUpdate","xButton","undefined","qString","arcgisMiddleWare","store","next","action","type","fetch","then","res","json","user","dispatch","username","fullname","email","thumbnailurl","myUrlGet","URL","window","location","href","myUrlHas","URLSearchParams","search","has","qDCreated","get","created","Date","createdUnix","getTime","toString","set","history","replaceState","_i","_qParamArray","length","field","searchParams","getState","method","body","JSON","stringify","q","concat","sortField","sortOrder","num","start","headers","_ref","results","userItems","err","console","log","message","tagsObj","userTags","tags","map","_ref2","tag","document","querySelectorAll","forEach","input","value","push","id","replace","option","itemToUpdate","query","find","item","sort","reload","querySelector","filter"],"sources":["C:/code-challenge-react/client/src/middleware/arcgis-portal.js"],"sourcesContent":["import { default as storeState } from '../store/store'\r\nimport {\r\n  LOAD_PORTAL,\r\n  SET_IDENTITY,\r\n  GET_USER_ITEMS,\r\n  SET_USER_ITEMS,\r\n  GET_USER_TAGS,\r\n  SET_USER_TAGS,\r\n  ADD_ITEM_TAGS,\r\n  DELETE_ITEM_TAGS,\r\n} from '../constants/action-types'\r\n\r\nconst qParamArray = ['title','type','created','tag']\r\nlet tagsCsv = [] //: { id: string, tag: string, }[] = []\r\nlet tagsToUpdate = []\r\nlet xButton = undefined\r\nlet qString = ''\r\n\r\n/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */\r\nconst arcgisMiddleWare = store => next => (action) => {\r\n  switch (action.type) {\r\n    case LOAD_PORTAL:\r\n      fetch('/getUser')\r\n      .then(res => res.json()) //.json is asynch; .parse is sync\r\n      .then((user) => { //console.log(user)\r\n        store.dispatch({\r\n          type: SET_IDENTITY,\r\n          username: user.username,\r\n          fullname: user.fullname,\r\n          email: user.email,\r\n          thumbnailurl: user.thumbnailurl,\r\n      })})\r\n      .then(() => store.dispatch({ type: GET_USER_ITEMS }) )\r\n      .then(() => { store.dispatch({ type: GET_USER_TAGS }) })\r\n      return next(action)\r\n\r\n    case GET_USER_ITEMS:\r\n      //Does this sanitize?\r\n      let myUrlGet = new URL(window.location.href); //console.log(myUrlGet.toString())\r\n      let myUrlHas = new URLSearchParams(myUrlGet.search)\r\n\r\n      if(myUrlHas.has(\"dcreated\")) {\r\n        let qDCreated = myUrlHas.get(\"dcreated\"); //console.log(qDCreated)\r\n        if((qDCreated !== '')){\r\n          let created = new Date(qDCreated)\r\n          let createdUnix = created.getTime().toString()\r\n          if(myUrlHas.get(\"rcreated\")===\"before\") {\r\n            createdUnix = '[0 TO ' + createdUnix + ']'\r\n          } else if (myUrlHas.get(\"rcreated\")===\"after\") {\r\n            createdUnix = '[' + createdUnix + ' TO 99999999999999]'\r\n          } //console.log(createdUnix)\r\n          myUrlHas.set(\"created\",createdUnix)\r\n        }\r\n      }\r\n\r\n      myUrlGet.search = myUrlHas.toString()\r\n      //const new_url = myUrlGet.toString(); console.log(new_url)\r\n      window.history.replaceState('','',myUrlGet.search)\r\n\r\n      qString = ''\r\n      for (const field of qParamArray) {\r\n        if(myUrlHas.has(field)) {\r\n          if((myUrlGet.searchParams.get(field) !== '')){\r\n            qString += ' AND ' + field + ':' + myUrlGet.searchParams.get(field)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (storeState.getState().user.username === null) { //console.log(\"query string is \" + qString)\r\n        return next(action)\r\n      } else { //portal.user.fetchItems() might be better\r\n        try { \r\n          fetch('/getItems', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              q: `owner:${storeState.getState().user.username}` + qString,\r\n              sortField: 'modified',\r\n              sortOrder: 'desc',\r\n              num: 20, //max is 100, default is 10\r\n              start: 1,\r\n            }),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          })\r\n          .then(res => res.json()) //.json is asynch; .parse is sync\r\n          .then(({ results }) => { //console.log(results)\r\n            store.dispatch({ type: SET_USER_ITEMS, userItems: results, })\r\n          })\r\n        }\r\n        catch(err) { console.log(err.message) }\r\n        finally { console.log(storeState.getState().user.username + ' is getting items') }\r\n      }\r\n      return next(action)\r\n\r\n    case GET_USER_TAGS:\r\n      if (storeState.getState().user.username === null) {\r\n        return next(action)\r\n      } else {\r\n        try { \r\n          return fetch('/getTags')\r\n          .then(res => res.json()) //.json is asynch; .parse is sync\r\n          .then( (tagsObj) => { //console.log(tagsObj.tags.map(({tag}) => tag) )\r\n            store.dispatch({ type: SET_USER_TAGS, userTags: tagsObj.tags.map(({tag}) => tag) })\r\n          })\r\n        }\r\n        catch(err) { console.log(err.message) }\r\n        finally { console.log(storeState.getState().user.username + ' is fetching tags') }\r\n      }\r\n      return next(action)\r\n\r\n    case ADD_ITEM_TAGS:\r\n      next(action)\r\n      tagsCsv = []\r\n      tagsToUpdate = []\r\n\r\n      document.querySelectorAll(\"input.inputTags\").forEach(input => {\r\n        if (input.value !== '') {\r\n          tagsCsv.push({\r\n            id: input.id.replace('input',''), //(option as HTMLInputElement) //removes first instance of word\r\n            tag: input.value,\r\n          })\r\n        }\r\n      }); //console.log(tagsCsv)\r\n      document.querySelectorAll(\"select.selectTags option:checked\").forEach(option => {\r\n        if (option.id !== '') {\r\n          tagsCsv.push({\r\n            id: option.id.replace((option.value),''), //(option as HTMLInputElement) //removes first instance of word\r\n            tag: option.value,\r\n          })\r\n        }\r\n      }); //console.log(tagsCsv)\r\n\r\n      tagsCsv.forEach((itemToUpdate) => { //__esri.PortalItemUpdateParams\r\n        tagsToUpdate = storeState.getState().query.userItems.find(item => item.id === itemToUpdate.id).tags.sort()\r\n        tagsToUpdate.push(itemToUpdate.tag)\r\n\r\n        try{ //console.log(tagsToUpdate)\r\n          fetch('/updateTags', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                id: itemToUpdate.id,\r\n                tags: tagsToUpdate,\r\n            }),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          })\r\n          .then(() => window.location.reload())\r\n        }\r\n        catch(err) { console.log(err) }\r\n        finally {console.log(storeState.getState().user.username + ' is adding tags')} \r\n      })\r\n      break\r\n\r\n    case DELETE_ITEM_TAGS:\r\n      next(action)\r\n      tagsCsv = []\r\n      tagsToUpdate = []\r\n\r\n      xButton = document.querySelector(\"button.deleteMe\")\r\n      if (xButton.value !== '') {\r\n        tagsCsv.push({\r\n          id: xButton.id.replace(('delete' + xButton.value),''), //(option as HTMLInputElement) //removes first instance of word\r\n          tag: xButton.value,\r\n        })\r\n      }; console.log(tagsCsv[0])\r\n      console.log(storeState.getState().query.userItems.find(item => item.id === tagsCsv[0].id).tags.sort())\r\n      tagsToUpdate = storeState.getState().query.userItems.find(item => item.id === '25433567283d4f5190918c290eb71581').tags.sort()\r\n      tagsToUpdate = tagsToUpdate.filter(tag => tag !== tagsCsv.tag)\r\n      \r\n      try{ //console.log(tagsToUpdate)\r\n        fetch('/updateTags', {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n              id: tagsCsv[0].id,\r\n              tags: tagsToUpdate,\r\n          }),\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        })\r\n        .then(() => window.location.reload())\r\n      }\r\n      catch(err) { console.log(err) }\r\n      finally {console.log(storeState.getState().user.username + ' is deleting a tag')} \r\n      break\r\n\r\n    default:\r\n      return next(action)\r\n  }\r\n}\r\n\r\nexport default arcgisMiddleWare"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}