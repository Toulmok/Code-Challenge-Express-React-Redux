{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../../../../geometry.js\";\nimport e from \"../../../../../core/Evented.js\";\nimport has from \"../../../../../core/has.js\";\nimport { isNone as t, isSome as s, applySome as r } from \"../../../../../core/maybe.js\";\nimport { diff as o, hasDiff as a } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport { GeohashTree as i } from \"../../../../../geohash/GeohashTree.js\";\nimport { setGeohashBuf as h, setGeohashXY as n } from \"../../../../../geohash/geohashUtils.js\";\nimport { create as l } from \"../../../../../geometry/support/aaBoundingBox.js\";\nimport { earth as u } from \"../../../../../geometry/support/Ellipsoid.js\";\nimport { getInfo as g } from \"../../../../../geometry/support/spatialReferenceUtils.js\";\nimport { getBoundsOptimizedGeometry as c, quantizeX as d, quantizeY as f, convertFromPolygon as p } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeatureWithGeometry as m, OptimizedFeature as _ } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport y from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { checkProjectionSupport as I, project as b } from \"../../../../../layers/graphics/data/projectionSupport.js\";\nimport { TILE_SIZE as v } from \"../../../engine/webgl/definitions.js\";\nimport { DISPLAY_ID_TEXEL_MASK as R } from \"../../../engine/webgl/DisplayId.js\";\nimport { featureAdapter as M } from \"../FeatureStore2D.js\";\nimport { Store2D as x } from \"../Store2D.js\";\nimport { FeatureSetReaderJSON as C } from \"./FeatureSetReaderJSON.js\";\nimport j from \"../../../../../geometry/SpatialReference.js\";\nimport L from \"../../../../../geometry/Polygon.js\";\nimport B from \"../../../../../geometry/Extent.js\";\nconst F = 12,\n  w = 64,\n  S = 1,\n  V = l();\nclass T extends m {\n  constructor(e, t, s, r, o) {\n    super(new y([], [t, s]), r, null, e), this.geohashBoundsInfo = o;\n  }\n  get count() {\n    return this.attributes.cluster_count;\n  }\n  static create(e, t, s, r, o, a, i, h) {\n    const n = new T(t, s, r, a, i);\n    return n.displayId = e.createDisplayId(!0), n.referenceId = h, n.tileLevel = o, n;\n  }\n  update(e, t, s, r, o, a) {\n    return this.geometry.coords[0] = e, this.geometry.coords[1] = t, this.tileLevel = s, this.attributes = r, this.geohashBoundsInfo = o, this.referenceId = null, this.referenceId = a, this;\n  }\n  toJSON() {\n    return {\n      attributes: {\n        ...this.attributes,\n        aggregateId: this.objectId,\n        referenceId: 1 === this.attributes.cluster_count ? this.referenceId : null\n      },\n      geometry: {\n        x: this.geometry.coords[0],\n        y: this.geometry.coords[1]\n      }\n    };\n  }\n}\nfunction D(e) {\n  return 57.29577951308232 * e;\n}\nclass G extends x {\n  constructor(t, s, r, o) {\n    super(t, r), this.type = \"cluster\", this.events = new e(), this.objectIdField = \"aggregateId\", this.featureAdapter = M, this._geohashLevel = 0, this._tileLevel = 0, this._aggregateValueRanges = {}, this._aggregateValueRangesChanged = !1, this._geohashBuf = [], this._clusters = new Map(), this._tiles = new Map(), this._serviceInfo = o, this.geometryInfo = t.geometryInfo, this._spatialReference = s, this._projectionSupportCheck = I(s, j.WGS84), this._bitsets.geohash = r.getBitset(r.createBitset()), this._bitsets.inserted = r.getBitset(r.createBitset());\n  }\n  destroy() {\n    this._tree.destroy();\n  }\n  get featureSpatialReference() {\n    return this._spatialReference;\n  }\n  get fields() {\n    return this._fields;\n  }\n  async updateSchema(e, s) {\n    const r = this._schema;\n    try {\n      await super.updateSchema(e, s), await this._projectionSupportCheck;\n    } catch (n) {}\n    this._fields = this._schema.params.fields;\n    const h = o(r, s);\n    s && (!t(h) || e.source || e.storage.filters) ? ((a(h, \"params.fields\") || !this._tree || e.source) && (this._tree && this._tree.destroy(), this._tree = new i(this._statisticFields, this._serviceInfo), this._rebuildTree(), has(\"esri-2d-update-debug\") && console.debug(\"Aggregate mesh needs update due to tree changing\")), has(\"esri-2d-update-debug\") && console.debug(\"Applying Update - ClusterStore:\", h), e.targets[s.name] = !0, e.mesh = !1, this._aggregateValueRanges = {}) : r && (e.mesh = !0);\n  }\n  clear() {\n    this._rebuildTree();\n  }\n  sweepFeatures(e, t) {\n    this._bitsets.inserted.forEachSet(s => {\n      if (!e.has(s)) {\n        const e = t.lookupByDisplayIdUnsafe(s);\n        this._remove(e);\n      }\n    });\n  }\n  sweepAggregates(e, t, s) {\n    this._clusters.forEach((r, o) => {\n      r && r.tileLevel !== s && (e.releaseDisplayId(r.displayId), t.unsetAttributeData(r.displayId), this._clusters.delete(o));\n    });\n  }\n  onTileData(e, s, r, o) {\n    let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !0;\n    if (!this._schema || t(s.addOrUpdate)) return s;\n    this.events.emit(\"changed\");\n    const i = this._getTransforms(e, this._spatialReference);\n    {\n      const e = s.addOrUpdate.getCursor();\n      for (; e.next();) this._update(e, o);\n    }\n    if (s.status.mesh || !a) return s;\n    const h = new Array(),\n      n = this._schema.params.clusterRadius;\n    this._getClustersForTile(h, e, n, r, i), s.addOrUpdate = C.fromOptimizedFeatures(h, this._serviceInfo), s.addOrUpdate.attachStorage(r), s.clear = !0, s.end = !0;\n    {\n      const t = s.addOrUpdate.getCursor();\n      for (; t.next();) {\n        const s = t.getDisplayId();\n        this._bitsets.computed.unset(s), this.setComputedAttributes(r, t, s, e.scale);\n      }\n    }\n    return this._aggregateValueRangesChanged && s.end && (this.events.emit(\"valueRangesChanged\", {\n      valueRanges: this._aggregateValueRanges\n    }), this._aggregateValueRangesChanged = !1), s;\n  }\n  onTileUpdate(_ref) {\n    let {\n      added: e,\n      removed: t\n    } = _ref;\n    if (e.length) {\n      const t = e[0].level;\n      this._tileLevel = t, this._setGeohashLevel(t);\n    }\n    if (!this._schema) return;\n    const s = this._schema.params.clusterRadius;\n    t.forEach(e => {\n      this._tiles.delete(e.key.id), this._markTileClustersForDeletion(e, s);\n    });\n  }\n  getAggregate(e) {\n    for (const t of this._clusters.values()) if ((t?.displayId & R) == (e & R)) return t.toJSON();\n    return null;\n  }\n  getAggregates() {\n    const e = [];\n    for (const t of this._clusters.values()) t?.tileLevel === this._tileLevel && e.push(t.toJSON());\n    return e;\n  }\n  getDisplayId(e) {\n    const t = this._clusters.get(e);\n    return t ? t.displayId : null;\n  }\n  getFeatureDisplayIdsForAggregate(e) {\n    const t = this._clusters.get(e);\n    return t ? this._tree.getRegionDisplayIds(t.geohashBoundsInfo) : [];\n  }\n  getDisplayIdForReferenceId(e) {\n    for (const t of this._clusters.values()) if (t?.referenceId === e) return t.displayId;\n    return null;\n  }\n  getAggregateValueRanges() {\n    return this._aggregateValueRanges;\n  }\n  forEach(e) {\n    this._clusters.forEach(t => {\n      if (!t) return;\n      const s = t.toJSON(),\n        r = C.fromFeatures([s], {\n          objectIdField: this.objectIdField,\n          globalIdField: null,\n          geometryType: this.geometryInfo.geometryType,\n          fields: this.fields\n        }).getCursor();\n      r.next(), e(r);\n    });\n  }\n  forEachInBounds(e, t) {}\n  forEachBounds(e, s) {\n    const {\n      hasM: r,\n      hasZ: o\n    } = this.geometryInfo;\n    for (const a of e) {\n      const e = c(V, a.readGeometry(), o, r);\n      t(e) || s(e);\n    }\n  }\n  size() {\n    let e = 0;\n    return this.forEach(t => e++), e;\n  }\n  _rebuildTree() {\n    this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();\n  }\n  _remove(e) {\n    const t = e.getDisplayId(),\n      s = e.getXHydrated(),\n      r = e.getYHydrated(),\n      o = this._geohashBuf[2 * t],\n      a = this._geohashBuf[2 * t + 1];\n    this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, o, a, this._geohashLevel));\n  }\n  _update(e, t) {\n    const s = e.getDisplayId(),\n      r = this._bitsets.inserted,\n      o = t.isVisible(s);\n    if (o === r.has(s)) return;\n    if (!o) return void this._remove(e);\n    const a = e.getXHydrated(),\n      i = e.getYHydrated();\n    if (!this._setGeohash(s, a, i)) return;\n    const h = this._geohashBuf[2 * s],\n      n = this._geohashBuf[2 * s + 1];\n    this._tree.insertCursor(e, s, a, i, h, n, this._geohashLevel), r.set(s);\n  }\n  _setGeohash(e, t, s) {\n    if (this._bitsets.geohash.has(e)) return !0;\n    const r = this._geohashBuf;\n    if (this._spatialReference.isWebMercator) {\n      const o = D(t / u.radius),\n        a = o - 360 * Math.floor((o + 180) / 360),\n        i = D(Math.PI / 2 - 2 * Math.atan(Math.exp(-s / u.radius)));\n      h(r, e, i, a, F);\n    } else {\n      const o = b({\n        x: t,\n        y: s\n      }, this._spatialReference, j.WGS84);\n      if (!o) return !1;\n      h(r, e, o.y, o.x, F);\n    }\n    return this._bitsets.geohash.set(e), !0;\n  }\n  _getClustersForTile(e, o, a, i, h) {\n    let n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : !0;\n    const l = this._schema.params.clusterPixelBuffer,\n      u = 2 * a,\n      g = Math.ceil(2 ** o.key.level * v / u) + 1,\n      c = Math.ceil(l / u) + 0,\n      p = Math.ceil(v / u),\n      {\n        row: m,\n        col: y\n      } = o.key,\n      I = y * v,\n      b = m * v,\n      R = Math.floor(I / u) - c,\n      M = Math.floor(b / u) - c,\n      x = R + p + 2 * c,\n      C = M + p + 2 * c,\n      j = o.tileInfoView.getLODInfoAt(o.key.level);\n    for (let v = R; v <= x; v++) for (let a = M; a <= C; a++) {\n      let l = v;\n      j.wrap && (l = v < 0 ? v + g : v % g);\n      const u = j.wrap && v < 0,\n        c = j.wrap && v % g !== v,\n        p = this._lookupCluster(i, j, o.key.level, l, a, o);\n      if (s(p)) {\n        const o = r(h, e => u ? e.left : c ? e.right : e.tile);\n        if (n && t(o)) continue;\n        if (!p.count) continue;\n        if (s(o) && n) {\n          const t = p.geometry.clone();\n          let r = p.attributes;\n          t.coords[0] = d(o, t.coords[0]), t.coords[1] = f(o, t.coords[1]), 1 === p.count && s(p.referenceId) && (r = {\n            ...p.attributes,\n            referenceId: p.referenceId\n          });\n          const a = new _(t, r);\n          a.displayId = p.displayId, e.push(a);\n        }\n      }\n    }\n  }\n  _getGeohashLevel(e) {\n    return Math.min(Math.ceil(e / 2 + 2), F);\n  }\n  _setGeohashLevel(e) {\n    const t = this._getGeohashLevel(e),\n      s = (Math.floor(t / S) + 1) * S - 1;\n    if (this._geohashLevel !== s) return this._geohashLevel = s, this._rebuildTree(), void this._bitsets.geohash.clear();\n  }\n  _getTransforms(e, t) {\n    const s = {\n        originPosition: \"upperLeft\",\n        scale: [e.resolution, e.resolution],\n        translate: [e.bounds[0], e.bounds[3]]\n      },\n      r = g(t);\n    if (!r) return {\n      tile: s,\n      left: null,\n      right: null\n    };\n    const [o, a] = r.valid;\n    return {\n      tile: s,\n      left: {\n        ...s,\n        translate: [a, e.bounds[3]]\n      },\n      right: {\n        ...s,\n        translate: [o - a + e.bounds[0], e.bounds[3]]\n      }\n    };\n  }\n  _getClusterId(e, t, s) {\n    return (15 & e) << 28 | (16383 & t) << 14 | 16383 & s;\n  }\n  _markForDeletion(e, t, s) {\n    const r = this._getClusterId(e, t, s);\n    this._clusters.delete(r);\n  }\n  _getClusterBounds(e, t, s) {\n    const r = this._schema.params.clusterRadius,\n      o = 2 * r;\n    let a = s % 2 ? t * o : t * o - r;\n    const i = s * o;\n    let h = a + o;\n    const n = i - o,\n      l = 2 ** e.level * v;\n    e.wrap && a < 0 && (a = 0), e.wrap && h > l && (h = l);\n    const u = a / v,\n      g = i / v,\n      c = h / v,\n      d = n / v;\n    return [e.getXForColumn(u), e.getYForRow(g), e.getXForColumn(c), e.getYForRow(d)];\n  }\n  _getGeohash(e, t, s) {\n    const r = {\n      geohashX: 0,\n      geohashY: 0\n    };\n    return n(r, t, e, s), r;\n  }\n  _getGeohashBounds(e, t) {\n    const s = this._getGeohashLevel(e.key.level);\n    if (this._spatialReference.isWebMercator) {\n      const [e, r, o, a] = t,\n        i = {\n          x: e,\n          y: r\n        },\n        h = {\n          x: o,\n          y: a\n        };\n      let l = 0,\n        g = 0,\n        c = 0,\n        d = 0;\n      {\n        const e = D(i.x / u.radius);\n        l = e - 360 * Math.floor((e + 180) / 360), g = D(Math.PI / 2 - 2 * Math.atan(Math.exp(-i.y / u.radius)));\n      }\n      {\n        const e = D(h.x / u.radius);\n        c = e - 360 * Math.floor((e + 180) / 360), d = D(Math.PI / 2 - 2 * Math.atan(Math.exp(-h.y / u.radius)));\n      }\n      const f = {\n          geohashX: 0,\n          geohashY: 0\n        },\n        p = {\n          geohashX: 0,\n          geohashY: 0\n        };\n      n(f, g, l, s), n(p, d, c, s);\n      return {\n        bounds: [e, r, o, a],\n        geohashBounds: {\n          xLL: f.geohashX,\n          yLL: f.geohashY,\n          xTR: p.geohashX,\n          yTR: p.geohashY\n        },\n        level: s\n      };\n    }\n    const r = L.fromExtent(B.fromBounds(t, this._spatialReference)),\n      o = b(r, this._spatialReference, j.WGS84, {\n        densificationStep: e.resolution * w\n      });\n    if (!o) return null;\n    const a = p(new y(), o, !1, !1),\n      i = a.coords.filter((e, t) => !(t % 2)),\n      h = a.coords.filter((e, t) => t % 2),\n      l = Math.min(...i),\n      g = Math.min(...h),\n      c = Math.max(...i),\n      d = Math.max(...h),\n      f = this._getGeohash(l, g, s),\n      m = this._getGeohash(c, d, s);\n    return {\n      bounds: t,\n      geohashBounds: {\n        xLL: f.geohashX,\n        yLL: f.geohashY,\n        xTR: m.geohashX,\n        yTR: m.geohashY\n      },\n      level: s\n    };\n  }\n  _lookupCluster(e, r, o, a, i, h) {\n    const n = this._getClusterId(o, a, i),\n      l = this._clusters.get(n),\n      u = this._getClusterBounds(r, a, i),\n      g = this._getGeohashBounds(h, u);\n    if (t(g)) return null;\n    const c = this._tree.getRegionStatistics(g),\n      {\n        count: d,\n        xTotal: f,\n        yTotal: p,\n        referenceId: m\n      } = c,\n      _ = d ? f / d : 0,\n      y = d ? p / d : 0;\n    if (0 === d) return this._clusters.set(n, null), null;\n    const I = {\n        cluster_count: d,\n        ...c.attributes\n      },\n      b = s(l) ? l.update(_, y, o, I, g, m) : T.create(e, n, _, y, o, I, g, m);\n    if (0 === d) {\n      const [e, t, s, r] = u;\n      b.geometry.coords[0] = (e + s) / 2, b.geometry.coords[1] = (t + r) / 2;\n    }\n    return this._clusters.set(n, b), this._updateAggregateValueRangeForCluster(b, b.tileLevel), b;\n  }\n  _updateAggregateValueRangeForCluster(e, t) {\n    const s = this._aggregateValueRanges[t] || {\n        minValue: 1 / 0,\n        maxValue: 0\n      },\n      r = s.minValue,\n      o = s.maxValue;\n    s.minValue = Math.min(r, e.count), s.maxValue = Math.max(o, e.count), this._aggregateValueRanges[t] = s, r === s.minValue && o === s.maxValue || (this._aggregateValueRangesChanged = !0);\n  }\n  _markTileClustersForDeletion(e, t) {\n    const s = 2 * t,\n      r = Math.ceil(v / s),\n      {\n        row: o,\n        col: a\n      } = e.key,\n      i = a * v,\n      h = o * v,\n      n = Math.floor(i / s),\n      l = Math.floor(h / s);\n    for (let u = n; u < n + r; u++) for (let t = l; t < l + r; t++) this._markForDeletion(e.key.level, u, t);\n  }\n}\nexport { T as ClusterInfo, G as ClusterStore };","map":{"version":3,"names":["e","has","isNone","t","isSome","s","applySome","r","diff","o","hasDiff","a","GeohashTree","i","setGeohashBuf","h","setGeohashXY","n","create","l","earth","u","getInfo","g","getBoundsOptimizedGeometry","c","quantizeX","d","quantizeY","f","convertFromPolygon","p","OptimizedFeatureWithGeometry","m","OptimizedFeature","_","y","checkProjectionSupport","I","project","b","TILE_SIZE","v","DISPLAY_ID_TEXEL_MASK","R","featureAdapter","M","Store2D","x","FeatureSetReaderJSON","C","j","L","B","F","w","S","V","T","constructor","geohashBoundsInfo","count","attributes","cluster_count","displayId","createDisplayId","referenceId","tileLevel","update","geometry","coords","toJSON","aggregateId","objectId","D","G","type","events","objectIdField","_geohashLevel","_tileLevel","_aggregateValueRanges","_aggregateValueRangesChanged","_geohashBuf","_clusters","Map","_tiles","_serviceInfo","geometryInfo","_spatialReference","_projectionSupportCheck","WGS84","_bitsets","geohash","getBitset","createBitset","inserted","destroy","_tree","featureSpatialReference","fields","_fields","updateSchema","_schema","params","source","storage","filters","_statisticFields","_rebuildTree","console","debug","targets","name","mesh","clear","sweepFeatures","forEachSet","lookupByDisplayIdUnsafe","_remove","sweepAggregates","forEach","releaseDisplayId","unsetAttributeData","delete","onTileData","arguments","length","undefined","addOrUpdate","emit","_getTransforms","getCursor","next","_update","status","Array","clusterRadius","_getClustersForTile","fromOptimizedFeatures","attachStorage","end","getDisplayId","computed","unset","setComputedAttributes","scale","valueRanges","onTileUpdate","_ref","added","removed","level","_setGeohashLevel","key","id","_markTileClustersForDeletion","getAggregate","values","getAggregates","push","get","getFeatureDisplayIdsForAggregate","getRegionDisplayIds","getDisplayIdForReferenceId","getAggregateValueRanges","fromFeatures","globalIdField","geometryType","forEachInBounds","forEachBounds","hasM","hasZ","readGeometry","size","getXHydrated","getYHydrated","removeCursor","isVisible","_setGeohash","insertCursor","set","isWebMercator","radius","Math","floor","PI","atan","exp","clusterPixelBuffer","ceil","row","col","tileInfoView","getLODInfoAt","wrap","_lookupCluster","left","right","tile","clone","_getGeohashLevel","min","originPosition","resolution","translate","bounds","valid","_getClusterId","_markForDeletion","_getClusterBounds","getXForColumn","getYForRow","_getGeohash","geohashX","geohashY","_getGeohashBounds","geohashBounds","xLL","yLL","xTR","yTR","fromExtent","fromBounds","densificationStep","filter","max","getRegionStatistics","xTotal","yTotal","_updateAggregateValueRangeForCluster","minValue","maxValue","ClusterInfo","ClusterStore"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/2d/layers/features/support/ClusterStore.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../../../geometry.js\";import e from\"../../../../../core/Evented.js\";import has from\"../../../../../core/has.js\";import{isNone as t,isSome as s,applySome as r}from\"../../../../../core/maybe.js\";import{diff as o,hasDiff as a}from\"../../../../../core/accessorSupport/diffUtils.js\";import{GeohashTree as i}from\"../../../../../geohash/GeohashTree.js\";import{setGeohashBuf as h,setGeohashXY as n}from\"../../../../../geohash/geohashUtils.js\";import{create as l}from\"../../../../../geometry/support/aaBoundingBox.js\";import{earth as u}from\"../../../../../geometry/support/Ellipsoid.js\";import{getInfo as g}from\"../../../../../geometry/support/spatialReferenceUtils.js\";import{getBoundsOptimizedGeometry as c,quantizeX as d,quantizeY as f,convertFromPolygon as p}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{OptimizedFeatureWithGeometry as m,OptimizedFeature as _}from\"../../../../../layers/graphics/OptimizedFeature.js\";import y from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{checkProjectionSupport as I,project as b}from\"../../../../../layers/graphics/data/projectionSupport.js\";import{TILE_SIZE as v}from\"../../../engine/webgl/definitions.js\";import{DISPLAY_ID_TEXEL_MASK as R}from\"../../../engine/webgl/DisplayId.js\";import{featureAdapter as M}from\"../FeatureStore2D.js\";import{Store2D as x}from\"../Store2D.js\";import{FeatureSetReaderJSON as C}from\"./FeatureSetReaderJSON.js\";import j from\"../../../../../geometry/SpatialReference.js\";import L from\"../../../../../geometry/Polygon.js\";import B from\"../../../../../geometry/Extent.js\";const F=12,w=64,S=1,V=l();class T extends m{constructor(e,t,s,r,o){super(new y([],[t,s]),r,null,e),this.geohashBoundsInfo=o}get count(){return this.attributes.cluster_count}static create(e,t,s,r,o,a,i,h){const n=new T(t,s,r,a,i);return n.displayId=e.createDisplayId(!0),n.referenceId=h,n.tileLevel=o,n}update(e,t,s,r,o,a){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=o,this.referenceId=null,this.referenceId=a,this}toJSON(){return{attributes:{...this.attributes,aggregateId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function D(e){return 57.29577951308232*e}class G extends x{constructor(t,s,r,o){super(t,r),this.type=\"cluster\",this.events=new e,this.objectIdField=\"aggregateId\",this.featureAdapter=M,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this._serviceInfo=o,this.geometryInfo=t.geometryInfo,this._spatialReference=s,this._projectionSupportCheck=I(s,j.WGS84),this._bitsets.geohash=r.getBitset(r.createBitset()),this._bitsets.inserted=r.getBitset(r.createBitset())}destroy(){this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,s){const r=this._schema;try{await super.updateSchema(e,s),await this._projectionSupportCheck}catch(n){}this._fields=this._schema.params.fields;const h=o(r,s);s&&(!t(h)||e.source||e.storage.filters)?((a(h,\"params.fields\")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new i(this._statisticFields,this._serviceInfo),this._rebuildTree(),has(\"esri-2d-update-debug\")&&console.debug(\"Aggregate mesh needs update due to tree changing\")),has(\"esri-2d-update-debug\")&&console.debug(\"Applying Update - ClusterStore:\",h),e.targets[s.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):r&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepAggregates(e,t,s){this._clusters.forEach(((r,o)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(o))}))}onTileData(e,s,r,o,a=!0){if(!this._schema||t(s.addOrUpdate))return s;this.events.emit(\"changed\");const i=this._getTransforms(e,this._spatialReference);{const e=s.addOrUpdate.getCursor();for(;e.next();)this._update(e,o)}if(s.status.mesh||!a)return s;const h=new Array,n=this._schema.params.clusterRadius;this._getClustersForTile(h,e,n,r,i),s.addOrUpdate=C.fromOptimizedFeatures(h,this._serviceInfo),s.addOrUpdate.attachStorage(r),s.clear=!0,s.end=!0;{const t=s.addOrUpdate.getCursor();for(;t.next();){const s=t.getDisplayId();this._bitsets.computed.unset(s),this.setComputedAttributes(r,t,s,e.scale)}}return this._aggregateValueRangesChanged&&s.end&&(this.events.emit(\"valueRangesChanged\",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),s}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._tileLevel=t,this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){for(const t of this._clusters.values())if((t?.displayId&R)==(e&R))return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())t?.tileLevel===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);return t?this._tree.getRegionDisplayIds(t.geohashBoundsInfo):[]}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if(t?.referenceId===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){this._clusters.forEach((t=>{if(!t)return;const s=t.toJSON(),r=C.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)}))}forEachInBounds(e,t){}forEachBounds(e,s){const{hasM:r,hasZ:o}=this.geometryInfo;for(const a of e){const e=c(V,a.readGeometry(),o,r);t(e)||s(e)}}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),o=this._geohashBuf[2*t],a=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,o,a,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,o=t.isVisible(s);if(o===r.has(s))return;if(!o)return void this._remove(e);const a=e.getXHydrated(),i=e.getYHydrated();if(!this._setGeohash(s,a,i))return;const h=this._geohashBuf[2*s],n=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,a,i,h,n,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const o=D(t/u.radius),a=o-360*Math.floor((o+180)/360),i=D(Math.PI/2-2*Math.atan(Math.exp(-s/u.radius)));h(r,e,i,a,F)}else{const o=b({x:t,y:s},this._spatialReference,j.WGS84);if(!o)return!1;h(r,e,o.y,o.x,F)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,o,a,i,h,n=!0){const l=this._schema.params.clusterPixelBuffer,u=2*a,g=Math.ceil(2**o.key.level*v/u)+1,c=Math.ceil(l/u)+0,p=Math.ceil(v/u),{row:m,col:y}=o.key,I=y*v,b=m*v,R=Math.floor(I/u)-c,M=Math.floor(b/u)-c,x=R+p+2*c,C=M+p+2*c,j=o.tileInfoView.getLODInfoAt(o.key.level);for(let v=R;v<=x;v++)for(let a=M;a<=C;a++){let l=v;j.wrap&&(l=v<0?v+g:v%g);const u=j.wrap&&v<0,c=j.wrap&&v%g!==v,p=this._lookupCluster(i,j,o.key.level,l,a,o);if(s(p)){const o=r(h,(e=>u?e.left:c?e.right:e.tile));if(n&&t(o))continue;if(!p.count)continue;if(s(o)&&n){const t=p.geometry.clone();let r=p.attributes;t.coords[0]=d(o,t.coords[0]),t.coords[1]=f(o,t.coords[1]),1===p.count&&s(p.referenceId)&&(r={...p.attributes,referenceId:p.referenceId});const a=new _(t,r);a.displayId=p.displayId,e.push(a)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),F)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=(Math.floor(t/S)+1)*S-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:\"upperLeft\",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=g(t);if(!r)return{tile:s,left:null,right:null};const[o,a]=r.valid;return{tile:s,left:{...s,translate:[a,e.bounds[3]]},right:{...s,translate:[o-a+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,o=2*r;let a=s%2?t*o:t*o-r;const i=s*o;let h=a+o;const n=i-o,l=2**e.level*v;e.wrap&&a<0&&(a=0),e.wrap&&h>l&&(h=l);const u=a/v,g=i/v,c=h/v,d=n/v;return[e.getXForColumn(u),e.getYForRow(g),e.getXForColumn(c),e.getYForRow(d)]}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return n(r,t,e,s),r}_getGeohashBounds(e,t){const s=this._getGeohashLevel(e.key.level);if(this._spatialReference.isWebMercator){const[e,r,o,a]=t,i={x:e,y:r},h={x:o,y:a};let l=0,g=0,c=0,d=0;{const e=D(i.x/u.radius);l=e-360*Math.floor((e+180)/360),g=D(Math.PI/2-2*Math.atan(Math.exp(-i.y/u.radius)))}{const e=D(h.x/u.radius);c=e-360*Math.floor((e+180)/360),d=D(Math.PI/2-2*Math.atan(Math.exp(-h.y/u.radius)))}const f={geohashX:0,geohashY:0},p={geohashX:0,geohashY:0};n(f,g,l,s),n(p,d,c,s);return{bounds:[e,r,o,a],geohashBounds:{xLL:f.geohashX,yLL:f.geohashY,xTR:p.geohashX,yTR:p.geohashY},level:s}}const r=L.fromExtent(B.fromBounds(t,this._spatialReference)),o=b(r,this._spatialReference,j.WGS84,{densificationStep:e.resolution*w});if(!o)return null;const a=p(new y,o,!1,!1),i=a.coords.filter(((e,t)=>!(t%2))),h=a.coords.filter(((e,t)=>t%2)),l=Math.min(...i),g=Math.min(...h),c=Math.max(...i),d=Math.max(...h),f=this._getGeohash(l,g,s),m=this._getGeohash(c,d,s);return{bounds:t,geohashBounds:{xLL:f.geohashX,yLL:f.geohashY,xTR:m.geohashX,yTR:m.geohashY},level:s}}_lookupCluster(e,r,o,a,i,h){const n=this._getClusterId(o,a,i),l=this._clusters.get(n),u=this._getClusterBounds(r,a,i),g=this._getGeohashBounds(h,u);if(t(g))return null;const c=this._tree.getRegionStatistics(g),{count:d,xTotal:f,yTotal:p,referenceId:m}=c,_=d?f/d:0,y=d?p/d:0;if(0===d)return this._clusters.set(n,null),null;const I={cluster_count:d,...c.attributes},b=s(l)?l.update(_,y,o,I,g,m):T.create(e,n,_,y,o,I,g,m);if(0===d){const[e,t,s,r]=u;b.geometry.coords[0]=(e+s)/2,b.geometry.coords[1]=(t+r)/2}return this._clusters.set(n,b),this._updateAggregateValueRangeForCluster(b,b.tileLevel),b}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,o=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(o,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&o===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(v/s),{row:o,col:a}=e.key,i=a*v,h=o*v,n=Math.floor(i/s),l=Math.floor(h/s);for(let u=n;u<n+r;u++)for(let t=l;t<l+r;t++)this._markForDeletion(e.key.level,u,t)}}export{T as ClusterInfo,G as ClusterStore};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}