{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { texelFetch as r } from \"../util/WebGL2Utils.js\";\nimport { Float2PassUniform as o } from \"../../shaderModules/Float2PassUniform.js\";\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\nimport { createTexture2DPassSizeUniforms as n } from \"../../shaderModules/Texture2DPassUniform.js\";\nimport { TextureSizeUniformType as t } from \"../../shaderModules/TextureSizeUniformType.js\";\nfunction s(s, i) {\n  s.fragment.uniforms.add(n(\"u_transformGrid\", r => r.u_transformGrid, i.hasWebGL2Context ? t.None : t.InvSize)), s.fragment.uniforms.add(new o(\"u_transformSpacing\", r => r.common.u_transformSpacing)), s.fragment.uniforms.add(new o(\"u_targetImageSize\", r => r.common.u_targetImageSize)), s.fragment.code.add(e`\n    vec2 projectPixelLocation(vec2 coords) {\n      // Pixel index in row/column, corresponds to upperleft corner, e.g. [100, 20]\n      vec2 index_image = floor(coords * u_targetImageSize);\n\n      // Pixel's corresponding cell index in transform grid\n      // Each transform cell corresponds to 4 pixels: 6 coefficients from lowerleft triangle followed by 6 coefficients from upperright triangle\n      vec2 oneTransformPixel = vec2(4.0, 1.0);\n      vec2 index_transform = floor(index_image / u_transformSpacing) * oneTransformPixel;\n\n      // Correspoding position in transform grid cell, cell center coordinates\n      vec2 pos = fract((index_image + 0.5) / u_transformSpacing);\n\n      // Pixel's corresponding transform cell location, cell center coordinates\n      vec2 transform_location = index_transform + 0.5;\n\n      vec2 srcLocation;\n\n      // Use lower triangle or upper triangle\n      if (pos.s <= pos.t) {\n        vec3 ll_abc = ${r(i, \"u_transformGrid\", \"transform_location\")}.rgb;\n        vec3 ll_def = ${r(i, \"u_transformGrid\", \"vec2(transform_location.s + 1.0, transform_location.t)\")}.rgb;\n        srcLocation.s = dot(ll_abc, vec3(pos, 1.0));\n        srcLocation.t = dot(ll_def, vec3(pos, 1.0));\n      } else {\n        vec3 ur_abc = ${r(i, \"u_transformGrid\", \"vec2(transform_location.s + 2.0, transform_location.t)\")}.rgb;\n        vec3 ur_def = ${r(i, \"u_transformGrid\", \"vec2(transform_location.s + 3.0, transform_location.t)\")}.rgb;\n        srcLocation.s = dot(ur_abc, vec3(pos, 1.0));\n        srcLocation.t = dot(ur_def, vec3(pos, 1.0));\n      }\n\n      return srcLocation;\n    }\n  `);\n}\nexport { s as Projection };","map":{"version":3,"names":["texelFetch","r","Float2PassUniform","o","glsl","e","createTexture2DPassSizeUniforms","n","TextureSizeUniformType","t","s","i","fragment","uniforms","add","u_transformGrid","hasWebGL2Context","None","InvSize","common","u_transformSpacing","u_targetImageSize","code","Projection"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/raster/Projection.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{texelFetch as r}from\"../util/WebGL2Utils.js\";import{Float2PassUniform as o}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";import{createTexture2DPassSizeUniforms as n}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as t}from\"../../shaderModules/TextureSizeUniformType.js\";function s(s,i){s.fragment.uniforms.add(n(\"u_transformGrid\",(r=>r.u_transformGrid),i.hasWebGL2Context?t.None:t.InvSize)),s.fragment.uniforms.add(new o(\"u_transformSpacing\",(r=>r.common.u_transformSpacing))),s.fragment.uniforms.add(new o(\"u_targetImageSize\",(r=>r.common.u_targetImageSize))),s.fragment.code.add(e`\n    vec2 projectPixelLocation(vec2 coords) {\n      // Pixel index in row/column, corresponds to upperleft corner, e.g. [100, 20]\n      vec2 index_image = floor(coords * u_targetImageSize);\n\n      // Pixel's corresponding cell index in transform grid\n      // Each transform cell corresponds to 4 pixels: 6 coefficients from lowerleft triangle followed by 6 coefficients from upperright triangle\n      vec2 oneTransformPixel = vec2(4.0, 1.0);\n      vec2 index_transform = floor(index_image / u_transformSpacing) * oneTransformPixel;\n\n      // Correspoding position in transform grid cell, cell center coordinates\n      vec2 pos = fract((index_image + 0.5) / u_transformSpacing);\n\n      // Pixel's corresponding transform cell location, cell center coordinates\n      vec2 transform_location = index_transform + 0.5;\n\n      vec2 srcLocation;\n\n      // Use lower triangle or upper triangle\n      if (pos.s <= pos.t) {\n        vec3 ll_abc = ${r(i,\"u_transformGrid\",\"transform_location\")}.rgb;\n        vec3 ll_def = ${r(i,\"u_transformGrid\",\"vec2(transform_location.s + 1.0, transform_location.t)\")}.rgb;\n        srcLocation.s = dot(ll_abc, vec3(pos, 1.0));\n        srcLocation.t = dot(ll_def, vec3(pos, 1.0));\n      } else {\n        vec3 ur_abc = ${r(i,\"u_transformGrid\",\"vec2(transform_location.s + 2.0, transform_location.t)\")}.rgb;\n        vec3 ur_def = ${r(i,\"u_transformGrid\",\"vec2(transform_location.s + 3.0, transform_location.t)\")}.rgb;\n        srcLocation.s = dot(ur_abc, vec3(pos, 1.0));\n        srcLocation.t = dot(ur_def, vec3(pos, 1.0));\n      }\n\n      return srcLocation;\n    }\n  `)}export{s as Projection};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,UAAU,IAAIC,CAAC,QAAK,wBAAwB;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,0CAA0C;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,+BAA+B,IAAIC,CAAC,QAAK,6CAA6C;AAAC,SAAOC,sBAAsB,IAAIC,CAAC,QAAK,+CAA+C;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAACD,CAAC,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAACP,CAAC,CAAC,iBAAiB,EAAEN,CAAC,IAAEA,CAAC,CAACc,eAAe,EAAEJ,CAAC,CAACK,gBAAgB,GAACP,CAAC,CAACQ,IAAI,GAACR,CAAC,CAACS,OAAO,CAAC,CAAC,EAACR,CAAC,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAIX,CAAC,CAAC,oBAAoB,EAAEF,CAAC,IAAEA,CAAC,CAACkB,MAAM,CAACC,kBAAkB,CAAE,CAAC,EAACV,CAAC,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAIX,CAAC,CAAC,mBAAmB,EAAEF,CAAC,IAAEA,CAAC,CAACkB,MAAM,CAACE,iBAAiB,CAAE,CAAC,EAACX,CAAC,CAACE,QAAQ,CAACU,IAAI,CAACR,GAAG,CAACT,CAAE;AACxqB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBJ,CAAC,CAACU,CAAC,EAAC,iBAAiB,EAAC,oBAAoB,CAAE;AACpE,wBAAwBV,CAAC,CAACU,CAAC,EAAC,iBAAiB,EAAC,wDAAwD,CAAE;AACxG;AACA;AACA;AACA,wBAAwBV,CAAC,CAACU,CAAC,EAAC,iBAAiB,EAAC,wDAAwD,CAAE;AACxG,wBAAwBV,CAAC,CAACU,CAAC,EAAC,iBAAiB,EAAC,wDAAwD,CAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC;AAAA;AAAC,SAAOD,CAAC,IAAIa,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}