{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport { WhereClauseCache as i } from \"../../../core/sql/WhereClauseCache.js\";\nconst n = new i(50, 500),\n  s = \"feature-store:unsupported-query\",\n  t = \" as \",\n  r = new Set([\"esriFieldTypeOID\", \"esriFieldTypeSmallInteger\", \"esriFieldTypeInteger\", \"esriFieldTypeSingle\", \"esriFieldTypeDouble\", \"esriFieldTypeLong\", \"esriFieldTypeDate\"]);\nfunction o(i, t) {\n  if (!t) return !0;\n  const r = n.get(t, i);\n  if (!r) throw new e(s, \"invalid SQL expression\", {\n    where: t\n  });\n  if (!r.isStandardized) throw new e(s, \"where clause is not standard\", {\n    where: t\n  });\n  return c(i, r.fieldNames, \"where clause contains missing fields\"), !0;\n}\nfunction a(i, t, r) {\n  if (!t) return !0;\n  const o = n.get(t, i);\n  if (!o) throw new e(s, \"invalid SQL expression\", {\n    having: t\n  });\n  if (!o.isAggregate) throw new e(s, \"having does not contain a valid aggregate function\", {\n    having: t\n  });\n  const a = o.fieldNames;\n  c(i, a, \"having contains missing fields\");\n  if (!o.getExpressions().every(e => {\n    const {\n        aggregateType: n,\n        field: s\n      } = e,\n      t = i.get(s)?.name;\n    return r.some(e => {\n      const {\n          onStatisticField: s,\n          statisticType: r\n        } = e,\n        o = i.get(s)?.name;\n      return o === t && r.toLowerCase().trim() === n;\n    });\n  })) throw new e(s, \"expressions in having should also exist in outStatistics\", {\n    having: t\n  });\n  return !0;\n}\nfunction l(e, i) {\n  return e ? n.get(e, i) : null;\n}\nfunction c(i, n, t) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n  const o = [];\n  for (const u of n) if (\"*\" !== u && !i.has(u)) if (r) {\n    const n = d(u);\n    try {\n      const t = l(n, i);\n      if (!t) throw new e(s, \"invalid SQL expression\", {\n        where: n\n      });\n      if (!t.isStandardized) throw new e(s, \"expression is not standard\", {\n        clause: t\n      });\n      c(i, t.fieldNames, \"expression contains missing fields\");\n    } catch (a) {\n      const e = a && a.details;\n      if (e && (e.clause || e.where)) throw a;\n      e && e.missingFields ? o.push(...e.missingFields) : o.push(u);\n    }\n  } else o.push(u);\n  if (o.length) throw new e(s, t, {\n    missingFields: o\n  });\n}\nfunction d(e) {\n  return e.split(t)[0];\n}\nfunction u(e) {\n  return e.split(t)[1];\n}\nfunction f(e, i) {\n  const n = i.get(e);\n  return !!n && !r.has(n.type);\n}\nexport { u as getAliasFromFieldName, d as getExpressionFromFieldName, l as getWhereClause, f as hasInvalidFieldType, c as validateFields, a as validateHaving, o as validateWhere };","map":{"version":3,"names":["e","WhereClauseCache","i","n","s","t","r","Set","o","get","where","isStandardized","c","fieldNames","a","having","isAggregate","getExpressions","every","aggregateType","field","name","some","onStatisticField","statisticType","toLowerCase","trim","l","arguments","length","undefined","u","has","d","clause","details","missingFields","push","split","f","type","getAliasFromFieldName","getExpressionFromFieldName","getWhereClause","hasInvalidFieldType","validateFields","validateHaving","validateWhere"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/graphics/data/attributeSupport.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../../../core/Error.js\";import{WhereClauseCache as i}from\"../../../core/sql/WhereClauseCache.js\";const n=new i(50,500),s=\"feature-store:unsupported-query\",t=\" as \",r=new Set([\"esriFieldTypeOID\",\"esriFieldTypeSmallInteger\",\"esriFieldTypeInteger\",\"esriFieldTypeSingle\",\"esriFieldTypeDouble\",\"esriFieldTypeLong\",\"esriFieldTypeDate\"]);function o(i,t){if(!t)return!0;const r=n.get(t,i);if(!r)throw new e(s,\"invalid SQL expression\",{where:t});if(!r.isStandardized)throw new e(s,\"where clause is not standard\",{where:t});return c(i,r.fieldNames,\"where clause contains missing fields\"),!0}function a(i,t,r){if(!t)return!0;const o=n.get(t,i);if(!o)throw new e(s,\"invalid SQL expression\",{having:t});if(!o.isAggregate)throw new e(s,\"having does not contain a valid aggregate function\",{having:t});const a=o.fieldNames;c(i,a,\"having contains missing fields\");if(!o.getExpressions().every((e=>{const{aggregateType:n,field:s}=e,t=i.get(s)?.name;return r.some((e=>{const{onStatisticField:s,statisticType:r}=e,o=i.get(s)?.name;return o===t&&r.toLowerCase().trim()===n}))})))throw new e(s,\"expressions in having should also exist in outStatistics\",{having:t});return!0}function l(e,i){return e?n.get(e,i):null}function c(i,n,t,r=!0){const o=[];for(const u of n)if(\"*\"!==u&&!i.has(u))if(r){const n=d(u);try{const t=l(n,i);if(!t)throw new e(s,\"invalid SQL expression\",{where:n});if(!t.isStandardized)throw new e(s,\"expression is not standard\",{clause:t});c(i,t.fieldNames,\"expression contains missing fields\")}catch(a){const e=a&&a.details;if(e&&(e.clause||e.where))throw a;e&&e.missingFields?o.push(...e.missingFields):o.push(u)}}else o.push(u);if(o.length)throw new e(s,t,{missingFields:o})}function d(e){return e.split(t)[0]}function u(e){return e.split(t)[1]}function f(e,i){const n=i.get(e);return!!n&&!r.has(n.type)}export{u as getAliasFromFieldName,d as getExpressionFromFieldName,l as getWhereClause,f as hasInvalidFieldType,c as validateFields,a as validateHaving,o as validateWhere};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}