{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\tabulator\\\\query-table-tabulator.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTabulator from './react-tabulator';\nimport \"tabulator-tables/dist/css/tabulator_modern.min.css\"; // use Theme(s)\n//import { ReactTabulator } from 'react-tabulator'\n//import MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\"\n//import MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class QueryTableTabulator extends React.Component {\n  constructor() {\n    super(...arguments);\n    /*\n    componentDidUpdate(prevProps,prevState) {\n      let tableTags = this.props.userTags?.map(({tag}) => {return tag})\n    }*/\n    this.tableColumns = [\n    //ColumnDefinition[] = [\n    {\n      formatter: \"rowSelection\",\n      titleFormatter: \"rowSelection\",\n      headerSort: false\n    }, {\n      title: \"Title\",\n      field: \"title\"\n    }, {\n      title: \"Created\",\n      field: \"created\"\n    }, {\n      title: \"Tags\",\n      field: \"tags\",\n      editor: \"list\",\n      editorParams: {\n        values: tableTags\n      }\n      /*editor: MultiSelectEditor,\n        editorParams: { values: this.props.userTags?.map(({tag}) => {return {id:tag,name:tag}})},\n        formatter: MultiValueFormatter, //React warning\n        formatterParams: { style: \"PILL\" }*/\n    }];\n    this.tableOptions = {\n      layout: \"fitDataStretch\",\n      movableRows: true,\n      movableColumns: true,\n      pagination: true,\n      paginationSize: 5,\n      paginationInitialPage: 1,\n      paginationSizeSelector: [5, 10, 20, 50, 100]\n    };\n  }\n  render() {\n    console.log(\"query-table-tabulator\");\n    //console.log(this.props.userTags?.map(({tag}) => {return {id:tag,name:tag}}))\n    return /*#__PURE__*/_jsxDEV(ReactTabulator, {\n      data: this.props.userItems,\n      columns: this.tableColumns,\n      options: this.tableOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}\nQueryTableTabulator.defaultProps = {\n  userItems: [{\n    id: ''\n  }]\n};\nconst mapStateToProps = _ref => {\n  let {\n    query: {\n      userItems,\n      userTags\n    }\n  } = _ref;\n  return {\n    userItems,\n    userTags\n  };\n};\nexport default connect(mapStateToProps)(QueryTableTabulator);","map":{"version":3,"names":["React","connect","ReactTabulator","jsxDEV","_jsxDEV","QueryTableTabulator","Component","constructor","arguments","tableColumns","formatter","titleFormatter","headerSort","title","field","editor","editorParams","values","tableTags","tableOptions","layout","movableRows","movableColumns","pagination","paginationSize","paginationInitialPage","paginationSizeSelector","render","console","log","data","props","userItems","columns","options","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","id","mapStateToProps","_ref","query","userTags"],"sources":["C:/code-challenge-react/frontend/src/components/main/tabulator/query-table-tabulator.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport ReactTabulator from './react-tabulator'\nimport \"tabulator-tables/dist/css/tabulator_modern.min.css\" // use Theme(s)\n//import { ReactTabulator } from 'react-tabulator'\n//import MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\"\n//import MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\"\n\ninterface Item {\n  id: string,\n  title?: string,\n  created?: Date,\n  tags?: string[],\n}\n\ninterface Tags {\n  tag: string,\n  count: number,\n}\n\ninterface ItemProps {\n  userItems: Item[],\n  userTags?: Tags[],\n}\n\nexport class QueryTableTabulator extends React.Component <ItemProps, any> {\n  public static defaultProps = { userItems: [{id:'',}], }\n\n  /*\n  componentDidUpdate(prevProps,prevState) {\n    let tableTags = this.props.userTags?.map(({tag}) => {return tag})\n  }*/\n\n  tableColumns: any[] = [ //ColumnDefinition[] = [\n    {formatter:\"rowSelection\", titleFormatter:\"rowSelection\", headerSort:false},\n    { title: \"Title\", field: \"title\", },\n    { title: \"Created\", field: \"created\", },\n    { title: \"Tags\", field: \"tags\", \n      editor: \"list\",\n      editorParams: { values: tableTags },\n      /*editor: MultiSelectEditor,\n        editorParams: { values: this.props.userTags?.map(({tag}) => {return {id:tag,name:tag}})},\n        formatter: MultiValueFormatter, //React warning\n        formatterParams: { style: \"PILL\" }*/\n    },\n  ]\n\n  tableOptions = {\n    layout: \"fitDataStretch\",\n    movableRows: true,\n    movableColumns: true,\n    pagination: true,\n      paginationSize: 5,\n      paginationInitialPage: 1,\n      paginationSizeSelector: [5,10,20,50,100],\n  }\n\n  render() { console.log(\"query-table-tabulator\")\n  //console.log(this.props.userTags?.map(({tag}) => {return {id:tag,name:tag}}))\n    return (\n      <ReactTabulator\n        data={this.props.userItems}\n        columns={this.tableColumns}\n        options={this.tableOptions}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems, userTags }}:any) => ({\n  userItems,\n  userTags\n})\n\nexport default connect(mapStateToProps, )(QueryTableTabulator)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,OAAO,oDAAoD,EAAC;AAC5D;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAmBA,OAAO,MAAMC,mBAAmB,SAASL,KAAK,CAACM,SAAS,CAAkB;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAGxE;AACF;AACA;AACA;IAHE,KAKAC,YAAY,GAAU;IAAE;IACtB;MAACC,SAAS,EAAC,cAAc;MAAEC,cAAc,EAAC,cAAc;MAAEC,UAAU,EAAC;IAAK,CAAC,EAC3E;MAAEC,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAS,CAAC,EACnC;MAAED,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAW,CAAC,EACvC;MAAED,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAC5BC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE;QAAEC,MAAM,EAAEC;MAAU;MAClC;AACN;AACA;AACA;IACI,CAAC,CACF;IAAA,KAEDC,YAAY,GAAG;MACbC,MAAM,EAAE,gBAAgB;MACxBC,WAAW,EAAE,IAAI;MACjBC,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAE,IAAI;MACdC,cAAc,EAAE,CAAC;MACjBC,qBAAqB,EAAE,CAAC;MACxBC,sBAAsB,EAAE,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG;IAC3C,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IAAEC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IAC/C;IACE,oBACEzB,OAAA,CAACF,cAAc;MACb4B,IAAI,EAAE,IAAI,CAACC,KAAK,CAACC,SAAU;MAC3BC,OAAO,EAAE,IAAI,CAACxB,YAAa;MAC3ByB,OAAO,EAAE,IAAI,CAACf;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B;EAEN;AACF;AA1CajC,mBAAmB,CAChBkC,YAAY,GAAG;EAAEP,SAAS,EAAE,CAAC;IAACQ,EAAE,EAAC;EAAG,CAAC;AAAG,CAAC;AA2CzD,MAAMC,eAAe,GAAGC,IAAA;EAAA,IAAC;IAAEC,KAAK,EAAE;MAAEX,SAAS;MAAEY;IAAS;EAAK,CAAC,GAAAF,IAAA;EAAA,OAAM;IAClEV,SAAS;IACTY;EACF,CAAC;AAAA,CAAC;AAEF,eAAe3C,OAAO,CAACwC,eAAe,CAAG,CAACpC,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}