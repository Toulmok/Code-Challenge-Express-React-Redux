{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { GeometricEffectOffsetMethod as t } from \"./enums.js\";\nconst e = .03;\nclass s {\n  constructor() {\n    this._path = [];\n  }\n  path() {\n    return this._path;\n  }\n  addPath(t, e) {\n    e || t.reverse(), Array.prototype.push.apply(this._path, t), e || t.reverse();\n  }\n  static mergePath(t, e) {\n    e && Array.prototype.push.apply(t, e);\n  }\n  startPath(t) {\n    this._path.push(t);\n  }\n  lineTo(t) {\n    this._path.push(t);\n  }\n  close() {\n    const t = this._path;\n    t.length > 1 && (t[0][0] === t[t.length - 1][0] && t[0][1] === t[t.length - 1][1] || t.push([t[0][0], t[0][1]]));\n  }\n}\nclass n {\n  constructor() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n  }\n  normalize(t) {\n    const e = Math.sqrt(t[0] * t[0] + t[1] * t[1]);\n    0 !== e && (t[0] /= e, t[1] /= e);\n  }\n  calculateLength(t, e) {\n    const s = e[0] - t[0],\n      n = e[1] - t[1];\n    return Math.sqrt(s * s + n * n);\n  }\n  calculateSegLength(t, e) {\n    return this.calculateLength(t[e], t[e + 1]);\n  }\n  calculatePathLength(t) {\n    let e = 0;\n    const s = t ? t.length : 0;\n    for (let n = 0; n < s - 1; ++n) e += this.calculateSegLength(t, n);\n    return e;\n  }\n  calculatePathArea(t) {\n    let e = 0;\n    const s = t ? t.length : 0;\n    for (let n = 0; n < s - 1; ++n) e += (t[n + 1][0] - t[n][0]) * (t[n + 1][1] + t[n][1]);\n    return e / 2;\n  }\n  getCoord2D(t, e, s) {\n    return [t[0] + (e[0] - t[0]) * s, t[1] + (e[1] - t[1]) * s];\n  }\n  getSegCoord2D(t, e, s) {\n    return this.getCoord2D(t[e], t[e + 1], s);\n  }\n  getAngle(t, e, s) {\n    const n = e[0] - t[0],\n      r = e[1] - t[1];\n    return Math.atan2(r, n);\n  }\n  getSegAngle(t, e, s) {\n    return this.getAngle(t[e], t[e + 1], s);\n  }\n  getAngleCS(t, e, s) {\n    const n = e[0] - t[0],\n      r = e[1] - t[1],\n      h = Math.sqrt(n * n + r * r);\n    return h > 0 ? [n / h, r / h] : [1, 0];\n  }\n  getSegAngleCS(t, e, s) {\n    return this.getAngleCS(t[e], t[e + 1], s);\n  }\n  cut(t, e, s, n) {\n    return [s <= 0 ? t[e] : this.getSegCoord2D(t, e, s), n >= 1 ? t[e + 1] : this.getSegCoord2D(t, e, n)];\n  }\n  addSegment(t, e, s) {\n    s && t.push(e[0]), t.push(e[1]);\n  }\n  getSubCurve(t, e, s) {\n    const n = [];\n    return this.appendSubCurve(n, t, e, s) ? n : null;\n  }\n  appendSubCurve(t, e, s, n) {\n    const r = e ? e.length - 1 : 0;\n    let h = 0,\n      l = !0,\n      o = 0;\n    for (; o < r;) {\n      const r = this.calculateSegLength(e, o);\n      if (0 !== r) {\n        if (l) {\n          if (h + r > s) {\n            const a = (s - h) / r;\n            let u = 1,\n              c = !1;\n            h + r >= n && (u = (n - h) / r, c = !0);\n            const i = this.cut(e, o, a, u);\n            if (i && this.addSegment(t, i, l), c) break;\n            l = !1;\n          }\n        } else {\n          if (h + r > n) {\n            const s = this.cut(e, o, 0, (n - h) / r);\n            s && this.addSegment(t, s, l);\n            break;\n          }\n          this.addSegment(t, [e[o], e[o + 1]], l);\n        }\n        h += r, ++o;\n      } else ++o;\n    }\n    return !0;\n  }\n  getCIMPointAlong(t, e) {\n    const s = t ? t.length - 1 : 0;\n    let n = 0,\n      r = -1;\n    for (; r < s;) {\n      ++r;\n      const s = this.calculateSegLength(t, r);\n      if (0 !== s) {\n        if (n + s > e) {\n          const h = (e - n) / s;\n          return this.getCoord2D(t[r], t[r + 1], h);\n        }\n        n += s;\n      }\n    }\n    return null;\n  }\n  isEmpty(t, e) {\n    if (!t || t.length <= 1) return !0;\n    const s = t ? t.length - 1 : 0;\n    let n = -1;\n    for (; n < s;) {\n      if (++n, t[n + 1][0] !== t[n][0] || t[n + 1][1] !== t[n][1]) return !1;\n      if (e && t[n + 1][2] !== t[n][2]) return !1;\n    }\n    return !0;\n  }\n  offset(e, s, n, r, h) {\n    if (!e || e.length < 2) return null;\n    let l = 0,\n      o = e[l++],\n      a = l;\n    for (; l < e.length;) {\n      const t = e[l];\n      t[0] === o[0] && t[1] === o[1] || (l !== a && (e[a] = e[l]), o = e[a++]), l++;\n    }\n    const u = e[0][0] === e[a - 1][0] && e[0][1] === e[a - 1][1];\n    if (u && --a, a < (u ? 3 : 2)) return null;\n    const c = [];\n    o = u ? e[a - 1] : null;\n    let i = e[0];\n    for (let g = 0; g < a; g++) {\n      const h = g === a - 1 ? u ? e[0] : null : e[g + 1];\n      if (o) {\n        if (h) {\n          const e = [h[0] - i[0], h[1] - i[1]];\n          this.normalize(e);\n          const l = [i[0] - o[0], i[1] - o[1]];\n          this.normalize(l);\n          const a = l[0] * e[1] - l[1] * e[0],\n            u = l[0] * e[0] + l[1] * e[1];\n          if (0 === a && 1 === u) {\n            i = h;\n            continue;\n          }\n          if (a >= 0 == s <= 0) {\n            if (u < 1) {\n              const t = [e[0] - l[0], e[1] - l[1]];\n              this.normalize(t);\n              const n = Math.sqrt((1 + u) / 2);\n              if (n > 1 / r) {\n                const e = -Math.abs(s) / n;\n                c.push([i[0] - t[0] * e, i[1] - t[1] * e]);\n              }\n            }\n          } else switch (n) {\n            case t.Mitered:\n              {\n                const t = Math.sqrt((1 + u) / 2);\n                if (t > 0 && 1 / t < r) {\n                  const n = [e[0] - l[0], e[1] - l[1]];\n                  this.normalize(n);\n                  const r = Math.abs(s) / t;\n                  c.push([i[0] - n[0] * r, i[1] - n[1] * r]);\n                  break;\n                }\n              }\n            case t.Bevelled:\n              c.push([i[0] + l[1] * s, i[1] - l[0] * s]), c.push([i[0] + e[1] * s, i[1] - e[0] * s]);\n              break;\n            case t.Rounded:\n              if (u < 1) {\n                c.push([i[0] + l[1] * s, i[1] - l[0] * s]);\n                const t = Math.floor(2.5 * (1 - u));\n                if (t > 0) {\n                  const n = 1 / t;\n                  let r = n;\n                  for (let h = 1; h < t; h++, r += n) {\n                    const t = [l[1] * (1 - r) + e[1] * r, -l[0] * (1 - r) - e[0] * r];\n                    this.normalize(t), c.push([i[0] + t[0] * s, i[1] + t[1] * s]);\n                  }\n                }\n                c.push([i[0] + e[1] * s, i[1] - e[0] * s]);\n              }\n              break;\n            case t.Square:\n            default:\n              if (a < 0) c.push([i[0] + (l[1] + l[0]) * s, i[1] + (l[1] - l[0]) * s]), c.push([i[0] + (e[1] - e[0]) * s, i[1] - (e[0] + e[1]) * s]);else {\n                const t = Math.sqrt((1 + Math.abs(u)) / 2),\n                  n = [e[0] - l[0], e[1] - l[1]];\n                this.normalize(n);\n                const r = s / t;\n                c.push([i[0] - n[0] * r, i[1] - n[1] * r]);\n              }\n          }\n        } else {\n          const t = [i[0] - o[0], i[1] - o[1]];\n          this.normalize(t), c.push([i[0] + t[1] * s, i[1] - t[0] * s]);\n        }\n      } else {\n        const t = [h[0] - i[0], h[1] - i[1]];\n        this.normalize(t), c.push([i[0] + t[1] * s, i[1] - t[0] * s]);\n      }\n      o = i, i = h;\n    }\n    return c.length < (u ? 3 : 2) ? null : (u && c.push([c[0][0], c[0][1]]), c);\n  }\n}\nexport { n as CurveHelper, e as PIXEL_TOLERANCE, s as PathHelper };","map":{"version":3,"names":["GeometricEffectOffsetMethod","t","e","s","constructor","_path","path","addPath","reverse","Array","prototype","push","apply","mergePath","startPath","lineTo","close","length","n","arguments","undefined","normalize","Math","sqrt","calculateLength","calculateSegLength","calculatePathLength","calculatePathArea","getCoord2D","getSegCoord2D","getAngle","r","atan2","getSegAngle","getAngleCS","h","getSegAngleCS","cut","addSegment","getSubCurve","appendSubCurve","l","o","a","u","c","i","getCIMPointAlong","isEmpty","offset","g","abs","Mitered","Bevelled","Rounded","floor","Square","CurveHelper","PIXEL_TOLERANCE","PathHelper"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/symbols/cim/CurveHelper.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{GeometricEffectOffsetMethod as t}from\"./enums.js\";const e=.03;class s{constructor(){this._path=[]}path(){return this._path}addPath(t,e){e||t.reverse(),Array.prototype.push.apply(this._path,t),e||t.reverse()}static mergePath(t,e){e&&Array.prototype.push.apply(t,e)}startPath(t){this._path.push(t)}lineTo(t){this._path.push(t)}close(){const t=this._path;t.length>1&&(t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]||t.push([t[0][0],t[0][1]]))}}class n{constructor(t=0,e=!1){}normalize(t){const e=Math.sqrt(t[0]*t[0]+t[1]*t[1]);0!==e&&(t[0]/=e,t[1]/=e)}calculateLength(t,e){const s=e[0]-t[0],n=e[1]-t[1];return Math.sqrt(s*s+n*n)}calculateSegLength(t,e){return this.calculateLength(t[e],t[e+1])}calculatePathLength(t){let e=0;const s=t?t.length:0;for(let n=0;n<s-1;++n)e+=this.calculateSegLength(t,n);return e}calculatePathArea(t){let e=0;const s=t?t.length:0;for(let n=0;n<s-1;++n)e+=(t[n+1][0]-t[n][0])*(t[n+1][1]+t[n][1]);return e/2}getCoord2D(t,e,s){return[t[0]+(e[0]-t[0])*s,t[1]+(e[1]-t[1])*s]}getSegCoord2D(t,e,s){return this.getCoord2D(t[e],t[e+1],s)}getAngle(t,e,s){const n=e[0]-t[0],r=e[1]-t[1];return Math.atan2(r,n)}getSegAngle(t,e,s){return this.getAngle(t[e],t[e+1],s)}getAngleCS(t,e,s){const n=e[0]-t[0],r=e[1]-t[1],h=Math.sqrt(n*n+r*r);return h>0?[n/h,r/h]:[1,0]}getSegAngleCS(t,e,s){return this.getAngleCS(t[e],t[e+1],s)}cut(t,e,s,n){return[s<=0?t[e]:this.getSegCoord2D(t,e,s),n>=1?t[e+1]:this.getSegCoord2D(t,e,n)]}addSegment(t,e,s){s&&t.push(e[0]),t.push(e[1])}getSubCurve(t,e,s){const n=[];return this.appendSubCurve(n,t,e,s)?n:null}appendSubCurve(t,e,s,n){const r=e?e.length-1:0;let h=0,l=!0,o=0;for(;o<r;){const r=this.calculateSegLength(e,o);if(0!==r){if(l){if(h+r>s){const a=(s-h)/r;let u=1,c=!1;h+r>=n&&(u=(n-h)/r,c=!0);const i=this.cut(e,o,a,u);if(i&&this.addSegment(t,i,l),c)break;l=!1}}else{if(h+r>n){const s=this.cut(e,o,0,(n-h)/r);s&&this.addSegment(t,s,l);break}this.addSegment(t,[e[o],e[o+1]],l)}h+=r,++o}else++o}return!0}getCIMPointAlong(t,e){const s=t?t.length-1:0;let n=0,r=-1;for(;r<s;){++r;const s=this.calculateSegLength(t,r);if(0!==s){if(n+s>e){const h=(e-n)/s;return this.getCoord2D(t[r],t[r+1],h)}n+=s}}return null}isEmpty(t,e){if(!t||t.length<=1)return!0;const s=t?t.length-1:0;let n=-1;for(;n<s;){if(++n,t[n+1][0]!==t[n][0]||t[n+1][1]!==t[n][1])return!1;if(e&&t[n+1][2]!==t[n][2])return!1}return!0}offset(e,s,n,r,h){if(!e||e.length<2)return null;let l=0,o=e[l++],a=l;for(;l<e.length;){const t=e[l];t[0]===o[0]&&t[1]===o[1]||(l!==a&&(e[a]=e[l]),o=e[a++]),l++}const u=e[0][0]===e[a-1][0]&&e[0][1]===e[a-1][1];if(u&&--a,a<(u?3:2))return null;const c=[];o=u?e[a-1]:null;let i=e[0];for(let g=0;g<a;g++){const h=g===a-1?u?e[0]:null:e[g+1];if(o)if(h){const e=[h[0]-i[0],h[1]-i[1]];this.normalize(e);const l=[i[0]-o[0],i[1]-o[1]];this.normalize(l);const a=l[0]*e[1]-l[1]*e[0],u=l[0]*e[0]+l[1]*e[1];if(0===a&&1===u){i=h;continue}if(a>=0==s<=0){if(u<1){const t=[e[0]-l[0],e[1]-l[1]];this.normalize(t);const n=Math.sqrt((1+u)/2);if(n>1/r){const e=-Math.abs(s)/n;c.push([i[0]-t[0]*e,i[1]-t[1]*e])}}}else switch(n){case t.Mitered:{const t=Math.sqrt((1+u)/2);if(t>0&&1/t<r){const n=[e[0]-l[0],e[1]-l[1]];this.normalize(n);const r=Math.abs(s)/t;c.push([i[0]-n[0]*r,i[1]-n[1]*r]);break}}case t.Bevelled:c.push([i[0]+l[1]*s,i[1]-l[0]*s]),c.push([i[0]+e[1]*s,i[1]-e[0]*s]);break;case t.Rounded:if(u<1){c.push([i[0]+l[1]*s,i[1]-l[0]*s]);const t=Math.floor(2.5*(1-u));if(t>0){const n=1/t;let r=n;for(let h=1;h<t;h++,r+=n){const t=[l[1]*(1-r)+e[1]*r,-l[0]*(1-r)-e[0]*r];this.normalize(t),c.push([i[0]+t[0]*s,i[1]+t[1]*s])}}c.push([i[0]+e[1]*s,i[1]-e[0]*s])}break;case t.Square:default:if(a<0)c.push([i[0]+(l[1]+l[0])*s,i[1]+(l[1]-l[0])*s]),c.push([i[0]+(e[1]-e[0])*s,i[1]-(e[0]+e[1])*s]);else{const t=Math.sqrt((1+Math.abs(u))/2),n=[e[0]-l[0],e[1]-l[1]];this.normalize(n);const r=s/t;c.push([i[0]-n[0]*r,i[1]-n[1]*r])}}}else{const t=[i[0]-o[0],i[1]-o[1]];this.normalize(t),c.push([i[0]+t[1]*s,i[1]-t[0]*s])}else{const t=[h[0]-i[0],h[1]-i[1]];this.normalize(t),c.push([i[0]+t[1]*s,i[1]-t[0]*s])}o=i,i=h}return c.length<(u?3:2)?null:(u&&c.push([c[0][0],c[0][1]]),c)}}export{n as CurveHelper,e as PIXEL_TOLERANCE,s as PathHelper};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}