{"ast":null,"code":"import { cleanUrl } from \"./utils/clean-url.js\";\n/**\n * Used to test if a URL is an ArcGIS Online URL\n */\nvar arcgisOnlineUrlRegex = /^https?:\\/\\/(\\S+)\\.arcgis\\.com.+/;\n/**\n * Used to test if a URL is production ArcGIS Online Portal\n */\nvar arcgisOnlinePortalRegex = /^https?:\\/\\/(dev|devext|qa|qaext|www)\\.arcgis\\.com\\/sharing\\/rest+/;\n/**\n * Used to test if a URL is an ArcGIS Online Organization Portal\n */\nvar arcgisOnlineOrgPortalRegex = /^https?:\\/\\/(?:[a-z0-9-]+\\.maps(dev|devext|qa|qaext)?)?.arcgis\\.com\\/sharing\\/rest/;\nexport function isOnline(url) {\n  return arcgisOnlineUrlRegex.test(url);\n}\nexport function normalizeOnlinePortalUrl(portalUrl) {\n  if (!arcgisOnlineUrlRegex.test(portalUrl)) {\n    return portalUrl;\n  }\n  switch (getOnlineEnvironment(portalUrl)) {\n    case \"dev\":\n      return \"https://devext.arcgis.com/sharing/rest\";\n    case \"qa\":\n      return \"https://qaext.arcgis.com/sharing/rest\";\n    default:\n      return \"https://www.arcgis.com/sharing/rest\";\n  }\n}\nexport function getOnlineEnvironment(url) {\n  if (!arcgisOnlineUrlRegex.test(url)) {\n    return null;\n  }\n  var match = url.match(arcgisOnlineUrlRegex);\n  var subdomain = match[1].split(\".\").pop();\n  if (subdomain.includes(\"dev\")) {\n    return \"dev\";\n  }\n  if (subdomain.includes(\"qa\")) {\n    return \"qa\";\n  }\n  return \"production\";\n}\nexport function isFederated(owningSystemUrl, portalUrl) {\n  var normalizedPortalUrl = cleanUrl(normalizeOnlinePortalUrl(portalUrl)).replace(/https?:\\/\\//, \"\");\n  var normalizedOwningSystemUrl = cleanUrl(owningSystemUrl).replace(/https?:\\/\\//, \"\");\n  return new RegExp(normalizedOwningSystemUrl, \"i\").test(normalizedPortalUrl);\n}\nexport function canUseOnlineToken(portalUrl, requestUrl) {\n  var portalIsOnline = isOnline(portalUrl);\n  var requestIsOnline = isOnline(requestUrl);\n  var portalEnv = getOnlineEnvironment(portalUrl);\n  var requestEnv = getOnlineEnvironment(requestUrl);\n  if (portalIsOnline && requestIsOnline && portalEnv === requestEnv) {\n    return true;\n  }\n  return false;\n}","map":{"version":3,"names":["cleanUrl","arcgisOnlineUrlRegex","arcgisOnlinePortalRegex","arcgisOnlineOrgPortalRegex","isOnline","url","test","normalizeOnlinePortalUrl","portalUrl","getOnlineEnvironment","match","subdomain","split","pop","includes","isFederated","owningSystemUrl","normalizedPortalUrl","replace","normalizedOwningSystemUrl","RegExp","canUseOnlineToken","requestUrl","portalIsOnline","requestIsOnline","portalEnv","requestEnv"],"sources":["C:\\code-challenge-react\\node_modules\\@esri\\arcgis-rest-request\\src\\federation-utils.ts"],"sourcesContent":["import { cleanUrl } from \"./utils/clean-url.js\";\n\n/**\n * Used to test if a URL is an ArcGIS Online URL\n */\nconst arcgisOnlineUrlRegex = /^https?:\\/\\/(\\S+)\\.arcgis\\.com.+/;\n\n/**\n * Used to test if a URL is production ArcGIS Online Portal\n */\nconst arcgisOnlinePortalRegex =\n  /^https?:\\/\\/(dev|devext|qa|qaext|www)\\.arcgis\\.com\\/sharing\\/rest+/;\n\n/**\n * Used to test if a URL is an ArcGIS Online Organization Portal\n */\nconst arcgisOnlineOrgPortalRegex =\n  /^https?:\\/\\/(?:[a-z0-9-]+\\.maps(dev|devext|qa|qaext)?)?.arcgis\\.com\\/sharing\\/rest/;\n\nexport function isOnline(url: string): boolean {\n  return arcgisOnlineUrlRegex.test(url);\n}\n\nexport function normalizeOnlinePortalUrl(portalUrl: string): string {\n  if (!arcgisOnlineUrlRegex.test(portalUrl)) {\n    return portalUrl;\n  }\n\n  switch (getOnlineEnvironment(portalUrl)) {\n    case \"dev\":\n      return \"https://devext.arcgis.com/sharing/rest\";\n    case \"qa\":\n      return \"https://qaext.arcgis.com/sharing/rest\";\n    default:\n      return \"https://www.arcgis.com/sharing/rest\";\n  }\n}\n\nexport function getOnlineEnvironment(url: string): string {\n  if (!arcgisOnlineUrlRegex.test(url)) {\n    return null;\n  }\n\n  const match = url.match(arcgisOnlineUrlRegex);\n  const subdomain = match[1].split(\".\").pop();\n\n  if (subdomain.includes(\"dev\")) {\n    return \"dev\";\n  }\n\n  if (subdomain.includes(\"qa\")) {\n    return \"qa\";\n  }\n\n  return \"production\";\n}\n\nexport function isFederated(\n  owningSystemUrl: string,\n  portalUrl: string\n): boolean {\n  const normalizedPortalUrl = cleanUrl(\n    normalizeOnlinePortalUrl(portalUrl)\n  ).replace(/https?:\\/\\//, \"\");\n\n  const normalizedOwningSystemUrl = cleanUrl(owningSystemUrl).replace(\n    /https?:\\/\\//,\n    \"\"\n  );\n\n  return new RegExp(normalizedOwningSystemUrl, \"i\").test(normalizedPortalUrl);\n}\n\nexport function canUseOnlineToken(\n  portalUrl: string,\n  requestUrl: string\n): boolean {\n  const portalIsOnline = isOnline(portalUrl);\n  const requestIsOnline = isOnline(requestUrl);\n  const portalEnv = getOnlineEnvironment(portalUrl);\n  const requestEnv = getOnlineEnvironment(requestUrl);\n\n  if (portalIsOnline && requestIsOnline && portalEnv === requestEnv) {\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,sBAAsB;AAE/C;;;AAGA,IAAMC,oBAAoB,GAAG,kCAAkC;AAE/D;;;AAGA,IAAMC,uBAAuB,GAC3B,oEAAoE;AAEtE;;;AAGA,IAAMC,0BAA0B,GAC9B,oFAAoF;AAEtF,OAAM,SAAUC,QAAQA,CAACC,GAAW;EAClC,OAAOJ,oBAAoB,CAACK,IAAI,CAACD,GAAG,CAAC;AACvC;AAEA,OAAM,SAAUE,wBAAwBA,CAACC,SAAiB;EACxD,IAAI,CAACP,oBAAoB,CAACK,IAAI,CAACE,SAAS,CAAC,EAAE;IACzC,OAAOA,SAAS;;EAGlB,QAAQC,oBAAoB,CAACD,SAAS,CAAC;IACrC,KAAK,KAAK;MACR,OAAO,wCAAwC;IACjD,KAAK,IAAI;MACP,OAAO,uCAAuC;IAChD;MACE,OAAO,qCAAqC;EAAC;AAEnD;AAEA,OAAM,SAAUC,oBAAoBA,CAACJ,GAAW;EAC9C,IAAI,CAACJ,oBAAoB,CAACK,IAAI,CAACD,GAAG,CAAC,EAAE;IACnC,OAAO,IAAI;;EAGb,IAAMK,KAAK,GAAGL,GAAG,CAACK,KAAK,CAACT,oBAAoB,CAAC;EAC7C,IAAMU,SAAS,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;EAE3C,IAAIF,SAAS,CAACG,QAAQ,CAAC,KAAK,CAAC,EAAE;IAC7B,OAAO,KAAK;;EAGd,IAAIH,SAAS,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAE;IAC5B,OAAO,IAAI;;EAGb,OAAO,YAAY;AACrB;AAEA,OAAM,SAAUC,WAAWA,CACzBC,eAAuB,EACvBR,SAAiB;EAEjB,IAAMS,mBAAmB,GAAGjB,QAAQ,CAClCO,wBAAwB,CAACC,SAAS,CAAC,CACpC,CAACU,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;EAE5B,IAAMC,yBAAyB,GAAGnB,QAAQ,CAACgB,eAAe,CAAC,CAACE,OAAO,CACjE,aAAa,EACb,EAAE,CACH;EAED,OAAO,IAAIE,MAAM,CAACD,yBAAyB,EAAE,GAAG,CAAC,CAACb,IAAI,CAACW,mBAAmB,CAAC;AAC7E;AAEA,OAAM,SAAUI,iBAAiBA,CAC/Bb,SAAiB,EACjBc,UAAkB;EAElB,IAAMC,cAAc,GAAGnB,QAAQ,CAACI,SAAS,CAAC;EAC1C,IAAMgB,eAAe,GAAGpB,QAAQ,CAACkB,UAAU,CAAC;EAC5C,IAAMG,SAAS,GAAGhB,oBAAoB,CAACD,SAAS,CAAC;EACjD,IAAMkB,UAAU,GAAGjB,oBAAoB,CAACa,UAAU,CAAC;EAEnD,IAAIC,cAAc,IAAIC,eAAe,IAAIC,SAAS,KAAKC,UAAU,EAAE;IACjE,OAAO,IAAI;;EAGb,OAAO,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}