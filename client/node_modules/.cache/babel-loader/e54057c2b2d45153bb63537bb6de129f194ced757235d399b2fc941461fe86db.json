{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isNone as r, isSome as o } from \"../../../core/maybe.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport a from \"../LOD.js\";\nimport n from \"../RasterInfo.js\";\nimport l from \"../RasterStorageInfo.js\";\nimport f from \"../TileInfo.js\";\nimport m from \"./BaseRaster.js\";\nimport c from \"./DBFParser.js\";\nimport { isTransformSupported as p, readTransform as d } from \"../rasterTransforms/utils.js\";\nimport u from \"../../../rest/support/FeatureSet.js\";\nimport h from \"../../../geometry/SpatialReference.js\";\nimport g from \"../../../geometry/Extent.js\";\nimport y from \"../../../geometry/Point.js\";\nconst x = new Map();\nx.set(\"int16\", \"esriFieldTypeSmallInteger\"), x.set(\"int32\", \"esriFieldTypeInteger\"), x.set(\"int64\", \"esriFieldTypeInteger\"), x.set(\"float32\", \"esriFieldTypeSingle\"), x.set(\"float64\", \"esriFieldTypeDouble\"), x.set(\"text\", \"esriFieldTypeString\");\nconst S = 8;\nlet I = class extends m {\n  constructor() {\n    super(...arguments), this.storageInfo = null, this.datasetFormat = \"CRF\";\n  }\n  async open(e) {\n    await this.init();\n    const {\n      data: r\n    } = await this.request(this.url + \"/conf.json\", {\n      signal: e?.signal\n    });\n    if (!this._validateHeader(r)) throw new t(\"cloudraster:open\", \"Invalid or unsupported conf.json.\");\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n    const {\n      storageInfo: o,\n      rasterInfo: i\n    } = this._parseHeader(r);\n    if (\"thematic\" === i.dataType) {\n      const e = await this._fetchAuxiliaryInformation();\n      i.attributeTable = e;\n    }\n    this._set(\"storageInfo\", o), this._set(\"rasterInfo\", i), this.ioConfig.retryCount = this.ioConfig.retryCount || 0;\n  }\n  async fetchRawTile(e, t, r) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const {\n        transposeInfo: i\n      } = this.rasterInfo.storageInfo,\n      {\n        transposedVariableName: s\n      } = o,\n      a = !(!i || !s),\n      n = a ? 0 : this.rasterInfo.storageInfo.maximumPyramidLevel - e;\n    if (n < 0) return null;\n    const l = this._buildCacheFilePath(n, t, r, o.multidimensionalDefinition, s),\n      f = this._getIndexRecordFromBundle(t, r, a),\n      m = await this.request(l, {\n        range: {\n          from: 0,\n          to: this.storageInfo.headerSize - 1\n        },\n        responseType: \"array-buffer\",\n        signal: o.signal\n      });\n    if (!m) return null;\n    const c = new Uint8Array(m.data),\n      p = this._getTileEndAndContentType(c, f);\n    if (0 === p.recordSize) return null;\n    const d = await this.request(l, {\n      range: {\n        from: p.position,\n        to: p.position + p.recordSize\n      },\n      responseType: \"array-buffer\",\n      signal: o.signal\n    });\n    if (!d) return null;\n    const [u, h] = this._getTileSize(a);\n    return this.decodePixelBlock(d.data, {\n      width: u,\n      height: h,\n      planes: null,\n      pixelType: null,\n      returnInterleaved: a\n    });\n  }\n  _validateHeader(e) {\n    const t = [\"origin\", \"extent\", \"geodataXform\", \"LODInfos\", \"blockWidth\", \"blockHeight\", \"bandCount\", \"pixelType\", \"pixelSizeX\", \"pixelSizeY\", \"format\", \"packetSize\"];\n    return e && \"RasterInfo\" === e.type && !t.some(t => !e[t]);\n  }\n  _parseHeader(e) {\n    const t = [\"u1\", \"u2\", \"u4\", \"u8\", \"s8\", \"u16\", \"s16\", \"u32\", \"s32\", \"f32\", \"f64\"][e.pixelType],\n      {\n        bandCount: r,\n        histograms: o,\n        colormap: i,\n        blockWidth: s,\n        blockHeight: m,\n        firstPyramidLevel: c,\n        maximumPyramidLevel: p\n      } = e,\n      d = e.statistics && e.statistics.map(e => ({\n        min: e.min,\n        max: e.max,\n        avg: e.mean,\n        stddev: e.standardDeviation,\n        median: e.median,\n        mode: e.mode\n      })),\n      u = e.extent.spatialReference,\n      x = e.geodataXform?.spatialReference,\n      I = new h(u?.wkid || u?.wkt ? u : x);\n    let w = new g({\n      xmin: e.extent.xmin,\n      ymin: e.extent.ymin,\n      xmax: e.extent.xmax,\n      ymax: e.extent.ymax,\n      spatialReference: I\n    });\n    const _ = new y({\n        x: e.pixelSizeX,\n        y: e.pixelSizeY,\n        spatialReference: I\n      }),\n      v = Math.round((w.xmax - w.xmin) / _.x),\n      b = Math.round((w.ymax - w.ymin) / _.y),\n      z = this._parseTransform(e.geodataXform),\n      T = z ? w : null;\n    z && (w = z.forwardTransform(w), _.x = (w.xmax - w.xmin) / v, _.y = (w.ymax - w.ymin) / b);\n    const k = e.properties ?? {},\n      j = e.format.toLowerCase().replace(\"cache/\", \"\"),\n      C = new y(e.origin.x, e.origin.y, I);\n    let R, F, P, H;\n    if (i && i.colors) for (R = [], F = 0; F < i.colors.length; F++) P = i.colors[F], H = i.values ? i.values[F] : F, R.push([H, 255 & P, P << 16 >>> 24, P << 8 >>> 24, P >>> 24]);\n    const D = e.LODInfos,\n      L = [];\n    for (F = 0; F < D.levels.length; F++) L.push(new a({\n      level: D.levels[F],\n      resolution: D.resolutions[F],\n      scale: 96 / .0254 * D.resolutions[F]\n    }));\n    const M = new f({\n        dpi: 96,\n        lods: L,\n        format: j,\n        origin: C,\n        size: [s, m],\n        spatialReference: I\n      }),\n      O = {\n        recordSize: S,\n        packetSize: e.packetSize,\n        headerSize: e.packetSize * e.packetSize * S + 64\n      },\n      B = [{\n        maxCol: Math.ceil(v / s) - 1,\n        maxRow: Math.ceil(b / m) - 1,\n        minCol: 0,\n        minRow: 0\n      }];\n    let $ = 2;\n    if (p > 0) for (F = 0; F < p; F++) B.push({\n      maxCol: Math.ceil(v / $ / s) - 1,\n      maxRow: Math.ceil(b / $ / m) - 1,\n      minCol: 0,\n      minRow: 0\n    }), $ *= 2;\n    const N = e.mdInfo;\n    let q = null;\n    if (N && k._yxs) {\n      const e = k._yxs;\n      q = {\n        packetSize: e.PacketSize,\n        tileSize: [e.TileXSize, e.TileYSize]\n      };\n    }\n    return {\n      storageInfo: O,\n      rasterInfo: new n({\n        width: v,\n        height: b,\n        pixelType: t,\n        bandCount: r,\n        extent: w,\n        nativeExtent: T,\n        transform: z,\n        spatialReference: I,\n        pixelSize: _,\n        keyProperties: k,\n        statistics: d,\n        histograms: o,\n        multidimensionalInfo: N,\n        colormap: R,\n        storageInfo: new l({\n          blockWidth: s,\n          blockHeight: m,\n          pyramidBlockWidth: s,\n          pyramidBlockHeight: m,\n          origin: C,\n          tileInfo: M,\n          transposeInfo: q,\n          firstPyramidLevel: c,\n          maximumPyramidLevel: p,\n          blockBoundary: B\n        })\n      })\n    };\n  }\n  _parseTransform(e) {\n    if (!p(e)) throw new t(\"cloudraster:open\", \"the data contains unsupported geodata transform types\");\n    const r = d(e);\n    if (\"identity\" === r.type) return null;\n    if (\"polynomial\" !== r.type || !r.forwardCoefficients?.length || !r.inverseCoefficients?.length) throw new t(\"cloudraster:open\", \"the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently\");\n    return r;\n  }\n  async _fetchAuxiliaryInformation(e) {\n    const t = this.request(this.url + \"/conf.vat.json\", {\n        signal: e\n      }).then(e => e.data).catch(() => null),\n      r = this.request(this.url + \"/conf.vat.dbf\", {\n        responseType: \"array-buffer\",\n        signal: e\n      }).then(e => e.data).catch(() => null),\n      o = await Promise.all([t, r]);\n    let i;\n    if (o[0]) {\n      let e = o[0].fields;\n      const t = o[0].values;\n      if (e && t) {\n        e = e.map(e => ({\n          type: \"OID\" === e.name ? \"esriFieldTypeOID\" : x.get(e.type),\n          name: e.name,\n          alias: e.alias || e.name\n        }));\n        const r = t.map(e => ({\n          attributes: e\n        }));\n        e && t && (i = {\n          fields: e,\n          features: r\n        });\n      }\n    }\n    if (!i && o[1]) {\n      i = c.parse(o[1]).recordSet;\n    }\n    return u.fromJSON(i);\n  }\n  _buildCacheFilePath(e, t, o, i, s) {\n    const a = this._getPackageSize(!!s),\n      n = Math.floor(t / a) * a,\n      l = Math.floor(o / a) * a,\n      f = \"R\" + this._toHexString4(n) + \"C\" + this._toHexString4(l);\n    let m = \"L\";\n    m += e >= 10 ? e.toString() : \"0\" + e.toString();\n    const {\n        multidimensionalInfo: c\n      } = this.rasterInfo,\n      p = i?.[0];\n    if (r(c) || !p) return `${this.url}/_alllayers/${m}/${f}.bundle`;\n    let d = \"_yxs\";\n    if (!s) {\n      d = c.variables.find(e => e.name === p.variableName).dimensions[0].values.indexOf(p.values[0]).toString(16);\n      const e = 4 - d.length;\n      for (let t = 0; t < e; t++) d = \"0\" + d;\n      d = \"S\" + d;\n    }\n    const u = this._getVariableFolderName(s || p.variableName);\n    return `${this.url}/_alllayers/${u}/${d}/${m}/${f}.bundle`;\n  }\n  _getPackageSize() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n    const {\n      transposeInfo: t\n    } = this.rasterInfo.storageInfo;\n    return e && o(t) ? t.packetSize ?? 0 : this.storageInfo.packetSize;\n  }\n  _getTileSize() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n    const {\n        storageInfo: t\n      } = this.rasterInfo,\n      {\n        transposeInfo: r\n      } = t;\n    return e && o(r) ? r.tileSize : t.tileInfo.size;\n  }\n  _getVariableFolderName(e) {\n    return \"\" === (e = e.trim()) ? \"_v\" : e.replace(/[\\{|\\}\\-]/g, \"_\").replace(\"\\\\*\", \"_v\");\n  }\n  _getIndexRecordFromBundle(e, t) {\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    const o = this._getPackageSize(r),\n      i = o * (e % o) + t % o;\n    if (i < 0) throw new Error(\"Invalid level / row / col\");\n    return 20 + i * this.storageInfo.recordSize + 44;\n  }\n  _getTileEndAndContentType(e, t) {\n    const r = e.subarray(t, t + 8);\n    let o,\n      i = 0;\n    for (o = 0; o < 5; o++) i |= (255 & r[o]) << 8 * o;\n    const s = 0xffffffffff & i;\n    for (i = 0, o = 5; o < 8; o++) i |= (255 & r[o]) << 8 * (o - 5);\n    return {\n      position: s,\n      recordSize: 0xffffffffff & i\n    };\n  }\n  _toHexString4(e) {\n    let t = e.toString(16);\n    if (4 !== t.length) {\n      let e = 4 - t.length;\n      for (; e-- > 0;) t = \"0\" + t;\n    }\n    return t;\n  }\n};\ne([i({\n  readOnly: !0\n})], I.prototype, \"storageInfo\", void 0), e([i({\n  type: String,\n  json: {\n    write: !0\n  }\n})], I.prototype, \"datasetFormat\", void 0), I = e([s(\"esri.layers.support.rasterDatasets.CloudRaster\")], I);\nconst w = I;\nexport { w as default };","map":{"version":3,"names":["_","e","t","isNone","r","isSome","o","property","i","subclass","s","a","n","l","f","m","c","isTransformSupported","p","readTransform","d","u","h","g","y","x","Map","set","S","I","constructor","arguments","storageInfo","datasetFormat","open","init","data","request","url","signal","_validateHeader","datasetName","slice","lastIndexOf","rasterInfo","_parseHeader","dataType","_fetchAuxiliaryInformation","attributeTable","_set","ioConfig","retryCount","fetchRawTile","length","undefined","transposeInfo","transposedVariableName","maximumPyramidLevel","_buildCacheFilePath","multidimensionalDefinition","_getIndexRecordFromBundle","range","from","to","headerSize","responseType","Uint8Array","_getTileEndAndContentType","recordSize","position","_getTileSize","decodePixelBlock","width","height","planes","pixelType","returnInterleaved","type","some","bandCount","histograms","colormap","blockWidth","blockHeight","firstPyramidLevel","statistics","map","min","max","avg","mean","stddev","standardDeviation","median","mode","extent","spatialReference","geodataXform","wkid","wkt","w","xmin","ymin","xmax","ymax","pixelSizeX","pixelSizeY","v","Math","round","b","z","_parseTransform","T","forwardTransform","k","properties","j","format","toLowerCase","replace","C","origin","R","F","P","H","colors","values","push","D","LODInfos","L","levels","level","resolution","resolutions","scale","M","dpi","lods","size","O","packetSize","B","maxCol","ceil","maxRow","minCol","minRow","$","N","mdInfo","q","_yxs","PacketSize","tileSize","TileXSize","TileYSize","nativeExtent","transform","pixelSize","keyProperties","multidimensionalInfo","pyramidBlockWidth","pyramidBlockHeight","tileInfo","blockBoundary","forwardCoefficients","inverseCoefficients","then","catch","Promise","all","fields","name","get","alias","attributes","features","parse","recordSet","fromJSON","_getPackageSize","floor","_toHexString4","toString","variables","find","variableName","dimensions","indexOf","_getVariableFolderName","trim","Error","subarray","readOnly","prototype","String","json","write","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/rasterDatasets/CloudRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isNone as r,isSome as o}from\"../../../core/maybe.js\";import{property as i}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import a from\"../LOD.js\";import n from\"../RasterInfo.js\";import l from\"../RasterStorageInfo.js\";import f from\"../TileInfo.js\";import m from\"./BaseRaster.js\";import c from\"./DBFParser.js\";import{isTransformSupported as p,readTransform as d}from\"../rasterTransforms/utils.js\";import u from\"../../../rest/support/FeatureSet.js\";import h from\"../../../geometry/SpatialReference.js\";import g from\"../../../geometry/Extent.js\";import y from\"../../../geometry/Point.js\";const x=new Map;x.set(\"int16\",\"esriFieldTypeSmallInteger\"),x.set(\"int32\",\"esriFieldTypeInteger\"),x.set(\"int64\",\"esriFieldTypeInteger\"),x.set(\"float32\",\"esriFieldTypeSingle\"),x.set(\"float64\",\"esriFieldTypeDouble\"),x.set(\"text\",\"esriFieldTypeString\");const S=8;let I=class extends m{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat=\"CRF\"}async open(e){await this.init();const{data:r}=await this.request(this.url+\"/conf.json\",{signal:e?.signal});if(!this._validateHeader(r))throw new t(\"cloudraster:open\",\"Invalid or unsupported conf.json.\");this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{storageInfo:o,rasterInfo:i}=this._parseHeader(r);if(\"thematic\"===i.dataType){const e=await this._fetchAuxiliaryInformation();i.attributeTable=e}this._set(\"storageInfo\",o),this._set(\"rasterInfo\",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,o={}){const{transposeInfo:i}=this.rasterInfo.storageInfo,{transposedVariableName:s}=o,a=!(!i||!s),n=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const l=this._buildCacheFilePath(n,t,r,o.multidimensionalDefinition,s),f=this._getIndexRecordFromBundle(t,r,a),m=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:\"array-buffer\",signal:o.signal});if(!m)return null;const c=new Uint8Array(m.data),p=this._getTileEndAndContentType(c,f);if(0===p.recordSize)return null;const d=await this.request(l,{range:{from:p.position,to:p.position+p.recordSize},responseType:\"array-buffer\",signal:o.signal});if(!d)return null;const[u,h]=this._getTileSize(a);return this.decodePixelBlock(d.data,{width:u,height:h,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(e){const t=[\"origin\",\"extent\",\"geodataXform\",\"LODInfos\",\"blockWidth\",\"blockHeight\",\"bandCount\",\"pixelType\",\"pixelSizeX\",\"pixelSizeY\",\"format\",\"packetSize\"];return e&&\"RasterInfo\"===e.type&&!t.some((t=>!e[t]))}_parseHeader(e){const t=[\"u1\",\"u2\",\"u4\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"][e.pixelType],{bandCount:r,histograms:o,colormap:i,blockWidth:s,blockHeight:m,firstPyramidLevel:c,maximumPyramidLevel:p}=e,d=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),u=e.extent.spatialReference,x=e.geodataXform?.spatialReference,I=new h(u?.wkid||u?.wkt?u:x);let w=new g({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:I});const _=new y({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:I}),v=Math.round((w.xmax-w.xmin)/_.x),b=Math.round((w.ymax-w.ymin)/_.y),z=this._parseTransform(e.geodataXform),T=z?w:null;z&&(w=z.forwardTransform(w),_.x=(w.xmax-w.xmin)/v,_.y=(w.ymax-w.ymin)/b);const k=e.properties??{},j=e.format.toLowerCase().replace(\"cache/\",\"\"),C=new y(e.origin.x,e.origin.y,I);let R,F,P,H;if(i&&i.colors)for(R=[],F=0;F<i.colors.length;F++)P=i.colors[F],H=i.values?i.values[F]:F,R.push([H,255&P,P<<16>>>24,P<<8>>>24,P>>>24]);const D=e.LODInfos,L=[];for(F=0;F<D.levels.length;F++)L.push(new a({level:D.levels[F],resolution:D.resolutions[F],scale:96/.0254*D.resolutions[F]}));const M=new f({dpi:96,lods:L,format:j,origin:C,size:[s,m],spatialReference:I}),O={recordSize:S,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*S+64},B=[{maxCol:Math.ceil(v/s)-1,maxRow:Math.ceil(b/m)-1,minCol:0,minRow:0}];let $=2;if(p>0)for(F=0;F<p;F++)B.push({maxCol:Math.ceil(v/$/s)-1,maxRow:Math.ceil(b/$/m)-1,minCol:0,minRow:0}),$*=2;const N=e.mdInfo;let q=null;if(N&&k._yxs){const e=k._yxs;q={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:O,rasterInfo:new n({width:v,height:b,pixelType:t,bandCount:r,extent:w,nativeExtent:T,transform:z,spatialReference:I,pixelSize:_,keyProperties:k,statistics:d,histograms:o,multidimensionalInfo:N,colormap:R,storageInfo:new l({blockWidth:s,blockHeight:m,pyramidBlockWidth:s,pyramidBlockHeight:m,origin:C,tileInfo:M,transposeInfo:q,firstPyramidLevel:c,maximumPyramidLevel:p,blockBoundary:B})})}}_parseTransform(e){if(!p(e))throw new t(\"cloudraster:open\",\"the data contains unsupported geodata transform types\");const r=d(e);if(\"identity\"===r.type)return null;if(\"polynomial\"!==r.type||!r.forwardCoefficients?.length||!r.inverseCoefficients?.length)throw new t(\"cloudraster:open\",\"the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently\");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+\"/conf.vat.json\",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+\"/conf.vat.dbf\",{responseType:\"array-buffer\",signal:e}).then((e=>e.data)).catch((()=>null)),o=await Promise.all([t,r]);let i;if(o[0]){let e=o[0].fields;const t=o[0].values;if(e&&t){e=e.map((e=>({type:\"OID\"===e.name?\"esriFieldTypeOID\":x.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:r})}}if(!i&&o[1]){i=c.parse(o[1]).recordSet}return u.fromJSON(i)}_buildCacheFilePath(e,t,o,i,s){const a=this._getPackageSize(!!s),n=Math.floor(t/a)*a,l=Math.floor(o/a)*a,f=\"R\"+this._toHexString4(n)+\"C\"+this._toHexString4(l);let m=\"L\";m+=e>=10?e.toString():\"0\"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,p=i?.[0];if(r(c)||!p)return`${this.url}/_alllayers/${m}/${f}.bundle`;let d=\"_yxs\";if(!s){d=c.variables.find((e=>e.name===p.variableName)).dimensions[0].values.indexOf(p.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d=\"0\"+d;d=\"S\"+d}const u=this._getVariableFolderName(s||p.variableName);return`${this.url}/_alllayers/${u}/${d}/${m}/${f}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&o(t)?t.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:r}=t;return e&&o(r)?r.tileSize:t.tileInfo.size}_getVariableFolderName(e){return\"\"===(e=e.trim())?\"_v\":e.replace(/[\\{|\\}\\-]/g,\"_\").replace(\"\\\\*\",\"_v\")}_getIndexRecordFromBundle(e,t,r=!1){const o=this._getPackageSize(r),i=o*(e%o)+t%o;if(i<0)throw new Error(\"Invalid level / row / col\");return 20+i*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let o,i=0;for(o=0;o<5;o++)i|=(255&r[o])<<8*o;const s=0xffffffffff&i;for(i=0,o=5;o<8;o++)i|=(255&r[o])<<8*(o-5);return{position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t=\"0\"+t}return t}};e([i({readOnly:!0})],I.prototype,\"storageInfo\",void 0),e([i({type:String,json:{write:!0}})],I.prototype,\"datasetFormat\",void 0),I=e([s(\"esri.layers.support.rasterDatasets.CloudRaster\")],I);const w=I;export{w as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}