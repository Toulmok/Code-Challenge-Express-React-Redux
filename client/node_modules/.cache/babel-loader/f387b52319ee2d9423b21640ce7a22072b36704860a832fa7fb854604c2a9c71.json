{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../core/Error.js\";\nimport r from \"../../../../../core/Logger.js\";\nimport { isSome as t, isNone as n } from \"../../../../../core/maybe.js\";\nconst s = r.getLogger(\"esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder\");\nclass i {\n  constructor() {\n    this._includedModules = new Map();\n  }\n  include(e, r) {\n    if (this._includedModules.has(e)) {\n      const t = this._includedModules.get(e);\n      if (t !== r) {\n        s.error(\"Trying to include shader module multiple times with different sets of options.\");\n        const r = new Set();\n        for (const n of Object.keys(t)) t[n] !== e[n] && r.add(n);\n        for (const n of Object.keys(e)) t[n] !== e[n] && r.add(n);\n        r.forEach(r => console.error(`  ${r}: current ${t[r]} new ${e[r]}`));\n      }\n    } else this._includedModules.set(e, r), e(this.builder, r);\n  }\n}\nclass o extends i {\n  constructor() {\n    super(...arguments), this.vertex = new u(), this.fragment = new u(), this.attributes = new m(), this.varyings = new h(), this.extensions = new d(), this.constants = new l();\n  }\n  get fragmentUniforms() {\n    return this.fragment.uniforms.entries;\n  }\n  get builder() {\n    return this;\n  }\n  generate(e) {\n    const r = this.extensions.generateSource(e),\n      t = this.attributes.generateSource(e),\n      n = this.varyings.generateSource(),\n      s = \"vertex\" === e ? this.vertex : this.fragment,\n      i = s.uniforms.generateSource(),\n      o = s.code.generateSource(),\n      a = \"vertex\" === e ? f : _,\n      c = this.constants.generateSource().concat(s.constants.generateSource());\n    return `\\n${r.join(\"\\n\")}\\n\\n${a}\\n\\n${c.join(\"\\n\")}\\n\\n${i.join(\"\\n\")}\\n\\n${t.join(\"\\n\")}\\n\\n${n.join(\"\\n\")}\\n\\n${o.join(\"\\n\")}`;\n  }\n  generateBind(e, r) {\n    const n = new Map();\n    this.vertex.uniforms.entries.forEach(r => {\n      const s = r.bind[e];\n      t(s) && n.set(r.name, s);\n    }), this.fragment.uniforms.entries.forEach(r => {\n      const s = r.bind[e];\n      t(s) && n.set(r.name, s);\n    });\n    const s = Array.from(n.values()),\n      i = s.length;\n    return (e, t, n) => {\n      for (let o = 0; o < i; ++o) s[o](r, e, t, n);\n    };\n  }\n}\nclass a {\n  constructor() {\n    this._entries = new Map();\n  }\n  add(e) {\n    if (!Array.isArray(e)) return this._add(e);\n    for (const r of e) this._add(r);\n  }\n  get(e) {\n    return this._entries.get(e);\n  }\n  _add(r) {\n    if (n(r)) s.error(`Trying to add null Uniform from ${new Error().stack}.`);else {\n      if (this._entries.has(r.name) && !this._entries.get(r.name).equals(r)) throw new e(`Duplicate uniform name ${r.name} for different uniform type`);\n      this._entries.set(r.name, r);\n    }\n  }\n  generateSource() {\n    return Array.from(this._entries.values()).map(e => t(e.arraySize) ? `uniform ${e.type} ${e.name}[${e.arraySize}];` : `uniform ${e.type} ${e.name};`);\n  }\n  get entries() {\n    return Array.from(this._entries.values());\n  }\n}\nclass c {\n  constructor() {\n    this._entries = new Array();\n  }\n  add(e) {\n    this._entries.push(e);\n  }\n  generateSource() {\n    return this._entries;\n  }\n}\nclass u extends i {\n  constructor() {\n    super(...arguments), this.uniforms = new a(), this.code = new c(), this.constants = new l();\n  }\n  get builder() {\n    return this;\n  }\n}\nclass m {\n  constructor() {\n    this._entries = new Array();\n  }\n  add(e, r) {\n    this._entries.push([e, r]);\n  }\n  generateSource(e) {\n    return \"fragment\" === e ? [] : this._entries.map(e => `attribute ${e[1]} ${e[0]};`);\n  }\n}\nclass h {\n  constructor() {\n    this._entries = new Array();\n  }\n  add(e, r) {\n    this._entries.push([e, r]);\n  }\n  generateSource() {\n    return this._entries.map(e => `varying ${e[1]} ${e[0]};`);\n  }\n}\nclass d {\n  constructor() {\n    this._entries = new Set();\n  }\n  add(e) {\n    this._entries.add(e);\n  }\n  generateSource(e) {\n    const r = \"vertex\" === e ? d.ALLOWLIST_VERTEX : d.ALLOWLIST_FRAGMENT;\n    return Array.from(this._entries).filter(e => r.includes(e)).map(e => `#extension ${e} : enable`);\n  }\n}\nd.ALLOWLIST_FRAGMENT = [\"GL_EXT_shader_texture_lod\", \"GL_OES_standard_derivatives\"], d.ALLOWLIST_VERTEX = [];\nclass l {\n  constructor() {\n    this._entries = new Set();\n  }\n  add(e, r, t) {\n    let n = \"ERROR_CONSTRUCTOR_STRING\";\n    switch (r) {\n      case \"float\":\n        n = l._numberToFloatStr(t);\n        break;\n      case \"int\":\n        n = l._numberToIntStr(t);\n        break;\n      case \"bool\":\n        n = t.toString();\n        break;\n      case \"vec2\":\n        n = `vec2(${l._numberToFloatStr(t[0])},                            ${l._numberToFloatStr(t[1])})`;\n        break;\n      case \"vec3\":\n        n = `vec3(${l._numberToFloatStr(t[0])},                            ${l._numberToFloatStr(t[1])},                            ${l._numberToFloatStr(t[2])})`;\n        break;\n      case \"vec4\":\n        n = `vec4(${l._numberToFloatStr(t[0])},                            ${l._numberToFloatStr(t[1])},                            ${l._numberToFloatStr(t[2])},                            ${l._numberToFloatStr(t[3])})`;\n        break;\n      case \"ivec2\":\n        n = `ivec2(${l._numberToIntStr(t[0])},                             ${l._numberToIntStr(t[1])})`;\n        break;\n      case \"ivec3\":\n        n = `ivec3(${l._numberToIntStr(t[0])},                             ${l._numberToIntStr(t[1])},                             ${l._numberToIntStr(t[2])})`;\n        break;\n      case \"ivec4\":\n        n = `ivec4(${l._numberToIntStr(t[0])},                             ${l._numberToIntStr(t[1])},                             ${l._numberToIntStr(t[2])},                             ${l._numberToIntStr(t[3])})`;\n        break;\n      case \"mat2\":\n      case \"mat3\":\n      case \"mat4\":\n        n = `${r}(${Array.prototype.map.call(t, e => l._numberToFloatStr(e)).join(\", \")})`;\n    }\n    return this._entries.add(`const ${r} ${e} = ${n};`), this;\n  }\n  static _numberToIntStr(e) {\n    return e.toFixed(0);\n  }\n  static _numberToFloatStr(e) {\n    return Number.isInteger(e) ? e.toFixed(1) : e.toString();\n  }\n  generateSource() {\n    return Array.from(this._entries);\n  }\n}\nconst _ = \"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n  precision highp sampler2D;\\n#else\\n  precision mediump float;\\n  precision mediump sampler2D;\\n#endif\",\n  f = \"precision highp float;\\nprecision highp sampler2D;\";\nexport { c as Code, i as Includes, o as ShaderBuilder, u as Stage, a as Uniforms };","map":{"version":3,"names":["e","r","isSome","t","isNone","n","s","getLogger","i","constructor","_includedModules","Map","include","has","get","error","Set","Object","keys","add","forEach","console","set","builder","o","arguments","vertex","u","fragment","attributes","m","varyings","h","extensions","d","constants","l","fragmentUniforms","uniforms","entries","generate","generateSource","code","a","f","_","c","concat","join","generateBind","bind","name","Array","from","values","length","_entries","isArray","_add","Error","stack","equals","map","arraySize","type","push","ALLOWLIST_VERTEX","ALLOWLIST_FRAGMENT","filter","includes","_numberToFloatStr","_numberToIntStr","toString","prototype","call","toFixed","Number","isInteger","Code","Includes","ShaderBuilder","Stage","Uniforms"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Error.js\";import r from\"../../../../../core/Logger.js\";import{isSome as t,isNone as n}from\"../../../../../core/maybe.js\";const s=r.getLogger(\"esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder\");class i{constructor(){this._includedModules=new Map}include(e,r){if(this._includedModules.has(e)){const t=this._includedModules.get(e);if(t!==r){s.error(\"Trying to include shader module multiple times with different sets of options.\");const r=new Set;for(const n of Object.keys(t))t[n]!==e[n]&&r.add(n);for(const n of Object.keys(e))t[n]!==e[n]&&r.add(n);r.forEach((r=>console.error(`  ${r}: current ${t[r]} new ${e[r]}`)))}}else this._includedModules.set(e,r),e(this.builder,r)}}class o extends i{constructor(){super(...arguments),this.vertex=new u,this.fragment=new u,this.attributes=new m,this.varyings=new h,this.extensions=new d,this.constants=new l}get fragmentUniforms(){return this.fragment.uniforms.entries}get builder(){return this}generate(e){const r=this.extensions.generateSource(e),t=this.attributes.generateSource(e),n=this.varyings.generateSource(),s=\"vertex\"===e?this.vertex:this.fragment,i=s.uniforms.generateSource(),o=s.code.generateSource(),a=\"vertex\"===e?f:_,c=this.constants.generateSource().concat(s.constants.generateSource());return`\\n${r.join(\"\\n\")}\\n\\n${a}\\n\\n${c.join(\"\\n\")}\\n\\n${i.join(\"\\n\")}\\n\\n${t.join(\"\\n\")}\\n\\n${n.join(\"\\n\")}\\n\\n${o.join(\"\\n\")}`}generateBind(e,r){const n=new Map;this.vertex.uniforms.entries.forEach((r=>{const s=r.bind[e];t(s)&&n.set(r.name,s)})),this.fragment.uniforms.entries.forEach((r=>{const s=r.bind[e];t(s)&&n.set(r.name,s)}));const s=Array.from(n.values()),i=s.length;return(e,t,n)=>{for(let o=0;o<i;++o)s[o](r,e,t,n)}}}class a{constructor(){this._entries=new Map}add(e){if(!Array.isArray(e))return this._add(e);for(const r of e)this._add(r)}get(e){return this._entries.get(e)}_add(r){if(n(r))s.error(`Trying to add null Uniform from ${(new Error).stack}.`);else{if(this._entries.has(r.name)&&!this._entries.get(r.name).equals(r))throw new e(`Duplicate uniform name ${r.name} for different uniform type`);this._entries.set(r.name,r)}}generateSource(){return Array.from(this._entries.values()).map((e=>t(e.arraySize)?`uniform ${e.type} ${e.name}[${e.arraySize}];`:`uniform ${e.type} ${e.name};`))}get entries(){return Array.from(this._entries.values())}}class c{constructor(){this._entries=new Array}add(e){this._entries.push(e)}generateSource(){return this._entries}}class u extends i{constructor(){super(...arguments),this.uniforms=new a,this.code=new c,this.constants=new l}get builder(){return this}}class m{constructor(){this._entries=new Array}add(e,r){this._entries.push([e,r])}generateSource(e){return\"fragment\"===e?[]:this._entries.map((e=>`attribute ${e[1]} ${e[0]};`))}}class h{constructor(){this._entries=new Array}add(e,r){this._entries.push([e,r])}generateSource(){return this._entries.map((e=>`varying ${e[1]} ${e[0]};`))}}class d{constructor(){this._entries=new Set}add(e){this._entries.add(e)}generateSource(e){const r=\"vertex\"===e?d.ALLOWLIST_VERTEX:d.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter((e=>r.includes(e))).map((e=>`#extension ${e} : enable`))}}d.ALLOWLIST_FRAGMENT=[\"GL_EXT_shader_texture_lod\",\"GL_OES_standard_derivatives\"],d.ALLOWLIST_VERTEX=[];class l{constructor(){this._entries=new Set}add(e,r,t){let n=\"ERROR_CONSTRUCTOR_STRING\";switch(r){case\"float\":n=l._numberToFloatStr(t);break;case\"int\":n=l._numberToIntStr(t);break;case\"bool\":n=t.toString();break;case\"vec2\":n=`vec2(${l._numberToFloatStr(t[0])},                            ${l._numberToFloatStr(t[1])})`;break;case\"vec3\":n=`vec3(${l._numberToFloatStr(t[0])},                            ${l._numberToFloatStr(t[1])},                            ${l._numberToFloatStr(t[2])})`;break;case\"vec4\":n=`vec4(${l._numberToFloatStr(t[0])},                            ${l._numberToFloatStr(t[1])},                            ${l._numberToFloatStr(t[2])},                            ${l._numberToFloatStr(t[3])})`;break;case\"ivec2\":n=`ivec2(${l._numberToIntStr(t[0])},                             ${l._numberToIntStr(t[1])})`;break;case\"ivec3\":n=`ivec3(${l._numberToIntStr(t[0])},                             ${l._numberToIntStr(t[1])},                             ${l._numberToIntStr(t[2])})`;break;case\"ivec4\":n=`ivec4(${l._numberToIntStr(t[0])},                             ${l._numberToIntStr(t[1])},                             ${l._numberToIntStr(t[2])},                             ${l._numberToIntStr(t[3])})`;break;case\"mat2\":case\"mat3\":case\"mat4\":n=`${r}(${Array.prototype.map.call(t,(e=>l._numberToFloatStr(e))).join(\", \")})`}return this._entries.add(`const ${r} ${e} = ${n};`),this}static _numberToIntStr(e){return e.toFixed(0)}static _numberToFloatStr(e){return Number.isInteger(e)?e.toFixed(1):e.toString()}generateSource(){return Array.from(this._entries)}}const _=\"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n  precision highp sampler2D;\\n#else\\n  precision mediump float;\\n  precision mediump sampler2D;\\n#endif\",f=\"precision highp float;\\nprecision highp sampler2D;\";export{c as Code,i as Includes,o as ShaderBuilder,u as Stage,a as Uniforms};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}