{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { JSONSupport as s } from \"../../../core/JSONSupport.js\";\nimport { isSome as e, isNone as r } from \"../../../core/maybe.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { cast as n } from \"../../../core/accessorSupport/decorators/cast.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport a from \"../PixelBlock.js\";\nimport u from \"../RasterInfo.js\";\nlet p = class extends s {\n  constructor() {\n    super(...arguments), this.functionArguments = null, this.readingBufferSize = 0, this.id = -1, this.isNoopProcess = !1, this.rawInputBandIds = [], this.isInputBandIdsSwizzled = !1, this.swizzledBandSelection = [], this.isBranch = !1, this._bindingResult = null;\n  }\n  get supportsGPU() {\n    return this._bindingResult.supportsGPU;\n  }\n  bind(t) {\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    this.id = r + 1;\n    const i = this._getRasterValues();\n    let n = !0;\n    for (let o = 0; o < i.length; o++) {\n      const r = i[o];\n      if (e(r) && this._isRasterFunctionValue(r)) {\n        const e = r.bind(t, s, this.id + o);\n        if (!e.success) return this._bindingResult = e, e;\n        n = n && e.supportsGPU;\n      }\n    }\n    return !this.rasterInfo || s ? (this.sourceRasterInfos = this._getSourceRasterInfos(t), this._bindingResult = this._bindSourceRasters(), this._bindingResult.supportsGPU = n && this._bindingResult.supportsGPU, this.processInputBandIds(), this._bindingResult) : (this._bindingResult = {\n      success: !0,\n      supportsGPU: !0\n    }, this.processInputBandIds(), this._bindingResult);\n  }\n  process(t) {\n    const s = this._getRasterValues(),\n      e = 0 === s.length ? t.pixelBlocks ?? t.primaryPixelBlocks : s.map(s => this._readRasterValue(s, t));\n    return this._processPixels({\n      ...t,\n      pixelBlocks: e\n    });\n  }\n  processInputBandIds() {\n    const t = this._getRasterValues().filter(this._isRasterFunctionValue);\n    let s;\n    if (t.length > 1) {\n      const s = t.map(t => t.processInputBandIds()[0]);\n      this.rawInputBandIds = s, this.isInputBandIdsSwizzled = this.rawInputBandIds.some((t, s) => t !== s);\n      const e = t.filter(t => \"ExtractBand\" === t.functionName);\n      return e.length && e.forEach((t, s) => {\n        t.isInputBandIdsSwizzled = !0, t.swizzledBandSelection = [s, s, s];\n      }), this.rawInputBandIds;\n    }\n    const e = t[0];\n    if (e) {\n      if (s = e.processInputBandIds(), e.isInputBandIdsSwizzled) return this.rawInputBandIds = s, s;\n    } else {\n      s = [];\n      const {\n        bandCount: t\n      } = this.sourceRasterInfos[0];\n      for (let e = 0; e < t; e++) s.push(e);\n    }\n    const r = this._getInputBandIds(s);\n    return this.isInputBandIdsSwizzled = r.some((t, s) => t !== s), this.rawInputBandIds = r, this.rawInputBandIds;\n  }\n  getPrimaryRasters() {\n    const t = [],\n      s = [];\n    return this._getPrimaryRasters(this, t, s), {\n      rasters: t,\n      rasterIds: s\n    };\n  }\n  getWebGLProcessorDefinition() {\n    const t = this._getWebGLParameters(),\n      {\n        raster: s,\n        rasters: e\n      } = this.functionArguments;\n    return e && Array.isArray(e) && e.length ? (t.rasters = e.map(t => this._isRasterFunctionValue(t) ? t.getWebGLProcessorDefinition() : \"number\" == typeof t ? {\n      name: \"Constant\",\n      parameters: {\n        value: t\n      },\n      pixelType: \"f32\",\n      id: -1,\n      isNoopProcess: !1\n    } : {\n      name: \"Identity\",\n      parameters: {\n        value: t\n      },\n      pixelType: \"f32\",\n      id: -1,\n      isNoopProcess: !1\n    }), t.rasters.some(t => null != t) || (t.rasters = null)) : this._isRasterFunctionValue(s) && (t.raster = s.getWebGLProcessorDefinition()), {\n      name: this.functionName,\n      parameters: t,\n      pixelType: this.outputPixelType,\n      id: this.id,\n      isNoopProcess: this.isNoopProcess\n    };\n  }\n  getFlatWebGLFunctionChain() {\n    const t = this.getWebGLProcessorDefinition();\n    if (!t) return null;\n    const s = [t],\n      {\n        parameters: e\n      } = t;\n    let r = e.rasters || e.raster && [e.raster];\n    for (; r?.length;) {\n      s.unshift(...r);\n      const t = [];\n      for (let s = 0; s < r.length; s++) {\n        const {\n            parameters: e\n          } = r[s],\n          i = e.rasters || e.raster && [e.raster];\n        i?.length && t.push(...i);\n      }\n      r = t;\n    }\n    for (let n = s.length - 1; n >= 0; n--) s[n].isNoopProcess && s.splice(n, 1);\n    let i = !1;\n    for (let n = 0; n < s.length; n++) {\n      const t = s[n];\n      t.id = s.length - n - 1;\n      const {\n        rasters: e\n      } = t.parameters;\n      i = i || null != e && e.length > 1;\n    }\n    return {\n      hasBranches: i,\n      functions: s\n    };\n  }\n  _getOutputPixelType(t) {\n    return \"unknown\" === this.outputPixelType ? t : this.outputPixelType ?? t;\n  }\n  _getWebGLParameters() {\n    return {};\n  }\n  _getInputBandIds(t) {\n    return t;\n  }\n  _isOutputRoundingNeeded() {\n    const {\n      outputPixelType: t\n    } = this;\n    return (t?.startsWith(\"u\") || t?.startsWith(\"s\")) ?? !1;\n  }\n  _getRasterValues() {\n    const {\n      rasterArgumentNames: t\n    } = this;\n    return \"rasters\" === t[0] ? this.functionArguments.rasters ?? [] : t.map(t => this.functionArguments[t]);\n  }\n  _getSourceRasterInfos(t) {\n    const s = this._getRasterValues(),\n      {\n        rasterInfos: e,\n        rasterIds: r\n      } = t;\n    if (0 === s.length) return e;\n    const i = s.map(t => t && \"object\" == typeof t && \"bind\" in t && t.rasterInfo ? t.rasterInfo : \"string\" == typeof t && r.includes(t) ? e[r.indexOf(t)] : \"number\" != typeof t ? e[0] : void 0),\n      n = i.find(t => t) ?? e[0];\n    return i.forEach((t, s) => {\n      void 0 === t && (i[s] = n);\n    }), i;\n  }\n  _getPrimaryRasterId(t) {\n    return t?.url;\n  }\n  _getPrimaryRasters(t) {\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    for (let r = 0; r < t.sourceRasters.length; r++) {\n      const i = t.sourceRasters[r];\n      if (\"number\" != typeof i) if (\"bind\" in i) this._getPrimaryRasters(i, s, e);else {\n        const t = i,\n          r = this._getPrimaryRasterId(t);\n        if (null == r) continue;\n        e.includes(r) || (this.mainPrimaryRasterId === r ? (s.unshift(t), e.unshift(r)) : (s.push(t), e.push(r)));\n      }\n    }\n  }\n  _isRasterFunctionValue(t) {\n    return null != t && \"object\" == typeof t && \"getWebGLProcessorDefinition\" in t;\n  }\n  _readRasterValue(t, s) {\n    const {\n      primaryPixelBlocks: e\n    } = s;\n    if (r(t) || \"$$\" === t) {\n      const t = e[0];\n      return r(t) ? null : t.clone();\n    }\n    if (\"string\" == typeof t) {\n      const r = s.primaryRasterIds.indexOf(t);\n      return -1 === r ? null : e[r];\n    }\n    if (\"number\" == typeof t) {\n      const s = e[0];\n      if (r(s)) return null;\n      const {\n          width: i,\n          height: n,\n          pixelType: o,\n          mask: u\n        } = s,\n        p = u ? new Uint8Array(u) : null,\n        l = new Float32Array(i * n);\n      l.fill(t);\n      const d = this.sourceRasterInfos[0].bandCount,\n        c = new Array(d).fill(l);\n      return new a({\n        width: i,\n        height: n,\n        pixelType: o,\n        pixels: c,\n        mask: p\n      });\n    }\n    return t.process(s);\n  }\n};\nt([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"functionName\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"functionArguments\", void 0), t([i()], p.prototype, \"rasterArgumentNames\", void 0), t([i({\n  json: {\n    write: !0\n  }\n}), n(t => t?.toLowerCase())], p.prototype, \"outputPixelType\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"mainPrimaryRasterId\", void 0), t([i()], p.prototype, \"sourceRasters\", void 0), t([i({\n  type: [u],\n  json: {\n    write: !0\n  }\n})], p.prototype, \"sourceRasterInfos\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"rasterInfo\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"readingBufferSize\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"id\", void 0), t([i()], p.prototype, \"isNoopProcess\", void 0), t([i()], p.prototype, \"supportsGPU\", null), t([i()], p.prototype, \"rawInputBandIds\", void 0), t([i()], p.prototype, \"isInputBandIdsSwizzled\", void 0), t([i()], p.prototype, \"swizzledBandSelection\", void 0), t([i()], p.prototype, \"isBranch\", void 0), t([i()], p.prototype, \"_bindingResult\", void 0), p = t([o(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")], p);\nconst l = p;\nexport { l as default };","map":{"version":3,"names":["_","t","JSONSupport","s","isSome","e","isNone","r","property","i","cast","n","subclass","o","a","u","p","constructor","arguments","functionArguments","readingBufferSize","id","isNoopProcess","rawInputBandIds","isInputBandIdsSwizzled","swizzledBandSelection","isBranch","_bindingResult","supportsGPU","bind","length","undefined","_getRasterValues","_isRasterFunctionValue","success","rasterInfo","sourceRasterInfos","_getSourceRasterInfos","_bindSourceRasters","processInputBandIds","process","pixelBlocks","primaryPixelBlocks","map","_readRasterValue","_processPixels","filter","some","functionName","forEach","bandCount","push","_getInputBandIds","getPrimaryRasters","_getPrimaryRasters","rasters","rasterIds","getWebGLProcessorDefinition","_getWebGLParameters","raster","Array","isArray","name","parameters","value","pixelType","outputPixelType","getFlatWebGLFunctionChain","unshift","splice","hasBranches","functions","_getOutputPixelType","_isOutputRoundingNeeded","startsWith","rasterArgumentNames","rasterInfos","includes","indexOf","find","_getPrimaryRasterId","url","sourceRasters","mainPrimaryRasterId","clone","primaryRasterIds","width","height","mask","Uint8Array","l","Float32Array","fill","d","c","pixels","json","write","prototype","toLowerCase","type","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/rasterFunctions/BaseRasterFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{JSONSupport as s}from\"../../../core/JSONSupport.js\";import{isSome as e,isNone as r}from\"../../../core/maybe.js\";import{property as i}from\"../../../core/accessorSupport/decorators/property.js\";import{cast as n}from\"../../../core/accessorSupport/decorators/cast.js\";import\"../../../core/arrayUtils.js\";import{subclass as o}from\"../../../core/accessorSupport/decorators/subclass.js\";import a from\"../PixelBlock.js\";import u from\"../RasterInfo.js\";let p=class extends s{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}bind(t,s=!1,r=-1){this.id=r+1;const i=this._getRasterValues();let n=!0;for(let o=0;o<i.length;o++){const r=i[o];if(e(r)&&this._isRasterFunctionValue(r)){const e=r.bind(t,s,this.id+o);if(!e.success)return this._bindingResult=e,e;n=n&&e.supportsGPU}}return!this.rasterInfo||s?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.supportsGPU=n&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const s=this._getRasterValues(),e=0===s.length?t.pixelBlocks??t.primaryPixelBlocks:s.map((s=>this._readRasterValue(s,t)));return this._processPixels({...t,pixelBlocks:e})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let s;if(t.length>1){const s=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=s,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,s)=>t!==s));const e=t.filter((t=>\"ExtractBand\"===t.functionName));return e.length&&e.forEach(((t,s)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[s,s,s]})),this.rawInputBandIds}const e=t[0];if(e){if(s=e.processInputBandIds(),e.isInputBandIdsSwizzled)return this.rawInputBandIds=s,s}else{s=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let e=0;e<t;e++)s.push(e)}const r=this._getInputBandIds(s);return this.isInputBandIdsSwizzled=r.some(((t,s)=>t!==s)),this.rawInputBandIds=r,this.rawInputBandIds}getPrimaryRasters(){const t=[],s=[];return this._getPrimaryRasters(this,t,s),{rasters:t,rasterIds:s}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:s,rasters:e}=this.functionArguments;return e&&Array.isArray(e)&&e.length?(t.rasters=e.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():\"number\"==typeof t?{name:\"Constant\",parameters:{value:t},pixelType:\"f32\",id:-1,isNoopProcess:!1}:{name:\"Identity\",parameters:{value:t},pixelType:\"f32\",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(s)&&(t.raster=s.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getFlatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const s=[t],{parameters:e}=t;let r=e.rasters||e.raster&&[e.raster];for(;r?.length;){s.unshift(...r);const t=[];for(let s=0;s<r.length;s++){const{parameters:e}=r[s],i=e.rasters||e.raster&&[e.raster];i?.length&&t.push(...i)}r=t}for(let n=s.length-1;n>=0;n--)s[n].isNoopProcess&&s.splice(n,1);let i=!1;for(let n=0;n<s.length;n++){const t=s[n];t.id=s.length-n-1;const{rasters:e}=t.parameters;i=i||null!=e&&e.length>1}return{hasBranches:i,functions:s}}_getOutputPixelType(t){return\"unknown\"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return(t?.startsWith(\"u\")||t?.startsWith(\"s\"))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return\"rasters\"===t[0]?this.functionArguments.rasters??[]:t.map((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const s=this._getRasterValues(),{rasterInfos:e,rasterIds:r}=t;if(0===s.length)return e;const i=s.map((t=>t&&\"object\"==typeof t&&\"bind\"in t&&t.rasterInfo?t.rasterInfo:\"string\"==typeof t&&r.includes(t)?e[r.indexOf(t)]:\"number\"!=typeof t?e[0]:void 0)),n=i.find((t=>t))??e[0];return i.forEach(((t,s)=>{void 0===t&&(i[s]=n)})),i}_getPrimaryRasterId(t){return t?.url}_getPrimaryRasters(t,s=[],e=[]){for(let r=0;r<t.sourceRasters.length;r++){const i=t.sourceRasters[r];if(\"number\"!=typeof i)if(\"bind\"in i)this._getPrimaryRasters(i,s,e);else{const t=i,r=this._getPrimaryRasterId(t);if(null==r)continue;e.includes(r)||(this.mainPrimaryRasterId===r?(s.unshift(t),e.unshift(r)):(s.push(t),e.push(r)))}}}_isRasterFunctionValue(t){return null!=t&&\"object\"==typeof t&&\"getWebGLProcessorDefinition\"in t}_readRasterValue(t,s){const{primaryPixelBlocks:e}=s;if(r(t)||\"$$\"===t){const t=e[0];return r(t)?null:t.clone()}if(\"string\"==typeof t){const r=s.primaryRasterIds.indexOf(t);return-1===r?null:e[r]}if(\"number\"==typeof t){const s=e[0];if(r(s))return null;const{width:i,height:n,pixelType:o,mask:u}=s,p=u?new Uint8Array(u):null,l=new Float32Array(i*n);l.fill(t);const d=this.sourceRasterInfos[0].bandCount,c=new Array(d).fill(l);return new a({width:i,height:n,pixelType:o,pixels:c,mask:p})}return t.process(s)}};t([i({json:{write:!0}})],p.prototype,\"functionName\",void 0),t([i({json:{write:!0}})],p.prototype,\"functionArguments\",void 0),t([i()],p.prototype,\"rasterArgumentNames\",void 0),t([i({json:{write:!0}}),n((t=>t?.toLowerCase()))],p.prototype,\"outputPixelType\",void 0),t([i({json:{write:!0}})],p.prototype,\"mainPrimaryRasterId\",void 0),t([i()],p.prototype,\"sourceRasters\",void 0),t([i({type:[u],json:{write:!0}})],p.prototype,\"sourceRasterInfos\",void 0),t([i({json:{write:!0}})],p.prototype,\"rasterInfo\",void 0),t([i({json:{write:!0}})],p.prototype,\"readingBufferSize\",void 0),t([i({json:{write:!0}})],p.prototype,\"id\",void 0),t([i()],p.prototype,\"isNoopProcess\",void 0),t([i()],p.prototype,\"supportsGPU\",null),t([i()],p.prototype,\"rawInputBandIds\",void 0),t([i()],p.prototype,\"isInputBandIdsSwizzled\",void 0),t([i()],p.prototype,\"swizzledBandSelection\",void 0),t([i()],p.prototype,\"isBranch\",void 0),t([i()],p.prototype,\"_bindingResult\",void 0),p=t([o(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")],p);const l=p;export{l as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}