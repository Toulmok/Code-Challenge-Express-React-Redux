{"ast":null,"code":"/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request } from \"./request.js\";\n/**\n * Validates that the user has access to the application\n * and if they user should be presented a \"View Only\" mode\n *\n * This is only needed/valid for Esri applications that are \"licensed\"\n * and shipped in ArcGIS Online or ArcGIS Enterprise. Most custom applications\n * should not need or use this.\n *\n * ```js\n * import { validateAppAccess } from '@esri/arcgis-rest-request';\n *\n * return validateAppAccess('your-token', 'theClientId')\n * .then((result) => {\n *    if (!result.value) {\n *      // redirect or show some other ui\n *    } else {\n *      if (result.viewOnlyUserTypeApp) {\n *        // use this to inform your app to show a \"View Only\" mode\n *      }\n *    }\n * })\n * .catch((err) => {\n *  // two possible errors\n *  // invalid clientId: {\"error\":{\"code\":400,\"messageCode\":\"GWM_0007\",\"message\":\"Invalid request\",\"details\":[]}}\n *  // invalid token: {\"error\":{\"code\":498,\"message\":\"Invalid token.\",\"details\":[]}}\n * })\n * ```\n *\n * Note: This is only usable by Esri applications hosted on *arcgis.com, *esri.com or within\n * an ArcGIS Enterprise installation. Custom applications can not use this.\n *\n * @param token platform token\n * @param clientId application client id\n * @param portal Optional\n */\nexport function validateAppAccess(token, clientId) {\n  var portal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"https://www.arcgis.com/sharing/rest\";\n  var url = \"\".concat(portal, \"/oauth2/validateAppAccess\");\n  var ro = {\n    method: \"POST\",\n    params: {\n      f: \"json\",\n      client_id: clientId,\n      token: token\n    }\n  };\n  return request(url, ro);\n}","map":{"version":3,"names":["request","validateAppAccess","token","clientId","portal","arguments","length","undefined","url","concat","ro","method","params","f","client_id"],"sources":["C:\\code-challenge-react\\node_modules\\@esri\\arcgis-rest-request\\src\\validate-app-access.ts"],"sourcesContent":["/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request } from \"./request.js\";\nimport { IRequestOptions } from \"./utils/IRequestOptions.js\";\n\nexport interface IAppAccess {\n  /**\n   * Verifies that the token is valid and the user has access to\n   * the specified app (clientId)\n   */\n  valid: boolean;\n  /**\n   * Should the app present the current user with a \"View Only\" mode\n   */\n  viewOnlyUserTypeApp: boolean;\n}\n\n/**\n * Validates that the user has access to the application\n * and if they user should be presented a \"View Only\" mode\n *\n * This is only needed/valid for Esri applications that are \"licensed\"\n * and shipped in ArcGIS Online or ArcGIS Enterprise. Most custom applications\n * should not need or use this.\n *\n * ```js\n * import { validateAppAccess } from '@esri/arcgis-rest-request';\n *\n * return validateAppAccess('your-token', 'theClientId')\n * .then((result) => {\n *    if (!result.value) {\n *      // redirect or show some other ui\n *    } else {\n *      if (result.viewOnlyUserTypeApp) {\n *        // use this to inform your app to show a \"View Only\" mode\n *      }\n *    }\n * })\n * .catch((err) => {\n *  // two possible errors\n *  // invalid clientId: {\"error\":{\"code\":400,\"messageCode\":\"GWM_0007\",\"message\":\"Invalid request\",\"details\":[]}}\n *  // invalid token: {\"error\":{\"code\":498,\"message\":\"Invalid token.\",\"details\":[]}}\n * })\n * ```\n *\n * Note: This is only usable by Esri applications hosted on *arcgis.com, *esri.com or within\n * an ArcGIS Enterprise installation. Custom applications can not use this.\n *\n * @param token platform token\n * @param clientId application client id\n * @param portal Optional\n */\nexport function validateAppAccess(\n  token: string,\n  clientId: string,\n  portal = \"https://www.arcgis.com/sharing/rest\"\n): Promise<IAppAccess> {\n  const url = `${portal}/oauth2/validateAppAccess`;\n  const ro = {\n    method: \"POST\",\n    params: {\n      f: \"json\",\n      client_id: clientId,\n      token\n    }\n  } as IRequestOptions;\n  return request(url, ro);\n}\n"],"mappings":"AAAA;;AAGA,SAASA,OAAO,QAAQ,cAAc;AAetC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAM,SAAUC,iBAAiBA,CAC/BC,KAAa,EACbC,QAAgB,EAC8B;EAAA,IAA9CC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,qCAAqC;EAE9C,IAAMG,GAAG,MAAAC,MAAA,CAAML,MAAM,8BAA2B;EAChD,IAAMM,EAAE,GAAG;IACTC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE,MAAM;MACTC,SAAS,EAAEX,QAAQ;MACnBD,KAAK,EAALA;;GAEgB;EACpB,OAAOF,OAAO,CAACQ,GAAG,EAAEE,EAAE,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}