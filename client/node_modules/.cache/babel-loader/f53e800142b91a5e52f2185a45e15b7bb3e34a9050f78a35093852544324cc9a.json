{"ast":null,"code":"import _objectSpread from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from \"./TileInfo.js\";\nvar r = {\n  type: e,\n  json: {\n    origins: {\n      service: {\n        read: {\n          source: [\"tileInfo\", \"minScale\", \"maxScale\", \"minLOD\", \"maxLOD\"],\n          reader: n\n        }\n      }\n    }\n  }\n};\nfunction n(r, n, l, o) {\n  if (!r) return null;\n  var i = n.minScale,\n    t = n.maxScale,\n    m = n.minLOD,\n    s = n.maxLOD;\n  if (null != m && null != s) return o && o.ignoreMinMaxLOD ? e.fromJSON(r) : e.fromJSON(_objectSpread(_objectSpread({}, r), {}, {\n    lods: r.lods.filter(function (_ref) {\n      var e = _ref.level;\n      return null != e && e >= m && e <= s;\n    })\n  }));\n  if (0 !== i && 0 !== t) {\n    var _n = function _n(e) {\n        return Math.round(1e4 * e) / 1e4;\n      },\n      _l = i ? _n(i) : 1 / 0,\n      _o = t ? _n(t) : -1 / 0;\n    return e.fromJSON(_objectSpread(_objectSpread({}, r), {}, {\n      lods: r.lods.filter(function (e) {\n        var r = _n(e.scale);\n        return r <= _l && r >= _o;\n      })\n    }));\n  }\n  return e.fromJSON(r);\n}\nexport { n as readServiceTileInfo, r as serviceTileInfoProperty };","map":{"version":3,"names":["e","r","type","json","origins","service","read","source","reader","n","l","o","i","minScale","t","maxScale","m","minLOD","s","maxLOD","ignoreMinMaxLOD","fromJSON","_objectSpread","lods","filter","_ref","level","Math","round","scale","readServiceTileInfo","serviceTileInfoProperty"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/serviceTileInfoProperty.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"./TileInfo.js\";const r={type:e,json:{origins:{service:{read:{source:[\"tileInfo\",\"minScale\",\"maxScale\",\"minLOD\",\"maxLOD\"],reader:n}}}}};function n(r,n,l,o){if(!r)return null;const{minScale:i,maxScale:t,minLOD:m,maxLOD:s}=n;if(null!=m&&null!=s)return o&&o.ignoreMinMaxLOD?e.fromJSON(r):e.fromJSON({...r,lods:r.lods.filter((({level:e})=>null!=e&&e>=m&&e<=s))});if(0!==i&&0!==t){const n=e=>Math.round(1e4*e)/1e4,l=i?n(i):1/0,o=t?n(t):-1/0;return e.fromJSON({...r,lods:r.lods.filter((e=>{const r=n(e.scale);return r<=l&&r>=o}))})}return e.fromJSON(r)}export{n as readServiceTileInfo,r as serviceTileInfoProperty};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,eAAe;AAAC,IAAMC,CAAC,GAAC;EAACC,IAAI,EAACF,CAAC;EAACG,IAAI,EAAC;IAACC,OAAO,EAAC;MAACC,OAAO,EAAC;QAACC,IAAI,EAAC;UAACC,MAAM,EAAC,CAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,QAAQ,CAAC;UAACC,MAAM,EAACC;QAAC;MAAC;IAAC;EAAC;AAAC,CAAC;AAAC,SAASA,CAACA,CAACR,CAAC,EAACQ,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;EAAC,IAAG,CAACV,CAAC,EAAC,OAAO,IAAI;EAAC,IAAeW,CAAC,GAA+BH,CAAC,CAA1CI,QAAQ;IAAYC,CAAC,GAAoBL,CAAC,CAA/BM,QAAQ;IAAUC,CAAC,GAAWP,CAAC,CAApBQ,MAAM;IAAUC,CAAC,GAAET,CAAC,CAAXU,MAAM;EAAM,IAAG,IAAI,IAAEH,CAAC,IAAE,IAAI,IAAEE,CAAC,EAAC,OAAOP,CAAC,IAAEA,CAAC,CAACS,eAAe,GAACpB,CAAC,CAACqB,QAAQ,CAACpB,CAAC,CAAC,GAACD,CAAC,CAACqB,QAAQ,CAAAC,aAAA,CAAAA,aAAA,KAAKrB,CAAC;IAACsB,IAAI,EAACtB,CAAC,CAACsB,IAAI,CAACC,MAAM,CAAE,UAAAC,IAAA;MAAA,IAAQzB,CAAC,GAAAyB,IAAA,CAAPC,KAAK;MAAA,OAAM,IAAI,IAAE1B,CAAC,IAAEA,CAAC,IAAEgB,CAAC,IAAEhB,CAAC,IAAEkB,CAAC;IAAA;EAAE,GAAE;EAAC,IAAG,CAAC,KAAGN,CAAC,IAAE,CAAC,KAAGE,CAAC,EAAC;IAAC,IAAML,EAAC,GAAC,SAAFA,EAACA,CAACT,CAAC;QAAA,OAAE2B,IAAI,CAACC,KAAK,CAAC,GAAG,GAAC5B,CAAC,CAAC,GAAC,GAAG;MAAA;MAACU,EAAC,GAACE,CAAC,GAACH,EAAC,CAACG,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC;MAACD,EAAC,GAACG,CAAC,GAACL,EAAC,CAACK,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC;IAAC,OAAOd,CAAC,CAACqB,QAAQ,CAAAC,aAAA,CAAAA,aAAA,KAAKrB,CAAC;MAACsB,IAAI,EAACtB,CAAC,CAACsB,IAAI,CAACC,MAAM,CAAE,UAAAxB,CAAC,EAAE;QAAC,IAAMC,CAAC,GAACQ,EAAC,CAACT,CAAC,CAAC6B,KAAK,CAAC;QAAC,OAAO5B,CAAC,IAAES,EAAC,IAAET,CAAC,IAAEU,EAAC;MAAA,CAAC;IAAE,GAAE;EAAA;EAAC,OAAOX,CAAC,CAACqB,QAAQ,CAACpB,CAAC,CAAC;AAAA;AAAC,SAAOQ,CAAC,IAAIqB,mBAAmB,EAAC7B,CAAC,IAAI8B,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}