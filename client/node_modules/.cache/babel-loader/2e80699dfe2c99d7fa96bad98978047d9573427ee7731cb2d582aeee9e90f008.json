{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../../../geometry.js\";\nimport has from \"../../../../core/has.js\";\nimport t from \"../../../../core/Logger.js\";\nimport { deg2rad as e } from \"../../../../core/mathUtils.js\";\nimport { isNone as n, isSome as r } from \"../../../../core/maybe.js\";\nimport { throwIfAborted as o } from \"../../../../core/promiseUtils.js\";\nimport i from \"../../../../core/RandomLCG.js\";\nimport { getInfo as l } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport a from \"../../../../geometry/Extent.js\";\nconst s = t.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),\n  c = 10;\nasync function f(t, e, n, r) {\n  const i = performance.now(),\n    l = u(e, n),\n    a = performance.now(),\n    f = m(e, l, n.width, n.height),\n    h = performance.now(),\n    d = w(f, !0),\n    y = performance.now(),\n    x = \"Streamlines\" === t ? p(d, c) : g(d),\n    M = performance.now();\n  return has(\"esri-2d-profiler\") && (s.info(\"I.1\", \"_createFlowFieldFromData (ms)\", Math.round(a - i)), s.info(\"I.2\", \"_getStreamlines (ms)\", Math.round(h - a)), s.info(\"I.3\", \"createAnimatedLinesData (ms)\", Math.round(y - h)), s.info(\"I.4\", \"create{Streamlines|Particles}Mesh (ms)\", Math.round(M - y)), s.info(\"I.5\", \"createFlowMesh (ms)\", Math.round(M - i)), s.info(\"I.6\", \"Mesh size (bytes)\", x.vertexData.buffer.byteLength + x.indexData.buffer.byteLength)), await Promise.resolve(), o(r), x;\n}\nfunction u(t, e) {\n  const n = d(e.data, e.width, e.height, t.smoothing);\n  if (t.interpolate) {\n    return (t, r) => {\n      const o = Math.floor(t),\n        i = Math.floor(r);\n      if (o < 0 || o >= e.width) return [0, 0];\n      if (i < 0 || i >= e.height) return [0, 0];\n      const l = t - o,\n        a = r - i,\n        s = o,\n        c = i,\n        f = o < e.width - 1 ? o + 1 : o,\n        u = i < e.height - 1 ? i + 1 : i,\n        h = n[2 * (c * e.width + s)],\n        m = n[2 * (c * e.width + f)],\n        d = n[2 * (u * e.width + s)],\n        w = n[2 * (u * e.width + f)],\n        p = n[2 * (c * e.width + s) + 1],\n        g = n[2 * (c * e.width + f) + 1];\n      return [(h * (1 - a) + d * a) * (1 - l) + (m * (1 - a) + w * a) * l, (p * (1 - a) + n[2 * (u * e.width + s) + 1] * a) * (1 - l) + (g * (1 - a) + n[2 * (u * e.width + f) + 1] * a) * l];\n    };\n  }\n  return (t, r) => {\n    const o = Math.round(t),\n      i = Math.round(r);\n    return o < 0 || o >= e.width || i < 0 || i >= e.height ? [0, 0] : [n[2 * (i * e.width + o) + 0], n[2 * (i * e.width + o) + 1]];\n  };\n}\nfunction h(t, e, n, r, o, i, l, a, s) {\n  const c = [];\n  let f = n,\n    u = r,\n    h = 0,\n    [m, d] = e(f, u);\n  m *= t.velocityScale, d *= t.velocityScale;\n  const w = Math.sqrt(m * m + d * d);\n  let p, g;\n  c.push({\n    x: f,\n    y: u,\n    t: h,\n    speed: w\n  });\n  for (let y = 0; y < t.verticesPerLine; y++) {\n    let [n, r] = e(f, u);\n    n *= t.velocityScale, r *= t.velocityScale;\n    const m = Math.sqrt(n * n + r * r);\n    if (m < t.minSpeedThreshold) return c;\n    const d = n / m,\n      w = r / m;\n    f += d * t.segmentLength, u += w * t.segmentLength;\n    if (h += t.segmentLength / m, Math.acos(d * p + w * g) > t.maxTurnAngle) return c;\n    if (t.collisions) {\n      const t = Math.round(f * s),\n        e = Math.round(u * s);\n      if (t < 0 || t > l - 1 || e < 0 || e > a - 1) return c;\n      const n = i[e * l + t];\n      if (-1 !== n && n !== o) return c;\n      i[e * l + t] = o;\n    }\n    c.push({\n      x: f,\n      y: u,\n      t: h,\n      speed: m\n    }), p = d, g = w;\n  }\n  return c;\n}\nfunction m(t, e, n, r) {\n  const o = [],\n    l = new i(),\n    a = 1 / Math.max(t.lineCollisionWidth, 1),\n    s = Math.round(n * a),\n    c = Math.round(r * a),\n    f = new Int32Array(s * c);\n  for (let i = 0; i < f.length; i++) f[i] = -1;\n  const u = [];\n  for (let i = 0; i < r; i += t.lineSpacing) for (let e = 0; e < n; e += t.lineSpacing) u.push({\n    x: e,\n    y: i,\n    sort: l.getFloat()\n  });\n  u.sort((t, e) => t.sort - e.sort);\n  for (const {\n    x: i,\n    y: m\n  } of u) if (l.getFloat() < t.density) {\n    const n = h(t, e, i, m, o.length, f, s, c, a);\n    if (n.length < 2) continue;\n    o.push(n);\n  }\n  return o;\n}\nfunction d(t, e, n, r) {\n  if (0 === r) return t;\n  const o = Math.round(3 * r),\n    i = new Array(2 * o + 1);\n  let l = 0;\n  for (let c = -o; c <= o; c++) {\n    const t = Math.exp(-c * c / (r * r));\n    i[c + o] = t, l += t;\n  }\n  for (let c = -o; c <= o; c++) i[c + o] /= l;\n  const a = new Float32Array(t.length);\n  for (let c = 0; c < n; c++) for (let n = 0; n < e; n++) {\n    let r = 0,\n      l = 0;\n    for (let a = -o; a <= o; a++) {\n      if (n + a < 0 || n + a >= e) continue;\n      const s = i[a + o];\n      r += s * t[2 * (c * e + (n + a)) + 0], l += s * t[2 * (c * e + (n + a)) + 1];\n    }\n    a[2 * (c * e + n) + 0] = r, a[2 * (c * e + n) + 1] = l;\n  }\n  const s = new Float32Array(t.length);\n  for (let c = 0; c < e; c++) for (let t = 0; t < n; t++) {\n    let r = 0,\n      l = 0;\n    for (let s = -o; s <= o; s++) {\n      if (t + s < 0 || t + s >= n) continue;\n      const f = i[s + o];\n      r += f * a[2 * ((t + s) * e + c) + 0], l += f * a[2 * ((t + s) * e + c) + 1];\n    }\n    s[2 * (t * e + c) + 0] = r, s[2 * (t * e + c) + 1] = l;\n  }\n  return s;\n}\nfunction w(t, e) {\n  const n = new i(),\n    r = t.reduce((t, e) => t + e.length, 0),\n    o = new Float32Array(4 * r),\n    l = new Array(t.length);\n  let a = 0,\n    s = 0;\n  for (const i of t) {\n    const t = a;\n    for (const e of i) o[4 * a + 0] = e.x, o[4 * a + 1] = e.y, o[4 * a + 2] = e.t, o[4 * a + 3] = e.speed, a++;\n    l[s++] = {\n      startVertex: t,\n      numberOfVertices: i.length,\n      totalTime: i[i.length - 1].t,\n      timeSeed: e ? n.getFloat() : 0\n    };\n  }\n  return {\n    lineVertices: o,\n    lineDescriptors: l\n  };\n}\nfunction p(t, e) {\n  const n = 9,\n    {\n      lineVertices: r,\n      lineDescriptors: o\n    } = t;\n  let i = 0,\n    l = 0;\n  for (const m of o) {\n    i += 2 * m.numberOfVertices;\n    l += 6 * (m.numberOfVertices - 1);\n  }\n  const a = new Float32Array(i * n),\n    s = new Uint32Array(l);\n  let c = 0,\n    f = 0;\n  function u() {\n    s[f++] = c - 2, s[f++] = c, s[f++] = c - 1, s[f++] = c, s[f++] = c + 1, s[f++] = c - 1;\n  }\n  function h(t, e, r, o, i, l, s, f) {\n    const u = c * n;\n    let h = 0;\n    a[u + h++] = t, a[u + h++] = e, a[u + h++] = 1, a[u + h++] = r, a[u + h++] = l, a[u + h++] = s, a[u + h++] = o / 2, a[u + h++] = i / 2, a[u + h++] = f, c++, a[u + h++] = t, a[u + h++] = e, a[u + h++] = -1, a[u + h++] = r, a[u + h++] = l, a[u + h++] = s, a[u + h++] = -o / 2, a[u + h++] = -i / 2, a[u + h++] = f, c++;\n  }\n  for (const m of o) {\n    const {\n      totalTime: t,\n      timeSeed: n\n    } = m;\n    let o = null,\n      i = null,\n      l = null,\n      a = null,\n      s = null,\n      c = null;\n    for (let f = 0; f < m.numberOfVertices; f++) {\n      const d = r[4 * (m.startVertex + f) + 0],\n        w = r[4 * (m.startVertex + f) + 1],\n        p = r[4 * (m.startVertex + f) + 2],\n        g = r[4 * (m.startVertex + f) + 3];\n      let y = null,\n        x = null,\n        M = null,\n        A = null;\n      if (f > 0) {\n        y = d - o, x = w - i;\n        const r = Math.sqrt(y * y + x * x);\n        if (y /= r, x /= r, f > 1) {\n          let t = y + s,\n            n = x + c;\n          const r = Math.sqrt(t * t + n * n);\n          t /= r, n /= r;\n          const o = Math.min(1 / (t * y + n * x), e);\n          t *= o, n *= o, M = -n, A = t;\n        } else M = -x, A = y;\n        null !== M && null !== A && (h(o, i, l, M, A, t, n, g), u());\n      }\n      o = d, i = w, l = p, s = y, c = x, a = g;\n    }\n    h(o, i, l, -c, s, t, n, a);\n  }\n  return {\n    vertexData: a,\n    indexData: s\n  };\n}\nfunction g(t) {\n  const e = 16,\n    n = 1,\n    r = 2,\n    {\n      lineVertices: o,\n      lineDescriptors: i\n    } = t;\n  let l = 0,\n    a = 0;\n  for (const j of i) {\n    const t = j.numberOfVertices - 1;\n    l += 4 * t * 2, a += 6 * t * 2;\n  }\n  const s = new Float32Array(l * e),\n    c = new Uint32Array(a);\n  let f,\n    u,\n    h,\n    m,\n    d,\n    w,\n    p,\n    g,\n    y,\n    x,\n    M,\n    A,\n    I,\n    V,\n    F = 0,\n    D = 0;\n  function b() {\n    c[D++] = F - 8, c[D++] = F - 7, c[D++] = F - 6, c[D++] = F - 7, c[D++] = F - 5, c[D++] = F - 6, c[D++] = F - 4, c[D++] = F - 3, c[D++] = F - 2, c[D++] = F - 3, c[D++] = F - 1, c[D++] = F - 2;\n  }\n  function v(t, o, i, l, a, c, f, u, h, m, d, w, p, g) {\n    const y = F * e;\n    let x = 0;\n    for (const e of [n, r]) for (const n of [1, 2, 3, 4]) s[y + x++] = t, s[y + x++] = o, s[y + x++] = i, s[y + x++] = l, s[y + x++] = f, s[y + x++] = u, s[y + x++] = h, s[y + x++] = m, s[y + x++] = e, s[y + x++] = n, s[y + x++] = p, s[y + x++] = g, s[y + x++] = a / 2, s[y + x++] = c / 2, s[y + x++] = d / 2, s[y + x++] = w / 2, F++;\n  }\n  function S(t, e) {\n    let n = y + M,\n      r = x + A;\n    const o = Math.sqrt(n * n + r * r);\n    n /= o, r /= o;\n    const i = y * n + x * r;\n    n /= i, r /= i;\n    let l = M + I,\n      a = A + V;\n    const s = Math.sqrt(l * l + a * a);\n    l /= s, a /= s;\n    const c = M * l + A * a;\n    l /= c, a /= c, v(f, u, h, m, -r, n, d, w, p, g, -a, l, t, e), b();\n  }\n  function k(t, e, n, r, o, i) {\n    if (y = M, x = A, M = I, A = V, null == y && null == x && (y = M, x = A), null != d && null != w) {\n      I = t - d, V = e - w;\n      const n = Math.sqrt(I * I + V * V);\n      I /= n, V /= n;\n    }\n    null != y && null != x && S(o, i), f = d, u = w, h = p, m = g, d = t, w = e, p = n, g = r;\n  }\n  function L(t, e) {\n    y = M, x = A, M = I, A = V, null == y && null == x && (y = M, x = A), null != y && null != x && S(t, e);\n  }\n  for (const j of i) {\n    f = null, u = null, h = null, m = null, d = null, w = null, p = null, g = null, y = null, x = null, M = null, A = null, I = null, V = null;\n    const {\n      totalTime: t,\n      timeSeed: e\n    } = j;\n    for (let n = 0; n < j.numberOfVertices; n++) {\n      k(o[4 * (j.startVertex + n) + 0], o[4 * (j.startVertex + n) + 1], o[4 * (j.startVertex + n) + 2], o[4 * (j.startVertex + n) + 3], t, e);\n    }\n    L(t, e);\n  }\n  return {\n    vertexData: s,\n    indexData: c\n  };\n}\nfunction y(t, n) {\n  const r = n.pixels,\n    {\n      width: o,\n      height: i\n    } = n,\n    l = new Float32Array(o * i * 2),\n    a = n.mask || new Uint8Array(o * i * 2);\n  if (n.mask || a.fill(255), \"vector-uv\" === t) for (let e = 0; e < o * i; e++) l[2 * e + 0] = r[0][e], l[2 * e + 1] = -r[1][e];else if (\"vector-magdir\" === t) for (let s = 0; s < o * i; s++) {\n    const t = r[0][s],\n      n = e(r[1][s]),\n      o = Math.cos(n - Math.PI / 2),\n      i = Math.sin(n - Math.PI / 2);\n    l[2 * s + 0] = o * t, l[2 * s + 1] = i * t;\n  }\n  return {\n    data: l,\n    mask: a,\n    width: o,\n    height: i\n  };\n}\nasync function x(t, e, n, r, o, i) {\n  const c = performance.now(),\n    f = l(e.spatialReference);\n  if (!f) {\n    const l = await M(t, e, n, r, o, i);\n    return has(\"esri-2d-profiler\") && s.info(\"I.7\", \"loadImagery, early exit (ms)\", Math.round(performance.now() - c)), has(\"esri-2d-profiler\") && s.info(\"I.9\", \"Number of parts\", 1), l;\n  }\n  const [u, h] = f.valid,\n    m = h - u,\n    d = Math.ceil(e.width / m),\n    w = e.width / d,\n    p = Math.round(n / d);\n  let g = e.xmin;\n  const y = [],\n    x = performance.now();\n  for (let l = 0; l < d; l++) {\n    const n = new a({\n      xmin: g,\n      xmax: g + w,\n      ymin: e.ymin,\n      ymax: e.ymax,\n      spatialReference: e.spatialReference\n    });\n    y.push(M(t, n, p, r, o, i)), g += w;\n  }\n  const A = await Promise.all(y);\n  has(\"esri-2d-profiler\") && s.info(\"I.8\", \"All calls to _fetchPart (ms)\", Math.round(performance.now() - x)), has(\"esri-2d-profiler\") && s.info(\"I.9\", \"Number of parts\", A.length);\n  const I = {\n    data: new Float32Array(n * r * 2),\n    mask: new Uint8Array(n * r),\n    width: n,\n    height: r\n  };\n  let V = 0;\n  for (const l of A) {\n    for (let t = 0; t < l.height; t++) for (let e = 0; e < l.width; e++) V + e >= n || (I.data[2 * (t * n + V + e) + 0] = l.data[2 * (t * l.width + e) + 0], I.data[2 * (t * n + V + e) + 1] = l.data[2 * (t * l.width + e) + 1], I.mask[t * n + V + e] = l.mask[t * l.width + e]);\n    V += l.width;\n  }\n  return has(\"esri-2d-profiler\") && s.info(\"I.10\", \"loadImagery, general exit (ms)\", Math.round(performance.now() - c)), I;\n}\nasync function M(t, e, o, i, l, a) {\n  const s = {\n    requestProjectedLocalDirections: !0,\n    signal: a\n  };\n  if (r(l) && (s.timeExtent = l), \"imagery\" === t.type) {\n    await t.load({\n      signal: a\n    });\n    const r = t.rasterInfo.dataType,\n      l = await t.fetchImage(e, o, i, s);\n    return !l || n(l.pixelData) || n(l.pixelData.pixelBlock) ? {\n      data: new Float32Array(o * i * 2),\n      mask: new Uint8Array(o * i),\n      width: o,\n      height: i\n    } : y(r, l.pixelData.pixelBlock);\n  }\n  await t.load({\n    signal: a\n  });\n  const c = t.rasterInfo.dataType,\n    f = await t.fetchPixels(e, o, i, s);\n  return !f || n(f.pixelBlock) ? {\n    data: new Float32Array(o * i * 2),\n    mask: new Uint8Array(o * i),\n    width: o,\n    height: i\n  } : y(c, f.pixelBlock);\n}\nexport { w as createAnimatedLinesData, f as createFlowMesh, g as createParticlesMesh, p as createStreamlinesMesh, x as loadImagery };","map":{"version":3,"names":["has","t","deg2rad","e","isNone","n","isSome","r","throwIfAborted","o","i","getInfo","l","a","s","getLogger","c","f","performance","now","u","m","width","height","h","d","w","y","x","p","g","M","info","Math","round","vertexData","buffer","byteLength","indexData","Promise","resolve","data","smoothing","interpolate","floor","velocityScale","sqrt","push","speed","verticesPerLine","minSpeedThreshold","segmentLength","acos","maxTurnAngle","collisions","max","lineCollisionWidth","Int32Array","length","lineSpacing","sort","getFloat","density","Array","exp","Float32Array","reduce","startVertex","numberOfVertices","totalTime","timeSeed","lineVertices","lineDescriptors","Uint32Array","A","min","j","I","V","F","D","b","v","S","k","L","pixels","mask","Uint8Array","fill","cos","PI","sin","spatialReference","valid","ceil","xmin","xmax","ymin","ymax","all","requestProjectedLocalDirections","signal","timeExtent","type","load","rasterInfo","dataType","fetchImage","pixelData","pixelBlock","fetchPixels","createAnimatedLinesData","createFlowMesh","createParticlesMesh","createStreamlinesMesh","loadImagery"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../../geometry.js\";import has from\"../../../../core/has.js\";import t from\"../../../../core/Logger.js\";import{deg2rad as e}from\"../../../../core/mathUtils.js\";import{isNone as n,isSome as r}from\"../../../../core/maybe.js\";import{throwIfAborted as o}from\"../../../../core/promiseUtils.js\";import i from\"../../../../core/RandomLCG.js\";import{getInfo as l}from\"../../../../geometry/support/spatialReferenceUtils.js\";import a from\"../../../../geometry/Extent.js\";const s=t.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),c=10;async function f(t,e,n,r){const i=performance.now(),l=u(e,n),a=performance.now(),f=m(e,l,n.width,n.height),h=performance.now(),d=w(f,!0),y=performance.now(),x=\"Streamlines\"===t?p(d,c):g(d),M=performance.now();return has(\"esri-2d-profiler\")&&(s.info(\"I.1\",\"_createFlowFieldFromData (ms)\",Math.round(a-i)),s.info(\"I.2\",\"_getStreamlines (ms)\",Math.round(h-a)),s.info(\"I.3\",\"createAnimatedLinesData (ms)\",Math.round(y-h)),s.info(\"I.4\",\"create{Streamlines|Particles}Mesh (ms)\",Math.round(M-y)),s.info(\"I.5\",\"createFlowMesh (ms)\",Math.round(M-i)),s.info(\"I.6\",\"Mesh size (bytes)\",x.vertexData.buffer.byteLength+x.indexData.buffer.byteLength)),await Promise.resolve(),o(r),x}function u(t,e){const n=d(e.data,e.width,e.height,t.smoothing);if(t.interpolate){return(t,r)=>{const o=Math.floor(t),i=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(i<0||i>=e.height)return[0,0];const l=t-o,a=r-i,s=o,c=i,f=o<e.width-1?o+1:o,u=i<e.height-1?i+1:i,h=n[2*(c*e.width+s)],m=n[2*(c*e.width+f)],d=n[2*(u*e.width+s)],w=n[2*(u*e.width+f)],p=n[2*(c*e.width+s)+1],g=n[2*(c*e.width+f)+1];return[(h*(1-a)+d*a)*(1-l)+(m*(1-a)+w*a)*l,(p*(1-a)+n[2*(u*e.width+s)+1]*a)*(1-l)+(g*(1-a)+n[2*(u*e.width+f)+1]*a)*l]}}return(t,r)=>{const o=Math.round(t),i=Math.round(r);return o<0||o>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+o)+0],n[2*(i*e.width+o)+1]]}}function h(t,e,n,r,o,i,l,a,s){const c=[];let f=n,u=r,h=0,[m,d]=e(f,u);m*=t.velocityScale,d*=t.velocityScale;const w=Math.sqrt(m*m+d*d);let p,g;c.push({x:f,y:u,t:h,speed:w});for(let y=0;y<t.verticesPerLine;y++){let[n,r]=e(f,u);n*=t.velocityScale,r*=t.velocityScale;const m=Math.sqrt(n*n+r*r);if(m<t.minSpeedThreshold)return c;const d=n/m,w=r/m;f+=d*t.segmentLength,u+=w*t.segmentLength;if(h+=t.segmentLength/m,Math.acos(d*p+w*g)>t.maxTurnAngle)return c;if(t.collisions){const t=Math.round(f*s),e=Math.round(u*s);if(t<0||t>l-1||e<0||e>a-1)return c;const n=i[e*l+t];if(-1!==n&&n!==o)return c;i[e*l+t]=o}c.push({x:f,y:u,t:h,speed:m}),p=d,g=w}return c}function m(t,e,n,r){const o=[],l=new i,a=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*a),c=Math.round(r*a),f=new Int32Array(s*c);for(let i=0;i<f.length;i++)f[i]=-1;const u=[];for(let i=0;i<r;i+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)u.push({x:e,y:i,sort:l.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:i,y:m}of u)if(l.getFloat()<t.density){const n=h(t,e,i,m,o.length,f,s,c,a);if(n.length<2)continue;o.push(n)}return o}function d(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),i=new Array(2*o+1);let l=0;for(let c=-o;c<=o;c++){const t=Math.exp(-c*c/(r*r));i[c+o]=t,l+=t}for(let c=-o;c<=o;c++)i[c+o]/=l;const a=new Float32Array(t.length);for(let c=0;c<n;c++)for(let n=0;n<e;n++){let r=0,l=0;for(let a=-o;a<=o;a++){if(n+a<0||n+a>=e)continue;const s=i[a+o];r+=s*t[2*(c*e+(n+a))+0],l+=s*t[2*(c*e+(n+a))+1]}a[2*(c*e+n)+0]=r,a[2*(c*e+n)+1]=l}const s=new Float32Array(t.length);for(let c=0;c<e;c++)for(let t=0;t<n;t++){let r=0,l=0;for(let s=-o;s<=o;s++){if(t+s<0||t+s>=n)continue;const f=i[s+o];r+=f*a[2*((t+s)*e+c)+0],l+=f*a[2*((t+s)*e+c)+1]}s[2*(t*e+c)+0]=r,s[2*(t*e+c)+1]=l}return s}function w(t,e){const n=new i,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),l=new Array(t.length);let a=0,s=0;for(const i of t){const t=a;for(const e of i)o[4*a+0]=e.x,o[4*a+1]=e.y,o[4*a+2]=e.t,o[4*a+3]=e.speed,a++;l[s++]={startVertex:t,numberOfVertices:i.length,totalTime:i[i.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:l}}function p(t,e){const n=9,{lineVertices:r,lineDescriptors:o}=t;let i=0,l=0;for(const m of o){i+=2*m.numberOfVertices;l+=6*(m.numberOfVertices-1)}const a=new Float32Array(i*n),s=new Uint32Array(l);let c=0,f=0;function u(){s[f++]=c-2,s[f++]=c,s[f++]=c-1,s[f++]=c,s[f++]=c+1,s[f++]=c-1}function h(t,e,r,o,i,l,s,f){const u=c*n;let h=0;a[u+h++]=t,a[u+h++]=e,a[u+h++]=1,a[u+h++]=r,a[u+h++]=l,a[u+h++]=s,a[u+h++]=o/2,a[u+h++]=i/2,a[u+h++]=f,c++,a[u+h++]=t,a[u+h++]=e,a[u+h++]=-1,a[u+h++]=r,a[u+h++]=l,a[u+h++]=s,a[u+h++]=-o/2,a[u+h++]=-i/2,a[u+h++]=f,c++}for(const m of o){const{totalTime:t,timeSeed:n}=m;let o=null,i=null,l=null,a=null,s=null,c=null;for(let f=0;f<m.numberOfVertices;f++){const d=r[4*(m.startVertex+f)+0],w=r[4*(m.startVertex+f)+1],p=r[4*(m.startVertex+f)+2],g=r[4*(m.startVertex+f)+3];let y=null,x=null,M=null,A=null;if(f>0){y=d-o,x=w-i;const r=Math.sqrt(y*y+x*x);if(y/=r,x/=r,f>1){let t=y+s,n=x+c;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*y+n*x),e);t*=o,n*=o,M=-n,A=t}else M=-x,A=y;null!==M&&null!==A&&(h(o,i,l,M,A,t,n,g),u())}o=d,i=w,l=p,s=y,c=x,a=g}h(o,i,l,-c,s,t,n,a)}return{vertexData:a,indexData:s}}function g(t){const e=16,n=1,r=2,{lineVertices:o,lineDescriptors:i}=t;let l=0,a=0;for(const j of i){const t=j.numberOfVertices-1;l+=4*t*2,a+=6*t*2}const s=new Float32Array(l*e),c=new Uint32Array(a);let f,u,h,m,d,w,p,g,y,x,M,A,I,V,F=0,D=0;function b(){c[D++]=F-8,c[D++]=F-7,c[D++]=F-6,c[D++]=F-7,c[D++]=F-5,c[D++]=F-6,c[D++]=F-4,c[D++]=F-3,c[D++]=F-2,c[D++]=F-3,c[D++]=F-1,c[D++]=F-2}function v(t,o,i,l,a,c,f,u,h,m,d,w,p,g){const y=F*e;let x=0;for(const e of[n,r])for(const n of[1,2,3,4])s[y+x++]=t,s[y+x++]=o,s[y+x++]=i,s[y+x++]=l,s[y+x++]=f,s[y+x++]=u,s[y+x++]=h,s[y+x++]=m,s[y+x++]=e,s[y+x++]=n,s[y+x++]=p,s[y+x++]=g,s[y+x++]=a/2,s[y+x++]=c/2,s[y+x++]=d/2,s[y+x++]=w/2,F++}function S(t,e){let n=y+M,r=x+A;const o=Math.sqrt(n*n+r*r);n/=o,r/=o;const i=y*n+x*r;n/=i,r/=i;let l=M+I,a=A+V;const s=Math.sqrt(l*l+a*a);l/=s,a/=s;const c=M*l+A*a;l/=c,a/=c,v(f,u,h,m,-r,n,d,w,p,g,-a,l,t,e),b()}function k(t,e,n,r,o,i){if(y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=d&&null!=w){I=t-d,V=e-w;const n=Math.sqrt(I*I+V*V);I/=n,V/=n}null!=y&&null!=x&&S(o,i),f=d,u=w,h=p,m=g,d=t,w=e,p=n,g=r}function L(t,e){y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=y&&null!=x&&S(t,e)}for(const j of i){f=null,u=null,h=null,m=null,d=null,w=null,p=null,g=null,y=null,x=null,M=null,A=null,I=null,V=null;const{totalTime:t,timeSeed:e}=j;for(let n=0;n<j.numberOfVertices;n++){k(o[4*(j.startVertex+n)+0],o[4*(j.startVertex+n)+1],o[4*(j.startVertex+n)+2],o[4*(j.startVertex+n)+3],t,e)}L(t,e)}return{vertexData:s,indexData:c}}function y(t,n){const r=n.pixels,{width:o,height:i}=n,l=new Float32Array(o*i*2),a=n.mask||new Uint8Array(o*i*2);if(n.mask||a.fill(255),\"vector-uv\"===t)for(let e=0;e<o*i;e++)l[2*e+0]=r[0][e],l[2*e+1]=-r[1][e];else if(\"vector-magdir\"===t)for(let s=0;s<o*i;s++){const t=r[0][s],n=e(r[1][s]),o=Math.cos(n-Math.PI/2),i=Math.sin(n-Math.PI/2);l[2*s+0]=o*t,l[2*s+1]=i*t}return{data:l,mask:a,width:o,height:i}}async function x(t,e,n,r,o,i){const c=performance.now(),f=l(e.spatialReference);if(!f){const l=await M(t,e,n,r,o,i);return has(\"esri-2d-profiler\")&&s.info(\"I.7\",\"loadImagery, early exit (ms)\",Math.round(performance.now()-c)),has(\"esri-2d-profiler\")&&s.info(\"I.9\",\"Number of parts\",1),l}const[u,h]=f.valid,m=h-u,d=Math.ceil(e.width/m),w=e.width/d,p=Math.round(n/d);let g=e.xmin;const y=[],x=performance.now();for(let l=0;l<d;l++){const n=new a({xmin:g,xmax:g+w,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});y.push(M(t,n,p,r,o,i)),g+=w}const A=await Promise.all(y);has(\"esri-2d-profiler\")&&s.info(\"I.8\",\"All calls to _fetchPart (ms)\",Math.round(performance.now()-x)),has(\"esri-2d-profiler\")&&s.info(\"I.9\",\"Number of parts\",A.length);const I={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let V=0;for(const l of A){for(let t=0;t<l.height;t++)for(let e=0;e<l.width;e++)V+e>=n||(I.data[2*(t*n+V+e)+0]=l.data[2*(t*l.width+e)+0],I.data[2*(t*n+V+e)+1]=l.data[2*(t*l.width+e)+1],I.mask[t*n+V+e]=l.mask[t*l.width+e]);V+=l.width}return has(\"esri-2d-profiler\")&&s.info(\"I.10\",\"loadImagery, general exit (ms)\",Math.round(performance.now()-c)),I}async function M(t,e,o,i,l,a){const s={requestProjectedLocalDirections:!0,signal:a};if(r(l)&&(s.timeExtent=l),\"imagery\"===t.type){await t.load({signal:a});const r=t.rasterInfo.dataType,l=await t.fetchImage(e,o,i,s);return!l||n(l.pixelData)||n(l.pixelData.pixelBlock)?{data:new Float32Array(o*i*2),mask:new Uint8Array(o*i),width:o,height:i}:y(r,l.pixelData.pixelBlock)}await t.load({signal:a});const c=t.rasterInfo.dataType,f=await t.fetchPixels(e,o,i,s);return!f||n(f.pixelBlock)?{data:new Float32Array(o*i*2),mask:new Uint8Array(o*i),width:o,height:i}:y(c,f.pixelBlock)}export{w as createAnimatedLinesData,f as createFlowMesh,g as createParticlesMesh,p as createStreamlinesMesh,x as loadImagery};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}