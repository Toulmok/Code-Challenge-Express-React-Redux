{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport has from \"../../../../core/has.js\";\nimport { isNone as e, isSome as s } from \"../../../../core/maybe.js\";\nimport { diff as t, hasDiff as i } from \"../../../../core/accessorSupport/diffUtils.js\";\nimport { createRendererExpression as r } from \"../../../../support/arcadeOnDemand.js\";\nimport a from \"../../arcade/callExpressionWithCursor.js\";\nconst o = import(\"../../../../layers/support/labelFormatUtils.js\");\nclass c {\n  constructor(e, s) {\n    this._canCacheExpressionValue = !1, this._sourceInfo = e, this._storage = s, this._bitsets = {\n      computed: s.getBitset(s.createBitset())\n    };\n  }\n  get storage() {\n    return this._storage;\n  }\n  invalidate() {\n    this._bitsets.computed.clear();\n  }\n  async updateSchema(r, a) {\n    const o = t(this._schema, a);\n    if (this._schema = a, !a || e(o) || !i(o, \"attributes\")) return;\n    has(\"esri-2d-update-debug\") && console.debug(\"Applying Update - Store:\", o), this._bitsets.computed.clear(), r.targets[a.name] = !0;\n    const c = a.attributes,\n      n = [],\n      p = [];\n    for (const e in c) {\n      const s = c[e];\n      switch (s.type) {\n        case \"field\":\n          break;\n        case \"expression\":\n          n.push(this._createArcadeComputedField(s));\n          break;\n        case \"label-expression\":\n          n.push(this._createLabelArcadeComputedField(s));\n          break;\n        case \"statistic\":\n          p.push(s);\n      }\n    }\n    this._computedFields = await Promise.all(n), this._canCacheExpressionValue = !this._computedFields.some(e => \"expression\" === e.type && s(e.expression) && e.expression.referencesScale()), this._statisticFields = p;\n  }\n  setComputedAttributes(e, s, t, i) {\n    const r = this._bitsets.computed;\n    if (!this._canCacheExpressionValue || !r.has(t)) {\n      r.set(t);\n      for (const r of this._computedFields) {\n        const a = this._evaluateField(s, r, i);\n        switch (r.resultType) {\n          case \"numeric\":\n            e.setComputedNumericAtIndex(t, r.fieldIndex, a);\n            break;\n          case \"string\":\n            e.setComputedStringAtIndex(t, r.fieldIndex, a);\n        }\n      }\n    }\n  }\n  async _createArcadeComputedField(e) {\n    const s = this._sourceInfo.spatialReference,\n      t = this._sourceInfo.fieldsIndex;\n    return {\n      ...e,\n      expression: await r(e.valueExpression, s, t)\n    };\n  }\n  async _createLabelArcadeComputedField(e) {\n    const s = this._sourceInfo.spatialReference,\n      t = this._sourceInfo.fieldsIndex,\n      {\n        createLabelFunction: i\n      } = await o,\n      r = await i(e.label, t, s);\n    return {\n      ...e,\n      builder: r\n    };\n  }\n  _evaluateField(e, s, t) {\n    switch (s.type) {\n      case \"label-expression\":\n        {\n          const t = e.readArcadeFeature();\n          return s.builder.evaluate(t) || \"\";\n        }\n      case \"expression\":\n        {\n          const {\n            expression: i\n          } = s;\n          return a(i, e, {\n            $view: {\n              scale: t\n            }\n          });\n        }\n    }\n  }\n}\nexport { c as Store2D };","map":{"version":3,"names":["has","isNone","e","isSome","s","diff","t","hasDiff","i","createRendererExpression","r","a","o","c","constructor","_canCacheExpressionValue","_sourceInfo","_storage","_bitsets","computed","getBitset","createBitset","storage","invalidate","clear","updateSchema","_schema","console","debug","targets","name","attributes","n","p","type","push","_createArcadeComputedField","_createLabelArcadeComputedField","_computedFields","Promise","all","some","expression","referencesScale","_statisticFields","setComputedAttributes","set","_evaluateField","resultType","setComputedNumericAtIndex","fieldIndex","setComputedStringAtIndex","spatialReference","fieldsIndex","valueExpression","createLabelFunction","label","builder","readArcadeFeature","evaluate","$view","scale","Store2D"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/2d/layers/features/Store2D.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{isNone as e,isSome as s}from\"../../../../core/maybe.js\";import{diff as t,hasDiff as i}from\"../../../../core/accessorSupport/diffUtils.js\";import{createRendererExpression as r}from\"../../../../support/arcadeOnDemand.js\";import a from\"../../arcade/callExpressionWithCursor.js\";const o=import(\"../../../../layers/support/labelFormatUtils.js\");class c{constructor(e,s){this._canCacheExpressionValue=!1,this._sourceInfo=e,this._storage=s,this._bitsets={computed:s.getBitset(s.createBitset())}}get storage(){return this._storage}invalidate(){this._bitsets.computed.clear()}async updateSchema(r,a){const o=t(this._schema,a);if(this._schema=a,!a||e(o)||!i(o,\"attributes\"))return;has(\"esri-2d-update-debug\")&&console.debug(\"Applying Update - Store:\",o),this._bitsets.computed.clear(),r.targets[a.name]=!0;const c=a.attributes,n=[],p=[];for(const e in c){const s=c[e];switch(s.type){case\"field\":break;case\"expression\":n.push(this._createArcadeComputedField(s));break;case\"label-expression\":n.push(this._createLabelArcadeComputedField(s));break;case\"statistic\":p.push(s)}}this._computedFields=await Promise.all(n),this._canCacheExpressionValue=!this._computedFields.some((e=>\"expression\"===e.type&&s(e.expression)&&e.expression.referencesScale())),this._statisticFields=p}setComputedAttributes(e,s,t,i){const r=this._bitsets.computed;if(!this._canCacheExpressionValue||!r.has(t)){r.set(t);for(const r of this._computedFields){const a=this._evaluateField(s,r,i);switch(r.resultType){case\"numeric\":e.setComputedNumericAtIndex(t,r.fieldIndex,a);break;case\"string\":e.setComputedStringAtIndex(t,r.fieldIndex,a)}}}}async _createArcadeComputedField(e){const s=this._sourceInfo.spatialReference,t=this._sourceInfo.fieldsIndex;return{...e,expression:await r(e.valueExpression,s,t)}}async _createLabelArcadeComputedField(e){const s=this._sourceInfo.spatialReference,t=this._sourceInfo.fieldsIndex,{createLabelFunction:i}=await o,r=await i(e.label,t,s);return{...e,builder:r}}_evaluateField(e,s,t){switch(s.type){case\"label-expression\":{const t=e.readArcadeFeature();return s.builder.evaluate(t)||\"\"}case\"expression\":{const{expression:i}=s;return a(i,e,{$view:{scale:t}})}}}}export{c as Store2D};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}