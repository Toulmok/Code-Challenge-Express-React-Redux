{"ast":null,"code":"/**\n * Encodes a `Uint8Array` to base 64. Used internally for hashing the `code_verifier` and `code_challenge` for PKCE.\n */\nexport function base64UrlEncode(value) {\n  var win = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n  /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n  if (!win && window) {\n    win = window;\n  }\n  return win.btoa(String.fromCharCode.apply(null, value)).replace(/\\+/g, \"-\") // replace + with -\n  .replace(/\\//g, \"_\") // replace / with _\n  .replace(/=+$/, \"\"); // trim trailing =\n}","map":{"version":3,"names":["base64UrlEncode","value","win","arguments","length","undefined","window","btoa","String","fromCharCode","apply","replace"],"sources":["C:\\code-challenge-react\\node_modules\\@esri\\arcgis-rest-request\\src\\utils\\base-64-url.ts"],"sourcesContent":["/**\n * Encodes a `Uint8Array` to base 64. Used internally for hashing the `code_verifier` and `code_challenge` for PKCE.\n */\nexport function base64UrlEncode(value: any, win = window) {\n  /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n  if (!win && window) {\n    win = window;\n  }\n  return win\n    .btoa(String.fromCharCode.apply(null, value))\n    .replace(/\\+/g, \"-\") // replace + with -\n    .replace(/\\//g, \"_\") // replace / with _\n    .replace(/=+$/, \"\"); // trim trailing =\n}\n"],"mappings":"AAAA;;;AAGA,OAAM,SAAUA,eAAeA,CAACC,KAAU,EAAc;EAAA,IAAZC,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGG,MAAM;EACtD;EACA,IAAI,CAACJ,GAAG,IAAII,MAAM,EAAE;IAClBJ,GAAG,GAAGI,MAAM;;EAEd,OAAOJ,GAAG,CACPK,IAAI,CAACC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAET,KAAK,CAAC,CAAC,CAC5CU,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAAA,CACpBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAAA,CACpBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}