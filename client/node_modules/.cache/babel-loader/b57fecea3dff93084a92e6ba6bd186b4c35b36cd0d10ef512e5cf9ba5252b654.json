{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Collection.js\";\nimport i from \"../../../core/Logger.js\";\nimport { isSome as r, isNone as s } from \"../../../core/maybe.js\";\nimport { whenOnce as o } from \"../../../core/reactiveUtils.js\";\nimport { property as a } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as l } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { getTileMaxtrixSetFromActiveLayer as n } from \"../../../layers/support/layerUtils.js\";\nimport { LayerView3D as h } from \"./LayerView3D.js\";\nimport { TiledLayerView3D as d } from \"./TiledLayerView3D.js\";\nimport c from \"../../layers/LayerView.js\";\nimport m from \"../../layers/RefreshableLayerView.js\";\nlet p = class extends m(d(h(c))) {\n  constructor() {\n    super(...arguments), this.type = \"wmts-3d\";\n  }\n  get hasMixedImageFormats() {\n    return !0;\n  }\n  _getCompatibleTileInfoMatrixSet(e) {\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    const o = n(this.layer);\n    if (r(o)) {\n      if (t.isCollection(o)) {\n        const t = o.find(t => {\n          const o = e(t);\n          return r(o) && (s ? i.getLogger(this.declaredClass).error(\"The selected tile matrix set is not compatible with the view\", o) : this.addResolvingPromise(Promise.reject(o))), null == o;\n        });\n        return t;\n      }\n      const a = e(o);\n      return r(a) && (s ? i.getLogger(this.declaredClass).error(\"The selected tile matrix set is not compatible with the view\", a) : this.addResolvingPromise(Promise.reject(a))), o;\n    }\n    return null;\n  }\n  initialize() {\n    this._getCompatibleTileInfoMatrixSet(e => this._getTileInfoSupportError(e.tileInfo, e.fullExtent));\n    const e = o(() => this.view?.basemapTerrain?.tilingSchemeLocked).then(() => {\n      const e = this._getCompatibleTileInfoMatrixSet(e => this._getTileInfoError(e.tileInfo, e.fullExtent));\n      s(e) || (null !== e.id && this.layer.activeLayer.tileMatrixSetId !== e.id && (this.layer.activeLayer.tileMatrixSetId = e.id), e.tileInfo && (this.tileInfo = e.tileInfo), this.layer.fullExtent = e.fullExtent);\n    });\n    this.addResolvingPromise(e), this.when(() => this._postInitialize());\n  }\n  refresh() {\n    this.emit(\"data-changed\");\n  }\n  canResume() {\n    if (!super.canResume()) return !1;\n    const e = this.layer.activeLayer.tileMatrixSet;\n    return r(e) && !this._getTileInfoError(e.tileInfo, e.fullExtent);\n  }\n  async doRefresh() {\n    this.suspended || this.emit(\"data-changed\");\n  }\n  _postInitialize() {\n    this.updatingHandles.add(() => this.layer?.activeLayer?.styleId, () => this.refresh()), this.updatingHandles.add(() => this.layer?.activeLayer, e => {\n      const t = this._getCompatibleTileInfoMatrixSet(e => this._getTileInfoError(e.tileInfo, e.fullExtent), !0);\n      r(t) && null !== t.id && e.tileMatrixSetId !== t.id && (this.layer.activeLayer.tileMatrixSetId = t.id), this.notifyChange(\"suspended\"), this.canResume() && this.refresh();\n    });\n  }\n  _getTileInfoError(e, t) {\n    return this._getTileInfoSupportError(e, t) || this._getTileInfoCompatibilityError(e, this.view.basemapTerrain.tilingScheme);\n  }\n};\ne([a({\n  readOnly: !0\n})], p.prototype, \"hasMixedImageFormats\", null), e([a()], p.prototype, \"layer\", void 0), e([a()], p.prototype, \"suspended\", void 0), p = e([l(\"esri.views.3d.layers.WMTSLayerView3d\")], p);\nconst f = p;\nexport { f as default };","map":{"version":3,"names":["_","e","t","i","isSome","r","isNone","s","whenOnce","o","property","a","subclass","l","getTileMaxtrixSetFromActiveLayer","n","LayerView3D","h","TiledLayerView3D","d","c","m","p","constructor","arguments","type","hasMixedImageFormats","_getCompatibleTileInfoMatrixSet","length","undefined","layer","isCollection","find","getLogger","declaredClass","error","addResolvingPromise","Promise","reject","initialize","_getTileInfoSupportError","tileInfo","fullExtent","view","basemapTerrain","tilingSchemeLocked","then","_getTileInfoError","id","activeLayer","tileMatrixSetId","when","_postInitialize","refresh","emit","canResume","tileMatrixSet","doRefresh","suspended","updatingHandles","add","styleId","notifyChange","_getTileInfoCompatibilityError","tilingScheme","readOnly","prototype","f","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/layers/WMTSLayerView3D.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Collection.js\";import i from\"../../../core/Logger.js\";import{isSome as r,isNone as s}from\"../../../core/maybe.js\";import{whenOnce as o}from\"../../../core/reactiveUtils.js\";import{property as a}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as l}from\"../../../core/accessorSupport/decorators/subclass.js\";import{getTileMaxtrixSetFromActiveLayer as n}from\"../../../layers/support/layerUtils.js\";import{LayerView3D as h}from\"./LayerView3D.js\";import{TiledLayerView3D as d}from\"./TiledLayerView3D.js\";import c from\"../../layers/LayerView.js\";import m from\"../../layers/RefreshableLayerView.js\";let p=class extends(m(d(h(c)))){constructor(){super(...arguments),this.type=\"wmts-3d\"}get hasMixedImageFormats(){return!0}_getCompatibleTileInfoMatrixSet(e,s=!1){const o=n(this.layer);if(r(o)){if(t.isCollection(o)){const t=o.find((t=>{const o=e(t);return r(o)&&(s?i.getLogger(this.declaredClass).error(\"The selected tile matrix set is not compatible with the view\",o):this.addResolvingPromise(Promise.reject(o))),null==o}));return t}const a=e(o);return r(a)&&(s?i.getLogger(this.declaredClass).error(\"The selected tile matrix set is not compatible with the view\",a):this.addResolvingPromise(Promise.reject(a))),o}return null}initialize(){this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoSupportError(e.tileInfo,e.fullExtent)));const e=o((()=>this.view?.basemapTerrain?.tilingSchemeLocked)).then((()=>{const e=this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoError(e.tileInfo,e.fullExtent)));s(e)||(null!==e.id&&this.layer.activeLayer.tileMatrixSetId!==e.id&&(this.layer.activeLayer.tileMatrixSetId=e.id),e.tileInfo&&(this.tileInfo=e.tileInfo),this.layer.fullExtent=e.fullExtent)}));this.addResolvingPromise(e),this.when((()=>this._postInitialize()))}refresh(){this.emit(\"data-changed\")}canResume(){if(!super.canResume())return!1;const e=this.layer.activeLayer.tileMatrixSet;return r(e)&&!this._getTileInfoError(e.tileInfo,e.fullExtent)}async doRefresh(){this.suspended||this.emit(\"data-changed\")}_postInitialize(){this.updatingHandles.add((()=>this.layer?.activeLayer?.styleId),(()=>this.refresh())),this.updatingHandles.add((()=>this.layer?.activeLayer),(e=>{const t=this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoError(e.tileInfo,e.fullExtent)),!0);r(t)&&null!==t.id&&e.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),this.notifyChange(\"suspended\"),this.canResume()&&this.refresh()}))}_getTileInfoError(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)}};e([a({readOnly:!0})],p.prototype,\"hasMixedImageFormats\",null),e([a()],p.prototype,\"layer\",void 0),e([a()],p.prototype,\"suspended\",void 0),p=e([l(\"esri.views.3d.layers.WMTSLayerView3d\")],p);const f=p;export{f as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}