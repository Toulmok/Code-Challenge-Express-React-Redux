{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nconst i = 512;\nvar t, s;\n!function (i) {\n  i[i.Unknown = 0] = \"Unknown\", i[i.Point = 1] = \"Point\", i[i.LineString = 2] = \"LineString\", i[i.Polygon = 3] = \"Polygon\";\n}(t || (t = {}));\nclass h {\n  constructor(i, t) {\n    this.x = i, this.y = t;\n  }\n  clone() {\n    return new h(this.x, this.y);\n  }\n  equals(i, t) {\n    return i === this.x && t === this.y;\n  }\n  isEqual(i) {\n    return i.x === this.x && i.y === this.y;\n  }\n  setCoords(i, t) {\n    this.x = i, this.y = t;\n  }\n  normalize() {\n    const i = this.x,\n      t = this.y,\n      s = Math.sqrt(i * i + t * t);\n    this.x /= s, this.y /= s;\n  }\n  rightPerpendicular() {\n    const i = this.x;\n    this.x = this.y, this.y = -i;\n  }\n  move(i, t) {\n    this.x += i, this.y += t;\n  }\n  assign(i) {\n    this.x = i.x, this.y = i.y;\n  }\n  assignAdd(i, t) {\n    this.x = i.x + t.x, this.y = i.y + t.y;\n  }\n  assignSub(i, t) {\n    this.x = i.x - t.x, this.y = i.y - t.y;\n  }\n  rotate(i, t) {\n    const s = this.x,\n      h = this.y;\n    this.x = s * i - h * t, this.y = s * t + h * i;\n  }\n  scale(i) {\n    this.x *= i, this.y *= i;\n  }\n  length() {\n    const i = this.x,\n      t = this.y;\n    return Math.sqrt(i * i + t * t);\n  }\n  static distance(i, t) {\n    const s = t.x - i.x,\n      h = t.y - i.y;\n    return Math.sqrt(s * s + h * h);\n  }\n  static add(i, t) {\n    return new h(i.x + t.x, i.y + t.y);\n  }\n  static sub(i, t) {\n    return new h(i.x - t.x, i.y - t.y);\n  }\n}\nclass n {\n  constructor(i, t, s) {\n    this.ratio = i, this.x = t, this.y = s;\n  }\n}\nclass e {\n  constructor(t, s, h) {\n    let n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n    let e = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 8;\n    this._lines = [], this._starts = [], this.validateTessellation = !0, this._pixelRatio = n, this._pixelMargin = e, this._tileSize = i * n, this._dz = t, this._yPos = s, this._xPos = h;\n  }\n  setPixelMargin(i) {\n    i !== this._pixelMargin && (this._pixelMargin = i, this.setExtent(this._extent));\n  }\n  setExtent(i) {\n    this._extent = i, this._finalRatio = this._tileSize / i * (1 << this._dz);\n    let t = this._pixelRatio * this._pixelMargin;\n    t /= this._finalRatio;\n    const s = i >> this._dz;\n    t > s && (t = s), this._margin = t, this._xmin = s * this._xPos - t, this._ymin = s * this._yPos - t, this._xmax = this._xmin + s + 2 * t, this._ymax = this._ymin + s + 2 * t;\n  }\n  reset(i) {\n    this._type = i, this._lines = [], this._starts = [], this._line = null, this._start = 0;\n  }\n  moveTo(i, t) {\n    this._pushLine(), this._prevIsIn = this._isIn(i, t), this._moveTo(i, t, this._prevIsIn), this._prevPt = new h(i, t), this._firstPt = new h(i, t), this._dist = 0;\n  }\n  lineTo(i, t) {\n    const s = this._isIn(i, t),\n      e = new h(i, t),\n      _ = h.distance(this._prevPt, e);\n    let l, x, a, y, o, r, m, u;\n    if (s) this._prevIsIn ? this._lineTo(i, t, !0) : (l = this._prevPt, x = e, a = this._intersect(x, l), this._start = this._dist + _ * (1 - this._r), this._lineTo(a.x, a.y, !0), this._lineTo(x.x, x.y, !0));else if (this._prevIsIn) x = this._prevPt, l = e, a = this._intersect(x, l), this._lineTo(a.x, a.y, !0), this._lineTo(l.x, l.y, !1);else {\n      const i = this._prevPt,\n        t = e;\n      if (i.x <= this._xmin && t.x <= this._xmin || i.x >= this._xmax && t.x >= this._xmax || i.y <= this._ymin && t.y <= this._ymin || i.y >= this._ymax && t.y >= this._ymax) this._lineTo(t.x, t.y, !1);else {\n        const s = [];\n        if ((i.x < this._xmin && t.x > this._xmin || i.x > this._xmin && t.x < this._xmin) && (y = (this._xmin - i.x) / (t.x - i.x), u = i.y + y * (t.y - i.y), u <= this._ymin ? r = !1 : u >= this._ymax ? r = !0 : s.push(new n(y, this._xmin, u))), (i.x < this._xmax && t.x > this._xmax || i.x > this._xmax && t.x < this._xmax) && (y = (this._xmax - i.x) / (t.x - i.x), u = i.y + y * (t.y - i.y), u <= this._ymin ? r = !1 : u >= this._ymax ? r = !0 : s.push(new n(y, this._xmax, u))), (i.y < this._ymin && t.y > this._ymin || i.y > this._ymin && t.y < this._ymin) && (y = (this._ymin - i.y) / (t.y - i.y), m = i.x + y * (t.x - i.x), m <= this._xmin ? o = !1 : m >= this._xmax ? o = !0 : s.push(new n(y, m, this._ymin))), (i.y < this._ymax && t.y > this._ymax || i.y > this._ymax && t.y < this._ymax) && (y = (this._ymax - i.y) / (t.y - i.y), m = i.x + y * (t.x - i.x), m <= this._xmin ? o = !1 : m >= this._xmax ? o = !0 : s.push(new n(y, m, this._ymax))), 0 === s.length) o ? r ? this._lineTo(this._xmax, this._ymax, !0) : this._lineTo(this._xmax, this._ymin, !0) : r ? this._lineTo(this._xmin, this._ymax, !0) : this._lineTo(this._xmin, this._ymin, !0);else if (s.length > 1 && s[0].ratio > s[1].ratio) this._start = this._dist + _ * s[1].ratio, this._lineTo(s[1].x, s[1].y, !0), this._lineTo(s[0].x, s[0].y, !0);else {\n          this._start = this._dist + _ * s[0].ratio;\n          for (let i = 0; i < s.length; i++) this._lineTo(s[i].x, s[i].y, !0);\n        }\n        this._lineTo(t.x, t.y, !1);\n      }\n    }\n    this._dist += _, this._prevIsIn = s, this._prevPt = e;\n  }\n  close() {\n    if (this._line.length > 2) {\n      const i = this._firstPt,\n        t = this._prevPt;\n      i.x === t.x && i.y === t.y || this.lineTo(i.x, i.y);\n      const s = this._line;\n      let h = s.length;\n      for (; h >= 4 && (s[0].x === s[1].x && s[0].x === s[h - 2].x || s[0].y === s[1].y && s[0].y === s[h - 2].y);) s.pop(), s[0].x = s[h - 2].x, s[0].y = s[h - 2].y, --h;\n    }\n  }\n  result() {\n    let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;\n    return this._pushLine(), 0 === this._lines.length ? null : (this._type === t.Polygon && i && l.simplify(this._tileSize, this._margin * this._finalRatio, this._lines), this._lines);\n  }\n  resultWithStarts() {\n    if (this._type !== t.LineString) throw new Error(\"Only valid for lines\");\n    this._pushLine();\n    const i = this._lines,\n      s = i.length;\n    if (0 === s) return null;\n    const h = [];\n    for (let t = 0; t < s; t++) h.push({\n      line: i[t],\n      start: this._starts[t] || 0\n    });\n    return h;\n  }\n  _isIn(i, t) {\n    return i >= this._xmin && i <= this._xmax && t >= this._ymin && t <= this._ymax;\n  }\n  _intersect(i, t) {\n    let s, n, e;\n    if (t.x >= this._xmin && t.x <= this._xmax) n = t.y <= this._ymin ? this._ymin : this._ymax, e = (n - i.y) / (t.y - i.y), s = i.x + e * (t.x - i.x);else if (t.y >= this._ymin && t.y <= this._ymax) s = t.x <= this._xmin ? this._xmin : this._xmax, e = (s - i.x) / (t.x - i.x), n = i.y + e * (t.y - i.y);else {\n      n = t.y <= this._ymin ? this._ymin : this._ymax, s = t.x <= this._xmin ? this._xmin : this._xmax;\n      const h = (s - i.x) / (t.x - i.x),\n        _ = (n - i.y) / (t.y - i.y);\n      h < _ ? (e = h, n = i.y + h * (t.y - i.y)) : (e = _, s = i.x + _ * (t.x - i.x));\n    }\n    return this._r = e, new h(s, n);\n  }\n  _pushLine() {\n    this._line && (this._type === t.Point ? this._line.length > 0 && (this._lines.push(this._line), this._starts.push(this._start)) : this._type === t.LineString ? this._line.length > 1 && (this._lines.push(this._line), this._starts.push(this._start)) : this._type === t.Polygon && this._line.length > 3 && (this._lines.push(this._line), this._starts.push(this._start))), this._line = [], this._start = 0;\n  }\n  _moveTo(i, s, n) {\n    this._type !== t.Polygon ? n && (i = Math.round((i - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.push(new h(i, s))) : (n || (i < this._xmin && (i = this._xmin), i > this._xmax && (i = this._xmax), s < this._ymin && (s = this._ymin), s > this._ymax && (s = this._ymax)), i = Math.round((i - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.push(new h(i, s)), this._isH = !1, this._isV = !1);\n  }\n  _lineTo(i, s, n) {\n    let e, _;\n    if (this._type !== t.Polygon) {\n      if (n) {\n        if (i = Math.round((i - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.length > 0 && (e = this._line[this._line.length - 1], e.equals(i, s))) return;\n        this._line.push(new h(i, s));\n      } else this._line && this._line.length > 0 && this._pushLine();\n    } else if (n || (i < this._xmin && (i = this._xmin), i > this._xmax && (i = this._xmax), s < this._ymin && (s = this._ymin), s > this._ymax && (s = this._ymax)), i = Math.round((i - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line && this._line.length > 0) {\n      e = this._line[this._line.length - 1];\n      const t = e.x === i,\n        n = e.y === s;\n      if (t && n) return;\n      this._isH && t || this._isV && n ? (e.x = i, e.y = s, _ = this._line[this._line.length - 2], _.x === i && _.y === s ? (this._line.pop(), this._line.length <= 1 ? (this._isH = !1, this._isV = !1) : (_ = this._line[this._line.length - 2], this._isH = _.x === i, this._isV = _.y === s)) : (this._isH = _.x === i, this._isV = _.y === s)) : (this._line.push(new h(i, s)), this._isH = t, this._isV = n);\n    } else this._line.push(new h(i, s));\n  }\n}\nclass _ {\n  setExtent(i) {\n    this._ratio = 4096 === i ? 1 : 4096 / i;\n  }\n  get validateTessellation() {\n    return this._ratio < 1;\n  }\n  reset(i) {\n    this._lines = [], this._line = null;\n  }\n  moveTo(i, t) {\n    this._line && this._lines.push(this._line), this._line = [];\n    const s = this._ratio;\n    this._line.push(new h(i * s, t * s));\n  }\n  lineTo(i, t) {\n    const s = this._ratio;\n    this._line.push(new h(i * s, t * s));\n  }\n  close() {\n    const i = this._line;\n    i && !i[0].isEqual(i[i.length - 1]) && i.push(i[0]);\n  }\n  result() {\n    return this._line && this._lines.push(this._line), 0 === this._lines.length ? null : this._lines;\n  }\n}\n!function (i) {\n  i[i.sideLeft = 0] = \"sideLeft\", i[i.sideRight = 1] = \"sideRight\", i[i.sideTop = 2] = \"sideTop\", i[i.sideBottom = 3] = \"sideBottom\";\n}(s || (s = {}));\nclass l {\n  static simplify(i, t, h) {\n    if (!h) return;\n    const n = -t,\n      e = i + t,\n      _ = -t,\n      x = i + t,\n      a = [],\n      y = [],\n      o = h.length;\n    for (let l = 0; l < o; ++l) {\n      const i = h[l];\n      if (!i || i.length < 2) continue;\n      let t,\n        o = i[0];\n      const r = i.length;\n      for (let h = 1; h < r; ++h) t = i[h], o.x === t.x && (o.x <= n && (o.y > t.y ? (a.push(l), a.push(h), a.push(s.sideLeft), a.push(-1)) : (y.push(l), y.push(h), y.push(s.sideLeft), y.push(-1))), o.x >= e && (o.y < t.y ? (a.push(l), a.push(h), a.push(s.sideRight), a.push(-1)) : (y.push(l), y.push(h), y.push(s.sideRight), y.push(-1)))), o.y === t.y && (o.y <= _ && (o.x < t.x ? (a.push(l), a.push(h), a.push(s.sideTop), a.push(-1)) : (y.push(l), y.push(h), y.push(s.sideTop), y.push(-1))), o.y >= x && (o.x > t.x ? (a.push(l), a.push(h), a.push(s.sideBottom), a.push(-1)) : (y.push(l), y.push(h), y.push(s.sideBottom), y.push(-1)))), o = t;\n    }\n    if (0 === a.length || 0 === y.length) return;\n    l.fillParent(h, y, a), l.fillParent(h, a, y);\n    const r = [];\n    l.calcDeltas(r, y, a), l.calcDeltas(r, a, y), l.addDeltas(r, h);\n  }\n  static fillParent(i, t, h) {\n    const n = h.length,\n      e = t.length;\n    for (let _ = 0; _ < e; _ += 4) {\n      const e = t[_],\n        l = t[_ + 1],\n        a = t[_ + 2],\n        y = i[e][l - 1],\n        o = i[e][l];\n      let r = 8092,\n        m = -1;\n      for (let t = 0; t < n; t += 4) {\n        if (h[t + 2] !== a) continue;\n        const n = h[t],\n          e = h[t + 1],\n          _ = i[n][e - 1],\n          l = i[n][e];\n        switch (a) {\n          case s.sideLeft:\n          case s.sideRight:\n            if (x(y.y, _.y, l.y) && x(o.y, _.y, l.y)) {\n              const i = Math.abs(l.y - _.y);\n              i < r && (r = i, m = t);\n            }\n            break;\n          case s.sideTop:\n          case s.sideBottom:\n            if (x(y.x, _.x, l.x) && x(o.x, _.x, l.x)) {\n              const i = Math.abs(l.x - _.x);\n              i < r && (r = i, m = t);\n            }\n        }\n      }\n      t[_ + 3] = m;\n    }\n  }\n  static calcDeltas(i, t, s) {\n    const h = t.length;\n    for (let n = 0; n < h; n += 4) {\n      const h = [],\n        e = l.calcDelta(n, t, s, h);\n      i.push(t[n]), i.push(t[n + 1]), i.push(t[n + 2]), i.push(e);\n    }\n  }\n  static calcDelta(i, t, s, h) {\n    const n = t[i + 3];\n    if (-1 === n) return 0;\n    const e = h.length;\n    return e > 1 && h[e - 2] === n ? 0 : (h.push(n), l.calcDelta(n, s, t, h) + 1);\n  }\n  static addDeltas(i, t) {\n    const h = i.length;\n    let n = 0;\n    for (let s = 0; s < h; s += 4) {\n      const t = i[s + 3];\n      t > n && (n = t);\n    }\n    for (let e = 0; e < h; e += 4) {\n      const h = t[i[e]],\n        _ = i[e + 1],\n        l = n - i[e + 3];\n      switch (i[e + 2]) {\n        case s.sideLeft:\n          h[_ - 1].x -= l, h[_].x -= l, 1 === _ && (h[h.length - 1].x -= l), _ === h.length - 1 && (h[0].x -= l);\n          break;\n        case s.sideRight:\n          h[_ - 1].x += l, h[_].x += l, 1 === _ && (h[h.length - 1].x += l), _ === h.length - 1 && (h[0].x += l);\n          break;\n        case s.sideTop:\n          h[_ - 1].y -= l, h[_].y -= l, 1 === _ && (h[h.length - 1].y -= l), _ === h.length - 1 && (h[0].y -= l);\n          break;\n        case s.sideBottom:\n          h[_ - 1].y += l, h[_].y += l, 1 === _ && (h[h.length - 1].y += l), _ === h.length - 1 && (h[0].y += l);\n      }\n    }\n  }\n}\nconst x = (i, t, s) => i >= t && i <= s || i >= s && i <= t;\nexport { t as GeometryType, h as Point, _ as SimpleBuilder, e as TileClipper };","map":{"version":3,"names":["i","t","s","Unknown","Point","LineString","Polygon","h","constructor","x","y","clone","equals","isEqual","setCoords","normalize","Math","sqrt","rightPerpendicular","move","assign","assignAdd","assignSub","rotate","scale","length","distance","add","sub","n","ratio","e","arguments","undefined","_lines","_starts","validateTessellation","_pixelRatio","_pixelMargin","_tileSize","_dz","_yPos","_xPos","setPixelMargin","setExtent","_extent","_finalRatio","_margin","_xmin","_ymin","_xmax","_ymax","reset","_type","_line","_start","moveTo","_pushLine","_prevIsIn","_isIn","_moveTo","_prevPt","_firstPt","_dist","lineTo","_","l","a","o","r","m","u","_lineTo","_intersect","_r","push","close","pop","result","simplify","resultWithStarts","Error","line","start","round","_isH","_isV","_ratio","sideLeft","sideRight","sideTop","sideBottom","fillParent","calcDeltas","addDeltas","abs","calcDelta","GeometryType","SimpleBuilder","TileClipper"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/geometry/support/TileClipper.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nconst i=512;var t,s;!function(i){i[i.Unknown=0]=\"Unknown\",i[i.Point=1]=\"Point\",i[i.LineString=2]=\"LineString\",i[i.Polygon=3]=\"Polygon\"}(t||(t={}));class h{constructor(i,t){this.x=i,this.y=t}clone(){return new h(this.x,this.y)}equals(i,t){return i===this.x&&t===this.y}isEqual(i){return i.x===this.x&&i.y===this.y}setCoords(i,t){this.x=i,this.y=t}normalize(){const i=this.x,t=this.y,s=Math.sqrt(i*i+t*t);this.x/=s,this.y/=s}rightPerpendicular(){const i=this.x;this.x=this.y,this.y=-i}move(i,t){this.x+=i,this.y+=t}assign(i){this.x=i.x,this.y=i.y}assignAdd(i,t){this.x=i.x+t.x,this.y=i.y+t.y}assignSub(i,t){this.x=i.x-t.x,this.y=i.y-t.y}rotate(i,t){const s=this.x,h=this.y;this.x=s*i-h*t,this.y=s*t+h*i}scale(i){this.x*=i,this.y*=i}length(){const i=this.x,t=this.y;return Math.sqrt(i*i+t*t)}static distance(i,t){const s=t.x-i.x,h=t.y-i.y;return Math.sqrt(s*s+h*h)}static add(i,t){return new h(i.x+t.x,i.y+t.y)}static sub(i,t){return new h(i.x-t.x,i.y-t.y)}}class n{constructor(i,t,s){this.ratio=i,this.x=t,this.y=s}}class e{constructor(t,s,h,n=8,e=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=n,this._pixelMargin=e,this._tileSize=i*n,this._dz=t,this._yPos=s,this._xPos=h}setPixelMargin(i){i!==this._pixelMargin&&(this._pixelMargin=i,this.setExtent(this._extent))}setExtent(i){this._extent=i,this._finalRatio=this._tileSize/i*(1<<this._dz);let t=this._pixelRatio*this._pixelMargin;t/=this._finalRatio;const s=i>>this._dz;t>s&&(t=s),this._margin=t,this._xmin=s*this._xPos-t,this._ymin=s*this._yPos-t,this._xmax=this._xmin+s+2*t,this._ymax=this._ymin+s+2*t}reset(i){this._type=i,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(i,t){this._pushLine(),this._prevIsIn=this._isIn(i,t),this._moveTo(i,t,this._prevIsIn),this._prevPt=new h(i,t),this._firstPt=new h(i,t),this._dist=0}lineTo(i,t){const s=this._isIn(i,t),e=new h(i,t),_=h.distance(this._prevPt,e);let l,x,a,y,o,r,m,u;if(s)this._prevIsIn?this._lineTo(i,t,!0):(l=this._prevPt,x=e,a=this._intersect(x,l),this._start=this._dist+_*(1-this._r),this._lineTo(a.x,a.y,!0),this._lineTo(x.x,x.y,!0));else if(this._prevIsIn)x=this._prevPt,l=e,a=this._intersect(x,l),this._lineTo(a.x,a.y,!0),this._lineTo(l.x,l.y,!1);else{const i=this._prevPt,t=e;if(i.x<=this._xmin&&t.x<=this._xmin||i.x>=this._xmax&&t.x>=this._xmax||i.y<=this._ymin&&t.y<=this._ymin||i.y>=this._ymax&&t.y>=this._ymax)this._lineTo(t.x,t.y,!1);else{const s=[];if((i.x<this._xmin&&t.x>this._xmin||i.x>this._xmin&&t.x<this._xmin)&&(y=(this._xmin-i.x)/(t.x-i.x),u=i.y+y*(t.y-i.y),u<=this._ymin?r=!1:u>=this._ymax?r=!0:s.push(new n(y,this._xmin,u))),(i.x<this._xmax&&t.x>this._xmax||i.x>this._xmax&&t.x<this._xmax)&&(y=(this._xmax-i.x)/(t.x-i.x),u=i.y+y*(t.y-i.y),u<=this._ymin?r=!1:u>=this._ymax?r=!0:s.push(new n(y,this._xmax,u))),(i.y<this._ymin&&t.y>this._ymin||i.y>this._ymin&&t.y<this._ymin)&&(y=(this._ymin-i.y)/(t.y-i.y),m=i.x+y*(t.x-i.x),m<=this._xmin?o=!1:m>=this._xmax?o=!0:s.push(new n(y,m,this._ymin))),(i.y<this._ymax&&t.y>this._ymax||i.y>this._ymax&&t.y<this._ymax)&&(y=(this._ymax-i.y)/(t.y-i.y),m=i.x+y*(t.x-i.x),m<=this._xmin?o=!1:m>=this._xmax?o=!0:s.push(new n(y,m,this._ymax))),0===s.length)o?r?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):r?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this._start=this._dist+_*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this._start=this._dist+_*s[0].ratio;for(let i=0;i<s.length;i++)this._lineTo(s[i].x,s[i].y,!0)}this._lineTo(t.x,t.y,!1)}}this._dist+=_,this._prevIsIn=s,this._prevPt=e}close(){if(this._line.length>2){const i=this._firstPt,t=this._prevPt;i.x===t.x&&i.y===t.y||this.lineTo(i.x,i.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(i=!0){return this._pushLine(),0===this._lines.length?null:(this._type===t.Polygon&&i&&l.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==t.LineString)throw new Error(\"Only valid for lines\");this._pushLine();const i=this._lines,s=i.length;if(0===s)return null;const h=[];for(let t=0;t<s;t++)h.push({line:i[t],start:this._starts[t]||0});return h}_isIn(i,t){return i>=this._xmin&&i<=this._xmax&&t>=this._ymin&&t<=this._ymax}_intersect(i,t){let s,n,e;if(t.x>=this._xmin&&t.x<=this._xmax)n=t.y<=this._ymin?this._ymin:this._ymax,e=(n-i.y)/(t.y-i.y),s=i.x+e*(t.x-i.x);else if(t.y>=this._ymin&&t.y<=this._ymax)s=t.x<=this._xmin?this._xmin:this._xmax,e=(s-i.x)/(t.x-i.x),n=i.y+e*(t.y-i.y);else{n=t.y<=this._ymin?this._ymin:this._ymax,s=t.x<=this._xmin?this._xmin:this._xmax;const h=(s-i.x)/(t.x-i.x),_=(n-i.y)/(t.y-i.y);h<_?(e=h,n=i.y+h*(t.y-i.y)):(e=_,s=i.x+_*(t.x-i.x))}return this._r=e,new h(s,n)}_pushLine(){this._line&&(this._type===t.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===t.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===t.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(i,s,n){this._type!==t.Polygon?n&&(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(i,s))):(n||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(i,s)),this._isH=!1,this._isV=!1)}_lineTo(i,s,n){let e,_;if(this._type!==t.Polygon)if(n){if(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(e=this._line[this._line.length-1],e.equals(i,s)))return;this._line.push(new h(i,s))}else this._line&&this._line.length>0&&this._pushLine();else if(n||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){e=this._line[this._line.length-1];const t=e.x===i,n=e.y===s;if(t&&n)return;this._isH&&t||this._isV&&n?(e.x=i,e.y=s,_=this._line[this._line.length-2],_.x===i&&_.y===s?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(_=this._line[this._line.length-2],this._isH=_.x===i,this._isV=_.y===s)):(this._isH=_.x===i,this._isV=_.y===s)):(this._line.push(new h(i,s)),this._isH=t,this._isV=n)}else this._line.push(new h(i,s))}}class _{setExtent(i){this._ratio=4096===i?1:4096/i}get validateTessellation(){return this._ratio<1}reset(i){this._lines=[],this._line=null}moveTo(i,t){this._line&&this._lines.push(this._line),this._line=[];const s=this._ratio;this._line.push(new h(i*s,t*s))}lineTo(i,t){const s=this._ratio;this._line.push(new h(i*s,t*s))}close(){const i=this._line;i&&!i[0].isEqual(i[i.length-1])&&i.push(i[0])}result(){return this._line&&this._lines.push(this._line),0===this._lines.length?null:this._lines}}!function(i){i[i.sideLeft=0]=\"sideLeft\",i[i.sideRight=1]=\"sideRight\",i[i.sideTop=2]=\"sideTop\",i[i.sideBottom=3]=\"sideBottom\"}(s||(s={}));class l{static simplify(i,t,h){if(!h)return;const n=-t,e=i+t,_=-t,x=i+t,a=[],y=[],o=h.length;for(let l=0;l<o;++l){const i=h[l];if(!i||i.length<2)continue;let t,o=i[0];const r=i.length;for(let h=1;h<r;++h)t=i[h],o.x===t.x&&(o.x<=n&&(o.y>t.y?(a.push(l),a.push(h),a.push(s.sideLeft),a.push(-1)):(y.push(l),y.push(h),y.push(s.sideLeft),y.push(-1))),o.x>=e&&(o.y<t.y?(a.push(l),a.push(h),a.push(s.sideRight),a.push(-1)):(y.push(l),y.push(h),y.push(s.sideRight),y.push(-1)))),o.y===t.y&&(o.y<=_&&(o.x<t.x?(a.push(l),a.push(h),a.push(s.sideTop),a.push(-1)):(y.push(l),y.push(h),y.push(s.sideTop),y.push(-1))),o.y>=x&&(o.x>t.x?(a.push(l),a.push(h),a.push(s.sideBottom),a.push(-1)):(y.push(l),y.push(h),y.push(s.sideBottom),y.push(-1)))),o=t}if(0===a.length||0===y.length)return;l.fillParent(h,y,a),l.fillParent(h,a,y);const r=[];l.calcDeltas(r,y,a),l.calcDeltas(r,a,y),l.addDeltas(r,h)}static fillParent(i,t,h){const n=h.length,e=t.length;for(let _=0;_<e;_+=4){const e=t[_],l=t[_+1],a=t[_+2],y=i[e][l-1],o=i[e][l];let r=8092,m=-1;for(let t=0;t<n;t+=4){if(h[t+2]!==a)continue;const n=h[t],e=h[t+1],_=i[n][e-1],l=i[n][e];switch(a){case s.sideLeft:case s.sideRight:if(x(y.y,_.y,l.y)&&x(o.y,_.y,l.y)){const i=Math.abs(l.y-_.y);i<r&&(r=i,m=t)}break;case s.sideTop:case s.sideBottom:if(x(y.x,_.x,l.x)&&x(o.x,_.x,l.x)){const i=Math.abs(l.x-_.x);i<r&&(r=i,m=t)}}}t[_+3]=m}}static calcDeltas(i,t,s){const h=t.length;for(let n=0;n<h;n+=4){const h=[],e=l.calcDelta(n,t,s,h);i.push(t[n]),i.push(t[n+1]),i.push(t[n+2]),i.push(e)}}static calcDelta(i,t,s,h){const n=t[i+3];if(-1===n)return 0;const e=h.length;return e>1&&h[e-2]===n?0:(h.push(n),l.calcDelta(n,s,t,h)+1)}static addDeltas(i,t){const h=i.length;let n=0;for(let s=0;s<h;s+=4){const t=i[s+3];t>n&&(n=t)}for(let e=0;e<h;e+=4){const h=t[i[e]],_=i[e+1],l=n-i[e+3];switch(i[e+2]){case s.sideLeft:h[_-1].x-=l,h[_].x-=l,1===_&&(h[h.length-1].x-=l),_===h.length-1&&(h[0].x-=l);break;case s.sideRight:h[_-1].x+=l,h[_].x+=l,1===_&&(h[h.length-1].x+=l),_===h.length-1&&(h[0].x+=l);break;case s.sideTop:h[_-1].y-=l,h[_].y-=l,1===_&&(h[h.length-1].y-=l),_===h.length-1&&(h[0].y-=l);break;case s.sideBottom:h[_-1].y+=l,h[_].y+=l,1===_&&(h[h.length-1].y+=l),_===h.length-1&&(h[0].y+=l)}}}}const x=(i,t,s)=>i>=t&&i<=s||i>=s&&i<=t;export{t as GeometryType,h as Point,_ as SimpleBuilder,e as TileClipper};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}