{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { c as e } from \"../../../../../../chunks/vec4f64.js\";\nimport { area as o, width as r, height as t } from \"../../../../../../geometry/support/aaBoundingRect.js\";\nimport { OverlayIndex as a, RenderTargetType as i } from \"../../../../terrain/interfaces.js\";\nimport { OverlaySource as l } from \"../../../../terrain/Overlay.js\";\nimport { RenderPassIdentifier as d } from \"../../renderPasses/AllRenderPasses.js\";\nimport { ShaderOutput as s } from \"../ShaderOutput.js\";\nimport { addMainLightDirection as n, addMainLightIntensity as c } from \"../shading/MainLighting.glsl.js\";\nimport { PBRMode as v } from \"../shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { Water as x } from \"../shading/Water.glsl.js\";\nimport { textureSize as u, texelFetch as p } from \"../util/WebGL2Utils.js\";\nimport { Float4DrawUniform as f } from \"../../shaderModules/Float4DrawUniform.js\";\nimport { glsl as m } from \"../../shaderModules/interfaces.js\";\nimport { Texture2DPassUniform as y } from \"../../shaderModules/Texture2DPassUniform.js\";\nvar C;\nfunction g(e, o) {\n  const {\n    vertex: r,\n    fragment: t\n  } = e;\n  r.uniforms.add([new f(\"overlayTexOffset\", (e, o) => O(e, o)), new f(\"overlayTexScale\", (e, o) => T(e, o))]), t.constants.add(\"overlayOpacity\", \"float\", 1), t.uniforms.add(new y(\"ovColorTex\", (e, o) => b(e, o))), h(e, o);\n}\nfunction h(e, o) {\n  e.extensions.add(\"GL_OES_standard_derivatives\"), o.pbrMode !== v.Water && o.pbrMode !== v.WaterOnIntegratedMesh && o.pbrMode !== v.TerrainWithWater || e.include(x, o);\n  const {\n    vertex: r,\n    fragment: t\n  } = e;\n  e.varyings.add(\"vtcOverlay\", \"vec4\"), r.code.add(m`void setOverlayVTC(in vec2 uv) {\nvtcOverlay = vec4(uv, uv) * overlayTexScale + overlayTexOffset;\n}`), t.code.add(m`bool isValid(vec2 uv, vec2 dxdy) {\nreturn (uv.x >= 0.0 + dxdy.x) && (uv.x <= 1.0 - dxdy.x) && (uv.y >= 0.0 + dxdy.y) && (uv.y <= 1.0 - dxdy.y);\n}\nvec4 getOverlayColor(sampler2D ov0Tex, vec4 texCoords) {\nvec4 color0 = texture2D(ov0Tex, vec2(texCoords.x * 0.5, texCoords.y));\nvec4 color1 = texture2D(ov0Tex, vec2(texCoords.z * 0.5 + 0.5, texCoords.w));\nbool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\nbool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\nreturn mix(color1 * float(isValid1), color0, float(isValid0));\n}`), t.code.add(m`vec4 getCombinedOverlayColor() {\nreturn overlayOpacity * getOverlayColor(ovColorTex, vtcOverlay);\n}`), t.code.add(m`\n    vec4 getOverlayColorTexel(vec4 texCoords) {\n          vec2 texDim =  ${u(o, \"ovColorTex\")};\n\n          vec4 color0 = ${p(o, \"ovColorTex\", \"vec2(texCoords.x * 0.5, texCoords.y)*texDim\")};\n          vec4 color1 = ${p(o, \"ovColorTex\", \"vec2(texCoords.z * 0.5 + 0.5, texCoords.w)*texDim\")};\n\n          bool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\n          bool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\n\n          return mix(color1 * float(isValid1), color0, float(isValid0));\n    }\n  `), o.pbrMode !== v.Water && o.pbrMode !== v.WaterOnIntegratedMesh && o.pbrMode !== v.TerrainWithWater || (n(t), c(t), t.code.add(m`vec4 getOverlayWaterColor(vec4 maskInput, vec4 colorInput, vec3 vposEyeDir,\nfloat shadow, vec3 localUp, mat3 tbn, vec3 position, vec3 positionWorld) {\nvec3 n = normalize(tbn *  (2.0 * maskInput.rgb - vec3(1.0)));\nvec3 v = vposEyeDir;\nvec3 final = getSeaColor(n, v, mainLightDirection, colorInput.rgb, mainLightIntensity, localUp, 1.0 - shadow, maskInput.w, position, positionWorld);\nreturn vec4(final, colorInput.w);\n}`));\n}\nfunction b(e, o) {\n  return 0 === o.overlays.length ? null : e.identifier === d.Material && e.output === s.Color ? o.overlays[a.INNER].getColorTextureNoRasterImage() : e.identifier === d.Material && e.output === s.ObjectAndLayerIdColor ? o.overlays[a.INNER].getColorTexture(l.ObjectAndLayerIdColor) : e.identifier === d.Highlight ? o.overlays[a.INNER].getValidTexture(i.Highlight) : null;\n}\nfunction O(e, a) {\n  for (const i of a.overlays) {\n    const {\n      index: a,\n      extent: l\n    } = i;\n    o(l) > 0 && (M[2 * a] = e.toMapSpace[0] / r(l) - l[0] / r(l), M[2 * a + 1] = e.toMapSpace[1] / t(l) - l[1] / t(l));\n  }\n  return M;\n}\nfunction T(e, a) {\n  for (const i of a.overlays) {\n    const {\n      index: a,\n      extent: l\n    } = i;\n    o(l) > 0 && (M[2 * a] = e.toMapSpace[2] / r(l), M[2 * a + 1] = e.toMapSpace[3] / t(l));\n  }\n  return M;\n}\n!function (e) {\n  e[e.Disabled = 0] = \"Disabled\", e[e.Enabled = 1] = \"Enabled\", e[e.EnabledWithWater = 2] = \"EnabledWithWater\", e[e.COUNT = 3] = \"COUNT\";\n}(C || (C = {}));\nconst M = e();\nexport { g as OverlayIM, C as OverlayMode, b as getColorTexture, h as overlay };","map":{"version":3,"names":["c","e","area","o","width","r","height","t","OverlayIndex","a","RenderTargetType","i","OverlaySource","l","RenderPassIdentifier","d","ShaderOutput","s","addMainLightDirection","n","addMainLightIntensity","PBRMode","v","Water","x","textureSize","u","texelFetch","p","Float4DrawUniform","f","glsl","m","Texture2DPassUniform","y","C","g","vertex","fragment","uniforms","add","O","T","constants","b","h","extensions","pbrMode","WaterOnIntegratedMesh","TerrainWithWater","include","varyings","code","overlays","length","identifier","Material","output","Color","INNER","getColorTextureNoRasterImage","ObjectAndLayerIdColor","getColorTexture","Highlight","getValidTexture","index","extent","M","toMapSpace","Disabled","Enabled","EnabledWithWater","COUNT","OverlayIM","OverlayMode","overlay"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{c as e}from\"../../../../../../chunks/vec4f64.js\";import{area as o,width as r,height as t}from\"../../../../../../geometry/support/aaBoundingRect.js\";import{OverlayIndex as a,RenderTargetType as i}from\"../../../../terrain/interfaces.js\";import{OverlaySource as l}from\"../../../../terrain/Overlay.js\";import{RenderPassIdentifier as d}from\"../../renderPasses/AllRenderPasses.js\";import{ShaderOutput as s}from\"../ShaderOutput.js\";import{addMainLightDirection as n,addMainLightIntensity as c}from\"../shading/MainLighting.glsl.js\";import{PBRMode as v}from\"../shading/PhysicallyBasedRenderingParameters.glsl.js\";import{Water as x}from\"../shading/Water.glsl.js\";import{textureSize as u,texelFetch as p}from\"../util/WebGL2Utils.js\";import{Float4DrawUniform as f}from\"../../shaderModules/Float4DrawUniform.js\";import{glsl as m}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as y}from\"../../shaderModules/Texture2DPassUniform.js\";var C;function g(e,o){const{vertex:r,fragment:t}=e;r.uniforms.add([new f(\"overlayTexOffset\",((e,o)=>O(e,o))),new f(\"overlayTexScale\",((e,o)=>T(e,o)))]),t.constants.add(\"overlayOpacity\",\"float\",1),t.uniforms.add(new y(\"ovColorTex\",((e,o)=>b(e,o)))),h(e,o)}function h(e,o){e.extensions.add(\"GL_OES_standard_derivatives\"),o.pbrMode!==v.Water&&o.pbrMode!==v.WaterOnIntegratedMesh&&o.pbrMode!==v.TerrainWithWater||e.include(x,o);const{vertex:r,fragment:t}=e;e.varyings.add(\"vtcOverlay\",\"vec4\"),r.code.add(m`void setOverlayVTC(in vec2 uv) {\nvtcOverlay = vec4(uv, uv) * overlayTexScale + overlayTexOffset;\n}`),t.code.add(m`bool isValid(vec2 uv, vec2 dxdy) {\nreturn (uv.x >= 0.0 + dxdy.x) && (uv.x <= 1.0 - dxdy.x) && (uv.y >= 0.0 + dxdy.y) && (uv.y <= 1.0 - dxdy.y);\n}\nvec4 getOverlayColor(sampler2D ov0Tex, vec4 texCoords) {\nvec4 color0 = texture2D(ov0Tex, vec2(texCoords.x * 0.5, texCoords.y));\nvec4 color1 = texture2D(ov0Tex, vec2(texCoords.z * 0.5 + 0.5, texCoords.w));\nbool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\nbool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\nreturn mix(color1 * float(isValid1), color0, float(isValid0));\n}`),t.code.add(m`vec4 getCombinedOverlayColor() {\nreturn overlayOpacity * getOverlayColor(ovColorTex, vtcOverlay);\n}`),t.code.add(m`\n    vec4 getOverlayColorTexel(vec4 texCoords) {\n          vec2 texDim =  ${u(o,\"ovColorTex\")};\n\n          vec4 color0 = ${p(o,\"ovColorTex\",\"vec2(texCoords.x * 0.5, texCoords.y)*texDim\")};\n          vec4 color1 = ${p(o,\"ovColorTex\",\"vec2(texCoords.z * 0.5 + 0.5, texCoords.w)*texDim\")};\n\n          bool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\n          bool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\n\n          return mix(color1 * float(isValid1), color0, float(isValid0));\n    }\n  `),o.pbrMode!==v.Water&&o.pbrMode!==v.WaterOnIntegratedMesh&&o.pbrMode!==v.TerrainWithWater||(n(t),c(t),t.code.add(m`vec4 getOverlayWaterColor(vec4 maskInput, vec4 colorInput, vec3 vposEyeDir,\nfloat shadow, vec3 localUp, mat3 tbn, vec3 position, vec3 positionWorld) {\nvec3 n = normalize(tbn *  (2.0 * maskInput.rgb - vec3(1.0)));\nvec3 v = vposEyeDir;\nvec3 final = getSeaColor(n, v, mainLightDirection, colorInput.rgb, mainLightIntensity, localUp, 1.0 - shadow, maskInput.w, position, positionWorld);\nreturn vec4(final, colorInput.w);\n}`))}function b(e,o){return 0===o.overlays.length?null:e.identifier===d.Material&&e.output===s.Color?o.overlays[a.INNER].getColorTextureNoRasterImage():e.identifier===d.Material&&e.output===s.ObjectAndLayerIdColor?o.overlays[a.INNER].getColorTexture(l.ObjectAndLayerIdColor):e.identifier===d.Highlight?o.overlays[a.INNER].getValidTexture(i.Highlight):null}function O(e,a){for(const i of a.overlays){const{index:a,extent:l}=i;o(l)>0&&(M[2*a]=e.toMapSpace[0]/r(l)-l[0]/r(l),M[2*a+1]=e.toMapSpace[1]/t(l)-l[1]/t(l))}return M}function T(e,a){for(const i of a.overlays){const{index:a,extent:l}=i;o(l)>0&&(M[2*a]=e.toMapSpace[2]/r(l),M[2*a+1]=e.toMapSpace[3]/t(l))}return M}!function(e){e[e.Disabled=0]=\"Disabled\",e[e.Enabled=1]=\"Enabled\",e[e.EnabledWithWater=2]=\"EnabledWithWater\",e[e.COUNT=3]=\"COUNT\"}(C||(C={}));const M=e();export{g as OverlayIM,C as OverlayMode,b as getColorTexture,h as overlay};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}