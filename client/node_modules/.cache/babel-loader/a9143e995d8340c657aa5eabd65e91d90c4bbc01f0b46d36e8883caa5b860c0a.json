{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\query-table-tabulator.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n//import 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap4.min.css\"; // use Theme(s)\nimport { ReactTabulator } from 'react-tabulator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class QueryTableTabulator extends React.Component {\n  constructor(props) {\n    var _this$props$userTags;\n    super(props);\n    this.ref = null;\n    this.columns = [\n    //ColumnDefinition[] = [\n    {\n      rowHandle: true,\n      formatter: \"handle\",\n      headerSort: false,\n      frozen: true,\n      width: 30,\n      minWidth: 30\n    }, {\n      title: \"Title\",\n      field: \"title\"\n    }, {\n      title: \"Created\",\n      field: \"created\"\n    }, {\n      title: \"Tags\",\n      field: \"tags\",\n      editorParams: {\n        values: (_this$props$userTags = this.props.userTags) === null || _this$props$userTags === void 0 ? void 0 : _this$props$userTags.map(_ref => {\n          let {\n            tag\n          } = _ref;\n          return tag;\n        })\n      },\n      formatterParams: {\n        style: \"PILL\"\n      }\n    }];\n    this.rowClick = (e, row) => {\n      this.setState({\n        selectedTitle: row.getData().title\n      });\n    };\n    this.setData = () => {\n      this.setState(this.props.userItems);\n    };\n    this.clearData = () => {\n      this.setState([]);\n    };\n    this.state = {\n      selectedTitle: \"\"\n    };\n  }\n  render() {\n    console.log(\"query-table-tabulator\");\n    const options = {\n      movableRows: true,\n      movableColumns: true,\n      selectable: true,\n      //rowClick: (e:any, row:any) => { this.setState({ selectedTitle: row.getData().title }) }\n      layout: \"fitDataTable\",\n      pagination: \"local\",\n      paginationCounter: \"rows\",\n      paginationSize: 100,\n      paginationInitialPage: 1,\n      paginationSizeSelector: [10, 20, 50, 100]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactTabulator\n      //onRef={(r) => (this.ref = r)}\n      , {\n        columns: this.columns,\n        data: this.props.userItems,\n        options: options\n        //events={{ rowClick: this.rowClick }}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n}\nQueryTableTabulator.defaultProps = {\n  userItems: [{\n    id: ''\n  }]\n};\nconst mapStateToProps = _ref2 => {\n  let {\n    query: {\n      userItems,\n      userTags\n    }\n  } = _ref2;\n  return {\n    userItems,\n    userTags\n  };\n};\nexport default connect(mapStateToProps)(QueryTableTabulator);","map":{"version":3,"names":["React","connect","ReactTabulator","jsxDEV","_jsxDEV","QueryTableTabulator","Component","constructor","props","_this$props$userTags","ref","columns","rowHandle","formatter","headerSort","frozen","width","minWidth","title","field","editorParams","values","userTags","map","_ref","tag","formatterParams","style","rowClick","e","row","setState","selectedTitle","getData","setData","userItems","clearData","state","render","console","log","options","movableRows","movableColumns","selectable","layout","pagination","paginationCounter","paginationSize","paginationInitialPage","paginationSizeSelector","children","data","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","id","mapStateToProps","_ref2","query"],"sources":["C:/code-challenge-react/frontend/src/components/main/query-table-tabulator.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n//import 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap4.min.css\"; // use Theme(s)\nimport { ColumnDefinition, ReactTabulator } from 'react-tabulator'\n\ninterface Item {\n  id: string,\n  title?: string,\n  created?: Date,\n  tags?: string[],\n}\n\ninterface Tags {\n  tag: string,\n  count: number,\n}\n\ninterface ItemProps {\n  userItems: Item[],\n  userTags?: Tags[],\n}\n\nexport class QueryTableTabulator extends React.Component <ItemProps, any> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      selectedTitle: \"\"\n    }\n  }\n  \n  ref = null\n  public static defaultProps = { userItems: [{id:'',}], }\n\n  columns: any[] = [ //ColumnDefinition[] = [\n    {rowHandle:true, formatter:\"handle\", headerSort:false, frozen:true, width:30, minWidth:30},\n    { title: \"Title\", field: \"title\", },\n    { title: \"Created\", field: \"created\", },\n    { title: \"Tags\", field: \"tags\", \n      editorParams: { values: this.props.userTags?.map(({tag}) => tag )},\n      formatterParams: { style: \"PILL\" }\n    \n    },\n  ]\n\n  rowClick = (e:any, row:any) => { this.setState({ selectedTitle: row.getData().title }) }\n  setData = () => { this.setState( this.props.userItems )}\n  clearData = () => { this.setState( [] )}\n\n  render() { console.log(\"query-table-tabulator\")\n    const options = {\n      movableRows: true,\n      movableColumns: true,\n      selectable: true,\n      //rowClick: (e:any, row:any) => { this.setState({ selectedTitle: row.getData().title }) }\n      layout: \"fitDataTable\",\n      pagination: \"local\",\n        paginationCounter: \"rows\",\n        paginationSize: 100,\n        paginationInitialPage: 1,\n        paginationSizeSelector: [10,20,50,100],\n    }\n\n    return (\n      <div>\n        <ReactTabulator \n          //onRef={(r) => (this.ref = r)}\n          columns={this.columns}\n          data={this.props.userItems} \n          options={options}\n          //events={{ rowClick: this.rowClick }}\n          \n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems, userTags }}:any) => ({\n  userItems,\n  userTags\n})\n\nexport default connect(mapStateToProps, )(QueryTableTabulator)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}