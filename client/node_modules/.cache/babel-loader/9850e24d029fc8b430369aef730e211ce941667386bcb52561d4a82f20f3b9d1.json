{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { g as guid } from './guid.js';\nconst autoMode = \"calcite-mode-auto\";\nconst darkMode = \"calcite-mode-dark\";\nconst lightMode = \"calcite-mode-light\";\nconst CSS_UTILITY = {\n  autoMode,\n  darkMode,\n  lightMode,\n  rtl: \"calcite--rtl\"\n};\n\n/*!\n* tabbable 6.0.1\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]:not(slot)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])', 'details>summary:first-of-type', 'details'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode$1 = !NoElement && Element.prototype.getRootNode ? function (element) {\n  return element.getRootNode();\n} : function (element) {\n  return element.ownerDocument;\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n      var validShadowRoot = !options.shadowRootFilter || options.shadowRootFilter(element);\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\nvar getTabindex = function getTabindex(node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if ((isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || node.isContentEditable) && isNaN(parseInt(node.getAttribute('tabindex'), 10))) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode$1(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRootHost;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  var nodeRootHost = getRootNode$1(node).host;\n  var attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && _nodeRootHost.ownerDocument.contains(nodeRootHost) || node.ownerDocument.contains(node));\n  while (!attached && nodeRootHost) {\n    var _nodeRootHost2;\n    // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n    //  which means we need to get the host's host and check if that parent host is contained\n    //  in (i.e. attached to) the document\n    nodeRootHost = getRootNode$1(nodeRootHost).host;\n    attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && _nodeRootHost2.ownerDocument.contains(nodeRootHost));\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode$1(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getTabindex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\nconst tabbableOptions = {\n  getShadowRoot: true\n};\n/**\n * This helper will guarantee an ID on the provided element.\n *\n * If it already has an ID, it will be preserved, otherwise a unique one will be generated and assigned.\n *\n * @param el\n * @returns {string} The element's ID.\n */\nfunction ensureId(el) {\n  if (!el) {\n    return \"\";\n  }\n  return el.id = el.id || `${el.tagName.toLowerCase()}-${guid()}`;\n}\nfunction nodeListToArray(nodeList) {\n  return Array.isArray(nodeList) ? nodeList : Array.from(nodeList);\n}\nfunction getModeName(el) {\n  const closestElWithMode = closestElementCrossShadowBoundary(el, `.${CSS_UTILITY.darkMode}, .${CSS_UTILITY.lightMode}`);\n  return closestElWithMode?.classList.contains(\"calcite-mode-dark\") ? \"dark\" : \"light\";\n}\nfunction getElementDir(el) {\n  const prop = \"dir\";\n  const selector = `[${prop}]`;\n  const closest = closestElementCrossShadowBoundary(el, selector);\n  return closest ? closest.getAttribute(prop) : \"ltr\";\n}\nfunction getElementProp(el, prop, fallbackValue) {\n  const selector = `[${prop}]`;\n  const closest = el.closest(selector);\n  return closest ? closest.getAttribute(prop) : fallbackValue;\n}\nfunction getRootNode(el) {\n  return el.getRootNode();\n}\nfunction getHost(root) {\n  return root.host || null;\n}\n/**\n * This helper queries an element's rootNode and any ancestor rootNodes.\n *\n * If both an 'id' and 'selector' are supplied, 'id' will take precedence over 'selector'.\n *\n * @param element\n * @param root0\n * @param root0.selector\n * @param root0.id\n * @returns {Element} The element.\n */\nfunction queryElementRoots(element, _ref2) {\n  let {\n    selector,\n    id\n  } = _ref2;\n  // Gets the rootNode and any ancestor rootNodes (shadowRoot or document) of an element and queries them for a selector.\n  // Based on: https://stackoverflow.com/q/54520554/194216\n  function queryFrom(el) {\n    if (!el) {\n      return null;\n    }\n    if (el.assignedSlot) {\n      el = el.assignedSlot;\n    }\n    const rootNode = getRootNode(el);\n    const found = id ? \"getElementById\" in rootNode ?\n    /*\n    Check to make sure 'getElementById' exists in cases where element is no longer connected to the DOM and getRootNode() returns the element.\n    https://github.com/Esri/calcite-components/pull/4280\n     */\n    rootNode.getElementById(id) : null : selector ? rootNode.querySelector(selector) : null;\n    const host = getHost(rootNode);\n    return found ? found : host ? queryFrom(host) : null;\n  }\n  return queryFrom(element);\n}\nfunction closestElementCrossShadowBoundary(element, selector) {\n  // based on https://stackoverflow.com/q/54520554/194216\n  function closestFrom(el) {\n    return el ? el.closest(selector) || closestFrom(getHost(getRootNode(el))) : null;\n  }\n  return closestFrom(element);\n}\n/**\n * This utility helps invoke a callback as it traverses a node and its ancestors until reaching the root document.\n *\n * Returning early or undefined in `onVisit` will continue traversing up the DOM tree. Otherwise, traversal will halt with the returned value as the result of the function\n *\n * @param element\n * @param onVisit\n */\nfunction walkUpAncestry(element, onVisit) {\n  return visit(element, onVisit);\n}\nfunction visit(node, onVisit) {\n  if (!node) {\n    return;\n  }\n  const result = onVisit(node);\n  if (result !== undefined) {\n    return result;\n  }\n  const {\n    parentNode\n  } = node;\n  return visit(parentNode instanceof ShadowRoot ? parentNode.host : parentNode, onVisit);\n}\nfunction containsCrossShadowBoundary(element, maybeDescendant) {\n  return !!walkUpAncestry(maybeDescendant, node => node === element ? true : undefined);\n}\nfunction isCalciteFocusable(el) {\n  return typeof el?.setFocus === \"function\";\n}\nasync function focusElement(el) {\n  if (!el) {\n    return;\n  }\n  return isCalciteFocusable(el) ? el.setFocus() : el.focus();\n}\n/**\n * Helper to focus the first tabbable element.\n *\n * @param {HTMLElement} element The html element containing tabbable elements.\n */\nfunction focusFirstTabbable(element) {\n  (tabbable(element, tabbableOptions)[0] || element).focus();\n}\nconst defaultSlotSelector = \":not([slot])\";\nfunction getSlotted(element, slotName, options) {\n  if (slotName && !Array.isArray(slotName) && typeof slotName !== \"string\") {\n    options = slotName;\n    slotName = null;\n  }\n  const slotSelector = slotName ? Array.isArray(slotName) ? slotName.map(name => `[slot=\"${name}\"]`).join(\",\") : `[slot=\"${slotName}\"]` : defaultSlotSelector;\n  if (options?.all) {\n    return queryMultiple(element, slotSelector, options);\n  }\n  return querySingle(element, slotSelector, options);\n}\nfunction getDirectChildren(el, selector) {\n  return el ? Array.from(el.children || []).filter(child => child?.matches(selector)) : [];\n}\nfunction queryMultiple(element, slotSelector, options) {\n  let matches = slotSelector === defaultSlotSelector ? getDirectChildren(element, defaultSlotSelector) : Array.from(element.querySelectorAll(slotSelector));\n  matches = options && options.direct === false ? matches : matches.filter(el => el.parentElement === element);\n  matches = options?.matches ? matches.filter(el => el?.matches(options.matches)) : matches;\n  const selector = options?.selector;\n  return selector ? matches.map(item => Array.from(item.querySelectorAll(selector))).reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []).filter(match => !!match) : matches;\n}\nfunction querySingle(element, slotSelector, options) {\n  let match = slotSelector === defaultSlotSelector ? getDirectChildren(element, defaultSlotSelector)[0] || null : element.querySelector(slotSelector);\n  match = options && options.direct === false ? match : match?.parentElement === element ? match : null;\n  match = options?.matches ? match?.matches(options.matches) ? match : null : match;\n  const selector = options?.selector;\n  return selector ? match?.querySelector(selector) : match;\n}\nfunction filterDirectChildren(el, selector) {\n  return Array.from(el.children).filter(child => child.matches(selector));\n}\n// set a default icon from a defined set or allow an override with an icon name string\nfunction setRequestedIcon(iconObject, iconValue, matchedValue) {\n  if (typeof iconValue === \"string\" && iconValue !== \"\") {\n    return iconValue;\n  } else if (iconValue === \"\") {\n    return iconObject[matchedValue];\n  }\n}\nfunction intersects(rect1, rect2) {\n  return !(rect2.left > rect1.right || rect2.right < rect1.left || rect2.top > rect1.bottom || rect2.bottom < rect1.top);\n}\n/**\n * This helper makes sure that boolean aria attributes are properly converted to a string.\n *\n * It should only be used for aria attributes that require a string value of \"true\" or \"false\".\n *\n * @param value\n * @returns {string} The string conversion of a boolean value (\"true\" | \"false\").\n */\nfunction toAriaBoolean(value) {\n  return Boolean(value).toString();\n}\n/**\n * This helper returns `true` if the target `slot` element from the `onSlotchange` event has an assigned element.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n *\n * @param event\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nfunction slotChangeHasAssignedElement(event) {\n  return !!slotChangeGetAssignedElements(event).length;\n}\n/**\n * This helper returns the assigned elements on a `slot` element from the `onSlotchange` event.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotElements = slotChangeGetAssignedElements(event)} />}\n * ```\n *\n * @param event\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nfunction slotChangeGetAssignedElements(event) {\n  return event.target.assignedElements({\n    flatten: true\n  });\n}\n/**\n * This helper returns true if the pointer event fired from the primary button of the device.\n *\n * See https://www.w3.org/TR/pointerevents/#the-button-property.\n *\n * @param event\n * @returns {boolean}\n */\nfunction isPrimaryPointerButton(event) {\n  return !!(event.isPrimary && event.button === 0);\n}\nconst focusElementInGroup = (elements, currentElement, destination) => {\n  const currentIndex = elements.indexOf(currentElement);\n  const isFirstItem = currentIndex === 0;\n  const isLastItem = currentIndex === elements.length - 1;\n  destination = destination === \"previous\" && isFirstItem ? \"last\" : destination === \"next\" && isLastItem ? \"first\" : destination;\n  let focusTarget;\n  switch (destination) {\n    case \"first\":\n      focusTarget = elements[0];\n      break;\n    case \"last\":\n      focusTarget = elements[elements.length - 1];\n      break;\n    case \"next\":\n      focusTarget = elements[currentIndex + 1] || elements[0];\n      break;\n    case \"previous\":\n      focusTarget = elements[currentIndex - 1] || elements[elements.length - 1];\n      break;\n  }\n  focusElement(focusTarget);\n  return focusTarget;\n};\nexport { tabbableOptions as A, CSS_UTILITY as C, autoMode as a, getSlotted as b, getElementDir as c, darkMode as d, setRequestedIcon as e, getModeName as f, getElementProp as g, focusElement as h, isPrimaryPointerButton as i, focusFirstTabbable as j, ensureId as k, slotChangeGetAssignedElements as l, intersects as m, focusElementInGroup as n, nodeListToArray as o, getRootNode as p, filterDirectChildren as q, closestElementCrossShadowBoundary as r, slotChangeHasAssignedElement as s, toAriaBoolean as t, queryElementRoots as u, containsCrossShadowBoundary as v, tabbable as w, focusable as x, isTabbable as y, isFocusable as z };","map":{"version":3,"names":["g","guid","autoMode","darkMode","lightMode","CSS_UTILITY","rtl","candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode$1","getRootNode","element","ownerDocument","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","call","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","content","children","nestedCandidates","flatten","push","scopeParent","validCandidate","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","getTabindex","node","isScope","tabIndex","test","isContentEditable","isNaN","parseInt","getAttribute","sortOrderedTabbables","a","b","documentOrder","isInput","isHiddenInput","type","isDetailsWithSummary","r","some","child","getCheckedRadio","nodes","form","i","checked","isTabbableRadio","name","radioScope","queryRadios","radioSet","window","CSS","escape","err","console","error","message","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRootHost","nodeRootHost","host","attached","contains","_nodeRootHost2","isZeroArea","_node$getBoundingClie","getBoundingClientRect","width","height","isHidden","_ref","displayCheck","getComputedStyle","visibility","isDirectSummary","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","getClientRects","isDisabledFromFieldset","parentNode","disabled","item","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","candidateTabindex","sort","reduce","acc","sortable","concat","tabbable","bind","focusable","isTabbable","Error","focusableCandidateSelector","isFocusable","tabbableOptions","ensureId","id","toLowerCase","nodeListToArray","nodeList","isArray","getModeName","closestElWithMode","closestElementCrossShadowBoundary","classList","getElementDir","prop","selector","closest","getElementProp","fallbackValue","getHost","root","queryElementRoots","_ref2","queryFrom","found","getElementById","querySelector","closestFrom","walkUpAncestry","onVisit","visit","result","undefined","ShadowRoot","containsCrossShadowBoundary","maybeDescendant","isCalciteFocusable","setFocus","focusElement","focus","focusFirstTabbable","defaultSlotSelector","getSlotted","slotName","slotSelector","map","all","queryMultiple","querySingle","getDirectChildren","direct","previousValue","currentValue","match","filterDirectChildren","setRequestedIcon","iconObject","iconValue","matchedValue","intersects","rect1","rect2","left","right","top","bottom","toAriaBoolean","value","Boolean","toString","slotChangeHasAssignedElement","event","slotChangeGetAssignedElements","target","isPrimaryPointerButton","isPrimary","button","focusElementInGroup","currentElement","destination","currentIndex","indexOf","isFirstItem","isLastItem","focusTarget","A","C","c","d","e","f","h","j","k","l","m","n","o","p","q","s","t","u","v","w","x","y","z"],"sources":["C:/code-challenge-react/frontend/node_modules/@esri/calcite-components/dist/components/dom.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { g as guid } from './guid.js';\n\nconst autoMode = \"calcite-mode-auto\";\nconst darkMode = \"calcite-mode-dark\";\nconst lightMode = \"calcite-mode-light\";\nconst CSS_UTILITY = {\n  autoMode,\n  darkMode,\n  lightMode,\n  rtl: \"calcite--rtl\"\n};\n\n/*!\n* tabbable 6.0.1\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]:not(slot)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])', 'details>summary:first-of-type', 'details'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode$1 = !NoElement && Element.prototype.getRootNode ? function (element) {\n  return element.getRootNode();\n} : function (element) {\n  return element.ownerDocument;\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n      var validShadowRoot = !options.shadowRootFilter || options.shadowRootFilter(element);\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\nvar getTabindex = function getTabindex(node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if ((isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || node.isContentEditable) && isNaN(parseInt(node.getAttribute('tabindex'), 10))) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode$1(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRootHost;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  var nodeRootHost = getRootNode$1(node).host;\n  var attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && _nodeRootHost.ownerDocument.contains(nodeRootHost) || node.ownerDocument.contains(node));\n  while (!attached && nodeRootHost) {\n    var _nodeRootHost2;\n    // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n    //  which means we need to get the host's host and check if that parent host is contained\n    //  in (i.e. attached to) the document\n    nodeRootHost = getRootNode$1(nodeRootHost).host;\n    attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && _nodeRootHost2.ownerDocument.contains(nodeRootHost));\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode$1(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getTabindex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nconst tabbableOptions = {\n  getShadowRoot: true\n};\n/**\n * This helper will guarantee an ID on the provided element.\n *\n * If it already has an ID, it will be preserved, otherwise a unique one will be generated and assigned.\n *\n * @param el\n * @returns {string} The element's ID.\n */\nfunction ensureId(el) {\n  if (!el) {\n    return \"\";\n  }\n  return (el.id = el.id || `${el.tagName.toLowerCase()}-${guid()}`);\n}\nfunction nodeListToArray(nodeList) {\n  return Array.isArray(nodeList) ? nodeList : Array.from(nodeList);\n}\nfunction getModeName(el) {\n  const closestElWithMode = closestElementCrossShadowBoundary(el, `.${CSS_UTILITY.darkMode}, .${CSS_UTILITY.lightMode}`);\n  return closestElWithMode?.classList.contains(\"calcite-mode-dark\") ? \"dark\" : \"light\";\n}\nfunction getElementDir(el) {\n  const prop = \"dir\";\n  const selector = `[${prop}]`;\n  const closest = closestElementCrossShadowBoundary(el, selector);\n  return closest ? closest.getAttribute(prop) : \"ltr\";\n}\nfunction getElementProp(el, prop, fallbackValue) {\n  const selector = `[${prop}]`;\n  const closest = el.closest(selector);\n  return closest ? closest.getAttribute(prop) : fallbackValue;\n}\nfunction getRootNode(el) {\n  return el.getRootNode();\n}\nfunction getHost(root) {\n  return root.host || null;\n}\n/**\n * This helper queries an element's rootNode and any ancestor rootNodes.\n *\n * If both an 'id' and 'selector' are supplied, 'id' will take precedence over 'selector'.\n *\n * @param element\n * @param root0\n * @param root0.selector\n * @param root0.id\n * @returns {Element} The element.\n */\nfunction queryElementRoots(element, { selector, id }) {\n  // Gets the rootNode and any ancestor rootNodes (shadowRoot or document) of an element and queries them for a selector.\n  // Based on: https://stackoverflow.com/q/54520554/194216\n  function queryFrom(el) {\n    if (!el) {\n      return null;\n    }\n    if (el.assignedSlot) {\n      el = el.assignedSlot;\n    }\n    const rootNode = getRootNode(el);\n    const found = id\n      ? \"getElementById\" in rootNode\n        ? /*\n          Check to make sure 'getElementById' exists in cases where element is no longer connected to the DOM and getRootNode() returns the element.\n          https://github.com/Esri/calcite-components/pull/4280\n           */\n          rootNode.getElementById(id)\n        : null\n      : selector\n        ? rootNode.querySelector(selector)\n        : null;\n    const host = getHost(rootNode);\n    return found ? found : host ? queryFrom(host) : null;\n  }\n  return queryFrom(element);\n}\nfunction closestElementCrossShadowBoundary(element, selector) {\n  // based on https://stackoverflow.com/q/54520554/194216\n  function closestFrom(el) {\n    return el ? el.closest(selector) || closestFrom(getHost(getRootNode(el))) : null;\n  }\n  return closestFrom(element);\n}\n/**\n * This utility helps invoke a callback as it traverses a node and its ancestors until reaching the root document.\n *\n * Returning early or undefined in `onVisit` will continue traversing up the DOM tree. Otherwise, traversal will halt with the returned value as the result of the function\n *\n * @param element\n * @param onVisit\n */\nfunction walkUpAncestry(element, onVisit) {\n  return visit(element, onVisit);\n}\nfunction visit(node, onVisit) {\n  if (!node) {\n    return;\n  }\n  const result = onVisit(node);\n  if (result !== undefined) {\n    return result;\n  }\n  const { parentNode } = node;\n  return visit(parentNode instanceof ShadowRoot ? parentNode.host : parentNode, onVisit);\n}\nfunction containsCrossShadowBoundary(element, maybeDescendant) {\n  return !!walkUpAncestry(maybeDescendant, (node) => (node === element ? true : undefined));\n}\nfunction isCalciteFocusable(el) {\n  return typeof el?.setFocus === \"function\";\n}\nasync function focusElement(el) {\n  if (!el) {\n    return;\n  }\n  return isCalciteFocusable(el) ? el.setFocus() : el.focus();\n}\n/**\n * Helper to focus the first tabbable element.\n *\n * @param {HTMLElement} element The html element containing tabbable elements.\n */\nfunction focusFirstTabbable(element) {\n  (tabbable(element, tabbableOptions)[0] || element).focus();\n}\nconst defaultSlotSelector = \":not([slot])\";\nfunction getSlotted(element, slotName, options) {\n  if (slotName && !Array.isArray(slotName) && typeof slotName !== \"string\") {\n    options = slotName;\n    slotName = null;\n  }\n  const slotSelector = slotName\n    ? Array.isArray(slotName)\n      ? slotName.map((name) => `[slot=\"${name}\"]`).join(\",\")\n      : `[slot=\"${slotName}\"]`\n    : defaultSlotSelector;\n  if (options?.all) {\n    return queryMultiple(element, slotSelector, options);\n  }\n  return querySingle(element, slotSelector, options);\n}\nfunction getDirectChildren(el, selector) {\n  return el ? Array.from(el.children || []).filter((child) => child?.matches(selector)) : [];\n}\nfunction queryMultiple(element, slotSelector, options) {\n  let matches = slotSelector === defaultSlotSelector\n    ? getDirectChildren(element, defaultSlotSelector)\n    : Array.from(element.querySelectorAll(slotSelector));\n  matches = options && options.direct === false ? matches : matches.filter((el) => el.parentElement === element);\n  matches = options?.matches ? matches.filter((el) => el?.matches(options.matches)) : matches;\n  const selector = options?.selector;\n  return selector\n    ? matches\n      .map((item) => Array.from(item.querySelectorAll(selector)))\n      .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], [])\n      .filter((match) => !!match)\n    : matches;\n}\nfunction querySingle(element, slotSelector, options) {\n  let match = slotSelector === defaultSlotSelector\n    ? getDirectChildren(element, defaultSlotSelector)[0] || null\n    : element.querySelector(slotSelector);\n  match = options && options.direct === false ? match : match?.parentElement === element ? match : null;\n  match = options?.matches ? (match?.matches(options.matches) ? match : null) : match;\n  const selector = options?.selector;\n  return selector ? match?.querySelector(selector) : match;\n}\nfunction filterDirectChildren(el, selector) {\n  return Array.from(el.children).filter((child) => child.matches(selector));\n}\n// set a default icon from a defined set or allow an override with an icon name string\nfunction setRequestedIcon(iconObject, iconValue, matchedValue) {\n  if (typeof iconValue === \"string\" && iconValue !== \"\") {\n    return iconValue;\n  }\n  else if (iconValue === \"\") {\n    return iconObject[matchedValue];\n  }\n}\nfunction intersects(rect1, rect2) {\n  return !(rect2.left > rect1.right ||\n    rect2.right < rect1.left ||\n    rect2.top > rect1.bottom ||\n    rect2.bottom < rect1.top);\n}\n/**\n * This helper makes sure that boolean aria attributes are properly converted to a string.\n *\n * It should only be used for aria attributes that require a string value of \"true\" or \"false\".\n *\n * @param value\n * @returns {string} The string conversion of a boolean value (\"true\" | \"false\").\n */\nfunction toAriaBoolean(value) {\n  return Boolean(value).toString();\n}\n/**\n * This helper returns `true` if the target `slot` element from the `onSlotchange` event has an assigned element.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n *\n * @param event\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nfunction slotChangeHasAssignedElement(event) {\n  return !!slotChangeGetAssignedElements(event).length;\n}\n/**\n * This helper returns the assigned elements on a `slot` element from the `onSlotchange` event.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotElements = slotChangeGetAssignedElements(event)} />}\n * ```\n *\n * @param event\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nfunction slotChangeGetAssignedElements(event) {\n  return event.target.assignedElements({\n    flatten: true\n  });\n}\n/**\n * This helper returns true if the pointer event fired from the primary button of the device.\n *\n * See https://www.w3.org/TR/pointerevents/#the-button-property.\n *\n * @param event\n * @returns {boolean}\n */\nfunction isPrimaryPointerButton(event) {\n  return !!(event.isPrimary && event.button === 0);\n}\nconst focusElementInGroup = (elements, currentElement, destination) => {\n  const currentIndex = elements.indexOf(currentElement);\n  const isFirstItem = currentIndex === 0;\n  const isLastItem = currentIndex === elements.length - 1;\n  destination =\n    destination === \"previous\" && isFirstItem ? \"last\" : destination === \"next\" && isLastItem ? \"first\" : destination;\n  let focusTarget;\n  switch (destination) {\n    case \"first\":\n      focusTarget = elements[0];\n      break;\n    case \"last\":\n      focusTarget = elements[elements.length - 1];\n      break;\n    case \"next\":\n      focusTarget = elements[currentIndex + 1] || elements[0];\n      break;\n    case \"previous\":\n      focusTarget = elements[currentIndex - 1] || elements[elements.length - 1];\n      break;\n  }\n  focusElement(focusTarget);\n  return focusTarget;\n};\n\nexport { tabbableOptions as A, CSS_UTILITY as C, autoMode as a, getSlotted as b, getElementDir as c, darkMode as d, setRequestedIcon as e, getModeName as f, getElementProp as g, focusElement as h, isPrimaryPointerButton as i, focusFirstTabbable as j, ensureId as k, slotChangeGetAssignedElements as l, intersects as m, focusElementInGroup as n, nodeListToArray as o, getRootNode as p, filterDirectChildren as q, closestElementCrossShadowBoundary as r, slotChangeHasAssignedElement as s, toAriaBoolean as t, queryElementRoots as u, containsCrossShadowBoundary as v, tabbable as w, focusable as x, isTabbable as y, isFocusable as z };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}