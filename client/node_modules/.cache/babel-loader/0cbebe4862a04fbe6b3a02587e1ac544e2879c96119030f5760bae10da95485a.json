{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { MAX_INDEX_COUNT as t, ManagedTextureBackedBuffer as e } from \"./ManagedTextureBackedBuffer.js\";\nclass r {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    this._rctx = t, this._fieldCount = e, this._buffers = [];\n  }\n  garbageCollect() {\n    this._buffers = this._buffers.filter(t => 0 !== t.activeCount || (t.dispose(), !1));\n  }\n  destroy() {\n    this._buffers.forEach(t => t.dispose()), this._buffers = [];\n  }\n  getBuffer(r) {\n    for (const t of this._buffers) if (t.availableCount >= r) return t;\n    if (r > t) return null;\n    const s = new e(this._rctx, this._fieldCount);\n    return this._buffers.push(s), s;\n  }\n  updateTextures() {\n    for (const t of this._buffers) t.textureBuffer.updateTexture();\n  }\n}\nexport { r as BufferManager };","map":{"version":3,"names":["MAX_INDEX_COUNT","t","ManagedTextureBackedBuffer","e","r","constructor","arguments","length","undefined","_rctx","_fieldCount","_buffers","garbageCollect","filter","activeCount","dispose","destroy","forEach","getBuffer","availableCount","s","push","updateTextures","textureBuffer","updateTexture","BufferManager"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/BufferManager.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{MAX_INDEX_COUNT as t,ManagedTextureBackedBuffer as e}from\"./ManagedTextureBackedBuffer.js\";class r{constructor(t,e=1){this._rctx=t,this._fieldCount=e,this._buffers=[]}garbageCollect(){this._buffers=this._buffers.filter((t=>0!==t.activeCount||(t.dispose(),!1)))}destroy(){this._buffers.forEach((t=>t.dispose())),this._buffers=[]}getBuffer(r){for(const t of this._buffers)if(t.availableCount>=r)return t;if(r>t)return null;const s=new e(this._rctx,this._fieldCount);return this._buffers.push(s),s}updateTextures(){for(const t of this._buffers)t.textureBuffer.updateTexture()}}export{r as BufferManager};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,eAAe,IAAIC,CAAC,EAACC,0BAA0B,IAAIC,CAAC,QAAK,iCAAiC;AAAC,MAAMC,CAAC;EAACC,WAAWA,CAACJ,CAAC,EAAK;IAAA,IAAJE,CAAC,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;IAAE,IAAI,CAACG,KAAK,GAACR,CAAC,EAAC,IAAI,CAACS,WAAW,GAACP,CAAC,EAAC,IAAI,CAACQ,QAAQ,GAAC,EAAE;EAAA;EAACC,cAAcA,CAAA,EAAE;IAAC,IAAI,CAACD,QAAQ,GAAC,IAAI,CAACA,QAAQ,CAACE,MAAM,CAAEZ,CAAC,IAAE,CAAC,KAAGA,CAAC,CAACa,WAAW,KAAGb,CAAC,CAACc,OAAO,EAAE,EAAC,CAAC,CAAC,CAAC,CAAE;EAAA;EAACC,OAAOA,CAAA,EAAE;IAAC,IAAI,CAACL,QAAQ,CAACM,OAAO,CAAEhB,CAAC,IAAEA,CAAC,CAACc,OAAO,EAAE,CAAE,EAAC,IAAI,CAACJ,QAAQ,GAAC,EAAE;EAAA;EAACO,SAASA,CAACd,CAAC,EAAC;IAAC,KAAI,MAAMH,CAAC,IAAI,IAAI,CAACU,QAAQ,EAAC,IAAGV,CAAC,CAACkB,cAAc,IAAEf,CAAC,EAAC,OAAOH,CAAC;IAAC,IAAGG,CAAC,GAACH,CAAC,EAAC,OAAO,IAAI;IAAC,MAAMmB,CAAC,GAAC,IAAIjB,CAAC,CAAC,IAAI,CAACM,KAAK,EAAC,IAAI,CAACC,WAAW,CAAC;IAAC,OAAO,IAAI,CAACC,QAAQ,CAACU,IAAI,CAACD,CAAC,CAAC,EAACA,CAAC;EAAA;EAACE,cAAcA,CAAA,EAAE;IAAC,KAAI,MAAMrB,CAAC,IAAI,IAAI,CAACU,QAAQ,EAACV,CAAC,CAACsB,aAAa,CAACC,aAAa,EAAE;EAAA;AAAC;AAAC,SAAOpB,CAAC,IAAIqB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}