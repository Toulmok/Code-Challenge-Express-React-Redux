{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { getAssetPath } from '@stencil/core/internal/client/index.js';\nimport { g as getSupportedLocale } from './locale.js';\nconst componentLangToMessageBundleCache = {};\nasync function getMessageBundle(lang, component) {\n  const key = `${component}_${lang}`;\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`)).then(resp => {\n    if (!resp.ok) {\n      throwMessageFetchError();\n    }\n    return resp.json();\n  }).catch(() => throwMessageFetchError());\n  return componentLangToMessageBundleCache[key];\n}\nfunction throwMessageFetchError() {\n  throw new Error(\"could not fetch component message bundle\");\n}\nfunction mergeMessages(component) {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides\n  };\n}\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nasync function setUpMessages(component) {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\nasync function fetchMessages(component, lang) {\n  const {\n    el\n  } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nasync function updateMessages(component, lang) {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nfunction connectMessages(component) {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nfunction disconnectMessages(component) {\n  component.onMessagesChange = undefined;\n}\nfunction defaultOnMessagesChange() {\n  mergeMessages(this);\n}\nexport { connectMessages as c, disconnectMessages as d, setUpMessages as s, updateMessages as u };","map":{"version":3,"names":["getAssetPath","g","getSupportedLocale","componentLangToMessageBundleCache","getMessageBundle","lang","component","key","fetch","then","resp","ok","throwMessageFetchError","json","catch","Error","mergeMessages","messages","defaultMessages","messageOverrides","setUpMessages","fetchMessages","effectiveLocale","el","tag","tagName","toLowerCase","componentName","replace","updateMessages","connectMessages","onMessagesChange","defaultOnMessagesChange","disconnectMessages","undefined","c","d","s","u"],"sources":["C:/code-challenge-react/frontend/node_modules/@esri/calcite-components/dist/components/t9n.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { getAssetPath } from '@stencil/core/internal/client/index.js';\nimport { g as getSupportedLocale } from './locale.js';\n\nconst componentLangToMessageBundleCache = {};\nasync function getMessageBundle(lang, component) {\n  const key = `${component}_${lang}`;\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n    if (!resp.ok) {\n      throwMessageFetchError();\n    }\n    return resp.json();\n  })\n    .catch(() => throwMessageFetchError());\n  return componentLangToMessageBundleCache[key];\n}\nfunction throwMessageFetchError() {\n  throw new Error(\"could not fetch component message bundle\");\n}\nfunction mergeMessages(component) {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides\n  };\n}\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nasync function setUpMessages(component) {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\nasync function fetchMessages(component, lang) {\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nasync function updateMessages(component, lang) {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nfunction connectMessages(component) {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nfunction disconnectMessages(component) {\n  component.onMessagesChange = undefined;\n}\nfunction defaultOnMessagesChange() {\n  mergeMessages(this);\n}\n\nexport { connectMessages as c, disconnectMessages as d, setUpMessages as s, updateMessages as u };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,wCAAwC;AACrE,SAASC,CAAC,IAAIC,kBAAkB,QAAQ,aAAa;AAErD,MAAMC,iCAAiC,GAAG,CAAC,CAAC;AAC5C,eAAeC,gBAAgBA,CAACC,IAAI,EAAEC,SAAS,EAAE;EAC/C,MAAMC,GAAG,GAAI,GAAED,SAAU,IAAGD,IAAK,EAAC;EAClC,IAAIF,iCAAiC,CAACI,GAAG,CAAC,EAAE;IAC1C,OAAOJ,iCAAiC,CAACI,GAAG,CAAC;EAC/C;EACAJ,iCAAiC,CAACI,GAAG,CAAC,GAAGC,KAAK,CAACR,YAAY,CAAE,YAAWM,SAAU,iBAAgBD,IAAK,OAAM,CAAC,CAAC,CAC5GI,IAAI,CAAEC,IAAI,IAAK;IAChB,IAAI,CAACA,IAAI,CAACC,EAAE,EAAE;MACZC,sBAAsB,EAAE;IAC1B;IACA,OAAOF,IAAI,CAACG,IAAI,EAAE;EACpB,CAAC,CAAC,CACCC,KAAK,CAAC,MAAMF,sBAAsB,EAAE,CAAC;EACxC,OAAOT,iCAAiC,CAACI,GAAG,CAAC;AAC/C;AACA,SAASK,sBAAsBA,CAAA,EAAG;EAChC,MAAM,IAAIG,KAAK,CAAC,0CAA0C,CAAC;AAC7D;AACA,SAASC,aAAaA,CAACV,SAAS,EAAE;EAChCA,SAAS,CAACW,QAAQ,GAAG;IACnB,GAAGX,SAAS,CAACY,eAAe;IAC5B,GAAGZ,SAAS,CAACa;EACf,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,aAAaA,CAACd,SAAS,EAAE;EACtCA,SAAS,CAACY,eAAe,GAAG,MAAMG,aAAa,CAACf,SAAS,EAAEA,SAAS,CAACgB,eAAe,CAAC;EACrFN,aAAa,CAACV,SAAS,CAAC;AAC1B;AACA,eAAee,aAAaA,CAACf,SAAS,EAAED,IAAI,EAAE;EAC5C,MAAM;IAAEkB;EAAG,CAAC,GAAGjB,SAAS;EACxB,MAAMkB,GAAG,GAAGD,EAAE,CAACE,OAAO,CAACC,WAAW,EAAE;EACpC,MAAMC,aAAa,GAAGH,GAAG,CAACI,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;EACjD,OAAOxB,gBAAgB,CAACF,kBAAkB,CAACG,IAAI,EAAE,KAAK,CAAC,EAAEsB,aAAa,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeE,cAAcA,CAACvB,SAAS,EAAED,IAAI,EAAE;EAC7CC,SAAS,CAACY,eAAe,GAAG,MAAMG,aAAa,CAACf,SAAS,EAAED,IAAI,CAAC;EAChEW,aAAa,CAACV,SAAS,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASwB,eAAeA,CAACxB,SAAS,EAAE;EAClCA,SAAS,CAACyB,gBAAgB,GAAGC,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAAC3B,SAAS,EAAE;EACrCA,SAAS,CAACyB,gBAAgB,GAAGG,SAAS;AACxC;AACA,SAASF,uBAAuBA,CAAA,EAAG;EACjChB,aAAa,CAAC,IAAI,CAAC;AACrB;AAEA,SAASc,eAAe,IAAIK,CAAC,EAAEF,kBAAkB,IAAIG,CAAC,EAAEhB,aAAa,IAAIiB,CAAC,EAAER,cAAc,IAAIS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}