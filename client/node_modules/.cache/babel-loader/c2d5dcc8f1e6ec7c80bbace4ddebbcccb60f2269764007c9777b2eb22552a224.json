{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport { createTask as t } from \"../../../../core/asyncUtils.js\";\nimport s from \"../../../../core/Error.js\";\nimport i from \"../../../../core/Logger.js\";\nimport { isSome as r } from \"../../../../core/maybe.js\";\nimport { isAbortError as n } from \"../../../../core/promiseUtils.js\";\nimport { getJsonType as a } from \"../../../../geometry/support/jsonUtils.js\";\nimport { WGS84 as o, equals as u } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { convertFromGeometry as l, convertToGeometry as d, convertFromFeatures as p, convertToFeature as c, convertFromFeature as h } from \"../../featureConversionUtils.js\";\nimport y from \"../../data/FeatureStore.js\";\nimport { checkProjectionSupport as m, project as f } from \"../../data/projectionSupport.js\";\nimport { QueryEngine as g } from \"../../data/QueryEngine.js\";\nimport { inferLayerProperties as _, createOptimizedFeatures as I, validateGeoJSON as j } from \"./geojson.js\";\nimport { createDrawingInfo as F, createDefaultTemplate as E, createDefaultAttributesFunction as b } from \"../support/clientSideDefaults.js\";\nimport { loadGeometryEngineForSimplify as w, mixAttributes as T, createFeatureEditSuccessResult as x, createFeatureEditErrorResult as q, simplify as S } from \"../support/sourceUtils.js\";\nimport R from \"../../../support/FieldsIndex.js\";\nimport { kebabDict as k } from \"../../../support/fieldType.js\";\nimport { getFieldDefaultValue as O } from \"../../../support/fieldUtils.js\";\nconst C = {\n  hasAttachments: !1,\n  capabilities: \"query, editing, create, delete, update\",\n  useStandardizedQueries: !0,\n  supportsCoordinatesQuantization: !0,\n  supportsReturningQueryGeometry: !0,\n  advancedQueryCapabilities: {\n    supportsQueryAttachments: !1,\n    supportsStatistics: !0,\n    supportsPercentileStatistics: !0,\n    supportsReturningGeometryCentroid: !0,\n    supportsQueryWithDistance: !0,\n    supportsDistinct: !0,\n    supportsReturningQueryExtent: !0,\n    supportsReturningGeometryProperties: !1,\n    supportsHavingClause: !0,\n    supportsOrderBy: !0,\n    supportsPagination: !0,\n    supportsQueryWithResultType: !1,\n    supportsSqlExpression: !0,\n    supportsDisjointSpatialRel: !0\n  }\n};\nclass D {\n  constructor() {\n    this._queryEngine = null, this._snapshotFeatures = async e => {\n      const t = await this._fetch(e);\n      return this._createFeatures(t);\n    };\n  }\n  destroy() {\n    this._queryEngine?.destroy(), this._queryEngine = this._fieldsIndex = this._createDefaultAttributes = null;\n  }\n  async load(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this._loadOptions = {\n      url: e.url,\n      customParameters: e.customParameters\n    };\n    const i = [];\n    await this._checkProjection(e.spatialReference);\n    let r = null;\n    e.url && (r = await this._fetch(t?.signal));\n    const n = _(r, {\n        geometryType: e.geometryType\n      }),\n      a = e.fields || n.fields || [],\n      u = null != e.hasZ ? e.hasZ : n.hasZ,\n      l = n.geometryType;\n    let d = e.objectIdField || n.objectIdFieldName || \"__OBJECTID\";\n    const p = e.spatialReference || o;\n    let c = e.timeInfo;\n    a === n.fields && n.unknownFields.length > 0 && i.push({\n      name: \"geojson-layer:unknown-field-types\",\n      message: \"Some fields types couldn't be inferred from the features and were dropped\",\n      details: {\n        unknownFields: n.unknownFields\n      }\n    });\n    let h = new R(a).get(d);\n    h ? (\"esriFieldTypeString\" !== h.type && (h.type = \"esriFieldTypeOID\"), h.editable = !1, h.nullable = !1, d = h.name) : (h = {\n      alias: d,\n      name: d,\n      type: \"string\" === n.objectIdFieldType ? \"esriFieldTypeString\" : \"esriFieldTypeOID\",\n      editable: !1,\n      nullable: !1\n    }, a.unshift(h));\n    const m = {};\n    for (const o of a) {\n      if (null == o.name && (o.name = o.alias), null == o.alias && (o.alias = o.name), !o.name) throw new s(\"geojson-layer:invalid-field-name\", \"field name is missing\", {\n        field: o\n      });\n      if (!k.jsonValues.includes(o.type)) throw new s(\"geojson-layer:invalid-field-type\", `invalid type for field \"${o.name}\"`, {\n        field: o\n      });\n      if (o.name !== h.name) {\n        const e = O(o);\n        void 0 !== e && (m[o.name] = e);\n      }\n    }\n    this._fieldsIndex = new R(a);\n    const f = this._fieldsIndex.requiredFields.indexOf(h);\n    if (f > -1 && this._fieldsIndex.requiredFields.splice(f, 1), c) {\n      if (c.startTimeField) {\n        const e = this._fieldsIndex.get(c.startTimeField);\n        e ? (c.startTimeField = e.name, e.type = \"esriFieldTypeDate\") : c.startTimeField = null;\n      }\n      if (c.endTimeField) {\n        const e = this._fieldsIndex.get(c.endTimeField);\n        e ? (c.endTimeField = e.name, e.type = \"esriFieldTypeDate\") : c.endTimeField = null;\n      }\n      if (c.trackIdField) {\n        const e = this._fieldsIndex.get(c.trackIdField);\n        e ? c.trackIdField = e.name : (c.trackIdField = null, i.push({\n          name: \"geojson-layer:invalid-timeInfo-trackIdField\",\n          message: \"trackIdField is missing\",\n          details: {\n            timeInfo: c\n          }\n        }));\n      }\n      c.startTimeField || c.endTimeField || (i.push({\n        name: \"geojson-layer:invalid-timeInfo\",\n        message: \"startTimeField and endTimeField are missing\",\n        details: {\n          timeInfo: c\n        }\n      }), c = null);\n    }\n    const I = l ? F(l) : void 0,\n      j = {\n        warnings: i,\n        featureErrors: [],\n        layerDefinition: {\n          ...C,\n          drawingInfo: I ?? void 0,\n          templates: E(m),\n          extent: void 0,\n          geometryType: l,\n          objectIdField: d,\n          fields: a,\n          hasZ: !!u,\n          timeInfo: c\n        }\n      };\n    this._queryEngine = new g({\n      fields: a,\n      geometryType: l,\n      hasM: !1,\n      hasZ: u,\n      objectIdField: d,\n      spatialReference: p,\n      timeInfo: c,\n      featureStore: new y({\n        geometryType: l,\n        hasM: !1,\n        hasZ: u\n      }),\n      cacheSpatialQueries: !0\n    }), this._createDefaultAttributes = b(m, d);\n    const w = await this._createFeatures(r);\n    this._objectIdGenerator = this._createObjectIdGenerator(this._queryEngine, w);\n    const T = this._normalizeFeatures(w, j.warnings, j.featureErrors);\n    this._queryEngine.featureStore.addMany(T);\n    const {\n      fullExtent: x,\n      timeExtent: q\n    } = await this._queryEngine.fetchRecomputedExtents();\n    if (j.layerDefinition.extent = x, q) {\n      const {\n        start: e,\n        end: t\n      } = q;\n      j.layerDefinition.timeInfo.timeExtent = [e, t];\n    }\n    return j;\n  }\n  async applyEdits(e) {\n    const {\n      spatialReference: t,\n      geometryType: s\n    } = this._queryEngine;\n    return await Promise.all([w(t, s), m(e.adds, t), m(e.updates, t)]), await this._waitSnapshotComplete(), this._applyEdits(e);\n  }\n  async queryFeatures() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQuery(e, t.signal);\n  }\n  async queryFeatureCount() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForCount(e, t.signal);\n  }\n  async queryObjectIds() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForIds(e, t.signal);\n  }\n  async queryExtent() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForExtent(e, t.signal);\n  }\n  async querySnapping(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForSnapping(e, t.signal);\n  }\n  async refresh(e) {\n    this._loadOptions.customParameters = e, this._snapshotTask?.abort(), this._snapshotTask = t(this._snapshotFeatures), this._snapshotTask.promise.then(e => {\n      this._queryEngine.featureStore.clear(), this._objectIdGenerator = this._createObjectIdGenerator(this._queryEngine, e);\n      const t = this._normalizeFeatures(e);\n      t && this._queryEngine.featureStore.addMany(t);\n    }, e => {\n      this._queryEngine.featureStore.clear(), n(e) || i.getLogger(\"esri.layers.GeoJSONLayer\").error(new s(\"geojson-layer:refresh\", \"An error occurred during refresh\", {\n        error: e\n      }));\n    }), await this._waitSnapshotComplete();\n    const {\n      fullExtent: r,\n      timeExtent: a\n    } = await this._queryEngine.fetchRecomputedExtents();\n    return {\n      extent: r,\n      timeExtent: a\n    };\n  }\n  async _createFeatures(e) {\n    if (null == e) return [];\n    const {\n        geometryType: t,\n        hasZ: s,\n        objectIdField: i\n      } = this._queryEngine,\n      n = I(e, {\n        geometryType: t,\n        hasZ: s,\n        objectIdField: i\n      });\n    if (!u(this._queryEngine.spatialReference, o)) for (const a of n) r(a.geometry) && (a.geometry = l(f(d(a.geometry, this._queryEngine.geometryType, this._queryEngine.hasZ, !1), o, this._queryEngine.spatialReference)));\n    return n;\n  }\n  async _waitSnapshotComplete() {\n    if (this._snapshotTask && !this._snapshotTask.finished) {\n      try {\n        await this._snapshotTask.promise;\n      } catch {}\n      return this._waitSnapshotComplete();\n    }\n  }\n  async _fetch(t) {\n    const {\n        url: s,\n        customParameters: i\n      } = this._loadOptions,\n      r = (await e(s, {\n        responseType: \"json\",\n        query: {\n          ...i\n        },\n        signal: t\n      })).data;\n    return await j(r), r;\n  }\n  _normalizeFeatures(e, t, s) {\n    const {\n        objectIdField: i\n      } = this._queryEngine,\n      r = [];\n    for (const n of e) {\n      const e = this._createDefaultAttributes(),\n        a = T(this._fieldsIndex, e, n.attributes, !0, t);\n      a ? s?.push(a) : (this._assignObjectId(e, n.attributes, !0), n.attributes = e, n.objectId = e[i], r.push(n));\n    }\n    return r;\n  }\n  async _applyEdits(e) {\n    const {\n        adds: t,\n        updates: s,\n        deletes: i\n      } = e,\n      r = {\n        addResults: [],\n        deleteResults: [],\n        updateResults: [],\n        uidToObjectId: {}\n      };\n    if (t && t.length && this._applyAddEdits(r, t), s && s.length && this._applyUpdateEdits(r, s), i && i.length) {\n      for (const e of i) r.deleteResults.push(x(e));\n      this._queryEngine.featureStore.removeManyById(i);\n    }\n    const {\n      fullExtent: n,\n      timeExtent: a\n    } = await this._queryEngine.fetchRecomputedExtents();\n    return {\n      extent: n,\n      timeExtent: a,\n      featureEditResults: r\n    };\n  }\n  _applyAddEdits(e, t) {\n    const {\n        addResults: s\n      } = e,\n      {\n        geometryType: i,\n        hasM: n,\n        hasZ: o,\n        objectIdField: u,\n        spatialReference: l,\n        featureStore: d\n      } = this._queryEngine,\n      c = [];\n    for (const p of t) {\n      if (p.geometry && i !== a(p.geometry)) {\n        s.push(q(\"Incorrect geometry type.\"));\n        continue;\n      }\n      const t = this._createDefaultAttributes(),\n        n = T(this._fieldsIndex, t, p.attributes);\n      if (n) s.push(n);else {\n        if (this._assignObjectId(t, p.attributes), p.attributes = t, null != p.uid) {\n          const t = p.attributes[u];\n          e.uidToObjectId[p.uid] = t;\n        }\n        if (r(p.geometry)) {\n          const e = p.geometry.spatialReference ?? l;\n          p.geometry = f(S(p.geometry, e), e, l);\n        }\n        c.push(p), s.push(x(p.attributes[u]));\n      }\n    }\n    d.addMany(p([], c, i, o, n, u));\n  }\n  _applyUpdateEdits(_ref, t) {\n    let {\n      updateResults: e\n    } = _ref;\n    const {\n      geometryType: s,\n      hasM: i,\n      hasZ: n,\n      objectIdField: o,\n      spatialReference: u,\n      featureStore: l\n    } = this._queryEngine;\n    for (const d of t) {\n      const {\n          attributes: t,\n          geometry: p\n        } = d,\n        y = t && t[o];\n      if (null == y) {\n        e.push(q(`Identifier field ${o} missing`));\n        continue;\n      }\n      if (!l.has(y)) {\n        e.push(q(`Feature with object id ${y} missing`));\n        continue;\n      }\n      const m = c(l.getFeature(y), s, n, i);\n      if (r(p)) {\n        if (s !== a(p)) {\n          e.push(q(\"Incorrect geometry type.\"));\n          continue;\n        }\n        const t = p.spatialReference ?? u;\n        m.geometry = f(S(p, t), t, u);\n      }\n      if (t) {\n        const s = T(this._fieldsIndex, m.attributes, t);\n        if (s) {\n          e.push(s);\n          continue;\n        }\n      }\n      l.add(h(m, s, n, i, o)), e.push(x(y));\n    }\n  }\n  _createObjectIdGenerator(e, t) {\n    const s = e.fieldsIndex.get(e.objectIdField);\n    if (\"esriFieldTypeString\" === s.type) return () => s.name + \"-\" + Date.now().toString(16);\n    let i = Number.NEGATIVE_INFINITY;\n    for (const r of t) r.objectId && (i = Math.max(i, r.objectId));\n    return i = Math.max(0, i) + 1, () => i++;\n  }\n  _assignObjectId(e, t) {\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    const i = this._queryEngine.objectIdField;\n    e[i] = s && i in t ? t[i] : this._objectIdGenerator();\n  }\n  async _checkProjection(e) {\n    try {\n      await m(o, e);\n    } catch {\n      throw new s(\"geojson-layer\", \"Projection not supported\");\n    }\n  }\n}\nexport { D as default };","map":{"version":3,"names":["e","createTask","t","s","i","isSome","r","isAbortError","n","getJsonType","a","WGS84","o","equals","u","convertFromGeometry","l","convertToGeometry","d","convertFromFeatures","p","convertToFeature","c","convertFromFeature","h","y","checkProjectionSupport","m","project","f","QueryEngine","g","inferLayerProperties","_","createOptimizedFeatures","I","validateGeoJSON","j","createDrawingInfo","F","createDefaultTemplate","E","createDefaultAttributesFunction","b","loadGeometryEngineForSimplify","w","mixAttributes","T","createFeatureEditSuccessResult","x","createFeatureEditErrorResult","q","simplify","S","R","kebabDict","k","getFieldDefaultValue","O","C","hasAttachments","capabilities","useStandardizedQueries","supportsCoordinatesQuantization","supportsReturningQueryGeometry","advancedQueryCapabilities","supportsQueryAttachments","supportsStatistics","supportsPercentileStatistics","supportsReturningGeometryCentroid","supportsQueryWithDistance","supportsDistinct","supportsReturningQueryExtent","supportsReturningGeometryProperties","supportsHavingClause","supportsOrderBy","supportsPagination","supportsQueryWithResultType","supportsSqlExpression","supportsDisjointSpatialRel","D","constructor","_queryEngine","_snapshotFeatures","_fetch","_createFeatures","destroy","_fieldsIndex","_createDefaultAttributes","load","arguments","length","undefined","_loadOptions","url","customParameters","_checkProjection","spatialReference","signal","geometryType","fields","hasZ","objectIdField","objectIdFieldName","timeInfo","unknownFields","push","name","message","details","get","type","editable","nullable","alias","objectIdFieldType","unshift","field","jsonValues","includes","requiredFields","indexOf","splice","startTimeField","endTimeField","trackIdField","warnings","featureErrors","layerDefinition","drawingInfo","templates","extent","hasM","featureStore","cacheSpatialQueries","_objectIdGenerator","_createObjectIdGenerator","_normalizeFeatures","addMany","fullExtent","timeExtent","fetchRecomputedExtents","start","end","applyEdits","Promise","all","adds","updates","_waitSnapshotComplete","_applyEdits","queryFeatures","executeQuery","queryFeatureCount","executeQueryForCount","queryObjectIds","executeQueryForIds","queryExtent","executeQueryForExtent","querySnapping","executeQueryForSnapping","refresh","_snapshotTask","abort","promise","then","clear","getLogger","error","geometry","finished","responseType","query","data","attributes","_assignObjectId","objectId","deletes","addResults","deleteResults","updateResults","uidToObjectId","_applyAddEdits","_applyUpdateEdits","removeManyById","featureEditResults","uid","_ref","has","getFeature","add","fieldsIndex","Date","now","toString","Number","NEGATIVE_INFINITY","Math","max","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import{createTask as t}from\"../../../../core/asyncUtils.js\";import s from\"../../../../core/Error.js\";import i from\"../../../../core/Logger.js\";import{isSome as r}from\"../../../../core/maybe.js\";import{isAbortError as n}from\"../../../../core/promiseUtils.js\";import{getJsonType as a}from\"../../../../geometry/support/jsonUtils.js\";import{WGS84 as o,equals as u}from\"../../../../geometry/support/spatialReferenceUtils.js\";import{convertFromGeometry as l,convertToGeometry as d,convertFromFeatures as p,convertToFeature as c,convertFromFeature as h}from\"../../featureConversionUtils.js\";import y from\"../../data/FeatureStore.js\";import{checkProjectionSupport as m,project as f}from\"../../data/projectionSupport.js\";import{QueryEngine as g}from\"../../data/QueryEngine.js\";import{inferLayerProperties as _,createOptimizedFeatures as I,validateGeoJSON as j}from\"./geojson.js\";import{createDrawingInfo as F,createDefaultTemplate as E,createDefaultAttributesFunction as b}from\"../support/clientSideDefaults.js\";import{loadGeometryEngineForSimplify as w,mixAttributes as T,createFeatureEditSuccessResult as x,createFeatureEditErrorResult as q,simplify as S}from\"../support/sourceUtils.js\";import R from\"../../../support/FieldsIndex.js\";import{kebabDict as k}from\"../../../support/fieldType.js\";import{getFieldDefaultValue as O}from\"../../../support/fieldUtils.js\";const C={hasAttachments:!1,capabilities:\"query, editing, create, delete, update\",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class D{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const i=[];await this._checkProjection(e.spatialReference);let r=null;e.url&&(r=await this._fetch(t?.signal));const n=_(r,{geometryType:e.geometryType}),a=e.fields||n.fields||[],u=null!=e.hasZ?e.hasZ:n.hasZ,l=n.geometryType;let d=e.objectIdField||n.objectIdFieldName||\"__OBJECTID\";const p=e.spatialReference||o;let c=e.timeInfo;a===n.fields&&n.unknownFields.length>0&&i.push({name:\"geojson-layer:unknown-field-types\",message:\"Some fields types couldn't be inferred from the features and were dropped\",details:{unknownFields:n.unknownFields}});let h=new R(a).get(d);h?(\"esriFieldTypeString\"!==h.type&&(h.type=\"esriFieldTypeOID\"),h.editable=!1,h.nullable=!1,d=h.name):(h={alias:d,name:d,type:\"string\"===n.objectIdFieldType?\"esriFieldTypeString\":\"esriFieldTypeOID\",editable:!1,nullable:!1},a.unshift(h));const m={};for(const o of a){if(null==o.name&&(o.name=o.alias),null==o.alias&&(o.alias=o.name),!o.name)throw new s(\"geojson-layer:invalid-field-name\",\"field name is missing\",{field:o});if(!k.jsonValues.includes(o.type))throw new s(\"geojson-layer:invalid-field-type\",`invalid type for field \"${o.name}\"`,{field:o});if(o.name!==h.name){const e=O(o);void 0!==e&&(m[o.name]=e)}}this._fieldsIndex=new R(a);const f=this._fieldsIndex.requiredFields.indexOf(h);if(f>-1&&this._fieldsIndex.requiredFields.splice(f,1),c){if(c.startTimeField){const e=this._fieldsIndex.get(c.startTimeField);e?(c.startTimeField=e.name,e.type=\"esriFieldTypeDate\"):c.startTimeField=null}if(c.endTimeField){const e=this._fieldsIndex.get(c.endTimeField);e?(c.endTimeField=e.name,e.type=\"esriFieldTypeDate\"):c.endTimeField=null}if(c.trackIdField){const e=this._fieldsIndex.get(c.trackIdField);e?c.trackIdField=e.name:(c.trackIdField=null,i.push({name:\"geojson-layer:invalid-timeInfo-trackIdField\",message:\"trackIdField is missing\",details:{timeInfo:c}}))}c.startTimeField||c.endTimeField||(i.push({name:\"geojson-layer:invalid-timeInfo\",message:\"startTimeField and endTimeField are missing\",details:{timeInfo:c}}),c=null)}const I=l?F(l):void 0,j={warnings:i,featureErrors:[],layerDefinition:{...C,drawingInfo:I??void 0,templates:E(m),extent:void 0,geometryType:l,objectIdField:d,fields:a,hasZ:!!u,timeInfo:c}};this._queryEngine=new g({fields:a,geometryType:l,hasM:!1,hasZ:u,objectIdField:d,spatialReference:p,timeInfo:c,featureStore:new y({geometryType:l,hasM:!1,hasZ:u}),cacheSpatialQueries:!0}),this._createDefaultAttributes=b(m,d);const w=await this._createFeatures(r);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,w);const T=this._normalizeFeatures(w,j.warnings,j.featureErrors);this._queryEngine.featureStore.addMany(T);const{fullExtent:x,timeExtent:q}=await this._queryEngine.fetchRecomputedExtents();if(j.layerDefinition.extent=x,q){const{start:e,end:t}=q;j.layerDefinition.timeInfo.timeExtent=[e,t]}return j}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([w(t,s),m(e.adds,t),m(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=t(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),n(e)||i.getLogger(\"esri.layers.GeoJSONLayer\").error(new s(\"geojson-layer:refresh\",\"An error occurred during refresh\",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:r,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:r,timeExtent:a}}async _createFeatures(e){if(null==e)return[];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,n=I(e,{geometryType:t,hasZ:s,objectIdField:i});if(!u(this._queryEngine.spatialReference,o))for(const a of n)r(a.geometry)&&(a.geometry=l(f(d(a.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),o,this._queryEngine.spatialReference)));return n}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:s,customParameters:i}=this._loadOptions,r=(await e(s,{responseType:\"json\",query:{...i},signal:t})).data;return await j(r),r}_normalizeFeatures(e,t,s){const{objectIdField:i}=this._queryEngine,r=[];for(const n of e){const e=this._createDefaultAttributes(),a=T(this._fieldsIndex,e,n.attributes,!0,t);a?s?.push(a):(this._assignObjectId(e,n.attributes,!0),n.attributes=e,n.objectId=e[i],r.push(n))}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),s&&s.length&&this._applyUpdateEdits(r,s),i&&i.length){for(const e of i)r.deleteResults.push(x(e));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:n,timeExtent:a,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:n,hasZ:o,objectIdField:u,spatialReference:l,featureStore:d}=this._queryEngine,c=[];for(const p of t){if(p.geometry&&i!==a(p.geometry)){s.push(q(\"Incorrect geometry type.\"));continue}const t=this._createDefaultAttributes(),n=T(this._fieldsIndex,t,p.attributes);if(n)s.push(n);else{if(this._assignObjectId(t,p.attributes),p.attributes=t,null!=p.uid){const t=p.attributes[u];e.uidToObjectId[p.uid]=t}if(r(p.geometry)){const e=p.geometry.spatialReference??l;p.geometry=f(S(p.geometry,e),e,l)}c.push(p),s.push(x(p.attributes[u]))}}d.addMany(p([],c,i,o,n,u))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:n,objectIdField:o,spatialReference:u,featureStore:l}=this._queryEngine;for(const d of t){const{attributes:t,geometry:p}=d,y=t&&t[o];if(null==y){e.push(q(`Identifier field ${o} missing`));continue}if(!l.has(y)){e.push(q(`Feature with object id ${y} missing`));continue}const m=c(l.getFeature(y),s,n,i);if(r(p)){if(s!==a(p)){e.push(q(\"Incorrect geometry type.\"));continue}const t=p.spatialReference??u;m.geometry=f(S(p,t),t,u)}if(t){const s=T(this._fieldsIndex,m.attributes,t);if(s){e.push(s);continue}}l.add(h(m,s,n,i,o)),e.push(x(y))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if(\"esriFieldTypeString\"===s.type)return()=>s.name+\"-\"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const r of t)r.objectId&&(i=Math.max(i,r.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await m(o,e)}catch{throw new s(\"geojson-layer\",\"Projection not supported\")}}}export{D as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}