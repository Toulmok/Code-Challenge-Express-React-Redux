{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../request.js\";\nimport i from \"../../../core/Error.js\";\nimport { JSONSupport as o } from \"../../../core/JSONSupport.js\";\nimport r from \"../../../core/Logger.js\";\nimport { isSome as n, isNone as s, unwrap as a, unwrapOrThrow as l } from \"../../../core/maybe.js\";\nimport { EsriPromiseMixin as c } from \"../../../core/Promise.js\";\nimport { onAbort as m } from \"../../../core/promiseUtils.js\";\nimport { property as f } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { ensureClass as h } from \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as u } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { sanitizeUrl as p } from \"../arcgisLayerUrl.js\";\nimport { url as d } from \"../commonProperties.js\";\nimport x from \"../DimensionalDefinition.js\";\nimport y from \"../LOD.js\";\nimport g from \"../RasterStorageInfo.js\";\nimport I from \"../TileInfo.js\";\nimport { isMultiSliceOrRangeDefinition as R, getSliceIndex as w, createSlices as k, getSliceIds as S } from \"./multidimensionalUtils.js\";\nimport { getRasterId as v, getBlock as T, putBlock as b, deleteBlock as B, decreaseRefCount as P } from \"./RawBlockCache.js\";\nimport { convertNoDataToMask as M } from \"../rasterFormats/pixelRangeUtils.js\";\nimport { decode as W } from \"../rasterFormats/RasterCodec.js\";\nimport { mosaic as _, approximateTransform as C, getLocalArithmeticNorthRotations as j } from \"../rasterFunctions/pixelUtils.js\";\nimport { load as H, getWorldWidth as L, projectPoint as E, snapPyramid as D, snapExtent as z, getWorldWrapCount as A, projectExtent as F, getProjectionOffsetGrid as q, getRasterDatasetAlignmentInfo as O, projectResolution as G } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport { convertToLocalDirections as J, uvComponentToVector as N } from \"../rasterFunctions/vectorFieldUtils.js\";\nimport V from \"../../../geometry/Extent.js\";\nimport U from \"../../../geometry/Point.js\";\nconst $ = 8,\n  X = 256;\nlet K = class extends c(o) {\n  constructor() {\n    super(...arguments), this.rasterJobHandler = null, this.datasetName = null, this.datasetFormat = null, this.hasUniqueSourceStorageInfo = !0, this.rasterInfo = null, this.ioConfig = {\n      sampling: \"closest\"\n    };\n  }\n  async init() {\n    const e = H();\n    this.addResolvingPromise(e), await this.when();\n  }\n  normalizeCtorArgs(e) {\n    return e && e.ioConfig && (e = {\n      ...e,\n      ioConfig: {\n        resolution: null,\n        bandIds: null,\n        sampling: \"closest\",\n        tileInfo: I.create(),\n        ...e.ioConfig\n      }\n    }), e;\n  }\n  get _isGlobalWrappableSource() {\n    const {\n        rasterInfo: e\n      } = this,\n      t = L(e.spatialReference);\n    return n(t) && e.extent.width >= t / 2;\n  }\n  set url(e) {\n    this._set(\"url\", p(e, r.getLogger(this.declaredClass)));\n  }\n  async open(e) {\n    throw new i(\"BaseRaster:open-not-implemented\", \"open() is not implemented\");\n  }\n  async fetchTile(e, t, i) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const r = o.tileInfo || this.rasterInfo.storageInfo.tileInfo,\n      n = this.getTileExtentFromTileInfo(e, t, i, r);\n    return this.fetchPixels(n, r.size[0], r.size[1], o);\n  }\n  async identify(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    e = h(U, e).clone().normalize();\n    const {\n        multidimensionalDefinition: i,\n        timeExtent: o\n      } = t,\n      {\n        rasterInfo: r\n      } = this,\n      {\n        hasMultidimensionalTranspose: l,\n        multidimensionalInfo: c\n      } = r;\n    let {\n      transposedVariableName: m\n    } = t;\n    const f = n(c) && l && (null != o || R(i));\n    if (f && !m) {\n      m = n(i) && i.length > 0 ? i[0].variableName ?? void 0 : c.variables[0].name, t = {\n        ...t,\n        transposedVariableName: m\n      };\n    }\n    t = this._getRequestOptionsWithSliceId(t);\n    const {\n        spatialReference: u,\n        extent: p\n      } = r,\n      {\n        datumTransformation: d\n      } = t;\n    let x = E(e, u, d);\n    if (!p.intersects(x)) return {\n      location: x,\n      value: null\n    };\n    if (n(r.transform)) {\n      const e = r.transform.inverseTransform(x);\n      if (!r.nativeExtent.intersects(e)) return {\n        location: e,\n        value: null\n      };\n      x = e;\n    }\n    let y = 0;\n    const g = n(m) && n(c) && r.hasMultidimensionalTranspose;\n    if (\"Function\" === this.datasetFormat) {\n      const e = this.primaryRasters.rasters[0];\n      if (g) return e.identify(x, t);\n      const {\n          pixelSize: i\n        } = r,\n        o = 3,\n        a = i.x * o / 2,\n        l = i.y * o / 2,\n        c = new V({\n          xmin: x.x - a,\n          xmax: x.x + a,\n          ymin: x.y - l,\n          ymax: x.y + l,\n          spatialReference: u\n        }),\n        m = {\n          interpolation: \"nearest\"\n        },\n        {\n          pixelBlock: f\n        } = await e.fetchPixels(c, o, o, m),\n        {\n          pixelBlock: h\n        } = await this.fetchPixels(c, o, o, m);\n      if (s(f)) return {\n        location: x,\n        value: null\n      };\n      const p = Math.floor(o * o * .5),\n        d = !f.mask || f.mask[p] ? f.pixels.map(e => e[p]) : null;\n      let y;\n      return n(h) && (y = !h.mask || h.mask[p] ? h.pixels.map(e => e[p]) : void 0), {\n        location: x,\n        value: d,\n        processedValue: y,\n        pyramidLevel: 0\n      };\n    }\n    if (!g) if (t.srcResolution) {\n      y = D(t.srcResolution, r, this.ioConfig.sampling).pyramidLevel;\n    } else if (y = await this.computeBestPyramidLevelForLocation(e, t), null == y) return {\n      location: x,\n      value: null\n    };\n    const I = this.identifyPixelLocation(x, y, null, g);\n    if (null === I) return {\n      location: x,\n      value: null\n    };\n    const {\n        row: w,\n        col: k,\n        rowOffset: S,\n        colOffset: B,\n        blockWidth: P\n      } = I,\n      M = m ?? a(t.sliceId),\n      W = v(this.url, M),\n      _ = `${y}/${w}/${k}`;\n    let C = T(W, null, _);\n    s(C) && (C = this.fetchRawTile(y, w, k, t), b(W, null, _, C));\n    const j = await C;\n    if (s(j) || !j.pixels?.length) return {\n      location: x,\n      value: null\n    };\n    const H = S * P + B;\n    return this._processIdentifyResult(j, {\n      srcLocation: x,\n      position: H,\n      pyramidLevel: y,\n      useTransposedTile: !!g,\n      requestSomeSlices: f,\n      identifyOptions: t\n    });\n  }\n  async fetchPixels(e, t, i) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (e = z(e), (o = this._getRequestOptionsWithSliceId(o)).requestRawData) return this._fetchPixels(e, t, i, o);\n    const r = L(e.spatialReference),\n      n = A(e);\n    if (s(r) || 0 === n || 1 === n && this._isGlobalWrappableSource) return this._fetchPixels(e, t, i, o);\n    if (n >= 3) return {\n      extent: e,\n      pixelBlock: null\n    };\n    const a = [],\n      {\n        xmin: l,\n        xmax: c\n      } = e,\n      m = Math.round(r / (c - l) * t),\n      f = m - Math.round((r / 2 - l) / (c - l) * t);\n    let h = 0;\n    const u = [];\n    for (let s = 0; s <= n; s++) {\n      const p = new V({\n          xmin: 0 === s ? l : -r / 2,\n          xmax: s === n ? c - r * s : r / 2,\n          ymin: e.ymin,\n          ymax: e.ymax,\n          spatialReference: e.spatialReference\n        }),\n        d = 0 === s ? m - f : s === n ? t - h : m;\n      h += d, u.push(d);\n      const x = o.disableWrapAround && s > 0 ? null : this._fetchPixels(p, d, i, o);\n      a.push(x);\n    }\n    const p = (await Promise.all(a)).map(e => e?.pixelBlock);\n    let d = null;\n    const x = {\n      width: t,\n      height: i\n    };\n    if (this.rasterJobHandler) {\n      d = (await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: p,\n        srcMosaicSize: x,\n        destDimension: null,\n        coefs: null,\n        sampleSpacing: null,\n        interpolation: \"nearest\",\n        alignmentInfo: null,\n        blockWidths: u\n      }, o)).pixelBlock;\n    } else d = _(p, x, {\n      blockWidths: u\n    });\n    return {\n      extent: e,\n      srcExtent: F(e, this.rasterInfo.spatialReference, o.datumTransformation),\n      pixelBlock: d\n    };\n  }\n  async fetchRawPixels(e, t, i) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    t = {\n      x: Math.floor(t.x),\n      y: Math.floor(t.y)\n    };\n    const r = await this._fetchRawTiles(e, t, i, o),\n      {\n        nativeExtent: s,\n        nativePixelSize: a,\n        storageInfo: l\n      } = this.rasterInfo,\n      c = 2 ** e,\n      m = a.x * c,\n      f = a.y * c,\n      h = new V({\n        xmin: s.xmin + m * t.x,\n        xmax: s.xmin + m * (t.x + i.width - 1),\n        ymin: s.ymax - f * (t.y + i.height - 1),\n        ymax: s.ymax - f * t.y,\n        spatialReference: s.spatialReference\n      });\n    if (!r) return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: null\n    };\n    const {\n      pixelBlocks: u,\n      mosaicSize: p\n    } = r;\n    if (1 === u.length && n(u[0]) && u[0].width === i.width && u[0].height === i.height) return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: r.pixelBlocks[0]\n    };\n    const d = e > 0 ? l.pyramidBlockWidth : l.blockWidth,\n      x = e > 0 ? l.pyramidBlockHeight : l.blockHeight,\n      y = {\n        x: t.x % d,\n        y: t.y % x\n      };\n    let g;\n    if (this.rasterJobHandler) {\n      g = (await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: u,\n        srcMosaicSize: p,\n        destDimension: i,\n        clipOffset: y,\n        clipSize: i,\n        coefs: null,\n        sampleSpacing: null,\n        interpolation: o.interpolation,\n        alignmentInfo: null,\n        blockWidths: null\n      }, o)).pixelBlock;\n    } else g = _(u, p, {\n      clipOffset: y,\n      clipSize: i\n    });\n    return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: g\n    };\n  }\n  fetchRawTile(e, t, o, r) {\n    throw new i(\"BaseRaster:read-not-implemented\", \"fetchRawTile() is not implemented\");\n  }\n  computeExtent(e) {\n    return F(this.rasterInfo.extent, e);\n  }\n  decodePixelBlock(e, t) {\n    return !this.rasterJobHandler || t.useCanvas ? W(e, t) : this.rasterJobHandler.decode({\n      data: e,\n      options: t\n    });\n  }\n  async request(e, i) {\n    let o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const {\n        customFetchParameters: r\n      } = this.ioConfig,\n      {\n        range: n,\n        query: s,\n        headers: a\n      } = i;\n    o = o ?? i.retryCount ?? this.ioConfig.retryCount;\n    const l = n ? {\n      Range: `bytes=${n.from}-${n.to}`\n    } : null;\n    try {\n      return await t(e, {\n        ...i,\n        query: {\n          ...s,\n          ...r\n        },\n        headers: {\n          ...a,\n          ...l\n        }\n      });\n    } catch (c) {\n      if (o > 0) return o--, this.request(e, i, o);\n      throw c;\n    }\n  }\n  getSliceIndex(e) {\n    const {\n      multidimensionalInfo: t\n    } = this.rasterInfo;\n    return s(t) || s(e) || 0 === e.length ? null : w(e, t);\n  }\n  getTileExtentFromTileInfo(e, t, i, o) {\n    const r = l(o.lodAt(e));\n    return this.getTileExtent({\n      x: r.resolution,\n      y: r.resolution\n    }, t, i, o.origin, o.spatialReference, o.size);\n  }\n  updateTileInfo() {\n    const {\n      storageInfo: e,\n      spatialReference: t,\n      extent: i,\n      pixelSize: o\n    } = this.rasterInfo;\n    if (!e.tileInfo) {\n      const r = [],\n        n = e.maximumPyramidLevel || 0;\n      let s = Math.max(o.x, o.y),\n        a = 1 / .0254 * 96 * s;\n      for (let e = 0; e <= n; e++) r.push(new y({\n        level: n - e,\n        resolution: s,\n        scale: a\n      })), s *= 2, a *= 2;\n      const l = new U({\n        x: i.xmin,\n        y: i.ymax,\n        spatialReference: t\n      });\n      e.tileInfo = new I({\n        origin: l,\n        size: [e.blockWidth, e.blockHeight],\n        spatialReference: t,\n        lods: r\n      }), e.isVirtualTileInfo = !0;\n    }\n  }\n  createRemoteDatasetStorageInfo(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 512;\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 512;\n    let o = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n        width: r,\n        height: n,\n        nativeExtent: s,\n        pixelSize: a,\n        spatialReference: l\n      } = e,\n      c = new U({\n        x: s.xmin,\n        y: s.ymax,\n        spatialReference: l\n      });\n    null == o && (o = Math.max(0, Math.round(Math.log(Math.max(r, n)) / Math.LN2 - 8)));\n    const m = this.computeBlockBoundary(s, 512, 512, {\n      x: s.xmin,\n      y: s.ymax\n    }, [a], o);\n    e.storageInfo = new g({\n      blockWidth: t,\n      blockHeight: i,\n      pyramidBlockWidth: t,\n      pyramidBlockHeight: i,\n      origin: c,\n      firstPyramidLevel: 1,\n      maximumPyramidLevel: o,\n      blockBoundary: m\n    });\n  }\n  async computeBestPyramidLevelForLocation(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return 0;\n  }\n  computeBlockBoundary(e, t, i, o, r) {\n    let n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    let s = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 2;\n    if (1 === r.length && n > 0) {\n      r = [...r];\n      let {\n        x: e,\n        y: t\n      } = r[0];\n      for (let i = 0; i < n; i++) e *= s, t *= s, r.push({\n        x: e,\n        y: t\n      });\n    }\n    const a = [],\n      {\n        x: l,\n        y: c\n      } = o;\n    for (let m = 0; m < r.length; m++) {\n      const {\n        x: o,\n        y: n\n      } = r[m];\n      a.push({\n        minCol: Math.floor((e.xmin - l + .1 * o) / t / o),\n        maxCol: Math.floor((e.xmax - l - .1 * o) / t / o),\n        minRow: Math.floor((c - e.ymax + .1 * n) / i / n),\n        maxRow: Math.floor((c - e.ymin - .1 * n) / i / n)\n      });\n    }\n    return a;\n  }\n  getPyramidPixelSize(e) {\n    const {\n        nativePixelSize: t\n      } = this.rasterInfo,\n      {\n        pyramidResolutions: i,\n        pyramidScalingFactor: o\n      } = this.rasterInfo.storageInfo;\n    if (0 === e) return t;\n    if (n(i) && i.length) return i[e - 1];\n    const r = o ** e;\n    return {\n      x: t.x * r,\n      y: t.y * r\n    };\n  }\n  identifyPixelLocation(e, t, i, o) {\n    const {\n        spatialReference: r,\n        nativeExtent: s,\n        storageInfo: a\n      } = this.rasterInfo,\n      {\n        maximumPyramidLevel: l,\n        origin: c,\n        transposeInfo: m\n      } = a,\n      f = o && n(m) ? m.tileSize[0] : a.blockWidth,\n      h = o && n(m) ? m.tileSize[1] : a.blockHeight,\n      u = E(e, r, i);\n    if (!s.intersects(u)) return null;\n    if (t < 0 || t > l) return null;\n    const p = this.getPyramidPixelSize(t),\n      {\n        x: d,\n        y: x\n      } = p,\n      y = (c.y - u.y) / x / h,\n      g = (u.x - c.x) / d / f,\n      I = Math.min(h - 1, Math.floor((y - Math.floor(y)) * h)),\n      R = Math.min(f - 1, Math.floor((g - Math.floor(g)) * f));\n    return {\n      pyramidLevel: t,\n      row: Math.floor(y),\n      col: Math.floor(g),\n      rowOffset: I,\n      colOffset: R,\n      blockWidth: f,\n      srcLocation: u\n    };\n  }\n  getTileExtent(e, t, i, o, r, n) {\n    const [s, a] = n,\n      l = o.x + i * s * e.x,\n      c = l + s * e.x,\n      m = o.y - t * a * e.y,\n      f = m - a * e.y;\n    return new V({\n      xmin: l,\n      xmax: c,\n      ymin: f,\n      ymax: m,\n      spatialReference: r\n    });\n  }\n  getBlockWidthHeight(e) {\n    return {\n      blockWidth: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockWidth : this.rasterInfo.storageInfo.blockWidth,\n      blockHeight: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockHeight : this.rasterInfo.storageInfo.blockHeight\n    };\n  }\n  isBlockOutside(e, t, i) {\n    const o = this.rasterInfo.storageInfo.blockBoundary[e];\n    return !o || o.maxRow < t || o.maxCol < i || o.minRow > t || o.minCol > i;\n  }\n  async _fetchPixels(e, t, i) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let r = A(e);\n    if (r >= 2) return {\n      extent: e,\n      pixelBlock: null\n    };\n    const s = this._getSourceDataInfo(e, t, i, o),\n      {\n        pyramidLevel: l,\n        pyramidResolution: c,\n        srcResolution: m,\n        srcExtent: f,\n        srcWidth: h,\n        srcHeight: u\n      } = s;\n    if (0 === h || 0 === u) return {\n      extent: e,\n      srcExtent: f,\n      pixelBlock: null\n    };\n    const p = a(this.rasterInfo.transform),\n      d = \"gcs-shift\" === p?.type,\n      x = n(L(e.spatialReference));\n    !d && x || (r = A(s.srcExtent, d));\n    const y = this.rasterInfo.storageInfo,\n      g = {\n        x: Math.floor((f.xmin - y.origin.x) / c.x + .1),\n        y: Math.floor((y.origin.y - f.ymax) / c.y + .1)\n      },\n      I = await this._fetchRawTiles(l, g, {\n        width: h,\n        height: u,\n        wrapCount: r\n      }, o);\n    if (!I) return {\n      extent: e,\n      srcExtent: f,\n      pixelBlock: null\n    };\n    const R = l > 0 ? y.pyramidBlockWidth : y.blockWidth,\n      w = l > 0 ? y.pyramidBlockHeight : y.blockHeight,\n      k = R === h && w === u && g.x % R == 0 && g.y % w == 0,\n      S = new U({\n        x: (e.xmax - e.xmin) / t,\n        y: (e.ymax - e.ymin) / i,\n        spatialReference: e.spatialReference\n      }),\n      v = !e.spatialReference.equals(this.rasterInfo.spatialReference),\n      {\n        datumTransformation: T\n      } = o;\n    if (!v && k && 1 === I.pixelBlocks.length && R === t && w === i && m.x === S.x && m.y === S.y) return {\n      extent: e,\n      srcExtent: f,\n      pixelBlock: I.pixelBlocks[0]\n    };\n    const b = x && n(L(f.spatialReference)),\n      B = o.requestProjectedLocalDirections && this.rasterInfo.dataType.startsWith(\"vector\");\n    B && !this.rasterJobHandler && (await H());\n    const P = this.rasterJobHandler ? await this.rasterJobHandler.getProjectionOffsetGrid({\n      projectedExtent: e,\n      srcBufferExtent: I.extent,\n      pixelSize: S.toJSON(),\n      datumTransformation: T,\n      rasterTransform: p,\n      hasWrapAround: r > 0 || b,\n      isAdaptive: !1 !== this.ioConfig.optimizeProjectionAccuracy,\n      includeGCSGrid: B\n    }, o) : q({\n      projectedExtent: e,\n      srcBufferExtent: I.extent,\n      pixelSize: S,\n      datumTransformation: T,\n      rasterTransform: p,\n      hasWrapAround: r > 0 || b,\n      isAdaptive: !1,\n      includeGCSGrid: B\n    });\n    let M;\n    const W = !o.requestRawData,\n      E = {\n        rows: P.spacing[0],\n        cols: P.spacing[1]\n      },\n      D = a(this._getRasterTileAlignmentInfo(l, I.extent.xmin)),\n      {\n        pixelBlocks: z,\n        mosaicSize: F,\n        isPartiallyFilled: O\n      } = I;\n    let G = null;\n    if (this.rasterJobHandler) {\n      const e = await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: z,\n        srcMosaicSize: F,\n        destDimension: W ? {\n          width: t,\n          height: i\n        } : null,\n        coefs: W ? P.coefficients : null,\n        sampleSpacing: W ? E : null,\n        projectDirections: B,\n        gcsGrid: B ? P.gcsGrid : null,\n        isUV: \"vector-uv\" === this.rasterInfo.dataType,\n        interpolation: o.interpolation,\n        alignmentInfo: D,\n        blockWidths: null\n      }, o);\n      ({\n        pixelBlock: M,\n        localNorthDirections: G\n      } = e);\n    } else {\n      const e = _(z, F, {\n        alignmentInfo: D\n      });\n      M = W ? C(e, {\n        width: t,\n        height: i\n      }, P.coefficients, E, o.interpolation) : e, B && P.gcsGrid && (G = j({\n        width: t,\n        height: i\n      }, P.gcsGrid), M = J(M, this.rasterInfo.dataType, G));\n    }\n    return o.requestRawData || B ? {\n      srcExtent: f,\n      pixelBlock: M,\n      transformGrid: P,\n      localNorthDirections: G,\n      extent: e,\n      isPartiallyFilled: O\n    } : {\n      srcExtent: f,\n      extent: e,\n      pixelBlock: M\n    };\n  }\n  async _fetchRawTiles(e, t, i, o) {\n    const {\n        origin: r,\n        blockBoundary: s\n      } = this.rasterInfo.storageInfo,\n      {\n        blockWidth: a,\n        blockHeight: l\n      } = this.getBlockWidthHeight(e);\n    let {\n        x: c,\n        y: m\n      } = t,\n      {\n        width: f,\n        height: h,\n        wrapCount: u\n      } = i;\n    const p = this._getRasterTileAlignmentInfo(e, 0);\n    o.buffer && (c -= o.buffer.cols, m -= o.buffer.rows, f += 2 * o.buffer.cols, h += 2 * o.buffer.rows);\n    let d = 0,\n      x = 0,\n      y = 0;\n    if (u && n(p)) {\n      ({\n        worldColumnCountFromOrigin: x,\n        originColumnOffset: y,\n        rightPadding: d\n      } = p);\n      x * p.blockWidth - d >= c + f && (d = 0);\n    }\n    const g = Math.floor(c / a),\n      I = Math.floor(m / l),\n      R = Math.floor((c + f + d - 1) / a),\n      w = Math.floor((m + h + d - 1) / l),\n      k = s[e];\n    if (!k) return null;\n    const {\n      minRow: S,\n      minCol: v,\n      maxCol: T,\n      maxRow: b\n    } = k;\n    if (0 === u && (w < S || R < v || I > b || g > T)) return null;\n    const B = new Array();\n    let P = !1;\n    const M = null == this.ioConfig.allowPartialFill ? o.allowPartialFill : this.ioConfig.allowPartialFill;\n    for (let E = I; E <= w; E++) for (let t = g; t <= R; t++) {\n      let i = t;\n      if (!o.disableWrapAround && u && n(p) && x <= t && (i = t - x - y), E >= S && i >= v && b >= E && T >= i) {\n        const t = this._fetchRawTile(e, E, i, o);\n        M ? B.push(new Promise(e => {\n          t.then(t => e(t)).catch(() => {\n            P = !0, e(null);\n          });\n        })) : B.push(t);\n      } else B.push(Promise.resolve(null));\n    }\n    if (0 === B.length) return null;\n    const W = await Promise.all(B),\n      _ = {\n        height: (w - I + 1) * l,\n        width: (R - g + 1) * a\n      },\n      {\n        spatialReference: C\n      } = this.rasterInfo,\n      j = this.getPyramidPixelSize(e),\n      {\n        x: H,\n        y: L\n      } = j;\n    return {\n      extent: new V({\n        xmin: r.x + g * a * H,\n        xmax: r.x + (R + 1) * a * H,\n        ymin: r.y - (w + 1) * l * L,\n        ymax: r.y - I * l * L,\n        spatialReference: C\n      }),\n      pixelBlocks: W,\n      mosaicSize: _,\n      isPartiallyFilled: P\n    };\n  }\n  _fetchRawTile(e, t, i, o) {\n    const r = this.rasterInfo.storageInfo.blockBoundary[e];\n    if (!r) return Promise.resolve(null);\n    const {\n      minRow: n,\n      minCol: a,\n      maxCol: l,\n      maxRow: c\n    } = r;\n    if (t < n || i < a || t > c || i > l) return Promise.resolve(null);\n    const f = v(this.url, o.sliceId),\n      h = `${e}/${t}/${i}`;\n    let u = T(f, o.registryId, h);\n    if (s(u)) {\n      const r = new AbortController();\n      u = this.fetchRawTile(e, t, i, {\n        ...o,\n        signal: r.signal\n      }), b(f, o.registryId, h, u, r), u.catch(() => B(f, o.registryId, h));\n    }\n    return o.signal && m(o, () => {\n      P(f, o.registryId, h);\n    }), u;\n  }\n  _computeMagDirValues(e) {\n    const {\n      bandCount: t,\n      dataType: i\n    } = this.rasterInfo;\n    if (!(2 === t && \"vector-magdir\" === i || \"vector-uv\" === i) || 2 !== e?.length || !e[0]?.length) return null;\n    const o = e[0].length;\n    if (\"vector-magdir\" === i) {\n      const t = e[1].map(e => (e + 360) % 360);\n      return [e[0], t];\n    }\n    const [r, n] = e,\n      s = [],\n      a = [];\n    for (let l = 0; l < o; l++) {\n      const [e, t] = N([r[l], n[l]]);\n      s.push(e), a.push(t);\n    }\n    return [s, a];\n  }\n  _getRasterTileAlignmentInfo(e, t) {\n    return null == this._rasterTileAlighmentInfo && (this._rasterTileAlighmentInfo = O(this.rasterInfo)), s(this._rasterTileAlighmentInfo.pyramidsInfo) ? null : {\n      startX: t,\n      halfWorldWidth: this._rasterTileAlighmentInfo.halfWorldWidth,\n      hasGCSSShiftTransform: this._rasterTileAlighmentInfo.hasGCSSShiftTransform,\n      ...this._rasterTileAlighmentInfo.pyramidsInfo[e]\n    };\n  }\n  _getSourceDataInfo(e, t, i) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const r = {\n      datumTransformation: o.datumTransformation,\n      pyramidLevel: 0,\n      pyramidResolution: null,\n      srcExtent: null,\n      srcHeight: 0,\n      srcResolution: null,\n      srcWidth: 0\n    };\n    o.srcResolution && (r.srcResolution = o.srcResolution, this._updateSourceDataInfo(e, r));\n    const n = this.rasterInfo.storageInfo.maximumPyramidLevel || 0,\n      {\n        srcWidth: s,\n        srcHeight: a,\n        pyramidLevel: l\n      } = r,\n      c = s / t,\n      m = a / i,\n      f = l < n && c * m >= 16,\n      h = l === n && this._requireTooManySrcTiles(s, a, t, i);\n    if (f || h || 0 === s || 0 === a) {\n      const s = new U({\n        x: (e.xmax - e.xmin) / t,\n        y: (e.ymax - e.ymin) / i,\n        spatialReference: e.spatialReference\n      });\n      let a = G(s, this.rasterInfo.spatialReference, e, r.datumTransformation);\n      const h = !a || o.srcResolution && a.x + a.y < o.srcResolution.x + o.srcResolution.y;\n      if (f && o.srcResolution && h) {\n        const e = Math.round(Math.log(Math.max(c, m)) / Math.LN2) - 1;\n        if (n - l + 3 >= e) {\n          const t = 2 ** e;\n          a = {\n            x: o.srcResolution.x * t,\n            y: o.srcResolution.y * t\n          };\n        }\n      }\n      a && (r.srcResolution = a, this._updateSourceDataInfo(e, r));\n    }\n    return this._requireTooManySrcTiles(r.srcWidth, r.srcHeight, t, i) && (r.srcWidth = 0, r.srcHeight = 0), r;\n  }\n  _requireTooManySrcTiles(e, t, i, o) {\n    const {\n      tileInfo: r\n    } = this.rasterInfo.storageInfo;\n    return Math.ceil(e / r.size[0]) * Math.ceil(t / r.size[1]) >= X || e / i > $ || t / o > $;\n  }\n  _updateSourceDataInfo(e, t) {\n    t.srcWidth = 0, t.srcHeight = 0;\n    const i = this.rasterInfo.spatialReference,\n      {\n        srcResolution: o,\n        datumTransformation: r\n      } = t,\n      {\n        pyramidLevel: n,\n        pyramidResolution: s,\n        excessiveReading: l\n      } = D(o, this.rasterInfo, this.ioConfig.sampling);\n    if (l) return;\n    let c = t.srcExtent || F(e, i, r);\n    if (null == c) return;\n    const m = a(this.rasterInfo.transform);\n    m && (c = m.inverseTransform(c)), t.srcExtent = c;\n    const f = Math.ceil((c.xmax - c.xmin) / s.x - .1),\n      h = Math.ceil((c.ymax - c.ymin) / s.y - .1);\n    t.pyramidLevel = n, t.pyramidResolution = s, t.srcWidth = f, t.srcHeight = h;\n  }\n  _getRequestOptionsWithSliceId(e) {\n    return n(this.rasterInfo.multidimensionalInfo) && null == e.sliceId && (e = {\n      ...e,\n      sliceId: this.getSliceIndex(e.multidimensionalDefinition)\n    }), e;\n  }\n  _processIdentifyResult(e, t) {\n    const {\n        srcLocation: i,\n        position: o,\n        pyramidLevel: r,\n        useTransposedTile: l\n      } = t,\n      c = e.pixels[0].length / e.width / e.height;\n    if (!(!e.mask || e.mask[o])) return {\n      location: i,\n      value: null\n    };\n    const {\n      multidimensionalInfo: m\n    } = this.rasterInfo;\n    if (s(m) || !l) {\n      const t = e.pixels.map(e => e[o]),\n        n = {\n          location: i,\n          value: t,\n          pyramidLevel: r\n        },\n        s = this._computeMagDirValues(t.map(e => [e]));\n      return s?.length && (n.magdirValue = s.map(e => e[0])), n;\n    }\n    let f = e.pixels.map(e => e.slice(o * c, o * c + c)),\n      h = this._computeMagDirValues(f);\n    const {\n      requestSomeSlices: u,\n      identifyOptions: p\n    } = t;\n    let d = k(m, p.transposedVariableName);\n    if (u) {\n      const e = S(d, a(p.multidimensionalDefinition), a(p.timeExtent));\n      f = f.map(t => e.map(e => t[e])), h = h?.map(t => e.map(e => t[e])), d = e.map(e => d[e]);\n    }\n    const y = e.noDataValues || this.rasterInfo.noDataValue,\n      g = {\n        pixels: f,\n        pixelType: e.pixelType\n      };\n    let I;\n    n(y) && (M(g, y), I = g.mask);\n    return {\n      location: i,\n      value: null,\n      dataSeries: d.map((e, t) => {\n        const i = {\n          value: 0 === I?.[t] ? null : f.map(e => e[t]),\n          multidimensionalDefinition: e.multidimensionalDefinition.map(e => new x({\n            ...e,\n            isSlice: !0\n          }))\n        };\n        return h?.length && (i.magdirValue = [h[0][t], h[1][t]]), i;\n      }),\n      pyramidLevel: r\n    };\n  }\n};\ne([f()], K.prototype, \"_rasterTileAlighmentInfo\", void 0), e([f({\n  readOnly: !0\n})], K.prototype, \"_isGlobalWrappableSource\", null), e([f(d)], K.prototype, \"url\", null), e([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], K.prototype, \"datasetName\", void 0), e([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], K.prototype, \"datasetFormat\", void 0), e([f()], K.prototype, \"hasUniqueSourceStorageInfo\", void 0), e([f()], K.prototype, \"rasterInfo\", void 0), e([f()], K.prototype, \"ioConfig\", void 0), e([f()], K.prototype, \"sourceJSON\", void 0), K = e([u(\"esri.layers.support.rasterDatasets.BaseRaster\")], K);\nconst Q = K;\nexport { Q as default };","map":{"version":3,"names":["_","e","t","i","JSONSupport","o","r","isSome","n","isNone","s","unwrap","a","unwrapOrThrow","l","EsriPromiseMixin","c","onAbort","m","property","f","ensureClass","h","subclass","u","sanitizeUrl","p","url","d","x","y","g","I","isMultiSliceOrRangeDefinition","R","getSliceIndex","w","createSlices","k","getSliceIds","S","getRasterId","v","getBlock","T","putBlock","b","deleteBlock","B","decreaseRefCount","P","convertNoDataToMask","M","decode","W","mosaic","approximateTransform","C","getLocalArithmeticNorthRotations","j","load","H","getWorldWidth","L","projectPoint","E","snapPyramid","D","snapExtent","z","getWorldWrapCount","A","projectExtent","F","getProjectionOffsetGrid","q","getRasterDatasetAlignmentInfo","O","projectResolution","G","convertToLocalDirections","J","uvComponentToVector","N","V","U","$","X","K","constructor","arguments","rasterJobHandler","datasetName","datasetFormat","hasUniqueSourceStorageInfo","rasterInfo","ioConfig","sampling","init","addResolvingPromise","when","normalizeCtorArgs","resolution","bandIds","tileInfo","create","_isGlobalWrappableSource","spatialReference","extent","width","_set","getLogger","declaredClass","open","fetchTile","length","undefined","storageInfo","getTileExtentFromTileInfo","fetchPixels","size","identify","clone","normalize","multidimensionalDefinition","timeExtent","hasMultidimensionalTranspose","multidimensionalInfo","transposedVariableName","variableName","variables","name","_getRequestOptionsWithSliceId","datumTransformation","intersects","location","value","transform","inverseTransform","nativeExtent","primaryRasters","rasters","pixelSize","xmin","xmax","ymin","ymax","interpolation","pixelBlock","Math","floor","mask","pixels","map","processedValue","pyramidLevel","srcResolution","computeBestPyramidLevelForLocation","identifyPixelLocation","row","col","rowOffset","colOffset","blockWidth","sliceId","fetchRawTile","_processIdentifyResult","srcLocation","position","useTransposedTile","requestSomeSlices","identifyOptions","requestRawData","_fetchPixels","round","push","disableWrapAround","Promise","all","height","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","destDimension","coefs","sampleSpacing","alignmentInfo","blockWidths","srcExtent","fetchRawPixels","_fetchRawTiles","nativePixelSize","pixelBlocks","mosaicSize","pyramidBlockWidth","pyramidBlockHeight","blockHeight","clipOffset","clipSize","computeExtent","decodePixelBlock","useCanvas","data","options","request","customFetchParameters","range","query","headers","retryCount","Range","from","to","lodAt","getTileExtent","origin","updateTileInfo","maximumPyramidLevel","max","level","scale","lods","isVirtualTileInfo","createRemoteDatasetStorageInfo","log","LN2","computeBlockBoundary","firstPyramidLevel","blockBoundary","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","pyramidResolutions","pyramidScalingFactor","transposeInfo","tileSize","min","getBlockWidthHeight","isBlockOutside","_getSourceDataInfo","pyramidResolution","srcWidth","srcHeight","type","wrapCount","equals","requestProjectedLocalDirections","dataType","startsWith","projectedExtent","srcBufferExtent","toJSON","rasterTransform","hasWrapAround","isAdaptive","optimizeProjectionAccuracy","includeGCSGrid","rows","spacing","cols","_getRasterTileAlignmentInfo","isPartiallyFilled","coefficients","projectDirections","gcsGrid","isUV","localNorthDirections","transformGrid","buffer","worldColumnCountFromOrigin","originColumnOffset","rightPadding","Array","allowPartialFill","_fetchRawTile","then","catch","resolve","registryId","AbortController","signal","_computeMagDirValues","bandCount","_rasterTileAlighmentInfo","pyramidsInfo","startX","halfWorldWidth","hasGCSSShiftTransform","_updateSourceDataInfo","_requireTooManySrcTiles","ceil","excessiveReading","magdirValue","slice","noDataValues","noDataValue","pixelType","dataSeries","isSlice","prototype","readOnly","String","json","write","Q","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../request.js\";import i from\"../../../core/Error.js\";import{JSONSupport as o}from\"../../../core/JSONSupport.js\";import r from\"../../../core/Logger.js\";import{isSome as n,isNone as s,unwrap as a,unwrapOrThrow as l}from\"../../../core/maybe.js\";import{EsriPromiseMixin as c}from\"../../../core/Promise.js\";import{onAbort as m}from\"../../../core/promiseUtils.js\";import{property as f}from\"../../../core/accessorSupport/decorators/property.js\";import{ensureClass as h}from\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as u}from\"../../../core/accessorSupport/decorators/subclass.js\";import{sanitizeUrl as p}from\"../arcgisLayerUrl.js\";import{url as d}from\"../commonProperties.js\";import x from\"../DimensionalDefinition.js\";import y from\"../LOD.js\";import g from\"../RasterStorageInfo.js\";import I from\"../TileInfo.js\";import{isMultiSliceOrRangeDefinition as R,getSliceIndex as w,createSlices as k,getSliceIds as S}from\"./multidimensionalUtils.js\";import{getRasterId as v,getBlock as T,putBlock as b,deleteBlock as B,decreaseRefCount as P}from\"./RawBlockCache.js\";import{convertNoDataToMask as M}from\"../rasterFormats/pixelRangeUtils.js\";import{decode as W}from\"../rasterFormats/RasterCodec.js\";import{mosaic as _,approximateTransform as C,getLocalArithmeticNorthRotations as j}from\"../rasterFunctions/pixelUtils.js\";import{load as H,getWorldWidth as L,projectPoint as E,snapPyramid as D,snapExtent as z,getWorldWrapCount as A,projectExtent as F,getProjectionOffsetGrid as q,getRasterDatasetAlignmentInfo as O,projectResolution as G}from\"../rasterFunctions/rasterProjectionHelper.js\";import{convertToLocalDirections as J,uvComponentToVector as N}from\"../rasterFunctions/vectorFieldUtils.js\";import V from\"../../../geometry/Extent.js\";import U from\"../../../geometry/Point.js\";const $=8,X=256;let K=class extends(c(o)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:\"closest\"}}async init(){const e=H();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:\"closest\",tileInfo:I.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=L(e.spatialReference);return n(t)&&e.extent.width>=t/2}set url(e){this._set(\"url\",p(e,r.getLogger(this.declaredClass)))}async open(e){throw new i(\"BaseRaster:open-not-implemented\",\"open() is not implemented\")}async fetchTile(e,t,i,o={}){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(n,r.size[0],r.size[1],o)}async identify(e,t={}){e=h(U,e).clone().normalize();const{multidimensionalDefinition:i,timeExtent:o}=t,{rasterInfo:r}=this,{hasMultidimensionalTranspose:l,multidimensionalInfo:c}=r;let{transposedVariableName:m}=t;const f=n(c)&&l&&(null!=o||R(i));if(f&&!m){m=n(i)&&i.length>0?i[0].variableName??void 0:c.variables[0].name,t={...t,transposedVariableName:m}}t=this._getRequestOptionsWithSliceId(t);const{spatialReference:u,extent:p}=r,{datumTransformation:d}=t;let x=E(e,u,d);if(!p.intersects(x))return{location:x,value:null};if(n(r.transform)){const e=r.transform.inverseTransform(x);if(!r.nativeExtent.intersects(e))return{location:e,value:null};x=e}let y=0;const g=n(m)&&n(c)&&r.hasMultidimensionalTranspose;if(\"Function\"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(g)return e.identify(x,t);const{pixelSize:i}=r,o=3,a=i.x*o/2,l=i.y*o/2,c=new V({xmin:x.x-a,xmax:x.x+a,ymin:x.y-l,ymax:x.y+l,spatialReference:u}),m={interpolation:\"nearest\"},{pixelBlock:f}=await e.fetchPixels(c,o,o,m),{pixelBlock:h}=await this.fetchPixels(c,o,o,m);if(s(f))return{location:x,value:null};const p=Math.floor(o*o*.5),d=!f.mask||f.mask[p]?f.pixels.map((e=>e[p])):null;let y;return n(h)&&(y=!h.mask||h.mask[p]?h.pixels.map((e=>e[p])):void 0),{location:x,value:d,processedValue:y,pyramidLevel:0}}if(!g)if(t.srcResolution){y=D(t.srcResolution,r,this.ioConfig.sampling).pyramidLevel}else if(y=await this.computeBestPyramidLevelForLocation(e,t),null==y)return{location:x,value:null};const I=this.identifyPixelLocation(x,y,null,g);if(null===I)return{location:x,value:null};const{row:w,col:k,rowOffset:S,colOffset:B,blockWidth:P}=I,M=m??a(t.sliceId),W=v(this.url,M),_=`${y}/${w}/${k}`;let C=T(W,null,_);s(C)&&(C=this.fetchRawTile(y,w,k,t),b(W,null,_,C));const j=await C;if(s(j)||!j.pixels?.length)return{location:x,value:null};const H=S*P+B;return this._processIdentifyResult(j,{srcLocation:x,position:H,pyramidLevel:y,useTransposedTile:!!g,requestSomeSlices:f,identifyOptions:t})}async fetchPixels(e,t,i,o={}){if(e=z(e),(o=this._getRequestOptionsWithSliceId(o)).requestRawData)return this._fetchPixels(e,t,i,o);const r=L(e.spatialReference),n=A(e);if(s(r)||0===n||1===n&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,o);if(n>=3)return{extent:e,pixelBlock:null};const a=[],{xmin:l,xmax:c}=e,m=Math.round(r/(c-l)*t),f=m-Math.round((r/2-l)/(c-l)*t);let h=0;const u=[];for(let s=0;s<=n;s++){const p=new V({xmin:0===s?l:-r/2,xmax:s===n?c-r*s:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),d=0===s?m-f:s===n?t-h:m;h+=d,u.push(d);const x=o.disableWrapAround&&s>0?null:this._fetchPixels(p,d,i,o);a.push(x)}const p=(await Promise.all(a)).map((e=>e?.pixelBlock));let d=null;const x={width:t,height:i};if(this.rasterJobHandler){d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:\"nearest\",alignmentInfo:null,blockWidths:u},o)).pixelBlock}else d=_(p,x,{blockWidths:u});return{extent:e,srcExtent:F(e,this.rasterInfo.spatialReference,o.datumTransformation),pixelBlock:d}}async fetchRawPixels(e,t,i,o={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,o),{nativeExtent:s,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**e,m=a.x*c,f=a.y*c,h=new V({xmin:s.xmin+m*t.x,xmax:s.xmin+m*(t.x+i.width-1),ymin:s.ymax-f*(t.y+i.height-1),ymax:s.ymax-f*t.y,spatialReference:s.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:u,mosaicSize:p}=r;if(1===u.length&&n(u[0])&&u[0].width===i.width&&u[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const d=e>0?l.pyramidBlockWidth:l.blockWidth,x=e>0?l.pyramidBlockHeight:l.blockHeight,y={x:t.x%d,y:t.y%x};let g;if(this.rasterJobHandler){g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:p,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:o.interpolation,alignmentInfo:null,blockWidths:null},o)).pixelBlock}else g=_(u,p,{clipOffset:y,clipSize:i});return{extent:h,srcExtent:h,pixelBlock:g}}fetchRawTile(e,t,o,r){throw new i(\"BaseRaster:read-not-implemented\",\"fetchRawTile() is not implemented\")}computeExtent(e){return F(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?W(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,i,o=0){const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:a}=i;o=o??i.retryCount??this.ioConfig.retryCount;const l=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await t(e,{...i,query:{...s,...r},headers:{...a,...l}})}catch(c){if(o>0)return o--,this.request(e,i,o);throw c}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return s(t)||s(e)||0===e.length?null:w(e,t)}getTileExtentFromTileInfo(e,t,i,o){const r=l(o.lodAt(e));return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,o.origin,o.spatialReference,o.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let e=0;e<=n;e++)r.push(new y({level:n-e,resolution:s,scale:a})),s*=2,a*=2;const l=new U({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new I({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,o){const{width:r,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=e,c=new U({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const m=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[a],o);e.storageInfo=new g({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,o,r,n=0,s=2){if(1===r.length&&n>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<n;i++)e*=s,t*=s,r.push({x:e,y:t})}const a=[],{x:l,y:c}=o;for(let m=0;m<r.length;m++){const{x:o,y:n}=r[m];a.push({minCol:Math.floor((e.xmin-l+.1*o)/t/o),maxCol:Math.floor((e.xmax-l-.1*o)/t/o),minRow:Math.floor((c-e.ymax+.1*n)/i/n),maxRow:Math.floor((c-e.ymin-.1*n)/i/n)})}return a}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===e)return t;if(n(i)&&i.length)return i[e-1];const r=o**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,o){const{spatialReference:r,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:m}=a,f=o&&n(m)?m.tileSize[0]:a.blockWidth,h=o&&n(m)?m.tileSize[1]:a.blockHeight,u=E(e,r,i);if(!s.intersects(u))return null;if(t<0||t>l)return null;const p=this.getPyramidPixelSize(t),{x:d,y:x}=p,y=(c.y-u.y)/x/h,g=(u.x-c.x)/d/f,I=Math.min(h-1,Math.floor((y-Math.floor(y))*h)),R=Math.min(f-1,Math.floor((g-Math.floor(g))*f));return{pyramidLevel:t,row:Math.floor(y),col:Math.floor(g),rowOffset:I,colOffset:R,blockWidth:f,srcLocation:u}}getTileExtent(e,t,i,o,r,n){const[s,a]=n,l=o.x+i*s*e.x,c=l+s*e.x,m=o.y-t*a*e.y,f=m-a*e.y;return new V({xmin:l,xmax:c,ymin:f,ymax:m,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const o=this.rasterInfo.storageInfo.blockBoundary[e];return!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i}async _fetchPixels(e,t,i,o={}){let r=A(e);if(r>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,o),{pyramidLevel:l,pyramidResolution:c,srcResolution:m,srcExtent:f,srcWidth:h,srcHeight:u}=s;if(0===h||0===u)return{extent:e,srcExtent:f,pixelBlock:null};const p=a(this.rasterInfo.transform),d=\"gcs-shift\"===p?.type,x=n(L(e.spatialReference));!d&&x||(r=A(s.srcExtent,d));const y=this.rasterInfo.storageInfo,g={x:Math.floor((f.xmin-y.origin.x)/c.x+.1),y:Math.floor((y.origin.y-f.ymax)/c.y+.1)},I=await this._fetchRawTiles(l,g,{width:h,height:u,wrapCount:r},o);if(!I)return{extent:e,srcExtent:f,pixelBlock:null};const R=l>0?y.pyramidBlockWidth:y.blockWidth,w=l>0?y.pyramidBlockHeight:y.blockHeight,k=R===h&&w===u&&g.x%R==0&&g.y%w==0,S=new U({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),v=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:T}=o;if(!v&&k&&1===I.pixelBlocks.length&&R===t&&w===i&&m.x===S.x&&m.y===S.y)return{extent:e,srcExtent:f,pixelBlock:I.pixelBlocks[0]};const b=x&&n(L(f.spatialReference)),B=o.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith(\"vector\");B&&!this.rasterJobHandler&&await H();const P=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:I.extent,pixelSize:S.toJSON(),datumTransformation:T,rasterTransform:p,hasWrapAround:r>0||b,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:B},o):q({projectedExtent:e,srcBufferExtent:I.extent,pixelSize:S,datumTransformation:T,rasterTransform:p,hasWrapAround:r>0||b,isAdaptive:!1,includeGCSGrid:B});let M;const W=!o.requestRawData,E={rows:P.spacing[0],cols:P.spacing[1]},D=a(this._getRasterTileAlignmentInfo(l,I.extent.xmin)),{pixelBlocks:z,mosaicSize:F,isPartiallyFilled:O}=I;let G=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:z,srcMosaicSize:F,destDimension:W?{width:t,height:i}:null,coefs:W?P.coefficients:null,sampleSpacing:W?E:null,projectDirections:B,gcsGrid:B?P.gcsGrid:null,isUV:\"vector-uv\"===this.rasterInfo.dataType,interpolation:o.interpolation,alignmentInfo:D,blockWidths:null},o);({pixelBlock:M,localNorthDirections:G}=e)}else{const e=_(z,F,{alignmentInfo:D});M=W?C(e,{width:t,height:i},P.coefficients,E,o.interpolation):e,B&&P.gcsGrid&&(G=j({width:t,height:i},P.gcsGrid),M=J(M,this.rasterInfo.dataType,G))}return o.requestRawData||B?{srcExtent:f,pixelBlock:M,transformGrid:P,localNorthDirections:G,extent:e,isPartiallyFilled:O}:{srcExtent:f,extent:e,pixelBlock:M}}async _fetchRawTiles(e,t,i,o){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:m}=t,{width:f,height:h,wrapCount:u}=i;const p=this._getRasterTileAlignmentInfo(e,0);o.buffer&&(c-=o.buffer.cols,m-=o.buffer.rows,f+=2*o.buffer.cols,h+=2*o.buffer.rows);let d=0,x=0,y=0;if(u&&n(p)){({worldColumnCountFromOrigin:x,originColumnOffset:y,rightPadding:d}=p);x*p.blockWidth-d>=c+f&&(d=0)}const g=Math.floor(c/a),I=Math.floor(m/l),R=Math.floor((c+f+d-1)/a),w=Math.floor((m+h+d-1)/l),k=s[e];if(!k)return null;const{minRow:S,minCol:v,maxCol:T,maxRow:b}=k;if(0===u&&(w<S||R<v||I>b||g>T))return null;const B=new Array;let P=!1;const M=null==this.ioConfig.allowPartialFill?o.allowPartialFill:this.ioConfig.allowPartialFill;for(let E=I;E<=w;E++)for(let t=g;t<=R;t++){let i=t;if(!o.disableWrapAround&&u&&n(p)&&x<=t&&(i=t-x-y),E>=S&&i>=v&&b>=E&&T>=i){const t=this._fetchRawTile(e,E,i,o);M?B.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{P=!0,e(null)}))}))):B.push(t)}else B.push(Promise.resolve(null))}if(0===B.length)return null;const W=await Promise.all(B),_={height:(w-I+1)*l,width:(R-g+1)*a},{spatialReference:C}=this.rasterInfo,j=this.getPyramidPixelSize(e),{x:H,y:L}=j;return{extent:new V({xmin:r.x+g*a*H,xmax:r.x+(R+1)*a*H,ymin:r.y-(w+1)*l*L,ymax:r.y-I*l*L,spatialReference:C}),pixelBlocks:W,mosaicSize:_,isPartiallyFilled:P}}_fetchRawTile(e,t,i,o){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:l,maxRow:c}=r;if(t<n||i<a||t>c||i>l)return Promise.resolve(null);const f=v(this.url,o.sliceId),h=`${e}/${t}/${i}`;let u=T(f,o.registryId,h);if(s(u)){const r=new AbortController;u=this.fetchRawTile(e,t,i,{...o,signal:r.signal}),b(f,o.registryId,h,u,r),u.catch((()=>B(f,o.registryId,h)))}return o.signal&&m(o,(()=>{P(f,o.registryId,h)})),u}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if(!(2===t&&\"vector-magdir\"===i||\"vector-uv\"===i)||2!==e?.length||!e[0]?.length)return null;const o=e[0].length;if(\"vector-magdir\"===i){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[r,n]=e,s=[],a=[];for(let l=0;l<o;l++){const[e,t]=N([r[l],n[l]]);s.push(e),a.push(t)}return[s,a]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=O(this.rasterInfo)),s(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,o={}){const r={datumTransformation:o.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};o.srcResolution&&(r.srcResolution=o.srcResolution,this._updateSourceDataInfo(e,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:a,pyramidLevel:l}=r,c=s/t,m=a/i,f=l<n&&c*m>=16,h=l===n&&this._requireTooManySrcTiles(s,a,t,i);if(f||h||(0===s||0===a)){const s=new U({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let a=G(s,this.rasterInfo.spatialReference,e,r.datumTransformation);const h=!a||o.srcResolution&&a.x+a.y<o.srcResolution.x+o.srcResolution.y;if(f&&o.srcResolution&&h){const e=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(n-l+3>=e){const t=2**e;a={x:o.srcResolution.x*t,y:o.srcResolution.y*t}}}a&&(r.srcResolution=a,this._updateSourceDataInfo(e,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,t,i)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(e,t,i,o){const{tileInfo:r}=this.rasterInfo.storageInfo;return Math.ceil(e/r.size[0])*Math.ceil(t/r.size[1])>=X||e/i>$||t/o>$}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:o,datumTransformation:r}=t,{pyramidLevel:n,pyramidResolution:s,excessiveReading:l}=D(o,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||F(e,i,r);if(null==c)return;const m=a(this.rasterInfo.transform);m&&(c=m.inverseTransform(c)),t.srcExtent=c;const f=Math.ceil((c.xmax-c.xmin)/s.x-.1),h=Math.ceil((c.ymax-c.ymin)/s.y-.1);t.pyramidLevel=n,t.pyramidResolution=s,t.srcWidth=f,t.srcHeight=h}_getRequestOptionsWithSliceId(e){return n(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:o,pyramidLevel:r,useTransposedTile:l}=t,c=e.pixels[0].length/e.width/e.height;if(!(!e.mask||e.mask[o]))return{location:i,value:null};const{multidimensionalInfo:m}=this.rasterInfo;if(s(m)||!l){const t=e.pixels.map((e=>e[o])),n={location:i,value:t,pyramidLevel:r},s=this._computeMagDirValues(t.map((e=>[e])));return s?.length&&(n.magdirValue=s.map((e=>e[0]))),n}let f=e.pixels.map((e=>e.slice(o*c,o*c+c))),h=this._computeMagDirValues(f);const{requestSomeSlices:u,identifyOptions:p}=t;let d=k(m,p.transposedVariableName);if(u){const e=S(d,a(p.multidimensionalDefinition),a(p.timeExtent));f=f.map((t=>e.map((e=>t[e])))),h=h?.map((t=>e.map((e=>t[e])))),d=e.map((e=>d[e]))}const y=e.noDataValues||this.rasterInfo.noDataValue,g={pixels:f,pixelType:e.pixelType};let I;n(y)&&(M(g,y),I=g.mask);return{location:i,value:null,dataSeries:d.map(((e,t)=>{const i={value:0===I?.[t]?null:f.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new x({...e,isSlice:!0})))};return h?.length&&(i.magdirValue=[h[0][t],h[1][t]]),i})),pyramidLevel:r}}};e([f()],K.prototype,\"_rasterTileAlighmentInfo\",void 0),e([f({readOnly:!0})],K.prototype,\"_isGlobalWrappableSource\",null),e([f(d)],K.prototype,\"url\",null),e([f({type:String,json:{write:!0}})],K.prototype,\"datasetName\",void 0),e([f({type:String,json:{write:!0}})],K.prototype,\"datasetFormat\",void 0),e([f()],K.prototype,\"hasUniqueSourceStorageInfo\",void 0),e([f()],K.prototype,\"rasterInfo\",void 0),e([f()],K.prototype,\"ioConfig\",void 0),e([f()],K.prototype,\"sourceJSON\",void 0),K=e([u(\"esri.layers.support.rasterDatasets.BaseRaster\")],K);const Q=K;export{Q as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}