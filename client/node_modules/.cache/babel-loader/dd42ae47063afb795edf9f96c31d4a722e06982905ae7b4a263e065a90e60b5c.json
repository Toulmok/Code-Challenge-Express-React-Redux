{"ast":null,"code":"import PortalItem from'@arcgis/core/portal/PortalItem';import Portal from'@arcgis/core/portal/Portal';import{unwrapOrThrow}from\"@arcgis/core/core/maybe\";import arcgisError from\"@arcgis/core/core/Error\";import{LOAD_PORTAL,SET_IDENTITY,GET_USER_ITEMS,SET_USER_ITEMS,GET_USER_TAGS,SET_USER_TAGS,UPDATE_ITEM_TAGS}from'../constants/action-types';var portal={user:{username:''}};var qParamArray=['title','type','created','tag'];/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */var arcgisMiddleWare=function arcgisMiddleWare(store){return function(next){return function(action){switch(action.type){case LOAD_PORTAL:fetch('/getUser').then(function(res){return res.json();})//.json is asynch; .parse is sync\n.then(function(user){//console.log(user)\nportal.user.username=user.username;store.dispatch({type:SET_IDENTITY,username:user.username,fullname:user.fullname,email:user.email,thumbnailurl:user.thumbnailurl});}).then(function(){return store.dispatch({type:GET_USER_ITEMS});}).then(function(){store.dispatch({type:GET_USER_TAGS});});break;case GET_USER_ITEMS://Does this sanitize?\nvar myUrlGet=new URL(window.location.href);//console.log(myUrlGet.toString())\nvar myUrlHas=new URLSearchParams(myUrlGet.search);if(myUrlHas.has(\"dcreated\")){var qDCreated=myUrlHas.get(\"dcreated\");//console.log(qDCreated)\nif(qDCreated!==''){var created=new Date(qDCreated);var createdUnix=created.getTime().toString();if(myUrlHas.get(\"rcreated\")===\"before\"){createdUnix='[0 TO '+createdUnix+']';}else if(myUrlHas.get(\"rcreated\")===\"after\"){createdUnix='['+createdUnix+' TO 99999999999999]';}//console.log(createdUnix)\nmyUrlHas.set(\"created\",createdUnix);}}myUrlGet.search=myUrlHas.toString();//const new_url = myUrlGet.toString(); console.log(new_url)\nwindow.history.replaceState('','',myUrlGet.search);var qString='';for(var _i=0,_qParamArray=qParamArray;_i<_qParamArray.length;_i++){var field=_qParamArray[_i];if(myUrlHas.has(field)){if(myUrlGet.searchParams.get(field)!==''){qString+=' AND '+field+':'+myUrlGet.searchParams.get(field);}}}var ISearchOptions={q:\"owner:\".concat(portal.user.username)+qString,sortField:'modified',sortOrder:'desc',num:20,//max is 100, default is 10\nstart:1};if(portal.user===null){//console.log(\"query string is \" + qString)\nbreak;}else{//portal.user.fetchItems() might be better\ntry{fetch('/getItems',{method:\"POST\",body:JSON.stringify(ISearchOptions),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){return res.json();})//.json is asynch; .parse is sync\n.then(function(_ref){var results=_ref.results;//console.log(results)\nstore.dispatch({type:SET_USER_ITEMS,userItems:results});});}catch(err){console.log(err.message);}finally{console.log(portal.user.username+' is getting items');}}break;case GET_USER_TAGS:if(portal.user===null){break;}else{try{return fetch('/getTags').then(function(res){return res.json();})//.json is asynch; .parse is sync\n.then(function(tagsObj){//console.log(tagsObj.tags.map(({tag}) => tag) )\nstore.dispatch({type:SET_USER_TAGS,userTags:tagsObj.tags.map(function(_ref2){var tag=_ref2.tag;return tag;})});});}catch(err){console.log(err.message);}finally{console.log(portal.user.username+' is fetching tags');}}break;case UPDATE_ITEM_TAGS:var tagsCsv=[];//: { id: string, tag: string, }[] = []\ndocument.querySelectorAll(\"input.inputTags\").forEach(function(input){if(input.value!==''){tagsCsv.push({id:input.id.replace('input',''),//(option as HTMLInputElement)\ntag:input.value});}});//console.log(tagsCsv)\ndocument.querySelectorAll(\"select.selectTags option:checked\").forEach(function(option){if(option.id!==''){tagsCsv.push({id:option.id.replace(option.value,''),//(option as HTMLInputElement)\ntag:option.value});}});//console.log(tagsCsv)\ntagsCsv.forEach(function(item){//__esri.PortalItemUpdateParams\nvar portalItem=new PortalItem({id:item.id});var tag={data:{tag:item.tag}};//{data: {tags:'tag'}}\ntry{portalItem.id?portalItem.load().then(function(){return unwrapOrThrow(portalItem.portal).signIn();}).then(function(){var t=tag&&tag.data,i={method:\"post\"},itemJSON=portalItem.toJSON();i.query=itemJSON;if(itemJSON[\"tags\"]){itemJSON[\"tags\"].sort();itemJSON[\"tags\"]=itemJSON[\"tags\"].join(\", \");}//console.log(itemJSON[\"tags\"])\nreturn i.query.clearEmptyFields=!0,//'true'\nnull!=t&&\"object\"==typeof t&&(i.query.tags=itemJSON[\"tags\"]+\", \"+t.tag),portalItem.portal.request(\"\".concat(portalItem.userItemUrl,\"/update\"),i).then(function(){return portalItem.reload();});}).then(function(){return window.location.reload();}):Promise.reject(new arcgisError(\"portal:item-does-not-exist\",\"The item does not exist yet and cannot be updated\"));}catch(err){console.log(err);}finally{console.log(portal.user.username+' is updating tags');}});return next(action);default:return next(action);}};};};export default arcgisMiddleWare;","map":{"version":3,"names":["PortalItem","Portal","unwrapOrThrow","arcgisError","LOAD_PORTAL","SET_IDENTITY","GET_USER_ITEMS","SET_USER_ITEMS","GET_USER_TAGS","SET_USER_TAGS","UPDATE_ITEM_TAGS","portal","user","username","qParamArray","arcgisMiddleWare","store","next","action","type","fetch","then","res","json","dispatch","fullname","email","thumbnailurl","myUrlGet","URL","window","location","href","myUrlHas","URLSearchParams","search","has","qDCreated","get","created","Date","createdUnix","getTime","toString","set","history","replaceState","qString","_i","_qParamArray","length","field","searchParams","ISearchOptions","q","concat","sortField","sortOrder","num","start","method","body","JSON","stringify","headers","_ref","results","userItems","err","console","log","message","tagsObj","userTags","tags","map","_ref2","tag","tagsCsv","document","querySelectorAll","forEach","input","value","push","id","replace","option","item","portalItem","data","load","signIn","t","i","itemJSON","toJSON","query","sort","join","clearEmptyFields","request","userItemUrl","reload","Promise","reject"],"sources":["C:/code-challenge-react/client/src/middleware/arcgis-portal.js"],"sourcesContent":["import PortalItem from '@arcgis/core/portal/PortalItem'\r\nimport Portal from '@arcgis/core/portal/Portal'\r\nimport{unwrapOrThrow} from \"@arcgis/core/core/maybe\";\r\nimport arcgisError from \"@arcgis/core/core/Error\";\r\n\r\nimport {\r\n  LOAD_PORTAL,\r\n  SET_IDENTITY,\r\n  GET_USER_ITEMS,\r\n  SET_USER_ITEMS,\r\n  GET_USER_TAGS,\r\n  SET_USER_TAGS,\r\n  UPDATE_ITEM_TAGS,\r\n} from '../constants/action-types'\r\n\r\nconst portal = {user: {username: ''}}\r\nconst qParamArray = ['title','type','created','tag']\r\n\r\n/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */\r\nconst arcgisMiddleWare = store => next => (action) => {\r\n  switch (action.type) {\r\n    case LOAD_PORTAL:\r\n      fetch('/getUser')\r\n      .then(res => res.json()) //.json is asynch; .parse is sync\r\n      .then((user) => { //console.log(user)\r\n        portal.user.username = user.username\r\n        store.dispatch({\r\n          type: SET_IDENTITY,\r\n          username: user.username,\r\n          fullname: user.fullname,\r\n          email: user.email,\r\n          thumbnailurl: user.thumbnailurl,\r\n      })})\r\n      .then(() => store.dispatch({ type: GET_USER_ITEMS }) )\r\n      .then(() => { store.dispatch({ type: GET_USER_TAGS }) })\r\n      break\r\n\r\n    case GET_USER_ITEMS:\r\n      //Does this sanitize?\r\n      let myUrlGet = new URL(window.location.href); //console.log(myUrlGet.toString())\r\n      let myUrlHas = new URLSearchParams(myUrlGet.search)\r\n\r\n      if(myUrlHas.has(\"dcreated\")) {\r\n        let qDCreated = myUrlHas.get(\"dcreated\"); //console.log(qDCreated)\r\n        if((qDCreated !== '')){\r\n          let created = new Date(qDCreated)\r\n          let createdUnix = created.getTime().toString()\r\n          if(myUrlHas.get(\"rcreated\")===\"before\") {\r\n            createdUnix = '[0 TO ' + createdUnix + ']'\r\n          } else if (myUrlHas.get(\"rcreated\")===\"after\") {\r\n            createdUnix = '[' + createdUnix + ' TO 99999999999999]'\r\n          } //console.log(createdUnix)\r\n          myUrlHas.set(\"created\",createdUnix)\r\n        }\r\n      }\r\n\r\n      myUrlGet.search = myUrlHas.toString()\r\n      //const new_url = myUrlGet.toString(); console.log(new_url)\r\n      window.history.replaceState('','',myUrlGet.search)\r\n\r\n      let qString = ''\r\n      for (const field of qParamArray) {\r\n        if(myUrlHas.has(field)) {\r\n          if((myUrlGet.searchParams.get(field) !== '')){\r\n            qString += ' AND ' + field + ':' + myUrlGet.searchParams.get(field)\r\n          }\r\n        }\r\n      }\r\n      \r\n      const ISearchOptions = {\r\n        q: `owner:${portal.user.username}` + qString,\r\n        sortField: 'modified',\r\n        sortOrder: 'desc',\r\n        num: 20, //max is 100, default is 10\r\n        start: 1,\r\n      }\r\n\r\n      if (portal.user === null) { //console.log(\"query string is \" + qString)\r\n        break\r\n      } else { //portal.user.fetchItems() might be better\r\n        try { \r\n          fetch('/getItems', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(ISearchOptions),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          })\r\n          .then(res => res.json()) //.json is asynch; .parse is sync\r\n          .then(({ results }) => { //console.log(results)\r\n            store.dispatch({ type: SET_USER_ITEMS, userItems: results, })\r\n          })\r\n        }\r\n        catch(err) { console.log(err.message) }\r\n        finally { console.log(portal.user.username + ' is getting items') }\r\n      }\r\n      break\r\n\r\n    case GET_USER_TAGS:\r\n      if (portal.user === null) {\r\n        break\r\n      } else {\r\n        try { \r\n          return fetch('/getTags')\r\n          .then(res => res.json()) //.json is asynch; .parse is sync\r\n          .then( (tagsObj) => { //console.log(tagsObj.tags.map(({tag}) => tag) )\r\n            store.dispatch({ type: SET_USER_TAGS, userTags: tagsObj.tags.map(({tag}) => tag) })\r\n          })\r\n        }\r\n        catch(err) { console.log(err.message) }\r\n        finally { console.log(portal.user.username + ' is fetching tags') }\r\n      }\r\n      break\r\n\r\n    case UPDATE_ITEM_TAGS:\r\n      const tagsCsv = [] //: { id: string, tag: string, }[] = []\r\n      document.querySelectorAll(\"input.inputTags\").forEach(input => {\r\n        if (input.value !== '') {\r\n          tagsCsv.push({\r\n            id: input.id.replace('input',''), //(option as HTMLInputElement)\r\n            tag: input.value,\r\n          })\r\n        }\r\n      }); //console.log(tagsCsv)\r\n      document.querySelectorAll(\"select.selectTags option:checked\").forEach(option => {\r\n        if (option.id !== '') {\r\n          tagsCsv.push({\r\n            id: option.id.replace((option.value),''), //(option as HTMLInputElement)\r\n            tag: option.value,\r\n          })\r\n        }\r\n      }); //console.log(tagsCsv)\r\n\r\n      tagsCsv.forEach((item) => { //__esri.PortalItemUpdateParams\r\n        const portalItem = new PortalItem({id: item.id})\r\n        const tag = {data: {tag:item.tag}} //{data: {tags:'tag'}}\r\n        \r\n        try{\r\n          portalItem.id?\r\n            portalItem.load()\r\n              .then((()=>unwrapOrThrow(portalItem.portal).signIn()))\r\n                .then(()=>{\r\n                    const t = tag&&tag.data,\r\n                          i = {method:\"post\"},\r\n                          itemJSON = portalItem.toJSON()\r\n                    i.query = itemJSON;\r\n                    \r\n                    if(itemJSON[\"tags\"]) {\r\n                      itemJSON[\"tags\"].sort()\r\n                      itemJSON[\"tags\"]=itemJSON[\"tags\"].join(\", \")\r\n                    } //console.log(itemJSON[\"tags\"])\r\n                \r\n                    return (i.query.clearEmptyFields)=!0, //'true'\r\n                      null!=t&&(\r\n                        \"object\"==typeof t&&(i.query.tags=(itemJSON[\"tags\"] + \", \" + t.tag))\r\n                      ),\r\n                      portalItem.portal.request(`${portalItem.userItemUrl}/update`,i)\r\n                        .then((()=>portalItem.reload()))\r\n                })\r\n                  .then(() => window.location.reload())\r\n          :Promise.reject(\r\n            new arcgisError(\"portal:item-does-not-exist\",\r\n              \"The item does not exist yet and cannot be updated\"\r\n            )\r\n          )\r\n        }\r\n        catch(err) { console.log(err) }\r\n        finally {console.log(portal.user.username + ' is updating tags')} \r\n      })\r\n      return(next(action))\r\n\r\n    default:\r\n      return next(action)\r\n  }\r\n}\r\n\r\nexport default arcgisMiddleWare"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}