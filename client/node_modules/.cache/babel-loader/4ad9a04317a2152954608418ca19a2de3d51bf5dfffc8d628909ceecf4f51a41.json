{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../../../core/has.js\";\nimport e from \"../../../../core/LRUCache.js\";\nimport { getOrCreateMapValue as t } from \"../../../../core/MapUtils.js\";\nimport { isSome as s, isNone as n } from \"../../../../core/maybe.js\";\nimport { throwIfAborted as o } from \"../../../../core/promiseUtils.js\";\nimport { getMetersPerVerticalUnitForSR as i } from \"../../../../core/unitUtils.js\";\nimport { getMetersPerUnit as a } from \"../../../../symbols/support/unitConversionUtils.js\";\nfunction r() {\n  let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n  let t = arguments.length > 1 ? arguments[1] : undefined;\n  if (e) {\n    const {\n      elevationInfo: e,\n      alignPointsInFeatures: s,\n      spatialReference: n\n    } = t;\n    return new l(e, s, n);\n  }\n  return new c();\n}\nclass c {\n  async alignCandidates(e, t) {\n    return e;\n  }\n  notifyElevationSourceChange() {}\n}\nconst h = 1024;\nclass l {\n  constructor(t, s, n) {\n    this._elevationInfo = t, this._alignPointsInFeatures = s, this.spatialReference = n, this._alignmentsCache = new e(h), this._cacheVersion = 0, this._metersPerVerticalUnit = i(n);\n  }\n  async alignCandidates(e, t) {\n    const n = this._elevationInfo;\n    return s(n) && \"absolute-height\" === n.mode && !n.featureExpressionInfo ? (this._alignAbsoluteElevationCandidates(e, n), e) : this._alignComputedElevationCandidates(e, t);\n  }\n  notifyElevationSourceChange() {\n    this._alignmentsCache.clear(), this._cacheVersion++;\n  }\n  _alignAbsoluteElevationCandidates(e, t) {\n    const {\n      offset: s,\n      unit: o\n    } = t;\n    if (n(s)) return;\n    const i = s * (a(o ?? \"meters\") / this._metersPerVerticalUnit);\n    for (const n of e) switch (n.type) {\n      case \"edge\":\n        n.start.z += i, n.end.z += i;\n        continue;\n      case \"vertex\":\n        n.target.z += i;\n        continue;\n    }\n  }\n  async _alignComputedElevationCandidates(e, s) {\n    const n = new Map();\n    for (const o of e) t(n, o.objectId, p).push(o);\n    const [i, a, r] = this._prepareQuery(n),\n      c = await this._alignPointsInFeatures(i, s);\n    o(s);\n    if (r !== this._cacheVersion) return this._alignComputedElevationCandidates(e, s);\n    this._applyCacheAndResponse(i, c, a);\n    const {\n        drapedObjectIds: h,\n        failedObjectIds: l\n      } = c,\n      d = [];\n    for (const t of e) {\n      const {\n        objectId: e\n      } = t;\n      h.has(e) && \"edge\" === t.type && (t.draped = !0), l.has(e) || d.push(t);\n    }\n    return d;\n  }\n  _prepareQuery(e) {\n    const t = [],\n      s = [];\n    for (const [n, o] of e) {\n      const e = [];\n      for (const t of o) this._addToQueriesOrCachedResult(n, t.target, e, s), \"edge\" === t.type && (this._addToQueriesOrCachedResult(n, t.start, e, s), this._addToQueriesOrCachedResult(n, t.end, e, s));\n      0 !== e.length && t.push({\n        objectId: n,\n        points: e\n      });\n    }\n    return [t, s, this._cacheVersion];\n  }\n  _addToQueriesOrCachedResult(e, t, n, o) {\n    const i = u(e, t),\n      a = this._alignmentsCache.get(i);\n    s(a) ? o.push(new d(t, a)) : n.push(t);\n  }\n  _applyCacheAndResponse(e, _ref, o) {\n    let {\n      elevations: t,\n      drapedObjectIds: s,\n      failedObjectIds: n\n    } = _ref;\n    for (const r of o) r.apply();\n    let i = 0;\n    const a = this._alignmentsCache;\n    for (const {\n      objectId: r,\n      points: c\n    } of e) {\n      if (n.has(r)) {\n        i += c.length;\n        continue;\n      }\n      const e = !s.has(r);\n      for (const s of c) {\n        const n = u(r, s),\n          o = t[i++];\n        s.z = o, e && a.put(n, o, 1);\n      }\n    }\n  }\n}\nclass d {\n  constructor(e, t) {\n    this.point = e, this.z = t;\n  }\n  apply() {\n    this.point.z = this.z;\n  }\n}\nfunction u(e, _ref2) {\n  let {\n    x: t,\n    y: s,\n    z: n\n  } = _ref2;\n  return `${e}-${t}-${s}-${n ?? 0}}`;\n}\nfunction p() {\n  return [];\n}\nexport { r as getSnappingCandidateElevationAligner };","map":{"version":3,"names":["e","getOrCreateMapValue","t","isSome","s","isNone","n","throwIfAborted","o","getMetersPerVerticalUnitForSR","i","getMetersPerUnit","a","r","arguments","length","undefined","elevationInfo","alignPointsInFeatures","spatialReference","l","c","alignCandidates","notifyElevationSourceChange","h","constructor","_elevationInfo","_alignPointsInFeatures","_alignmentsCache","_cacheVersion","_metersPerVerticalUnit","mode","featureExpressionInfo","_alignAbsoluteElevationCandidates","_alignComputedElevationCandidates","clear","offset","unit","type","start","z","end","target","Map","objectId","p","push","_prepareQuery","_applyCacheAndResponse","drapedObjectIds","failedObjectIds","d","has","draped","_addToQueriesOrCachedResult","points","u","get","_ref","elevations","apply","put","point","_ref2","x","y","getSnappingCandidateElevationAligner"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/interactive/snapping/featureSources/snappingCandidateElevationAlignment.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import e from\"../../../../core/LRUCache.js\";import{getOrCreateMapValue as t}from\"../../../../core/MapUtils.js\";import{isSome as s,isNone as n}from\"../../../../core/maybe.js\";import{throwIfAborted as o}from\"../../../../core/promiseUtils.js\";import{getMetersPerVerticalUnitForSR as i}from\"../../../../core/unitUtils.js\";import{getMetersPerUnit as a}from\"../../../../symbols/support/unitConversionUtils.js\";function r(e=!1,t){if(e){const{elevationInfo:e,alignPointsInFeatures:s,spatialReference:n}=t;return new l(e,s,n)}return new c}class c{async alignCandidates(e,t){return e}notifyElevationSourceChange(){}}const h=1024;class l{constructor(t,s,n){this._elevationInfo=t,this._alignPointsInFeatures=s,this.spatialReference=n,this._alignmentsCache=new e(h),this._cacheVersion=0,this._metersPerVerticalUnit=i(n)}async alignCandidates(e,t){const n=this._elevationInfo;return s(n)&&\"absolute-height\"===n.mode&&!n.featureExpressionInfo?(this._alignAbsoluteElevationCandidates(e,n),e):this._alignComputedElevationCandidates(e,t)}notifyElevationSourceChange(){this._alignmentsCache.clear(),this._cacheVersion++}_alignAbsoluteElevationCandidates(e,t){const{offset:s,unit:o}=t;if(n(s))return;const i=s*(a(o??\"meters\")/this._metersPerVerticalUnit);for(const n of e)switch(n.type){case\"edge\":n.start.z+=i,n.end.z+=i;continue;case\"vertex\":n.target.z+=i;continue}}async _alignComputedElevationCandidates(e,s){const n=new Map;for(const o of e)t(n,o.objectId,p).push(o);const[i,a,r]=this._prepareQuery(n),c=await this._alignPointsInFeatures(i,s);o(s);if(r!==this._cacheVersion)return this._alignComputedElevationCandidates(e,s);this._applyCacheAndResponse(i,c,a);const{drapedObjectIds:h,failedObjectIds:l}=c,d=[];for(const t of e){const{objectId:e}=t;h.has(e)&&\"edge\"===t.type&&(t.draped=!0),l.has(e)||d.push(t)}return d}_prepareQuery(e){const t=[],s=[];for(const[n,o]of e){const e=[];for(const t of o)this._addToQueriesOrCachedResult(n,t.target,e,s),\"edge\"===t.type&&(this._addToQueriesOrCachedResult(n,t.start,e,s),this._addToQueriesOrCachedResult(n,t.end,e,s));0!==e.length&&t.push({objectId:n,points:e})}return[t,s,this._cacheVersion]}_addToQueriesOrCachedResult(e,t,n,o){const i=u(e,t),a=this._alignmentsCache.get(i);s(a)?o.push(new d(t,a)):n.push(t)}_applyCacheAndResponse(e,{elevations:t,drapedObjectIds:s,failedObjectIds:n},o){for(const r of o)r.apply();let i=0;const a=this._alignmentsCache;for(const{objectId:r,points:c}of e){if(n.has(r)){i+=c.length;continue}const e=!s.has(r);for(const s of c){const n=u(r,s),o=t[i++];s.z=o,e&&a.put(n,o,1)}}}}class d{constructor(e,t){this.point=e,this.z=t}apply(){this.point.z=this.z}}function u(e,{x:t,y:s,z:n}){return`${e}-${t}-${s}-${n??0}}`}function p(){return[]}export{r as getSnappingCandidateElevationAligner};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}