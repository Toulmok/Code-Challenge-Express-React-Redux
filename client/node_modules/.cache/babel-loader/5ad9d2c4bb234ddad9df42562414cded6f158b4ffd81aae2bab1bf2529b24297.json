{"ast":null,"code":"import _slicedToArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../request.js\";\nimport i from \"../../../core/Error.js\";\nimport { JSONSupport as o } from \"../../../core/JSONSupport.js\";\nimport r from \"../../../core/Logger.js\";\nimport { isSome as n, isNone as s, unwrap as a, unwrapOrThrow as l } from \"../../../core/maybe.js\";\nimport { EsriPromiseMixin as c } from \"../../../core/Promise.js\";\nimport { onAbort as m } from \"../../../core/promiseUtils.js\";\nimport { property as f } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { ensureClass as h } from \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as u } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { sanitizeUrl as p } from \"../arcgisLayerUrl.js\";\nimport { url as d } from \"../commonProperties.js\";\nimport x from \"../DimensionalDefinition.js\";\nimport y from \"../LOD.js\";\nimport g from \"../RasterStorageInfo.js\";\nimport I from \"../TileInfo.js\";\nimport { isMultiSliceOrRangeDefinition as R, getSliceIndex as w, createSlices as k, getSliceIds as S } from \"./multidimensionalUtils.js\";\nimport { getRasterId as v, getBlock as T, putBlock as b, deleteBlock as B, decreaseRefCount as P } from \"./RawBlockCache.js\";\nimport { convertNoDataToMask as M } from \"../rasterFormats/pixelRangeUtils.js\";\nimport { decode as W } from \"../rasterFormats/RasterCodec.js\";\nimport { mosaic as _, approximateTransform as C, getLocalArithmeticNorthRotations as j } from \"../rasterFunctions/pixelUtils.js\";\nimport { load as H, getWorldWidth as L, projectPoint as E, snapPyramid as D, snapExtent as z, getWorldWrapCount as A, projectExtent as F, getProjectionOffsetGrid as q, getRasterDatasetAlignmentInfo as O, projectResolution as G } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport { convertToLocalDirections as J, uvComponentToVector as N } from \"../rasterFunctions/vectorFieldUtils.js\";\nimport V from \"../../../geometry/Extent.js\";\nimport U from \"../../../geometry/Point.js\";\nvar $ = 8,\n  X = 256;\nvar K = /*#__PURE__*/function (_c) {\n  _inherits(K, _c);\n  var _super = _createSuper(K);\n  function K() {\n    var _this;\n    _classCallCheck(this, K);\n    _this = _super.apply(this, arguments), _this.rasterJobHandler = null, _this.datasetName = null, _this.datasetFormat = null, _this.hasUniqueSourceStorageInfo = !0, _this.rasterInfo = null, _this.ioConfig = {\n      sampling: \"closest\"\n    };\n    return _this;\n  }\n  _createClass(K, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var e;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              e = H();\n              this.addResolvingPromise(e);\n              _context.next = 4;\n              return this.when();\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"normalizeCtorArgs\",\n    value: function normalizeCtorArgs(e) {\n      return e && e.ioConfig && (e = _objectSpread(_objectSpread({}, e), {}, {\n        ioConfig: _objectSpread({\n          resolution: null,\n          bandIds: null,\n          sampling: \"closest\",\n          tileInfo: I.create()\n        }, e.ioConfig)\n      })), e;\n    }\n  }, {\n    key: \"_isGlobalWrappableSource\",\n    get: function get() {\n      var e = this.rasterInfo,\n        t = L(e.spatialReference);\n      return n(t) && e.extent.width >= t / 2;\n    }\n  }, {\n    key: \"url\",\n    set: function set(e) {\n      this._set(\"url\", p(e, r.getLogger(this.declaredClass)));\n    }\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              throw new i(\"BaseRaster:open-not-implemented\", \"open() is not implemented\");\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function open(_x) {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n  }, {\n    key: \"fetchTile\",\n    value: function () {\n      var _fetchTile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e, t, i) {\n        var o,\n          r,\n          n,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              o = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : {};\n              r = o.tileInfo || this.rasterInfo.storageInfo.tileInfo, n = this.getTileExtentFromTileInfo(e, t, i, r);\n              return _context3.abrupt(\"return\", this.fetchPixels(n, r.size[0], r.size[1], o));\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function fetchTile(_x2, _x3, _x4) {\n        return _fetchTile.apply(this, arguments);\n      }\n      return fetchTile;\n    }()\n  }, {\n    key: \"identify\",\n    value: function () {\n      var _identify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {\n        var _m2, _j$pixels;\n        var t,\n          _t,\n          i,\n          o,\n          r,\n          l,\n          c,\n          _t2,\n          m,\n          f,\n          _i$0$variableName,\n          u,\n          p,\n          _t3,\n          d,\n          x,\n          _e,\n          y,\n          g,\n          _e2,\n          _i,\n          _o,\n          _a,\n          _l,\n          _c2,\n          _m,\n          _yield$_e2$fetchPixel,\n          _f,\n          _yield$this$fetchPixe,\n          _h,\n          _p,\n          _d,\n          _y,\n          I,\n          w,\n          k,\n          S,\n          B,\n          P,\n          M,\n          W,\n          _,\n          C,\n          j,\n          H,\n          _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              t = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n              e = h(U, e).clone().normalize();\n              _t = t, i = _t.multidimensionalDefinition, o = _t.timeExtent, r = this.rasterInfo, l = r.hasMultidimensionalTranspose, c = r.multidimensionalInfo;\n              _t2 = t, m = _t2.transposedVariableName;\n              f = n(c) && l && (null != o || R(i));\n              if (f && !m) {\n                m = n(i) && i.length > 0 ? (_i$0$variableName = i[0].variableName) !== null && _i$0$variableName !== void 0 ? _i$0$variableName : void 0 : c.variables[0].name, t = _objectSpread(_objectSpread({}, t), {}, {\n                  transposedVariableName: m\n                });\n              }\n              t = this._getRequestOptionsWithSliceId(t);\n              u = r.spatialReference, p = r.extent, _t3 = t, d = _t3.datumTransformation;\n              x = E(e, u, d);\n              if (p.intersects(x)) {\n                _context4.next = 11;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                location: x,\n                value: null\n              });\n            case 11:\n              if (!n(r.transform)) {\n                _context4.next = 16;\n                break;\n              }\n              _e = r.transform.inverseTransform(x);\n              if (r.nativeExtent.intersects(_e)) {\n                _context4.next = 15;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                location: _e,\n                value: null\n              });\n            case 15:\n              x = _e;\n            case 16:\n              y = 0;\n              g = n(m) && n(c) && r.hasMultidimensionalTranspose;\n              if (!(\"Function\" === this.datasetFormat)) {\n                _context4.next = 40;\n                break;\n              }\n              _e2 = this.primaryRasters.rasters[0];\n              if (!g) {\n                _context4.next = 22;\n                break;\n              }\n              return _context4.abrupt(\"return\", _e2.identify(x, t));\n            case 22:\n              _i = r.pixelSize;\n              _o = 3;\n              _a = _i.x * _o / 2;\n              _l = _i.y * _o / 2;\n              _c2 = new V({\n                xmin: x.x - _a,\n                xmax: x.x + _a,\n                ymin: x.y - _l,\n                ymax: x.y + _l,\n                spatialReference: u\n              });\n              _m = {\n                interpolation: \"nearest\"\n              };\n              _context4.next = 30;\n              return _e2.fetchPixels(_c2, _o, _o, _m);\n            case 30:\n              _yield$_e2$fetchPixel = _context4.sent;\n              _f = _yield$_e2$fetchPixel.pixelBlock;\n              _context4.next = 34;\n              return this.fetchPixels(_c2, _o, _o, _m);\n            case 34:\n              _yield$this$fetchPixe = _context4.sent;\n              _h = _yield$this$fetchPixe.pixelBlock;\n              if (!s(_f)) {\n                _context4.next = 38;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                location: x,\n                value: null\n              });\n            case 38:\n              _p = Math.floor(_o * _o * .5), _d = !_f.mask || _f.mask[_p] ? _f.pixels.map(function (e) {\n                return e[_p];\n              }) : null;\n              return _context4.abrupt(\"return\", (n(_h) && (_y = !_h.mask || _h.mask[_p] ? _h.pixels.map(function (e) {\n                return e[_p];\n              }) : void 0), {\n                location: x,\n                value: _d,\n                processedValue: _y,\n                pyramidLevel: 0\n              }));\n            case 40:\n              if (g) {\n                _context4.next = 50;\n                break;\n              }\n              if (!t.srcResolution) {\n                _context4.next = 45;\n                break;\n              }\n              y = D(t.srcResolution, r, this.ioConfig.sampling).pyramidLevel;\n              _context4.next = 50;\n              break;\n            case 45:\n              _context4.next = 47;\n              return this.computeBestPyramidLevelForLocation(e, t);\n            case 47:\n              y = _context4.sent;\n              if (!(null == y)) {\n                _context4.next = 50;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                location: x,\n                value: null\n              });\n            case 50:\n              I = this.identifyPixelLocation(x, y, null, g);\n              if (!(null === I)) {\n                _context4.next = 53;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                location: x,\n                value: null\n              });\n            case 53:\n              w = I.row, k = I.col, S = I.rowOffset, B = I.colOffset, P = I.blockWidth, M = (_m2 = m) !== null && _m2 !== void 0 ? _m2 : a(t.sliceId), W = v(this.url, M), _ = \"\".concat(y, \"/\").concat(w, \"/\").concat(k);\n              C = T(W, null, _);\n              s(C) && (C = this.fetchRawTile(y, w, k, t), b(W, null, _, C));\n              _context4.next = 58;\n              return C;\n            case 58:\n              j = _context4.sent;\n              if (!(s(j) || !((_j$pixels = j.pixels) !== null && _j$pixels !== void 0 && _j$pixels.length))) {\n                _context4.next = 61;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                location: x,\n                value: null\n              });\n            case 61:\n              H = S * P + B;\n              return _context4.abrupt(\"return\", this._processIdentifyResult(j, {\n                srcLocation: x,\n                position: H,\n                pyramidLevel: y,\n                useTransposedTile: !!g,\n                requestSomeSlices: f,\n                identifyOptions: t\n              }));\n            case 63:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function identify(_x5) {\n        return _identify.apply(this, arguments);\n      }\n      return identify;\n    }()\n  }, {\n    key: \"fetchPixels\",\n    value: function () {\n      var _fetchPixels2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e, t, i) {\n        var o,\n          r,\n          n,\n          a,\n          _e3,\n          l,\n          c,\n          m,\n          f,\n          h,\n          u,\n          _s,\n          _p2,\n          _d2,\n          _x9,\n          p,\n          d,\n          x,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              o = _args5.length > 3 && _args5[3] !== undefined ? _args5[3] : {};\n              if (!(e = z(e), (o = this._getRequestOptionsWithSliceId(o)).requestRawData)) {\n                _context5.next = 3;\n                break;\n              }\n              return _context5.abrupt(\"return\", this._fetchPixels(e, t, i, o));\n            case 3:\n              r = L(e.spatialReference), n = A(e);\n              if (!(s(r) || 0 === n || 1 === n && this._isGlobalWrappableSource)) {\n                _context5.next = 6;\n                break;\n              }\n              return _context5.abrupt(\"return\", this._fetchPixels(e, t, i, o));\n            case 6:\n              if (!(n >= 3)) {\n                _context5.next = 8;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                extent: e,\n                pixelBlock: null\n              });\n            case 8:\n              a = [], _e3 = e, l = _e3.xmin, c = _e3.xmax, m = Math.round(r / (c - l) * t), f = m - Math.round((r / 2 - l) / (c - l) * t);\n              h = 0;\n              u = [];\n              for (_s = 0; _s <= n; _s++) {\n                _p2 = new V({\n                  xmin: 0 === _s ? l : -r / 2,\n                  xmax: _s === n ? c - r * _s : r / 2,\n                  ymin: e.ymin,\n                  ymax: e.ymax,\n                  spatialReference: e.spatialReference\n                }), _d2 = 0 === _s ? m - f : _s === n ? t - h : m;\n                h += _d2, u.push(_d2);\n                _x9 = o.disableWrapAround && _s > 0 ? null : this._fetchPixels(_p2, _d2, i, o);\n                a.push(_x9);\n              }\n              _context5.next = 14;\n              return Promise.all(a);\n            case 14:\n              p = _context5.sent.map(function (e) {\n                return e === null || e === void 0 ? void 0 : e.pixelBlock;\n              });\n              d = null;\n              x = {\n                width: t,\n                height: i\n              };\n              if (!this.rasterJobHandler) {\n                _context5.next = 23;\n                break;\n              }\n              _context5.next = 20;\n              return this.rasterJobHandler.mosaicAndTransform({\n                srcPixelBlocks: p,\n                srcMosaicSize: x,\n                destDimension: null,\n                coefs: null,\n                sampleSpacing: null,\n                interpolation: \"nearest\",\n                alignmentInfo: null,\n                blockWidths: u\n              }, o);\n            case 20:\n              d = _context5.sent.pixelBlock;\n              _context5.next = 24;\n              break;\n            case 23:\n              d = _(p, x, {\n                blockWidths: u\n              });\n            case 24:\n              return _context5.abrupt(\"return\", {\n                extent: e,\n                srcExtent: F(e, this.rasterInfo.spatialReference, o.datumTransformation),\n                pixelBlock: d\n              });\n            case 25:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function fetchPixels(_x6, _x7, _x8) {\n        return _fetchPixels2.apply(this, arguments);\n      }\n      return fetchPixels;\n    }()\n  }, {\n    key: \"fetchRawPixels\",\n    value: function () {\n      var _fetchRawPixels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e, t, i) {\n        var o,\n          r,\n          _this$rasterInfo,\n          s,\n          a,\n          l,\n          c,\n          m,\n          f,\n          h,\n          u,\n          p,\n          d,\n          x,\n          y,\n          g,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              o = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : {};\n              t = {\n                x: Math.floor(t.x),\n                y: Math.floor(t.y)\n              };\n              _context6.next = 4;\n              return this._fetchRawTiles(e, t, i, o);\n            case 4:\n              r = _context6.sent;\n              _this$rasterInfo = this.rasterInfo;\n              s = _this$rasterInfo.nativeExtent;\n              a = _this$rasterInfo.nativePixelSize;\n              l = _this$rasterInfo.storageInfo;\n              c = Math.pow(2, e);\n              m = a.x * c;\n              f = a.y * c;\n              h = new V({\n                xmin: s.xmin + m * t.x,\n                xmax: s.xmin + m * (t.x + i.width - 1),\n                ymin: s.ymax - f * (t.y + i.height - 1),\n                ymax: s.ymax - f * t.y,\n                spatialReference: s.spatialReference\n              });\n              if (r) {\n                _context6.next = 15;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                extent: h,\n                srcExtent: h,\n                pixelBlock: null\n              });\n            case 15:\n              u = r.pixelBlocks, p = r.mosaicSize;\n              if (!(1 === u.length && n(u[0]) && u[0].width === i.width && u[0].height === i.height)) {\n                _context6.next = 18;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                extent: h,\n                srcExtent: h,\n                pixelBlock: r.pixelBlocks[0]\n              });\n            case 18:\n              d = e > 0 ? l.pyramidBlockWidth : l.blockWidth, x = e > 0 ? l.pyramidBlockHeight : l.blockHeight, y = {\n                x: t.x % d,\n                y: t.y % x\n              };\n              if (!this.rasterJobHandler) {\n                _context6.next = 25;\n                break;\n              }\n              _context6.next = 22;\n              return this.rasterJobHandler.mosaicAndTransform({\n                srcPixelBlocks: u,\n                srcMosaicSize: p,\n                destDimension: i,\n                clipOffset: y,\n                clipSize: i,\n                coefs: null,\n                sampleSpacing: null,\n                interpolation: o.interpolation,\n                alignmentInfo: null,\n                blockWidths: null\n              }, o);\n            case 22:\n              g = _context6.sent.pixelBlock;\n              _context6.next = 26;\n              break;\n            case 25:\n              g = _(u, p, {\n                clipOffset: y,\n                clipSize: i\n              });\n            case 26:\n              return _context6.abrupt(\"return\", {\n                extent: h,\n                srcExtent: h,\n                pixelBlock: g\n              });\n            case 27:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function fetchRawPixels(_x10, _x11, _x12) {\n        return _fetchRawPixels.apply(this, arguments);\n      }\n      return fetchRawPixels;\n    }()\n  }, {\n    key: \"fetchRawTile\",\n    value: function fetchRawTile(e, t, o, r) {\n      throw new i(\"BaseRaster:read-not-implemented\", \"fetchRawTile() is not implemented\");\n    }\n  }, {\n    key: \"computeExtent\",\n    value: function computeExtent(e) {\n      return F(this.rasterInfo.extent, e);\n    }\n  }, {\n    key: \"decodePixelBlock\",\n    value: function decodePixelBlock(e, t) {\n      return !this.rasterJobHandler || t.useCanvas ? W(e, t) : this.rasterJobHandler.decode({\n        data: e,\n        options: t\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(e, i) {\n        var _ref, _o2;\n        var o,\n          r,\n          n,\n          s,\n          a,\n          l,\n          _args7 = arguments;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              o = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : 0;\n              r = this.ioConfig.customFetchParameters, n = i.range, s = i.query, a = i.headers;\n              o = (_ref = (_o2 = o) !== null && _o2 !== void 0 ? _o2 : i.retryCount) !== null && _ref !== void 0 ? _ref : this.ioConfig.retryCount;\n              l = n ? {\n                Range: \"bytes=\".concat(n.from, \"-\").concat(n.to)\n              } : null;\n              _context7.prev = 4;\n              _context7.next = 7;\n              return t(e, _objectSpread(_objectSpread({}, i), {}, {\n                query: _objectSpread(_objectSpread({}, s), r),\n                headers: _objectSpread(_objectSpread({}, a), l)\n              }));\n            case 7:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](4);\n              if (!(o > 0)) {\n                _context7.next = 14;\n                break;\n              }\n              return _context7.abrupt(\"return\", (o--, this.request(e, i, o)));\n            case 14:\n              throw _context7.t0;\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[4, 10]]);\n      }));\n      function request(_x13, _x14) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"getSliceIndex\",\n    value: function getSliceIndex(e) {\n      var t = this.rasterInfo.multidimensionalInfo;\n      return s(t) || s(e) || 0 === e.length ? null : w(e, t);\n    }\n  }, {\n    key: \"getTileExtentFromTileInfo\",\n    value: function getTileExtentFromTileInfo(e, t, i, o) {\n      var r = l(o.lodAt(e));\n      return this.getTileExtent({\n        x: r.resolution,\n        y: r.resolution\n      }, t, i, o.origin, o.spatialReference, o.size);\n    }\n  }, {\n    key: \"updateTileInfo\",\n    value: function updateTileInfo() {\n      var _this$rasterInfo2 = this.rasterInfo,\n        e = _this$rasterInfo2.storageInfo,\n        t = _this$rasterInfo2.spatialReference,\n        i = _this$rasterInfo2.extent,\n        o = _this$rasterInfo2.pixelSize;\n      if (!e.tileInfo) {\n        var _r = [],\n          _n = e.maximumPyramidLevel || 0;\n        var _s2 = Math.max(o.x, o.y),\n          _a2 = 1 / .0254 * 96 * _s2;\n        for (var _e4 = 0; _e4 <= _n; _e4++) _r.push(new y({\n          level: _n - _e4,\n          resolution: _s2,\n          scale: _a2\n        })), _s2 *= 2, _a2 *= 2;\n        var _l2 = new U({\n          x: i.xmin,\n          y: i.ymax,\n          spatialReference: t\n        });\n        e.tileInfo = new I({\n          origin: _l2,\n          size: [e.blockWidth, e.blockHeight],\n          spatialReference: t,\n          lods: _r\n        }), e.isVirtualTileInfo = !0;\n      }\n    }\n  }, {\n    key: \"createRemoteDatasetStorageInfo\",\n    value: function createRemoteDatasetStorageInfo(e) {\n      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 512;\n      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 512;\n      var o = arguments.length > 3 ? arguments[3] : undefined;\n      var r = e.width,\n        n = e.height,\n        s = e.nativeExtent,\n        a = e.pixelSize,\n        l = e.spatialReference,\n        c = new U({\n          x: s.xmin,\n          y: s.ymax,\n          spatialReference: l\n        });\n      null == o && (o = Math.max(0, Math.round(Math.log(Math.max(r, n)) / Math.LN2 - 8)));\n      var m = this.computeBlockBoundary(s, 512, 512, {\n        x: s.xmin,\n        y: s.ymax\n      }, [a], o);\n      e.storageInfo = new g({\n        blockWidth: t,\n        blockHeight: i,\n        pyramidBlockWidth: t,\n        pyramidBlockHeight: i,\n        origin: c,\n        firstPyramidLevel: 1,\n        maximumPyramidLevel: o,\n        blockBoundary: m\n      });\n    }\n  }, {\n    key: \"computeBestPyramidLevelForLocation\",\n    value: function () {\n      var _computeBestPyramidLevelForLocation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e) {\n        var t,\n          _args8 = arguments;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              t = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n              return _context8.abrupt(\"return\", 0);\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }));\n      function computeBestPyramidLevelForLocation(_x15) {\n        return _computeBestPyramidLevelForLocation.apply(this, arguments);\n      }\n      return computeBestPyramidLevelForLocation;\n    }()\n  }, {\n    key: \"computeBlockBoundary\",\n    value: function computeBlockBoundary(e, t, i, o, r) {\n      var n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      var s = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 2;\n      if (1 === r.length && n > 0) {\n        r = _toConsumableArray(r);\n        var _r$ = r[0],\n          _e5 = _r$.x,\n          _t4 = _r$.y;\n        for (var _i2 = 0; _i2 < n; _i2++) _e5 *= s, _t4 *= s, r.push({\n          x: _e5,\n          y: _t4\n        });\n      }\n      var a = [],\n        l = o.x,\n        c = o.y;\n      for (var _m3 = 0; _m3 < r.length; _m3++) {\n        var _r$_m = r[_m3],\n          _o3 = _r$_m.x,\n          _n2 = _r$_m.y;\n        a.push({\n          minCol: Math.floor((e.xmin - l + .1 * _o3) / t / _o3),\n          maxCol: Math.floor((e.xmax - l - .1 * _o3) / t / _o3),\n          minRow: Math.floor((c - e.ymax + .1 * _n2) / i / _n2),\n          maxRow: Math.floor((c - e.ymin - .1 * _n2) / i / _n2)\n        });\n      }\n      return a;\n    }\n  }, {\n    key: \"getPyramidPixelSize\",\n    value: function getPyramidPixelSize(e) {\n      var t = this.rasterInfo.nativePixelSize,\n        _this$rasterInfo$stor = this.rasterInfo.storageInfo,\n        i = _this$rasterInfo$stor.pyramidResolutions,\n        o = _this$rasterInfo$stor.pyramidScalingFactor;\n      if (0 === e) return t;\n      if (n(i) && i.length) return i[e - 1];\n      var r = Math.pow(o, e);\n      return {\n        x: t.x * r,\n        y: t.y * r\n      };\n    }\n  }, {\n    key: \"identifyPixelLocation\",\n    value: function identifyPixelLocation(e, t, i, o) {\n      var _this$rasterInfo3 = this.rasterInfo,\n        r = _this$rasterInfo3.spatialReference,\n        s = _this$rasterInfo3.nativeExtent,\n        a = _this$rasterInfo3.storageInfo,\n        l = a.maximumPyramidLevel,\n        c = a.origin,\n        m = a.transposeInfo,\n        f = o && n(m) ? m.tileSize[0] : a.blockWidth,\n        h = o && n(m) ? m.tileSize[1] : a.blockHeight,\n        u = E(e, r, i);\n      if (!s.intersects(u)) return null;\n      if (t < 0 || t > l) return null;\n      var p = this.getPyramidPixelSize(t),\n        d = p.x,\n        x = p.y,\n        y = (c.y - u.y) / x / h,\n        g = (u.x - c.x) / d / f,\n        I = Math.min(h - 1, Math.floor((y - Math.floor(y)) * h)),\n        R = Math.min(f - 1, Math.floor((g - Math.floor(g)) * f));\n      return {\n        pyramidLevel: t,\n        row: Math.floor(y),\n        col: Math.floor(g),\n        rowOffset: I,\n        colOffset: R,\n        blockWidth: f,\n        srcLocation: u\n      };\n    }\n  }, {\n    key: \"getTileExtent\",\n    value: function getTileExtent(e, t, i, o, r, n) {\n      var _n3 = _slicedToArray(n, 2),\n        s = _n3[0],\n        a = _n3[1],\n        l = o.x + i * s * e.x,\n        c = l + s * e.x,\n        m = o.y - t * a * e.y,\n        f = m - a * e.y;\n      return new V({\n        xmin: l,\n        xmax: c,\n        ymin: f,\n        ymax: m,\n        spatialReference: r\n      });\n    }\n  }, {\n    key: \"getBlockWidthHeight\",\n    value: function getBlockWidthHeight(e) {\n      return {\n        blockWidth: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockWidth : this.rasterInfo.storageInfo.blockWidth,\n        blockHeight: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockHeight : this.rasterInfo.storageInfo.blockHeight\n      };\n    }\n  }, {\n    key: \"isBlockOutside\",\n    value: function isBlockOutside(e, t, i) {\n      var o = this.rasterInfo.storageInfo.blockBoundary[e];\n      return !o || o.maxRow < t || o.maxCol < i || o.minRow > t || o.minCol > i;\n    }\n  }, {\n    key: \"_fetchPixels\",\n    value: function () {\n      var _fetchPixels3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e, t, i) {\n        var o,\n          r,\n          s,\n          l,\n          c,\n          m,\n          f,\n          h,\n          u,\n          p,\n          d,\n          x,\n          y,\n          g,\n          I,\n          R,\n          w,\n          k,\n          S,\n          v,\n          T,\n          b,\n          B,\n          P,\n          M,\n          W,\n          E,\n          D,\n          z,\n          F,\n          O,\n          G,\n          _e6,\n          _e7,\n          _args9 = arguments;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              o = _args9.length > 3 && _args9[3] !== undefined ? _args9[3] : {};\n              r = A(e);\n              if (!(r >= 2)) {\n                _context9.next = 4;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                extent: e,\n                pixelBlock: null\n              });\n            case 4:\n              s = this._getSourceDataInfo(e, t, i, o), l = s.pyramidLevel, c = s.pyramidResolution, m = s.srcResolution, f = s.srcExtent, h = s.srcWidth, u = s.srcHeight;\n              if (!(0 === h || 0 === u)) {\n                _context9.next = 7;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                extent: e,\n                srcExtent: f,\n                pixelBlock: null\n              });\n            case 7:\n              p = a(this.rasterInfo.transform), d = \"gcs-shift\" === (p === null || p === void 0 ? void 0 : p.type), x = n(L(e.spatialReference));\n              !d && x || (r = A(s.srcExtent, d));\n              y = this.rasterInfo.storageInfo;\n              g = {\n                x: Math.floor((f.xmin - y.origin.x) / c.x + .1),\n                y: Math.floor((y.origin.y - f.ymax) / c.y + .1)\n              };\n              _context9.next = 13;\n              return this._fetchRawTiles(l, g, {\n                width: h,\n                height: u,\n                wrapCount: r\n              }, o);\n            case 13:\n              I = _context9.sent;\n              if (I) {\n                _context9.next = 16;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                extent: e,\n                srcExtent: f,\n                pixelBlock: null\n              });\n            case 16:\n              R = l > 0 ? y.pyramidBlockWidth : y.blockWidth, w = l > 0 ? y.pyramidBlockHeight : y.blockHeight, k = R === h && w === u && g.x % R == 0 && g.y % w == 0, S = new U({\n                x: (e.xmax - e.xmin) / t,\n                y: (e.ymax - e.ymin) / i,\n                spatialReference: e.spatialReference\n              }), v = !e.spatialReference.equals(this.rasterInfo.spatialReference), T = o.datumTransformation;\n              if (!(!v && k && 1 === I.pixelBlocks.length && R === t && w === i && m.x === S.x && m.y === S.y)) {\n                _context9.next = 19;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                extent: e,\n                srcExtent: f,\n                pixelBlock: I.pixelBlocks[0]\n              });\n            case 19:\n              b = x && n(L(f.spatialReference)), B = o.requestProjectedLocalDirections && this.rasterInfo.dataType.startsWith(\"vector\");\n              _context9.t0 = B && !this.rasterJobHandler;\n              if (!_context9.t0) {\n                _context9.next = 24;\n                break;\n              }\n              _context9.next = 24;\n              return H();\n            case 24:\n              if (!this.rasterJobHandler) {\n                _context9.next = 30;\n                break;\n              }\n              _context9.next = 27;\n              return this.rasterJobHandler.getProjectionOffsetGrid({\n                projectedExtent: e,\n                srcBufferExtent: I.extent,\n                pixelSize: S.toJSON(),\n                datumTransformation: T,\n                rasterTransform: p,\n                hasWrapAround: r > 0 || b,\n                isAdaptive: !1 !== this.ioConfig.optimizeProjectionAccuracy,\n                includeGCSGrid: B\n              }, o);\n            case 27:\n              _context9.t1 = _context9.sent;\n              _context9.next = 31;\n              break;\n            case 30:\n              _context9.t1 = q({\n                projectedExtent: e,\n                srcBufferExtent: I.extent,\n                pixelSize: S,\n                datumTransformation: T,\n                rasterTransform: p,\n                hasWrapAround: r > 0 || b,\n                isAdaptive: !1,\n                includeGCSGrid: B\n              });\n            case 31:\n              P = _context9.t1;\n              W = !o.requestRawData, E = {\n                rows: P.spacing[0],\n                cols: P.spacing[1]\n              }, D = a(this._getRasterTileAlignmentInfo(l, I.extent.xmin)), z = I.pixelBlocks, F = I.mosaicSize, O = I.isPartiallyFilled;\n              G = null;\n              if (!this.rasterJobHandler) {\n                _context9.next = 42;\n                break;\n              }\n              _context9.next = 37;\n              return this.rasterJobHandler.mosaicAndTransform({\n                srcPixelBlocks: z,\n                srcMosaicSize: F,\n                destDimension: W ? {\n                  width: t,\n                  height: i\n                } : null,\n                coefs: W ? P.coefficients : null,\n                sampleSpacing: W ? E : null,\n                projectDirections: B,\n                gcsGrid: B ? P.gcsGrid : null,\n                isUV: \"vector-uv\" === this.rasterInfo.dataType,\n                interpolation: o.interpolation,\n                alignmentInfo: D,\n                blockWidths: null\n              }, o);\n            case 37:\n              _e6 = _context9.sent;\n              M = _e6.pixelBlock;\n              G = _e6.localNorthDirections;\n              _context9.next = 44;\n              break;\n            case 42:\n              _e7 = _(z, F, {\n                alignmentInfo: D\n              });\n              M = W ? C(_e7, {\n                width: t,\n                height: i\n              }, P.coefficients, E, o.interpolation) : _e7, B && P.gcsGrid && (G = j({\n                width: t,\n                height: i\n              }, P.gcsGrid), M = J(M, this.rasterInfo.dataType, G));\n            case 44:\n              return _context9.abrupt(\"return\", o.requestRawData || B ? {\n                srcExtent: f,\n                pixelBlock: M,\n                transformGrid: P,\n                localNorthDirections: G,\n                extent: e,\n                isPartiallyFilled: O\n              } : {\n                srcExtent: f,\n                extent: e,\n                pixelBlock: M\n              });\n            case 45:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function _fetchPixels(_x16, _x17, _x18) {\n        return _fetchPixels3.apply(this, arguments);\n      }\n      return _fetchPixels;\n    }()\n  }, {\n    key: \"_fetchRawTiles\",\n    value: function () {\n      var _fetchRawTiles2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(e, t, i, o) {\n        var _this2 = this;\n        var _this$rasterInfo$stor2, r, s, _this$getBlockWidthHe, a, l, c, m, f, h, u, p, d, x, y, g, I, R, w, k, S, v, T, b, B, P, M, _E, _loop, _t5, W, _, C, j, H, L;\n        return _regeneratorRuntime().wrap(function _callee10$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _this$rasterInfo$stor2 = this.rasterInfo.storageInfo, r = _this$rasterInfo$stor2.origin, s = _this$rasterInfo$stor2.blockBoundary, _this$getBlockWidthHe = this.getBlockWidthHeight(e), a = _this$getBlockWidthHe.blockWidth, l = _this$getBlockWidthHe.blockHeight;\n              c = t.x, m = t.y, f = i.width, h = i.height, u = i.wrapCount;\n              p = this._getRasterTileAlignmentInfo(e, 0);\n              o.buffer && (c -= o.buffer.cols, m -= o.buffer.rows, f += 2 * o.buffer.cols, h += 2 * o.buffer.rows);\n              d = 0, x = 0, y = 0;\n              if (u && n(p)) {\n                x = p.worldColumnCountFromOrigin;\n                y = p.originColumnOffset;\n                d = p.rightPadding;\n                x * p.blockWidth - d >= c + f && (d = 0);\n              }\n              g = Math.floor(c / a), I = Math.floor(m / l), R = Math.floor((c + f + d - 1) / a), w = Math.floor((m + h + d - 1) / l), k = s[e];\n              if (k) {\n                _context11.next = 9;\n                break;\n              }\n              return _context11.abrupt(\"return\", null);\n            case 9:\n              S = k.minRow, v = k.minCol, T = k.maxCol, b = k.maxRow;\n              if (!(0 === u && (w < S || R < v || I > b || g > T))) {\n                _context11.next = 12;\n                break;\n              }\n              return _context11.abrupt(\"return\", null);\n            case 12:\n              B = new Array();\n              P = !1;\n              M = null == this.ioConfig.allowPartialFill ? o.allowPartialFill : this.ioConfig.allowPartialFill;\n              _E = I;\n            case 16:\n              if (!(_E <= w)) {\n                _context11.next = 27;\n                break;\n              }\n              _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n                var i, _t6;\n                return _regeneratorRuntime().wrap(function _loop$(_context10) {\n                  while (1) switch (_context10.prev = _context10.next) {\n                    case 0:\n                      i = _t5;\n                      if (!o.disableWrapAround && u && n(p) && x <= _t5 && (i = _t5 - x - y), _E >= S && i >= v && b >= _E && T >= i) {\n                        _t6 = _this2._fetchRawTile(e, _E, i, o);\n                        M ? B.push(new Promise(function (e) {\n                          _t6.then(function (t) {\n                            return e(t);\n                          }).catch(function () {\n                            P = !0, e(null);\n                          });\n                        })) : B.push(_t6);\n                      } else B.push(Promise.resolve(null));\n                    case 2:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }, _loop);\n              });\n              _t5 = g;\n            case 19:\n              if (!(_t5 <= R)) {\n                _context11.next = 24;\n                break;\n              }\n              return _context11.delegateYield(_loop(), \"t0\", 21);\n            case 21:\n              _t5++;\n              _context11.next = 19;\n              break;\n            case 24:\n              _E++;\n              _context11.next = 16;\n              break;\n            case 27:\n              if (!(0 === B.length)) {\n                _context11.next = 29;\n                break;\n              }\n              return _context11.abrupt(\"return\", null);\n            case 29:\n              _context11.next = 31;\n              return Promise.all(B);\n            case 31:\n              W = _context11.sent;\n              _ = {\n                height: (w - I + 1) * l,\n                width: (R - g + 1) * a\n              };\n              C = this.rasterInfo.spatialReference;\n              j = this.getPyramidPixelSize(e);\n              H = j.x;\n              L = j.y;\n              return _context11.abrupt(\"return\", {\n                extent: new V({\n                  xmin: r.x + g * a * H,\n                  xmax: r.x + (R + 1) * a * H,\n                  ymin: r.y - (w + 1) * l * L,\n                  ymax: r.y - I * l * L,\n                  spatialReference: C\n                }),\n                pixelBlocks: W,\n                mosaicSize: _,\n                isPartiallyFilled: P\n              });\n            case 38:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee10, this);\n      }));\n      function _fetchRawTiles(_x19, _x20, _x21, _x22) {\n        return _fetchRawTiles2.apply(this, arguments);\n      }\n      return _fetchRawTiles;\n    }()\n  }, {\n    key: \"_fetchRawTile\",\n    value: function _fetchRawTile(e, t, i, o) {\n      var r = this.rasterInfo.storageInfo.blockBoundary[e];\n      if (!r) return Promise.resolve(null);\n      var n = r.minRow,\n        a = r.minCol,\n        l = r.maxCol,\n        c = r.maxRow;\n      if (t < n || i < a || t > c || i > l) return Promise.resolve(null);\n      var f = v(this.url, o.sliceId),\n        h = \"\".concat(e, \"/\").concat(t, \"/\").concat(i);\n      var u = T(f, o.registryId, h);\n      if (s(u)) {\n        var _r2 = new AbortController();\n        u = this.fetchRawTile(e, t, i, _objectSpread(_objectSpread({}, o), {}, {\n          signal: _r2.signal\n        })), b(f, o.registryId, h, u, _r2), u.catch(function () {\n          return B(f, o.registryId, h);\n        });\n      }\n      return o.signal && m(o, function () {\n        P(f, o.registryId, h);\n      }), u;\n    }\n  }, {\n    key: \"_computeMagDirValues\",\n    value: function _computeMagDirValues(e) {\n      var _e$;\n      var _this$rasterInfo4 = this.rasterInfo,\n        t = _this$rasterInfo4.bandCount,\n        i = _this$rasterInfo4.dataType;\n      if (!(2 === t && \"vector-magdir\" === i || \"vector-uv\" === i) || 2 !== (e === null || e === void 0 ? void 0 : e.length) || !((_e$ = e[0]) !== null && _e$ !== void 0 && _e$.length)) return null;\n      var o = e[0].length;\n      if (\"vector-magdir\" === i) {\n        var _t7 = e[1].map(function (e) {\n          return (e + 360) % 360;\n        });\n        return [e[0], _t7];\n      }\n      var _e8 = _slicedToArray(e, 2),\n        r = _e8[0],\n        n = _e8[1],\n        s = [],\n        a = [];\n      for (var _l3 = 0; _l3 < o; _l3++) {\n        var _N = N([r[_l3], n[_l3]]),\n          _N2 = _slicedToArray(_N, 2),\n          _e9 = _N2[0],\n          _t8 = _N2[1];\n        s.push(_e9), a.push(_t8);\n      }\n      return [s, a];\n    }\n  }, {\n    key: \"_getRasterTileAlignmentInfo\",\n    value: function _getRasterTileAlignmentInfo(e, t) {\n      return null == this._rasterTileAlighmentInfo && (this._rasterTileAlighmentInfo = O(this.rasterInfo)), s(this._rasterTileAlighmentInfo.pyramidsInfo) ? null : _objectSpread({\n        startX: t,\n        halfWorldWidth: this._rasterTileAlighmentInfo.halfWorldWidth,\n        hasGCSSShiftTransform: this._rasterTileAlighmentInfo.hasGCSSShiftTransform\n      }, this._rasterTileAlighmentInfo.pyramidsInfo[e]);\n    }\n  }, {\n    key: \"_getSourceDataInfo\",\n    value: function _getSourceDataInfo(e, t, i) {\n      var o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var r = {\n        datumTransformation: o.datumTransformation,\n        pyramidLevel: 0,\n        pyramidResolution: null,\n        srcExtent: null,\n        srcHeight: 0,\n        srcResolution: null,\n        srcWidth: 0\n      };\n      o.srcResolution && (r.srcResolution = o.srcResolution, this._updateSourceDataInfo(e, r));\n      var n = this.rasterInfo.storageInfo.maximumPyramidLevel || 0,\n        s = r.srcWidth,\n        a = r.srcHeight,\n        l = r.pyramidLevel,\n        c = s / t,\n        m = a / i,\n        f = l < n && c * m >= 16,\n        h = l === n && this._requireTooManySrcTiles(s, a, t, i);\n      if (f || h || 0 === s || 0 === a) {\n        var _s3 = new U({\n          x: (e.xmax - e.xmin) / t,\n          y: (e.ymax - e.ymin) / i,\n          spatialReference: e.spatialReference\n        });\n        var _a3 = G(_s3, this.rasterInfo.spatialReference, e, r.datumTransformation);\n        var _h2 = !_a3 || o.srcResolution && _a3.x + _a3.y < o.srcResolution.x + o.srcResolution.y;\n        if (f && o.srcResolution && _h2) {\n          var _e10 = Math.round(Math.log(Math.max(c, m)) / Math.LN2) - 1;\n          if (n - l + 3 >= _e10) {\n            var _t9 = Math.pow(2, _e10);\n            _a3 = {\n              x: o.srcResolution.x * _t9,\n              y: o.srcResolution.y * _t9\n            };\n          }\n        }\n        _a3 && (r.srcResolution = _a3, this._updateSourceDataInfo(e, r));\n      }\n      return this._requireTooManySrcTiles(r.srcWidth, r.srcHeight, t, i) && (r.srcWidth = 0, r.srcHeight = 0), r;\n    }\n  }, {\n    key: \"_requireTooManySrcTiles\",\n    value: function _requireTooManySrcTiles(e, t, i, o) {\n      var r = this.rasterInfo.storageInfo.tileInfo;\n      return Math.ceil(e / r.size[0]) * Math.ceil(t / r.size[1]) >= X || e / i > $ || t / o > $;\n    }\n  }, {\n    key: \"_updateSourceDataInfo\",\n    value: function _updateSourceDataInfo(e, t) {\n      t.srcWidth = 0, t.srcHeight = 0;\n      var i = this.rasterInfo.spatialReference,\n        o = t.srcResolution,\n        r = t.datumTransformation,\n        _D = D(o, this.rasterInfo, this.ioConfig.sampling),\n        n = _D.pyramidLevel,\n        s = _D.pyramidResolution,\n        l = _D.excessiveReading;\n      if (l) return;\n      var c = t.srcExtent || F(e, i, r);\n      if (null == c) return;\n      var m = a(this.rasterInfo.transform);\n      m && (c = m.inverseTransform(c)), t.srcExtent = c;\n      var f = Math.ceil((c.xmax - c.xmin) / s.x - .1),\n        h = Math.ceil((c.ymax - c.ymin) / s.y - .1);\n      t.pyramidLevel = n, t.pyramidResolution = s, t.srcWidth = f, t.srcHeight = h;\n    }\n  }, {\n    key: \"_getRequestOptionsWithSliceId\",\n    value: function _getRequestOptionsWithSliceId(e) {\n      return n(this.rasterInfo.multidimensionalInfo) && null == e.sliceId && (e = _objectSpread(_objectSpread({}, e), {}, {\n        sliceId: this.getSliceIndex(e.multidimensionalDefinition)\n      })), e;\n    }\n  }, {\n    key: \"_processIdentifyResult\",\n    value: function _processIdentifyResult(e, t) {\n      var i = t.srcLocation,\n        o = t.position,\n        r = t.pyramidLevel,\n        l = t.useTransposedTile,\n        c = e.pixels[0].length / e.width / e.height;\n      if (!(!e.mask || e.mask[o])) return {\n        location: i,\n        value: null\n      };\n      var m = this.rasterInfo.multidimensionalInfo;\n      if (s(m) || !l) {\n        var _t10 = e.pixels.map(function (e) {\n            return e[o];\n          }),\n          _n4 = {\n            location: i,\n            value: _t10,\n            pyramidLevel: r\n          },\n          _s4 = this._computeMagDirValues(_t10.map(function (e) {\n            return [e];\n          }));\n        return _s4 !== null && _s4 !== void 0 && _s4.length && (_n4.magdirValue = _s4.map(function (e) {\n          return e[0];\n        })), _n4;\n      }\n      var f = e.pixels.map(function (e) {\n          return e.slice(o * c, o * c + c);\n        }),\n        h = this._computeMagDirValues(f);\n      var u = t.requestSomeSlices,\n        p = t.identifyOptions;\n      var d = k(m, p.transposedVariableName);\n      if (u) {\n        var _h3;\n        var _e11 = S(d, a(p.multidimensionalDefinition), a(p.timeExtent));\n        f = f.map(function (t) {\n          return _e11.map(function (e) {\n            return t[e];\n          });\n        }), h = (_h3 = h) === null || _h3 === void 0 ? void 0 : _h3.map(function (t) {\n          return _e11.map(function (e) {\n            return t[e];\n          });\n        }), d = _e11.map(function (e) {\n          return d[e];\n        });\n      }\n      var y = e.noDataValues || this.rasterInfo.noDataValue,\n        g = {\n          pixels: f,\n          pixelType: e.pixelType\n        };\n      var I;\n      n(y) && (M(g, y), I = g.mask);\n      return {\n        location: i,\n        value: null,\n        dataSeries: d.map(function (e, t) {\n          var _I, _h4;\n          var i = {\n            value: 0 === ((_I = I) === null || _I === void 0 ? void 0 : _I[t]) ? null : f.map(function (e) {\n              return e[t];\n            }),\n            multidimensionalDefinition: e.multidimensionalDefinition.map(function (e) {\n              return new x(_objectSpread(_objectSpread({}, e), {}, {\n                isSlice: !0\n              }));\n            })\n          };\n          return (_h4 = h) !== null && _h4 !== void 0 && _h4.length && (i.magdirValue = [h[0][t], h[1][t]]), i;\n        }),\n        pyramidLevel: r\n      };\n    }\n  }]);\n  return K;\n}(c(o));\ne([f()], K.prototype, \"_rasterTileAlighmentInfo\", void 0), e([f({\n  readOnly: !0\n})], K.prototype, \"_isGlobalWrappableSource\", null), e([f(d)], K.prototype, \"url\", null), e([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], K.prototype, \"datasetName\", void 0), e([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], K.prototype, \"datasetFormat\", void 0), e([f()], K.prototype, \"hasUniqueSourceStorageInfo\", void 0), e([f()], K.prototype, \"rasterInfo\", void 0), e([f()], K.prototype, \"ioConfig\", void 0), e([f()], K.prototype, \"sourceJSON\", void 0), K = e([u(\"esri.layers.support.rasterDatasets.BaseRaster\")], K);\nvar Q = K;\nexport { Q as default };","map":{"version":3,"names":["_","e","t","i","JSONSupport","o","r","isSome","n","isNone","s","unwrap","a","unwrapOrThrow","l","EsriPromiseMixin","c","onAbort","m","property","f","ensureClass","h","subclass","u","sanitizeUrl","p","url","d","x","y","g","I","isMultiSliceOrRangeDefinition","R","getSliceIndex","w","createSlices","k","getSliceIds","S","getRasterId","v","getBlock","T","putBlock","b","deleteBlock","B","decreaseRefCount","P","convertNoDataToMask","M","decode","W","mosaic","approximateTransform","C","getLocalArithmeticNorthRotations","j","load","H","getWorldWidth","L","projectPoint","E","snapPyramid","D","snapExtent","z","getWorldWrapCount","A","projectExtent","F","getProjectionOffsetGrid","q","getRasterDatasetAlignmentInfo","O","projectResolution","G","convertToLocalDirections","J","uvComponentToVector","N","V","U","$","X","K","_c","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","rasterJobHandler","datasetName","datasetFormat","hasUniqueSourceStorageInfo","rasterInfo","ioConfig","sampling","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","addResolvingPromise","when","stop","init","normalizeCtorArgs","_objectSpread","resolution","bandIds","tileInfo","create","get","spatialReference","extent","width","set","_set","getLogger","declaredClass","_open","_callee2","_callee2$","_context2","open","_x","_fetchTile","_callee3","_args3","_callee3$","_context3","length","undefined","storageInfo","getTileExtentFromTileInfo","abrupt","fetchPixels","size","fetchTile","_x2","_x3","_x4","_identify","_callee4","_m2","_j$pixels","_t","_t2","_i$0$variableName","_t3","_e","_e2","_i","_o","_a","_l","_c2","_m","_yield$_e2$fetchPixel","_f","_yield$this$fetchPixe","_h","_p","_d","_y","_args4","_callee4$","_context4","clone","normalize","multidimensionalDefinition","timeExtent","hasMultidimensionalTranspose","multidimensionalInfo","transposedVariableName","variableName","variables","name","_getRequestOptionsWithSliceId","datumTransformation","intersects","location","transform","inverseTransform","nativeExtent","primaryRasters","rasters","identify","pixelSize","xmin","xmax","ymin","ymax","interpolation","sent","pixelBlock","Math","floor","mask","pixels","map","processedValue","pyramidLevel","srcResolution","computeBestPyramidLevelForLocation","identifyPixelLocation","row","col","rowOffset","colOffset","blockWidth","sliceId","concat","fetchRawTile","_processIdentifyResult","srcLocation","position","useTransposedTile","requestSomeSlices","identifyOptions","_x5","_fetchPixels2","_callee5","_e3","_s","_p2","_d2","_x9","_args5","_callee5$","_context5","requestRawData","_fetchPixels","_isGlobalWrappableSource","round","push","disableWrapAround","Promise","all","height","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","destDimension","coefs","sampleSpacing","alignmentInfo","blockWidths","srcExtent","_x6","_x7","_x8","_fetchRawPixels","_callee6","_this$rasterInfo","_args6","_callee6$","_context6","_fetchRawTiles","nativePixelSize","pow","pixelBlocks","mosaicSize","pyramidBlockWidth","pyramidBlockHeight","blockHeight","clipOffset","clipSize","fetchRawPixels","_x10","_x11","_x12","computeExtent","decodePixelBlock","useCanvas","data","options","_request","_callee7","_ref","_o2","_args7","_callee7$","_context7","customFetchParameters","range","query","headers","retryCount","Range","from","to","t0","request","_x13","_x14","lodAt","getTileExtent","origin","updateTileInfo","_this$rasterInfo2","maximumPyramidLevel","max","level","scale","lods","isVirtualTileInfo","createRemoteDatasetStorageInfo","log","LN2","computeBlockBoundary","firstPyramidLevel","blockBoundary","_computeBestPyramidLevelForLocation","_callee8","_args8","_callee8$","_context8","_x15","_toConsumableArray","_r$","_r$_m","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","_this$rasterInfo$stor","pyramidResolutions","pyramidScalingFactor","_this$rasterInfo3","transposeInfo","tileSize","min","_n3","_slicedToArray","getBlockWidthHeight","isBlockOutside","_fetchPixels3","_callee9","_e6","_e7","_args9","_callee9$","_context9","_getSourceDataInfo","pyramidResolution","srcWidth","srcHeight","type","wrapCount","equals","requestProjectedLocalDirections","dataType","startsWith","projectedExtent","srcBufferExtent","toJSON","rasterTransform","hasWrapAround","isAdaptive","optimizeProjectionAccuracy","includeGCSGrid","t1","rows","spacing","cols","_getRasterTileAlignmentInfo","isPartiallyFilled","coefficients","projectDirections","gcsGrid","isUV","localNorthDirections","transformGrid","_x16","_x17","_x18","_fetchRawTiles2","_callee10","_this2","_this$rasterInfo$stor2","_this$getBlockWidthHe","_E","_loop","_t5","_callee10$","_context11","buffer","worldColumnCountFromOrigin","originColumnOffset","rightPadding","Array","allowPartialFill","_t6","_loop$","_context10","_fetchRawTile","then","catch","resolve","delegateYield","_x19","_x20","_x21","_x22","registryId","AbortController","signal","_computeMagDirValues","_e$","_this$rasterInfo4","bandCount","_e8","_N","_N2","_rasterTileAlighmentInfo","pyramidsInfo","startX","halfWorldWidth","hasGCSSShiftTransform","_updateSourceDataInfo","_requireTooManySrcTiles","ceil","_D","excessiveReading","magdirValue","slice","_h3","noDataValues","noDataValue","pixelType","dataSeries","_I","_h4","isSlice","prototype","readOnly","String","json","write","Q","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../request.js\";import i from\"../../../core/Error.js\";import{JSONSupport as o}from\"../../../core/JSONSupport.js\";import r from\"../../../core/Logger.js\";import{isSome as n,isNone as s,unwrap as a,unwrapOrThrow as l}from\"../../../core/maybe.js\";import{EsriPromiseMixin as c}from\"../../../core/Promise.js\";import{onAbort as m}from\"../../../core/promiseUtils.js\";import{property as f}from\"../../../core/accessorSupport/decorators/property.js\";import{ensureClass as h}from\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as u}from\"../../../core/accessorSupport/decorators/subclass.js\";import{sanitizeUrl as p}from\"../arcgisLayerUrl.js\";import{url as d}from\"../commonProperties.js\";import x from\"../DimensionalDefinition.js\";import y from\"../LOD.js\";import g from\"../RasterStorageInfo.js\";import I from\"../TileInfo.js\";import{isMultiSliceOrRangeDefinition as R,getSliceIndex as w,createSlices as k,getSliceIds as S}from\"./multidimensionalUtils.js\";import{getRasterId as v,getBlock as T,putBlock as b,deleteBlock as B,decreaseRefCount as P}from\"./RawBlockCache.js\";import{convertNoDataToMask as M}from\"../rasterFormats/pixelRangeUtils.js\";import{decode as W}from\"../rasterFormats/RasterCodec.js\";import{mosaic as _,approximateTransform as C,getLocalArithmeticNorthRotations as j}from\"../rasterFunctions/pixelUtils.js\";import{load as H,getWorldWidth as L,projectPoint as E,snapPyramid as D,snapExtent as z,getWorldWrapCount as A,projectExtent as F,getProjectionOffsetGrid as q,getRasterDatasetAlignmentInfo as O,projectResolution as G}from\"../rasterFunctions/rasterProjectionHelper.js\";import{convertToLocalDirections as J,uvComponentToVector as N}from\"../rasterFunctions/vectorFieldUtils.js\";import V from\"../../../geometry/Extent.js\";import U from\"../../../geometry/Point.js\";const $=8,X=256;let K=class extends(c(o)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:\"closest\"}}async init(){const e=H();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:\"closest\",tileInfo:I.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=L(e.spatialReference);return n(t)&&e.extent.width>=t/2}set url(e){this._set(\"url\",p(e,r.getLogger(this.declaredClass)))}async open(e){throw new i(\"BaseRaster:open-not-implemented\",\"open() is not implemented\")}async fetchTile(e,t,i,o={}){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(n,r.size[0],r.size[1],o)}async identify(e,t={}){e=h(U,e).clone().normalize();const{multidimensionalDefinition:i,timeExtent:o}=t,{rasterInfo:r}=this,{hasMultidimensionalTranspose:l,multidimensionalInfo:c}=r;let{transposedVariableName:m}=t;const f=n(c)&&l&&(null!=o||R(i));if(f&&!m){m=n(i)&&i.length>0?i[0].variableName??void 0:c.variables[0].name,t={...t,transposedVariableName:m}}t=this._getRequestOptionsWithSliceId(t);const{spatialReference:u,extent:p}=r,{datumTransformation:d}=t;let x=E(e,u,d);if(!p.intersects(x))return{location:x,value:null};if(n(r.transform)){const e=r.transform.inverseTransform(x);if(!r.nativeExtent.intersects(e))return{location:e,value:null};x=e}let y=0;const g=n(m)&&n(c)&&r.hasMultidimensionalTranspose;if(\"Function\"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(g)return e.identify(x,t);const{pixelSize:i}=r,o=3,a=i.x*o/2,l=i.y*o/2,c=new V({xmin:x.x-a,xmax:x.x+a,ymin:x.y-l,ymax:x.y+l,spatialReference:u}),m={interpolation:\"nearest\"},{pixelBlock:f}=await e.fetchPixels(c,o,o,m),{pixelBlock:h}=await this.fetchPixels(c,o,o,m);if(s(f))return{location:x,value:null};const p=Math.floor(o*o*.5),d=!f.mask||f.mask[p]?f.pixels.map((e=>e[p])):null;let y;return n(h)&&(y=!h.mask||h.mask[p]?h.pixels.map((e=>e[p])):void 0),{location:x,value:d,processedValue:y,pyramidLevel:0}}if(!g)if(t.srcResolution){y=D(t.srcResolution,r,this.ioConfig.sampling).pyramidLevel}else if(y=await this.computeBestPyramidLevelForLocation(e,t),null==y)return{location:x,value:null};const I=this.identifyPixelLocation(x,y,null,g);if(null===I)return{location:x,value:null};const{row:w,col:k,rowOffset:S,colOffset:B,blockWidth:P}=I,M=m??a(t.sliceId),W=v(this.url,M),_=`${y}/${w}/${k}`;let C=T(W,null,_);s(C)&&(C=this.fetchRawTile(y,w,k,t),b(W,null,_,C));const j=await C;if(s(j)||!j.pixels?.length)return{location:x,value:null};const H=S*P+B;return this._processIdentifyResult(j,{srcLocation:x,position:H,pyramidLevel:y,useTransposedTile:!!g,requestSomeSlices:f,identifyOptions:t})}async fetchPixels(e,t,i,o={}){if(e=z(e),(o=this._getRequestOptionsWithSliceId(o)).requestRawData)return this._fetchPixels(e,t,i,o);const r=L(e.spatialReference),n=A(e);if(s(r)||0===n||1===n&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,o);if(n>=3)return{extent:e,pixelBlock:null};const a=[],{xmin:l,xmax:c}=e,m=Math.round(r/(c-l)*t),f=m-Math.round((r/2-l)/(c-l)*t);let h=0;const u=[];for(let s=0;s<=n;s++){const p=new V({xmin:0===s?l:-r/2,xmax:s===n?c-r*s:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),d=0===s?m-f:s===n?t-h:m;h+=d,u.push(d);const x=o.disableWrapAround&&s>0?null:this._fetchPixels(p,d,i,o);a.push(x)}const p=(await Promise.all(a)).map((e=>e?.pixelBlock));let d=null;const x={width:t,height:i};if(this.rasterJobHandler){d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:\"nearest\",alignmentInfo:null,blockWidths:u},o)).pixelBlock}else d=_(p,x,{blockWidths:u});return{extent:e,srcExtent:F(e,this.rasterInfo.spatialReference,o.datumTransformation),pixelBlock:d}}async fetchRawPixels(e,t,i,o={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,o),{nativeExtent:s,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**e,m=a.x*c,f=a.y*c,h=new V({xmin:s.xmin+m*t.x,xmax:s.xmin+m*(t.x+i.width-1),ymin:s.ymax-f*(t.y+i.height-1),ymax:s.ymax-f*t.y,spatialReference:s.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:u,mosaicSize:p}=r;if(1===u.length&&n(u[0])&&u[0].width===i.width&&u[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const d=e>0?l.pyramidBlockWidth:l.blockWidth,x=e>0?l.pyramidBlockHeight:l.blockHeight,y={x:t.x%d,y:t.y%x};let g;if(this.rasterJobHandler){g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:p,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:o.interpolation,alignmentInfo:null,blockWidths:null},o)).pixelBlock}else g=_(u,p,{clipOffset:y,clipSize:i});return{extent:h,srcExtent:h,pixelBlock:g}}fetchRawTile(e,t,o,r){throw new i(\"BaseRaster:read-not-implemented\",\"fetchRawTile() is not implemented\")}computeExtent(e){return F(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?W(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,i,o=0){const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:a}=i;o=o??i.retryCount??this.ioConfig.retryCount;const l=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await t(e,{...i,query:{...s,...r},headers:{...a,...l}})}catch(c){if(o>0)return o--,this.request(e,i,o);throw c}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return s(t)||s(e)||0===e.length?null:w(e,t)}getTileExtentFromTileInfo(e,t,i,o){const r=l(o.lodAt(e));return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,o.origin,o.spatialReference,o.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let e=0;e<=n;e++)r.push(new y({level:n-e,resolution:s,scale:a})),s*=2,a*=2;const l=new U({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new I({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,o){const{width:r,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=e,c=new U({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const m=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[a],o);e.storageInfo=new g({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,o,r,n=0,s=2){if(1===r.length&&n>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<n;i++)e*=s,t*=s,r.push({x:e,y:t})}const a=[],{x:l,y:c}=o;for(let m=0;m<r.length;m++){const{x:o,y:n}=r[m];a.push({minCol:Math.floor((e.xmin-l+.1*o)/t/o),maxCol:Math.floor((e.xmax-l-.1*o)/t/o),minRow:Math.floor((c-e.ymax+.1*n)/i/n),maxRow:Math.floor((c-e.ymin-.1*n)/i/n)})}return a}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===e)return t;if(n(i)&&i.length)return i[e-1];const r=o**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,o){const{spatialReference:r,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:m}=a,f=o&&n(m)?m.tileSize[0]:a.blockWidth,h=o&&n(m)?m.tileSize[1]:a.blockHeight,u=E(e,r,i);if(!s.intersects(u))return null;if(t<0||t>l)return null;const p=this.getPyramidPixelSize(t),{x:d,y:x}=p,y=(c.y-u.y)/x/h,g=(u.x-c.x)/d/f,I=Math.min(h-1,Math.floor((y-Math.floor(y))*h)),R=Math.min(f-1,Math.floor((g-Math.floor(g))*f));return{pyramidLevel:t,row:Math.floor(y),col:Math.floor(g),rowOffset:I,colOffset:R,blockWidth:f,srcLocation:u}}getTileExtent(e,t,i,o,r,n){const[s,a]=n,l=o.x+i*s*e.x,c=l+s*e.x,m=o.y-t*a*e.y,f=m-a*e.y;return new V({xmin:l,xmax:c,ymin:f,ymax:m,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const o=this.rasterInfo.storageInfo.blockBoundary[e];return!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i}async _fetchPixels(e,t,i,o={}){let r=A(e);if(r>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,o),{pyramidLevel:l,pyramidResolution:c,srcResolution:m,srcExtent:f,srcWidth:h,srcHeight:u}=s;if(0===h||0===u)return{extent:e,srcExtent:f,pixelBlock:null};const p=a(this.rasterInfo.transform),d=\"gcs-shift\"===p?.type,x=n(L(e.spatialReference));!d&&x||(r=A(s.srcExtent,d));const y=this.rasterInfo.storageInfo,g={x:Math.floor((f.xmin-y.origin.x)/c.x+.1),y:Math.floor((y.origin.y-f.ymax)/c.y+.1)},I=await this._fetchRawTiles(l,g,{width:h,height:u,wrapCount:r},o);if(!I)return{extent:e,srcExtent:f,pixelBlock:null};const R=l>0?y.pyramidBlockWidth:y.blockWidth,w=l>0?y.pyramidBlockHeight:y.blockHeight,k=R===h&&w===u&&g.x%R==0&&g.y%w==0,S=new U({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),v=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:T}=o;if(!v&&k&&1===I.pixelBlocks.length&&R===t&&w===i&&m.x===S.x&&m.y===S.y)return{extent:e,srcExtent:f,pixelBlock:I.pixelBlocks[0]};const b=x&&n(L(f.spatialReference)),B=o.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith(\"vector\");B&&!this.rasterJobHandler&&await H();const P=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:I.extent,pixelSize:S.toJSON(),datumTransformation:T,rasterTransform:p,hasWrapAround:r>0||b,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:B},o):q({projectedExtent:e,srcBufferExtent:I.extent,pixelSize:S,datumTransformation:T,rasterTransform:p,hasWrapAround:r>0||b,isAdaptive:!1,includeGCSGrid:B});let M;const W=!o.requestRawData,E={rows:P.spacing[0],cols:P.spacing[1]},D=a(this._getRasterTileAlignmentInfo(l,I.extent.xmin)),{pixelBlocks:z,mosaicSize:F,isPartiallyFilled:O}=I;let G=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:z,srcMosaicSize:F,destDimension:W?{width:t,height:i}:null,coefs:W?P.coefficients:null,sampleSpacing:W?E:null,projectDirections:B,gcsGrid:B?P.gcsGrid:null,isUV:\"vector-uv\"===this.rasterInfo.dataType,interpolation:o.interpolation,alignmentInfo:D,blockWidths:null},o);({pixelBlock:M,localNorthDirections:G}=e)}else{const e=_(z,F,{alignmentInfo:D});M=W?C(e,{width:t,height:i},P.coefficients,E,o.interpolation):e,B&&P.gcsGrid&&(G=j({width:t,height:i},P.gcsGrid),M=J(M,this.rasterInfo.dataType,G))}return o.requestRawData||B?{srcExtent:f,pixelBlock:M,transformGrid:P,localNorthDirections:G,extent:e,isPartiallyFilled:O}:{srcExtent:f,extent:e,pixelBlock:M}}async _fetchRawTiles(e,t,i,o){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:m}=t,{width:f,height:h,wrapCount:u}=i;const p=this._getRasterTileAlignmentInfo(e,0);o.buffer&&(c-=o.buffer.cols,m-=o.buffer.rows,f+=2*o.buffer.cols,h+=2*o.buffer.rows);let d=0,x=0,y=0;if(u&&n(p)){({worldColumnCountFromOrigin:x,originColumnOffset:y,rightPadding:d}=p);x*p.blockWidth-d>=c+f&&(d=0)}const g=Math.floor(c/a),I=Math.floor(m/l),R=Math.floor((c+f+d-1)/a),w=Math.floor((m+h+d-1)/l),k=s[e];if(!k)return null;const{minRow:S,minCol:v,maxCol:T,maxRow:b}=k;if(0===u&&(w<S||R<v||I>b||g>T))return null;const B=new Array;let P=!1;const M=null==this.ioConfig.allowPartialFill?o.allowPartialFill:this.ioConfig.allowPartialFill;for(let E=I;E<=w;E++)for(let t=g;t<=R;t++){let i=t;if(!o.disableWrapAround&&u&&n(p)&&x<=t&&(i=t-x-y),E>=S&&i>=v&&b>=E&&T>=i){const t=this._fetchRawTile(e,E,i,o);M?B.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{P=!0,e(null)}))}))):B.push(t)}else B.push(Promise.resolve(null))}if(0===B.length)return null;const W=await Promise.all(B),_={height:(w-I+1)*l,width:(R-g+1)*a},{spatialReference:C}=this.rasterInfo,j=this.getPyramidPixelSize(e),{x:H,y:L}=j;return{extent:new V({xmin:r.x+g*a*H,xmax:r.x+(R+1)*a*H,ymin:r.y-(w+1)*l*L,ymax:r.y-I*l*L,spatialReference:C}),pixelBlocks:W,mosaicSize:_,isPartiallyFilled:P}}_fetchRawTile(e,t,i,o){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:l,maxRow:c}=r;if(t<n||i<a||t>c||i>l)return Promise.resolve(null);const f=v(this.url,o.sliceId),h=`${e}/${t}/${i}`;let u=T(f,o.registryId,h);if(s(u)){const r=new AbortController;u=this.fetchRawTile(e,t,i,{...o,signal:r.signal}),b(f,o.registryId,h,u,r),u.catch((()=>B(f,o.registryId,h)))}return o.signal&&m(o,(()=>{P(f,o.registryId,h)})),u}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if(!(2===t&&\"vector-magdir\"===i||\"vector-uv\"===i)||2!==e?.length||!e[0]?.length)return null;const o=e[0].length;if(\"vector-magdir\"===i){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[r,n]=e,s=[],a=[];for(let l=0;l<o;l++){const[e,t]=N([r[l],n[l]]);s.push(e),a.push(t)}return[s,a]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=O(this.rasterInfo)),s(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,o={}){const r={datumTransformation:o.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};o.srcResolution&&(r.srcResolution=o.srcResolution,this._updateSourceDataInfo(e,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:a,pyramidLevel:l}=r,c=s/t,m=a/i,f=l<n&&c*m>=16,h=l===n&&this._requireTooManySrcTiles(s,a,t,i);if(f||h||(0===s||0===a)){const s=new U({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let a=G(s,this.rasterInfo.spatialReference,e,r.datumTransformation);const h=!a||o.srcResolution&&a.x+a.y<o.srcResolution.x+o.srcResolution.y;if(f&&o.srcResolution&&h){const e=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(n-l+3>=e){const t=2**e;a={x:o.srcResolution.x*t,y:o.srcResolution.y*t}}}a&&(r.srcResolution=a,this._updateSourceDataInfo(e,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,t,i)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(e,t,i,o){const{tileInfo:r}=this.rasterInfo.storageInfo;return Math.ceil(e/r.size[0])*Math.ceil(t/r.size[1])>=X||e/i>$||t/o>$}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:o,datumTransformation:r}=t,{pyramidLevel:n,pyramidResolution:s,excessiveReading:l}=D(o,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||F(e,i,r);if(null==c)return;const m=a(this.rasterInfo.transform);m&&(c=m.inverseTransform(c)),t.srcExtent=c;const f=Math.ceil((c.xmax-c.xmin)/s.x-.1),h=Math.ceil((c.ymax-c.ymin)/s.y-.1);t.pyramidLevel=n,t.pyramidResolution=s,t.srcWidth=f,t.srcHeight=h}_getRequestOptionsWithSliceId(e){return n(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:o,pyramidLevel:r,useTransposedTile:l}=t,c=e.pixels[0].length/e.width/e.height;if(!(!e.mask||e.mask[o]))return{location:i,value:null};const{multidimensionalInfo:m}=this.rasterInfo;if(s(m)||!l){const t=e.pixels.map((e=>e[o])),n={location:i,value:t,pyramidLevel:r},s=this._computeMagDirValues(t.map((e=>[e])));return s?.length&&(n.magdirValue=s.map((e=>e[0]))),n}let f=e.pixels.map((e=>e.slice(o*c,o*c+c))),h=this._computeMagDirValues(f);const{requestSomeSlices:u,identifyOptions:p}=t;let d=k(m,p.transposedVariableName);if(u){const e=S(d,a(p.multidimensionalDefinition),a(p.timeExtent));f=f.map((t=>e.map((e=>t[e])))),h=h?.map((t=>e.map((e=>t[e])))),d=e.map((e=>d[e]))}const y=e.noDataValues||this.rasterInfo.noDataValue,g={pixels:f,pixelType:e.pixelType};let I;n(y)&&(M(g,y),I=g.mask);return{location:i,value:null,dataSeries:d.map(((e,t)=>{const i={value:0===I?.[t]?null:f.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new x({...e,isSlice:!0})))};return h?.length&&(i.magdirValue=[h[0][t],h[1][t]]),i})),pyramidLevel:r}}};e([f()],K.prototype,\"_rasterTileAlighmentInfo\",void 0),e([f({readOnly:!0})],K.prototype,\"_isGlobalWrappableSource\",null),e([f(d)],K.prototype,\"url\",null),e([f({type:String,json:{write:!0}})],K.prototype,\"datasetName\",void 0),e([f({type:String,json:{write:!0}})],K.prototype,\"datasetFormat\",void 0),e([f()],K.prototype,\"hasUniqueSourceStorageInfo\",void 0),e([f()],K.prototype,\"rasterInfo\",void 0),e([f()],K.prototype,\"ioConfig\",void 0),e([f()],K.prototype,\"sourceJSON\",void 0),K=e([u(\"esri.layers.support.rasterDatasets.BaseRaster\")],K);const Q=K;export{Q as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}