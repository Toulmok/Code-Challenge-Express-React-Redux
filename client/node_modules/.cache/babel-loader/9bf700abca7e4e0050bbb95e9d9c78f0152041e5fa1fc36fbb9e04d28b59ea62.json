{"ast":null,"code":"/* Copyright 2017 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\n/*eslint-disable */\nimport Portal from '@arcgis/core/portal/Portal';\n/* eslint-enable */\n\nimport { LOAD_PORTAL, SET_IDENTITY, GET_USER_ITEMS, SET_USER_ITEMS } from '../constants/action-types';\nconst portal = new Portal({\n  authMode: 'immediate'\n});\nfunction getUrlParamArray(param) {\n  param = param.replace(/([\\[\\](){}*?+^$.\\\\|])/g, \"\\\\$1\");\n  var value = [];\n  var regex = new RegExp(\"[?&]\" + param + \"=([^&#]*)\", \"g\");\n  var url = decodeURIComponent(window.location.href);\n  var match = null;\n  while (match = regex.exec(url)) {\n    value.push(match[1]);\n  }\n  return value;\n}\nconst qParamArray = {\n  searchFields: [\"qId\", \"qTitle\"],\n  getFields: [getUrlParamArray(\"qId\"), getUrlParamArray(\"qTitle\"), getUrlParamArray(\"qType\")]\n};\n\n/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */\nconst arcgisMiddleWare = store => next => action => {\n  switch (action.type) {\n    case LOAD_PORTAL:\n      portal.load().then(() => {\n        store.dispatch({\n          type: SET_IDENTITY,\n          username: portal.user.username,\n          fullname: portal.user.fullName,\n          email: portal.user.email,\n          thumbnailurl: portal.user.thumbnailUrl\n        });\n        store.dispatch({\n          type: GET_USER_ITEMS\n        });\n      });\n    case GET_USER_ITEMS:\n      next(action);\n      if (qParamArray.qTitle != undefined) {\n        qParamArray.qTitle = 'AND title:'.concat(qParamArray.qTitle);\n      }\n      /*\r\n      let qTitle = getUrlParamArray(\"qTitle\")\r\n      let qType = getUrlParamArray(\"qType\")\r\n      let qParam = {\r\n        qTitle: 'AND title:'.concat(qTitle[0]), \r\n        qType:'AND type:'.concat(qType[0]),\r\n      }*/\n      console.log(portal.user);\n      console.log(qParamArray.qTitle);\n      try {\n        return portal.queryItems({\n          query: `owner:${portal.user.username}`,\n          sortField: 'modified',\n          sortOrder: 'desc',\n          num: 15\n        }).then(_ref => {\n          let {\n            results\n          } = _ref;\n          return store.dispatch({\n            type: SET_USER_ITEMS,\n            userItems: results\n          });\n        });\n      } catch {\n        return 0;\n      } finally {\n        return 0;\n      }\n    default:\n      return next(action);\n  }\n};\nexport default arcgisMiddleWare;","map":{"version":3,"names":["Portal","LOAD_PORTAL","SET_IDENTITY","GET_USER_ITEMS","SET_USER_ITEMS","portal","authMode","getUrlParamArray","param","replace","value","regex","RegExp","url","decodeURIComponent","window","location","href","match","exec","push","qParamArray","searchFields","getFields","arcgisMiddleWare","store","next","action","type","load","then","dispatch","username","user","fullname","fullName","email","thumbnailurl","thumbnailUrl","qTitle","undefined","concat","console","log","queryItems","query","sortField","sortOrder","num","_ref","results","userItems"],"sources":["C:/code-challenge-react/frontend/src/middleware/arcgis-portal.js"],"sourcesContent":["/* Copyright 2017 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n/*eslint-disable */\r\nimport Portal from '@arcgis/core/portal/Portal'\r\n/* eslint-enable */\r\n\r\nimport {\r\n  LOAD_PORTAL,\r\n  SET_IDENTITY,\r\n  GET_USER_ITEMS,\r\n  SET_USER_ITEMS,\r\n} from '../constants/action-types'\r\n\r\nconst portal = new Portal({ authMode: 'immediate' })\r\nfunction getUrlParamArray(param)\r\n{\r\n  param = param.replace(/([\\[\\](){}*?+^$.\\\\|])/g, \"\\\\$1\");\r\n  var value = [];\r\n  var regex = new RegExp(\"[?&]\" + param + \"=([^&#]*)\", \"g\");\r\n  var url   = decodeURIComponent(window.location.href);\r\n  var match = null;\r\n  while (match = regex.exec(url)) {\r\n    value.push(match[1]);\r\n  }    \r\n  return value;\r\n}\r\nconst qParamArray = {\r\n  searchFields: [\"qId\",\"qTitle\"],\r\n  getFields: [getUrlParamArray(\"qId\"),getUrlParamArray(\"qTitle\"),getUrlParamArray(\"qType\"),]\r\n}\r\n\r\n/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */\r\nconst arcgisMiddleWare = store => next => (action) => {\r\n  switch (action.type) {\r\n    case LOAD_PORTAL:\r\n      portal.load()\r\n      .then(() => {\r\n        store.dispatch({\r\n          type: SET_IDENTITY,\r\n          username: portal.user.username,\r\n          fullname: portal.user.fullName,\r\n          email: portal.user.email,\r\n          thumbnailurl: portal.user.thumbnailUrl,\r\n        })\r\n        store.dispatch({ type: GET_USER_ITEMS })\r\n      })\r\n\r\n    case GET_USER_ITEMS:\r\n      next(action)\r\n      if(qParamArray.qTitle != undefined){qParamArray.qTitle = 'AND title:'.concat(qParamArray.qTitle)}\r\n      /*\r\n      let qTitle = getUrlParamArray(\"qTitle\")\r\n      let qType = getUrlParamArray(\"qType\")\r\n      let qParam = {\r\n        qTitle: 'AND title:'.concat(qTitle[0]), \r\n        qType:'AND type:'.concat(qType[0]),\r\n      }*/\r\n      console.log(portal.user)\r\n      console.log(qParamArray.qTitle)\r\n      \r\n      try { \r\n        return portal.queryItems({\r\n          query: `owner:${portal.user.username}`,\r\n          sortField: 'modified',\r\n          sortOrder: 'desc',\r\n          num: 15,\r\n        })\r\n        .then(({ results }) => store.dispatch({\r\n          type: SET_USER_ITEMS,\r\n          userItems: results,\r\n        }))\r\n      }\r\n      catch { return 0 }\r\n      finally { return 0 }\r\n      \r\n    default:\r\n      return next(action)\r\n  }\r\n}\r\n\r\nexport default arcgisMiddleWare"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}