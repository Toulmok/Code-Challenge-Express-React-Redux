{"ast":null,"code":"/* Copyright 2017 Esri\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport PortalQueryParams from '@arcgis/core/portal/PortalQueryParams';\nimport portalItem from '@arcgis/core/portal/PortalItem';\nimport { INIT_ITEMS } from '../constants/action-types';\nconst arcgis = {};\nwindow.arcgis = arcgis;\n\n/**\n * Middleware function with the signature\n *\n * storeInstance =>\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\n * actionThatDispatchWasCalledWith =>\n * valueToUseAsTheReturnValueOfTheDispatchCall\n *\n * Typically written as\n *\n * store => next => action => result\n */\nconst arcgisMiddleWare = store => next => action => {\n  switch (action.type) {\n    //Initialize scene view on a viewport container.\n\n    case INIT_ITEMS:\n      {\n        if (!action.id || !action.container) break;\n\n        // Initialize item table\n        const queryParams = new PortalQueryParams({\n          query: \"owner:\" + \"Eileonx\",\n          //portal.user.username,credential\n          sortOrder: \"desc\",\n          num: 20\n        });\n        let queryResults = portal.queryItems(queryParams);\n\n        // When initialized...\n        return queryResults;\n      }\n    default:\n      {\n        next(action);\n        break;\n      }\n  }\n  return Promise.resolve();\n};\nexport default arcgisMiddleWare;","map":{"version":3,"names":["PortalQueryParams","portalItem","INIT_ITEMS","arcgis","window","arcgisMiddleWare","store","next","action","type","id","container","queryParams","query","sortOrder","num","queryResults","portal","queryItems","Promise","resolve"],"sources":["C:/code-challenge-react/frontend/src/middleware/arcgis-portalquery.js"],"sourcesContent":["/* Copyright 2017 Esri\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport PortalQueryParams from '@arcgis/core/portal/PortalQueryParams'\nimport portalItem from '@arcgis/core/portal/PortalItem'\n\nimport {\n  INIT_ITEMS,\n} from '../constants/action-types'\n\nconst arcgis = {}\nwindow.arcgis = arcgis\n\n/**\n * Middleware function with the signature\n *\n * storeInstance =>\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\n * actionThatDispatchWasCalledWith =>\n * valueToUseAsTheReturnValueOfTheDispatchCall\n *\n * Typically written as\n *\n * store => next => action => result\n */\nconst arcgisMiddleWare = store => next => (action) => {\n\n  switch (action.type) {\n    //Initialize scene view on a viewport container.\n\n    case INIT_ITEMS: {\n      if (!action.id || !action.container) break\n\n      // Initialize item table\n      const queryParams = new PortalQueryParams({\n        query: \"owner:\" + \"Eileonx\",//portal.user.username,credential\n        sortOrder: \"desc\",\n        num: 20\n      })\n      let queryResults = portal.queryItems(queryParams)\n\n      // When initialized...\n      return queryResults\n    }\n\n    default: {\n      next(action)\n      break\n    }\n  }\n\n  return Promise.resolve()\n}\n\nexport default arcgisMiddleWare"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,iBAAiB,MAAM,uCAAuC;AACrE,OAAOC,UAAU,MAAM,gCAAgC;AAEvD,SACEC,UAAU,QACL,2BAA2B;AAElC,MAAMC,MAAM,GAAG,CAAC,CAAC;AACjBC,MAAM,CAACD,MAAM,GAAGA,MAAM;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAKC,MAAM,IAAK;EAEpD,QAAQA,MAAM,CAACC,IAAI;IACjB;;IAEA,KAAKP,UAAU;MAAE;QACf,IAAI,CAACM,MAAM,CAACE,EAAE,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE;;QAErC;QACA,MAAMC,WAAW,GAAG,IAAIZ,iBAAiB,CAAC;UACxCa,KAAK,EAAE,QAAQ,GAAG,SAAS;UAAC;UAC5BC,SAAS,EAAE,MAAM;UACjBC,GAAG,EAAE;QACP,CAAC,CAAC;QACF,IAAIC,YAAY,GAAGC,MAAM,CAACC,UAAU,CAACN,WAAW,CAAC;;QAEjD;QACA,OAAOI,YAAY;MACrB;IAEA;MAAS;QACPT,IAAI,CAACC,MAAM,CAAC;QACZ;MACF;EAAC;EAGH,OAAOW,OAAO,CAACC,OAAO,EAAE;AAC1B,CAAC;AAED,eAAef,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}