{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../../../../geometry.js\";\nimport e from \"../../../../../core/Evented.js\";\nimport has from \"../../../../../core/has.js\";\nimport t from \"../../../../../core/Logger.js\";\nimport { isNone as s, applySome as r, mapOr as i } from \"../../../../../core/maybe.js\";\nimport { diff as o, hasDiff as a } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport { GeohashTree as h } from \"../../../../../geohash/GeohashTree.js\";\nimport { setGeohashBuf as n, setGeohashXY as d } from \"../../../../../geohash/geohashUtils.js\";\nimport { create as l } from \"../../../../../geometry/support/aaBoundingBox.js\";\nimport { earth as g } from \"../../../../../geometry/support/Ellipsoid.js\";\nimport { getInfo as p } from \"../../../../../geometry/support/spatialReferenceUtils.js\";\nimport { getBoundsOptimizedGeometry as c, convertToGeometry as f, convertFromPolygon as u } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeature as m } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport _ from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { checkProjectionSupport as y, project as I } from \"../../../../../layers/graphics/data/projectionSupport.js\";\nimport { createDisplayId as b } from \"../../../engine/webgl/DisplayId.js\";\nimport { featureAdapter as j } from \"../FeatureStore2D.js\";\nimport { Store2D as v } from \"../Store2D.js\";\nimport { FeatureSetReaderJSON as B } from \"./FeatureSetReaderJSON.js\";\nimport x from \"../../../../../geometry/SpatialReference.js\";\nimport S from \"../../../../../geometry/Polygon.js\";\nimport F from \"../../../../../geometry/Extent.js\";\nconst G = t.getLogger(\"esri.view.2d.layers.features.support.BinStore\"),\n  R = 12,\n  L = 64,\n  T = l(),\n  A = 5;\nfunction D(e) {\n  return 57.29577951308232 * e;\n}\nclass O extends v {\n  constructor(t, s, r, i) {\n    super(t, r), this.type = \"bin\", this.events = new e(), this.objectIdField = \"aggregateId\", this.featureAdapter = j, this._geohashLevel = A, this._geohashBuf = [], this._serviceInfo = i, this.geometryInfo = t.geometryInfo, this._spatialReference = s, this._projectionSupportCheck = y(s, x.WGS84), this._bitsets.geohash = r.getBitset(r.createBitset()), this._bitsets.inserted = r.getBitset(r.createBitset());\n  }\n  destroy() {\n    this._tree && this._tree.destroy();\n  }\n  get featureSpatialReference() {\n    return this._spatialReference;\n  }\n  get fields() {\n    return this._fields;\n  }\n  async updateSchema(e, t) {\n    const r = this._schema;\n    try {\n      await super.updateSchema(e, t), await this._projectionSupportCheck;\n    } catch (n) {}\n    this._fields = this._schema.params.fields;\n    const i = o(r, t);\n    t && (!s(i) || e.source || e.storage.filters) ? ((a(i, \"params.fields\") || a(i, \"params\") || !this._tree || e.source) && (this._tree && this._tree.destroy(), this._tree = new h(this._statisticFields, this._serviceInfo), this._tree.onRelease = e => e.displayId && this._storage.releaseDisplayId(e.displayId), this._geohashLevel = this._schema.params.fixedBinLevel, this._rebuildTree(), has(\"esri-2d-update-debug\") && G.info(\"Aggregate mesh needs update due to tree changing\")), has(\"esri-2d-update-debug\") && G.info(\"Aggregate mesh needs update due to tree changing\"), e.targets[t.name] = !0, e.mesh = !1) : r && (e.mesh = !0);\n  }\n  clear() {\n    this._rebuildTree();\n  }\n  sweepFeatures(e, t) {\n    this._bitsets.inserted.forEachSet(s => {\n      if (!e.has(s)) {\n        const e = t.lookupByDisplayIdUnsafe(s);\n        this._remove(e);\n      }\n    });\n  }\n  sweepAggregates(e, t, s) {}\n  onTileData(e, t, r, i) {\n    let o = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !0;\n    if (!this._schema || s(t.addOrUpdate)) return t;\n    this.events.emit(\"changed\");\n    const a = this._getTransforms(e, this._spatialReference);\n    {\n      const e = t.addOrUpdate.getCursor();\n      for (; e.next();) this._update(e, i);\n    }\n    if (t.status.mesh || !o) return t;\n    const h = new Array();\n    this._getBinsForTile(h, e, a, r), t.addOrUpdate = B.fromOptimizedFeatures(h, {\n      ...this._serviceInfo,\n      geometryType: \"esriGeometryPolygon\"\n    }), t.addOrUpdate.attachStorage(r), t.end = !0, t.isRepush || (t.clear = !0);\n    {\n      const s = t.addOrUpdate.getCursor();\n      for (; s.next();) {\n        const t = s.getDisplayId();\n        this._bitsets.computed.unset(t), this.setComputedAttributes(r, s, t, e.scale);\n      }\n    }\n    return t;\n  }\n  forEachBin(e) {\n    this._tree.forEach(e);\n  }\n  forEach(e) {\n    this._tree.forEach(t => {\n      if (t.depth !== this._geohashLevel) return;\n      const s = this._toFeatureJSON(t),\n        r = B.fromFeatures([s], {\n          objectIdField: this.objectIdField,\n          globalIdField: null,\n          geometryType: this.geometryInfo.geometryType,\n          fields: this.fields\n        }).getCursor();\n      r.next(), e(r);\n    });\n  }\n  forEachInBounds(e, t) {}\n  forEachBounds(e, t) {\n    const {\n      hasM: r,\n      hasZ: i\n    } = this.geometryInfo;\n    for (const o of e) {\n      const e = c(T, o.readGeometry(), i, r);\n      s(e) || t(e);\n    }\n  }\n  onTileUpdate(e) {}\n  getAggregate(e) {\n    const t = b(e, !0),\n      s = this._tree.findIf(e => e.displayId === t);\n    return r(s, e => this._toFeatureJSON(e));\n  }\n  getAggregates() {\n    return this._tree.findAllIf(e => e.depth === this._geohashLevel).map(this._toFeatureJSON.bind(this));\n  }\n  getDisplayId(e) {\n    const t = this._tree.findIf(t => t.id === e);\n    return r(t, e => e.displayId);\n  }\n  getFeatureDisplayIdsForAggregate(e) {\n    const t = this._tree.findIf(t => t.id === e);\n    return i(t, [], e => Array.from(e.displayIds));\n  }\n  getDisplayIdForReferenceId(e) {\n    const t = this._tree.findIf(t => 1 === t.displayIds.size && t.displayIds.has(e));\n    return r(t, e => e.displayId);\n  }\n  _toFeatureJSON(e) {\n    const t = this._spatialReference;\n    return {\n      displayId: e.displayId,\n      attributes: e.getAttributes(),\n      geometry: f(e.getGeometry(t), \"esriGeometryPolygon\", !1, !1),\n      centroid: null\n    };\n  }\n  _rebuildTree() {\n    this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();\n  }\n  _remove(e) {\n    const t = e.getDisplayId(),\n      s = e.getXHydrated(),\n      r = e.getYHydrated(),\n      i = this._geohashBuf[2 * t],\n      o = this._geohashBuf[2 * t + 1];\n    this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, i, o, this._geohashLevel));\n  }\n  _update(e, t) {\n    const s = e.getDisplayId(),\n      r = this._bitsets.inserted,\n      i = t.isVisible(s);\n    if (i === r.has(s)) return;\n    if (!i) return void this._remove(e);\n    const o = e.getXHydrated(),\n      a = e.getYHydrated();\n    if (!this._setGeohash(s, o, a)) return;\n    const h = this._geohashBuf[2 * s],\n      n = this._geohashBuf[2 * s + 1];\n    this._tree.insertCursor(e, s, o, a, h, n, this._geohashLevel), r.set(s);\n  }\n  _setGeohash(e, t, s) {\n    if (this._bitsets.geohash.has(e)) return !0;\n    const r = this._geohashBuf;\n    if (this._spatialReference.isWebMercator) {\n      const i = D(t / g.radius),\n        o = i - 360 * Math.floor((i + 180) / 360),\n        a = D(Math.PI / 2 - 2 * Math.atan(Math.exp(-s / g.radius)));\n      n(r, e, a, o, R);\n    } else {\n      const i = I({\n        x: t,\n        y: s\n      }, this._spatialReference, x.WGS84);\n      if (!i) return !1;\n      n(r, e, i.y, i.x, R);\n    }\n    return this._bitsets.geohash.set(e), !0;\n  }\n  _getBinsForTile(e, t, s, r) {\n    try {\n      const i = this._getGeohashBounds(t),\n        o = this._tree.getBins(i);\n      for (const t of o) {\n        t.displayId || (t.displayId = r.createDisplayId(!0));\n        let i = null;\n        const o = t.getGeometry(this._spatialReference, s.tile);\n        o || (i = t.getGeometryCentroid(this._spatialReference, s.tile));\n        const a = new m(o, t.getAttributes(), i);\n        a.objectId = t.id, a.displayId = t.displayId, e.push(a);\n      }\n    } catch (i) {\n      return void G.error(\"Unable to get bins for tile\", t.key.id);\n    }\n  }\n  _getGeohash(e, t, s) {\n    const r = {\n      geohashX: 0,\n      geohashY: 0\n    };\n    return d(r, t, e, s), r;\n  }\n  _getGeohashBounds(e) {\n    const t = this._getGeohashLevel(e.key.level),\n      s = [e.extent.xmin, e.extent.ymin, e.extent.xmax, e.extent.ymax],\n      r = S.fromExtent(F.fromBounds(s, this._spatialReference)),\n      i = I(r, this._spatialReference, x.WGS84, {\n        densificationStep: e.resolution * L\n      }),\n      o = u(new _(), i, !1, !1),\n      a = o.coords.filter((e, t) => !(t % 2)),\n      h = o.coords.filter((e, t) => t % 2),\n      n = Math.min(...a),\n      d = Math.min(...h),\n      l = Math.max(...a),\n      g = Math.max(...h),\n      p = this._getGeohash(n, d, t),\n      c = this._getGeohash(l, g, t);\n    return {\n      bounds: s,\n      geohashBounds: {\n        xLL: p.geohashX,\n        yLL: p.geohashY,\n        xTR: c.geohashX,\n        yTR: c.geohashY\n      },\n      level: t\n    };\n  }\n  _getGeohashLevel(e) {\n    return this._schema.params.fixedBinLevel;\n  }\n  _getTransforms(e, t) {\n    const s = {\n        originPosition: \"upperLeft\",\n        scale: [e.resolution, e.resolution],\n        translate: [e.bounds[0], e.bounds[3]]\n      },\n      r = p(t);\n    if (!r) return {\n      tile: s,\n      left: null,\n      right: null\n    };\n    const [i, o] = r.valid;\n    return {\n      tile: s,\n      left: {\n        ...s,\n        translate: [o, e.bounds[3]]\n      },\n      right: {\n        ...s,\n        translate: [i - o + e.bounds[0], e.bounds[3]]\n      }\n    };\n  }\n}\nexport { O as BinStore };","map":{"version":3,"names":["e","has","t","isNone","s","applySome","r","mapOr","i","diff","o","hasDiff","a","GeohashTree","h","setGeohashBuf","n","setGeohashXY","d","create","l","earth","g","getInfo","p","getBoundsOptimizedGeometry","c","convertToGeometry","f","convertFromPolygon","u","OptimizedFeature","m","_","checkProjectionSupport","y","project","I","createDisplayId","b","featureAdapter","j","Store2D","v","FeatureSetReaderJSON","B","x","S","F","G","getLogger","R","L","T","A","D","O","constructor","type","events","objectIdField","_geohashLevel","_geohashBuf","_serviceInfo","geometryInfo","_spatialReference","_projectionSupportCheck","WGS84","_bitsets","geohash","getBitset","createBitset","inserted","destroy","_tree","featureSpatialReference","fields","_fields","updateSchema","_schema","params","source","storage","filters","_statisticFields","onRelease","displayId","_storage","releaseDisplayId","fixedBinLevel","_rebuildTree","info","targets","name","mesh","clear","sweepFeatures","forEachSet","lookupByDisplayIdUnsafe","_remove","sweepAggregates","onTileData","arguments","length","undefined","addOrUpdate","emit","_getTransforms","getCursor","next","_update","status","Array","_getBinsForTile","fromOptimizedFeatures","geometryType","attachStorage","end","isRepush","getDisplayId","computed","unset","setComputedAttributes","scale","forEachBin","forEach","depth","_toFeatureJSON","fromFeatures","globalIdField","forEachInBounds","forEachBounds","hasM","hasZ","readGeometry","onTileUpdate","getAggregate","findIf","getAggregates","findAllIf","map","bind","id","getFeatureDisplayIdsForAggregate","from","displayIds","getDisplayIdForReferenceId","size","attributes","getAttributes","geometry","getGeometry","centroid","getXHydrated","getYHydrated","removeCursor","isVisible","_setGeohash","insertCursor","set","isWebMercator","radius","Math","floor","PI","atan","exp","_getGeohashBounds","getBins","tile","getGeometryCentroid","objectId","push","error","key","_getGeohash","geohashX","geohashY","_getGeohashLevel","level","extent","xmin","ymin","xmax","ymax","fromExtent","fromBounds","densificationStep","resolution","coords","filter","min","max","bounds","geohashBounds","xLL","yLL","xTR","yTR","originPosition","translate","left","right","valid","BinStore"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/2d/layers/features/support/BinStore.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../../../geometry.js\";import e from\"../../../../../core/Evented.js\";import has from\"../../../../../core/has.js\";import t from\"../../../../../core/Logger.js\";import{isNone as s,applySome as r,mapOr as i}from\"../../../../../core/maybe.js\";import{diff as o,hasDiff as a}from\"../../../../../core/accessorSupport/diffUtils.js\";import{GeohashTree as h}from\"../../../../../geohash/GeohashTree.js\";import{setGeohashBuf as n,setGeohashXY as d}from\"../../../../../geohash/geohashUtils.js\";import{create as l}from\"../../../../../geometry/support/aaBoundingBox.js\";import{earth as g}from\"../../../../../geometry/support/Ellipsoid.js\";import{getInfo as p}from\"../../../../../geometry/support/spatialReferenceUtils.js\";import{getBoundsOptimizedGeometry as c,convertToGeometry as f,convertFromPolygon as u}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{OptimizedFeature as m}from\"../../../../../layers/graphics/OptimizedFeature.js\";import _ from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{checkProjectionSupport as y,project as I}from\"../../../../../layers/graphics/data/projectionSupport.js\";import{createDisplayId as b}from\"../../../engine/webgl/DisplayId.js\";import{featureAdapter as j}from\"../FeatureStore2D.js\";import{Store2D as v}from\"../Store2D.js\";import{FeatureSetReaderJSON as B}from\"./FeatureSetReaderJSON.js\";import x from\"../../../../../geometry/SpatialReference.js\";import S from\"../../../../../geometry/Polygon.js\";import F from\"../../../../../geometry/Extent.js\";const G=t.getLogger(\"esri.view.2d.layers.features.support.BinStore\"),R=12,L=64,T=l(),A=5;function D(e){return 57.29577951308232*e}class O extends v{constructor(t,s,r,i){super(t,r),this.type=\"bin\",this.events=new e,this.objectIdField=\"aggregateId\",this.featureAdapter=j,this._geohashLevel=A,this._geohashBuf=[],this._serviceInfo=i,this.geometryInfo=t.geometryInfo,this._spatialReference=s,this._projectionSupportCheck=y(s,x.WGS84),this._bitsets.geohash=r.getBitset(r.createBitset()),this._bitsets.inserted=r.getBitset(r.createBitset())}destroy(){this._tree&&this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,t){const r=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch(n){}this._fields=this._schema.params.fields;const i=o(r,t);t&&(!s(i)||e.source||e.storage.filters)?((a(i,\"params.fields\")||a(i,\"params\")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new h(this._statisticFields,this._serviceInfo),this._tree.onRelease=e=>e.displayId&&this._storage.releaseDisplayId(e.displayId),this._geohashLevel=this._schema.params.fixedBinLevel,this._rebuildTree(),has(\"esri-2d-update-debug\")&&G.info(\"Aggregate mesh needs update due to tree changing\")),has(\"esri-2d-update-debug\")&&G.info(\"Aggregate mesh needs update due to tree changing\"),e.targets[t.name]=!0,e.mesh=!1):r&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepAggregates(e,t,s){}onTileData(e,t,r,i,o=!0){if(!this._schema||s(t.addOrUpdate))return t;this.events.emit(\"changed\");const a=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,i)}if(t.status.mesh||!o)return t;const h=new Array;this._getBinsForTile(h,e,a,r),t.addOrUpdate=B.fromOptimizedFeatures(h,{...this._serviceInfo,geometryType:\"esriGeometryPolygon\"}),t.addOrUpdate.attachStorage(r),t.end=!0,t.isRepush||(t.clear=!0);{const s=t.addOrUpdate.getCursor();for(;s.next();){const t=s.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(r,s,t,e.scale)}}return t}forEachBin(e){this._tree.forEach(e)}forEach(e){this._tree.forEach((t=>{if(t.depth!==this._geohashLevel)return;const s=this._toFeatureJSON(t),r=B.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)}))}forEachInBounds(e,t){}forEachBounds(e,t){const{hasM:r,hasZ:i}=this.geometryInfo;for(const o of e){const e=c(T,o.readGeometry(),i,r);s(e)||t(e)}}onTileUpdate(e){}getAggregate(e){const t=b(e,!0),s=this._tree.findIf((e=>e.displayId===t));return r(s,(e=>this._toFeatureJSON(e)))}getAggregates(){return this._tree.findAllIf((e=>e.depth===this._geohashLevel)).map(this._toFeatureJSON.bind(this))}getDisplayId(e){const t=this._tree.findIf((t=>t.id===e));return r(t,(e=>e.displayId))}getFeatureDisplayIdsForAggregate(e){const t=this._tree.findIf((t=>t.id===e));return i(t,[],(e=>Array.from(e.displayIds)))}getDisplayIdForReferenceId(e){const t=this._tree.findIf((t=>1===t.displayIds.size&&t.displayIds.has(e)));return r(t,(e=>e.displayId))}_toFeatureJSON(e){const t=this._spatialReference;return{displayId:e.displayId,attributes:e.getAttributes(),geometry:f(e.getGeometry(t),\"esriGeometryPolygon\",!1,!1),centroid:null}}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),i=this._geohashBuf[2*t],o=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,i,o,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,i=t.isVisible(s);if(i===r.has(s))return;if(!i)return void this._remove(e);const o=e.getXHydrated(),a=e.getYHydrated();if(!this._setGeohash(s,o,a))return;const h=this._geohashBuf[2*s],n=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,o,a,h,n,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const i=D(t/g.radius),o=i-360*Math.floor((i+180)/360),a=D(Math.PI/2-2*Math.atan(Math.exp(-s/g.radius)));n(r,e,a,o,R)}else{const i=I({x:t,y:s},this._spatialReference,x.WGS84);if(!i)return!1;n(r,e,i.y,i.x,R)}return this._bitsets.geohash.set(e),!0}_getBinsForTile(e,t,s,r){try{const i=this._getGeohashBounds(t),o=this._tree.getBins(i);for(const t of o){t.displayId||(t.displayId=r.createDisplayId(!0));let i=null;const o=t.getGeometry(this._spatialReference,s.tile);o||(i=t.getGeometryCentroid(this._spatialReference,s.tile));const a=new m(o,t.getAttributes(),i);a.objectId=t.id,a.displayId=t.displayId,e.push(a)}}catch(i){return void G.error(\"Unable to get bins for tile\",t.key.id)}}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return d(r,t,e,s),r}_getGeohashBounds(e){const t=this._getGeohashLevel(e.key.level),s=[e.extent.xmin,e.extent.ymin,e.extent.xmax,e.extent.ymax],r=S.fromExtent(F.fromBounds(s,this._spatialReference)),i=I(r,this._spatialReference,x.WGS84,{densificationStep:e.resolution*L}),o=u(new _,i,!1,!1),a=o.coords.filter(((e,t)=>!(t%2))),h=o.coords.filter(((e,t)=>t%2)),n=Math.min(...a),d=Math.min(...h),l=Math.max(...a),g=Math.max(...h),p=this._getGeohash(n,d,t),c=this._getGeohash(l,g,t);return{bounds:s,geohashBounds:{xLL:p.geohashX,yLL:p.geohashY,xTR:c.geohashX,yTR:c.geohashY},level:t}}_getGeohashLevel(e){return this._schema.params.fixedBinLevel}_getTransforms(e,t){const s={originPosition:\"upperLeft\",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=p(t);if(!r)return{tile:s,left:null,right:null};const[i,o]=r.valid;return{tile:s,left:{...s,translate:[o,e.bounds[3]]},right:{...s,translate:[i-o+e.bounds[0],e.bounds[3]]}}}}export{O as BinStore};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}