{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { getMetersPerUnitForSR as e } from \"../../../../core/unitUtils.js\";\nclass t {\n  constructor() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.spatialReference = e;\n  }\n  get spatialReference() {\n    return this._spatialReference;\n  }\n  set spatialReference(e) {\n    e !== this._spatialReference && (this._spatialReference = e, this._updateNormalizationFactors());\n  }\n  normalizeDistance(e) {\n    return e * this._metersPerDistanceUnit;\n  }\n  normalizeElevation(e) {\n    return e * this._metersPerElevationUnit;\n  }\n  normalizeArea(e) {\n    return e * this._squareMetersPerAreaUnit;\n  }\n  _updateNormalizationFactors() {\n    this._metersPerDistanceUnit = e(this._spatialReference, 1), this._metersPerElevationUnit = e(this._spatialReference, 1), this._squareMetersPerAreaUnit = this._metersPerDistanceUnit * this._metersPerDistanceUnit;\n  }\n}\nexport { t as UnitNormalizer };","map":{"version":3,"names":["getMetersPerUnitForSR","e","t","constructor","arguments","length","undefined","spatialReference","_spatialReference","_updateNormalizationFactors","normalizeDistance","_metersPerDistanceUnit","normalizeElevation","_metersPerElevationUnit","normalizeArea","_squareMetersPerAreaUnit","UnitNormalizer"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/analysis/support/UnitNormalizer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{getMetersPerUnitForSR as e}from\"../../../../core/unitUtils.js\";class t{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=e(this._spatialReference,1),this._metersPerElevationUnit=e(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{t as UnitNormalizer};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,qBAAqB,IAAIC,CAAC,QAAK,+BAA+B;AAAC,MAAMC,CAAC;EAACC,WAAWA,CAAA,EAAQ;IAAA,IAAPF,CAAC,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;IAAE,IAAI,CAACG,gBAAgB,GAACN,CAAC;EAAA;EAAC,IAAIM,gBAAgBA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACC,iBAAiB;EAAA;EAAC,IAAID,gBAAgBA,CAACN,CAAC,EAAC;IAACA,CAAC,KAAG,IAAI,CAACO,iBAAiB,KAAG,IAAI,CAACA,iBAAiB,GAACP,CAAC,EAAC,IAAI,CAACQ,2BAA2B,EAAE,CAAC;EAAA;EAACC,iBAAiBA,CAACT,CAAC,EAAC;IAAC,OAAOA,CAAC,GAAC,IAAI,CAACU,sBAAsB;EAAA;EAACC,kBAAkBA,CAACX,CAAC,EAAC;IAAC,OAAOA,CAAC,GAAC,IAAI,CAACY,uBAAuB;EAAA;EAACC,aAAaA,CAACb,CAAC,EAAC;IAAC,OAAOA,CAAC,GAAC,IAAI,CAACc,wBAAwB;EAAA;EAACN,2BAA2BA,CAAA,EAAE;IAAC,IAAI,CAACE,sBAAsB,GAACV,CAAC,CAAC,IAAI,CAACO,iBAAiB,EAAC,CAAC,CAAC,EAAC,IAAI,CAACK,uBAAuB,GAACZ,CAAC,CAAC,IAAI,CAACO,iBAAiB,EAAC,CAAC,CAAC,EAAC,IAAI,CAACO,wBAAwB,GAAC,IAAI,CAACJ,sBAAsB,GAAC,IAAI,CAACA,sBAAsB;EAAA;AAAC;AAAC,SAAOT,CAAC,IAAIc,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}