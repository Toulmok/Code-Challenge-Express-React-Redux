{"ast":null,"code":"import _classCallCheck from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _possibleConstructorReturn from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";import _inherits from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import{connect}from'react-redux';import ManagerWithCustomRefresh from'./sessionManager';import esriId from\"@arcgis/core/identity/IdentityManager.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Session=/*#__PURE__*/function(_React$Component){_inherits(Session,_React$Component);var _super=_createSuper(Session);function Session(){var _this;_classCallCheck(this,Session);// This is where the server inserts serialized session information\nvar sessionOptions=JSON.parse(\"SESSION_JSON\");// Create a new session manually. In the future this will be simplified to `ManagerWithCustomRefresh.deserialize()`\nvar session=new ManagerWithCustomRefresh({clientId:sessionOptions.clientId,username:sessionOptions.username,token:sessionOptions.token,tokenExpires:sessionOptions.tokenExpires?new Date(sessionOptions.tokenExpires):undefined,portal:sessionOptions.portal,ssl:sessionOptions.ssl,tokenDuration:sessionOptions.tokenDuration,redirectUri:sessionOptions.redirectUri});return _possibleConstructorReturn(_this);}// Use `session.toCredential()` to conver the ArcGIS REST auth into a format suitable to pass into the JS API `registerToken` function. This sends the auth from ArcGIS REST JS to the JS API.\n_createClass(Session,[{key:\"syncAuthToJsApi\",value:function syncAuthToJsApi(){esriId.registerToken(this.session.toCredential());}// Update the display of the current auth manager by converting it to JSON.\n},{key:\"updateDisplay\",value:function updateDisplay(){document.getElementById(\"sessionInfo\").textContent=JSON.stringify(this.session.toJSON(),null,2);}},{key:\"render\",value:function render(){var _this2=this;console.log(\"component: session\");updateDisplay();syncAuthToJsApi();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{class:\"grid-container\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"grid-x grid-margin-x margin-bottom-2 margin-top-2\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"cell large-12\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"The App!\"}),/*#__PURE__*/_jsx(\"pre\",{id:\"sessionInfo\",class:\"bordered padding-2\",children:JSON.stringify(this.session.toJSON(),null,2)})]})}),/*#__PURE__*/_jsx(\"div\",{class:\"grid-x grid-margin-x\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"cell\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"expireToken\",type:\"button\",class:\"button\",onClick:function onClick(e){_this2.session.updateToken(_this2.session.token,new Date(Date.now()));_this2.session.signOut().then(function(){_this2.updateDisplay();});e.preventDefault();}// Bind a button to fake an early token expiration \n,children:\"Expire Token\"}),/*#__PURE__*/_jsx(\"button\",{id:\"refreshSession\",type:\"button\",class:\"button\",onClick:function onClick(e){_this2.session.refreshCredentials();e.preventDefault();}// Bind a button to test refreshing credentials from the server\n,children:\"Refresh Credentials\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/signOut\",class:\"button\",children:\"Sign Out\"})]})})]})});}}]);return Session;}(React.Component);var mapStateToProps=function mapStateToProps(){return{};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{};};export default connect(mapStateToProps,mapDispatchToProps)(Session);","map":{"version":3,"names":["React","connect","ManagerWithCustomRefresh","esriId","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Session","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","sessionOptions","JSON","parse","session","clientId","username","token","tokenExpires","Date","undefined","portal","ssl","tokenDuration","redirectUri","_possibleConstructorReturn","_createClass","key","value","syncAuthToJsApi","registerToken","toCredential","updateDisplay","document","getElementById","textContent","stringify","toJSON","render","_this2","console","log","children","class","id","type","onClick","e","updateToken","now","signOut","then","preventDefault","refreshCredentials","href","Component","mapStateToProps","mapDispatchToProps","dispatch"],"sources":["C:/code-challenge-react/client/src/components/session/session.jsx"],"sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ManagerWithCustomRefresh from './sessionManager'\r\nimport esriId from \"@arcgis/core/identity/IdentityManager.js\"\r\n\r\nexport class Session extends React.Component {\r\n  constructor() {\r\n    // This is where the server inserts serialized session information\r\n    const sessionOptions = JSON.parse(`SESSION_JSON`)\r\n    // Create a new session manually. In the future this will be simplified to `ManagerWithCustomRefresh.deserialize()`\r\n    const session = new ManagerWithCustomRefresh({\r\n      clientId: sessionOptions.clientId,\r\n      username: sessionOptions.username,\r\n      token: sessionOptions.token,\r\n      tokenExpires: sessionOptions.tokenExpires\r\n        ? new Date(sessionOptions.tokenExpires)\r\n        : undefined,\r\n      portal: sessionOptions.portal,\r\n      ssl: sessionOptions.ssl,\r\n      tokenDuration: sessionOptions.tokenDuration,\r\n      redirectUri: sessionOptions.redirectUri\r\n    })\r\n  }\r\n  // Use `session.toCredential()` to conver the ArcGIS REST auth into a format suitable to pass into the JS API `registerToken` function. This sends the auth from ArcGIS REST JS to the JS API.\r\n  syncAuthToJsApi() { esriId.registerToken(this.session.toCredential()) }\r\n  // Update the display of the current auth manager by converting it to JSON.\r\n  updateDisplay() { document.getElementById(\"sessionInfo\").textContent = JSON.stringify(this.session.toJSON(), null, 2) } \r\n  \r\n  render() { console.log(\"component: session\")\r\n    updateDisplay()\r\n    syncAuthToJsApi()\r\n    return (\r\n      <>\r\n        <div class=\"grid-container\">\r\n          <div class=\"grid-x grid-margin-x margin-bottom-2 margin-top-2\">\r\n            <div class=\"cell large-12\">\r\n              <h1>The App!</h1>\r\n              <pre id=\"sessionInfo\" class=\"bordered padding-2\">\r\n                { JSON.stringify(this.session.toJSON(), null, 2) }\r\n              </pre>\r\n            </div>\r\n          </div>\r\n          <div class=\"grid-x grid-margin-x\">\r\n            <div class=\"cell\">\r\n              <button id=\"expireToken\" type=\"button\" class=\"button\" onClick={\r\n                (e) => { this.session.updateToken(\r\n                  this.session.token, new Date(Date.now()))\r\n                  this.session.signOut()\r\n                  .then(()=>{ \r\n                    this.updateDisplay() })\r\n                    e.preventDefault() \r\n                  } // Bind a button to fake an early token expiration \r\n              }>Expire Token</button>\r\n              <button id=\"refreshSession\" type=\"button\" class=\"button\" onClick={\r\n                (e) => { \r\n                  this.session.refreshCredentials()\r\n                  e.preventDefault() \r\n                }  // Bind a button to test refreshing credentials from the server\r\n              }>Refresh Credentials</button>\r\n              <a href=\"/signOut\" class=\"button\">Sign Out</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Session)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}