{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../core/Accessor.js\";\nimport { someMap as r } from \"../../../../core/MapUtils.js\";\nimport { isSome as o, unwrapOr as s } from \"../../../../core/maybe.js\";\nimport { NullUID as d } from \"../../../../core/uid.js\";\nimport { property as i } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../core/arrayUtils.js\";\nimport { subclass as c } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { DirtyOperation as a, DirtyState as n } from \"./ModelDirtyTypes.js\";\nimport { assert as m } from \"./Util.js\";\nclass y {\n  constructor(e, t, r) {\n    this.operation = e, this.geometry = t, this.states = r;\n  }\n}\nlet h = class extends t {\n  constructor(e) {\n    super(e), this._residentGeomRecords = new Map(), this._dirtyGeomRecords = new Map(), this.dirty = !1;\n  }\n  commitLayer(e, t) {\n    const r = this._dirtyGeomRecords.get(e);\n    r && (r.forEach((r, s) => {\n      const d = this._ensureGeomRecord(e, s);\n      r.forEach((_ref, c) => {\n        let {\n          geometry: e,\n          operation: r,\n          states: i\n        } = _ref;\n        let y = !1;\n        if (r === a.UPDATE) {\n          const r = d.get(c);\n          if (r) {\n            if (i & n.TRANSFORMATION) {\n              const t = this.model.getObject(s);\n              this.model.updateRenderGeometryTransformation(t, e, r) && (y = !0);\n            }\n            y || t.updates.push({\n              renderGeometry: r,\n              updateType: i\n            });\n          } else m(!1, \"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid update\");\n        }\n        if (r === a.REMOVE || y) {\n          const e = d.get(c);\n          e ? (t.removes.push(e), d.delete(c)) : r === a.REMOVE && m(!1, \"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid remove\");\n        }\n        if (r === a.ADD || y) {\n          const r = this.model.getObject(s);\n          if (o(r)) {\n            const o = this.model.getRenderGeometry(r, e);\n            t.adds.push(o), d.set(c, o);\n          }\n        }\n      }), 0 === d.size && this._residentGeomRecords.get(e).delete(s);\n    }), 0 === this._residentGeomRecords.get(e).size && this._residentGeomRecords.delete(e), this._dirtyGeomRecords.delete(e), this.dirty = this._hasDirtyGeometryRecords);\n  }\n  getResidentRenderGeometries(e, t) {\n    const r = this._residentGeomRecords.get(e);\n    r && r.forEach(e => e.forEach(e => t.push(e)));\n  }\n  _objectStateChanged(e, t) {\n    for (const r of t.geometries) this._updateOrCreateDirtyRecord(t, r, null, a.UPDATE, e);\n  }\n  visibilityChanged(e) {\n    this._objectStateChanged(n.VISIBILITY, e);\n  }\n  highlightChanged(e) {\n    this._objectStateChanged(n.HIGHLIGHT, e);\n  }\n  occlusionChanged(e) {\n    this._objectStateChanged(n.OCCLUDEE, e);\n  }\n  objectGeometryUpdated(e) {\n    this._updateOrCreateDirtyRecord(e.object, e.geometry, null, a.UPDATE, n.GEOMETRY);\n  }\n  layerAdded(e) {\n    e.objects.forAll(t => this._layerObjectAdded(e, t));\n  }\n  layerRemoved(e) {\n    e.objects.forAll(t => this._layerObjectRemoved(e, t));\n  }\n  layerObjectAdded(e) {\n    this._layerObjectAdded(e.layer, e.object);\n  }\n  _layerObjectAdded(e, t) {\n    const r = e.id;\n    for (const o of t.geometries) this._objectGeometryAdded(t, o, r);\n  }\n  layerObjectRemoved(e) {\n    this._layerObjectRemoved(e.layer, e.object);\n  }\n  layerObjectsAdded(e) {\n    for (const t of e.objects) this._layerObjectAdded(e.layer, t);\n  }\n  layerObjectsRemoved(e) {\n    for (const t of e.objects) this._layerObjectRemoved(e.layer, t);\n  }\n  _layerObjectRemoved(e, t) {\n    const r = e.id;\n    for (const o of t.geometries) this._objectGeometryRemoved(t, o, r);\n  }\n  shaderTransformationChanged(e) {\n    const t = this._residentGeomRecords.get(e.id);\n    t && t.forEach((e, t) => {\n      const r = this.model.getObject(t);\n      r && r.hasVolativeTransformation() && e.forEach(e => e.shaderTransformationChanged());\n    });\n  }\n  objectTransformation(e) {\n    const t = this._getParentLayerId(e),\n      r = e.id;\n    this._ensureGeomRecord(t, r).forEach(r => {\n      this._updateOrCreateDirtyRecord(e, r.geometry, t, a.UPDATE, n.TRANSFORMATION);\n    });\n  }\n  objectGeometryAdded(e) {\n    this._objectGeometryAdded(e.object, e.geometry);\n  }\n  _objectGeometryAdded(e, t) {\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this._updateOrCreateDirtyRecord(e, t, r, a.ADD);\n  }\n  objectGeometryRemoved(e) {\n    this._objectGeometryRemoved(e.object, e.geometry);\n  }\n  _objectGeometryRemoved(e, t) {\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this._updateOrCreateDirtyRecord(e, t, r, a.REMOVE);\n  }\n  _updateOrCreateDirtyRecord(e, t, r, o) {\n    let d = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : n.NONE;\n    r = s(r, this._getParentLayerId(e));\n    const i = e.id,\n      c = t.id,\n      h = this._ensureDirtyRecord(r, i),\n      l = h.get(c);\n    if (l) {\n      const e = l.operation;\n      e === a.REMOVE && o === a.ADD && l.states !== n.NONE ? l.operation = a.UPDATE : e === a.REMOVE && o === a.ADD || e === a.ADD && o === a.REMOVE ? h.delete(c) : e !== a.UPDATE || o !== a.REMOVE && o !== a.UPDATE ? (m((e === a.REMOVE || e === a.ADD) && o === a.UPDATE, \"ModelDirtySet.objectGeometryAdded: inconsistent state\"), l.states |= d) : (l.operation = o, l.states |= d);\n    } else h.set(c, new y(o, t, d));\n    this.dirty = this._hasDirtyGeometryRecords;\n  }\n  _ensureGeomRecord(e, t) {\n    let r = this._residentGeomRecords.get(e);\n    r || (r = new Map(), this._residentGeomRecords.set(e, r));\n    let o = r.get(t);\n    return o || (o = new Map(), r.set(t, o)), o;\n  }\n  get _hasDirtyGeometryRecords() {\n    return r(this._dirtyGeomRecords, e => r(e, e => e && e.size > 0));\n  }\n  _ensureDirtyRecord(e, t) {\n    let r = this._dirtyGeomRecords.get(e);\n    r || (r = new Map(), this._dirtyGeomRecords.set(e, r));\n    let o = r.get(t);\n    return o || (o = new Map(), r.set(t, o)), o;\n  }\n  _getParentLayerId(e) {\n    return o(e.parentLayer) ? e.parentLayer.id : d;\n  }\n  formatDebugInfo() {\n    const e = [\"ADD\", \"UPD\", void 0, \"REM\"];\n    let t = \"\";\n    return this._dirtyGeomRecords.forEach((r, o) => {\n      r.forEach((r, s) => {\n        t.length > 0 && (t += \"\\n\"), t += o + \".\" + s;\n        const d = [];\n        r.forEach(e => {\n          const t = e.operation;\n          d[t] || (d[t] = []), d[t].push(e.geometry.id);\n        });\n        for (let o = 0; o < d.length; o++) if (d[o]) {\n          t += \" \" + e[o - 1] + \": \";\n          for (let e = 0; e < d[o].length; e++) t += d[o][e] + \", \";\n        }\n      });\n    }), t;\n  }\n  get test() {\n    const e = this;\n    return {\n      get residentLayerCount() {\n        return e._residentGeomRecords.size;\n      },\n      get residentObjectCount() {\n        return Array.from(e._residentGeomRecords.values()).reduce((e, t) => e + t.size, 0);\n      },\n      commit: t => e._dirtyGeomRecords.forEach((r, o) => e.commitLayer(o, t))\n    };\n  }\n};\ne([i({\n  constructOnly: !0\n})], h.prototype, \"model\", void 0), e([i()], h.prototype, \"dirty\", void 0), h = e([c(\"esri.views.3d.webgl-engine.lib.ModelDirtySet\")], h);\nconst l = h;\nexport { l as default };","map":{"version":3,"names":["_","e","t","someMap","r","isSome","o","unwrapOr","s","NullUID","d","property","i","subclass","c","DirtyOperation","a","DirtyState","n","assert","m","y","constructor","operation","geometry","states","h","_residentGeomRecords","Map","_dirtyGeomRecords","dirty","commitLayer","get","forEach","_ensureGeomRecord","_ref","UPDATE","TRANSFORMATION","model","getObject","updateRenderGeometryTransformation","updates","push","renderGeometry","updateType","REMOVE","removes","delete","ADD","getRenderGeometry","adds","set","size","_hasDirtyGeometryRecords","getResidentRenderGeometries","_objectStateChanged","geometries","_updateOrCreateDirtyRecord","visibilityChanged","VISIBILITY","highlightChanged","HIGHLIGHT","occlusionChanged","OCCLUDEE","objectGeometryUpdated","object","GEOMETRY","layerAdded","objects","forAll","_layerObjectAdded","layerRemoved","_layerObjectRemoved","layerObjectAdded","layer","id","_objectGeometryAdded","layerObjectRemoved","layerObjectsAdded","layerObjectsRemoved","_objectGeometryRemoved","shaderTransformationChanged","hasVolativeTransformation","objectTransformation","_getParentLayerId","objectGeometryAdded","arguments","length","undefined","objectGeometryRemoved","NONE","_ensureDirtyRecord","l","parentLayer","formatDebugInfo","test","residentLayerCount","residentObjectCount","Array","from","values","reduce","commit","constructOnly","prototype","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/lib/ModelDirtySet.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../chunks/tslib.es6.js\";import t from\"../../../../core/Accessor.js\";import{someMap as r}from\"../../../../core/MapUtils.js\";import{isSome as o,unwrapOr as s}from\"../../../../core/maybe.js\";import{NullUID as d}from\"../../../../core/uid.js\";import{property as i}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/accessorSupport/ensureType.js\";import\"../../../../core/arrayUtils.js\";import{subclass as c}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{DirtyOperation as a,DirtyState as n}from\"./ModelDirtyTypes.js\";import{assert as m}from\"./Util.js\";class y{constructor(e,t,r){this.operation=e,this.geometry=t,this.states=r}}let h=class extends t{constructor(e){super(e),this._residentGeomRecords=new Map,this._dirtyGeomRecords=new Map,this.dirty=!1}commitLayer(e,t){const r=this._dirtyGeomRecords.get(e);r&&(r.forEach(((r,s)=>{const d=this._ensureGeomRecord(e,s);r.forEach((({geometry:e,operation:r,states:i},c)=>{let y=!1;if(r===a.UPDATE){const r=d.get(c);if(r){if(i&n.TRANSFORMATION){const t=this.model.getObject(s);this.model.updateRenderGeometryTransformation(t,e,r)&&(y=!0)}y||t.updates.push({renderGeometry:r,updateType:i})}else m(!1,\"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid update\")}if(r===a.REMOVE||y){const e=d.get(c);e?(t.removes.push(e),d.delete(c)):r===a.REMOVE&&m(!1,\"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid remove\")}if(r===a.ADD||y){const r=this.model.getObject(s);if(o(r)){const o=this.model.getRenderGeometry(r,e);t.adds.push(o),d.set(c,o)}}})),0===d.size&&this._residentGeomRecords.get(e).delete(s)})),0===this._residentGeomRecords.get(e).size&&this._residentGeomRecords.delete(e),this._dirtyGeomRecords.delete(e),this.dirty=this._hasDirtyGeometryRecords)}getResidentRenderGeometries(e,t){const r=this._residentGeomRecords.get(e);r&&r.forEach((e=>e.forEach((e=>t.push(e)))))}_objectStateChanged(e,t){for(const r of t.geometries)this._updateOrCreateDirtyRecord(t,r,null,a.UPDATE,e)}visibilityChanged(e){this._objectStateChanged(n.VISIBILITY,e)}highlightChanged(e){this._objectStateChanged(n.HIGHLIGHT,e)}occlusionChanged(e){this._objectStateChanged(n.OCCLUDEE,e)}objectGeometryUpdated(e){this._updateOrCreateDirtyRecord(e.object,e.geometry,null,a.UPDATE,n.GEOMETRY)}layerAdded(e){e.objects.forAll((t=>this._layerObjectAdded(e,t)))}layerRemoved(e){e.objects.forAll((t=>this._layerObjectRemoved(e,t)))}layerObjectAdded(e){this._layerObjectAdded(e.layer,e.object)}_layerObjectAdded(e,t){const r=e.id;for(const o of t.geometries)this._objectGeometryAdded(t,o,r)}layerObjectRemoved(e){this._layerObjectRemoved(e.layer,e.object)}layerObjectsAdded(e){for(const t of e.objects)this._layerObjectAdded(e.layer,t)}layerObjectsRemoved(e){for(const t of e.objects)this._layerObjectRemoved(e.layer,t)}_layerObjectRemoved(e,t){const r=e.id;for(const o of t.geometries)this._objectGeometryRemoved(t,o,r)}shaderTransformationChanged(e){const t=this._residentGeomRecords.get(e.id);t&&t.forEach(((e,t)=>{const r=this.model.getObject(t);r&&r.hasVolativeTransformation()&&e.forEach((e=>e.shaderTransformationChanged()))}))}objectTransformation(e){const t=this._getParentLayerId(e),r=e.id;this._ensureGeomRecord(t,r).forEach((r=>{this._updateOrCreateDirtyRecord(e,r.geometry,t,a.UPDATE,n.TRANSFORMATION)}))}objectGeometryAdded(e){this._objectGeometryAdded(e.object,e.geometry)}_objectGeometryAdded(e,t,r=null){this._updateOrCreateDirtyRecord(e,t,r,a.ADD)}objectGeometryRemoved(e){this._objectGeometryRemoved(e.object,e.geometry)}_objectGeometryRemoved(e,t,r=null){this._updateOrCreateDirtyRecord(e,t,r,a.REMOVE)}_updateOrCreateDirtyRecord(e,t,r,o,d=n.NONE){r=s(r,this._getParentLayerId(e));const i=e.id,c=t.id,h=this._ensureDirtyRecord(r,i),l=h.get(c);if(l){const e=l.operation;e===a.REMOVE&&o===a.ADD&&l.states!==n.NONE?l.operation=a.UPDATE:e===a.REMOVE&&o===a.ADD||e===a.ADD&&o===a.REMOVE?h.delete(c):e!==a.UPDATE||o!==a.REMOVE&&o!==a.UPDATE?(m((e===a.REMOVE||e===a.ADD)&&o===a.UPDATE,\"ModelDirtySet.objectGeometryAdded: inconsistent state\"),l.states|=d):(l.operation=o,l.states|=d)}else h.set(c,new y(o,t,d));this.dirty=this._hasDirtyGeometryRecords}_ensureGeomRecord(e,t){let r=this._residentGeomRecords.get(e);r||(r=new Map,this._residentGeomRecords.set(e,r));let o=r.get(t);return o||(o=new Map,r.set(t,o)),o}get _hasDirtyGeometryRecords(){return r(this._dirtyGeomRecords,(e=>r(e,(e=>e&&e.size>0))))}_ensureDirtyRecord(e,t){let r=this._dirtyGeomRecords.get(e);r||(r=new Map,this._dirtyGeomRecords.set(e,r));let o=r.get(t);return o||(o=new Map,r.set(t,o)),o}_getParentLayerId(e){return o(e.parentLayer)?e.parentLayer.id:d}formatDebugInfo(){const e=[\"ADD\",\"UPD\",void 0,\"REM\"];let t=\"\";return this._dirtyGeomRecords.forEach(((r,o)=>{r.forEach(((r,s)=>{t.length>0&&(t+=\"\\n\"),t+=o+\".\"+s;const d=[];r.forEach((e=>{const t=e.operation;d[t]||(d[t]=[]),d[t].push(e.geometry.id)}));for(let o=0;o<d.length;o++)if(d[o]){t+=\" \"+e[o-1]+\": \";for(let e=0;e<d[o].length;e++)t+=d[o][e]+\", \"}}))})),t}get test(){const e=this;return{get residentLayerCount(){return e._residentGeomRecords.size},get residentObjectCount(){return Array.from(e._residentGeomRecords.values()).reduce(((e,t)=>e+t.size),0)},commit:t=>e._dirtyGeomRecords.forEach(((r,o)=>e.commitLayer(o,t)))}}};e([i({constructOnly:!0})],h.prototype,\"model\",void 0),e([i()],h.prototype,\"dirty\",void 0),h=e([c(\"esri.views.3d.webgl-engine.lib.ModelDirtySet\")],h);const l=h;export{l as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}