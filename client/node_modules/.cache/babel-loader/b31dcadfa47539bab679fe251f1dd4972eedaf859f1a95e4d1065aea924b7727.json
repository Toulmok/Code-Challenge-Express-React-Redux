{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { SqlError as e, SqlErrorCodes as t } from \"./errorsupport.js\";\nimport { FeatureServiceDatabaseType as r } from \"./shared.js\";\nimport { toWhereClauseFromTree as n } from \"./sqlUtils.js\";\nimport { WhereClause as i } from \"../../../core/sql/WhereClause.js\";\nfunction s(s) {\n  if (\"function\" === s.parseTree.type) {\n    if (0 === s.parseTree.args.value.length) return {\n      name: s.parseTree.name,\n      expr: null\n    };\n    if (s.parseTree.args.value.length > 1) throw new e(t.MissingStatisticParameters);\n    const a = i.create(n(s.parseTree.args.value[0], r.Standardised, s.parameters), s.fieldsIndex);\n    return {\n      name: s.parseTree.name,\n      expr: a\n    };\n  }\n  return null;\n}\nclass a {\n  constructor() {\n    this.field = \"\", this.tofieldname = \"\", this.typeofstat = \"MIN\", this.workingexpr = null;\n  }\n  clone() {\n    const e = new a();\n    return e.field = this.field, e.tofieldname = this.tofieldname, e.typeofstat = this.typeofstat, e.workingexpr = this.workingexpr, e;\n  }\n  static parseStatField(r, n, o) {\n    const l = new a();\n    l.field = r;\n    const p = i.create(n, o),\n      f = s(p);\n    if (null === f) throw new e(t.UnsupportedSqlFunction, {\n      function: \"\"\n    });\n    const u = f.name.toUpperCase().trim();\n    if (\"MIN\" === u) {\n      if (l.typeofstat = \"MIN\", l.workingexpr = f.expr, null === p) throw new e(t.InvalidFunctionParameters, {\n        function: \"min\"\n      });\n    } else if (\"MAX\" === u) {\n      if (l.typeofstat = \"MAX\", l.workingexpr = f.expr, null === p) throw new e(t.InvalidFunctionParameters, {\n        function: \"max\"\n      });\n    } else if (\"COUNT\" === u) l.typeofstat = \"COUNT\", l.workingexpr = f.expr;else if (\"STDEV\" === u) {\n      if (l.typeofstat = \"STDDEV\", l.workingexpr = f.expr, null === p) throw new e(t.InvalidFunctionParameters, {\n        function: \"stdev\"\n      });\n    } else if (\"SUM\" === u) {\n      if (l.typeofstat = \"SUM\", l.workingexpr = f.expr, null === p) throw new e(t.InvalidFunctionParameters, {\n        function: \"sum\"\n      });\n    } else if (\"MEAN\" === u) {\n      if (l.typeofstat = \"AVG\", l.workingexpr = f.expr, null === p) throw new e(t.InvalidFunctionParameters, {\n        function: u\n      });\n    } else if (\"AVG\" === u) {\n      if (l.typeofstat = \"AVG\", l.workingexpr = f.expr, null === p) throw new e(t.InvalidFunctionParameters, {\n        function: \"avg\"\n      });\n    } else {\n      if (\"VAR\" !== u) throw new e(t.UnsupportedSqlFunction, {\n        function: u\n      });\n      if (l.typeofstat = \"VAR\", l.workingexpr = f.expr, null === p) throw new e(t.InvalidFunctionParameters, {\n        function: \"var\"\n      });\n    }\n    return l;\n  }\n  toStatisticsName() {\n    switch (this.typeofstat.toUpperCase()) {\n      case \"MIN\":\n        return \"min\";\n      case \"MAX\":\n        return \"max\";\n      case \"SUM\":\n        return \"sum\";\n      case \"COUNT\":\n      default:\n        return \"count\";\n      case \"VAR\":\n        return \"var\";\n      case \"STDDEV\":\n        return \"stddev\";\n      case \"AVG\":\n        return \"avg\";\n    }\n  }\n}\nexport { a as default };","map":{"version":3,"names":["SqlError","e","SqlErrorCodes","t","FeatureServiceDatabaseType","r","toWhereClauseFromTree","n","WhereClause","i","s","parseTree","type","args","value","length","name","expr","MissingStatisticParameters","a","create","Standardised","parameters","fieldsIndex","constructor","field","tofieldname","typeofstat","workingexpr","clone","parseStatField","o","l","p","f","UnsupportedSqlFunction","function","u","toUpperCase","trim","InvalidFunctionParameters","toStatisticsName","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/arcade/featureset/support/StatsField.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{SqlError as e,SqlErrorCodes as t}from\"./errorsupport.js\";import{FeatureServiceDatabaseType as r}from\"./shared.js\";import{toWhereClauseFromTree as n}from\"./sqlUtils.js\";import{WhereClause as i}from\"../../../core/sql/WhereClause.js\";function s(s){if(\"function\"===s.parseTree.type){if(0===s.parseTree.args.value.length)return{name:s.parseTree.name,expr:null};if(s.parseTree.args.value.length>1)throw new e(t.MissingStatisticParameters);const a=i.create(n(s.parseTree.args.value[0],r.Standardised,s.parameters),s.fieldsIndex);return{name:s.parseTree.name,expr:a}}return null}class a{constructor(){this.field=\"\",this.tofieldname=\"\",this.typeofstat=\"MIN\",this.workingexpr=null}clone(){const e=new a;return e.field=this.field,e.tofieldname=this.tofieldname,e.typeofstat=this.typeofstat,e.workingexpr=this.workingexpr,e}static parseStatField(r,n,o){const l=new a;l.field=r;const p=i.create(n,o),f=s(p);if(null===f)throw new e(t.UnsupportedSqlFunction,{function:\"\"});const u=f.name.toUpperCase().trim();if(\"MIN\"===u){if(l.typeofstat=\"MIN\",l.workingexpr=f.expr,null===p)throw new e(t.InvalidFunctionParameters,{function:\"min\"})}else if(\"MAX\"===u){if(l.typeofstat=\"MAX\",l.workingexpr=f.expr,null===p)throw new e(t.InvalidFunctionParameters,{function:\"max\"})}else if(\"COUNT\"===u)l.typeofstat=\"COUNT\",l.workingexpr=f.expr;else if(\"STDEV\"===u){if(l.typeofstat=\"STDDEV\",l.workingexpr=f.expr,null===p)throw new e(t.InvalidFunctionParameters,{function:\"stdev\"})}else if(\"SUM\"===u){if(l.typeofstat=\"SUM\",l.workingexpr=f.expr,null===p)throw new e(t.InvalidFunctionParameters,{function:\"sum\"})}else if(\"MEAN\"===u){if(l.typeofstat=\"AVG\",l.workingexpr=f.expr,null===p)throw new e(t.InvalidFunctionParameters,{function:u})}else if(\"AVG\"===u){if(l.typeofstat=\"AVG\",l.workingexpr=f.expr,null===p)throw new e(t.InvalidFunctionParameters,{function:\"avg\"})}else{if(\"VAR\"!==u)throw new e(t.UnsupportedSqlFunction,{function:u});if(l.typeofstat=\"VAR\",l.workingexpr=f.expr,null===p)throw new e(t.InvalidFunctionParameters,{function:\"var\"})}return l}toStatisticsName(){switch(this.typeofstat.toUpperCase()){case\"MIN\":return\"min\";case\"MAX\":return\"max\";case\"SUM\":return\"sum\";case\"COUNT\":default:return\"count\";case\"VAR\":return\"var\";case\"STDDEV\":return\"stddev\";case\"AVG\":return\"avg\"}}}export{a as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}