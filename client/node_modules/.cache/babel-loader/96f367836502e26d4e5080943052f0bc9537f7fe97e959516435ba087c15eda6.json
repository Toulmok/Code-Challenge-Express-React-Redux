{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\query-table-tabulator.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ReactTabulator, reactFormatter } from 'react-tabulator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimpleButton(props) {\n  const rowData = props.cell._cell.row.data;\n  const cellValue = props.cell._cell.value || \"Edit | Show\";\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => alert(rowData.name),\n    children: cellValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = SimpleButton;\nvar data = [{\n  id: 1,\n  title: \"Oli Bob\",\n  created: \"12\",\n  tags: \"red\"\n}];\nexport class QueryTableTabulator extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      selectedTitle: \"\"\n    };\n    this.ref = null;\n    this.columns = [{\n      title: \"Title\",\n      field: \"title\"\n    }, {\n      title: \"Created\",\n      field: \"created\"\n    }, {\n      title: \"Tags\",\n      field: \"tags\"\n    }, {\n      title: \"Custom\",\n      field: \"custom\",\n      hozAlign: \"center\",\n      editor: \"input\",\n      formatter: reactFormatter( /*#__PURE__*/_jsxDEV(SimpleButton, {\n        onSelect: title => {\n          this.setState({\n            selectedTitle: title\n          });\n          alert(title);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }];\n    this.rowClick = (e, row) => {\n      // console.log(\"ref table: \", this.ref.current); // this is the Tabulator table instance\n      // console.log(\"rowClick id: ${row.getData().id}\", row, e);\n      this.setState({\n        selectedTitle: row.getData().title\n      });\n    };\n    this.setData = () => {\n      this.setState({\n        data\n      });\n    };\n    this.clearData = () => {\n      this.setState({\n        data: []\n      });\n    };\n  }\n  render() {\n    console.log(\"query-tabulator\");\n    const options = {\n      height: 150,\n      movableRows: true,\n      movableColumns: true,\n      rowClick: (e, row) => {\n        this.setState({\n          selectedName: row.getData().title\n        });\n        console.log(\"clicked\");\n      },\n      selectableCheck: function (row) {\n        //row - row component\n        return row.getData().color !== \"yellow\"; //allow selection of rows where the age is greater than 18\n      },\n\n      rowSelectionChanged: function (data, rows) {\n        console.log(\"selected rows:\", rows);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactTabulator, {\n        onRef: r => this.ref = r,\n        columns: this.columns,\n        data: data,\n        events: {\n          rowClick: this.rowClick\n        },\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Selected Title: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.selectedTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = _ref => {\n  let {\n    query: {\n      userItems\n    }\n  } = _ref;\n  return {\n    userItems\n  };\n};\nexport default connect(mapStateToProps)(QueryTableTabulator);\nvar _c;\n$RefreshReg$(_c, \"SimpleButton\");","map":{"version":3,"names":["React","connect","ReactTabulator","reactFormatter","jsxDEV","_jsxDEV","SimpleButton","props","rowData","cell","_cell","row","data","cellValue","value","onClick","alert","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","id","title","created","tags","QueryTableTabulator","Component","constructor","arguments","state","selectedTitle","ref","columns","field","hozAlign","editor","formatter","onSelect","setState","rowClick","e","getData","setData","clearData","render","console","log","options","height","movableRows","movableColumns","selectedName","selectableCheck","color","rowSelectionChanged","rows","onRef","r","events","mapStateToProps","_ref","query","userItems","$RefreshReg$"],"sources":["C:/code-challenge-react/frontend/src/components/main/query-table-tabulator.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ColumnDefinition, ReactTabulator, reactFormatter } from 'react-tabulator'\n\nfunction SimpleButton(props:any) {\n  const rowData = props.cell._cell.row.data;\n  const cellValue = props.cell._cell.value || \"Edit | Show\";\n  return <button onClick={() => alert(rowData.name)}>{cellValue}</button>;\n}\n\nvar data = [\n  {id:1, title:\"Oli Bob\", created:\"12\", tags:\"red\", },\n]\n\nexport class QueryTableTabulator extends React.Component {\n  state = {\n    data: [],\n    selectedTitle: \"\"\n  }\n  ref = null\n\n  columns: ColumnDefinition[] = [\n    { title: \"Title\", field: \"title\", },\n    { title: \"Created\", field: \"created\", },\n    { title: \"Tags\", field: \"tags\" },\n    { title: \"Custom\", field: \"custom\", hozAlign: \"center\",editor: \"input\",\n      formatter: reactFormatter(\n          <SimpleButton\n            onSelect={(title:any) => {\n              this.setState({ selectedTitle: title });\n              alert(title);\n            }}\n          />\n        )\n    }\n  ]\n\n  rowClick = (e:any, row:any) => {\n    // console.log(\"ref table: \", this.ref.current); // this is the Tabulator table instance\n    // console.log(\"rowClick id: ${row.getData().id}\", row, e);\n    this.setState({ selectedTitle: row.getData().title });\n  }\n  setData = () => { this.setState({ data })}\n  clearData = () => { this.setState({ data: [] })}\n\n  render() { console.log(\"query-tabulator\")\n    const options = {\n      height: 150,\n      movableRows: true,\n      movableColumns: true,\n      rowClick: (e:any, row:any) => { this.setState({ selectedName: row.getData().title }); console.log(\"clicked\")},\n      selectableCheck: function (row:any) {\n        //row - row component\n        return row.getData().color !== \"yellow\"; //allow selection of rows where the age is greater than 18\n      },\n      rowSelectionChanged: function (data:any, rows:any) {\n        console.log(\"selected rows:\", rows);\n      }\n    }\n    return (\n      <div>\n        <ReactTabulator \n          onRef={(r) => (this.ref = r)}\n          columns={this.columns}\n          data={data} \n          events={{ rowClick: this.rowClick }}\n          options={options}\n        />\n        <i>\n          Selected Title: <strong>{this.state.selectedTitle}</strong>\n        </i>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems }}:any) => ({\n  userItems,\n})\n\nexport default connect(mapStateToProps, )(QueryTableTabulator)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}