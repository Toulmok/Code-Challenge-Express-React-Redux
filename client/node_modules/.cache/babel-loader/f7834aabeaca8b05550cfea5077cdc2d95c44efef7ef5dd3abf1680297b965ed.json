{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\query-tabulator.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ReactTabulator } from 'react-tabulator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimpleButton(props) {\n  const rowData = props.cell._cell.row.data;\n  const cellValue = props.cell._cell.value || \"Edit | Show\";\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => alert(rowData.name),\n    children: cellValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = SimpleButton;\nconst columns = [{\n  title: \"Title\",\n  field: \"title\"\n}, {\n  title: \"Created\",\n  field: \"created\"\n}, {\n  title: \"Tags\",\n  field: \"tags\"\n}];\nvar data = [{\n  id: 1,\n  title: \"Oli Bob\",\n  created: \"12\",\n  tags: \"red\"\n}];\nexport class QueryTabulator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      selectedName: \"\"\n    };\n  }\n  render() {\n    console.log(\"query-tabulator\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactTabulator, {\n        data: data,\n        columns: columns,\n        layout: \"fitData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = _ref => {\n  let {\n    query: {\n      userItems\n    }\n  } = _ref;\n  return {\n    userItems\n  };\n};\nexport default connect(mapStateToProps)(QueryTabulator);\nvar _c;\n$RefreshReg$(_c, \"SimpleButton\");","map":{"version":3,"names":["React","connect","ReactTabulator","jsxDEV","_jsxDEV","SimpleButton","props","rowData","cell","_cell","row","data","cellValue","value","onClick","alert","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","columns","title","field","id","created","tags","QueryTabulator","Component","constructor","state","selectedName","render","console","log","layout","mapStateToProps","_ref","query","userItems","$RefreshReg$"],"sources":["C:/code-challenge-react/frontend/src/components/main/query-tabulator.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ColumnDefinition, ReactTabulator, reactFormatter } from 'react-tabulator'\n\nfunction SimpleButton(props:any) {\n  const rowData = props.cell._cell.row.data;\n  const cellValue = props.cell._cell.value || \"Edit | Show\";\n  return <button onClick={() => alert(rowData.name)}>{cellValue}</button>;\n}\n\nconst columns: ColumnDefinition[] = [\n  { title: \"Title\", field: \"title\", },\n  { title: \"Created\", field: \"created\", },\n  { title: \"Tags\", field: \"tags\" },\n]\n\nvar data = [\n  {id:1, title:\"Oli Bob\", created:\"12\", tags:\"red\", },\n]\n\nexport class QueryTabulator extends React.Component {\n  constructor(props:any) {\n    super(props)\n    this.state = {\n      data: [],\n      selectedName: \"\"\n    }\n  }\n\n  render() { console.log(\"query-tabulator\")\n    return (\n      <div>\n        <ReactTabulator\n          data={data}\n          columns={columns}\n          layout={\"fitData\"}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems }}:any) => ({\n  userItems,\n})\n\nexport default connect(mapStateToProps, )(QueryTabulator)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAO,gCAAgC;AACvC,OAAO,2DAA2D,CAAC,CAAC;AACpE,SAA2BC,cAAc,QAAwB,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElF,SAASC,YAAYA,CAACC,KAAS,EAAE;EAC/B,MAAMC,OAAO,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI;EACzC,MAAMC,SAAS,GAAGN,KAAK,CAACE,IAAI,CAACC,KAAK,CAACI,KAAK,IAAI,aAAa;EACzD,oBAAOT,OAAA;IAAQU,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAACR,OAAO,CAACS,IAAI,CAAE;IAAAC,QAAA,EAAEL;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAU;AACzE;AAACC,EAAA,GAJQjB,YAAY;AAMrB,MAAMkB,OAA2B,GAAG,CAClC;EAAEC,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAS,CAAC,EACnC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAW,CAAC,EACvC;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAO,CAAC,CACjC;AAED,IAAId,IAAI,GAAG,CACT;EAACe,EAAE,EAAC,CAAC;EAAEF,KAAK,EAAC,SAAS;EAAEG,OAAO,EAAC,IAAI;EAAEC,IAAI,EAAC;AAAO,CAAC,CACpD;AAED,OAAO,MAAMC,cAAc,SAAS7B,KAAK,CAAC8B,SAAS,CAAC;EAClDC,WAAWA,CAACzB,KAAS,EAAE;IACrB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC0B,KAAK,GAAG;MACXrB,IAAI,EAAE,EAAE;MACRsB,YAAY,EAAE;IAChB,CAAC;EACH;EAEAC,MAAMA,CAAA,EAAG;IAAEC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IACvC,oBACEhC,OAAA;MAAAa,QAAA,eACEb,OAAA,CAACF,cAAc;QACbS,IAAI,EAAEA,IAAK;QACXY,OAAO,EAAEA,OAAQ;QACjBc,MAAM,EAAE;MAAU;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV;AACF;AAEA,MAAMiB,eAAe,GAAGC,IAAA;EAAA,IAAC;IAAEC,KAAK,EAAE;MAAEC;IAAU;EAAK,CAAC,GAAAF,IAAA;EAAA,OAAM;IACxDE;EACF,CAAC;AAAA,CAAC;AAEF,eAAexC,OAAO,CAACqC,eAAe,CAAG,CAACT,cAAc,CAAC;AAAA,IAAAP,EAAA;AAAAoB,YAAA,CAAApB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}