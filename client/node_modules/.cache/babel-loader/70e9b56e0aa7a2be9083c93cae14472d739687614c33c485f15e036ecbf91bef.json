{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { isNone as s } from \"../../../core/maybe.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as e } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { calculateNDVI as n, getBandMatrix3 as o } from \"./bandIndexUtils.js\";\nimport i from \"./BaseRasterFunction.js\";\nimport u from \"./NDVIFunctionArguments.js\";\nlet c = class extends i {\n  constructor() {\n    super(...arguments), this.functionName = \"NDVI\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\"];\n  }\n  _bindSourceRasters() {\n    const {\n      scientificOutput: t\n    } = this.functionArguments;\n    this.outputPixelType = this._getOutputPixelType(t ? \"f32\" : \"u8\");\n    const s = this.sourceRasterInfos[0].clone();\n    s.pixelType = this.outputPixelType, s.colormap = null, s.histograms = null, s.bandCount = 1;\n    const [r, e, n, o] = t ? [-1, 1, 0, .1] : [0, 200, 100, 10];\n    return s.statistics = [{\n      min: r,\n      max: e,\n      avg: n,\n      stddev: o\n    }], this.rasterInfo = s, {\n      success: !0,\n      supportsGPU: !0\n    };\n  }\n  _processPixels(t) {\n    const r = t.pixelBlocks?.[0];\n    if (s(r)) return null;\n    const {\n      visibleBandID: e,\n      infraredBandID: o,\n      scientificOutput: i\n    } = this.functionArguments;\n    return n(r, e, o, !i);\n  }\n  _getWebGLParameters() {\n    const {\n        visibleBandID: t,\n        infraredBandID: s,\n        scientificOutput: r\n      } = this.functionArguments,\n      e = this.isInputBandIdsSwizzled ? [0, 1, 2] : [s, t, 0];\n    return {\n      bandIndexMat3: o(e),\n      scaled: !r\n    };\n  }\n  _getInputBandIds(t) {\n    const {\n      visibleBandID: s,\n      infraredBandID: r\n    } = this.functionArguments;\n    return [r, s, 0].map(s => t[s]);\n  }\n};\nt([r({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], c.prototype, \"functionName\", void 0), t([r({\n  type: u,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], c.prototype, \"functionArguments\", void 0), t([r()], c.prototype, \"rasterArgumentNames\", void 0), c = t([e(\"esri.layers.support.rasterFunctions.NDVIFunction\")], c);\nconst a = c;\nexport { a as default };","map":{"version":3,"names":["_","t","isNone","s","property","r","subclass","e","calculateNDVI","n","getBandMatrix3","o","i","u","c","constructor","arguments","functionName","functionArguments","rasterArgumentNames","_bindSourceRasters","scientificOutput","outputPixelType","_getOutputPixelType","sourceRasterInfos","clone","pixelType","colormap","histograms","bandCount","statistics","min","max","avg","stddev","rasterInfo","success","supportsGPU","_processPixels","pixelBlocks","visibleBandID","infraredBandID","_getWebGLParameters","isInputBandIdsSwizzled","bandIndexMat3","scaled","_getInputBandIds","map","json","write","name","prototype","type","a","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/support/rasterFunctions/NDVIFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{isNone as s}from\"../../../core/maybe.js\";import{property as r}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as e}from\"../../../core/accessorSupport/decorators/subclass.js\";import{calculateNDVI as n,getBandMatrix3 as o}from\"./bandIndexUtils.js\";import i from\"./BaseRasterFunction.js\";import u from\"./NDVIFunctionArguments.js\";let c=class extends i{constructor(){super(...arguments),this.functionName=\"NDVI\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){const{scientificOutput:t}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?\"f32\":\"u8\");const s=this.sourceRasterInfos[0].clone();s.pixelType=this.outputPixelType,s.colormap=null,s.histograms=null,s.bandCount=1;const[r,e,n,o]=t?[-1,1,0,.1]:[0,200,100,10];return s.statistics=[{min:r,max:e,avg:n,stddev:o}],this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){const r=t.pixelBlocks?.[0];if(s(r))return null;const{visibleBandID:e,infraredBandID:o,scientificOutput:i}=this.functionArguments;return n(r,e,o,!i)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:s,scientificOutput:r}=this.functionArguments,e=this.isInputBandIdsSwizzled?[0,1,2]:[s,t,0];return{bandIndexMat3:o(e),scaled:!r}}_getInputBandIds(t){const{visibleBandID:s,infraredBandID:r}=this.functionArguments;return[r,s,0].map((s=>t[s]))}};t([r({json:{write:!0,name:\"rasterFunction\"}})],c.prototype,\"functionName\",void 0),t([r({type:u,json:{write:!0,name:\"rasterFunctionArguments\"}})],c.prototype,\"functionArguments\",void 0),t([r()],c.prototype,\"rasterArgumentNames\",void 0),c=t([e(\"esri.layers.support.rasterFunctions.NDVIFunction\")],c);const a=c;export{a as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}