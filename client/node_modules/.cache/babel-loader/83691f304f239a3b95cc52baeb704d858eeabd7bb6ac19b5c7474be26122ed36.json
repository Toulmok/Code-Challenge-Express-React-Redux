{"ast":null,"code":"import _slicedToArray from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport { rasterRendererTypes as e } from \"../../rasterRenderers.js\";\nimport r from \"../../request.js\";\nimport i from \"../../core/Error.js\";\nimport s from \"../../core/Logger.js\";\nimport { isNone as n, isSome as o } from \"../../core/maybe.js\";\nimport { property as a } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport \"../../core/arrayUtils.js\";\nimport { subclass as l } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { getInfo as u } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { sanitizeUrl as m } from \"../support/arcgisLayerUrl.js\";\nimport { url as d } from \"../support/commonProperties.js\";\nimport c from \"../support/DimensionalDefinition.js\";\nimport h from \"../support/MultidimensionalSubset.js\";\nimport f from \"../support/RasterFunction.js\";\nimport p from \"../support/RasterJobHandler.js\";\nimport y from \"../support/TileInfo.js\";\nimport b from \"../support/rasterDatasets/FunctionRaster.js\";\nimport { getDefaultMultidimensionalDefinition as g, hasExcludedVariableOrDimension as J, getDefaultVariablInfo as _, isMultiSliceOrRangeDefinition as F, getSubsetVariablesFromMdInfo as I } from \"../support/rasterDatasets/multidimensionalUtils.js\";\nimport { create as R } from \"../support/rasterFunctions/rasterFunctionHelper.js\";\nimport { convertVectorFieldData as S } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { normalizeRendererJSON as v, getVariableRasterInfo as x, getDefaultInterpolation as D, getDefaultBandCombination as j, createDefaultRenderer as H } from \"../../renderers/support/rasterRendererHelper.js\";\nimport T from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as w } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport N from \"../../geometry/SpatialReference.js\";\nvar O = s.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),\n  z = function z(s) {\n    var z = /*#__PURE__*/function (_s) {\n      _inherits(z, _s);\n      var _super = _createSuper(z);\n      function z() {\n        var _t$, _t$$raster;\n        var _this;\n        _classCallCheck(this, z);\n        for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {\n          t[_key] = arguments[_key];\n        }\n        _this = _super.call.apply(_super, [this].concat(t)), _this._isConstructedFromFunctionRaster = !1, _this._rasterJobHandler = {\n          instance: null,\n          refCount: 0,\n          connectionPromise: null\n        }, _this.bandIds = null, _this.copyright = null, _this.interpolation = \"nearest\", _this.multidimensionalSubset = null, _this.raster = null, _this.rasterFunction = null, _this.rasterInfo = null, _this.sourceJSON = null, _this.spatialReference = null, _this.symbolizer = null, _this._isConstructedFromFunctionRaster = \"Function\" === ((_t$ = t[0]) === null || _t$ === void 0 ? void 0 : (_t$$raster = _t$.raster) === null || _t$$raster === void 0 ? void 0 : _t$$raster.datasetFormat);\n        return _this;\n      }\n      _createClass(z, [{\n        key: \"fullExtent\",\n        get: function get() {\n          var _this$rasterInfo;\n          return (_this$rasterInfo = this.rasterInfo) === null || _this$rasterInfo === void 0 ? void 0 : _this$rasterInfo.extent;\n        }\n      }, {\n        key: \"multidimensionalDefinition\",\n        set: function set(t) {\n          this._set(\"multidimensionalDefinition\", t), this.updateRenderer();\n        }\n      }, {\n        key: \"tileInfo\",\n        get: function get() {\n          var _this$rasterInfo2;\n          return (_this$rasterInfo2 = this.rasterInfo) === null || _this$rasterInfo2 === void 0 ? void 0 : _this$rasterInfo2.storageInfo.tileInfo;\n        }\n      }, {\n        key: \"url\",\n        set: function set(t) {\n          this._set(\"url\", m(t, O));\n        }\n      }, {\n        key: \"renderer\",\n        set: function set(t) {\n          this._set(\"renderer\", t), this.updateRenderer();\n        }\n      }, {\n        key: \"convertVectorFieldData\",\n        value: function () {\n          var _convertVectorFieldData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(t, e) {\n            var r, i;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(n(t) || !this.rasterInfo)) {\n                    _context.next = 2;\n                    break;\n                  }\n                  return _context.abrupt(\"return\", null);\n                case 2:\n                  r = this._rasterJobHandler.instance, i = this.rasterInfo.dataType;\n                  return _context.abrupt(\"return\", r ? r.convertVectorFieldData({\n                    pixelBlock: t,\n                    dataType: i\n                  }, e) : S(t, i));\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee, this);\n          }));\n          function convertVectorFieldData(_x, _x2) {\n            return _convertVectorFieldData.apply(this, arguments);\n          }\n          return convertVectorFieldData;\n        }()\n      }, {\n        key: \"createFlowMesh\",\n        value: function () {\n          var _createFlowMesh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(t, e) {\n            var r;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  r = this._rasterJobHandler.instance;\n                  return _context2.abrupt(\"return\", r ? r.createFlowMesh(t, e) : w(t.meshType, t.simulationSettings, t.flowData, o(e.signal) ? e.signal : new AbortController().signal));\n                case 2:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2, this);\n          }));\n          function createFlowMesh(_x3, _x4) {\n            return _createFlowMesh.apply(this, arguments);\n          }\n          return createFlowMesh;\n        }()\n      }, {\n        key: \"normalizeRasterFetchOptions\",\n        value: function normalizeRasterFetchOptions(t) {\n          var _this$rasterInfo3;\n          var _ref = (_this$rasterInfo3 = this.rasterInfo) !== null && _this$rasterInfo3 !== void 0 ? _this$rasterInfo3 : {},\n            e = _ref.multidimensionalInfo;\n          if (n(e)) return t;\n          var r = t.multidimensionalDefinition || this.multidimensionalDefinition;\n          !n(r) && r.length || (r = g(this.raster.rasterInfo, {\n            multidimensionalSubset: this.multidimensionalSubset\n          }));\n          var i = t.timeExtent || this.timeExtent;\n          if (o(r) && o(i) && (o(i.start) || o(i.end))) {\n            var _e$variables$find, _e$variables$find$dim;\n            r = r.map(function (t) {\n              return t.clone();\n            });\n            var _s2 = (_e$variables$find = e.variables.find(function (_ref2) {\n                var t = _ref2.name;\n                return t === r[0].variableName;\n              })) === null || _e$variables$find === void 0 ? void 0 : (_e$variables$find$dim = _e$variables$find.dimensions) === null || _e$variables$find$dim === void 0 ? void 0 : _e$variables$find$dim.find(function (_ref3) {\n                var t = _ref3.name;\n                return \"StdTime\" === t;\n              }),\n              _a = r.find(function (_ref4) {\n                var t = _ref4.dimensionName;\n                return \"StdTime\" === t;\n              });\n            if (!_s2 || !_a) return _objectSpread(_objectSpread({}, t), {}, {\n              multidimensionalDefinition: null\n            });\n            var _l = i.start,\n              _u = i.end,\n              _m = n(_l) ? null : _l.getTime(),\n              _d = n(_u) ? null : _u.getTime(),\n              _c = _m !== null && _m !== void 0 ? _m : _d,\n              _h = _d !== null && _d !== void 0 ? _d : _m;\n            if (o(_s2.values)) {\n              var _t = _s2.values.filter(function (t) {\n                if (Array.isArray(t)) {\n                  if (_c === _h) return t[0] <= _c && t[1] >= _c;\n                  var _e = t[0] <= _c && t[1] > _c || t[0] < _h && t[1] >= _h,\n                    _r = t[0] >= _c && t[1] <= _h || t[0] < _c && t[1] > _h;\n                  return _e || _r;\n                }\n                return _c === _h ? t === _c : t >= _c && t <= _h;\n              });\n              if (_t.length) {\n                var _e2 = _t.sort(function (t, e) {\n                  var _t$2, _e$, _t$3, _e$2;\n                  if (_c === _h) return ((_t$2 = t[0]) !== null && _t$2 !== void 0 ? _t$2 : t) - ((_e$ = e[0]) !== null && _e$ !== void 0 ? _e$ : e);\n                  return Math.abs(((_t$3 = t[1]) !== null && _t$3 !== void 0 ? _t$3 : t) - _h) - Math.abs(((_e$2 = e[1]) !== null && _e$2 !== void 0 ? _e$2 : e) - _h);\n                })[0];\n                _a.values = [_e2];\n              } else r = null;\n            } else if (_s2.hasRegularIntervals && _s2.extent) {\n              var _s2$extent = _slicedToArray(_s2.extent, 2),\n                _t2 = _s2$extent[0],\n                _e3 = _s2$extent[1];\n              _c > _e3 || _h < _t2 ? r = null : _a.values = _c === _h ? [_c] : [Math.max(_t2, _c), Math.min(_e3, _h)];\n            }\n          }\n          return o(r) && J(r, this.multidimensionalSubset) ? _objectSpread(_objectSpread({}, t), {}, {\n            multidimensionalDefinition: null\n          }) : _objectSpread(_objectSpread({}, t), {}, {\n            multidimensionalDefinition: r\n          });\n        }\n      }, {\n        key: \"updateRasterFunction\",\n        value: function () {\n          var _updateRasterFunction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            var _this$rasterFunction, _t3, t, e, r, i, _i$rasterFunctionDefi, _this$rasterFunction2, _r2, _s3, _n, s, n, o;\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!(\"imagery-tile\" !== this.type || !this.rasterFunction && !this._cachedRasterFunctionJson || JSON.stringify(this.rasterFunction) === JSON.stringify(this._cachedRasterFunctionJson))) {\n                    _context3.next = 2;\n                    break;\n                  }\n                  return _context3.abrupt(\"return\");\n                case 2:\n                  if (!(this._isConstructedFromFunctionRaster && \"Function\" === this.raster.datasetFormat)) {\n                    _context3.next = 5;\n                    break;\n                  }\n                  _t3 = this.raster.rasterFunction.toJSON();\n                  return _context3.abrupt(\"return\", (!this.rasterFunction && _t3 && this._set(\"rasterFunction\", f.fromJSON(_t3)), void (this._cachedRasterFunctionJson = (_this$rasterFunction = this.rasterFunction) === null || _this$rasterFunction === void 0 ? void 0 : _this$rasterFunction.toJSON())));\n                case 5:\n                  e = this.raster, r = !1;\n                  \"Function\" === e.datasetFormat ? (t = e.primaryRasters.rasters, e = t[0], r = !0) : t = [e];\n                  i = this.rasterFunction;\n                  if (!i) {\n                    _context3.next = 19;\n                    break;\n                  }\n                  _r2 = {\n                    raster: e\n                  };\n                  t.length > 1 && t.forEach(function (t) {\n                    return _r2[t.url] = t;\n                  });\n                  _s3 = R((_i$rasterFunctionDefi = i.rasterFunctionDefinition) !== null && _i$rasterFunctionDefi !== void 0 ? _i$rasterFunctionDefi : i.toJSON(), _r2), _n = new b({\n                    rasterFunction: _s3\n                  });\n                  _n.rasterJobHandler = this._rasterJobHandler.instance;\n                  _context3.next = 15;\n                  return _n.open();\n                case 15:\n                  this._cachedRasterFunctionJson = (_this$rasterFunction2 = this.rasterFunction) === null || _this$rasterFunction2 === void 0 ? void 0 : _this$rasterFunction2.toJSON();\n                  this.raster = _n;\n                  _context3.next = 20;\n                  break;\n                case 19:\n                  this.raster = e, this._cachedRasterFunctionJson = null;\n                case 20:\n                  if (!(this._cachedRendererJson = null, !r && !i)) {\n                    _context3.next = 22;\n                    break;\n                  }\n                  return _context3.abrupt(\"return\");\n                case 22:\n                  s = this.bandIds, n = this.raster.rasterInfo.bandCount, o = s !== null && s !== void 0 && s.length ? s.some(function (t) {\n                    return t >= n;\n                  }) : n >= 3;\n                  s && (o || \"raster-stretch\" !== this.renderer.type) && this._set(\"bandIds\", null), this._configDefaultRenderer(\"auto\");\n                case 24:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3, this);\n          }));\n          function updateRasterFunction() {\n            return _updateRasterFunction.apply(this, arguments);\n          }\n          return updateRasterFunction;\n        }()\n      }, {\n        key: \"updateRenderer\",\n        value: function () {\n          var _updateRenderer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n            var _ref5;\n            var t, e, r, i, s, n;\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  t = this.loaded, e = this.symbolizer;\n                  if (!(!t || !e)) {\n                    _context4.next = 3;\n                    break;\n                  }\n                  return _context4.abrupt(\"return\");\n                case 3:\n                  r = this.raster.rasterInfo, i = (_ref5 = _(r, {\n                    multidimensionalDefinition: this.multidimensionalDefinition,\n                    multidimensionalSubset: this.multidimensionalSubset\n                  })) === null || _ref5 === void 0 ? void 0 : _ref5.name, s = v(_objectSpread(_objectSpread({}, this.renderer.toJSON()), {}, {\n                    variableName: i\n                  }));\n                  if (!(JSON.stringify(this._cachedRendererJson) === JSON.stringify(s))) {\n                    _context4.next = 6;\n                    break;\n                  }\n                  return _context4.abrupt(\"return\");\n                case 6:\n                  n = this._rasterJobHandler.instance;\n                  _context4.t0 = n;\n                  if (!_context4.t0) {\n                    _context4.next = 15;\n                    break;\n                  }\n                  e.rasterInfo = x(r, i);\n                  e.rendererJSON = s;\n                  e.bind();\n                  _context4.next = 14;\n                  return n.updateSymbolizer(e);\n                case 14:\n                  this._cachedRendererJson = s;\n                case 15:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4, this);\n          }));\n          function updateRenderer() {\n            return _updateRenderer.apply(this, arguments);\n          }\n          return updateRenderer;\n        }()\n      }, {\n        key: \"applyRenderer\",\n        value: function () {\n          var _applyRenderer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(t, e) {\n            var _this$bandIds;\n            var r, i, s, n;\n            return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  r = t && t.pixelBlock;\n                  if (o(r) && r.pixels && r.pixels.length > 0) {\n                    _context5.next = 3;\n                    break;\n                  }\n                  return _context5.abrupt(\"return\", null);\n                case 3:\n                  _context5.next = 5;\n                  return this.updateRenderer();\n                case 5:\n                  s = this._rasterJobHandler.instance, n = (_this$bandIds = this.bandIds) !== null && _this$bandIds !== void 0 ? _this$bandIds : [];\n                  if (!s) {\n                    _context5.next = 12;\n                    break;\n                  }\n                  _context5.next = 9;\n                  return s.symbolize(_objectSpread(_objectSpread({}, t), {}, {\n                    simpleStretchParams: e,\n                    bandIds: n\n                  }));\n                case 9:\n                  _context5.t0 = _context5.sent;\n                  _context5.next = 13;\n                  break;\n                case 12:\n                  _context5.t0 = this.symbolizer.symbolize(_objectSpread(_objectSpread({}, t), {}, {\n                    simpleStretchParams: e,\n                    bandIds: n\n                  }));\n                case 13:\n                  i = _context5.t0;\n                  return _context5.abrupt(\"return\", i);\n                case 15:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, _callee5, this);\n          }));\n          function applyRenderer(_x5, _x6) {\n            return _applyRenderer.apply(this, arguments);\n          }\n          return applyRenderer;\n        }()\n      }, {\n        key: \"getTileUrl\",\n        value: function getTileUrl(t, e, r) {\n          return \"RasterTileServer\" === this.raster.datasetFormat ? \"\".concat(this.url, \"/tile/\").concat(t, \"/\").concat(e, \"/\").concat(r) : \"\";\n        }\n      }, {\n        key: \"getCompatibleTileInfo\",\n        value: function getCompatibleTileInfo(t, e) {\n          var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n          if (!this.loaded || n(e)) return null;\n          if (r && t.equals(this.spatialReference)) return this.tileInfo;\n          var i = u(t);\n          return y.create({\n            size: 256,\n            spatialReference: t,\n            origin: i ? {\n              x: i.origin[0],\n              y: i.origin[1]\n            } : {\n              x: e.xmin,\n              y: e.ymax\n            }\n          });\n        }\n      }, {\n        key: \"getCompatibleFullExtent\",\n        value: function getCompatibleFullExtent(t) {\n          return this.loaded ? (this._compatibleFullExtent && this._compatibleFullExtent.spatialReference.equals(t) || (this._compatibleFullExtent = this.raster.computeExtent(t)), this._compatibleFullExtent) : null;\n        }\n      }, {\n        key: \"fetchTile\",\n        value: function () {\n          var _fetchTile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(t, e, i) {\n            var s,\n              _n2,\n              a,\n              _r3,\n              _args6 = arguments;\n            return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n              while (1) switch (_context6.prev = _context6.next) {\n                case 0:\n                  s = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : {};\n                  if (!(C(this), s.requestAsImageElement)) {\n                    _context6.next = 4;\n                    break;\n                  }\n                  _n2 = this.getTileUrl(t, e, i);\n                  return _context6.abrupt(\"return\", r(_n2, {\n                    responseType: \"image\",\n                    query: _objectSpread(_objectSpread({}, this.refreshParameters), this.raster.ioConfig.customFetchParameters),\n                    signal: s.signal\n                  }).then(function (t) {\n                    return t.data;\n                  }));\n                case 4:\n                  a = this.rasterInfo;\n                  if (!(o(a.multidimensionalInfo) && (s = this.normalizeRasterFetchOptions(s), n(s.multidimensionalDefinition)))) {\n                    _context6.next = 8;\n                    break;\n                  }\n                  _r3 = s.tileInfo || a.storageInfo.tileInfo;\n                  return _context6.abrupt(\"return\", {\n                    extent: this.raster.getTileExtentFromTileInfo(t, e, i, _r3),\n                    pixelBlock: null\n                  });\n                case 8:\n                  _context6.next = 10;\n                  return this._initJobHandler();\n                case 10:\n                  _context6.next = 12;\n                  return this.updateRasterFunction();\n                case 12:\n                  \"raster-shaded-relief\" === this.renderer.type && (s = _objectSpread(_objectSpread({}, s), {}, {\n                    buffer: {\n                      cols: 1,\n                      rows: 1\n                    }\n                  }));\n                  return _context6.abrupt(\"return\", this.raster.fetchTile(t, e, i, s));\n                case 14:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }, _callee6, this);\n          }));\n          function fetchTile(_x7, _x8, _x9) {\n            return _fetchTile.apply(this, arguments);\n          }\n          return fetchTile;\n        }()\n      }, {\n        key: \"fetchPixels\",\n        value: function () {\n          var _fetchPixels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(t, e, r) {\n            var i,\n              _args7 = arguments;\n            return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  i = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : {};\n                  if (!(o(this.rasterInfo.multidimensionalInfo) && (i = this.normalizeRasterFetchOptions(i), n(i.multidimensionalDefinition)))) {\n                    _context7.next = 5;\n                    break;\n                  }\n                  _context7.t0 = {\n                    extent: t,\n                    pixelBlock: null\n                  };\n                  _context7.next = 10;\n                  break;\n                case 5:\n                  _context7.next = 7;\n                  return this._initJobHandler();\n                case 7:\n                  _context7.next = 9;\n                  return this.updateRasterFunction();\n                case 9:\n                  _context7.t0 = this.raster.fetchPixels(t, e, r, i);\n                case 10:\n                  return _context7.abrupt(\"return\", _context7.t0);\n                case 11:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, _callee7, this);\n          }));\n          function fetchPixels(_x10, _x11, _x12) {\n            return _fetchPixels.apply(this, arguments);\n          }\n          return fetchPixels;\n        }()\n      }, {\n        key: \"identify\",\n        value: function () {\n          var _identify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(t) {\n            var _this$multidimensiona;\n            var e,\n              r,\n              s,\n              a,\n              _args8 = arguments;\n            return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n              while (1) switch (_context8.prev = _context8.next) {\n                case 0:\n                  e = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n                  r = this.raster, s = this.rasterInfo;\n                  if (!o(s.multidimensionalInfo)) {\n                    _context8.next = 5;\n                    break;\n                  }\n                  if (!(!(s.hasMultidimensionalTranspose && !!(F(e.multidimensionalDefinition) || e.transposedVariableName || e.timeExtent)) && (e = this.normalizeRasterFetchOptions(e), n(e.multidimensionalDefinition)))) {\n                    _context8.next = 5;\n                    break;\n                  }\n                  return _context8.abrupt(\"return\", {\n                    location: t,\n                    value: null\n                  });\n                case 5:\n                  a = (_this$multidimensiona = this.multidimensionalSubset) === null || _this$multidimensiona === void 0 ? void 0 : _this$multidimensiona.areaOfInterest;\n                  if (!(a && !a.contains(t))) {\n                    _context8.next = 8;\n                    break;\n                  }\n                  throw new i(\"imagery-tile-mixin:identify\", \"the request cannot be fulfilled when falling outside of the multidimensional subset\");\n                case 8:\n                  return _context8.abrupt(\"return\", r.identify(t, e));\n                case 9:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }, _callee8, this);\n          }));\n          function identify(_x13) {\n            return _identify.apply(this, arguments);\n          }\n          return identify;\n        }()\n      }, {\n        key: \"increaseRasterJobHandlerUsage\",\n        value: function increaseRasterJobHandlerUsage() {\n          this._rasterJobHandler.refCount++;\n        }\n      }, {\n        key: \"decreaseRasterJobHandlerUsage\",\n        value: function decreaseRasterJobHandlerUsage() {\n          this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n        }\n      }, {\n        key: \"hasStandardTime\",\n        value: function hasStandardTime() {\n          var _this$rasterInfo4, _this$rasterInfo5, _e$3;\n          var t = (_this$rasterInfo4 = this.rasterInfo) === null || _this$rasterInfo4 === void 0 ? void 0 : _this$rasterInfo4.multidimensionalInfo;\n          if (n(t) || \"standard-time\" !== ((_this$rasterInfo5 = this.rasterInfo) === null || _this$rasterInfo5 === void 0 ? void 0 : _this$rasterInfo5.dataType)) return !1;\n          var e = this.multidimensionalDefinition,\n            r = e === null || e === void 0 ? void 0 : (_e$3 = e[0]) === null || _e$3 === void 0 ? void 0 : _e$3.variableName;\n          return t.variables.some(function (t) {\n            return t.name === r && (!(e !== null && e !== void 0 && e[0].dimensionName) || t.dimensions.some(function (t) {\n              return \"StdTime\" === t.name;\n            }));\n          });\n        }\n      }, {\n        key: \"getStandardTimeValue\",\n        value: function getStandardTimeValue(t) {\n          return new Date(24 * (t - 25569) * 3600 * 1e3).toString();\n        }\n      }, {\n        key: \"getMultidimensionalSubsetVariables\",\n        value: function getMultidimensionalSubsetVariables(t) {\n          var _this$rasterInfo6;\n          var e = t !== null && t !== void 0 ? t : (_this$rasterInfo6 = this.rasterInfo) === null || _this$rasterInfo6 === void 0 ? void 0 : _this$rasterInfo6.multidimensionalInfo;\n          return I(this.multidimensionalSubset, e);\n        }\n      }, {\n        key: \"_configDefaultSettings\",\n        value: function _configDefaultSettings() {\n          this._configDefaultInterpolation(), this.multidimensionalDefinition || (this.multidimensionalDefinition = g(this.raster.rasterInfo, {\n            multidimensionalSubset: this.multidimensionalSubset\n          })), this._configDefaultRenderer();\n        }\n      }, {\n        key: \"_initJobHandler\",\n        value: function _initJobHandler() {\n          var _this2 = this;\n          if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n          var t = new p();\n          return this._rasterJobHandler.connectionPromise = t.initialize().then(function () {\n            C(_this2), _this2._rasterJobHandler.instance = t, _this2.raster.rasterJobHandler = t, _this2.renderer && _this2.updateRenderer(), \"Function\" === _this2.raster.datasetFormat && _this2.raster.syncJobHandler();\n          }).catch(function () {}), this._rasterJobHandler.connectionPromise;\n        }\n      }, {\n        key: \"_shutdownJobHandler\",\n        value: function _shutdownJobHandler() {\n          this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this._cachedRendererJson = null, this.raster && (this.raster.rasterJobHandler = null);\n        }\n      }, {\n        key: \"_configDefaultInterpolation\",\n        value: function _configDefaultInterpolation() {\n          if (null == this.interpolation) {\n            var _this$sourceJSON;\n            C(this);\n            var _t4 = this.raster,\n              _e4 = D(_t4.rasterInfo, _t4.tileType, (_this$sourceJSON = this.sourceJSON) === null || _this$sourceJSON === void 0 ? void 0 : _this$sourceJSON.defaultResamplingMethod);\n            this._set(\"interpolation\", _e4);\n          }\n        }\n      }, {\n        key: \"_configDefaultRenderer\",\n        value: function _configDefaultRenderer() {\n          var _ref6;\n          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"no\";\n          C(this);\n          var e = this.raster.rasterInfo;\n          !this.bandIds && e.bandCount > 1 && (this.bandIds = j(e));\n          var r = (_ref6 = _(e, {\n            multidimensionalDefinition: this.multidimensionalDefinition,\n            multidimensionalSubset: this.multidimensionalSubset\n          })) === null || _ref6 === void 0 ? void 0 : _ref6.name;\n          if (!this.renderer || \"override\" === t) {\n            var _e$statistics$0$max, _e$statistics, _e$statistics$0$min, _e$statistics2;\n            var _t5 = H(e, {\n              bandIds: this.bandIds,\n              variableName: r\n            });\n            \"WCSServer\" === this.raster.datasetFormat && \"raster-stretch\" === _t5.type && (((_e$statistics$0$max = (_e$statistics = e.statistics) === null || _e$statistics === void 0 ? void 0 : _e$statistics[0].max) !== null && _e$statistics$0$max !== void 0 ? _e$statistics$0$max : 0) > 1e24 || ((_e$statistics$0$min = (_e$statistics2 = e.statistics) === null || _e$statistics2 === void 0 ? void 0 : _e$statistics2[0].min) !== null && _e$statistics$0$min !== void 0 ? _e$statistics$0$min : 0) < -1e24) && (_t5.dynamicRangeAdjustment = !0, _t5.statistics = null, \"none\" === _t5.stretchType && (_t5.stretchType = \"min-max\")), this.renderer = _t5;\n          }\n          var i = v(_objectSpread(_objectSpread({}, this.renderer.toJSON()), {}, {\n              variableName: r\n            })),\n            s = x(e, r);\n          this.symbolizer ? (this.symbolizer.rendererJSON = i, this.symbolizer.rasterInfo = s) : this.symbolizer = new T({\n            rendererJSON: i,\n            rasterInfo: s\n          });\n          var n = this.symbolizer.bind();\n          if (n.success) {\n            if (\"auto\" === t) {\n              var _t6 = this.raster.rasterInfo.colormap,\n                _e5 = this.renderer;\n              if (o(_t6)) {\n                if (\"raster-colormap\" !== _e5.type) this._configDefaultRenderer(\"override\");else {\n                  var _t7 = H(this.raster.rasterInfo);\n                  JSON.stringify(_t7) !== JSON.stringify(_e5) && this._configDefaultRenderer(\"override\");\n                }\n              } else if (\"raster-stretch\" === _e5.type) {\n                var _this$bandIds2, _e5$statistics;\n                var _t8 = (_this$bandIds2 = this.bandIds) === null || _this$bandIds2 === void 0 ? void 0 : _this$bandIds2.length,\n                  _r4 = (_e5$statistics = _e5.statistics) === null || _e5$statistics === void 0 ? void 0 : _e5$statistics.length;\n                !_e5.dynamicRangeAdjustment && _r4 && _t8 && _r4 !== _t8 && this._configDefaultRenderer(\"override\");\n              }\n            }\n          } else O.warn(\"imagery-tile-mixin\", n.error || \"The given renderer is not supported by the layer.\"), \"auto\" === t && this._configDefaultRenderer(\"override\");\n        }\n      }]);\n      return z;\n    }(s);\n    function C(t) {\n      if (!t.raster || !t.rasterInfo) throw new i(\"imagery-tile\", \"no raster\");\n    }\n    return t([a()], z.prototype, \"_cachedRendererJson\", void 0), t([a()], z.prototype, \"_cachedRasterFunctionJson\", void 0), t([a()], z.prototype, \"_compatibleFullExtent\", void 0), t([a()], z.prototype, \"_isConstructedFromFunctionRaster\", void 0), t([a()], z.prototype, \"_rasterJobHandler\", void 0), t([a()], z.prototype, \"bandIds\", void 0), t([a({\n      json: {\n        origins: {\n          service: {\n            read: {\n              source: \"copyrightText\"\n            }\n          }\n        }\n      }\n    })], z.prototype, \"copyright\", void 0), t([a({\n      json: {\n        read: !1\n      }\n    })], z.prototype, \"fullExtent\", null), t([a()], z.prototype, \"interpolation\", void 0), t([a()], z.prototype, \"ioConfig\", void 0), t([a({\n      type: [c],\n      json: {\n        write: !0\n      }\n    })], z.prototype, \"multidimensionalDefinition\", null), t([a({\n      type: h,\n      json: {\n        write: !0\n      }\n    })], z.prototype, \"multidimensionalSubset\", void 0), t([a()], z.prototype, \"raster\", void 0), t([a({\n      type: f\n    })], z.prototype, \"rasterFunction\", void 0), t([a()], z.prototype, \"rasterInfo\", void 0), t([a()], z.prototype, \"sourceJSON\", void 0), t([a({\n      readOnly: !0,\n      type: N,\n      json: {\n        read: !1\n      }\n    })], z.prototype, \"spatialReference\", void 0), t([a({\n      json: {\n        read: !1\n      }\n    })], z.prototype, \"tileInfo\", null), t([a(d)], z.prototype, \"url\", null), t([a({\n      types: e\n    })], z.prototype, \"renderer\", null), t([a()], z.prototype, \"symbolizer\", void 0), z = t([l(\"esri.layers.ImageryTileMixin\")], z), z;\n  };\nexport { z as ImageryTileMixin };","map":{"version":3,"names":["_","t","rasterRendererTypes","e","r","i","s","isNone","n","isSome","o","property","a","subclass","l","getInfo","u","sanitizeUrl","m","url","d","c","h","f","p","y","b","getDefaultMultidimensionalDefinition","g","hasExcludedVariableOrDimension","J","getDefaultVariablInfo","isMultiSliceOrRangeDefinition","F","getSubsetVariablesFromMdInfo","I","create","R","convertVectorFieldData","S","normalizeRendererJSON","v","getVariableRasterInfo","x","getDefaultInterpolation","D","getDefaultBandCombination","j","createDefaultRenderer","H","T","createFlowMesh","w","N","O","getLogger","z","_s","_inherits","_super","_createSuper","_t$","_t$$raster","_this","_classCallCheck","_len","arguments","length","Array","_key","call","apply","concat","_isConstructedFromFunctionRaster","_rasterJobHandler","instance","refCount","connectionPromise","bandIds","copyright","interpolation","multidimensionalSubset","raster","rasterFunction","rasterInfo","sourceJSON","spatialReference","symbolizer","datasetFormat","_createClass","key","get","_this$rasterInfo","extent","set","_set","updateRenderer","_this$rasterInfo2","storageInfo","tileInfo","value","_convertVectorFieldData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","dataType","pixelBlock","stop","_x","_x2","_createFlowMesh","_callee2","_callee2$","_context2","meshType","simulationSettings","flowData","signal","AbortController","_x3","_x4","normalizeRasterFetchOptions","_this$rasterInfo3","_ref","multidimensionalInfo","multidimensionalDefinition","timeExtent","start","end","_e$variables$find","_e$variables$find$dim","map","clone","variables","find","_ref2","name","variableName","dimensions","_ref3","_ref4","dimensionName","_objectSpread","getTime","values","filter","isArray","sort","_t$2","_e$","_t$3","_e$2","Math","abs","hasRegularIntervals","_s2$extent","_slicedToArray","max","min","_updateRasterFunction","_callee3","_this$rasterFunction","_t3","_i$rasterFunctionDefi","_this$rasterFunction2","_r2","_s3","_n","_callee3$","_context3","type","_cachedRasterFunctionJson","JSON","stringify","toJSON","fromJSON","primaryRasters","rasters","forEach","rasterFunctionDefinition","rasterJobHandler","open","_cachedRendererJson","bandCount","some","renderer","_configDefaultRenderer","updateRasterFunction","_updateRenderer","_callee4","_ref5","_callee4$","_context4","loaded","t0","rendererJSON","bind","updateSymbolizer","_applyRenderer","_callee5","_this$bandIds","_callee5$","_context5","pixels","symbolize","simpleStretchParams","sent","applyRenderer","_x5","_x6","getTileUrl","getCompatibleTileInfo","undefined","equals","size","origin","xmin","ymax","getCompatibleFullExtent","_compatibleFullExtent","computeExtent","_fetchTile","_callee6","_n2","_r3","_args6","_callee6$","_context6","C","requestAsImageElement","responseType","query","refreshParameters","ioConfig","customFetchParameters","then","data","getTileExtentFromTileInfo","_initJobHandler","buffer","cols","rows","fetchTile","_x7","_x8","_x9","_fetchPixels","_callee7","_args7","_callee7$","_context7","fetchPixels","_x10","_x11","_x12","_identify","_callee8","_this$multidimensiona","_args8","_callee8$","_context8","hasMultidimensionalTranspose","transposedVariableName","location","areaOfInterest","contains","identify","_x13","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_shutdownJobHandler","hasStandardTime","_this$rasterInfo4","_this$rasterInfo5","_e$3","getStandardTimeValue","Date","toString","getMultidimensionalSubsetVariables","_this$rasterInfo6","_configDefaultSettings","_configDefaultInterpolation","_this2","initialize","syncJobHandler","catch","destroy","_this$sourceJSON","tileType","defaultResamplingMethod","_ref6","_e$statistics$0$max","_e$statistics","_e$statistics$0$min","_e$statistics2","statistics","dynamicRangeAdjustment","stretchType","success","colormap","_this$bandIds2","_e5$statistics","warn","error","prototype","json","origins","service","read","source","write","readOnly","types","ImageryTileMixin"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import{rasterRendererTypes as e}from\"../../rasterRenderers.js\";import r from\"../../request.js\";import i from\"../../core/Error.js\";import s from\"../../core/Logger.js\";import{isNone as n,isSome as o}from\"../../core/maybe.js\";import{property as a}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/accessorSupport/ensureType.js\";import\"../../core/arrayUtils.js\";import{subclass as l}from\"../../core/accessorSupport/decorators/subclass.js\";import{getInfo as u}from\"../../geometry/support/spatialReferenceUtils.js\";import{sanitizeUrl as m}from\"../support/arcgisLayerUrl.js\";import{url as d}from\"../support/commonProperties.js\";import c from\"../support/DimensionalDefinition.js\";import h from\"../support/MultidimensionalSubset.js\";import f from\"../support/RasterFunction.js\";import p from\"../support/RasterJobHandler.js\";import y from\"../support/TileInfo.js\";import b from\"../support/rasterDatasets/FunctionRaster.js\";import{getDefaultMultidimensionalDefinition as g,hasExcludedVariableOrDimension as J,getDefaultVariablInfo as _,isMultiSliceOrRangeDefinition as F,getSubsetVariablesFromMdInfo as I}from\"../support/rasterDatasets/multidimensionalUtils.js\";import{create as R}from\"../support/rasterFunctions/rasterFunctionHelper.js\";import{convertVectorFieldData as S}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{normalizeRendererJSON as v,getVariableRasterInfo as x,getDefaultInterpolation as D,getDefaultBandCombination as j,createDefaultRenderer as H}from\"../../renderers/support/rasterRendererHelper.js\";import T from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as w}from\"../../views/2d/engine/flow/dataUtils.js\";import N from\"../../geometry/SpatialReference.js\";const O=s.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),z=s=>{let z=class extends s{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=\"nearest\",this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=\"Function\"===t[0]?.raster?.datasetFormat}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(t){this._set(\"multidimensionalDefinition\",t),this.updateRenderer()}get tileInfo(){return this.rasterInfo?.storageInfo.tileInfo}set url(t){this._set(\"url\",m(t,O))}set renderer(t){this._set(\"renderer\",t),this.updateRenderer()}async convertVectorFieldData(t,e){if(n(t)||!this.rasterInfo)return null;const r=this._rasterJobHandler.instance,i=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:t,dataType:i},e):S(t,i)}async createFlowMesh(t,e){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(t,e):w(t.meshType,t.simulationSettings,t.flowData,o(e.signal)?e.signal:(new AbortController).signal)}normalizeRasterFetchOptions(t){const{multidimensionalInfo:e}=this.rasterInfo??{};if(n(e))return t;let r=t.multidimensionalDefinition||this.multidimensionalDefinition;!n(r)&&r.length||(r=g(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const i=t.timeExtent||this.timeExtent;if(o(r)&&o(i)&&(o(i.start)||o(i.end))){r=r.map((t=>t.clone()));const s=e.variables.find((({name:t})=>t===r[0].variableName))?.dimensions?.find((({name:t})=>\"StdTime\"===t)),a=r.find((({dimensionName:t})=>\"StdTime\"===t));if(!s||!a)return{...t,multidimensionalDefinition:null};const{start:l,end:u}=i,m=n(l)?null:l.getTime(),d=n(u)?null:u.getTime(),c=m??d,h=d??m;if(o(s.values)){const t=s.values.filter((t=>{if(Array.isArray(t)){if(c===h)return t[0]<=c&&t[1]>=c;const e=t[0]<=c&&t[1]>c||t[0]<h&&t[1]>=h,r=t[0]>=c&&t[1]<=h||t[0]<c&&t[1]>h;return e||r}return c===h?t===c:t>=c&&t<=h}));if(t.length){const e=t.sort(((t,e)=>{if(c===h)return(t[0]??t)-(e[0]??e);return Math.abs((t[1]??t)-h)-Math.abs((e[1]??e)-h)}))[0];a.values=[e]}else r=null}else if(s.hasRegularIntervals&&s.extent){const[t,e]=s.extent;c>e||h<t?r=null:a.values=c===h?[c]:[Math.max(t,c),Math.min(e,h)]}}return o(r)&&J(r,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:r}}async updateRasterFunction(){if(\"imagery-tile\"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&\"Function\"===this.raster.datasetFormat){const t=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&t&&this._set(\"rasterFunction\",f.fromJSON(t)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let t,e=this.raster,r=!1;\"Function\"===e.datasetFormat?(t=e.primaryRasters.rasters,e=t[0],r=!0):t=[e];const{rasterFunction:i}=this;if(i){const r={raster:e};t.length>1&&t.forEach((t=>r[t.url]=t));const s=R(i.rasterFunctionDefinition??i.toJSON(),r),n=new b({rasterFunction:s});n.rasterJobHandler=this._rasterJobHandler.instance,await n.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=n}else this.raster=e,this._cachedRasterFunctionJson=null;if(this._cachedRendererJson=null,!r&&!i)return;const{bandIds:s}=this,{bandCount:n}=this.raster.rasterInfo,o=s?.length?s.some((t=>t>=n)):n>=3;s&&(o||\"raster-stretch\"!==this.renderer.type)&&this._set(\"bandIds\",null),this._configDefaultRenderer(\"auto\")}async updateRenderer(){const{loaded:t,symbolizer:e}=this;if(!t||!e)return;const{rasterInfo:r}=this.raster,i=_(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name,s=v({...this.renderer.toJSON(),variableName:i});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(s))return;const n=this._rasterJobHandler.instance;n&&(e.rasterInfo=x(r,i),e.rendererJSON=s,e.bind(),await n.updateSymbolizer(e),this._cachedRendererJson=s)}async applyRenderer(t,e){const r=t&&t.pixelBlock;if(!(o(r)&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const s=this._rasterJobHandler.instance,n=this.bandIds??[];return i=s?await s.symbolize({...t,simpleStretchParams:e,bandIds:n}):this.symbolizer.symbolize({...t,simpleStretchParams:e,bandIds:n}),i}getTileUrl(t,e,r){return\"RasterTileServer\"===this.raster.datasetFormat?`${this.url}/tile/${t}/${e}/${r}`:\"\"}getCompatibleTileInfo(t,e,r=!1){if(!this.loaded||n(e))return null;if(r&&t.equals(this.spatialReference))return this.tileInfo;const i=u(t);return y.create({size:256,spatialReference:t,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:e.xmin,y:e.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,e,i,s={}){if(C(this),s.requestAsImageElement){const n=this.getTileUrl(t,e,i);return r(n,{responseType:\"image\",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:s.signal}).then((t=>t.data))}const{rasterInfo:a}=this;if(o(a.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),n(s.multidimensionalDefinition))){const r=s.tileInfo||a.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,e,i,r),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),\"raster-shaded-relief\"===this.renderer.type&&(s={...s,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,e,i,s)}async fetchPixels(t,e,r,i={}){return o(this.rasterInfo.multidimensionalInfo)&&(i=this.normalizeRasterFetchOptions(i),n(i.multidimensionalDefinition))?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),this.raster.fetchPixels(t,e,r,i))}async identify(t,e={}){const{raster:r,rasterInfo:s}=this;if(o(s.multidimensionalInfo)){if(!(s.hasMultidimensionalTranspose&&!!(F(e.multidimensionalDefinition)||e.transposedVariableName||e.timeExtent))&&(e=this.normalizeRasterFetchOptions(e),n(e.multidimensionalDefinition)))return{location:t,value:null}}const a=this.multidimensionalSubset?.areaOfInterest;if(a&&!a.contains(t))throw new i(\"imagery-tile-mixin:identify\",\"the request cannot be fulfilled when falling outside of the multidimensional subset\");return r.identify(t,e)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.rasterInfo?.multidimensionalInfo;if(n(t)||\"standard-time\"!==this.rasterInfo?.dataType)return!1;const e=this.multidimensionalDefinition,r=e?.[0]?.variableName;return t.variables.some((t=>t.name===r&&(!e?.[0].dimensionName||t.dimensions.some((t=>\"StdTime\"===t.name)))))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){const e=t??this.rasterInfo?.multidimensionalInfo;return I(this.multidimensionalSubset,e)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=g(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const t=new p;return this._rasterJobHandler.connectionPromise=t.initialize().then((()=>{C(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.renderer&&this.updateRenderer(),\"Function\"===this.raster.datasetFormat&&this.raster.syncJobHandler()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){C(this);const{raster:t}=this,e=D(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set(\"interpolation\",e)}}_configDefaultRenderer(t=\"no\"){C(this);const{rasterInfo:e}=this.raster;!this.bandIds&&e.bandCount>1&&(this.bandIds=j(e));const r=_(e,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||\"override\"===t){const t=H(e,{bandIds:this.bandIds,variableName:r});\"WCSServer\"===this.raster.datasetFormat&&\"raster-stretch\"===t.type&&((e.statistics?.[0].max??0)>1e24||(e.statistics?.[0].min??0)<-1e24)&&(t.dynamicRangeAdjustment=!0,t.statistics=null,\"none\"===t.stretchType&&(t.stretchType=\"min-max\")),this.renderer=t}const i=v({...this.renderer.toJSON(),variableName:r}),s=x(e,r);this.symbolizer?(this.symbolizer.rendererJSON=i,this.symbolizer.rasterInfo=s):this.symbolizer=new T({rendererJSON:i,rasterInfo:s});const n=this.symbolizer.bind();if(n.success){if(\"auto\"===t){const{colormap:t}=this.raster.rasterInfo,e=this.renderer;if(o(t))if(\"raster-colormap\"!==e.type)this._configDefaultRenderer(\"override\");else{const t=H(this.raster.rasterInfo);JSON.stringify(t)!==JSON.stringify(e)&&this._configDefaultRenderer(\"override\")}else if(\"raster-stretch\"===e.type){const t=this.bandIds?.length,r=e.statistics?.length;!e.dynamicRangeAdjustment&&r&&t&&r!==t&&this._configDefaultRenderer(\"override\")}}}else O.warn(\"imagery-tile-mixin\",n.error||\"The given renderer is not supported by the layer.\"),\"auto\"===t&&this._configDefaultRenderer(\"override\")}};function C(t){if(!t.raster||!t.rasterInfo)throw new i(\"imagery-tile\",\"no raster\")}return t([a()],z.prototype,\"_cachedRendererJson\",void 0),t([a()],z.prototype,\"_cachedRasterFunctionJson\",void 0),t([a()],z.prototype,\"_compatibleFullExtent\",void 0),t([a()],z.prototype,\"_isConstructedFromFunctionRaster\",void 0),t([a()],z.prototype,\"_rasterJobHandler\",void 0),t([a()],z.prototype,\"bandIds\",void 0),t([a({json:{origins:{service:{read:{source:\"copyrightText\"}}}}})],z.prototype,\"copyright\",void 0),t([a({json:{read:!1}})],z.prototype,\"fullExtent\",null),t([a()],z.prototype,\"interpolation\",void 0),t([a()],z.prototype,\"ioConfig\",void 0),t([a({type:[c],json:{write:!0}})],z.prototype,\"multidimensionalDefinition\",null),t([a({type:h,json:{write:!0}})],z.prototype,\"multidimensionalSubset\",void 0),t([a()],z.prototype,\"raster\",void 0),t([a({type:f})],z.prototype,\"rasterFunction\",void 0),t([a()],z.prototype,\"rasterInfo\",void 0),t([a()],z.prototype,\"sourceJSON\",void 0),t([a({readOnly:!0,type:N,json:{read:!1}})],z.prototype,\"spatialReference\",void 0),t([a({json:{read:!1}})],z.prototype,\"tileInfo\",null),t([a(d)],z.prototype,\"url\",null),t([a({types:e})],z.prototype,\"renderer\",null),t([a()],z.prototype,\"symbolizer\",void 0),z=t([l(\"esri.layers.ImageryTileMixin\")],z),z};export{z as ImageryTileMixin};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}