{"ast":null,"code":"import _regeneratorRuntime from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport e from \"../../../core/Error.js\";\nimport { unwrap as r, isNone as s, isSome as o } from \"../../../core/maybe.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../PixelBlock.js\";\nimport l from \"../RasterInfo.js\";\nimport f from \"../RasterStorageInfo.js\";\nimport c from \"./BaseRaster.js\";\nimport { parseSpatialReference as m, parsePAMInfo as p } from \"./pamParser.js\";\nimport { getElement as h, getElementValue as u } from \"./xmlUtilities.js\";\nimport { isPlatformLittleEndian as g } from \"../rasterFormats/utils.js\";\nimport { estimateStatisticsFromHistograms as d } from \"../rasterFunctions/stretchUtils.js\";\nimport y from \"../../../geometry/SpatialReference.js\";\nimport x from \"../../../geometry/Extent.js\";\nimport w from \"../../../geometry/Point.js\";\nvar I = new Map();\nI.set(\"Int8\", \"s8\"), I.set(\"UInt8\", \"u8\"), I.set(\"Int16\", \"s16\"), I.set(\"UInt16\", \"u16\"), I.set(\"Int32\", \"s32\"), I.set(\"UInt32\", \"u32\"), I.set(\"Float32\", \"f32\"), I.set(\"Float64\", \"f32\"), I.set(\"Double64\", \"f32\");\nvar b = new Map();\nb.set(\"none\", {\n  blobExtension: \".til\",\n  isOneSegment: !0,\n  decoderFormat: \"bip\"\n}), b.set(\"lerc\", {\n  blobExtension: \".lrc\",\n  isOneSegment: !1,\n  decoderFormat: \"lerc\"\n}), b.set(\"deflate\", {\n  blobExtension: \".pzp\",\n  isOneSegment: !0,\n  decoderFormat: \"deflate\"\n}), b.set(\"jpeg\", {\n  blobExtension: \".pjg\",\n  isOneSegment: !0,\n  decoderFormat: \"jpg\"\n});\nvar A = /*#__PURE__*/function (_c) {\n  _inherits(A, _c);\n  var _super = _createSuper(A);\n  function A() {\n    var _this;\n    _classCallCheck(this, A);\n    _this = _super.apply(this, arguments), _this._files = null, _this._storageIndex = null, _this.datasetFormat = \"MRF\";\n    return _this;\n  }\n  _createClass(A, [{\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(t) {\n        var _this$ioConfig$skipEx;\n        var e, o, _this$_parseHeader, i, a, _e$statistics, _e, n, _this$rasterInfo$stor, l, f, c, _this$rasterInfo, m, p, h, u, g, y, _t, _e2;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.init();\n            case 2:\n              this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n              e = t ? r(t.signal) : null;\n              _context.next = 6;\n              return this.request(this.url, {\n                responseType: \"xml\",\n                signal: e\n              });\n            case 6:\n              o = _context.sent;\n              _this$_parseHeader = this._parseHeader(o.data);\n              i = _this$_parseHeader.rasterInfo;\n              a = _this$_parseHeader.files;\n              if (!(-1 === ((_this$ioConfig$skipEx = this.ioConfig.skipExtensions) === null || _this$ioConfig$skipEx === void 0 ? void 0 : _this$ioConfig$skipEx.indexOf(\"aux.xml\")))) {\n                _context.next = 15;\n                break;\n              }\n              _context.next = 13;\n              return this._fetchAuxiliaryData(t);\n            case 13:\n              _e = _context.sent;\n              null != _e && (i.statistics = (_e$statistics = _e.statistics) !== null && _e$statistics !== void 0 ? _e$statistics : i.statistics, i.histograms = _e.histograms, _e.histograms && s(i.statistics) && (i.statistics = d(_e.histograms)));\n            case 15:\n              this._set(\"rasterInfo\", i), this._files = a;\n              _context.next = 18;\n              return this.request(a.index, {\n                responseType: \"array-buffer\",\n                signal: e\n              });\n            case 18:\n              n = _context.sent;\n              this._storageIndex = this._parseIndex(n.data);\n              _this$rasterInfo$stor = this.rasterInfo.storageInfo, l = _this$rasterInfo$stor.blockWidth, f = _this$rasterInfo$stor.blockHeight, c = this.rasterInfo.storageInfo.pyramidScalingFactor, _this$rasterInfo = this.rasterInfo, m = _this$rasterInfo.width, p = _this$rasterInfo.height, h = [], u = this._getBandSegmentCount();\n              g = 0, y = -1;\n              for (; g < this._storageIndex.length;) {\n                y++;\n                _t = Math.ceil(m / l / Math.pow(c, y)) - 1, _e2 = Math.ceil(p / f / Math.pow(c, y)) - 1;\n                g += (_t + 1) * (_e2 + 1) * u * 4, h.push({\n                  maxRow: _e2,\n                  maxCol: _t,\n                  minCol: 0,\n                  minRow: 0\n                });\n              }\n              this.rasterInfo.storageInfo.blockBoundary = h, y > 0 && (this.rasterInfo.storageInfo.firstPyramidLevel = 1, this.rasterInfo.storageInfo.maximumPyramidLevel = y), this.updateTileInfo();\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function open(_x) {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n  }, {\n    key: \"fetchRawTile\",\n    value: function () {\n      var _fetchRawTile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(t, e, r) {\n        var s,\n          _this$rasterInfo$stor2,\n          i,\n          a,\n          l,\n          f,\n          _this$rasterInfo2,\n          c,\n          m,\n          _this$_getTileLocatio,\n          p,\n          h,\n          u,\n          _t2,\n          g,\n          d,\n          y,\n          x,\n          w,\n          I,\n          _A,\n          F,\n          _,\n          R,\n          _t3,\n          _e3,\n          _r,\n          S,\n          j,\n          _t4,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              s = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};\n              _this$rasterInfo$stor2 = this.rasterInfo.storageInfo, i = _this$rasterInfo$stor2.blockWidth, a = _this$rasterInfo$stor2.blockHeight, l = _this$rasterInfo$stor2.blockBoundary, f = l[t];\n              if (!(!f || f.maxRow < e || f.maxCol < r || f.minRow > e || f.minCol > r)) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 4:\n              _this$rasterInfo2 = this.rasterInfo, c = _this$rasterInfo2.bandCount, m = _this$rasterInfo2.pixelType, _this$_getTileLocatio = this._getTileLocation(t, e, r), p = _this$_getTileLocatio.ranges, h = _this$_getTileLocatio.actualTileWidth, u = _this$_getTileLocatio.actualTileHeight;\n              if (!(!p || 0 === p.length)) {\n                _context2.next = 7;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 7:\n              if (!(0 === p[0].from && 0 === p[0].to)) {\n                _context2.next = 10;\n                break;\n              }\n              _t2 = new Uint8Array(i * a);\n              return _context2.abrupt(\"return\", new n({\n                width: i,\n                height: a,\n                pixels: null,\n                mask: _t2,\n                validPixelCount: 0\n              }));\n            case 10:\n              g = this.ioConfig.bandIds, d = this._getBandSegmentCount(), y = [];\n              x = 0;\n              for (x = 0; x < d; x++) (!g || g.indexOf[x] > -1) && y.push(this.request(this._files.data, {\n                range: {\n                  from: p[x].from,\n                  to: p[x].to\n                },\n                responseType: \"array-buffer\",\n                signal: s.signal\n              }));\n              _context2.next = 15;\n              return Promise.all(y);\n            case 15:\n              w = _context2.sent;\n              I = w.map(function (t) {\n                return t.data.byteLength;\n              }).reduce(function (t, e) {\n                return t + e;\n              });\n              _A = new Uint8Array(I);\n              F = 0;\n              for (x = 0; x < d; x++) _A.set(new Uint8Array(w[x].data), F), F += w[x].data.byteLength;\n              _ = b.get(this.rasterInfo.storageInfo.compression).decoderFormat;\n              _context2.next = 23;\n              return this.decodePixelBlock(_A.buffer, {\n                width: i,\n                height: a,\n                format: _,\n                planes: (g === null || g === void 0 ? void 0 : g.length) || c,\n                pixelType: m\n              });\n            case 23:\n              R = _context2.sent;\n              if (!(null == R)) {\n                _context2.next = 26;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 26:\n              if (o(this.rasterInfo.noDataValue) && \"lerc\" !== _ && !R.mask) {\n                _t3 = this.rasterInfo.noDataValue[0];\n                if (null != _t3) {\n                  _e3 = R.width * R.height, _r = new Uint8Array(_e3);\n                  if (Math.abs(_t3) > 1e24) for (x = 0; x < _e3; x++) Math.abs((R.pixels[0][x] - _t3) / _t3) > 1e-6 && (_r[x] = 1);else for (x = 0; x < _e3; x++) R.pixels[0][x] !== _t3 && (_r[x] = 1);\n                  R.mask = _r;\n                }\n              }\n              S = 0, j = 0;\n              if (h !== i || u !== a) {\n                _t4 = R.mask;\n                if (_t4) {\n                  for (x = 0; x < a; x++) if (j = x * i, x < u) for (S = h; S < i; S++) _t4[j + S] = 0;else for (S = 0; S < i; S++) _t4[j + S] = 0;\n                } else for (_t4 = new Uint8Array(i * a), R.mask = _t4, x = 0; x < u; x++) for (j = x * i, S = 0; S < h; S++) _t4[j + S] = 1;\n              }\n              return _context2.abrupt(\"return\", R);\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function fetchRawTile(_x2, _x3, _x4) {\n        return _fetchRawTile.apply(this, arguments);\n      }\n      return fetchRawTile;\n    }()\n  }, {\n    key: \"_parseIndex\",\n    value: function _parseIndex(t) {\n      if (t.byteLength % 16 > 0) throw new Error(\"invalid array buffer must be multiples of 16\");\n      var e, r, s, o, i, a;\n      if (g) {\n        for (r = new Uint8Array(t), o = new ArrayBuffer(t.byteLength), s = new Uint8Array(o), i = 0; i < t.byteLength / 4; i++) for (a = 0; a < 4; a++) s[4 * i + a] = r[4 * i + 3 - a];\n        e = new Uint32Array(o);\n      } else e = new Uint32Array(t);\n      return e;\n    }\n  }, {\n    key: \"_getBandSegmentCount\",\n    value: function _getBandSegmentCount() {\n      return b.get(this.rasterInfo.storageInfo.compression).isOneSegment ? 1 : this.rasterInfo.bandCount;\n    }\n  }, {\n    key: \"_getTileLocation\",\n    value: function _getTileLocation(t, e, r) {\n      var _this$rasterInfo$stor3 = this.rasterInfo.storageInfo,\n        s = _this$rasterInfo$stor3.blockWidth,\n        o = _this$rasterInfo$stor3.blockHeight,\n        i = _this$rasterInfo$stor3.pyramidScalingFactor,\n        _this$rasterInfo3 = this.rasterInfo,\n        a = _this$rasterInfo3.width,\n        n = _this$rasterInfo3.height,\n        l = this._getBandSegmentCount();\n      var f,\n        c,\n        m,\n        p = 0,\n        h = 0;\n      for (m = 0; m < t; m++) h = Math.pow(i, m), f = Math.ceil(a / s / h), c = Math.ceil(n / o / h), p += f * c;\n      h = Math.pow(i, t), f = Math.ceil(a / s / h), c = Math.ceil(n / o / h), p += e * f + r, p *= 4 * l;\n      var u = this._storageIndex.subarray(p, p + 4 * l);\n      var g = 0,\n        d = 0;\n      var y = [];\n      for (var _x5 = 0; _x5 < l; _x5++) g = u[4 * _x5 + 0] * Math.pow(2, 32) + u[4 * _x5 + 1], d = g + u[4 * _x5 + 2] * Math.pow(2, 32) + u[4 * _x5 + 3], y.push({\n        from: g,\n        to: d\n      });\n      return {\n        ranges: y,\n        actualTileWidth: r < f - 1 ? s : Math.ceil(a / h) - s * (f - 1),\n        actualTileHeight: e < c - 1 ? o : Math.ceil(n / h) - o * (c - 1)\n      };\n    }\n  }, {\n    key: \"_parseHeader\",\n    value: function _parseHeader(t) {\n      var r = h(t, \"MRF_META/Raster\");\n      if (!r) throw new e(\"mrf:open\", \"not a valid MRF format\");\n      var s = h(r, \"Size\"),\n        o = parseInt(s.getAttribute(\"x\"), 10),\n        i = parseInt(s.getAttribute(\"y\"), 10),\n        a = parseInt(s.getAttribute(\"c\"), 10),\n        n = (u(r, \"Compression\") || \"none\").toLowerCase();\n      if (!b.has(n)) throw new e(\"mrf:open\", \"currently does not support compression \" + n);\n      var c = u(r, \"DataType\") || \"UInt8\",\n        p = I.get(c);\n      if (null == p) throw new e(\"mrf:open\", \"currently does not support pixel type \" + c);\n      var g = h(r, \"PageSize\"),\n        d = parseInt(g.getAttribute(\"x\"), 10),\n        _A2 = parseInt(g.getAttribute(\"y\"), 10),\n        F = h(r, \"DataValues\");\n      var _, R;\n      F && (R = F.getAttribute(\"NoData\"), null != R && (_ = R.trim().split(\" \").map(function (t) {\n        return parseFloat(t);\n      })));\n      if (h(t, \"MRF_META/CachedSource\")) throw new e(\"mrf:open\", \"currently does not support MRF referencing other data files\");\n      var S = h(t, \"MRF_META/GeoTags\"),\n        j = h(S, \"BoundingBox\");\n      var k,\n        M = !1;\n      if (null != j) {\n        var _m;\n        var _t5 = parseFloat(j.getAttribute(\"minx\")),\n          _e4 = parseFloat(j.getAttribute(\"miny\")),\n          _r2 = parseFloat(j.getAttribute(\"maxx\")),\n          _s = parseFloat(j.getAttribute(\"maxy\")),\n          _o = u(S, \"Projection\") || \"\";\n        var _i = y.WGS84;\n        if (\"LOCAL_CS[]\" !== _o) {\n          if (_o.toLowerCase().startsWith(\"epsg:\")) {\n            var _t6 = Number(_o.slice(5));\n            isNaN(_t6) || 0 === _t6 || (_i = new y({\n              wkid: _t6\n            }));\n          } else _i = (_m = m(_o)) !== null && _m !== void 0 ? _m : y.WGS84;\n        } else M = !0, _i = new y({\n          wkid: 3857\n        });\n        k = new x(_t5, _e4, _r2, _s), k.spatialReference = _i;\n      } else M = !0, k = new x({\n        xmin: -.5,\n        ymin: .5 - i,\n        xmax: o - .5,\n        ymax: .5,\n        spatialReference: new y({\n          wkid: 3857\n        })\n      });\n      var T = h(t, \"MRF_META/Rsets\"),\n        C = parseInt(T && T.getAttribute(\"scale\") || \"2\", 10),\n        U = k.spatialReference,\n        B = new f({\n          origin: new w({\n            x: k.xmin,\n            y: k.ymax,\n            spatialReference: U\n          }),\n          blockWidth: d,\n          blockHeight: _A2,\n          pyramidBlockWidth: d,\n          pyramidBlockHeight: _A2,\n          compression: n,\n          pyramidScalingFactor: C\n        }),\n        E = new w({\n          x: k.width / o,\n          y: k.height / i,\n          spatialReference: U\n        }),\n        L = new l({\n          width: o,\n          height: i,\n          extent: k,\n          isPseudoSpatialReference: M,\n          spatialReference: U,\n          bandCount: a,\n          pixelType: p,\n          pixelSize: E,\n          noDataValue: _,\n          storageInfo: B\n        }),\n        P = u(t, \"datafile\"),\n        O = u(t, \"IndexFile\");\n      return {\n        rasterInfo: L,\n        files: {\n          mrf: this.url,\n          index: O || this.url.replace(\".mrf\", \".idx\"),\n          data: P || this.url.replace(\".mrf\", b.get(n).blobExtension)\n        }\n      };\n    }\n  }, {\n    key: \"_fetchAuxiliaryData\",\n    value: function () {\n      var _fetchAuxiliaryData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(t) {\n        var _yield$this$request, _e5;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.request(this.url + \".aux.xml\", {\n                responseType: \"xml\",\n                signal: t === null || t === void 0 ? void 0 : t.signal\n              });\n            case 3:\n              _yield$this$request = _context3.sent;\n              _e5 = _yield$this$request.data;\n              return _context3.abrupt(\"return\", p(_e5));\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", null);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n      function _fetchAuxiliaryData(_x6) {\n        return _fetchAuxiliaryData2.apply(this, arguments);\n      }\n      return _fetchAuxiliaryData;\n    }()\n  }]);\n  return A;\n}(c);\nt([i()], A.prototype, \"_files\", void 0), t([i()], A.prototype, \"_storageIndex\", void 0), t([i({\n  type: String,\n  json: {\n    write: !0\n  }\n})], A.prototype, \"datasetFormat\", void 0), A = t([a(\"esri.layers.support.rasterIO.MRFRaster\")], A);\nvar F = A;\nexport { F as default };","map":{"version":3,"names":["_","t","e","unwrap","r","isNone","s","isSome","o","property","i","subclass","a","n","l","f","c","parseSpatialReference","m","parsePAMInfo","p","getElement","h","getElementValue","u","isPlatformLittleEndian","g","estimateStatisticsFromHistograms","d","y","x","w","I","Map","set","b","blobExtension","isOneSegment","decoderFormat","A","_c","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_files","_storageIndex","datasetFormat","_createClass","key","value","_open","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$ioConfig$skipEx","_this$_parseHeader","_e$statistics","_e","_this$rasterInfo$stor","_this$rasterInfo","_t","_e2","wrap","_callee$","_context","prev","next","init","datasetName","url","slice","lastIndexOf","signal","request","responseType","sent","_parseHeader","data","rasterInfo","files","ioConfig","skipExtensions","indexOf","_fetchAuxiliaryData","statistics","histograms","_set","index","_parseIndex","storageInfo","blockWidth","blockHeight","pyramidScalingFactor","width","height","_getBandSegmentCount","length","Math","ceil","pow","push","maxRow","maxCol","minCol","minRow","blockBoundary","firstPyramidLevel","maximumPyramidLevel","updateTileInfo","stop","open","_x","_fetchRawTile","_callee2","_this$rasterInfo$stor2","_this$rasterInfo2","_this$_getTileLocatio","_t2","_A","F","R","_t3","_e3","_r","S","j","_t4","_args2","_callee2$","_context2","undefined","abrupt","bandCount","pixelType","_getTileLocation","ranges","actualTileWidth","actualTileHeight","from","to","Uint8Array","pixels","mask","validPixelCount","bandIds","range","Promise","all","map","byteLength","reduce","get","compression","decodePixelBlock","buffer","format","planes","noDataValue","abs","fetchRawTile","_x2","_x3","_x4","Error","ArrayBuffer","Uint32Array","_this$rasterInfo$stor3","_this$rasterInfo3","subarray","parseInt","getAttribute","toLowerCase","has","trim","split","parseFloat","k","M","_m","WGS84","startsWith","Number","isNaN","wkid","spatialReference","xmin","ymin","xmax","ymax","T","C","U","B","origin","pyramidBlockWidth","pyramidBlockHeight","E","L","extent","isPseudoSpatialReference","pixelSize","P","O","mrf","replace","_fetchAuxiliaryData2","_callee3","_yield$this$request","_e5","_callee3$","_context3","t0","_x6","prototype","type","String","json","write","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import e from\"../../../core/Error.js\";import{unwrap as r,isNone as s,isSome as o}from\"../../../core/maybe.js\";import{property as i}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../PixelBlock.js\";import l from\"../RasterInfo.js\";import f from\"../RasterStorageInfo.js\";import c from\"./BaseRaster.js\";import{parseSpatialReference as m,parsePAMInfo as p}from\"./pamParser.js\";import{getElement as h,getElementValue as u}from\"./xmlUtilities.js\";import{isPlatformLittleEndian as g}from\"../rasterFormats/utils.js\";import{estimateStatisticsFromHistograms as d}from\"../rasterFunctions/stretchUtils.js\";import y from\"../../../geometry/SpatialReference.js\";import x from\"../../../geometry/Extent.js\";import w from\"../../../geometry/Point.js\";const I=new Map;I.set(\"Int8\",\"s8\"),I.set(\"UInt8\",\"u8\"),I.set(\"Int16\",\"s16\"),I.set(\"UInt16\",\"u16\"),I.set(\"Int32\",\"s32\"),I.set(\"UInt32\",\"u32\"),I.set(\"Float32\",\"f32\"),I.set(\"Float64\",\"f32\"),I.set(\"Double64\",\"f32\");const b=new Map;b.set(\"none\",{blobExtension:\".til\",isOneSegment:!0,decoderFormat:\"bip\"}),b.set(\"lerc\",{blobExtension:\".lrc\",isOneSegment:!1,decoderFormat:\"lerc\"}),b.set(\"deflate\",{blobExtension:\".pzp\",isOneSegment:!0,decoderFormat:\"deflate\"}),b.set(\"jpeg\",{blobExtension:\".pjg\",isOneSegment:!0,decoderFormat:\"jpg\"});let A=class extends c{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat=\"MRF\"}async open(t){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const e=t?r(t.signal):null,o=await this.request(this.url,{responseType:\"xml\",signal:e}),{rasterInfo:i,files:a}=this._parseHeader(o.data);if(-1===this.ioConfig.skipExtensions?.indexOf(\"aux.xml\")){const e=await this._fetchAuxiliaryData(t);null!=e&&(i.statistics=e.statistics??i.statistics,i.histograms=e.histograms,e.histograms&&s(i.statistics)&&(i.statistics=d(e.histograms)))}this._set(\"rasterInfo\",i),this._files=a;const n=await this.request(a.index,{responseType:\"array-buffer\",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:l,blockHeight:f}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:m,height:p}=this.rasterInfo,h=[],u=this._getBandSegmentCount();let g=0,y=-1;for(;g<this._storageIndex.length;){y++;const t=Math.ceil(m/l/c**y)-1,e=Math.ceil(p/f/c**y)-1;g+=(t+1)*(e+1)*u*4,h.push({maxRow:e,maxCol:t,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(t,e,r,s={}){const{blockWidth:i,blockHeight:a,blockBoundary:l}=this.rasterInfo.storageInfo,f=l[t];if(!f||f.maxRow<e||f.maxCol<r||f.minRow>e||f.minCol>r)return null;const{bandCount:c,pixelType:m}=this.rasterInfo,{ranges:p,actualTileWidth:h,actualTileHeight:u}=this._getTileLocation(t,e,r);if(!p||0===p.length)return null;if(0===p[0].from&&0===p[0].to){const t=new Uint8Array(i*a);return new n({width:i,height:a,pixels:null,mask:t,validPixelCount:0})}const{bandIds:g}=this.ioConfig,d=this._getBandSegmentCount(),y=[];let x=0;for(x=0;x<d;x++)(!g||g.indexOf[x]>-1)&&y.push(this.request(this._files.data,{range:{from:p[x].from,to:p[x].to},responseType:\"array-buffer\",signal:s.signal}));const w=await Promise.all(y),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),A=new Uint8Array(I);let F=0;for(x=0;x<d;x++)A.set(new Uint8Array(w[x].data),F),F+=w[x].data.byteLength;const _=b.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(A.buffer,{width:i,height:a,format:_,planes:g?.length||c,pixelType:m});if(null==R)return null;if(o(this.rasterInfo.noDataValue)&&\"lerc\"!==_&&!R.mask){const t=this.rasterInfo.noDataValue[0];if(null!=t){const e=R.width*R.height,r=new Uint8Array(e);if(Math.abs(t)>1e24)for(x=0;x<e;x++)Math.abs((R.pixels[0][x]-t)/t)>1e-6&&(r[x]=1);else for(x=0;x<e;x++)R.pixels[0][x]!==t&&(r[x]=1);R.mask=r}}let S=0,j=0;if(h!==i||u!==a){let t=R.mask;if(t)for(x=0;x<a;x++)if(j=x*i,x<u)for(S=h;S<i;S++)t[j+S]=0;else for(S=0;S<i;S++)t[j+S]=0;else for(t=new Uint8Array(i*a),R.mask=t,x=0;x<u;x++)for(j=x*i,S=0;S<h;S++)t[j+S]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw new Error(\"invalid array buffer must be multiples of 16\");let e,r,s,o,i,a;if(g){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return b.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i}=this.rasterInfo.storageInfo,{width:a,height:n}=this.rasterInfo,l=this._getBandSegmentCount();let f,c,m,p=0,h=0;for(m=0;m<t;m++)h=i**m,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=f*c;h=i**t,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=e*f+r,p*=4*l;const u=this._storageIndex.subarray(p,p+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=u[4*x+0]*2**32+u[4*x+1],d=g+u[4*x+2]*2**32+u[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<f-1?s:Math.ceil(a/h)-s*(f-1),actualTileHeight:e<c-1?o:Math.ceil(n/h)-o*(c-1)}}_parseHeader(t){const r=h(t,\"MRF_META/Raster\");if(!r)throw new e(\"mrf:open\",\"not a valid MRF format\");const s=h(r,\"Size\"),o=parseInt(s.getAttribute(\"x\"),10),i=parseInt(s.getAttribute(\"y\"),10),a=parseInt(s.getAttribute(\"c\"),10),n=(u(r,\"Compression\")||\"none\").toLowerCase();if(!b.has(n))throw new e(\"mrf:open\",\"currently does not support compression \"+n);const c=u(r,\"DataType\")||\"UInt8\",p=I.get(c);if(null==p)throw new e(\"mrf:open\",\"currently does not support pixel type \"+c);const g=h(r,\"PageSize\"),d=parseInt(g.getAttribute(\"x\"),10),A=parseInt(g.getAttribute(\"y\"),10),F=h(r,\"DataValues\");let _,R;F&&(R=F.getAttribute(\"NoData\"),null!=R&&(_=R.trim().split(\" \").map((t=>parseFloat(t)))));if(h(t,\"MRF_META/CachedSource\"))throw new e(\"mrf:open\",\"currently does not support MRF referencing other data files\");const S=h(t,\"MRF_META/GeoTags\"),j=h(S,\"BoundingBox\");let k,M=!1;if(null!=j){const t=parseFloat(j.getAttribute(\"minx\")),e=parseFloat(j.getAttribute(\"miny\")),r=parseFloat(j.getAttribute(\"maxx\")),s=parseFloat(j.getAttribute(\"maxy\")),o=u(S,\"Projection\")||\"\";let i=y.WGS84;if(\"LOCAL_CS[]\"!==o)if(o.toLowerCase().startsWith(\"epsg:\")){const t=Number(o.slice(5));isNaN(t)||0===t||(i=new y({wkid:t}))}else i=m(o)??y.WGS84;else M=!0,i=new y({wkid:3857});k=new x(t,e,r,s),k.spatialReference=i}else M=!0,k=new x({xmin:-.5,ymin:.5-i,xmax:o-.5,ymax:.5,spatialReference:new y({wkid:3857})});const T=h(t,\"MRF_META/Rsets\"),C=parseInt(T&&T.getAttribute(\"scale\")||\"2\",10),U=k.spatialReference,B=new f({origin:new w({x:k.xmin,y:k.ymax,spatialReference:U}),blockWidth:d,blockHeight:A,pyramidBlockWidth:d,pyramidBlockHeight:A,compression:n,pyramidScalingFactor:C}),E=new w({x:k.width/o,y:k.height/i,spatialReference:U}),L=new l({width:o,height:i,extent:k,isPseudoSpatialReference:M,spatialReference:U,bandCount:a,pixelType:p,pixelSize:E,noDataValue:_,storageInfo:B}),P=u(t,\"datafile\"),O=u(t,\"IndexFile\");return{rasterInfo:L,files:{mrf:this.url,index:O||this.url.replace(\".mrf\",\".idx\"),data:P||this.url.replace(\".mrf\",b.get(n).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:t?.signal});return p(e)}catch{return null}}};t([i()],A.prototype,\"_files\",void 0),t([i()],A.prototype,\"_storageIndex\",void 0),t([i({type:String,json:{write:!0}})],A.prototype,\"datasetFormat\",void 0),A=t([a(\"esri.layers.support.rasterIO.MRFRaster\")],A);const F=A;export{F as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}