{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../../Color.js\";\nimport \"../../../../../intl.js\";\nimport i from \"../../../../../core/Accessor.js\";\nimport { getAccentColor as s, getContrastColor as r, getTextHaloColor as n, getTextColor as a } from \"../../../../../core/analysisThemeUtils.js\";\nimport \"../../../../../core/has.js\";\nimport o from \"../../../../../core/Handles.js\";\nimport { nextHighestPowerOfTen as l } from \"../../../../../core/mathUtils.js\";\nimport { destroyMaybe as h, isNone as m, isSome as c, unwrap as p } from \"../../../../../core/maybe.js\";\nimport { formatDecimal as d } from \"../../../../../core/quantityFormatUtils.js\";\nimport { toUnit as u } from \"../../../../../core/quantityUtils.js\";\nimport { watch as g, syncAndInitial as _ } from \"../../../../../core/reactiveUtils.js\";\nimport { convertUnit as L, preferredImperialAreaUnit as b, preferredMetricAreaUnit as v, preferredImperialLengthUnit as f, preferredMetricLengthUnit as S } from \"../../../../../core/unitUtils.js\";\nimport { property as w } from \"../../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../../core/arrayUtils.js\";\nimport { subclass as y } from \"../../../../../core/accessorSupport/decorators/subclass.js\";\nimport { f as j } from \"../../../../../chunks/mat4.js\";\nimport { c as A } from \"../../../../../chunks/mat4f64.js\";\nimport { b as C } from \"../../../../../chunks/vec3.js\";\nimport { c as P } from \"../../../../../chunks/vec3f64.js\";\nimport { midpoint as D } from \"../../support/viewUtils.js\";\nimport { LabelVisualElement as V } from \"../../../interactive/visualElements/LabelVisualElement.js\";\nimport { LineVisualElement as M } from \"../../../interactive/visualElements/LineVisualElement.js\";\nimport { MeasurementAreaVisualElement as R } from \"../../../interactive/visualElements/MeasurementAreaVisualElement.js\";\nimport { GeodesicSegment as U, EuclideanSegment as I } from \"../../../interactive/visualElements/support/Segment.js\";\nimport { RenderOccludedFlag as O } from \"../../../webgl-engine/lib/Material.js\";\nimport { createStipplePatternSimple as z } from \"../../../webgl-engine/materials/lineStippleUtils.js\";\nimport { onLocaleChange as k } from \"../../../../../intl/locale.js\";\nimport { fetchMessageBundle as q } from \"../../../../../intl/messages.js\";\nlet x = class extends i {\n  get visible() {\n    return this.analysisViewData.visible;\n  }\n  get testData() {\n    return {\n      labels: {\n        area: this._areaLabel,\n        pathLength: this._pathLengthLabel,\n        cursorSegmentLength: this._cursorSegmentLengthLabel,\n        perimeterLength: this._perimeterLengthLabel\n      }\n    };\n  }\n  constructor(e) {\n    super(e), this._handles = new o(), this._params = {\n      pathLineColor: t.toUnitRGBA(s()),\n      pathLineWidth: 3,\n      intersectingLineColor: [1, .2, 0, 1],\n      perimeterLineColor: t.toUnitRGBA(s()),\n      perimeterLineWidth: 2,\n      projectionLineColor: t.toUnitRGBA(s()),\n      projectionLineWidth: 2,\n      projectionLineStippleSize: 5,\n      areaColor1: t.toUnitRGBA(s(.5)),\n      areaColor2: t.toUnitRGBA(r(.5)),\n      labelDistance: 25\n    }, this._path = null, this._intersectedPath = null, this._perimeter = null, this._intersectedPerimeter = null, this._projectionLines = null, this._measurementArea = null, this._areaLabel = null, this._pathLengthLabel = null, this._cursorSegmentLengthLabel = null, this._perimeterLengthLabel = null, this._pathSegments = [], this._perimeterSegments = [], this._cursorSegment = null, this._origin = P(), this._originTransform = A(), this._cursorPositionRenderSpace = P(), this.messages = null, this.viewData = F, this.areaLabel = null, this.perimeterLengthLabel = null, this.loadingMessages = !0;\n  }\n  initialize() {\n    const {\n      analysisViewData: e,\n      _params: t,\n      view: i\n    } = this;\n    this._path = new M({\n      view: i,\n      attached: !0,\n      width: t.pathLineWidth,\n      color: t.pathLineColor,\n      polygonOffset: !0,\n      renderOccluded: O.OccludeAndTransparent\n    }), this._intersectedPath = new M({\n      view: i,\n      attached: !0,\n      width: t.pathLineWidth,\n      color: t.intersectingLineColor,\n      polygonOffset: !0,\n      renderOccluded: O.OccludeAndTransparent\n    }), this._perimeter = new M({\n      view: i,\n      attached: !0,\n      width: t.perimeterLineWidth,\n      color: t.perimeterLineColor,\n      polygonOffset: !0,\n      renderOccluded: O.OccludeAndTransparent\n    }), this._intersectedPerimeter = new M({\n      view: i,\n      attached: !0,\n      width: t.perimeterLineWidth,\n      color: t.intersectingLineColor,\n      polygonOffset: !0,\n      renderOccluded: O.OccludeAndTransparent\n    }), this._projectionLines = new M({\n      view: i,\n      attached: !0,\n      width: t.projectionLineWidth,\n      color: t.projectionLineColor,\n      stipplePattern: z(t.projectionLineStippleSize),\n      polygonOffset: !0,\n      renderOccluded: O.OccludeAndTransparent\n    }), this._measurementArea = new R({\n      view: i,\n      attached: !0,\n      color1: t.areaColor1,\n      color2: t.areaColor2\n    });\n    const s = {\n      attached: !0,\n      backgroundColor: n(.6),\n      textColor: a(),\n      view: i\n    };\n    this._areaLabel = new V({\n      ...s,\n      fontSize: G.Large\n    }), this._pathLengthLabel = new V({\n      ...s,\n      fontSize: G.Small\n    }), this._cursorSegmentLengthLabel = new V({\n      ...s,\n      fontSize: G.Small\n    }), this._perimeterLengthLabel = new V({\n      ...s,\n      fontSize: G.Small\n    }), this._handles.add([g(() => [e.mode, this.visible, e.unit, e.measurementData, e.cursorPoint], () => this._update(), _), g(() => i.state?.camera, () => this._updateLabels(), _), k(() => this._updateMessageBundle())]), this._updateMessageBundle();\n  }\n  destroy() {\n    this._measurementArea = h(this._measurementArea), this._path = h(this._path), this._intersectedPath = h(this._intersectedPath), this._perimeter = h(this._perimeter), this._intersectedPerimeter = h(this._intersectedPerimeter), this._areaLabel = h(this._areaLabel), this._pathLengthLabel = h(this._pathLengthLabel), this._cursorSegmentLengthLabel = h(this._cursorSegmentLengthLabel), this._perimeterLengthLabel = h(this._perimeterLengthLabel), this._projectionLines = h(this._projectionLines), this._handles = h(this._handles), this.set(\"view\", null);\n  }\n  _update() {\n    if (this.destroyed || !this.view.ready || !this.view.renderCoordsHelper) return;\n    const {\n      analysisViewData: {\n        measurementData: e\n      },\n      analysisViewData: t\n    } = this;\n    m(e) || (this._updateViewData(e, t.path, t.cursorPoint), this._updateOrigin(), this._updatePathSegments(), this._updatePerimeterSegments(), this._updateArea(), this._updateProjectionLines(), this._updateLabels());\n  }\n  _updateViewData(e, t, i) {\n    const s = t.isValidPolygon,\n      r = \"geodesic\" === e.actualMeasurementMode,\n      n = r ? e.geodesicArea : e.area;\n    let a = 1;\n    if (n) {\n      const t = this._toPreferredAreaUnit(n, this.analysisViewData.unit);\n      a = l(Math.sqrt(t.value) / Math.sqrt(300)), a *= Math.sqrt(L(1, t.unit, \"square-meters\")), a /= e.unitNormalizer.normalizeDistance(1);\n    }\n    const o = {\n      validMeasurement: s,\n      path: t,\n      pathVersion: t.version,\n      cursorPoint: i,\n      measurementData: e,\n      mode: e.actualMeasurementMode,\n      positionsGeographic: e.positionsGeographic,\n      positionsRenderCoords: e.positionsRenderCoords,\n      positionsProjected: e.positionsProjectedWorldCoords,\n      positionsFittedRenderCoords: e.positionsFittedRenderCoords,\n      intersectingSegments: r ? e.geodesicIntersectingSegments : e.intersectingSegments,\n      triangleIndices: r ? e.geodesicTriangleIndices : e.triangleIndices,\n      fittingMode: e.fittingMode,\n      areaCentroid: r ? e.geodesicAreaCentroidRenderCoords : e.areaCentroidRenderCoords,\n      pathLengthLabelSegmentIndex: s ? 0 : t.numVertices - 2,\n      perimeterLengthLabelSegmentIndex: 0,\n      checkerSize: a\n    };\n    this._set(\"viewData\", o);\n  }\n  _updateOrigin() {\n    const e = this.viewData;\n    D(e.positionsRenderCoords, this._origin), j(this._originTransform, this._origin), this._measurementArea.transform = this._originTransform, this._projectionLines.transform = this._originTransform;\n  }\n  _createSegments(e) {\n    const t = this.viewData,\n      i = t.path,\n      s = this.view.renderCoordsHelper.spatialReference,\n      r = t.mode,\n      n = [],\n      a = [],\n      o = [],\n      l = t.validMeasurement ? i.numVertices : i.numVertices - 1;\n    for (let h = 0; h < l; ++h) {\n      const l = t[e][h],\n        m = t[e][(h + 1) % i.numVertices];\n      let c = null;\n      switch (r) {\n        case \"euclidean\":\n          c = new I(l, m);\n          break;\n        case \"geodesic\":\n          c = new U(l, m, s);\n      }\n      t.intersectingSegments.has(h) ? o.push(c) : a.push(c), n.push(c);\n    }\n    return {\n      all: n,\n      nonIntersecting: a,\n      intersecting: o\n    };\n  }\n  _updatePathSegments() {\n    const {\n        view: {\n          renderCoordsHelper: e\n        },\n        viewData: t,\n        visible: i\n      } = this,\n      s = this._createSegments(\"positionsRenderCoords\"),\n      {\n        cursorPoint: r,\n        mode: n,\n        path: a\n      } = t,\n      o = !a.isValidPolygon,\n      l = e.spatialReference;\n    if (this._cursorSegment = null, a.numVertices > 0 && o && c(r)) {\n      if (e.toRenderCoords(r, this._cursorPositionRenderSpace)) {\n        const e = t.positionsRenderCoords[a.numVertices - 1],\n          i = this._cursorPositionRenderSpace;\n        let r = null;\n        switch (n) {\n          case \"euclidean\":\n            r = new I(e, i);\n            break;\n          case \"geodesic\":\n            r = new U(e, i, l);\n        }\n        s.nonIntersecting.push(r), this._cursorSegment = r;\n      }\n    }\n    this._path.setGeometryFromSegments(s.nonIntersecting, this._origin), this._path.visible = i, this._intersectedPath.setGeometryFromSegments(s.intersecting, this._origin), this._intersectedPath.visible = i, this._pathSegments = s.all;\n  }\n  _updatePerimeterSegments() {\n    const e = this.visible && \"euclidean\" === this.viewData.mode,\n      t = this._createSegments(\"positionsFittedRenderCoords\");\n    this._perimeter.setGeometryFromSegments(t.nonIntersecting, this._origin), this._perimeter.visible = e, this._intersectedPerimeter.setGeometryFromSegments(t.intersecting, this._origin), this._intersectedPerimeter.visible = e, this._perimeterSegments = t.all;\n  }\n  _updateArea() {\n    const e = this.viewData;\n    switch (e.mode) {\n      case \"euclidean\":\n        this._updateAreaEuclidean(e);\n        break;\n      case \"geodesic\":\n        this._updateAreaGeodesic();\n    }\n  }\n  _updateAreaEuclidean(e) {\n    const t = this.visible;\n    e.validMeasurement && 0 === e.intersectingSegments.size && e.triangleIndices ? (this._measurementArea.geometry = {\n      uv: e.positionsProjected,\n      position: e.positionsFittedRenderCoords,\n      triangleIndices: e.triangleIndices\n    }, this._measurementArea.size = [e.checkerSize, e.checkerSize], this._measurementArea.visible = t) : this._measurementArea.visible = !1;\n  }\n  _updateAreaGeodesic() {\n    this._measurementArea.visible = !1;\n  }\n  _updateProjectionLines() {\n    const e = this.viewData,\n      t = this.visible,\n      i = e.path,\n      s = e.mode;\n    if (i.numVertices > 0 && e.validMeasurement && \"euclidean\" === s) {\n      const s = [];\n      for (let t = 0; t < i.numVertices; ++t) {\n        const i = P();\n        C(i, e.positionsRenderCoords[t], this._origin);\n        const r = P();\n        C(r, e.positionsFittedRenderCoords[t], this._origin), s.push([i, r]);\n      }\n      this._projectionLines.geometry = s, this._projectionLines.visible = t;\n    } else this._projectionLines.geometry = null, this._projectionLines.visible = !1;\n  }\n  _updateLabels() {\n    if (this.destroyed) return;\n    const {\n        viewData: e\n      } = this,\n      {\n        measurementData: t,\n        mode: i,\n        path: s\n      } = e;\n    if (!s) return;\n    const r = !s.isValidPolygon,\n      n = this.visible,\n      a = this._formatAreaLabel(this.messages, \"geodesic\" === i ? t.geodesicArea : t.area, this.analysisViewData.unit);\n    c(a) ? (this._areaLabel.geometry = {\n      type: \"point\",\n      point: e.areaCentroid\n    }, this._areaLabel.text = a, this._areaLabel.visible = e.validMeasurement && 0 === e.intersectingSegments.size && n) : this._areaLabel.visible = !1, this._set(\"areaLabel\", p(a));\n    const o = this._formatLengthLabel(this.messages, \"geodesic\" === i ? t.geodesicPathLength : t.pathLength, this.analysisViewData.unit);\n    if (c(o) && e.pathLengthLabelSegmentIndex >= 0 && e.pathLengthLabelSegmentIndex < this._pathSegments.length) {\n      const t = this._pathSegments[e.pathLengthLabelSegmentIndex],\n        i = c(this._cursorSegment) ? this._cursorSegment : T;\n      this._pathLengthLabel.distance = this._params.labelDistance, this._pathLengthLabel.geometry = {\n        type: \"corner\",\n        left: t,\n        right: i\n      }, this._pathLengthLabel.text = o, this._pathLengthLabel.visible = r && s.numVertices > 0 && n;\n    } else this._pathLengthLabel.visible = !1;\n    const l = \"geodesic\" === i ? e.measurementData.geodesicCursorSegmentLength : e.measurementData.cursorSegmentLength;\n    if (c(l)) {\n      const e = this._formatLengthLabel(this.messages, l, this.analysisViewData.unit);\n      this._cursorSegmentLengthLabel.distance = this._params.labelDistance, this._cursorSegmentLengthLabel.geometry = c(this._cursorSegment) ? {\n        type: \"segment\",\n        segment: this._cursorSegment,\n        sampleLocation: \"end\"\n      } : null, this._cursorSegmentLengthLabel.anchor = \"bottom\", this._cursorSegmentLengthLabel.text = p(e), this._cursorSegmentLengthLabel.visible = r && 0 !== l.value && n;\n    } else this._cursorSegmentLengthLabel.visible = !1;\n    this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel) && (this._cursorSegmentLengthLabel.visible = !1), this._pathLengthLabel.overlaps(this._areaLabel) && (this._pathLengthLabel.visible = !1);\n    const h = \"geodesic\" === e.mode,\n      m = h ? t.geodesicPathLength : t.perimeterLength,\n      d = this._formatLengthLabel(this.messages, m, this.analysisViewData.unit);\n    if (this._set(\"perimeterLengthLabel\", p(d)), e.validMeasurement && 0 === e.intersectingSegments.size) {\n      this._perimeterLengthLabel.distance = this._params.labelDistance, this._perimeterLengthLabel.anchor = \"top\", this._perimeterLengthLabel.text = p(d), this._perimeterLengthLabel.visible = !0;\n      let t = !0;\n      for (let i = 0; i < e.path.numVertices; ++i) {\n        const s = (e.perimeterLengthLabelSegmentIndex + i) % e.path.numVertices,\n          r = h ? this._pathSegments[s] : this._perimeterSegments[s];\n        if (t = !0, this._perimeterLengthLabel.geometry = {\n          type: \"segment\",\n          segment: r,\n          sampleLocation: \"center\"\n        }, !this._perimeterLengthLabel.overlaps(this._areaLabel)) break;\n        t = !1;\n      }\n      this._perimeterLengthLabel.visible = t && n;\n    } else this._perimeterLengthLabel.visible = !1;\n  }\n  _toPreferredAreaUnit(e, t) {\n    return u(e, this._preferredAreaUnit(e, t));\n  }\n  _preferredAreaUnit(e, t) {\n    switch (t) {\n      case \"metric\":\n        return v(e.value, e.unit);\n      case \"imperial\":\n        return b(e.value, e.unit);\n      default:\n        return t;\n    }\n  }\n  _preferredLengthUnit(e, t) {\n    const i = this._deriveLengthUnitFromAreaUnit(t);\n    switch (i) {\n      case \"metric\":\n        return S(e.value, e.unit);\n      case \"imperial\":\n        return f(e.value, e.unit);\n      default:\n        return i;\n    }\n  }\n  _deriveLengthUnitFromAreaUnit(e) {\n    switch (e) {\n      case \"metric\":\n      case \"ares\":\n      case \"hectares\":\n        return \"metric\";\n      case \"imperial\":\n      case \"acres\":\n        return \"imperial\";\n      case \"square-inches\":\n        return \"inches\";\n      case \"square-feet\":\n        return \"feet\";\n      case \"square-yards\":\n        return \"yards\";\n      case \"square-miles\":\n        return \"miles\";\n      case \"square-us-feet\":\n        return \"us-feet\";\n      case \"square-millimeters\":\n        return \"millimeters\";\n      case \"square-centimeters\":\n        return \"centimeters\";\n      case \"square-decimeters\":\n        return \"decimeters\";\n      case \"square-meters\":\n        return \"meters\";\n      case \"square-kilometers\":\n        return \"kilometers\";\n    }\n    throw new Error(\"unhandled area unit\");\n  }\n  _formatAreaLabel(e, t, i) {\n    return e && t && d(e, t, this._preferredAreaUnit(t, i));\n  }\n  _formatLengthLabel(e, t, i) {\n    return e && t && d(e, t, this._preferredLengthUnit(t, i));\n  }\n  _updateMessageBundle() {\n    this.loadingMessages = !0, q(\"esri/core/t9n/Units\").then(e => {\n      this.messages = e, this.view && this._update();\n    }).finally(() => {\n      this.loadingMessages = !1;\n    });\n  }\n};\nvar G;\ne([w()], x.prototype, \"view\", void 0), e([w()], x.prototype, \"messages\", void 0), e([w()], x.prototype, \"analysis\", void 0), e([w()], x.prototype, \"viewData\", void 0), e([w()], x.prototype, \"analysisViewData\", void 0), e([w({\n  readOnly: !0\n})], x.prototype, \"areaLabel\", void 0), e([w({\n  readOnly: !0\n})], x.prototype, \"perimeterLengthLabel\", void 0), e([w()], x.prototype, \"loadingMessages\", void 0), e([w()], x.prototype, \"visible\", null), x = e([y(\"esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization\")], x), function (e) {\n  e[e.Small = 12] = \"Small\", e[e.Large = 16] = \"Large\";\n}(G || (G = {}));\nconst F = {\n    validMeasurement: !1,\n    path: null,\n    pathVersion: -1,\n    cursorPoint: null,\n    measurementData: null,\n    mode: null,\n    positionsGeographic: null,\n    positionsRenderCoords: null,\n    positionsProjected: null,\n    positionsFittedRenderCoords: null,\n    intersectingSegments: null,\n    triangleIndices: null,\n    fittingMode: null,\n    areaCentroid: null,\n    pathLengthLabelSegmentIndex: null,\n    perimeterLengthLabelSegmentIndex: null,\n    checkerSize: null\n  },\n  T = new I(P(), P());\nexport { x as AreaMeasurementVisualization };","map":{"version":3,"names":["_","e","t","i","getAccentColor","s","getContrastColor","r","getTextHaloColor","n","getTextColor","a","o","nextHighestPowerOfTen","l","destroyMaybe","h","isNone","m","isSome","c","unwrap","p","formatDecimal","d","toUnit","u","watch","g","syncAndInitial","convertUnit","L","preferredImperialAreaUnit","b","preferredMetricAreaUnit","v","preferredImperialLengthUnit","f","preferredMetricLengthUnit","S","property","w","subclass","y","j","A","C","P","midpoint","D","LabelVisualElement","V","LineVisualElement","M","MeasurementAreaVisualElement","R","GeodesicSegment","U","EuclideanSegment","I","RenderOccludedFlag","O","createStipplePatternSimple","z","onLocaleChange","k","fetchMessageBundle","q","x","visible","analysisViewData","testData","labels","area","_areaLabel","pathLength","_pathLengthLabel","cursorSegmentLength","_cursorSegmentLengthLabel","perimeterLength","_perimeterLengthLabel","constructor","_handles","_params","pathLineColor","toUnitRGBA","pathLineWidth","intersectingLineColor","perimeterLineColor","perimeterLineWidth","projectionLineColor","projectionLineWidth","projectionLineStippleSize","areaColor1","areaColor2","labelDistance","_path","_intersectedPath","_perimeter","_intersectedPerimeter","_projectionLines","_measurementArea","_pathSegments","_perimeterSegments","_cursorSegment","_origin","_originTransform","_cursorPositionRenderSpace","messages","viewData","F","areaLabel","perimeterLengthLabel","loadingMessages","initialize","view","attached","width","color","polygonOffset","renderOccluded","OccludeAndTransparent","stipplePattern","color1","color2","backgroundColor","textColor","fontSize","G","Large","Small","add","mode","unit","measurementData","cursorPoint","_update","state","camera","_updateLabels","_updateMessageBundle","destroy","set","destroyed","ready","renderCoordsHelper","_updateViewData","path","_updateOrigin","_updatePathSegments","_updatePerimeterSegments","_updateArea","_updateProjectionLines","isValidPolygon","actualMeasurementMode","geodesicArea","_toPreferredAreaUnit","Math","sqrt","value","unitNormalizer","normalizeDistance","validMeasurement","pathVersion","version","positionsGeographic","positionsRenderCoords","positionsProjected","positionsProjectedWorldCoords","positionsFittedRenderCoords","intersectingSegments","geodesicIntersectingSegments","triangleIndices","geodesicTriangleIndices","fittingMode","areaCentroid","geodesicAreaCentroidRenderCoords","areaCentroidRenderCoords","pathLengthLabelSegmentIndex","numVertices","perimeterLengthLabelSegmentIndex","checkerSize","_set","transform","_createSegments","spatialReference","has","push","all","nonIntersecting","intersecting","toRenderCoords","setGeometryFromSegments","_updateAreaEuclidean","_updateAreaGeodesic","size","geometry","uv","position","_formatAreaLabel","type","point","text","_formatLengthLabel","geodesicPathLength","length","T","distance","left","right","geodesicCursorSegmentLength","segment","sampleLocation","anchor","overlaps","_preferredAreaUnit","_preferredLengthUnit","_deriveLengthUnitFromAreaUnit","Error","then","finally","prototype","readOnly","AreaMeasurementVisualization"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/analysis/AreaMeasurement/support/AreaMeasurementVisualization.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../../chunks/tslib.es6.js\";import t from\"../../../../../Color.js\";import\"../../../../../intl.js\";import i from\"../../../../../core/Accessor.js\";import{getAccentColor as s,getContrastColor as r,getTextHaloColor as n,getTextColor as a}from\"../../../../../core/analysisThemeUtils.js\";import\"../../../../../core/has.js\";import o from\"../../../../../core/Handles.js\";import{nextHighestPowerOfTen as l}from\"../../../../../core/mathUtils.js\";import{destroyMaybe as h,isNone as m,isSome as c,unwrap as p}from\"../../../../../core/maybe.js\";import{formatDecimal as d}from\"../../../../../core/quantityFormatUtils.js\";import{toUnit as u}from\"../../../../../core/quantityUtils.js\";import{watch as g,syncAndInitial as _}from\"../../../../../core/reactiveUtils.js\";import{convertUnit as L,preferredImperialAreaUnit as b,preferredMetricAreaUnit as v,preferredImperialLengthUnit as f,preferredMetricLengthUnit as S}from\"../../../../../core/unitUtils.js\";import{property as w}from\"../../../../../core/accessorSupport/decorators/property.js\";import\"../../../../../core/accessorSupport/ensureType.js\";import\"../../../../../core/arrayUtils.js\";import{subclass as y}from\"../../../../../core/accessorSupport/decorators/subclass.js\";import{f as j}from\"../../../../../chunks/mat4.js\";import{c as A}from\"../../../../../chunks/mat4f64.js\";import{b as C}from\"../../../../../chunks/vec3.js\";import{c as P}from\"../../../../../chunks/vec3f64.js\";import{midpoint as D}from\"../../support/viewUtils.js\";import{LabelVisualElement as V}from\"../../../interactive/visualElements/LabelVisualElement.js\";import{LineVisualElement as M}from\"../../../interactive/visualElements/LineVisualElement.js\";import{MeasurementAreaVisualElement as R}from\"../../../interactive/visualElements/MeasurementAreaVisualElement.js\";import{GeodesicSegment as U,EuclideanSegment as I}from\"../../../interactive/visualElements/support/Segment.js\";import{RenderOccludedFlag as O}from\"../../../webgl-engine/lib/Material.js\";import{createStipplePatternSimple as z}from\"../../../webgl-engine/materials/lineStippleUtils.js\";import{onLocaleChange as k}from\"../../../../../intl/locale.js\";import{fetchMessageBundle as q}from\"../../../../../intl/messages.js\";let x=class extends i{get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(e){super(e),this._handles=new o,this._params={pathLineColor:t.toUnitRGBA(s()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:t.toUnitRGBA(s()),perimeterLineWidth:2,projectionLineColor:t.toUnitRGBA(s()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:t.toUnitRGBA(s(.5)),areaColor2:t.toUnitRGBA(r(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=P(),this._originTransform=A(),this._cursorPositionRenderSpace=P(),this.messages=null,this.viewData=F,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:e,_params:t,view:i}=this;this._path=new M({view:i,attached:!0,width:t.pathLineWidth,color:t.pathLineColor,polygonOffset:!0,renderOccluded:O.OccludeAndTransparent}),this._intersectedPath=new M({view:i,attached:!0,width:t.pathLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:O.OccludeAndTransparent}),this._perimeter=new M({view:i,attached:!0,width:t.perimeterLineWidth,color:t.perimeterLineColor,polygonOffset:!0,renderOccluded:O.OccludeAndTransparent}),this._intersectedPerimeter=new M({view:i,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:O.OccludeAndTransparent}),this._projectionLines=new M({view:i,attached:!0,width:t.projectionLineWidth,color:t.projectionLineColor,stipplePattern:z(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:O.OccludeAndTransparent}),this._measurementArea=new R({view:i,attached:!0,color1:t.areaColor1,color2:t.areaColor2});const s={attached:!0,backgroundColor:n(.6),textColor:a(),view:i};this._areaLabel=new V({...s,fontSize:G.Large}),this._pathLengthLabel=new V({...s,fontSize:G.Small}),this._cursorSegmentLengthLabel=new V({...s,fontSize:G.Small}),this._perimeterLengthLabel=new V({...s,fontSize:G.Small}),this._handles.add([g((()=>[e.mode,this.visible,e.unit,e.measurementData,e.cursorPoint]),(()=>this._update()),_),g((()=>i.state?.camera),(()=>this._updateLabels()),_),k((()=>this._updateMessageBundle()))]),this._updateMessageBundle()}destroy(){this._measurementArea=h(this._measurementArea),this._path=h(this._path),this._intersectedPath=h(this._intersectedPath),this._perimeter=h(this._perimeter),this._intersectedPerimeter=h(this._intersectedPerimeter),this._areaLabel=h(this._areaLabel),this._pathLengthLabel=h(this._pathLengthLabel),this._cursorSegmentLengthLabel=h(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=h(this._perimeterLengthLabel),this._projectionLines=h(this._projectionLines),this._handles=h(this._handles),this.set(\"view\",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:e},analysisViewData:t}=this;m(e)||(this._updateViewData(e,t.path,t.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t,i){const s=t.isValidPolygon,r=\"geodesic\"===e.actualMeasurementMode,n=r?e.geodesicArea:e.area;let a=1;if(n){const t=this._toPreferredAreaUnit(n,this.analysisViewData.unit);a=l(Math.sqrt(t.value)/Math.sqrt(300)),a*=Math.sqrt(L(1,t.unit,\"square-meters\")),a/=e.unitNormalizer.normalizeDistance(1)}const o={validMeasurement:s,path:t,pathVersion:t.version,cursorPoint:i,measurementData:e,mode:e.actualMeasurementMode,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:r?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:r?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:r?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:s?0:t.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:a};this._set(\"viewData\",o)}_updateOrigin(){const e=this.viewData;D(e.positionsRenderCoords,this._origin),j(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,i=t.path,s=this.view.renderCoordsHelper.spatialReference,r=t.mode,n=[],a=[],o=[],l=t.validMeasurement?i.numVertices:i.numVertices-1;for(let h=0;h<l;++h){const l=t[e][h],m=t[e][(h+1)%i.numVertices];let c=null;switch(r){case\"euclidean\":c=new I(l,m);break;case\"geodesic\":c=new U(l,m,s)}t.intersectingSegments.has(h)?o.push(c):a.push(c),n.push(c)}return{all:n,nonIntersecting:a,intersecting:o}}_updatePathSegments(){const{view:{renderCoordsHelper:e},viewData:t,visible:i}=this,s=this._createSegments(\"positionsRenderCoords\"),{cursorPoint:r,mode:n,path:a}=t,o=!a.isValidPolygon,l=e.spatialReference;if(this._cursorSegment=null,a.numVertices>0&&o&&c(r)){if(e.toRenderCoords(r,this._cursorPositionRenderSpace)){const e=t.positionsRenderCoords[a.numVertices-1],i=this._cursorPositionRenderSpace;let r=null;switch(n){case\"euclidean\":r=new I(e,i);break;case\"geodesic\":r=new U(e,i,l)}s.nonIntersecting.push(r),this._cursorSegment=r}}this._path.setGeometryFromSegments(s.nonIntersecting,this._origin),this._path.visible=i,this._intersectedPath.setGeometryFromSegments(s.intersecting,this._origin),this._intersectedPath.visible=i,this._pathSegments=s.all}_updatePerimeterSegments(){const e=this.visible&&\"euclidean\"===this.viewData.mode,t=this._createSegments(\"positionsFittedRenderCoords\");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case\"euclidean\":this._updateAreaEuclidean(e);break;case\"geodesic\":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,i=e.path,s=e.mode;if(i.numVertices>0&&e.validMeasurement&&\"euclidean\"===s){const s=[];for(let t=0;t<i.numVertices;++t){const i=P();C(i,e.positionsRenderCoords[t],this._origin);const r=P();C(r,e.positionsFittedRenderCoords[t],this._origin),s.push([i,r])}this._projectionLines.geometry=s,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:e}=this,{measurementData:t,mode:i,path:s}=e;if(!s)return;const r=!s.isValidPolygon,n=this.visible,a=this._formatAreaLabel(this.messages,\"geodesic\"===i?t.geodesicArea:t.area,this.analysisViewData.unit);c(a)?(this._areaLabel.geometry={type:\"point\",point:e.areaCentroid},this._areaLabel.text=a,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&n):this._areaLabel.visible=!1,this._set(\"areaLabel\",p(a));const o=this._formatLengthLabel(this.messages,\"geodesic\"===i?t.geodesicPathLength:t.pathLength,this.analysisViewData.unit);if(c(o)&&e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const t=this._pathSegments[e.pathLengthLabelSegmentIndex],i=c(this._cursorSegment)?this._cursorSegment:T;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:\"corner\",left:t,right:i},this._pathLengthLabel.text=o,this._pathLengthLabel.visible=r&&s.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const l=\"geodesic\"===i?e.measurementData.geodesicCursorSegmentLength:e.measurementData.cursorSegmentLength;if(c(l)){const e=this._formatLengthLabel(this.messages,l,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=c(this._cursorSegment)?{type:\"segment\",segment:this._cursorSegment,sampleLocation:\"end\"}:null,this._cursorSegmentLengthLabel.anchor=\"bottom\",this._cursorSegmentLengthLabel.text=p(e),this._cursorSegmentLengthLabel.visible=r&&0!==l.value&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const h=\"geodesic\"===e.mode,m=h?t.geodesicPathLength:t.perimeterLength,d=this._formatLengthLabel(this.messages,m,this.analysisViewData.unit);if(this._set(\"perimeterLengthLabel\",p(d)),e.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor=\"top\",this._perimeterLengthLabel.text=p(d),this._perimeterLengthLabel.visible=!0;let t=!0;for(let i=0;i<e.path.numVertices;++i){const s=(e.perimeterLengthLabelSegmentIndex+i)%e.path.numVertices,r=h?this._pathSegments[s]:this._perimeterSegments[s];if(t=!0,this._perimeterLengthLabel.geometry={type:\"segment\",segment:r,sampleLocation:\"center\"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;t=!1}this._perimeterLengthLabel.visible=t&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(e,t){return u(e,this._preferredAreaUnit(e,t))}_preferredAreaUnit(e,t){switch(t){case\"metric\":return v(e.value,e.unit);case\"imperial\":return b(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const i=this._deriveLengthUnitFromAreaUnit(t);switch(i){case\"metric\":return S(e.value,e.unit);case\"imperial\":return f(e.value,e.unit);default:return i}}_deriveLengthUnitFromAreaUnit(e){switch(e){case\"metric\":case\"ares\":case\"hectares\":return\"metric\";case\"imperial\":case\"acres\":return\"imperial\";case\"square-inches\":return\"inches\";case\"square-feet\":return\"feet\";case\"square-yards\":return\"yards\";case\"square-miles\":return\"miles\";case\"square-us-feet\":return\"us-feet\";case\"square-millimeters\":return\"millimeters\";case\"square-centimeters\":return\"centimeters\";case\"square-decimeters\":return\"decimeters\";case\"square-meters\":return\"meters\";case\"square-kilometers\":return\"kilometers\"}throw new Error(\"unhandled area unit\")}_formatAreaLabel(e,t,i){return e&&t&&d(e,t,this._preferredAreaUnit(t,i))}_formatLengthLabel(e,t,i){return e&&t&&d(e,t,this._preferredLengthUnit(t,i))}_updateMessageBundle(){this.loadingMessages=!0,q(\"esri/core/t9n/Units\").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};var G;e([w()],x.prototype,\"view\",void 0),e([w()],x.prototype,\"messages\",void 0),e([w()],x.prototype,\"analysis\",void 0),e([w()],x.prototype,\"viewData\",void 0),e([w()],x.prototype,\"analysisViewData\",void 0),e([w({readOnly:!0})],x.prototype,\"areaLabel\",void 0),e([w({readOnly:!0})],x.prototype,\"perimeterLengthLabel\",void 0),e([w()],x.prototype,\"loadingMessages\",void 0),e([w()],x.prototype,\"visible\",null),x=e([y(\"esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization\")],x),function(e){e[e.Small=12]=\"Small\",e[e.Large=16]=\"Large\"}(G||(G={}));const F={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},T=new I(P(),P());export{x as AreaMeasurementVisualization};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}