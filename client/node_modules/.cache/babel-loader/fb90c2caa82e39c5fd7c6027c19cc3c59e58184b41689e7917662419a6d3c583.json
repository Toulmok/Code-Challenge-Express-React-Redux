{"ast":null,"code":"import _classCallCheck from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nvar t;\n!function (t) {\n  t[t.JSON = 1313821514] = \"JSON\", t[t.BIN = 5130562] = \"BIN\";\n}(t || (t = {}));\nvar e = /*#__PURE__*/function () {\n  function e(i, r) {\n    _classCallCheck(this, e);\n    if (!i) throw new Error(\"GLB requires a JSON gltf chunk\");\n    this._length = e.HEADER_SIZE, this._length += e.CHUNK_HEADER_SIZE;\n    var n = this._textToArrayBuffer(i);\n    if (this._length += this._alignTo(n.byteLength, 4), r && (this._length += e.CHUNK_HEADER_SIZE, this._length += r.byteLength, r.byteLength % 4)) throw new Error(\"Expected BIN chunk length to be divisible by 4 at this point\");\n    this.buffer = new ArrayBuffer(this._length), this._outView = new DataView(this.buffer), this._writeHeader();\n    var h = this._writeChunk(n, 12, t.JSON, 32);\n    r && this._writeChunk(r, h, t.BIN);\n  }\n  _createClass(e, [{\n    key: \"_writeHeader\",\n    value: function _writeHeader() {\n      this._outView.setUint32(0, e.MAGIC, !0), this._outView.setUint32(4, e.VERSION, !0), this._outView.setUint32(8, this._length, !0);\n    }\n  }, {\n    key: \"_writeChunk\",\n    value: function _writeChunk(t, _e, i) {\n      var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var n = this._alignTo(t.byteLength, 4);\n      for (this._outView.setUint32(_e, n, !0), this._outView.setUint32(_e += 4, i, !0), this._writeArrayBuffer(this._outView.buffer, t, _e += 4, 0, t.byteLength), _e += t.byteLength; _e % 4;) r && this._outView.setUint8(_e, r), _e++;\n      return _e;\n    }\n  }, {\n    key: \"_writeArrayBuffer\",\n    value: function _writeArrayBuffer(t, _e2, i, r, n) {\n      new Uint8Array(t, i, n).set(new Uint8Array(_e2, r, n), 0);\n    }\n  }, {\n    key: \"_textToArrayBuffer\",\n    value: function _textToArrayBuffer(t) {\n      return new TextEncoder().encode(t).buffer;\n    }\n  }, {\n    key: \"_alignTo\",\n    value: function _alignTo(t, _e3) {\n      return _e3 * Math.ceil(t / _e3);\n    }\n  }]);\n  return e;\n}();\ne.HEADER_SIZE = 12, e.CHUNK_HEADER_SIZE = 8, e.MAGIC = 1179937895, e.VERSION = 2;\nexport { e as GLB };","map":{"version":3,"names":["t","JSON","BIN","e","i","r","_classCallCheck","Error","_length","HEADER_SIZE","CHUNK_HEADER_SIZE","n","_textToArrayBuffer","_alignTo","byteLength","buffer","ArrayBuffer","_outView","DataView","_writeHeader","h","_writeChunk","_createClass","key","value","setUint32","MAGIC","VERSION","arguments","length","undefined","_writeArrayBuffer","setUint8","Uint8Array","set","TextEncoder","encode","Math","ceil","GLB"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/geometry/support/meshUtils/exporters/gltf/glb.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nvar t;!function(t){t[t.JSON=1313821514]=\"JSON\",t[t.BIN=5130562]=\"BIN\"}(t||(t={}));class e{constructor(i,r){if(!i)throw new Error(\"GLB requires a JSON gltf chunk\");this._length=e.HEADER_SIZE,this._length+=e.CHUNK_HEADER_SIZE;const n=this._textToArrayBuffer(i);if(this._length+=this._alignTo(n.byteLength,4),r&&(this._length+=e.CHUNK_HEADER_SIZE,this._length+=r.byteLength,r.byteLength%4))throw new Error(\"Expected BIN chunk length to be divisible by 4 at this point\");this.buffer=new ArrayBuffer(this._length),this._outView=new DataView(this.buffer),this._writeHeader();const h=this._writeChunk(n,12,t.JSON,32);r&&this._writeChunk(r,h,t.BIN)}_writeHeader(){this._outView.setUint32(0,e.MAGIC,!0),this._outView.setUint32(4,e.VERSION,!0),this._outView.setUint32(8,this._length,!0)}_writeChunk(t,e,i,r=0){const n=this._alignTo(t.byteLength,4);for(this._outView.setUint32(e,n,!0),this._outView.setUint32(e+=4,i,!0),this._writeArrayBuffer(this._outView.buffer,t,e+=4,0,t.byteLength),e+=t.byteLength;e%4;)r&&this._outView.setUint8(e,r),e++;return e}_writeArrayBuffer(t,e,i,r,n){new Uint8Array(t,i,n).set(new Uint8Array(e,r,n),0)}_textToArrayBuffer(t){return(new TextEncoder).encode(t).buffer}_alignTo(t,e){return e*Math.ceil(t/e)}}e.HEADER_SIZE=12,e.CHUNK_HEADER_SIZE=8,e.MAGIC=1179937895,e.VERSION=2;export{e as GLB};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}