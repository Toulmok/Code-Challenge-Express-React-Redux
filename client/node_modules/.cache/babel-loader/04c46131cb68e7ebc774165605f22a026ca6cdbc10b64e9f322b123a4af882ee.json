{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../../tiling/PagedTileQueue.js\";\nimport \"../../../tiling/TileInfoView.js\";\nimport e from \"../../../tiling/TileKey.js\";\nimport \"../../../tiling/TileQueue.js\";\nimport \"../../../tiling/TileStrategy.js\";\nimport { PATCH_PIXEL_BUFFER_ALLOC_SIZE as t, TILE_SIZE as r } from \"../definitions.js\";\nimport { getDisplayIdTexel as i } from \"../DisplayId.js\";\nimport { WGLGeometryType as s } from \"../enums.js\";\nimport { getStrides as n } from \"../Utils.js\";\nimport { VertexDataWriter as a } from \"./VertexDataWriter.js\";\nimport { getPow2NeighborKey as h } from \"../../../layers/features/support/tileUtils.js\";\nconst u = 1,\n  c = 2,\n  o = 4,\n  _ = 8,\n  l = 16,\n  d = 32,\n  g = 64,\n  p = 128;\nfunction x(e) {\n  switch (e) {\n    case u:\n    case _:\n    case d:\n      return -1;\n    case c:\n    case g:\n      return 0;\n    case o:\n    case l:\n    case p:\n      return 1;\n  }\n}\nfunction m(e) {\n  switch (e) {\n    case u:\n    case c:\n    case o:\n      return -1;\n    case _:\n    case l:\n      return 0;\n    case d:\n    case g:\n    case p:\n      return 1;\n  }\n}\nconst f = u | _ | d,\n  y = o | l | p,\n  w = u | c | o,\n  v = d | g | p;\nclass E {\n  constructor(e, t, r, i, s) {\n    let n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    this._hasAggregate = !1, this.hasRecords = !1, this._data = {\n      self: new Map(),\n      neighbors: new Array()\n    }, this._version = 0, this._current = {\n      geometryType: 0,\n      writer: null,\n      overlaps: 0,\n      start: 0,\n      insertAfter: 0,\n      sortKey: 0,\n      id: 0,\n      materialKey: 0,\n      indexStart: 0,\n      vertStart: 0,\n      isDotDensity: !1,\n      bufferingEnabled: !1,\n      metricBoxLenPointer: 0\n    }, this.hint = t, this.tileKey = e, this._hasAggregate = i, this._pixelBufferEnabled = s, this._version = n, this._symbologyType = r;\n  }\n  get hasAggregates() {\n    return this._hasAggregate;\n  }\n  get hasPixelBufferEnabled() {\n    return this._pixelBufferEnabled;\n  }\n  serialize(t) {\n    const r = [];\n    return r.push(this._serializeTileVertexData(this.tileKey, this.tileKey, this._data.self)), this._data.neighbors.forEach((i, s) => {\n      const n = 1 << s,\n        a = x(n),\n        u = m(n),\n        c = h(new e(this.tileKey), a, u, t),\n        o = this._serializeTileVertexData(this.tileKey, c.id, i.vertexData);\n      o.message.bufferIds = i.displayIds, r.push(o);\n    }), r;\n  }\n  _serializeTileVertexData(e, t, r) {\n    const i = new Array();\n    return {\n      message: {\n        tileKeyOrigin: e,\n        tileKey: t,\n        data: {\n          [s.MARKER]: r.get(s.MARKER)?.serialize(i),\n          [s.FILL]: r.get(s.FILL)?.serialize(i),\n          [s.LINE]: r.get(s.LINE)?.serialize(i),\n          [s.TEXT]: r.get(s.TEXT)?.serialize(i),\n          [s.LABEL]: r.get(s.LABEL)?.serialize(i)\n        },\n        version: this._version\n      },\n      transferList: i\n    };\n  }\n  featureStart(e, t) {\n    this._current.insertAfter = e, this._current.sortKey = t;\n  }\n  featureEnd() {}\n  recordStart(e, t, r, i) {\n    this._current.writer = this._getVertexWriter(r), this._current.overlaps = 0, this._current.indexStart = this._current.writer.indexCount, this._current.vertStart = this._current.writer.vertexCount, this._current.bufferingEnabled = i, this._current.id = e, this._current.materialKey = t, this._current.geometryType = r, this._current.isDotDensity = !1, this._current.writer.recordStart();\n  }\n  recordCount() {\n    return this._current.writer.recordCount;\n  }\n  vertexCount() {\n    return this._current.writer.vertexCount;\n  }\n  indexCount() {\n    return this._current.writer.indexCount;\n  }\n  vertexEnsureSize(e) {\n    this._current.writer.vertexEnsureSize(e);\n  }\n  indexEnsureSize(e) {\n    this._current.writer.indexEnsureSize(e);\n  }\n  vertexBounds(e, t, r, i) {\n    this._current.bufferingEnabled && this._addOverlap(e, t, r, i);\n  }\n  vertexWrite(e) {\n    this._current.writer.writeVertex(e);\n  }\n  vertexWriteF32(e) {\n    this._current.writer.writeVertexF32(e);\n  }\n  vertexEnd() {}\n  vertexWriter() {\n    return this._current.writer.vertexWriter;\n  }\n  indexWrite(e) {\n    this._current.writer.writeIndex(e);\n  }\n  indexWriter() {\n    return this._current.writer.indexWriter;\n  }\n  metricWriter() {\n    return this._current.writer.metricWriter;\n  }\n  metricStart(e, t, r, n, a, h, u, c) {\n    this._current.writer = this._getVertexWriter(s.LABEL);\n    const o = this._current.writer.metricWriter;\n    o.push(i(e)), o.push(t), o.push(r), o.push(n), o.push(a), o.push(h), o.push(u), o.push(c), o.push(255), this._current.metricBoxLenPointer = o.push(0);\n  }\n  metricEnd() {\n    const e = this._current.writer.metricWriter;\n    0 === e.getValue(this._current.metricBoxLenPointer) && e.seek(e.length - 10);\n  }\n  metricBoxWrite(e, t, r, i) {\n    const s = this._current.writer.metricWriter;\n    s.incr(this._current.metricBoxLenPointer), s.push(0), s.push(0), s.push(e), s.push(t), s.push(r), s.push(i);\n  }\n  recordEnd() {\n    const e = this._current.vertStart,\n      r = this._current.writer.vertexCount - e;\n    if (!r) return !1;\n    this.hasRecords = !0;\n    const i = this._current.indexStart,\n      h = this._current.writer.indexCount - i;\n    if (this._current.writer.recordEnd(this._current.id, this._current.materialKey, this._current.insertAfter, i, h, e, r, this._current.sortKey), !this._pixelBufferEnabled || this._hasAggregate || 0 === this._current.overlaps || this._current.geometryType === s.LABEL) return !0;\n    const u = this._current.writer;\n    for (let s = 0; s < 8; s++) {\n      const e = 1 << s;\n      if (!!(this._current.overlaps & e)) {\n        this._data.neighbors[s] || (this._data.neighbors[s] = {\n          vertexData: new Map(),\n          displayIds: new Set()\n        });\n        const r = this._data.neighbors[s],\n          i = this._current.geometryType;\n        if (!r.vertexData.has(i)) {\n          const e = n(i, this._symbologyType).geometry,\n            s = new a(i, e, t);\n          r.vertexData.set(i, s);\n        }\n        const h = r.vertexData.get(this._current.geometryType),\n          c = 8,\n          o = 512 * -x(e) * c,\n          _ = 512 * -m(e) * c;\n        h?.copyLastFrom(u, o, _), r.displayIds.add(this._current.id);\n      }\n    }\n    return !0;\n  }\n  _addOverlap(e, t, i, s) {\n    const n = 255 ^ ((e < 0 + i ? y : e >= r - i ? f : y | f) | (t < 0 + s ? v : t >= r - s ? w : v | w));\n    this._current.overlaps |= n;\n  }\n  _getVertexWriter(e) {\n    if (!this._data.self.has(e)) {\n      const t = this._data.self,\n        r = n(e, this._symbologyType).geometry;\n      t.set(e, new a(e, r, this.hint.records));\n    }\n    return this._data.self.get(e);\n  }\n}\nexport { E as MeshData };","map":{"version":3,"names":["e","PATCH_PIXEL_BUFFER_ALLOC_SIZE","t","TILE_SIZE","r","getDisplayIdTexel","i","WGLGeometryType","s","getStrides","n","VertexDataWriter","a","getPow2NeighborKey","h","u","c","o","_","l","d","g","p","x","m","f","y","w","v","E","constructor","arguments","length","undefined","_hasAggregate","hasRecords","_data","self","Map","neighbors","Array","_version","_current","geometryType","writer","overlaps","start","insertAfter","sortKey","id","materialKey","indexStart","vertStart","isDotDensity","bufferingEnabled","metricBoxLenPointer","hint","tileKey","_pixelBufferEnabled","_symbologyType","hasAggregates","hasPixelBufferEnabled","serialize","push","_serializeTileVertexData","forEach","vertexData","message","bufferIds","displayIds","tileKeyOrigin","data","MARKER","get","FILL","LINE","TEXT","LABEL","version","transferList","featureStart","featureEnd","recordStart","_getVertexWriter","indexCount","vertexCount","recordCount","vertexEnsureSize","indexEnsureSize","vertexBounds","_addOverlap","vertexWrite","writeVertex","vertexWriteF32","writeVertexF32","vertexEnd","vertexWriter","indexWrite","writeIndex","indexWriter","metricWriter","metricStart","metricEnd","getValue","seek","metricBoxWrite","incr","recordEnd","Set","has","geometry","set","copyLastFrom","add","records","MeshData"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/2d/engine/webgl/mesh/MeshData.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../tiling/PagedTileQueue.js\";import\"../../../tiling/TileInfoView.js\";import e from\"../../../tiling/TileKey.js\";import\"../../../tiling/TileQueue.js\";import\"../../../tiling/TileStrategy.js\";import{PATCH_PIXEL_BUFFER_ALLOC_SIZE as t,TILE_SIZE as r}from\"../definitions.js\";import{getDisplayIdTexel as i}from\"../DisplayId.js\";import{WGLGeometryType as s}from\"../enums.js\";import{getStrides as n}from\"../Utils.js\";import{VertexDataWriter as a}from\"./VertexDataWriter.js\";import{getPow2NeighborKey as h}from\"../../../layers/features/support/tileUtils.js\";const u=1,c=2,o=4,_=8,l=16,d=32,g=64,p=128;function x(e){switch(e){case u:case _:case d:return-1;case c:case g:return 0;case o:case l:case p:return 1}}function m(e){switch(e){case u:case c:case o:return-1;case _:case l:return 0;case d:case g:case p:return 1}}const f=u|_|d,y=o|l|p,w=u|c|o,v=d|g|p;class E{constructor(e,t,r,i,s,n=0){this._hasAggregate=!1,this.hasRecords=!1,this._data={self:new Map,neighbors:new Array},this._version=0,this._current={geometryType:0,writer:null,overlaps:0,start:0,insertAfter:0,sortKey:0,id:0,materialKey:0,indexStart:0,vertStart:0,isDotDensity:!1,bufferingEnabled:!1,metricBoxLenPointer:0},this.hint=t,this.tileKey=e,this._hasAggregate=i,this._pixelBufferEnabled=s,this._version=n,this._symbologyType=r}get hasAggregates(){return this._hasAggregate}get hasPixelBufferEnabled(){return this._pixelBufferEnabled}serialize(t){const r=[];return r.push(this._serializeTileVertexData(this.tileKey,this.tileKey,this._data.self)),this._data.neighbors.forEach(((i,s)=>{const n=1<<s,a=x(n),u=m(n),c=h(new e(this.tileKey),a,u,t),o=this._serializeTileVertexData(this.tileKey,c.id,i.vertexData);o.message.bufferIds=i.displayIds,r.push(o)})),r}_serializeTileVertexData(e,t,r){const i=new Array;return{message:{tileKeyOrigin:e,tileKey:t,data:{[s.MARKER]:r.get(s.MARKER)?.serialize(i),[s.FILL]:r.get(s.FILL)?.serialize(i),[s.LINE]:r.get(s.LINE)?.serialize(i),[s.TEXT]:r.get(s.TEXT)?.serialize(i),[s.LABEL]:r.get(s.LABEL)?.serialize(i)},version:this._version},transferList:i}}featureStart(e,t){this._current.insertAfter=e,this._current.sortKey=t}featureEnd(){}recordStart(e,t,r,i){this._current.writer=this._getVertexWriter(r),this._current.overlaps=0,this._current.indexStart=this._current.writer.indexCount,this._current.vertStart=this._current.writer.vertexCount,this._current.bufferingEnabled=i,this._current.id=e,this._current.materialKey=t,this._current.geometryType=r,this._current.isDotDensity=!1,this._current.writer.recordStart()}recordCount(){return this._current.writer.recordCount}vertexCount(){return this._current.writer.vertexCount}indexCount(){return this._current.writer.indexCount}vertexEnsureSize(e){this._current.writer.vertexEnsureSize(e)}indexEnsureSize(e){this._current.writer.indexEnsureSize(e)}vertexBounds(e,t,r,i){this._current.bufferingEnabled&&this._addOverlap(e,t,r,i)}vertexWrite(e){this._current.writer.writeVertex(e)}vertexWriteF32(e){this._current.writer.writeVertexF32(e)}vertexEnd(){}vertexWriter(){return this._current.writer.vertexWriter}indexWrite(e){this._current.writer.writeIndex(e)}indexWriter(){return this._current.writer.indexWriter}metricWriter(){return this._current.writer.metricWriter}metricStart(e,t,r,n,a,h,u,c){this._current.writer=this._getVertexWriter(s.LABEL);const o=this._current.writer.metricWriter;o.push(i(e)),o.push(t),o.push(r),o.push(n),o.push(a),o.push(h),o.push(u),o.push(c),o.push(255),this._current.metricBoxLenPointer=o.push(0)}metricEnd(){const e=this._current.writer.metricWriter;0===e.getValue(this._current.metricBoxLenPointer)&&e.seek(e.length-10)}metricBoxWrite(e,t,r,i){const s=this._current.writer.metricWriter;s.incr(this._current.metricBoxLenPointer),s.push(0),s.push(0),s.push(e),s.push(t),s.push(r),s.push(i)}recordEnd(){const e=this._current.vertStart,r=this._current.writer.vertexCount-e;if(!r)return!1;this.hasRecords=!0;const i=this._current.indexStart,h=this._current.writer.indexCount-i;if(this._current.writer.recordEnd(this._current.id,this._current.materialKey,this._current.insertAfter,i,h,e,r,this._current.sortKey),!this._pixelBufferEnabled||this._hasAggregate||0===this._current.overlaps||this._current.geometryType===s.LABEL)return!0;const u=this._current.writer;for(let s=0;s<8;s++){const e=1<<s;if(!!(this._current.overlaps&e)){this._data.neighbors[s]||(this._data.neighbors[s]={vertexData:new Map,displayIds:new Set});const r=this._data.neighbors[s],i=this._current.geometryType;if(!r.vertexData.has(i)){const e=n(i,this._symbologyType).geometry,s=new a(i,e,t);r.vertexData.set(i,s)}const h=r.vertexData.get(this._current.geometryType),c=8,o=512*-x(e)*c,_=512*-m(e)*c;h?.copyLastFrom(u,o,_),r.displayIds.add(this._current.id)}}return!0}_addOverlap(e,t,i,s){const n=255^((e<0+i?y:e>=r-i?f:y|f)|(t<0+s?v:t>=r-s?w:v|w));this._current.overlaps|=n}_getVertexWriter(e){if(!this._data.self.has(e)){const t=this._data.self,r=n(e,this._symbologyType).geometry;t.set(e,new a(e,r,this.hint.records))}return this._data.self.get(e)}}export{E as MeshData};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}