{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isNone as t, isSome as e } from \"../../../../../core/maybe.js\";\nimport { convertFromFeatures as r, convertFromFeatureSet as s, convertToFeature as i, convertToGeometry as n, getQuantizedArea as o, unquantizeOptimizedGeometry as a } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { hasGeometry as u } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport { FeatureSetReader as h } from \"./FeatureSetReader.js\";\nfunction d(_ref) {\n  let {\n    coords: t,\n    lengths: e\n  } = _ref;\n  let r = 0;\n  for (const s of e) {\n    for (let e = 1; e < s; e++) t[2 * (r + e)] += t[2 * (r + e) - 2], t[2 * (r + e) + 1] += t[2 * (r + e) - 1];\n    r += s;\n  }\n}\nclass c extends h {\n  static fromFeatures(t, e) {\n    const {\n        objectIdField: s,\n        geometryType: i\n      } = e,\n      n = r([], t, i, !1, !1, s);\n    for (let r = 0; r < n.length; r++) n[r].displayId = t[r].displayId;\n    return c.fromOptimizedFeatures(n, e);\n  }\n  static fromFeatureSet(t, e) {\n    const r = s(t, e.objectIdField);\n    return c.fromOptimizedFeatureSet(r, e);\n  }\n  static fromOptimizedFeatureSet(t, e) {\n    const {\n        features: r\n      } = t,\n      s = c.fromOptimizedFeatures(r, e);\n    s._exceededTransferLimit = t.exceededTransferLimit, s._transform = t.transform;\n    for (const i of t.fields) \"esriFieldTypeDate\" === i.type && s._dateFields.add(i.name);\n    return s;\n  }\n  static fromOptimizedFeatures(t, e, r) {\n    const s = h.createInstance(),\n      i = new c(s, t, e);\n    return i._transform = r, i;\n  }\n  constructor(t, e, r) {\n    super(t, r), this._exceededTransferLimit = !1, this._featureIndex = -1, this._dateFields = new Set(), this._geometryType = r?.geometryType, this._features = e;\n  }\n  get _current() {\n    return this._features[this._featureIndex];\n  }\n  get geometryType() {\n    return this._geometryType;\n  }\n  get hasFeatures() {\n    return !!this._features.length;\n  }\n  get hasNext() {\n    return this._featureIndex + 1 < this._features.length;\n  }\n  get exceededTransferLimit() {\n    return this._exceededTransferLimit;\n  }\n  get hasZ() {\n    return !1;\n  }\n  get hasM() {\n    return !1;\n  }\n  removeIds(t) {\n    const e = new Set(t);\n    this._features = this._features.filter(t => !(t.objectId && e.has(t.objectId)));\n  }\n  append(t) {\n    for (const e of t) this._features.push(e);\n  }\n  getSize() {\n    return this._features.length;\n  }\n  getCursor() {\n    return this.copy();\n  }\n  getQuantizationTransform() {\n    return this._transform;\n  }\n  getAttributeHash() {\n    let t = \"\";\n    for (const e in this._current.attributes) t += this._current.attributes[e];\n    return t;\n  }\n  getIndex() {\n    return this._featureIndex;\n  }\n  setIndex(t) {\n    this._featureIndex = t;\n  }\n  getObjectId() {\n    return this._current?.objectId;\n  }\n  getDisplayId() {\n    return this._current.displayId;\n  }\n  setDisplayId(t) {\n    this._current.displayId = t;\n  }\n  getGroupId() {\n    return this._current.groupId;\n  }\n  setGroupId(t) {\n    this._current.groupId = t;\n  }\n  copy() {\n    const t = new c(this.instance, this._features, this.fullSchema());\n    return this.copyInto(t), t;\n  }\n  next() {\n    for (; ++this._featureIndex < this._features.length && !this._getExists(););\n    return this._featureIndex < this._features.length;\n  }\n  readLegacyFeature() {\n    return i(this._current, this.geometryType, this.hasZ, this.hasM);\n  }\n  readOptimizedFeature() {\n    return this._current;\n  }\n  readLegacyPointGeometry() {\n    return this.readGeometry() ? {\n      x: this.getX(),\n      y: this.getY()\n    } : null;\n  }\n  readLegacyGeometry() {\n    const t = this.readGeometry();\n    return n(t, this.geometryType, this.hasZ, this.hasM);\n  }\n  readLegacyCentroid() {\n    const e = this.readCentroid();\n    return t(e) ? null : {\n      x: e.coords[0] * this._sx + this._tx,\n      y: e.coords[1] * this._sy + this._ty\n    };\n  }\n  readGeometryArea() {\n    return u(this._current) ? o(this._current.geometry, 2) : 0;\n  }\n  readUnquantizedGeometry() {\n    const t = this.readGeometry();\n    if (\"esriGeometryPoint\" === this.geometryType || !t) return t;\n    const e = t.clone();\n    return d(e), e;\n  }\n  readHydratedGeometry() {\n    const r = this._current.geometry;\n    if (t(r)) return null;\n    const s = r.clone();\n    return e(this._transform) && a(s, s, this.hasZ, this.hasM, this._transform), s;\n  }\n  getXHydrated() {\n    if (!u(this._current)) return 0;\n    const e = this._current.geometry.coords[0],\n      r = this.getQuantizationTransform();\n    return t(r) ? e : e * r.scale[0] + r.translate[0];\n  }\n  getYHydrated() {\n    if (!u(this._current)) return 0;\n    const e = this._current.geometry.coords[1],\n      r = this.getQuantizationTransform();\n    return t(r) ? e : r.translate[1] - e * r.scale[1];\n  }\n  getX() {\n    return u(this._current) ? this._current.geometry.coords[0] * this._sx + this._tx : 0;\n  }\n  getY() {\n    return u(this._current) ? this._current.geometry.coords[1] * this._sy + this._ty : 0;\n  }\n  readGeometry() {\n    if (!u(this._current)) {\n      if (e(this._current.centroid)) {\n        const [t, e] = this._current.centroid.coords;\n        return this.createQuantizedExtrudedQuad(t, e);\n      }\n      return null;\n    }\n    const t = this._current.geometry.clone();\n    if (t.isPoint) return t.coords[0] = t.coords[0] * this._sx + this._tx, t.coords[1] = t.coords[1] * this._sy + this._ty, t;\n    let r = 0;\n    for (const e of t.lengths) t.coords[2 * r] = t.coords[2 * r] * this._sx + this._tx, t.coords[2 * r + 1] = t.coords[2 * r + 1] * this._sy + this._ty, r += e;\n    return t;\n  }\n  readCentroid() {\n    return u(this._current) ? this._computeCentroid() : this._current.centroid;\n  }\n  hasField(t) {\n    if (t in this._current.attributes) return !0;\n    return this.getFieldNames().map(t => t.toLowerCase()).includes(t.toLowerCase());\n  }\n  getFieldNames() {\n    return Object.keys(this._current.attributes);\n  }\n  _readAttribute(t, e) {\n    const r = this._current.attributes[t];\n    if (void 0 !== r) return null != r && e && this._dateFields.has(t) ? new Date(r) : r;\n    const s = this.readAttributes(),\n      i = t?.toLocaleLowerCase().trim();\n    for (const n in s) if (n.toLocaleLowerCase().trim() === i) {\n      const t = this._current.attributes[n];\n      return null != t && e && this._dateFields.has(n) ? new Date(t) : t;\n    }\n  }\n  copyInto(t) {\n    super.copyInto(t), t._featureIndex = this._featureIndex, t._transform = this._transform, t._dateFields = this._dateFields;\n  }\n  _readAttributes() {\n    return this._current.attributes;\n  }\n}\nexport { c as FeatureSetReaderJSON };","map":{"version":3,"names":["isNone","t","isSome","e","convertFromFeatures","r","convertFromFeatureSet","s","convertToFeature","i","convertToGeometry","n","getQuantizedArea","o","unquantizeOptimizedGeometry","a","hasGeometry","u","FeatureSetReader","h","d","_ref","coords","lengths","c","fromFeatures","objectIdField","geometryType","length","displayId","fromOptimizedFeatures","fromFeatureSet","fromOptimizedFeatureSet","features","_exceededTransferLimit","exceededTransferLimit","_transform","transform","fields","type","_dateFields","add","name","createInstance","constructor","_featureIndex","Set","_geometryType","_features","_current","hasFeatures","hasNext","hasZ","hasM","removeIds","filter","objectId","has","append","push","getSize","getCursor","copy","getQuantizationTransform","getAttributeHash","attributes","getIndex","setIndex","getObjectId","getDisplayId","setDisplayId","getGroupId","groupId","setGroupId","instance","fullSchema","copyInto","next","_getExists","readLegacyFeature","readOptimizedFeature","readLegacyPointGeometry","readGeometry","x","getX","y","getY","readLegacyGeometry","readLegacyCentroid","readCentroid","_sx","_tx","_sy","_ty","readGeometryArea","geometry","readUnquantizedGeometry","clone","readHydratedGeometry","getXHydrated","scale","translate","getYHydrated","centroid","createQuantizedExtrudedQuad","isPoint","_computeCentroid","hasField","getFieldNames","map","toLowerCase","includes","Object","keys","_readAttribute","Date","readAttributes","toLocaleLowerCase","trim","_readAttributes","FeatureSetReaderJSON"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReaderJSON.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as e}from\"../../../../../core/maybe.js\";import{convertFromFeatures as r,convertFromFeatureSet as s,convertToFeature as i,convertToGeometry as n,getQuantizedArea as o,unquantizeOptimizedGeometry as a}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{hasGeometry as u}from\"../../../../../layers/graphics/OptimizedFeature.js\";import{FeatureSetReader as h}from\"./FeatureSetReader.js\";function d({coords:t,lengths:e}){let r=0;for(const s of e){for(let e=1;e<s;e++)t[2*(r+e)]+=t[2*(r+e)-2],t[2*(r+e)+1]+=t[2*(r+e)-1];r+=s}}class c extends h{static fromFeatures(t,e){const{objectIdField:s,geometryType:i}=e,n=r([],t,i,!1,!1,s);for(let r=0;r<n.length;r++)n[r].displayId=t[r].displayId;return c.fromOptimizedFeatures(n,e)}static fromFeatureSet(t,e){const r=s(t,e.objectIdField);return c.fromOptimizedFeatureSet(r,e)}static fromOptimizedFeatureSet(t,e){const{features:r}=t,s=c.fromOptimizedFeatures(r,e);s._exceededTransferLimit=t.exceededTransferLimit,s._transform=t.transform;for(const i of t.fields)\"esriFieldTypeDate\"===i.type&&s._dateFields.add(i.name);return s}static fromOptimizedFeatures(t,e,r){const s=h.createInstance(),i=new c(s,t,e);return i._transform=r,i}constructor(t,e,r){super(t,r),this._exceededTransferLimit=!1,this._featureIndex=-1,this._dateFields=new Set,this._geometryType=r?.geometryType,this._features=e}get _current(){return this._features[this._featureIndex]}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}removeIds(t){const e=new Set(t);this._features=this._features.filter((t=>!(t.objectId&&e.has(t.objectId))))}append(t){for(const e of t)this._features.push(e)}getSize(){return this._features.length}getCursor(){return this.copy()}getQuantizationTransform(){return this._transform}getAttributeHash(){let t=\"\";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getIndex(){return this._featureIndex}setIndex(t){this._featureIndex=t}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){this._current.displayId=t}getGroupId(){return this._current.groupId}setGroupId(t){this._current.groupId=t}copy(){const t=new c(this.instance,this._features,this.fullSchema());return this.copyInto(t),t}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readLegacyFeature(){return i(this._current,this.geometryType,this.hasZ,this.hasM)}readOptimizedFeature(){return this._current}readLegacyPointGeometry(){return this.readGeometry()?{x:this.getX(),y:this.getY()}:null}readLegacyGeometry(){const t=this.readGeometry();return n(t,this.geometryType,this.hasZ,this.hasM)}readLegacyCentroid(){const e=this.readCentroid();return t(e)?null:{x:e.coords[0]*this._sx+this._tx,y:e.coords[1]*this._sy+this._ty}}readGeometryArea(){return u(this._current)?o(this._current.geometry,2):0}readUnquantizedGeometry(){const t=this.readGeometry();if(\"esriGeometryPoint\"===this.geometryType||!t)return t;const e=t.clone();return d(e),e}readHydratedGeometry(){const r=this._current.geometry;if(t(r))return null;const s=r.clone();return e(this._transform)&&a(s,s,this.hasZ,this.hasM,this._transform),s}getXHydrated(){if(!u(this._current))return 0;const e=this._current.geometry.coords[0],r=this.getQuantizationTransform();return t(r)?e:e*r.scale[0]+r.translate[0]}getYHydrated(){if(!u(this._current))return 0;const e=this._current.geometry.coords[1],r=this.getQuantizationTransform();return t(r)?e:r.translate[1]-e*r.scale[1]}getX(){return u(this._current)?this._current.geometry.coords[0]*this._sx+this._tx:0}getY(){return u(this._current)?this._current.geometry.coords[1]*this._sy+this._ty:0}readGeometry(){if(!u(this._current)){if(e(this._current.centroid)){const[t,e]=this._current.centroid.coords;return this.createQuantizedExtrudedQuad(t,e)}return null}const t=this._current.geometry.clone();if(t.isPoint)return t.coords[0]=t.coords[0]*this._sx+this._tx,t.coords[1]=t.coords[1]*this._sy+this._ty,t;let r=0;for(const e of t.lengths)t.coords[2*r]=t.coords[2*r]*this._sx+this._tx,t.coords[2*r+1]=t.coords[2*r+1]*this._sy+this._ty,r+=e;return t}readCentroid(){return u(this._current)?this._computeCentroid():this._current.centroid}hasField(t){if(t in this._current.attributes)return!0;return this.getFieldNames().map((t=>t.toLowerCase())).includes(t.toLowerCase())}getFieldNames(){return Object.keys(this._current.attributes)}_readAttribute(t,e){const r=this._current.attributes[t];if(void 0!==r)return null!=r&&e&&this._dateFields.has(t)?new Date(r):r;const s=this.readAttributes(),i=t?.toLocaleLowerCase().trim();for(const n in s)if(n.toLocaleLowerCase().trim()===i){const t=this._current.attributes[n];return null!=t&&e&&this._dateFields.has(n)?new Date(t):t}}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._transform=this._transform,t._dateFields=this._dateFields}_readAttributes(){return this._current.attributes}}export{c as FeatureSetReaderJSON};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}