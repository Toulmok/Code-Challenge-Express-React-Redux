{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { isNone as s } from \"../../../core/maybe.js\";\nimport { property as o } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as e } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { localOperators as r } from \"../rasterFunctionConstants.js\";\nimport { getPixelValueRange as n } from \"../rasterFormats/pixelRangeUtils.js\";\nimport i from \"./BaseRasterFunction.js\";\nimport u from \"./LocalFunctionArguments.js\";\nimport { operandsCount as a, getOutputDomain as c, local as p } from \"./localUtils.js\";\nlet m = class extends i {\n  constructor() {\n    super(...arguments), this.functionName = \"Local\", this.functionArguments = null, this.rasterArgumentNames = [\"rasters\"];\n  }\n  _bindSourceRasters() {\n    const {\n        sourceRasterInfos: t\n      } = this,\n      s = t[0],\n      {\n        bandCount: o\n      } = s,\n      {\n        processAsMultiband: e\n      } = this.functionArguments;\n    if (t.some(t => t.bandCount !== o)) return {\n      success: !1,\n      supportsGPU: !1,\n      error: \"local-function: input rasters do not have same band count\"\n    };\n    const {\n        operation: r,\n        rasters: n\n      } = this.functionArguments,\n      i = a[r];\n    if (!(999 === i || n.length === i || n.length <= 1 && 1 === i)) return {\n      success: !1,\n      supportsGPU: !1,\n      error: `local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`\n    };\n    this.outputPixelType = this._getOutputPixelType(\"f32\");\n    const u = s.clone();\n    u.pixelType = this.outputPixelType, u.statistics = null, u.histograms = null, u.colormap = null, u.attributeTable = null, u.bandCount = 999 !== i || e ? o : 1;\n    const p = c(r);\n    if (p) {\n      u.statistics = [];\n      for (let t = 0; t < u.bandCount; t++) u.statistics[t] = {\n        min: p[0],\n        max: p[1],\n        avg: (p[0] + p[1]) / 2,\n        stddev: (p[0] + p[1]) / 10\n      };\n    }\n    this.rasterInfo = u;\n    return {\n      success: !0,\n      supportsGPU: 1 === u.bandCount && i <= 3 && (r < 11 || r > 16)\n    };\n  }\n  _processPixels(t) {\n    const {\n      pixelBlocks: o\n    } = t;\n    return s(o) || o.some(t => s(t)) ? null : p(o, this.functionArguments.operation, {\n      processAsMultiband: this.functionArguments.processAsMultiband,\n      outputPixelType: this.outputPixelType ?? void 0\n    });\n  }\n  _getWebGLParameters() {\n    const {\n        operation: t\n      } = this.functionArguments,\n      s = a[t],\n      o = Object.keys(r).find(s => r[s] === t)?.toLowerCase() ?? \"undefined\",\n      e = this.outputPixelType ?? \"f32\";\n    let [i, u] = n(e);\n    const c = e.startsWith(\"u\") || e.startsWith(\"s\");\n    return c && (i -= 1e-4, u += 1e-4), {\n      imageCount: s,\n      operationName: o,\n      domainRange: [i, u],\n      isOutputRounded: c\n    };\n  }\n};\nt([o({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], m.prototype, \"functionName\", void 0), t([o({\n  type: u,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], m.prototype, \"functionArguments\", void 0), t([o()], m.prototype, \"rasterArgumentNames\", void 0), m = t([e(\"esri.layers.support.rasterFunctions.LocalFunction\")], m);\nconst l = m;\nexport { l as default };","map":{"version":3,"names":["_","t","isNone","s","property","o","subclass","e","localOperators","r","getPixelValueRange","n","i","u","operandsCount","a","getOutputDomain","c","local","p","m","constructor","arguments","functionName","functionArguments","rasterArgumentNames","_bindSourceRasters","sourceRasterInfos","bandCount","processAsMultiband","some","success","supportsGPU","error","operation","rasters","length","outputPixelType","_getOutputPixelType","clone","pixelType","statistics","histograms","colormap","attributeTable","min","max","avg","stddev","rasterInfo","_processPixels","pixelBlocks","_getWebGLParameters","Object","keys","find","toLowerCase","startsWith","imageCount","operationName","domainRange","isOutputRounded","json","write","name","prototype","type","l","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/rasterFunctions/LocalFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{isNone as s}from\"../../../core/maybe.js\";import{property as o}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as e}from\"../../../core/accessorSupport/decorators/subclass.js\";import{localOperators as r}from\"../rasterFunctionConstants.js\";import{getPixelValueRange as n}from\"../rasterFormats/pixelRangeUtils.js\";import i from\"./BaseRasterFunction.js\";import u from\"./LocalFunctionArguments.js\";import{operandsCount as a,getOutputDomain as c,local as p}from\"./localUtils.js\";let m=class extends i{constructor(){super(...arguments),this.functionName=\"Local\",this.functionArguments=null,this.rasterArgumentNames=[\"rasters\"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,s=t[0],{bandCount:o}=s,{processAsMultiband:e}=this.functionArguments;if(t.some((t=>t.bandCount!==o)))return{success:!1,supportsGPU:!1,error:\"local-function: input rasters do not have same band count\"};const{operation:r,rasters:n}=this.functionArguments,i=a[r];if(!(999===i||n.length===i||n.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};this.outputPixelType=this._getOutputPixelType(\"f32\");const u=s.clone();u.pixelType=this.outputPixelType,u.statistics=null,u.histograms=null,u.colormap=null,u.attributeTable=null,u.bandCount=999!==i||e?o:1;const p=c(r);if(p){u.statistics=[];for(let t=0;t<u.bandCount;t++)u.statistics[t]={min:p[0],max:p[1],avg:(p[0]+p[1])/2,stddev:(p[0]+p[1])/10}}this.rasterInfo=u;return{success:!0,supportsGPU:1===u.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:o}=t;return s(o)||o.some((t=>s(t)))?null:p(o,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,s=a[t],o=Object.keys(r).find((s=>r[s]===t))?.toLowerCase()??\"undefined\",e=this.outputPixelType??\"f32\";let[i,u]=n(e);const c=e.startsWith(\"u\")||e.startsWith(\"s\");return c&&(i-=1e-4,u+=1e-4),{imageCount:s,operationName:o,domainRange:[i,u],isOutputRounded:c}}};t([o({json:{write:!0,name:\"rasterFunction\"}})],m.prototype,\"functionName\",void 0),t([o({type:u,json:{write:!0,name:\"rasterFunctionArguments\"}})],m.prototype,\"functionArguments\",void 0),t([o()],m.prototype,\"rasterArgumentNames\",void 0),m=t([e(\"esri.layers.support.rasterFunctions.LocalFunction\")],m);const l=m;export{l as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}