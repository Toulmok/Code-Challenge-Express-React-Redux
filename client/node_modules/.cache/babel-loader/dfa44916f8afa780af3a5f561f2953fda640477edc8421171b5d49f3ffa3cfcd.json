{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isNone as t } from \"../../../core/maybe.js\";\nimport s from \"../../../core/RandomLCG.js\";\nimport { Placement as i } from \"../CIMPlacements.js\";\nimport { PlacementGridType as e } from \"../enums.js\";\nconst n = 512,\n  h = 10,\n  _ = 12,\n  r = 25,\n  o = 24;\nfunction a(t) {\n  return void 0 !== t.rings;\n}\nclass l {\n  static local() {\n    return null === l.instance && (l.instance = new l()), l.instance;\n  }\n  execute(t, s, i, e, n) {\n    return new f(t, s, i, e, n);\n  }\n}\nl.instance = null;\nclass f {\n  constructor(t, h, _, r, o) {\n    if (this._xMin = 0, this._xMax = 0, this._yMin = 0, this._yMax = 0, this._currentX = 0, this._currentY = 0, this._accelerationMap = null, this._testInsidePolygon = !1, this._verticalSubdivision = !0, this._stepX = Math.abs(h.stepX ?? 16) * _, this._stepY = Math.abs(h.stepY ?? 16) * _, 0 !== this._stepX && 0 !== this._stepY && t && a(t) && t.rings) {\n      if (this._gridType = h.gridType ?? e.Fixed, this._gridType === e.Random) {\n        const t = h.seed ?? 13,\n          i = 1;\n        this._randomLCG = new s(t * i), this._randomness = (h.randomness ?? 100) / 100, this._gridAngle = 0, this._shiftOddRows = !1, this._cosAngle = 1, this._sinAngle = 0, this._offsetX = 0, this._offsetY = 0, this._buildRandomValues();\n      } else {\n        if (this._randomness = 0, this._gridAngle = h.gridAngle ?? 0, this._shiftOddRows = h.shiftOddRows ?? !1, this._offsetX = (h.offsetX ?? 0) * _, this._offsetY = (h.offsetY ?? 0) * _, this._cosAngle = Math.cos(this._gridAngle / 180 * Math.PI), this._sinAngle = -Math.sin(this._gridAngle / 180 * Math.PI), this._stepX) if (this._offsetX < 0) for (; this._offsetX < -.5 * this._stepX;) this._offsetX += this._stepX;else for (; this._offsetX >= .5 * this._stepX;) this._offsetX -= this._stepX;\n        if (this._stepY) if (this._offsetY < 0) for (; this._offsetY < -.5 * this._stepY;) this._offsetY += this._stepY;else for (; this._offsetY >= .5 * this._stepY;) this._offsetY -= this._stepY;\n      }\n      if (this._graphicOriginX = 0, this._graphicOriginY = 0, null != r) {\n        const [t, s, i] = r.split(\"/\"),\n          e = parseFloat(s),\n          h = parseFloat(i);\n        this._graphicOriginX = -h * n, this._graphicOriginY = e * n, this._testInsidePolygon = !0;\n      }\n      this._internalPlacement = new i(), this._calculateMinMax(t), this._geometry = t;\n    }\n  }\n  next() {\n    return this._geometry ? this._nextInside() : null;\n  }\n  _buildRandomValues() {\n    if (!f._randValues) {\n      f._randValues = [];\n      for (let t = 0; t < o; t++) for (let s = 0; s < o; s++) f._randValues.push(this._randomLCG.getFloat()), f._randValues.push(this._randomLCG.getFloat());\n    }\n  }\n  _calculateMinMax(t) {\n    let s, i, e, h, o, a, l, f, c, g, u, M, p, d;\n    this._xMin = 0, this._xMax = 0, this._yMin = 0, this._yMax = 0, l = f = p = u = Number.MAX_VALUE, c = g = d = M = -Number.MAX_VALUE;\n    const m = 1 !== this._cosAngle;\n    let X = 0;\n    for (const n of t.rings) {\n      const t = n ? n.length : 0;\n      for (let _ = 0; _ < t; _++) a = n[_][0], o = n[_][1], s = a - this._graphicOriginX - this._offsetX, i = o - this._graphicOriginY - this._offsetY, m ? (e = this._cosAngle * s - this._sinAngle * i, h = this._sinAngle * s + this._cosAngle * i) : (e = s, h = i), l = Math.min(l, e), c = Math.max(c, e), f = Math.min(f, h), g = Math.max(g, h), u = Math.min(u, o), M = Math.max(M, o), p = Math.min(p, a), d = Math.max(d, a), X++;\n    }\n    u = u !== Number.MAX_VALUE ? u : -n - this._stepY, M = M !== -Number.MAX_VALUE ? M : this._stepY, p = p !== Number.MAX_VALUE ? p : -this._stepX, d = d !== -Number.MAX_VALUE ? d : n + this._stepX;\n    const A = M - u,\n      Y = d - p;\n    if (this._verticalSubdivision = A >= Y, this._polygonMin = this._verticalSubdivision ? u : p, this._testInsidePolygon) {\n      let t = 0 - this._graphicOriginX - this._offsetX - this._stepX,\n        s = n - this._graphicOriginX - this._offsetX + this._stepX,\n        i = -n - this._graphicOriginY - this._offsetY - this._stepY,\n        e = 0 - this._graphicOriginY - this._offsetY + this._stepY;\n      if (m) {\n        const n = [[t, i], [t, e], [s, i], [s, e]];\n        t = i = Number.MAX_VALUE, s = e = -Number.MAX_VALUE;\n        for (const h of n) {\n          const n = this._cosAngle * h[0] - this._sinAngle * h[1],\n            _ = this._sinAngle * h[0] + this._cosAngle * h[1];\n          t = Math.min(t, n), s = Math.max(s, n), i = Math.min(i, _), e = Math.max(e, _);\n        }\n      }\n      l = l !== Number.MAX_VALUE ? Math.max(l, t) : t, f = f !== Number.MAX_VALUE ? Math.max(f, i) : i, c = c !== -Number.MAX_VALUE ? Math.min(c, s) : s, g = g !== -Number.MAX_VALUE ? Math.min(g, e) : e;\n    }\n    this._xMin = Math.round(l / this._stepX), this._xMax = Math.round(c / this._stepX), this._yMin = Math.round(f / this._stepY), this._yMax = Math.round(g / this._stepY), this._currentX = this._xMax + 1, this._currentY = this._yMin - 1, this._testInsidePolygon && X > _ && (A > r || Y > r) && this._buildAccelerationMap(t, p, d, u, M);\n  }\n  _buildAccelerationMap(t, s, i, e, _) {\n    const {\n        rings: r\n      } = t,\n      o = new Map(),\n      a = this._verticalSubdivision,\n      l = a ? _ - e : i - s;\n    let f = Math.ceil(l / h);\n    if (f <= 1) return;\n    const c = Math.floor(l / f);\n    let u, M, p, d, m, X, A, Y, x, y;\n    f++, this._delta = c, a ? (Y = -n - this._stepY, x = this._stepY, y = e) : (Y = -this._stepX, x = n + this._stepX, y = s);\n    for (let n = 0; n < r.length; n++) if (u = r[n], !(u.length < 2)) for (let t = 1; t < u.length; t++) {\n      if (M = u[t - 1], p = u[t], a) {\n        if (M[1] === p[1] || M[1] < Y && p[1] < Y || M[1] > x && p[1] > x) continue;\n        d = Math.min(M[1], p[1]), m = Math.max(M[1], p[1]);\n      } else {\n        if (M[0] === p[0] || M[0] < Y && p[0] < Y || M[0] > x && p[0] > x) continue;\n        d = Math.min(M[0], p[0]), m = Math.max(M[0], p[0]);\n      }\n      for (; d < m;) X = Math.floor((d - y) / c), g(X, n, t, o), d += c;\n      A = Math.floor((m - y) / c), A > X && g(A, n, t, o);\n    }\n    this._accelerationMap = o;\n  }\n  _nextInside() {\n    for (;;) {\n      if (this._currentX > this._xMax) {\n        if (this._currentY++, this._currentY > this._yMax) return null;\n        this._currentX = this._xMin, this._shiftOddRows && this._currentY % 2 && this._currentX--;\n      }\n      let t = this._currentX * this._stepX + this._offsetX;\n      this._shiftOddRows && this._currentY % 2 && (t += .5 * this._stepX);\n      const s = this._currentY * this._stepY + this._offsetY;\n      let i, n;\n      if (this._currentX++, this._gridType === e.Random) {\n        const e = (this._currentX % o + o) % o,\n          h = (this._currentY % o + o) % o;\n        i = this._graphicOriginX + t + this._stepX * this._randomness * (.5 - f._randValues[h * o + e]) * 2 / 3, n = this._graphicOriginY + s + this._stepY * this._randomness * (.5 - f._randValues[h * o + e + 1]) * 2 / 3;\n      } else i = this._graphicOriginX + this._cosAngle * t + this._sinAngle * s, n = this._graphicOriginY - this._sinAngle * t + this._cosAngle * s;\n      if (!this._testInsidePolygon || this._isInsidePolygon(i, n, this._geometry)) return this._internalPlacement.setTranslate(i, n), this._internalPlacement;\n    }\n  }\n  _isInsidePolygon(s, i, e) {\n    const {\n      rings: n\n    } = e;\n    if (t(this._accelerationMap)) return c(s, i, e);\n    const h = this._verticalSubdivision,\n      _ = h ? i : s,\n      r = Math.floor((_ - this._polygonMin) / this._delta),\n      o = this._accelerationMap.get(r);\n    if (!o) return !1;\n    let a,\n      l,\n      f,\n      g,\n      u,\n      M = 0;\n    for (const t of o) {\n      u = t[0];\n      const e = n[u];\n      if (g = t[1], a = e[g - 1], l = e[g], h) {\n        if (a[1] > i == l[1] > i) continue;\n        f = (l[0] - a[0]) * (i - a[1]) - (l[1] - a[1]) * (s - a[0]);\n      } else {\n        if (a[0] > s == l[0] > s) continue;\n        f = (l[1] - a[1]) * (s - a[0]) - (l[0] - a[0]) * (i - a[1]);\n      }\n      f > 0 ? M++ : M--;\n    }\n    return 0 !== M;\n  }\n}\nfunction c(t, s, i) {\n  const {\n    rings: e\n  } = i;\n  let n,\n    h,\n    _,\n    r = 0;\n  for (const o of e) {\n    n = o.length;\n    for (let i = 1; i < n; ++i) {\n      if (h = o[i - 1], _ = o[i], h[1] > s == _[1] > s) continue;\n      (_[0] - h[0]) * (s - h[1]) - (_[1] - h[1]) * (t - h[0]) > 0 ? r++ : r--;\n    }\n  }\n  return 0 !== r;\n}\nfunction g(t, s, i, e) {\n  let n = e.get(t);\n  n || (n = [], e.set(t, n)), n.push([s, i]);\n}\nexport { l as PlacementInsidePolygon };","map":{"version":3,"names":["isNone","t","s","Placement","i","PlacementGridType","e","n","h","_","r","o","a","rings","l","local","instance","execute","f","constructor","_xMin","_xMax","_yMin","_yMax","_currentX","_currentY","_accelerationMap","_testInsidePolygon","_verticalSubdivision","_stepX","Math","abs","stepX","_stepY","stepY","_gridType","gridType","Fixed","Random","seed","_randomLCG","_randomness","randomness","_gridAngle","_shiftOddRows","_cosAngle","_sinAngle","_offsetX","_offsetY","_buildRandomValues","gridAngle","shiftOddRows","offsetX","offsetY","cos","PI","sin","_graphicOriginX","_graphicOriginY","split","parseFloat","_internalPlacement","_calculateMinMax","_geometry","next","_nextInside","_randValues","push","getFloat","c","g","u","M","p","d","Number","MAX_VALUE","m","X","length","min","max","A","Y","_polygonMin","round","_buildAccelerationMap","Map","ceil","floor","x","y","_delta","_isInsidePolygon","setTranslate","get","set","PlacementInsidePolygon"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/symbols/cim/placements/PlacementInsidePolygon.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as t}from\"../../../core/maybe.js\";import s from\"../../../core/RandomLCG.js\";import{Placement as i}from\"../CIMPlacements.js\";import{PlacementGridType as e}from\"../enums.js\";const n=512,h=10,_=12,r=25,o=24;function a(t){return void 0!==t.rings}class l{static local(){return null===l.instance&&(l.instance=new l),l.instance}execute(t,s,i,e,n){return new f(t,s,i,e,n)}}l.instance=null;class f{constructor(t,h,_,r,o){if(this._xMin=0,this._xMax=0,this._yMin=0,this._yMax=0,this._currentX=0,this._currentY=0,this._accelerationMap=null,this._testInsidePolygon=!1,this._verticalSubdivision=!0,this._stepX=Math.abs(h.stepX??16)*_,this._stepY=Math.abs(h.stepY??16)*_,0!==this._stepX&&0!==this._stepY&&t&&a(t)&&t.rings){if(this._gridType=h.gridType??e.Fixed,this._gridType===e.Random){const t=h.seed??13,i=1;this._randomLCG=new s(t*i),this._randomness=(h.randomness??100)/100,this._gridAngle=0,this._shiftOddRows=!1,this._cosAngle=1,this._sinAngle=0,this._offsetX=0,this._offsetY=0,this._buildRandomValues()}else{if(this._randomness=0,this._gridAngle=h.gridAngle??0,this._shiftOddRows=h.shiftOddRows??!1,this._offsetX=(h.offsetX??0)*_,this._offsetY=(h.offsetY??0)*_,this._cosAngle=Math.cos(this._gridAngle/180*Math.PI),this._sinAngle=-Math.sin(this._gridAngle/180*Math.PI),this._stepX)if(this._offsetX<0)for(;this._offsetX<-.5*this._stepX;)this._offsetX+=this._stepX;else for(;this._offsetX>=.5*this._stepX;)this._offsetX-=this._stepX;if(this._stepY)if(this._offsetY<0)for(;this._offsetY<-.5*this._stepY;)this._offsetY+=this._stepY;else for(;this._offsetY>=.5*this._stepY;)this._offsetY-=this._stepY}if(this._graphicOriginX=0,this._graphicOriginY=0,null!=r){const[t,s,i]=r.split(\"/\"),e=parseFloat(s),h=parseFloat(i);this._graphicOriginX=-h*n,this._graphicOriginY=e*n,this._testInsidePolygon=!0}this._internalPlacement=new i,this._calculateMinMax(t),this._geometry=t}}next(){return this._geometry?this._nextInside():null}_buildRandomValues(){if(!f._randValues){f._randValues=[];for(let t=0;t<o;t++)for(let s=0;s<o;s++)f._randValues.push(this._randomLCG.getFloat()),f._randValues.push(this._randomLCG.getFloat())}}_calculateMinMax(t){let s,i,e,h,o,a,l,f,c,g,u,M,p,d;this._xMin=0,this._xMax=0,this._yMin=0,this._yMax=0,l=f=p=u=Number.MAX_VALUE,c=g=d=M=-Number.MAX_VALUE;const m=1!==this._cosAngle;let X=0;for(const n of t.rings){const t=n?n.length:0;for(let _=0;_<t;_++)a=n[_][0],o=n[_][1],s=a-this._graphicOriginX-this._offsetX,i=o-this._graphicOriginY-this._offsetY,m?(e=this._cosAngle*s-this._sinAngle*i,h=this._sinAngle*s+this._cosAngle*i):(e=s,h=i),l=Math.min(l,e),c=Math.max(c,e),f=Math.min(f,h),g=Math.max(g,h),u=Math.min(u,o),M=Math.max(M,o),p=Math.min(p,a),d=Math.max(d,a),X++}u=u!==Number.MAX_VALUE?u:-n-this._stepY,M=M!==-Number.MAX_VALUE?M:this._stepY,p=p!==Number.MAX_VALUE?p:-this._stepX,d=d!==-Number.MAX_VALUE?d:n+this._stepX;const A=M-u,Y=d-p;if(this._verticalSubdivision=A>=Y,this._polygonMin=this._verticalSubdivision?u:p,this._testInsidePolygon){let t=0-this._graphicOriginX-this._offsetX-this._stepX,s=n-this._graphicOriginX-this._offsetX+this._stepX,i=-n-this._graphicOriginY-this._offsetY-this._stepY,e=0-this._graphicOriginY-this._offsetY+this._stepY;if(m){const n=[[t,i],[t,e],[s,i],[s,e]];t=i=Number.MAX_VALUE,s=e=-Number.MAX_VALUE;for(const h of n){const n=this._cosAngle*h[0]-this._sinAngle*h[1],_=this._sinAngle*h[0]+this._cosAngle*h[1];t=Math.min(t,n),s=Math.max(s,n),i=Math.min(i,_),e=Math.max(e,_)}}l=l!==Number.MAX_VALUE?Math.max(l,t):t,f=f!==Number.MAX_VALUE?Math.max(f,i):i,c=c!==-Number.MAX_VALUE?Math.min(c,s):s,g=g!==-Number.MAX_VALUE?Math.min(g,e):e}this._xMin=Math.round(l/this._stepX),this._xMax=Math.round(c/this._stepX),this._yMin=Math.round(f/this._stepY),this._yMax=Math.round(g/this._stepY),this._currentX=this._xMax+1,this._currentY=this._yMin-1,this._testInsidePolygon&&X>_&&(A>r||Y>r)&&this._buildAccelerationMap(t,p,d,u,M)}_buildAccelerationMap(t,s,i,e,_){const{rings:r}=t,o=new Map,a=this._verticalSubdivision,l=a?_-e:i-s;let f=Math.ceil(l/h);if(f<=1)return;const c=Math.floor(l/f);let u,M,p,d,m,X,A,Y,x,y;f++,this._delta=c,a?(Y=-n-this._stepY,x=this._stepY,y=e):(Y=-this._stepX,x=n+this._stepX,y=s);for(let n=0;n<r.length;n++)if(u=r[n],!(u.length<2))for(let t=1;t<u.length;t++){if(M=u[t-1],p=u[t],a){if(M[1]===p[1]||M[1]<Y&&p[1]<Y||M[1]>x&&p[1]>x)continue;d=Math.min(M[1],p[1]),m=Math.max(M[1],p[1])}else{if(M[0]===p[0]||M[0]<Y&&p[0]<Y||M[0]>x&&p[0]>x)continue;d=Math.min(M[0],p[0]),m=Math.max(M[0],p[0])}for(;d<m;)X=Math.floor((d-y)/c),g(X,n,t,o),d+=c;A=Math.floor((m-y)/c),A>X&&g(A,n,t,o)}this._accelerationMap=o}_nextInside(){for(;;){if(this._currentX>this._xMax){if(this._currentY++,this._currentY>this._yMax)return null;this._currentX=this._xMin,this._shiftOddRows&&this._currentY%2&&this._currentX--}let t=this._currentX*this._stepX+this._offsetX;this._shiftOddRows&&this._currentY%2&&(t+=.5*this._stepX);const s=this._currentY*this._stepY+this._offsetY;let i,n;if(this._currentX++,this._gridType===e.Random){const e=(this._currentX%o+o)%o,h=(this._currentY%o+o)%o;i=this._graphicOriginX+t+this._stepX*this._randomness*(.5-f._randValues[h*o+e])*2/3,n=this._graphicOriginY+s+this._stepY*this._randomness*(.5-f._randValues[h*o+e+1])*2/3}else i=this._graphicOriginX+this._cosAngle*t+this._sinAngle*s,n=this._graphicOriginY-this._sinAngle*t+this._cosAngle*s;if(!this._testInsidePolygon||this._isInsidePolygon(i,n,this._geometry))return this._internalPlacement.setTranslate(i,n),this._internalPlacement}}_isInsidePolygon(s,i,e){const{rings:n}=e;if(t(this._accelerationMap))return c(s,i,e);const h=this._verticalSubdivision,_=h?i:s,r=Math.floor((_-this._polygonMin)/this._delta),o=this._accelerationMap.get(r);if(!o)return!1;let a,l,f,g,u,M=0;for(const t of o){u=t[0];const e=n[u];if(g=t[1],a=e[g-1],l=e[g],h){if(a[1]>i==l[1]>i)continue;f=(l[0]-a[0])*(i-a[1])-(l[1]-a[1])*(s-a[0])}else{if(a[0]>s==l[0]>s)continue;f=(l[1]-a[1])*(s-a[0])-(l[0]-a[0])*(i-a[1])}f>0?M++:M--}return 0!==M}}function c(t,s,i){const{rings:e}=i;let n,h,_,r=0;for(const o of e){n=o.length;for(let i=1;i<n;++i){if(h=o[i-1],_=o[i],h[1]>s==_[1]>s)continue;(_[0]-h[0])*(s-h[1])-(_[1]-h[1])*(t-h[0])>0?r++:r--}}return 0!==r}function g(t,s,i,e){let n=e.get(t);n||(n=[],e.set(t,n)),n.push([s,i])}export{l as PlacementInsidePolygon};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}