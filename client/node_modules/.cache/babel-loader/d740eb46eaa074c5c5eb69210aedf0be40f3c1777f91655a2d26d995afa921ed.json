{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\query-table-tabulator.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n//import 'react-tabulator/lib/styles.css';\nimport \"tabulator-tables/dist/css/tabulator_bootstrap4.min.css\"; // use Theme(s)\nimport { Tabulator, FormatModule, EditModule } from 'tabulator-tables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTabulator.registerModule([FormatModule, EditModule]);\nexport class QueryTableTabulator extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.el = /*#__PURE__*/React.createRef();\n    this.tabulator = void 0;\n    this.tableColumns = [\n    //ColumnDefinition[] = [\n    //{rowHandle:true, formatter:\"handle\", headerSort:false, frozen:true, width:30, minWidth:30},\n    {\n      title: \"Title\",\n      field: \"title\"\n    }, {\n      title: \"Created\",\n      field: \"created\"\n    }, {\n      title: \"Tags\",\n      field: \"tags\",\n      editor: \"list\",\n      editorParams: {\n        values: {\n          \"Tag12\": \"Tag12\",\n          \"Tag123\": \"Tag123\"\n        }\n      },\n      //this.props.userTags?.map(({tag}) => tag )},\n      formatterParams: {\n        style: \"PILL\"\n      }\n    }];\n    this.setData = () => {\n      this.setState(this.props.userItems);\n    };\n    this.clearData = () => {\n      this.setState([]);\n    };\n  }\n  componentDidMount() {\n    //instantiate Tabulator when element is mounted\n    this.tabulator = new Tabulator(this.el, {\n      data: this.props.userItems,\n      //link data to table\n      reactiveData: true,\n      //enable data reactivity\n      columns: this.tableColumns,\n      //define table columns\n      movableRows: true,\n      movableColumns: true,\n      layout: \"fitDataTable\",\n      pagination: true,\n      paginationSize: 5,\n      paginationInitialPage: 1,\n      paginationSizeSelector: [5, 10, 20, 50, 100]\n    });\n  }\n  render() {\n    console.log(\"query-table-tabulator\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => this.el = el\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nQueryTableTabulator.defaultProps = {\n  userItems: [{\n    id: ''\n  }]\n};\nconst mapStateToProps = _ref => {\n  let {\n    query: {\n      userItems,\n      userTags\n    }\n  } = _ref;\n  return {\n    userItems,\n    userTags\n  };\n};\nexport default connect(mapStateToProps)(QueryTableTabulator);","map":{"version":3,"names":["React","connect","Tabulator","FormatModule","EditModule","jsxDEV","_jsxDEV","registerModule","QueryTableTabulator","Component","constructor","arguments","el","createRef","tabulator","tableColumns","title","field","editor","editorParams","values","formatterParams","style","setData","setState","props","userItems","clearData","componentDidMount","data","reactiveData","columns","movableRows","movableColumns","layout","pagination","paginationSize","paginationInitialPage","paginationSizeSelector","render","console","log","ref","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","id","mapStateToProps","_ref","query","userTags"],"sources":["C:/code-challenge-react/frontend/src/components/main/query-table-tabulator.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n//import 'react-tabulator/lib/styles.css';\nimport \"tabulator-tables/dist/css/tabulator_bootstrap4.min.css\"; // use Theme(s)\nimport { ColumnDefinition, Tabulator, FormatModule, EditModule } from 'tabulator-tables'\nTabulator.registerModule([FormatModule, EditModule])\n\ninterface Item {\n  id: string,\n  title?: string,\n  created?: Date,\n  tags?: string[],\n}\n\ninterface Tags {\n  tag: string,\n  count: number,\n}\n\ninterface ItemProps {\n  userItems: Item[],\n  userTags?: Tags[],\n}\n\nexport class QueryTableTabulator extends React.Component <ItemProps, any> {\n  public static defaultProps = { userItems: [{id:'',}], }\n  el = React.createRef()\n  tabulator:any\n\n  componentDidMount() {\n    //instantiate Tabulator when element is mounted\n    this.tabulator = new Tabulator(this.el as any, {\n      data: this.props.userItems, //link data to table\n      reactiveData:true, //enable data reactivity\n      columns: this.tableColumns, //define table columns\n      movableRows: true,\n      movableColumns: true,\n      layout: \"fitDataTable\",\n      pagination: true,\n        paginationSize: 5,\n        paginationInitialPage: 1,\n        paginationSizeSelector: [5,10,20,50,100],\n    })\n  }\n\n  tableColumns: any[] = [ //ColumnDefinition[] = [\n    //{rowHandle:true, formatter:\"handle\", headerSort:false, frozen:true, width:30, minWidth:30},\n    { title: \"Title\", field: \"title\", },\n    { title: \"Created\", field: \"created\", },\n    { title: \"Tags\", field: \"tags\", \n      editor: \"list\",\n        editorParams: { values: {\"Tag12\":\"Tag12\",\"Tag123\":\"Tag123\"}},//this.props.userTags?.map(({tag}) => tag )},\n      formatterParams: { style: \"PILL\" }\n    },\n  ]\n\n  setData = () => { this.setState( this.props.userItems )}\n  clearData = () => { this.setState( [] )}\n\n  render() { console.log(\"query-table-tabulator\")\n    return (\n      <div ref={el => (this.el = el as any)} />\n    )\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems, userTags }}:any) => ({\n  userItems,\n  userTags\n})\n\nexport default connect(mapStateToProps, )(QueryTableTabulator)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC;AACA,OAAO,wDAAwD,CAAC,CAAC;AACjE,SAA2BC,SAAS,EAAEC,YAAY,EAAEC,UAAU,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACxFJ,SAAS,CAACK,cAAc,CAAC,CAACJ,YAAY,EAAEC,UAAU,CAAC,CAAC;AAmBpD,OAAO,MAAMI,mBAAmB,SAASR,KAAK,CAACS,SAAS,CAAkB;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAA,KAExEC,EAAE,gBAAGZ,KAAK,CAACa,SAAS,EAAE;IAAA,KACtBC,SAAS;IAAA,KAkBTC,YAAY,GAAU;IAAE;IACtB;IACA;MAAEC,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAS,CAAC,EACnC;MAAED,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAW,CAAC,EACvC;MAAED,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAC5BC,MAAM,EAAE,MAAM;MACZC,YAAY,EAAE;QAAEC,MAAM,EAAE;UAAC,OAAO,EAAC,OAAO;UAAC,QAAQ,EAAC;QAAQ;MAAC,CAAC;MAAC;MAC/DC,eAAe,EAAE;QAAEC,KAAK,EAAE;MAAO;IACnC,CAAC,CACF;IAAA,KAEDC,OAAO,GAAG,MAAM;MAAE,IAAI,CAACC,QAAQ,CAAE,IAAI,CAACC,KAAK,CAACC,SAAS,CAAE;IAAA,CAAC;IAAA,KACxDC,SAAS,GAAG,MAAM;MAAE,IAAI,CAACH,QAAQ,CAAE,EAAE,CAAE;IAAA,CAAC;EAAA;EA5BxCI,iBAAiBA,CAAA,EAAG;IAClB;IACA,IAAI,CAACd,SAAS,GAAG,IAAIZ,SAAS,CAAC,IAAI,CAACU,EAAE,EAAS;MAC7CiB,IAAI,EAAE,IAAI,CAACJ,KAAK,CAACC,SAAS;MAAE;MAC5BI,YAAY,EAAC,IAAI;MAAE;MACnBC,OAAO,EAAE,IAAI,CAAChB,YAAY;MAAE;MAC5BiB,WAAW,EAAE,IAAI;MACjBC,cAAc,EAAE,IAAI;MACpBC,MAAM,EAAE,cAAc;MACtBC,UAAU,EAAE,IAAI;MACdC,cAAc,EAAE,CAAC;MACjBC,qBAAqB,EAAE,CAAC;MACxBC,sBAAsB,EAAE,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG;IAC3C,CAAC,CAAC;EACJ;EAgBAC,MAAMA,CAAA,EAAG;IAAEC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IAC7C,oBACEnC,OAAA;MAAKoC,GAAG,EAAE9B,EAAE,IAAK,IAAI,CAACA,EAAE,GAAGA;IAAW;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAE7C;AACF;AAxCatC,mBAAmB,CAChBuC,YAAY,GAAG;EAAErB,SAAS,EAAE,CAAC;IAACsB,EAAE,EAAC;EAAG,CAAC;AAAG,CAAC;AAyCzD,MAAMC,eAAe,GAAGC,IAAA;EAAA,IAAC;IAAEC,KAAK,EAAE;MAAEzB,SAAS;MAAE0B;IAAS;EAAK,CAAC,GAAAF,IAAA;EAAA,OAAM;IAClExB,SAAS;IACT0B;EACF,CAAC;AAAA,CAAC;AAEF,eAAenD,OAAO,CAACgD,eAAe,CAAG,CAACzC,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}