{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../../core/Accessor.js\";\nimport { ByteSizeUnit as s, estimateAttributesObjectSize as i, estimateFixedArraySize as r } from \"../../../../../core/byteSizeEstimations.js\";\nimport { isNone as o, isSome as n } from \"../../../../../core/maybe.js\";\nimport { property as l } from \"../../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../../core/arrayUtils.js\";\nimport { subclass as a } from \"../../../../../core/accessorSupport/decorators/subclass.js\";\nimport { create as c, intersects as h, fromExtent as u, area as d } from \"../../../../../geometry/support/aaBoundingRect.js\";\nimport { getBoundsOptimizedGeometry as f } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { BoundsStore as _ } from \"../../../../../layers/graphics/data/BoundsStore.js\";\nimport p from \"../../../../../layers/support/TileInfo.js\";\nimport { TileKey as m } from \"../../../../../layers/support/TileKey.js\";\nimport { executeQueryForCount as g } from \"../../../../../rest/query/operations/query.js\";\nimport { FeatureServiceTileCache as y } from \"./FeatureServiceTileCache.js\";\nlet v = class extends t {\n  constructor(e) {\n    super(e), this.tileInfo = null, this.extent = null, this.maximumByteSize = 10 * s.MEGABYTES, this._tileBounds = new _(), this._tiles = new y(), this._refCounts = new Map(), this._tileFeatureCounts = new Map(), this._tmpBoundingRect = c();\n  }\n  add(e, t) {\n    const s = [];\n    for (const i of t) this._referenceFeature(i.objectId) === x.ADDED && s.push(i);\n    this._addTileStorage(e, new Set(t.map(e => e.objectId)), C(t)), this.featureStore.addMany(s), this._tiles.applyByteSizeLimit(this.maximumByteSize, e => this._removeTileStorage(e));\n  }\n  destroy() {\n    this.clear(), this._tileFeatureCounts.clear();\n  }\n  clear() {\n    this.featureStore.clear(), this._tileBounds.clear(), this._tiles.clear(), this._refCounts.clear();\n  }\n  refresh() {\n    this.clear(), this._tileFeatureCounts.clear();\n  }\n  processEdits(e, t, s) {\n    return this._processEditsDelete(e.deletedFeatures.concat(e.updatedFeatures)), this._processEditsRefetch(e.addedFeatures.concat(e.updatedFeatures), t, s);\n  }\n  _addTileStorage(e, t, s) {\n    const i = e.id;\n    this._tiles.set(i, new T(e, t, s)), this._tileBounds.set(i, e.extent), this._tileFeatureCounts.set(i, t.size);\n  }\n  _remove(_ref) {\n    let {\n      id: e\n    } = _ref;\n    const t = this._tiles.get(e);\n    t && this._removeTileStorage(t);\n  }\n  _removeTileStorage(e) {\n    const t = [];\n    for (const i of e.objectIds) this._unreferenceFeature(i) === x.REMOVED && t.push(i);\n    this.featureStore.removeManyById(t);\n    const s = e.data.id;\n    this._tiles.delete(s), this._tileBounds.delete(s);\n  }\n  _processEditsDelete(e) {\n    this.featureStore.removeManyById(e);\n    for (const [, t] of this._tiles) {\n      for (const s of e) t.objectIds.delete(s);\n      this._tileFeatureCounts.set(t.data.id, t.objectIds.size);\n    }\n    for (const t of e) this._refCounts.delete(t);\n  }\n  async _processEditsRefetch(e, t, s) {\n    const i = (await t(e, s)).features,\n      {\n        hasZ: r,\n        hasM: n\n      } = this.featureStore;\n    for (const l of i) {\n      const e = f(this._tmpBoundingRect, l.geometry, r, n);\n      o(e) || this._tileBounds.forEachInBounds(e, e => {\n        const t = this._tiles.get(e);\n        this.featureStore.add(l);\n        const s = l.objectId;\n        t.objectIds.has(s) || (t.objectIds.add(s), this._referenceFeature(s), this._tileFeatureCounts.set(t.data.id, t.objectIds.size));\n      });\n    }\n  }\n  process(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => !0;\n    if (o(this.tileInfo) || !e.extent || n(this.extent) && !h(u(this.extent, this._tmpBoundingRect), e.extent)) return new I(e);\n    if (this._tiles.has(e.id)) return new I(e);\n    const s = this._createTileTree(e, this.tileInfo);\n    return this._simplify(s, t, null, 0, 1), this._collectMissingTiles(e, s, this.tileInfo);\n  }\n  get debugInfo() {\n    return Array.from(this._tiles.values()).map(_ref2 => {\n      let {\n        data: e\n      } = _ref2;\n      return {\n        data: e,\n        featureCount: this._tileFeatureCounts.get(e.id) || 0\n      };\n    });\n  }\n  getFeatureCount(e) {\n    return this._tileFeatureCounts.get(e.id) ?? 0;\n  }\n  async fetchCount(e, t, s, i) {\n    const r = this._tileFeatureCounts.get(e.id);\n    if (null != r) return r;\n    const o = await g(t, s, i);\n    return this._tileFeatureCounts.set(e.id, o.data.count), o.data.count;\n  }\n  _createTileTree(e, t) {\n    const s = new F(e.level, e.row, e.col);\n    return t.updateTileInfo(s, p.ExtrapolateOptions.POWER_OF_TWO), this._tileBounds.forEachInBounds(e.extent, i => {\n      const r = this._tiles.get(i)?.data;\n      r && this._tilesAreRelated(e, r) && this._populateChildren(s, r, t, this._tileFeatureCounts.get(r.id) || 0);\n    }), s;\n  }\n  _tilesAreRelated(e, t) {\n    if (!e || !t) return !1;\n    if (e.level === t.level) return e.row === t.row && e.col === t.col;\n    const s = e.level < t.level,\n      i = s ? e : t,\n      r = s ? t : e,\n      o = 1 << r.level - i.level;\n    return Math.floor(r.row / o) === i.row && Math.floor(r.col / o) === i.col;\n  }\n  _populateChildren(e, t, s, i) {\n    const r = t.level - e.level - 1;\n    if (r < 0) return void (e.isLeaf = !0);\n    const o = t.row >> r,\n      l = t.col >> r,\n      a = e.row << 1,\n      c = l - (e.col << 1) + (o - a << 1),\n      h = e.children[c];\n    if (n(h)) this._populateChildren(h, t, s, i);else {\n      const r = new F(e.level + 1, o, l);\n      s.updateTileInfo(r, p.ExtrapolateOptions.POWER_OF_TWO), e.children[c] = r, this._populateChildren(r, t, s, i);\n    }\n  }\n  _simplify(e, t, s, i, r) {\n    const o = r * r;\n    if (e.isLeaf) return t(this.getFeatureCount(e), r) ? 0 : (this._remove(e), n(s) && (s.children[i] = null), o);\n    const l = r / 2,\n      a = l * l;\n    let c = 0;\n    for (let h = 0; h < e.children.length; h++) {\n      const s = e.children[h];\n      c += n(s) ? this._simplify(s, t, e, h, l) : a;\n    }\n    return 0 === c ? this._mergeChildren(e) : 1 - c / o < w && (this._purge(e), n(s) && (s.children[i] = null), c = o), c;\n  }\n  _mergeChildren(e) {\n    const t = new Set();\n    let s = 0;\n    this._forEachLeaf(e, e => {\n      const i = this._tiles.get(e.id);\n      if (i) {\n        s += i.byteSize;\n        for (const e of i.objectIds) t.has(e) || (t.add(e), this._referenceFeature(e));\n        this._remove(e);\n      }\n    }), this._addTileStorage(e, t, s), e.isLeaf = !0, e.children[0] = e.children[1] = e.children[2] = e.children[3] = null, this._tileFeatureCounts.set(e.id, t.size);\n  }\n  _forEachLeaf(e, t) {\n    for (const s of e.children) o(s) || (s.isLeaf ? t(s) : this._forEachLeaf(s, t));\n  }\n  _purge(e) {\n    if (!o(e)) if (e.isLeaf) this._remove(e);else for (let t = 0; t < e.children.length; t++) {\n      const s = e.children[t];\n      this._purge(s), e.children[t] = null;\n    }\n  }\n  _collectMissingTiles(e, t, s) {\n    const i = new j(s, e, this.extent);\n    return this._collectMissingTilesRecurse(t, i, 1), i.info;\n  }\n  _collectMissingTilesRecurse(e, t, s) {\n    if (e.isLeaf) return;\n    if (!e.hasChildren) return void t.addMissing(e.level, e.row, e.col, s);\n    const i = s / 2;\n    for (let r = 0; r < e.children.length; r++) {\n      const s = e.children[r];\n      o(s) ? t.addMissing(e.level + 1, (e.row << 1) + ((2 & r) >> 1), (e.col << 1) + (1 & r), i) : this._collectMissingTilesRecurse(s, t, i);\n    }\n  }\n  _referenceFeature(e) {\n    const t = (this._refCounts.get(e) || 0) + 1;\n    return this._refCounts.set(e, t), 1 === t ? x.ADDED : x.UNCHANGED;\n  }\n  _unreferenceFeature(e) {\n    const t = (this._refCounts.get(e) || 0) - 1;\n    return 0 === t ? (this._refCounts.delete(e), x.REMOVED) : (t > 0 && this._refCounts.set(e, t), x.UNCHANGED);\n  }\n  get test() {\n    return {\n      tiles: Array.from(this._tiles.values()).map(e => `${e.data.id}:[${Array.from(e.objectIds)}]`),\n      featureReferences: Array.from(this._refCounts.keys()).map(e => `${e}:${this._refCounts.get(e)}`)\n    };\n  }\n};\nfunction C(e) {\n  return e.reduce((e, t) => e + E(t), 0);\n}\nfunction E(e) {\n  return 32 + S(e.geometry) + i(e.attributes);\n}\nfunction S(e) {\n  if (o(e)) return 0;\n  const t = r(e.lengths, 4);\n  return 32 + r(e.coords, 8) + t;\n}\ne([l({\n  constructOnly: !0\n})], v.prototype, \"featureStore\", void 0), e([l()], v.prototype, \"tileInfo\", void 0), e([l()], v.prototype, \"extent\", void 0), e([l()], v.prototype, \"maximumByteSize\", void 0), v = e([a(\"esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTileStore\")], v);\nclass T {\n  constructor(e, t, s) {\n    this.data = e, this.objectIds = t, this.byteSize = s;\n  }\n}\nclass F {\n  constructor(e, t, s) {\n    this.level = e, this.row = t, this.col = s, this.isLeaf = !1, this.extent = null, this.children = [null, null, null, null];\n  }\n  get hasChildren() {\n    return !this.isLeaf && (n(this.children[0]) || n(this.children[1]) || n(this.children[2]) || n(this.children[3]));\n  }\n}\nclass I {\n  constructor(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    this.missingTiles = t, this.fullArea = 0, this.coveredArea = 0, this.fullArea = d(e.extent), this.coveredArea = this.fullArea;\n  }\n  prepend(e) {\n    this.missingTiles = e.missingTiles.concat(this.missingTiles), this.coveredArea += e.coveredArea, this.fullArea += e.fullArea;\n  }\n}\nclass j {\n  constructor(e, t, s) {\n    this._tileInfo = e, this._extent = null, this.info = new I(t), n(s) && (this._extent = u(s));\n  }\n  addMissing(e, t, s, i) {\n    const r = new m(null, e, t, s);\n    this._tileInfo.updateTileInfo(r, p.ExtrapolateOptions.POWER_OF_TWO), o(r.extent) || n(this._extent) && !h(this._extent, r.extent) || (this.info.missingTiles.push({\n      data: r,\n      resolution: i\n    }), this.info.coveredArea -= d(r.extent));\n  }\n}\nconst w = .18751;\nvar x;\n!function (e) {\n  e[e.ADDED = 0] = \"ADDED\", e[e.REMOVED = 1] = \"REMOVED\", e[e.UNCHANGED = 2] = \"UNCHANGED\";\n}(x || (x = {}));\nexport { v as FeatureServiceTileStore, I as ProcessResult };","map":{"version":3,"names":["_","e","t","ByteSizeUnit","s","estimateAttributesObjectSize","i","estimateFixedArraySize","r","isNone","o","isSome","n","property","l","subclass","a","create","c","intersects","h","fromExtent","u","area","d","getBoundsOptimizedGeometry","f","BoundsStore","p","TileKey","m","executeQueryForCount","g","FeatureServiceTileCache","y","v","constructor","tileInfo","extent","maximumByteSize","MEGABYTES","_tileBounds","_tiles","_refCounts","Map","_tileFeatureCounts","_tmpBoundingRect","add","_referenceFeature","objectId","x","ADDED","push","_addTileStorage","Set","map","C","featureStore","addMany","applyByteSizeLimit","_removeTileStorage","destroy","clear","refresh","processEdits","_processEditsDelete","deletedFeatures","concat","updatedFeatures","_processEditsRefetch","addedFeatures","id","set","T","size","_remove","_ref","get","objectIds","_unreferenceFeature","REMOVED","removeManyById","data","delete","features","hasZ","hasM","geometry","forEachInBounds","has","process","arguments","length","undefined","I","_createTileTree","_simplify","_collectMissingTiles","debugInfo","Array","from","values","_ref2","featureCount","getFeatureCount","fetchCount","count","F","level","row","col","updateTileInfo","ExtrapolateOptions","POWER_OF_TWO","_tilesAreRelated","_populateChildren","Math","floor","isLeaf","children","_mergeChildren","w","_purge","_forEachLeaf","byteSize","j","_collectMissingTilesRecurse","info","hasChildren","addMissing","UNCHANGED","test","tiles","featureReferences","keys","reduce","E","S","attributes","lengths","coords","constructOnly","prototype","missingTiles","fullArea","coveredArea","prepend","_tileInfo","_extent","resolution","FeatureServiceTileStore","ProcessResult"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/interactive/snapping/featureSources/featureServiceSource/FeatureServiceTileStore.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../../chunks/tslib.es6.js\";import t from\"../../../../../core/Accessor.js\";import{ByteSizeUnit as s,estimateAttributesObjectSize as i,estimateFixedArraySize as r}from\"../../../../../core/byteSizeEstimations.js\";import{isNone as o,isSome as n}from\"../../../../../core/maybe.js\";import{property as l}from\"../../../../../core/accessorSupport/decorators/property.js\";import\"../../../../../core/accessorSupport/ensureType.js\";import\"../../../../../core/arrayUtils.js\";import{subclass as a}from\"../../../../../core/accessorSupport/decorators/subclass.js\";import{create as c,intersects as h,fromExtent as u,area as d}from\"../../../../../geometry/support/aaBoundingRect.js\";import{getBoundsOptimizedGeometry as f}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{BoundsStore as _}from\"../../../../../layers/graphics/data/BoundsStore.js\";import p from\"../../../../../layers/support/TileInfo.js\";import{TileKey as m}from\"../../../../../layers/support/TileKey.js\";import{executeQueryForCount as g}from\"../../../../../rest/query/operations/query.js\";import{FeatureServiceTileCache as y}from\"./FeatureServiceTileCache.js\";let v=class extends t{constructor(e){super(e),this.tileInfo=null,this.extent=null,this.maximumByteSize=10*s.MEGABYTES,this._tileBounds=new _,this._tiles=new y,this._refCounts=new Map,this._tileFeatureCounts=new Map,this._tmpBoundingRect=c()}add(e,t){const s=[];for(const i of t)this._referenceFeature(i.objectId)===x.ADDED&&s.push(i);this._addTileStorage(e,new Set(t.map((e=>e.objectId))),C(t)),this.featureStore.addMany(s),this._tiles.applyByteSizeLimit(this.maximumByteSize,(e=>this._removeTileStorage(e)))}destroy(){this.clear(),this._tileFeatureCounts.clear()}clear(){this.featureStore.clear(),this._tileBounds.clear(),this._tiles.clear(),this._refCounts.clear()}refresh(){this.clear(),this._tileFeatureCounts.clear()}processEdits(e,t,s){return this._processEditsDelete(e.deletedFeatures.concat(e.updatedFeatures)),this._processEditsRefetch(e.addedFeatures.concat(e.updatedFeatures),t,s)}_addTileStorage(e,t,s){const i=e.id;this._tiles.set(i,new T(e,t,s)),this._tileBounds.set(i,e.extent),this._tileFeatureCounts.set(i,t.size)}_remove({id:e}){const t=this._tiles.get(e);t&&this._removeTileStorage(t)}_removeTileStorage(e){const t=[];for(const i of e.objectIds)this._unreferenceFeature(i)===x.REMOVED&&t.push(i);this.featureStore.removeManyById(t);const s=e.data.id;this._tiles.delete(s),this._tileBounds.delete(s)}_processEditsDelete(e){this.featureStore.removeManyById(e);for(const[,t]of this._tiles){for(const s of e)t.objectIds.delete(s);this._tileFeatureCounts.set(t.data.id,t.objectIds.size)}for(const t of e)this._refCounts.delete(t)}async _processEditsRefetch(e,t,s){const i=(await t(e,s)).features,{hasZ:r,hasM:n}=this.featureStore;for(const l of i){const e=f(this._tmpBoundingRect,l.geometry,r,n);o(e)||this._tileBounds.forEachInBounds(e,(e=>{const t=this._tiles.get(e);this.featureStore.add(l);const s=l.objectId;t.objectIds.has(s)||(t.objectIds.add(s),this._referenceFeature(s),this._tileFeatureCounts.set(t.data.id,t.objectIds.size))}))}}process(e,t=(()=>!0)){if(o(this.tileInfo)||!e.extent||n(this.extent)&&!h(u(this.extent,this._tmpBoundingRect),e.extent))return new I(e);if(this._tiles.has(e.id))return new I(e);const s=this._createTileTree(e,this.tileInfo);return this._simplify(s,t,null,0,1),this._collectMissingTiles(e,s,this.tileInfo)}get debugInfo(){return Array.from(this._tiles.values()).map((({data:e})=>({data:e,featureCount:this._tileFeatureCounts.get(e.id)||0})))}getFeatureCount(e){return this._tileFeatureCounts.get(e.id)??0}async fetchCount(e,t,s,i){const r=this._tileFeatureCounts.get(e.id);if(null!=r)return r;const o=await g(t,s,i);return this._tileFeatureCounts.set(e.id,o.data.count),o.data.count}_createTileTree(e,t){const s=new F(e.level,e.row,e.col);return t.updateTileInfo(s,p.ExtrapolateOptions.POWER_OF_TWO),this._tileBounds.forEachInBounds(e.extent,(i=>{const r=this._tiles.get(i)?.data;r&&this._tilesAreRelated(e,r)&&this._populateChildren(s,r,t,this._tileFeatureCounts.get(r.id)||0)})),s}_tilesAreRelated(e,t){if(!e||!t)return!1;if(e.level===t.level)return e.row===t.row&&e.col===t.col;const s=e.level<t.level,i=s?e:t,r=s?t:e,o=1<<r.level-i.level;return Math.floor(r.row/o)===i.row&&Math.floor(r.col/o)===i.col}_populateChildren(e,t,s,i){const r=t.level-e.level-1;if(r<0)return void(e.isLeaf=!0);const o=t.row>>r,l=t.col>>r,a=e.row<<1,c=l-(e.col<<1)+(o-a<<1),h=e.children[c];if(n(h))this._populateChildren(h,t,s,i);else{const r=new F(e.level+1,o,l);s.updateTileInfo(r,p.ExtrapolateOptions.POWER_OF_TWO),e.children[c]=r,this._populateChildren(r,t,s,i)}}_simplify(e,t,s,i,r){const o=r*r;if(e.isLeaf)return t(this.getFeatureCount(e),r)?0:(this._remove(e),n(s)&&(s.children[i]=null),o);const l=r/2,a=l*l;let c=0;for(let h=0;h<e.children.length;h++){const s=e.children[h];c+=n(s)?this._simplify(s,t,e,h,l):a}return 0===c?this._mergeChildren(e):1-c/o<w&&(this._purge(e),n(s)&&(s.children[i]=null),c=o),c}_mergeChildren(e){const t=new Set;let s=0;this._forEachLeaf(e,(e=>{const i=this._tiles.get(e.id);if(i){s+=i.byteSize;for(const e of i.objectIds)t.has(e)||(t.add(e),this._referenceFeature(e));this._remove(e)}})),this._addTileStorage(e,t,s),e.isLeaf=!0,e.children[0]=e.children[1]=e.children[2]=e.children[3]=null,this._tileFeatureCounts.set(e.id,t.size)}_forEachLeaf(e,t){for(const s of e.children)o(s)||(s.isLeaf?t(s):this._forEachLeaf(s,t))}_purge(e){if(!o(e))if(e.isLeaf)this._remove(e);else for(let t=0;t<e.children.length;t++){const s=e.children[t];this._purge(s),e.children[t]=null}}_collectMissingTiles(e,t,s){const i=new j(s,e,this.extent);return this._collectMissingTilesRecurse(t,i,1),i.info}_collectMissingTilesRecurse(e,t,s){if(e.isLeaf)return;if(!e.hasChildren)return void t.addMissing(e.level,e.row,e.col,s);const i=s/2;for(let r=0;r<e.children.length;r++){const s=e.children[r];o(s)?t.addMissing(e.level+1,(e.row<<1)+((2&r)>>1),(e.col<<1)+(1&r),i):this._collectMissingTilesRecurse(s,t,i)}}_referenceFeature(e){const t=(this._refCounts.get(e)||0)+1;return this._refCounts.set(e,t),1===t?x.ADDED:x.UNCHANGED}_unreferenceFeature(e){const t=(this._refCounts.get(e)||0)-1;return 0===t?(this._refCounts.delete(e),x.REMOVED):(t>0&&this._refCounts.set(e,t),x.UNCHANGED)}get test(){return{tiles:Array.from(this._tiles.values()).map((e=>`${e.data.id}:[${Array.from(e.objectIds)}]`)),featureReferences:Array.from(this._refCounts.keys()).map((e=>`${e}:${this._refCounts.get(e)}`))}}};function C(e){return e.reduce(((e,t)=>e+E(t)),0)}function E(e){return 32+S(e.geometry)+i(e.attributes)}function S(e){if(o(e))return 0;const t=r(e.lengths,4);return 32+r(e.coords,8)+t}e([l({constructOnly:!0})],v.prototype,\"featureStore\",void 0),e([l()],v.prototype,\"tileInfo\",void 0),e([l()],v.prototype,\"extent\",void 0),e([l()],v.prototype,\"maximumByteSize\",void 0),v=e([a(\"esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTileStore\")],v);class T{constructor(e,t,s){this.data=e,this.objectIds=t,this.byteSize=s}}class F{constructor(e,t,s){this.level=e,this.row=t,this.col=s,this.isLeaf=!1,this.extent=null,this.children=[null,null,null,null]}get hasChildren(){return!this.isLeaf&&(n(this.children[0])||n(this.children[1])||n(this.children[2])||n(this.children[3]))}}class I{constructor(e,t=[]){this.missingTiles=t,this.fullArea=0,this.coveredArea=0,this.fullArea=d(e.extent),this.coveredArea=this.fullArea}prepend(e){this.missingTiles=e.missingTiles.concat(this.missingTiles),this.coveredArea+=e.coveredArea,this.fullArea+=e.fullArea}}class j{constructor(e,t,s){this._tileInfo=e,this._extent=null,this.info=new I(t),n(s)&&(this._extent=u(s))}addMissing(e,t,s,i){const r=new m(null,e,t,s);this._tileInfo.updateTileInfo(r,p.ExtrapolateOptions.POWER_OF_TWO),o(r.extent)||n(this._extent)&&!h(this._extent,r.extent)||(this.info.missingTiles.push({data:r,resolution:i}),this.info.coveredArea-=d(r.extent))}}const w=.18751;var x;!function(e){e[e.ADDED=0]=\"ADDED\",e[e.REMOVED=1]=\"REMOVED\",e[e.UNCHANGED=2]=\"UNCHANGED\"}(x||(x={}));export{v as FeatureServiceTileStore,I as ProcessResult};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}