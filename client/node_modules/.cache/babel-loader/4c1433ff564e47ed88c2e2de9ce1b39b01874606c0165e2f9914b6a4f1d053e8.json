{"ast":null,"code":"import _createClass from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\n/* Copyright (c) 2022 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * There are 5 potential error codes that might be thrown by {@linkcode ArcGISTokenRequestError}. 2 of these codes are used by both\n * {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationCredentialsManager}:\n *\n * * `TOKEN_REFRESH_FAILED` when a request for an new access token fails.\n * * `UNKNOWN_ERROR_CODE` the error is unknown. More information may be available in {@linkcode ArcGISTokenRequestError.response}\n *\n * The 3 remaining error codes will only be thrown when using {@linkcode ArcGISIdentityManager}:\n *\n * * `GENERATE_TOKEN_FOR_SERVER_FAILED` when a request for a token for a specific federated server fails.\n * * `REFRESH_TOKEN_EXCHANGE_FAILED` when a request for a new refresh token fails.\n * * `NOT_FEDERATED` when the requested server isn't federated with the portal specified in {@linkcode ArcGISIdentityManager.portal}.\n */\nexport var ArcGISTokenRequestErrorCodes;\n(function (ArcGISTokenRequestErrorCodes) {\n  ArcGISTokenRequestErrorCodes[\"TOKEN_REFRESH_FAILED\"] = \"TOKEN_REFRESH_FAILED\";\n  ArcGISTokenRequestErrorCodes[\"GENERATE_TOKEN_FOR_SERVER_FAILED\"] = \"GENERATE_TOKEN_FOR_SERVER_FAILED\";\n  ArcGISTokenRequestErrorCodes[\"REFRESH_TOKEN_EXCHANGE_FAILED\"] = \"REFRESH_TOKEN_EXCHANGE_FAILED\";\n  ArcGISTokenRequestErrorCodes[\"NOT_FEDERATED\"] = \"NOT_FEDERATED\";\n  ArcGISTokenRequestErrorCodes[\"UNKNOWN_ERROR_CODE\"] = \"UNKNOWN_ERROR_CODE\";\n})(ArcGISTokenRequestErrorCodes || (ArcGISTokenRequestErrorCodes = {}));\n/**\n * This error is thrown when {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationCredentialsManager} fails to refresh a token or generate a new token\n * for a request. Generally in this scenario the credentials are invalid for the request and the you should recreate the {@linkcode ApplicationCredentialsManager}\n * or prompt the user to authenticate again with {@linkcode ArcGISIdentityManager}. See {@linkcode ArcGISTokenRequestErrorCodes} for a more detailed description of\n * the possible error codes.\n *\n * ```js\n * request(someUrl, {\n *   authentication: someAuthenticationManager\n * }).catch(e => {\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     // ArcGIS REST JS could not generate an appropriate token for this request\n *     // All credentials are likely invalid and the authentication process should be restarted\n *   }\n * })\n * ```\n */\nexport var ArcGISTokenRequestError = /*#__PURE__*/function (_Error) {\n  _inherits(ArcGISTokenRequestError, _Error);\n  var _super = _createSuper(ArcGISTokenRequestError);\n  /**\n   * Create a new `ArcGISTokenRequestError`  object.\n   *\n   * @param message - The error message from the API\n   * @param code - The error code from the API\n   * @param response - The original response from the API that caused the error\n   * @param url - The original url of the request\n   * @param options - The original options and parameters of the request\n   */\n  function ArcGISTokenRequestError() {\n    var _this;\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"UNKNOWN_ERROR\";\n    var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ArcGISTokenRequestErrorCodes.UNKNOWN_ERROR_CODE;\n    var response = arguments.length > 2 ? arguments[2] : undefined;\n    var url = arguments.length > 3 ? arguments[3] : undefined;\n    var options = arguments.length > 4 ? arguments[4] : undefined;\n    _classCallCheck(this, ArcGISTokenRequestError);\n    // 'Error' breaks prototype chain here\n    _this = _super.call(this, message);\n    // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n    // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n    var actualProto = (this instanceof ArcGISTokenRequestError ? this.constructor : void 0).prototype;\n    Object.setPrototypeOf(_assertThisInitialized(_this), actualProto);\n    _this.name = \"ArcGISTokenRequestError\";\n    _this.message = \"\".concat(code, \": \").concat(message);\n    _this.originalMessage = message;\n    _this.code = code;\n    _this.response = response;\n    _this.url = url;\n    _this.options = options;\n    return _this;\n  }\n  return _createClass(ArcGISTokenRequestError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));","map":{"version":3,"names":["ArcGISTokenRequestErrorCodes","ArcGISTokenRequestError","_Error","_inherits","_super","_createSuper","_this","message","arguments","length","undefined","code","UNKNOWN_ERROR_CODE","response","url","options","_classCallCheck","call","actualProto","constructor","prototype","Object","setPrototypeOf","_assertThisInitialized","name","concat","originalMessage","_createClass","_wrapNativeSuper","Error"],"sources":["C:\\code-challenge-react\\node_modules\\@esri\\arcgis-rest-request\\src\\utils\\ArcGISTokenRequestError.ts"],"sourcesContent":["/* Copyright (c) 2022 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { IRequestOptions } from \"./IRequestOptions.js\";\n\n/**\n * There are 5 potential error codes that might be thrown by {@linkcode ArcGISTokenRequestError}. 2 of these codes are used by both\n * {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationCredentialsManager}:\n *\n * * `TOKEN_REFRESH_FAILED` when a request for an new access token fails.\n * * `UNKNOWN_ERROR_CODE` the error is unknown. More information may be available in {@linkcode ArcGISTokenRequestError.response}\n *\n * The 3 remaining error codes will only be thrown when using {@linkcode ArcGISIdentityManager}:\n *\n * * `GENERATE_TOKEN_FOR_SERVER_FAILED` when a request for a token for a specific federated server fails.\n * * `REFRESH_TOKEN_EXCHANGE_FAILED` when a request for a new refresh token fails.\n * * `NOT_FEDERATED` when the requested server isn't federated with the portal specified in {@linkcode ArcGISIdentityManager.portal}.\n */\nexport enum ArcGISTokenRequestErrorCodes {\n  TOKEN_REFRESH_FAILED = \"TOKEN_REFRESH_FAILED\",\n  GENERATE_TOKEN_FOR_SERVER_FAILED = \"GENERATE_TOKEN_FOR_SERVER_FAILED\",\n  REFRESH_TOKEN_EXCHANGE_FAILED = \"REFRESH_TOKEN_EXCHANGE_FAILED\",\n  NOT_FEDERATED = \"NOT_FEDERATED\",\n  UNKNOWN_ERROR_CODE = \"UNKNOWN_ERROR_CODE\"\n}\n\n/**\n * This error is thrown when {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationCredentialsManager} fails to refresh a token or generate a new token\n * for a request. Generally in this scenario the credentials are invalid for the request and the you should recreate the {@linkcode ApplicationCredentialsManager}\n * or prompt the user to authenticate again with {@linkcode ArcGISIdentityManager}. See {@linkcode ArcGISTokenRequestErrorCodes} for a more detailed description of\n * the possible error codes.\n *\n * ```js\n * request(someUrl, {\n *   authentication: someAuthenticationManager\n * }).catch(e => {\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     // ArcGIS REST JS could not generate an appropriate token for this request\n *     // All credentials are likely invalid and the authentication process should be restarted\n *   }\n * })\n * ```\n */\nexport class ArcGISTokenRequestError extends Error {\n  /**\n   * The name of this error. Will always be `\"ArcGISTokenRequestError\"` to conform with the [`Error`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) class.\n   */\n  public name: string;\n\n  /**\n   * Formatted error message. See the [`Error`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) class for more details.\n   */\n  public message: string;\n\n  /**\n   * The error message return from the request.\n   */\n  public originalMessage: string;\n\n  /**\n   * The error code for the request.\n   */\n  public code: ArcGISTokenRequestErrorCodes;\n\n  /**\n   * The original JSON response the caused the error.\n   */\n  public response: any;\n\n  /**\n   * The URL of the original request that caused the error\n   */\n  public url: string;\n\n  /**\n   * The options of the original request that caused the error\n   */\n  public options: IRequestOptions;\n\n  /**\n   * Create a new `ArcGISTokenRequestError`  object.\n   *\n   * @param message - The error message from the API\n   * @param code - The error code from the API\n   * @param response - The original response from the API that caused the error\n   * @param url - The original url of the request\n   * @param options - The original options and parameters of the request\n   */\n  constructor(\n    message = \"UNKNOWN_ERROR\",\n    code = ArcGISTokenRequestErrorCodes.UNKNOWN_ERROR_CODE,\n    response?: any,\n    url?: string,\n    options?: IRequestOptions\n  ) {\n    // 'Error' breaks prototype chain here\n    super(message);\n\n    // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n    // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n    const actualProto = new.target.prototype;\n    Object.setPrototypeOf(this, actualProto);\n\n    this.name = \"ArcGISTokenRequestError\";\n    this.message = `${code}: ${message}`;\n    this.originalMessage = message;\n    this.code = code;\n    this.response = response;\n    this.url = url;\n    this.options = options;\n  }\n}\n"],"mappings":";;;;;;AAAA;;AAKA;;;;;;;;;;;;;AAaA,WAAYA,4BAMX;AAND,WAAYA,4BAA4B;EACtCA,4BAAA,iDAA6C;EAC7CA,4BAAA,yEAAqE;EACrEA,4BAAA,mEAA+D;EAC/DA,4BAAA,mCAA+B;EAC/BA,4BAAA,6CAAyC;AAC3C,CAAC,EANWA,4BAA4B,KAA5BA,4BAA4B;AAQxC;;;;;;;;;;;;;;;;;AAiBA,WAAaC,uBAAwB,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,uBAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,uBAAA;EAoCnC;;;;;;;;;EASA,SAAAA,wBAAA,EAK2B;IAAA,IAAAK,KAAA;IAAA,IAJzBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,eAAe;IAAA,IACzBG,IAAI,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,4BAA4B,CAACY,kBAAkB;IAAA,IACtDC,QAAc,GAAAL,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAA,IACdI,GAAY,GAAAN,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAA,IACZK,OAAyB,GAAAP,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAAM,eAAA,OAAAf,uBAAA;IAEzB;IACAK,KAAA,GAAAF,MAAA,CAAAa,IAAA,OAAMV,OAAO;IAEb;IACA;IACA;IACA;IACA,IAAMW,WAAW,GAAG,iBAAAjB,uBAAA,QAAAkB,WAAA,WAAWC,SAAS;IACxCC,MAAM,CAACC,cAAc,CAAAC,sBAAA,CAAAjB,KAAA,GAAOY,WAAW,CAAC;IAExCZ,KAAA,CAAKkB,IAAI,GAAG,yBAAyB;IACrClB,KAAA,CAAKC,OAAO,MAAAkB,MAAA,CAAMd,IAAI,QAAAc,MAAA,CAAKlB,OAAO,CAAE;IACpCD,KAAA,CAAKoB,eAAe,GAAGnB,OAAO;IAC9BD,KAAA,CAAKK,IAAI,GAAGA,IAAI;IAChBL,KAAA,CAAKO,QAAQ,GAAGA,QAAQ;IACxBP,KAAA,CAAKQ,GAAG,GAAGA,GAAG;IACdR,KAAA,CAAKS,OAAO,GAAGA,OAAO;IAAC,OAAAT,KAAA;EACzB;EAAC,OAAAqB,YAAA,CAAA1B,uBAAA;AAAA,gBAAA2B,gBAAA,CArE0CC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}