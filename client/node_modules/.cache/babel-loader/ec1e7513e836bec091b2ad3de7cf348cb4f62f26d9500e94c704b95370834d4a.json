{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { Build } from '@stencil/core/internal/client/index.js';\nimport { c as getElementDir, r as closestElementCrossShadowBoundary } from './dom.js';\nimport { d as debounce } from './debounce.js';\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition$1 = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\nconst min$1 = Math.min;\nconst max$1 = Math.max;\nfunction within(min$1$1, value, max$1$1) {\n  return max$1(min$1$1, min$1(value, max$1$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = options || {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = state;\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n});\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = options;\n      const {\n        rects\n      } = state;\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\nasync function convertValueToCoords(state, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(state) : value;\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = {\n      ...clippingAncestor\n    };\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldIgnoreCurrentNode = computedStyle.position === 'fixed';\n    if (shouldIgnoreCurrentNode) {\n      currentContainingBlockComputedStyle = null;\n    } else {\n      const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n      if (shouldDropCurrentNode) {\n        // Drop non-containing blocks.\n        result = result.filter(ancestor => ancestor !== currentNode);\n      } else {\n        // Record last containing block for next iteration.\n        currentContainingBlockComputedStyle = computedStyle;\n      }\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return getCssDimensions(element);\n  }\n  return element.getBoundingClientRect();\n}\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\n/**\n * This module helps users provide custom configuration for component internals.\n *\n * @internal\n */\nconst configOverrides = globalThis[\"calciteComponentsConfig\"];\nconst config = {\n  /**\n   * We apply a custom fix to improve positioning for non-Chromium browsers.\n   * The fix comes at a performance cost, so provides users a way to opt-out if necessary.\n   *\n   * @internal\n   */\n  floatingUINonChromiumPositioningFix: true,\n  ...configOverrides\n};\nconst floatingUIBrowserCheck = patchFloatingUiForNonChromiumBrowsers();\nasync function patchFloatingUiForNonChromiumBrowsers() {\n  function getUAData() {\n    return navigator.userAgentData;\n  }\n  function getUAString() {\n    const uaData = getUAData();\n    return uaData?.brands ? uaData.brands.map(_ref2 => {\n      let {\n        brand,\n        version\n      } = _ref2;\n      return `${brand}/${version}`;\n    }).join(\" \") : navigator.userAgent;\n  }\n  function isChrome109OrAbove() {\n    const uaData = getUAData();\n    if (uaData?.brands) {\n      return !!uaData.brands.find(_ref3 => {\n        let {\n          brand,\n          version\n        } = _ref3;\n        return (brand === \"Google Chrome\" || brand === \"Chromium\") && Number(version) >= 109;\n      });\n    }\n    return !!navigator.userAgent.split(\" \").find(ua => {\n      const [browser, version] = ua.split(\"/\");\n      return browser === \"Chrome\" && parseInt(version) >= 109;\n    });\n  }\n  if (Build.isBrowser && config.floatingUINonChromiumPositioningFix && (\n  // ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\n  /firefox|safari/i.test(getUAString()) || isChrome109OrAbove())) {\n    const {\n      offsetParent\n    } = await import('./utils4.js');\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = element => originalGetOffsetParent(element, offsetParent);\n  }\n}\n/**\n * Exported for testing purposes only\n */\nconst placementDataAttribute = \"data-placement\";\n/**\n * Exported for testing purposes only\n */\nconst repositionDebounceTimeout = 100;\nconst effectivePlacements = [\"top\", \"bottom\", \"right\", \"left\", \"top-start\", \"top-end\", \"bottom-start\", \"bottom-end\", \"right-start\", \"right-end\", \"left-start\", \"left-end\"];\nconst defaultMenuPlacement = \"bottom-start\";\nconst FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\"\n};\nfunction getMiddleware(_ref4) {\n  let {\n    placement,\n    flipDisabled,\n    flipPlacements,\n    offsetDistance,\n    offsetSkidding,\n    arrowEl,\n    type\n  } = _ref4;\n  const defaultMiddleware = [shift(), hide()];\n  if (type === \"menu\") {\n    return [...defaultMiddleware, flip({\n      fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"]\n    })];\n  }\n  if (type === \"popover\" || type === \"tooltip\") {\n    const middleware = [...defaultMiddleware, offset({\n      mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n      crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0\n    })];\n    if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n      middleware.push(autoPlacement({\n        alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null\n      }));\n    } else if (!flipDisabled) {\n      middleware.push(flip(flipPlacements ? {\n        fallbackPlacements: flipPlacements\n      } : {}));\n    }\n    if (arrowEl) {\n      middleware.push(arrow({\n        element: arrowEl\n      }));\n    }\n    return middleware;\n  }\n  return [];\n}\nfunction filterComputedPlacements(placements, el) {\n  const filteredPlacements = placements.filter(placement => effectivePlacements.includes(placement));\n  if (filteredPlacements.length !== placements.length) {\n    console.warn(`${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${effectivePlacements.map(placement => `\"${placement}\"`).join(\", \").trim()}`, {\n      el\n    });\n  }\n  return filteredPlacements;\n}\nfunction getEffectivePlacement(floatingEl, placement) {\n  const placements = [\"left\", \"right\"];\n  if (getElementDir(floatingEl) === \"rtl\") {\n    placements.reverse();\n  }\n  return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]);\n}\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component\n * @param options\n * @param options.referenceEl\n * @param options.floatingEl\n * @param options.overlayPositioning\n * @param options.placement\n * @param options.flipDisabled\n * @param options.flipPlacements\n * @param options.offsetDistance\n * @param options.offsetSkidding\n * @param options.arrowEl\n * @param options.type\n * @param delayed\n */\nasync function reposition(component, options) {\n  let delayed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!component.open) {\n    return;\n  }\n  return delayed ? debouncedReposition(options) : positionFloatingUI(options);\n}\nconst debouncedReposition = debounce(positionFloatingUI, repositionDebounceTimeout, {\n  leading: true,\n  maxWait: repositionDebounceTimeout\n});\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param root0.includeArrow\n */\nasync function positionFloatingUI(_ref5) {\n  let {\n    referenceEl,\n    floatingEl,\n    overlayPositioning = \"absolute\",\n    placement,\n    flipDisabled,\n    flipPlacements,\n    offsetDistance,\n    offsetSkidding,\n    includeArrow = false,\n    arrowEl,\n    type\n  } = _ref5;\n  if (!referenceEl || !floatingEl || includeArrow && !arrowEl) {\n    return null;\n  }\n  await floatingUIBrowserCheck;\n  const {\n    x,\n    y,\n    placement: effectivePlacement,\n    strategy: position,\n    middlewareData\n  } = await computePosition(referenceEl, floatingEl, {\n    strategy: overlayPositioning,\n    placement: placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\" ? undefined : getEffectivePlacement(floatingEl, placement),\n    middleware: getMiddleware({\n      placement,\n      flipDisabled,\n      flipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type\n    })\n  });\n  if (middlewareData?.arrow) {\n    const {\n      x: arrowX,\n      y: arrowY\n    } = middlewareData.arrow;\n    Object.assign(arrowEl.style, {\n      left: arrowX != null ? `${arrowX}px` : \"\",\n      top: arrowY != null ? `${arrowY}px` : \"\"\n    });\n  }\n  const referenceHidden = middlewareData?.hide?.referenceHidden;\n  const visibility = referenceHidden ? \"hidden\" : null;\n  const pointerEvents = visibility ? \"none\" : null;\n  floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n  const transform = `translate(${Math.round(x)}px,${Math.round(y)}px)`;\n  Object.assign(floatingEl.style, {\n    visibility,\n    pointerEvents,\n    position,\n    top: \"0\",\n    left: \"0\",\n    transform\n  });\n}\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nconst cleanupMap = new WeakMap();\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component\n * @param referenceEl\n * @param floatingEl\n */\nfunction connectFloatingUI(component, referenceEl, floatingEl) {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  disconnectFloatingUI(component, referenceEl, floatingEl);\n  const position = component.overlayPositioning;\n  // ensure position matches for initial positioning\n  Object.assign(floatingEl.style, {\n    visibility: \"hidden\",\n    pointerEvents: \"none\",\n    position\n  });\n  if (position === \"absolute\") {\n    resetPosition(floatingEl);\n  }\n  const runAutoUpdate = Build.isBrowser ? autoUpdate : (_refEl, _floatingEl, updateCallback) => {\n    updateCallback();\n    return () => {\n      /* noop */\n    };\n  };\n  cleanupMap.set(component, runAutoUpdate(referenceEl, floatingEl, () => component.reposition()));\n}\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component\n * @param referenceEl\n * @param floatingEl\n */\nfunction disconnectFloatingUI(component, referenceEl, floatingEl) {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  getTransitionTarget(floatingEl).removeEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n  const cleanup = cleanupMap.get(component);\n  if (cleanup) {\n    cleanup();\n  }\n  cleanupMap.delete(component);\n}\nconst visiblePointerSize = 4;\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nconst defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n/**\n * This utils applies floating element styles to avoid affecting layout when closed.\n *\n * This should be called when the closing transition will start.\n *\n * @param floatingEl\n */\nfunction updateAfterClose(floatingEl) {\n  if (!floatingEl || floatingEl.style.position !== \"absolute\") {\n    return;\n  }\n  getTransitionTarget(floatingEl).addEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n}\nfunction getTransitionTarget(floatingEl) {\n  // assumes floatingEl w/ shadowRoot is a FloatingUIComponent\n  return floatingEl.shadowRoot || floatingEl;\n}\nfunction handleTransitionElTransitionEnd(event) {\n  const floatingTransitionEl = event.target;\n  if (\n  // using any prop from floating-ui transition\n  event.propertyName === \"opacity\" && floatingTransitionEl.classList.contains(FloatingCSS.animation)) {\n    const floatingEl = getFloatingElFromTransitionTarget(floatingTransitionEl);\n    resetPosition(floatingEl);\n    getTransitionTarget(floatingEl).removeEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n  }\n}\nfunction resetPosition(floatingEl) {\n  // resets position to better match https://floating-ui.com/docs/computePosition#initial-layout\n  floatingEl.style.transform = \"\";\n  floatingEl.style.top = \"0\";\n  floatingEl.style.left = \"0\";\n}\nfunction getFloatingElFromTransitionTarget(floatingTransitionEl) {\n  return closestElementCrossShadowBoundary(floatingTransitionEl, `[${placementDataAttribute}]`);\n}\nexport { FloatingCSS as F, disconnectFloatingUI as a, defaultOffsetDistance as b, connectFloatingUI as c, defaultMenuPlacement as d, filterComputedPlacements as f, reposition as r, updateAfterClose as u };","map":{"version":3,"names":["Build","c","getElementDir","r","closestElementCrossShadowBoundary","d","debounce","getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition$1","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","rects","getElementRects","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","initialPlacement","elements","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","state","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","min$1","Math","min","max$1","max","within","min$1$1","value","max$1$1","arrow","arrowDimensions","getDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","shouldAddOffset","alignmentOffset","centerOffset","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements","undefined","overflow","currentIndex","index","currentPlacement","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","slice","v","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","flip","_middlewareData$flip","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","push","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","getComputedStyle","round","getCssDimensions","css","parseFloat","offsetWidth","offsetHeight","shouldFallback","fallback","getNodeName","isNode","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflowX","overflowY","display","test","isTableElement","isContainingBlock","isFirefox","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","contain","isClientRectVisualViewportBased","isLastTraversableNode","unwrapElement","FALLBACK_SCALE","domElement","getBoundingClientRect","Number","isFinite","includeScale","isFixedStrategy","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","visualViewport","offsetLeft","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","isOffsetParentAnElement","scroll","offsetRect","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","scrollHeight","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","scrollableAncestor","isBody","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","mutableRect","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","position","currentNode","computedStyle","containingBlock","shouldIgnoreCurrentNode","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getTrueOffsetParent","polyfill","getContainingBlock","getRectRelativeToOffsetParent","getOffsetParentFn","getDimensionsFn","getClientRects","from","autoUpdate","update","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","computePosition","Map","mergedOptions","platformWithCache","configOverrides","globalThis","floatingUINonChromiumPositioningFix","floatingUIBrowserCheck","patchFloatingUiForNonChromiumBrowsers","getUAData","_ref2","isChrome109OrAbove","find","_ref3","ua","browser","parseInt","isBrowser","originalGetOffsetParent","placementDataAttribute","repositionDebounceTimeout","effectivePlacements","defaultMenuPlacement","FloatingCSS","animation","animationActive","getMiddleware","_ref4","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","type","defaultMiddleware","filterComputedPlacements","filteredPlacements","console","warn","tagName","trim","getEffectivePlacement","floatingEl","reverse","reposition","component","delayed","arguments","open","debouncedReposition","positionFloatingUI","leading","maxWait","_ref5","referenceEl","overlayPositioning","includeArrow","effectivePlacement","arrowX","arrowY","Object","assign","style","visibility","pointerEvents","setAttribute","cleanupMap","WeakMap","connectFloatingUI","disconnectFloatingUI","resetPosition","runAutoUpdate","_refEl","_floatingEl","updateCallback","getTransitionTarget","handleTransitionElTransitionEnd","cleanup","delete","visiblePointerSize","defaultOffsetDistance","ceil","hypot","updateAfterClose","shadowRoot","event","floatingTransitionEl","target","propertyName","classList","contains","getFloatingElFromTransitionTarget","F","f","u"],"sources":["C:/code-challenge-react/frontend/node_modules/@esri/calcite-components/dist/components/floating-ui.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { Build } from '@stencil/core/internal/client/index.js';\nimport { c as getElementDir, r as closestElementCrossShadowBoundary } from './dom.js';\nimport { d as debounce } from './debounce.js';\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition$1 = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min$1 = Math.min;\nconst max$1 = Math.max;\n\nfunction within(min$1$1, value, max$1$1) {\n  return max$1(min$1$1, min$1(value, max$1$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = options || {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = state;\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = options;\n      const {\n        rects\n      } = state;\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nasync function convertValueToCoords(state, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(state) : value;\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = {\n      ...clippingAncestor\n    };\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldIgnoreCurrentNode = computedStyle.position === 'fixed';\n    if (shouldIgnoreCurrentNode) {\n      currentContainingBlockComputedStyle = null;\n    } else {\n      const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n      if (shouldDropCurrentNode) {\n        // Drop non-containing blocks.\n        result = result.filter(ancestor => ancestor !== currentNode);\n      } else {\n        // Record last containing block for next iteration.\n        currentContainingBlockComputedStyle = computedStyle;\n      }\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return getCssDimensions(element);\n  }\n  return element.getBoundingClientRect();\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\n/**\n * This module helps users provide custom configuration for component internals.\n *\n * @internal\n */\nconst configOverrides = globalThis[\"calciteComponentsConfig\"];\nconst config = {\n  /**\n   * We apply a custom fix to improve positioning for non-Chromium browsers.\n   * The fix comes at a performance cost, so provides users a way to opt-out if necessary.\n   *\n   * @internal\n   */\n  floatingUINonChromiumPositioningFix: true,\n  ...configOverrides\n};\n\nconst floatingUIBrowserCheck = patchFloatingUiForNonChromiumBrowsers();\nasync function patchFloatingUiForNonChromiumBrowsers() {\n  function getUAData() {\n    return navigator.userAgentData;\n  }\n  function getUAString() {\n    const uaData = getUAData();\n    return uaData?.brands\n      ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n      : navigator.userAgent;\n  }\n  function isChrome109OrAbove() {\n    const uaData = getUAData();\n    if (uaData?.brands) {\n      return !!uaData.brands.find(({ brand, version }) => (brand === \"Google Chrome\" || brand === \"Chromium\") && Number(version) >= 109);\n    }\n    return !!navigator.userAgent.split(\" \").find((ua) => {\n      const [browser, version] = ua.split(\"/\");\n      return browser === \"Chrome\" && parseInt(version) >= 109;\n    });\n  }\n  if (Build.isBrowser &&\n    config.floatingUINonChromiumPositioningFix &&\n    // ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\n    (/firefox|safari/i.test(getUAString()) || isChrome109OrAbove())) {\n    const { offsetParent } = await import('./utils4.js');\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = (element) => originalGetOffsetParent(element, offsetParent);\n  }\n}\n/**\n * Exported for testing purposes only\n */\nconst placementDataAttribute = \"data-placement\";\n/**\n * Exported for testing purposes only\n */\nconst repositionDebounceTimeout = 100;\nconst effectivePlacements = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\"\n];\nconst defaultMenuPlacement = \"bottom-start\";\nconst FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\"\n};\nfunction getMiddleware({ placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, arrowEl, type }) {\n  const defaultMiddleware = [shift(), hide()];\n  if (type === \"menu\") {\n    return [\n      ...defaultMiddleware,\n      flip({\n        fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"]\n      })\n    ];\n  }\n  if (type === \"popover\" || type === \"tooltip\") {\n    const middleware = [\n      ...defaultMiddleware,\n      offset({\n        mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n        crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0\n      })\n    ];\n    if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n      middleware.push(autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }));\n    }\n    else if (!flipDisabled) {\n      middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n    }\n    if (arrowEl) {\n      middleware.push(arrow({\n        element: arrowEl\n      }));\n    }\n    return middleware;\n  }\n  return [];\n}\nfunction filterComputedPlacements(placements, el) {\n  const filteredPlacements = placements.filter((placement) => effectivePlacements.includes(placement));\n  if (filteredPlacements.length !== placements.length) {\n    console.warn(`${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${effectivePlacements\n      .map((placement) => `\"${placement}\"`)\n      .join(\", \")\n      .trim()}`, { el });\n  }\n  return filteredPlacements;\n}\nfunction getEffectivePlacement(floatingEl, placement) {\n  const placements = [\"left\", \"right\"];\n  if (getElementDir(floatingEl) === \"rtl\") {\n    placements.reverse();\n  }\n  return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]);\n}\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component\n * @param options\n * @param options.referenceEl\n * @param options.floatingEl\n * @param options.overlayPositioning\n * @param options.placement\n * @param options.flipDisabled\n * @param options.flipPlacements\n * @param options.offsetDistance\n * @param options.offsetSkidding\n * @param options.arrowEl\n * @param options.type\n * @param delayed\n */\nasync function reposition(component, options, delayed = false) {\n  if (!component.open) {\n    return;\n  }\n  return delayed ? debouncedReposition(options) : positionFloatingUI(options);\n}\nconst debouncedReposition = debounce(positionFloatingUI, repositionDebounceTimeout, {\n  leading: true,\n  maxWait: repositionDebounceTimeout\n});\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param root0.includeArrow\n */\nasync function positionFloatingUI({ referenceEl, floatingEl, overlayPositioning = \"absolute\", placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, includeArrow = false, arrowEl, type }) {\n  if (!referenceEl || !floatingEl || (includeArrow && !arrowEl)) {\n    return null;\n  }\n  await floatingUIBrowserCheck;\n  const { x, y, placement: effectivePlacement, strategy: position, middlewareData } = await computePosition(referenceEl, floatingEl, {\n    strategy: overlayPositioning,\n    placement: placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n      ? undefined\n      : getEffectivePlacement(floatingEl, placement),\n    middleware: getMiddleware({\n      placement,\n      flipDisabled,\n      flipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type\n    })\n  });\n  if (middlewareData?.arrow) {\n    const { x: arrowX, y: arrowY } = middlewareData.arrow;\n    Object.assign(arrowEl.style, {\n      left: arrowX != null ? `${arrowX}px` : \"\",\n      top: arrowY != null ? `${arrowY}px` : \"\"\n    });\n  }\n  const referenceHidden = middlewareData?.hide?.referenceHidden;\n  const visibility = referenceHidden ? \"hidden\" : null;\n  const pointerEvents = visibility ? \"none\" : null;\n  floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n  const transform = `translate(${Math.round(x)}px,${Math.round(y)}px)`;\n  Object.assign(floatingEl.style, {\n    visibility,\n    pointerEvents,\n    position,\n    top: \"0\",\n    left: \"0\",\n    transform\n  });\n}\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nconst cleanupMap = new WeakMap();\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component\n * @param referenceEl\n * @param floatingEl\n */\nfunction connectFloatingUI(component, referenceEl, floatingEl) {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  disconnectFloatingUI(component, referenceEl, floatingEl);\n  const position = component.overlayPositioning;\n  // ensure position matches for initial positioning\n  Object.assign(floatingEl.style, {\n    visibility: \"hidden\",\n    pointerEvents: \"none\",\n    position\n  });\n  if (position === \"absolute\") {\n    resetPosition(floatingEl);\n  }\n  const runAutoUpdate = Build.isBrowser\n    ? autoUpdate\n    : (_refEl, _floatingEl, updateCallback) => {\n      updateCallback();\n      return () => {\n        /* noop */\n      };\n    };\n  cleanupMap.set(component, runAutoUpdate(referenceEl, floatingEl, () => component.reposition()));\n}\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component\n * @param referenceEl\n * @param floatingEl\n */\nfunction disconnectFloatingUI(component, referenceEl, floatingEl) {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n  getTransitionTarget(floatingEl).removeEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n  const cleanup = cleanupMap.get(component);\n  if (cleanup) {\n    cleanup();\n  }\n  cleanupMap.delete(component);\n}\nconst visiblePointerSize = 4;\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nconst defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n/**\n * This utils applies floating element styles to avoid affecting layout when closed.\n *\n * This should be called when the closing transition will start.\n *\n * @param floatingEl\n */\nfunction updateAfterClose(floatingEl) {\n  if (!floatingEl || floatingEl.style.position !== \"absolute\") {\n    return;\n  }\n  getTransitionTarget(floatingEl).addEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n}\nfunction getTransitionTarget(floatingEl) {\n  // assumes floatingEl w/ shadowRoot is a FloatingUIComponent\n  return floatingEl.shadowRoot || floatingEl;\n}\nfunction handleTransitionElTransitionEnd(event) {\n  const floatingTransitionEl = event.target;\n  if (\n  // using any prop from floating-ui transition\n  event.propertyName === \"opacity\" &&\n    floatingTransitionEl.classList.contains(FloatingCSS.animation)) {\n    const floatingEl = getFloatingElFromTransitionTarget(floatingTransitionEl);\n    resetPosition(floatingEl);\n    getTransitionTarget(floatingEl).removeEventListener(\"transitionend\", handleTransitionElTransitionEnd);\n  }\n}\nfunction resetPosition(floatingEl) {\n  // resets position to better match https://floating-ui.com/docs/computePosition#initial-layout\n  floatingEl.style.transform = \"\";\n  floatingEl.style.top = \"0\";\n  floatingEl.style.left = \"0\";\n}\nfunction getFloatingElFromTransitionTarget(floatingTransitionEl) {\n  return closestElementCrossShadowBoundary(floatingTransitionEl, `[${placementDataAttribute}]`);\n}\n\nexport { FloatingCSS as F, disconnectFloatingUI as a, defaultOffsetDistance as b, connectFloatingUI as c, defaultMenuPlacement as d, filterComputedPlacements as f, reposition as r, updateAfterClose as u };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}