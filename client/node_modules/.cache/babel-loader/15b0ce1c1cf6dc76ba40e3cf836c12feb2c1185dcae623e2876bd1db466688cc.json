{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { forceUpdate } from '@stencil/core/internal/client/index.js';\nimport { c as createObserver } from './observers.js';\nconst observed = new Set();\nlet mutationObserver;\nconst observerOptions = {\n  childList: true\n};\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction connectConditionalSlotComponent(component) {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n  mutationObserver.observe(component.el, observerOptions);\n}\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction disconnectConditionalSlotComponent(component) {\n  observed.delete(component.el);\n  // we explicitly process queued mutations and disconnect and reconnect\n  // the observer until MutationObserver gets an `unobserve` method\n  // see https://github.com/whatwg/dom/issues/126\n  processMutations(mutationObserver.takeRecords());\n  mutationObserver.disconnect();\n  for (const [element] of observed.entries()) {\n    mutationObserver.observe(element, observerOptions);\n  }\n}\nfunction processMutations(mutations) {\n  mutations.forEach(_ref => {\n    let {\n      target\n    } = _ref;\n    forceUpdate(target);\n  });\n}\nexport { connectConditionalSlotComponent as c, disconnectConditionalSlotComponent as d };","map":{"version":3,"names":["forceUpdate","c","createObserver","observed","Set","mutationObserver","observerOptions","childList","connectConditionalSlotComponent","component","processMutations","observe","el","disconnectConditionalSlotComponent","delete","takeRecords","disconnect","element","entries","mutations","forEach","_ref","target","d"],"sources":["C:/code-challenge-react/frontend/node_modules/@esri/calcite-components/dist/components/conditionalSlot.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { forceUpdate } from '@stencil/core/internal/client/index.js';\nimport { c as createObserver } from './observers.js';\n\nconst observed = new Set();\nlet mutationObserver;\nconst observerOptions = { childList: true };\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction connectConditionalSlotComponent(component) {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n  mutationObserver.observe(component.el, observerOptions);\n}\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction disconnectConditionalSlotComponent(component) {\n  observed.delete(component.el);\n  // we explicitly process queued mutations and disconnect and reconnect\n  // the observer until MutationObserver gets an `unobserve` method\n  // see https://github.com/whatwg/dom/issues/126\n  processMutations(mutationObserver.takeRecords());\n  mutationObserver.disconnect();\n  for (const [element] of observed.entries()) {\n    mutationObserver.observe(element, observerOptions);\n  }\n}\nfunction processMutations(mutations) {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n\nexport { connectConditionalSlotComponent as c, disconnectConditionalSlotComponent as d };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,wCAAwC;AACpE,SAASC,CAAC,IAAIC,cAAc,QAAQ,gBAAgB;AAEpD,MAAMC,QAAQ,GAAG,IAAIC,GAAG,EAAE;AAC1B,IAAIC,gBAAgB;AACpB,MAAMC,eAAe,GAAG;EAAEC,SAAS,EAAE;AAAK,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,+BAA+BA,CAACC,SAAS,EAAE;EAClD,IAAI,CAACJ,gBAAgB,EAAE;IACrBA,gBAAgB,GAAGH,cAAc,CAAC,UAAU,EAAEQ,gBAAgB,CAAC;EACjE;EACAL,gBAAgB,CAACM,OAAO,CAACF,SAAS,CAACG,EAAE,EAAEN,eAAe,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,kCAAkCA,CAACJ,SAAS,EAAE;EACrDN,QAAQ,CAACW,MAAM,CAACL,SAAS,CAACG,EAAE,CAAC;EAC7B;EACA;EACA;EACAF,gBAAgB,CAACL,gBAAgB,CAACU,WAAW,EAAE,CAAC;EAChDV,gBAAgB,CAACW,UAAU,EAAE;EAC7B,KAAK,MAAM,CAACC,OAAO,CAAC,IAAId,QAAQ,CAACe,OAAO,EAAE,EAAE;IAC1Cb,gBAAgB,CAACM,OAAO,CAACM,OAAO,EAAEX,eAAe,CAAC;EACpD;AACF;AACA,SAASI,gBAAgBA,CAACS,SAAS,EAAE;EACnCA,SAAS,CAACC,OAAO,CAACC,IAAA,IAAgB;IAAA,IAAf;MAAEC;IAAO,CAAC,GAAAD,IAAA;IAC3BrB,WAAW,CAACsB,MAAM,CAAC;EACrB,CAAC,CAAC;AACJ;AAEA,SAASd,+BAA+B,IAAIP,CAAC,EAAEY,kCAAkC,IAAIU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}