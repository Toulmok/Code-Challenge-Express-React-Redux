{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nclass i {\n  constructor(i, s, t, e) {\n    this.semiMajorAxis = i, this.flattening = s, this.outerAtmosphereRimWidth = t;\n    const h = 1 - this.flattening;\n    this.semiMinorAxis = this.semiMajorAxis * h, this.halfSemiMajorAxis = this.semiMajorAxis / 2, this.halfCircumference = Math.PI * this.semiMajorAxis, this.metersPerDegree = this.halfCircumference / 180, this.inverseFlattening = 1 / (1 - this.flattening) - 1, this.eccentricitySquared = e || 2 * this.flattening - this.flattening * this.flattening, this.meanRadiusSemiAxes = (2 * this.semiMajorAxis + this.semiMinorAxis) / 3;\n  }\n  get radius() {\n    return this.semiMajorAxis;\n  }\n}\nconst s = new i(6378137, 1 / 298.257223563, 3e5, .006694379990137799),\n  t = new i(3396190, 1 / 169.8944472236118, 23e4),\n  e = new i(1737400, 0, 0);\nexport { i as Ellipsoid, s as earth, t as mars, e as moon };","map":{"version":3,"names":["i","constructor","s","t","e","semiMajorAxis","flattening","outerAtmosphereRimWidth","h","semiMinorAxis","halfSemiMajorAxis","halfCircumference","Math","PI","metersPerDegree","inverseFlattening","eccentricitySquared","meanRadiusSemiAxes","radius","Ellipsoid","earth","mars","moon"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/geometry/support/Ellipsoid.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nclass i{constructor(i,s,t,e){this.semiMajorAxis=i,this.flattening=s,this.outerAtmosphereRimWidth=t;const h=1-this.flattening;this.semiMinorAxis=this.semiMajorAxis*h,this.halfSemiMajorAxis=this.semiMajorAxis/2,this.halfCircumference=Math.PI*this.semiMajorAxis,this.metersPerDegree=this.halfCircumference/180,this.inverseFlattening=1/(1-this.flattening)-1,this.eccentricitySquared=e||2*this.flattening-this.flattening*this.flattening,this.meanRadiusSemiAxes=(2*this.semiMajorAxis+this.semiMinorAxis)/3}get radius(){return this.semiMajorAxis}}const s=new i(6378137,1/298.257223563,3e5,.006694379990137799),t=new i(3396190,1/169.8944472236118,23e4),e=new i(1737400,0,0);export{i as Ellipsoid,s as earth,t as mars,e as moon};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,CAAC;EAACC,WAAWA,CAACD,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;IAAC,IAAI,CAACC,aAAa,GAACL,CAAC,EAAC,IAAI,CAACM,UAAU,GAACJ,CAAC,EAAC,IAAI,CAACK,uBAAuB,GAACJ,CAAC;IAAC,MAAMK,CAAC,GAAC,CAAC,GAAC,IAAI,CAACF,UAAU;IAAC,IAAI,CAACG,aAAa,GAAC,IAAI,CAACJ,aAAa,GAACG,CAAC,EAAC,IAAI,CAACE,iBAAiB,GAAC,IAAI,CAACL,aAAa,GAAC,CAAC,EAAC,IAAI,CAACM,iBAAiB,GAACC,IAAI,CAACC,EAAE,GAAC,IAAI,CAACR,aAAa,EAAC,IAAI,CAACS,eAAe,GAAC,IAAI,CAACH,iBAAiB,GAAC,GAAG,EAAC,IAAI,CAACI,iBAAiB,GAAC,CAAC,IAAE,CAAC,GAAC,IAAI,CAACT,UAAU,CAAC,GAAC,CAAC,EAAC,IAAI,CAACU,mBAAmB,GAACZ,CAAC,IAAE,CAAC,GAAC,IAAI,CAACE,UAAU,GAAC,IAAI,CAACA,UAAU,GAAC,IAAI,CAACA,UAAU,EAAC,IAAI,CAACW,kBAAkB,GAAC,CAAC,CAAC,GAAC,IAAI,CAACZ,aAAa,GAAC,IAAI,CAACI,aAAa,IAAE,CAAC;EAAA;EAAC,IAAIS,MAAMA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACb,aAAa;EAAA;AAAC;AAAC,MAAMH,CAAC,GAAC,IAAIF,CAAC,CAAC,OAAO,EAAC,CAAC,GAAC,aAAa,EAAC,GAAG,EAAC,mBAAmB,CAAC;EAACG,CAAC,GAAC,IAAIH,CAAC,CAAC,OAAO,EAAC,CAAC,GAAC,iBAAiB,EAAC,IAAI,CAAC;EAACI,CAAC,GAAC,IAAIJ,CAAC,CAAC,OAAO,EAAC,CAAC,EAAC,CAAC,CAAC;AAAC,SAAOA,CAAC,IAAImB,SAAS,EAACjB,CAAC,IAAIkB,KAAK,EAACjB,CAAC,IAAIkB,IAAI,EAACjB,CAAC,IAAIkB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}