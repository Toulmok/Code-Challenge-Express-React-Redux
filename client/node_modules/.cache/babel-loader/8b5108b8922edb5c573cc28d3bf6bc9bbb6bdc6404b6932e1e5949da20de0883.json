{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport e from \"../../../core/Error.js\";\nimport { unwrap as r, isNone as s, isSome as o } from \"../../../core/maybe.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../PixelBlock.js\";\nimport l from \"../RasterInfo.js\";\nimport f from \"../RasterStorageInfo.js\";\nimport c from \"./BaseRaster.js\";\nimport { parseSpatialReference as m, parsePAMInfo as p } from \"./pamParser.js\";\nimport { getElement as h, getElementValue as u } from \"./xmlUtilities.js\";\nimport { isPlatformLittleEndian as g } from \"../rasterFormats/utils.js\";\nimport { estimateStatisticsFromHistograms as d } from \"../rasterFunctions/stretchUtils.js\";\nimport y from \"../../../geometry/SpatialReference.js\";\nimport x from \"../../../geometry/Extent.js\";\nimport w from \"../../../geometry/Point.js\";\nconst I = new Map();\nI.set(\"Int8\", \"s8\"), I.set(\"UInt8\", \"u8\"), I.set(\"Int16\", \"s16\"), I.set(\"UInt16\", \"u16\"), I.set(\"Int32\", \"s32\"), I.set(\"UInt32\", \"u32\"), I.set(\"Float32\", \"f32\"), I.set(\"Float64\", \"f32\"), I.set(\"Double64\", \"f32\");\nconst b = new Map();\nb.set(\"none\", {\n  blobExtension: \".til\",\n  isOneSegment: !0,\n  decoderFormat: \"bip\"\n}), b.set(\"lerc\", {\n  blobExtension: \".lrc\",\n  isOneSegment: !1,\n  decoderFormat: \"lerc\"\n}), b.set(\"deflate\", {\n  blobExtension: \".pzp\",\n  isOneSegment: !0,\n  decoderFormat: \"deflate\"\n}), b.set(\"jpeg\", {\n  blobExtension: \".pjg\",\n  isOneSegment: !0,\n  decoderFormat: \"jpg\"\n});\nlet A = class extends c {\n  constructor() {\n    super(...arguments), this._files = null, this._storageIndex = null, this.datasetFormat = \"MRF\";\n  }\n  async open(t) {\n    await this.init(), this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n    const e = t ? r(t.signal) : null,\n      o = await this.request(this.url, {\n        responseType: \"xml\",\n        signal: e\n      }),\n      {\n        rasterInfo: i,\n        files: a\n      } = this._parseHeader(o.data);\n    if (-1 === this.ioConfig.skipExtensions?.indexOf(\"aux.xml\")) {\n      const e = await this._fetchAuxiliaryData(t);\n      null != e && (i.statistics = e.statistics ?? i.statistics, i.histograms = e.histograms, e.histograms && s(i.statistics) && (i.statistics = d(e.histograms)));\n    }\n    this._set(\"rasterInfo\", i), this._files = a;\n    const n = await this.request(a.index, {\n      responseType: \"array-buffer\",\n      signal: e\n    });\n    this._storageIndex = this._parseIndex(n.data);\n    const {\n        blockWidth: l,\n        blockHeight: f\n      } = this.rasterInfo.storageInfo,\n      c = this.rasterInfo.storageInfo.pyramidScalingFactor,\n      {\n        width: m,\n        height: p\n      } = this.rasterInfo,\n      h = [],\n      u = this._getBandSegmentCount();\n    let g = 0,\n      y = -1;\n    for (; g < this._storageIndex.length;) {\n      y++;\n      const t = Math.ceil(m / l / c ** y) - 1,\n        e = Math.ceil(p / f / c ** y) - 1;\n      g += (t + 1) * (e + 1) * u * 4, h.push({\n        maxRow: e,\n        maxCol: t,\n        minCol: 0,\n        minRow: 0\n      });\n    }\n    this.rasterInfo.storageInfo.blockBoundary = h, y > 0 && (this.rasterInfo.storageInfo.firstPyramidLevel = 1, this.rasterInfo.storageInfo.maximumPyramidLevel = y), this.updateTileInfo();\n  }\n  async fetchRawTile(t, e, r) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const {\n        blockWidth: i,\n        blockHeight: a,\n        blockBoundary: l\n      } = this.rasterInfo.storageInfo,\n      f = l[t];\n    if (!f || f.maxRow < e || f.maxCol < r || f.minRow > e || f.minCol > r) return null;\n    const {\n        bandCount: c,\n        pixelType: m\n      } = this.rasterInfo,\n      {\n        ranges: p,\n        actualTileWidth: h,\n        actualTileHeight: u\n      } = this._getTileLocation(t, e, r);\n    if (!p || 0 === p.length) return null;\n    if (0 === p[0].from && 0 === p[0].to) {\n      const t = new Uint8Array(i * a);\n      return new n({\n        width: i,\n        height: a,\n        pixels: null,\n        mask: t,\n        validPixelCount: 0\n      });\n    }\n    const {\n        bandIds: g\n      } = this.ioConfig,\n      d = this._getBandSegmentCount(),\n      y = [];\n    let x = 0;\n    for (x = 0; x < d; x++) (!g || g.indexOf[x] > -1) && y.push(this.request(this._files.data, {\n      range: {\n        from: p[x].from,\n        to: p[x].to\n      },\n      responseType: \"array-buffer\",\n      signal: s.signal\n    }));\n    const w = await Promise.all(y),\n      I = w.map(t => t.data.byteLength).reduce((t, e) => t + e),\n      A = new Uint8Array(I);\n    let F = 0;\n    for (x = 0; x < d; x++) A.set(new Uint8Array(w[x].data), F), F += w[x].data.byteLength;\n    const _ = b.get(this.rasterInfo.storageInfo.compression).decoderFormat,\n      R = await this.decodePixelBlock(A.buffer, {\n        width: i,\n        height: a,\n        format: _,\n        planes: g?.length || c,\n        pixelType: m\n      });\n    if (null == R) return null;\n    if (o(this.rasterInfo.noDataValue) && \"lerc\" !== _ && !R.mask) {\n      const t = this.rasterInfo.noDataValue[0];\n      if (null != t) {\n        const e = R.width * R.height,\n          r = new Uint8Array(e);\n        if (Math.abs(t) > 1e24) for (x = 0; x < e; x++) Math.abs((R.pixels[0][x] - t) / t) > 1e-6 && (r[x] = 1);else for (x = 0; x < e; x++) R.pixels[0][x] !== t && (r[x] = 1);\n        R.mask = r;\n      }\n    }\n    let S = 0,\n      j = 0;\n    if (h !== i || u !== a) {\n      let t = R.mask;\n      if (t) {\n        for (x = 0; x < a; x++) if (j = x * i, x < u) for (S = h; S < i; S++) t[j + S] = 0;else for (S = 0; S < i; S++) t[j + S] = 0;\n      } else for (t = new Uint8Array(i * a), R.mask = t, x = 0; x < u; x++) for (j = x * i, S = 0; S < h; S++) t[j + S] = 1;\n    }\n    return R;\n  }\n  _parseIndex(t) {\n    if (t.byteLength % 16 > 0) throw new Error(\"invalid array buffer must be multiples of 16\");\n    let e, r, s, o, i, a;\n    if (g) {\n      for (r = new Uint8Array(t), o = new ArrayBuffer(t.byteLength), s = new Uint8Array(o), i = 0; i < t.byteLength / 4; i++) for (a = 0; a < 4; a++) s[4 * i + a] = r[4 * i + 3 - a];\n      e = new Uint32Array(o);\n    } else e = new Uint32Array(t);\n    return e;\n  }\n  _getBandSegmentCount() {\n    return b.get(this.rasterInfo.storageInfo.compression).isOneSegment ? 1 : this.rasterInfo.bandCount;\n  }\n  _getTileLocation(t, e, r) {\n    const {\n        blockWidth: s,\n        blockHeight: o,\n        pyramidScalingFactor: i\n      } = this.rasterInfo.storageInfo,\n      {\n        width: a,\n        height: n\n      } = this.rasterInfo,\n      l = this._getBandSegmentCount();\n    let f,\n      c,\n      m,\n      p = 0,\n      h = 0;\n    for (m = 0; m < t; m++) h = i ** m, f = Math.ceil(a / s / h), c = Math.ceil(n / o / h), p += f * c;\n    h = i ** t, f = Math.ceil(a / s / h), c = Math.ceil(n / o / h), p += e * f + r, p *= 4 * l;\n    const u = this._storageIndex.subarray(p, p + 4 * l);\n    let g = 0,\n      d = 0;\n    const y = [];\n    for (let x = 0; x < l; x++) g = u[4 * x + 0] * 2 ** 32 + u[4 * x + 1], d = g + u[4 * x + 2] * 2 ** 32 + u[4 * x + 3], y.push({\n      from: g,\n      to: d\n    });\n    return {\n      ranges: y,\n      actualTileWidth: r < f - 1 ? s : Math.ceil(a / h) - s * (f - 1),\n      actualTileHeight: e < c - 1 ? o : Math.ceil(n / h) - o * (c - 1)\n    };\n  }\n  _parseHeader(t) {\n    const r = h(t, \"MRF_META/Raster\");\n    if (!r) throw new e(\"mrf:open\", \"not a valid MRF format\");\n    const s = h(r, \"Size\"),\n      o = parseInt(s.getAttribute(\"x\"), 10),\n      i = parseInt(s.getAttribute(\"y\"), 10),\n      a = parseInt(s.getAttribute(\"c\"), 10),\n      n = (u(r, \"Compression\") || \"none\").toLowerCase();\n    if (!b.has(n)) throw new e(\"mrf:open\", \"currently does not support compression \" + n);\n    const c = u(r, \"DataType\") || \"UInt8\",\n      p = I.get(c);\n    if (null == p) throw new e(\"mrf:open\", \"currently does not support pixel type \" + c);\n    const g = h(r, \"PageSize\"),\n      d = parseInt(g.getAttribute(\"x\"), 10),\n      A = parseInt(g.getAttribute(\"y\"), 10),\n      F = h(r, \"DataValues\");\n    let _, R;\n    F && (R = F.getAttribute(\"NoData\"), null != R && (_ = R.trim().split(\" \").map(t => parseFloat(t))));\n    if (h(t, \"MRF_META/CachedSource\")) throw new e(\"mrf:open\", \"currently does not support MRF referencing other data files\");\n    const S = h(t, \"MRF_META/GeoTags\"),\n      j = h(S, \"BoundingBox\");\n    let k,\n      M = !1;\n    if (null != j) {\n      const t = parseFloat(j.getAttribute(\"minx\")),\n        e = parseFloat(j.getAttribute(\"miny\")),\n        r = parseFloat(j.getAttribute(\"maxx\")),\n        s = parseFloat(j.getAttribute(\"maxy\")),\n        o = u(S, \"Projection\") || \"\";\n      let i = y.WGS84;\n      if (\"LOCAL_CS[]\" !== o) {\n        if (o.toLowerCase().startsWith(\"epsg:\")) {\n          const t = Number(o.slice(5));\n          isNaN(t) || 0 === t || (i = new y({\n            wkid: t\n          }));\n        } else i = m(o) ?? y.WGS84;\n      } else M = !0, i = new y({\n        wkid: 3857\n      });\n      k = new x(t, e, r, s), k.spatialReference = i;\n    } else M = !0, k = new x({\n      xmin: -.5,\n      ymin: .5 - i,\n      xmax: o - .5,\n      ymax: .5,\n      spatialReference: new y({\n        wkid: 3857\n      })\n    });\n    const T = h(t, \"MRF_META/Rsets\"),\n      C = parseInt(T && T.getAttribute(\"scale\") || \"2\", 10),\n      U = k.spatialReference,\n      B = new f({\n        origin: new w({\n          x: k.xmin,\n          y: k.ymax,\n          spatialReference: U\n        }),\n        blockWidth: d,\n        blockHeight: A,\n        pyramidBlockWidth: d,\n        pyramidBlockHeight: A,\n        compression: n,\n        pyramidScalingFactor: C\n      }),\n      E = new w({\n        x: k.width / o,\n        y: k.height / i,\n        spatialReference: U\n      }),\n      L = new l({\n        width: o,\n        height: i,\n        extent: k,\n        isPseudoSpatialReference: M,\n        spatialReference: U,\n        bandCount: a,\n        pixelType: p,\n        pixelSize: E,\n        noDataValue: _,\n        storageInfo: B\n      }),\n      P = u(t, \"datafile\"),\n      O = u(t, \"IndexFile\");\n    return {\n      rasterInfo: L,\n      files: {\n        mrf: this.url,\n        index: O || this.url.replace(\".mrf\", \".idx\"),\n        data: P || this.url.replace(\".mrf\", b.get(n).blobExtension)\n      }\n    };\n  }\n  async _fetchAuxiliaryData(t) {\n    try {\n      const {\n        data: e\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: t?.signal\n      });\n      return p(e);\n    } catch {\n      return null;\n    }\n  }\n};\nt([i()], A.prototype, \"_files\", void 0), t([i()], A.prototype, \"_storageIndex\", void 0), t([i({\n  type: String,\n  json: {\n    write: !0\n  }\n})], A.prototype, \"datasetFormat\", void 0), A = t([a(\"esri.layers.support.rasterIO.MRFRaster\")], A);\nconst F = A;\nexport { F as default };","map":{"version":3,"names":["_","t","e","unwrap","r","isNone","s","isSome","o","property","i","subclass","a","n","l","f","c","parseSpatialReference","m","parsePAMInfo","p","getElement","h","getElementValue","u","isPlatformLittleEndian","g","estimateStatisticsFromHistograms","d","y","x","w","I","Map","set","b","blobExtension","isOneSegment","decoderFormat","A","constructor","arguments","_files","_storageIndex","datasetFormat","open","init","datasetName","url","slice","lastIndexOf","signal","request","responseType","rasterInfo","files","_parseHeader","data","ioConfig","skipExtensions","indexOf","_fetchAuxiliaryData","statistics","histograms","_set","index","_parseIndex","blockWidth","blockHeight","storageInfo","pyramidScalingFactor","width","height","_getBandSegmentCount","length","Math","ceil","push","maxRow","maxCol","minCol","minRow","blockBoundary","firstPyramidLevel","maximumPyramidLevel","updateTileInfo","fetchRawTile","undefined","bandCount","pixelType","ranges","actualTileWidth","actualTileHeight","_getTileLocation","from","to","Uint8Array","pixels","mask","validPixelCount","bandIds","range","Promise","all","map","byteLength","reduce","F","get","compression","R","decodePixelBlock","buffer","format","planes","noDataValue","abs","S","j","Error","ArrayBuffer","Uint32Array","subarray","parseInt","getAttribute","toLowerCase","has","trim","split","parseFloat","k","M","WGS84","startsWith","Number","isNaN","wkid","spatialReference","xmin","ymin","xmax","ymax","T","C","U","B","origin","pyramidBlockWidth","pyramidBlockHeight","E","L","extent","isPseudoSpatialReference","pixelSize","P","O","mrf","replace","prototype","type","String","json","write","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import e from\"../../../core/Error.js\";import{unwrap as r,isNone as s,isSome as o}from\"../../../core/maybe.js\";import{property as i}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../PixelBlock.js\";import l from\"../RasterInfo.js\";import f from\"../RasterStorageInfo.js\";import c from\"./BaseRaster.js\";import{parseSpatialReference as m,parsePAMInfo as p}from\"./pamParser.js\";import{getElement as h,getElementValue as u}from\"./xmlUtilities.js\";import{isPlatformLittleEndian as g}from\"../rasterFormats/utils.js\";import{estimateStatisticsFromHistograms as d}from\"../rasterFunctions/stretchUtils.js\";import y from\"../../../geometry/SpatialReference.js\";import x from\"../../../geometry/Extent.js\";import w from\"../../../geometry/Point.js\";const I=new Map;I.set(\"Int8\",\"s8\"),I.set(\"UInt8\",\"u8\"),I.set(\"Int16\",\"s16\"),I.set(\"UInt16\",\"u16\"),I.set(\"Int32\",\"s32\"),I.set(\"UInt32\",\"u32\"),I.set(\"Float32\",\"f32\"),I.set(\"Float64\",\"f32\"),I.set(\"Double64\",\"f32\");const b=new Map;b.set(\"none\",{blobExtension:\".til\",isOneSegment:!0,decoderFormat:\"bip\"}),b.set(\"lerc\",{blobExtension:\".lrc\",isOneSegment:!1,decoderFormat:\"lerc\"}),b.set(\"deflate\",{blobExtension:\".pzp\",isOneSegment:!0,decoderFormat:\"deflate\"}),b.set(\"jpeg\",{blobExtension:\".pjg\",isOneSegment:!0,decoderFormat:\"jpg\"});let A=class extends c{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat=\"MRF\"}async open(t){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const e=t?r(t.signal):null,o=await this.request(this.url,{responseType:\"xml\",signal:e}),{rasterInfo:i,files:a}=this._parseHeader(o.data);if(-1===this.ioConfig.skipExtensions?.indexOf(\"aux.xml\")){const e=await this._fetchAuxiliaryData(t);null!=e&&(i.statistics=e.statistics??i.statistics,i.histograms=e.histograms,e.histograms&&s(i.statistics)&&(i.statistics=d(e.histograms)))}this._set(\"rasterInfo\",i),this._files=a;const n=await this.request(a.index,{responseType:\"array-buffer\",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:l,blockHeight:f}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:m,height:p}=this.rasterInfo,h=[],u=this._getBandSegmentCount();let g=0,y=-1;for(;g<this._storageIndex.length;){y++;const t=Math.ceil(m/l/c**y)-1,e=Math.ceil(p/f/c**y)-1;g+=(t+1)*(e+1)*u*4,h.push({maxRow:e,maxCol:t,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(t,e,r,s={}){const{blockWidth:i,blockHeight:a,blockBoundary:l}=this.rasterInfo.storageInfo,f=l[t];if(!f||f.maxRow<e||f.maxCol<r||f.minRow>e||f.minCol>r)return null;const{bandCount:c,pixelType:m}=this.rasterInfo,{ranges:p,actualTileWidth:h,actualTileHeight:u}=this._getTileLocation(t,e,r);if(!p||0===p.length)return null;if(0===p[0].from&&0===p[0].to){const t=new Uint8Array(i*a);return new n({width:i,height:a,pixels:null,mask:t,validPixelCount:0})}const{bandIds:g}=this.ioConfig,d=this._getBandSegmentCount(),y=[];let x=0;for(x=0;x<d;x++)(!g||g.indexOf[x]>-1)&&y.push(this.request(this._files.data,{range:{from:p[x].from,to:p[x].to},responseType:\"array-buffer\",signal:s.signal}));const w=await Promise.all(y),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),A=new Uint8Array(I);let F=0;for(x=0;x<d;x++)A.set(new Uint8Array(w[x].data),F),F+=w[x].data.byteLength;const _=b.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(A.buffer,{width:i,height:a,format:_,planes:g?.length||c,pixelType:m});if(null==R)return null;if(o(this.rasterInfo.noDataValue)&&\"lerc\"!==_&&!R.mask){const t=this.rasterInfo.noDataValue[0];if(null!=t){const e=R.width*R.height,r=new Uint8Array(e);if(Math.abs(t)>1e24)for(x=0;x<e;x++)Math.abs((R.pixels[0][x]-t)/t)>1e-6&&(r[x]=1);else for(x=0;x<e;x++)R.pixels[0][x]!==t&&(r[x]=1);R.mask=r}}let S=0,j=0;if(h!==i||u!==a){let t=R.mask;if(t)for(x=0;x<a;x++)if(j=x*i,x<u)for(S=h;S<i;S++)t[j+S]=0;else for(S=0;S<i;S++)t[j+S]=0;else for(t=new Uint8Array(i*a),R.mask=t,x=0;x<u;x++)for(j=x*i,S=0;S<h;S++)t[j+S]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw new Error(\"invalid array buffer must be multiples of 16\");let e,r,s,o,i,a;if(g){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return b.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i}=this.rasterInfo.storageInfo,{width:a,height:n}=this.rasterInfo,l=this._getBandSegmentCount();let f,c,m,p=0,h=0;for(m=0;m<t;m++)h=i**m,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=f*c;h=i**t,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=e*f+r,p*=4*l;const u=this._storageIndex.subarray(p,p+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=u[4*x+0]*2**32+u[4*x+1],d=g+u[4*x+2]*2**32+u[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<f-1?s:Math.ceil(a/h)-s*(f-1),actualTileHeight:e<c-1?o:Math.ceil(n/h)-o*(c-1)}}_parseHeader(t){const r=h(t,\"MRF_META/Raster\");if(!r)throw new e(\"mrf:open\",\"not a valid MRF format\");const s=h(r,\"Size\"),o=parseInt(s.getAttribute(\"x\"),10),i=parseInt(s.getAttribute(\"y\"),10),a=parseInt(s.getAttribute(\"c\"),10),n=(u(r,\"Compression\")||\"none\").toLowerCase();if(!b.has(n))throw new e(\"mrf:open\",\"currently does not support compression \"+n);const c=u(r,\"DataType\")||\"UInt8\",p=I.get(c);if(null==p)throw new e(\"mrf:open\",\"currently does not support pixel type \"+c);const g=h(r,\"PageSize\"),d=parseInt(g.getAttribute(\"x\"),10),A=parseInt(g.getAttribute(\"y\"),10),F=h(r,\"DataValues\");let _,R;F&&(R=F.getAttribute(\"NoData\"),null!=R&&(_=R.trim().split(\" \").map((t=>parseFloat(t)))));if(h(t,\"MRF_META/CachedSource\"))throw new e(\"mrf:open\",\"currently does not support MRF referencing other data files\");const S=h(t,\"MRF_META/GeoTags\"),j=h(S,\"BoundingBox\");let k,M=!1;if(null!=j){const t=parseFloat(j.getAttribute(\"minx\")),e=parseFloat(j.getAttribute(\"miny\")),r=parseFloat(j.getAttribute(\"maxx\")),s=parseFloat(j.getAttribute(\"maxy\")),o=u(S,\"Projection\")||\"\";let i=y.WGS84;if(\"LOCAL_CS[]\"!==o)if(o.toLowerCase().startsWith(\"epsg:\")){const t=Number(o.slice(5));isNaN(t)||0===t||(i=new y({wkid:t}))}else i=m(o)??y.WGS84;else M=!0,i=new y({wkid:3857});k=new x(t,e,r,s),k.spatialReference=i}else M=!0,k=new x({xmin:-.5,ymin:.5-i,xmax:o-.5,ymax:.5,spatialReference:new y({wkid:3857})});const T=h(t,\"MRF_META/Rsets\"),C=parseInt(T&&T.getAttribute(\"scale\")||\"2\",10),U=k.spatialReference,B=new f({origin:new w({x:k.xmin,y:k.ymax,spatialReference:U}),blockWidth:d,blockHeight:A,pyramidBlockWidth:d,pyramidBlockHeight:A,compression:n,pyramidScalingFactor:C}),E=new w({x:k.width/o,y:k.height/i,spatialReference:U}),L=new l({width:o,height:i,extent:k,isPseudoSpatialReference:M,spatialReference:U,bandCount:a,pixelType:p,pixelSize:E,noDataValue:_,storageInfo:B}),P=u(t,\"datafile\"),O=u(t,\"IndexFile\");return{rasterInfo:L,files:{mrf:this.url,index:O||this.url.replace(\".mrf\",\".idx\"),data:P||this.url.replace(\".mrf\",b.get(n).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:t?.signal});return p(e)}catch{return null}}};t([i()],A.prototype,\"_files\",void 0),t([i()],A.prototype,\"_storageIndex\",void 0),t([i({type:String,json:{write:!0}})],A.prototype,\"datasetFormat\",void 0),A=t([a(\"esri.layers.support.rasterIO.MRFRaster\")],A);const F=A;export{F as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}