{"ast":null,"code":"import _slicedToArray from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/* Copyright (c) 2017-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nexport function decodeParam(param) {\n  var _param$split = param.split(\"=\"),\n    _param$split2 = _slicedToArray(_param$split, 2),\n    key = _param$split2[0],\n    value = _param$split2[1];\n  return {\n    key: decodeURIComponent(key),\n    value: decodeURIComponent(value)\n  };\n}\n/**\n * Decodes the passed query string as an object.\n *\n * @param query A string to be decoded.\n * @returns A decoded query param object.\n */\nexport function decodeQueryString(query) {\n  if (!query || query.length <= 0) {\n    return {};\n  }\n  return query.replace(/^#/, \"\").replace(/^\\?/, \"\").split(\"&\").reduce(function (acc, entry) {\n    var _decodeParam = decodeParam(entry),\n      key = _decodeParam.key,\n      value = _decodeParam.value;\n    acc[key] = value;\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["decodeParam","param","_param$split","split","_param$split2","_slicedToArray","key","value","decodeURIComponent","decodeQueryString","query","length","replace","reduce","acc","entry","_decodeParam"],"sources":["C:\\code-challenge-react\\node_modules\\@esri\\arcgis-rest-request\\src\\utils\\decode-query-string.ts"],"sourcesContent":["/* Copyright (c) 2017-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nexport function decodeParam(param: string): { key: string; value: string } {\n  const [key, value] = param.split(\"=\");\n  return { key: decodeURIComponent(key), value: decodeURIComponent(value) };\n}\n\n/**\n * Decodes the passed query string as an object.\n *\n * @param query A string to be decoded.\n * @returns A decoded query param object.\n */\nexport function decodeQueryString(query?: string): { [key: string]: string } {\n  if (!query || query.length <= 0) {\n    return {};\n  }\n\n  return query\n    .replace(/^#/, \"\")\n    .replace(/^\\?/, \"\")\n    .split(\"&\")\n    .reduce((acc, entry) => {\n      const { key, value } = decodeParam(entry);\n      acc[key] = value;\n      return acc;\n    }, {} as any);\n}\n"],"mappings":";AAAA;;AAGA,OAAM,SAAUA,WAAWA,CAACC,KAAa;EACvC,IAAAC,YAAA,GAAqBD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;IAAAC,aAAA,GAAAC,cAAA,CAAAH,YAAA;IAA9BI,GAAG,GAAAF,aAAA;IAAEG,KAAK,GAAAH,aAAA;EACjB,OAAO;IAAEE,GAAG,EAAEE,kBAAkB,CAACF,GAAG,CAAC;IAAEC,KAAK,EAAEC,kBAAkB,CAACD,KAAK;EAAC,CAAE;AAC3E;AAEA;;;;;;AAMA,OAAM,SAAUE,iBAAiBA,CAACC,KAAc;EAC9C,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACC,MAAM,IAAI,CAAC,EAAE;IAC/B,OAAO,EAAE;;EAGX,OAAOD,KAAK,CACTE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CACjBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBT,KAAK,CAAC,GAAG,CAAC,CACVU,MAAM,CAAC,UAACC,GAAG,EAAEC,KAAK,EAAI;IACrB,IAAAC,YAAA,GAAuBhB,WAAW,CAACe,KAAK,CAAC;MAAjCT,GAAG,GAAAU,YAAA,CAAHV,GAAG;MAAEC,KAAK,GAAAS,YAAA,CAALT,KAAK;IAClBO,GAAG,CAACR,GAAG,CAAC,GAAGC,KAAK;IAChB,OAAOO,GAAG;EACZ,CAAC,EAAE,EAAS,CAAC;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}