{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../core/maybe.js\";\nimport { s as o, c as r } from \"./vec2.js\";\nimport { O as i, a as l } from \"./vec2f64.js\";\nimport { Z as t } from \"./vec4f64.js\";\nimport { DEFAULT_TEX_SIZE as a } from \"../views/3d/support/engineContent/sdfPrimitives.js\";\nimport { ShaderOutput as s } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SliceDraw as n } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { ObjectAndLayerIdColor as c } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";\nimport { AlignPixel as d } from \"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";\nimport { HUD as u } from \"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";\nimport { HUDOcclusionPass as p } from \"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";\nimport { OutputHighlight as v } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { VisualVariables as g } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";\nimport { symbolAlphaCutoff as f, defaultMaskAlphaCutoff as m } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { ColorConversion as b } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";\nimport { RgbaFloatEncoding as h } from \"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";\nimport { ScreenSizePerspective as w, addScreenSizePerspective as C, addScreenSizePerspectiveAlignment as x } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";\nimport { Float2PassUniform as P } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float4PassUniform as j } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { Float4sPassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/Float4sPassUniform.js\";\nimport { FloatPassUniform as z } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { FloatsPassUniform as y } from \"../views/3d/webgl-engine/core/shaderModules/FloatsPassUniform.js\";\nimport { glsl as F } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as O } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as A } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { TransparencyPassType as $ } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nimport { VertexAttribute as D } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nimport { vvColorNumber as L } from \"../views/3d/webgl-engine/materials/VisualVariablePassParameters.js\";\nfunction B(r) {\n  const l = new O(),\n    B = r.signedDistanceFieldEnabled;\n  if (l.include(d), l.include(u, r), l.include(n, r), r.occlusionPass) return l.include(p, r), l;\n  const {\n    vertex: T,\n    fragment: V\n  } = l;\n  l.include(w), V.include(h), V.include(b), l.include(g, r), l.include(c, r), l.varyings.add(\"vcolor\", \"vec4\"), l.varyings.add(\"vtc\", \"vec2\"), l.varyings.add(\"vsize\", \"vec2\"), r.binaryHighlightOcclusionEnabled && l.varyings.add(\"voccluded\", \"float\"), T.uniforms.add([new j(\"viewport\", (e, o) => o.camera.fullViewport), new P(\"screenOffset\", (e, r) => o(U, 2 * e.screenOffset[0] * r.camera.pixelRatio, 2 * e.screenOffset[1] * r.camera.pixelRatio)), new P(\"anchorPosition\", e => H(e)), new j(\"materialColor\", e => e.color), new z(\"pixelRatio\", (e, o) => o.camera.pixelRatio)]), B && (T.uniforms.add(new j(\"outlineColor\", e => e.outlineColor)), V.uniforms.add([new j(\"outlineColor\", e => _(e) ? e.outlineColor : t), new z(\"outlineSize\", e => _(e) ? e.outlineSize : 0)])), r.hasScreenSizePerspective && (C(T), x(T)), (r.debugDrawLabelBorder || r.binaryHighlightOcclusionEnabled) && l.varyings.add(\"debugBorderCoords\", \"vec4\"), l.attributes.add(D.UV0, \"vec2\"), l.attributes.add(D.COLOR, \"vec4\"), l.attributes.add(D.SIZE, \"vec2\"), l.attributes.add(D.AUXPOS2, \"vec4\"), T.code.add(F`\n    void main(void) {\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      forwardObjectAndLayerIdColor();\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n      vec2 inputSize;\n      ${r.hasScreenSizePerspective ? F`\n      inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n      vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);\n         ` : F`\n      inputSize = size;\n      vec2 screenOffsetScaled = screenOffset;`}\n\n      ${r.vvSize ? \"inputSize *= vvScale(auxpos2).xx;\" : \"\"}\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n\n      ${r.occlusionTestEnabled || r.binaryHighlightOcclusionEnabled ? \"bool visible = testVisibilityHUD(posProj);\" : \"\"}\n\n      ${r.binaryHighlightOcclusionEnabled ? \"voccluded = visible ? 0.0 : 1.0;\" : \"\"}\n    `);\n  const E = F`vec2 uv01 = floor(uv0);\nvec2 uv = uv0 - uv01;\nquadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`,\n    M = r.pixelSnappingEnabled ? B ? F`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;` : F`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}` : F`posProj += quadOffset;`;\n  r.vvColor && T.uniforms.add([new S(\"vvColorColors\", e => e.vvColorColors, L), new y(\"vvColorValues\", e => e.vvColorValues, L)]), T.uniforms.add(new P(\"textureCoordinateScaleFactor\", o => e(o.texture) && e(o.texture.descriptor.textureCoordinateScaleFactor) ? o.texture.descriptor.textureCoordinateScaleFactor : i)), T.code.add(F`\n    ${r.occlusionTestEnabled ? \"if (visible) {\" : \"\"}\n    ${E}\n    ${r.vvColor ? \"vcolor = vvGetColor(auxpos2, vvColorValues, vvColorColors) * materialColor;\" : \"vcolor = color / 255.0 * materialColor;\"}\n\n    ${r.output === s.ObjectAndLayerIdColor ? F`vcolor.a = 1.0;` : \"\"}\n\n    bool alphaDiscard = vcolor.a < ${F.float(f)};\n    ${B ? `alphaDiscard = alphaDiscard && outlineColor.a < ${F.float(f)};` : \"\"}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${M}\n      gl_Position = posProj;\n    }\n\n    vtc = uv * textureCoordinateScaleFactor;\n\n    ${r.debugDrawLabelBorder ? \"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);\" : \"\"}\n    vsize = inputSize;\n    ${r.occlusionTestEnabled ? F`} else { vtc = vec2(0.0);\n      ${r.debugDrawLabelBorder ? \"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}\" : \"}\"}` : \"\"}\n  }\n  `), V.uniforms.add(new A(\"tex\", e => e.texture));\n  const I = r.debugDrawLabelBorder ? F`(isBorder > 0.0 ? 0.0 : ${F.float(m)})` : F.float(m),\n    R = F`\n    ${r.debugDrawLabelBorder ? F`\n      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));` : \"\"}\n\n    ${B ? F`\n      vec4 fillPixelColor = vcolor;\n\n      // Attempt to sample texel centers to avoid that thin cross outlines\n      // disappear with large symbol sizes.\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041\n      const float txSize = ${F.float(a)};\n      const float texelSize = 1.0 / txSize;\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgba2float(texture2D(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${I} ||\n          fillPixelColor.a + outlinePixelColor.a < ${F.float(f)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        gl_FragColor = vec4(compositeColor, compositeAlpha);\n      } else {\n        if (fillAlphaFactor < ${I}) {\n          discard;\n        }\n\n        gl_FragColor = premultiplyAlpha(fillPixelColor);\n      }\n\n      // visualize SDF:\n      // gl_FragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      ` : F`\n          vec4 texColor = texture2D(tex, vtc, -0.5);\n          if (texColor.a < ${I}) {\n            discard;\n          }\n          gl_FragColor = texColor * premultiplyAlpha(vcolor);\n          `}\n\n    // Draw debug border with transparency, so that original texels along border are still partially visible\n    ${r.debugDrawLabelBorder ? F`gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);` : \"\"}\n  `;\n  return r.output === s.Alpha && V.code.add(F`\n      void main() {\n        ${R}\n        gl_FragColor = vec4(gl_FragColor.a);\n      }\n      `), r.output === s.ObjectAndLayerIdColor && V.code.add(F`\n      void main() {\n        ${R}\n        outputObjectAndLayerIdColor();\n      }\n      `), r.output === s.Color && V.code.add(F`\n    void main() {\n      ${R}\n      ${r.transparencyPassType === $.FrontFace ? \"gl_FragColor.rgb /= gl_FragColor.a;\" : \"\"}\n    }\n    `), r.output === s.Highlight && (l.include(v, r), V.code.add(F`\n    void main() {\n      ${R}\n      ${r.binaryHighlightOcclusionEnabled ? F`\n          if (voccluded == 1.0) {\n            gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\n          } else {\n            gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n          }` : \"outputHighlight();\"}\n    }\n    `)), l;\n}\nfunction _(e) {\n  return e.outlineColor[3] > 0 && e.outlineSize > 0;\n}\nfunction H(e) {\n  let o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : U;\n  return e.textureIsSignedDistanceField ? T(e.anchorPosition, e.distanceFieldBoundingBox, o) : r(o, e.anchorPosition), o;\n}\nfunction T(r, i, l) {\n  e(i) ? o(l, r[0] * (i[2] - i[0]) + i[0], r[1] * (i[3] - i[1]) + i[1]) : o(l, 0, 0);\n}\nconst U = l(),\n  V = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    build: B,\n    calculateAnchorPosForRendering: H\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { V as H, B as b, H as c };","map":{"version":3,"names":["isSome","e","s","o","c","r","O","i","a","l","Z","t","DEFAULT_TEX_SIZE","ShaderOutput","SliceDraw","n","ObjectAndLayerIdColor","AlignPixel","d","HUD","u","HUDOcclusionPass","p","OutputHighlight","v","VisualVariables","g","symbolAlphaCutoff","f","defaultMaskAlphaCutoff","m","ColorConversion","b","RgbaFloatEncoding","h","ScreenSizePerspective","w","addScreenSizePerspective","C","addScreenSizePerspectiveAlignment","x","Float2PassUniform","P","Float4PassUniform","j","Float4sPassUniform","S","FloatPassUniform","z","FloatsPassUniform","y","glsl","F","ShaderBuilder","Texture2DPassUniform","A","TransparencyPassType","$","VertexAttribute","D","vvColorNumber","L","B","signedDistanceFieldEnabled","include","occlusionPass","vertex","T","fragment","V","varyings","add","binaryHighlightOcclusionEnabled","uniforms","camera","fullViewport","U","screenOffset","pixelRatio","H","color","outlineColor","_","outlineSize","hasScreenSizePerspective","debugDrawLabelBorder","attributes","UV0","COLOR","SIZE","AUXPOS2","code","vvSize","occlusionTestEnabled","E","M","pixelSnappingEnabled","vvColor","vvColorColors","vvColorValues","texture","descriptor","textureCoordinateScaleFactor","output","float","I","R","Alpha","Color","transparencyPassType","FrontFace","Highlight","arguments","length","undefined","textureIsSignedDistanceField","anchorPosition","distanceFieldBoundingBox","Object","freeze","defineProperty","__proto__","build","calculateAnchorPosForRendering","Symbol","toStringTag","value"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/chunks/HUDMaterial.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../core/maybe.js\";import{s as o,c as r}from\"./vec2.js\";import{O as i,a as l}from\"./vec2f64.js\";import{Z as t}from\"./vec4f64.js\";import{DEFAULT_TEX_SIZE as a}from\"../views/3d/support/engineContent/sdfPrimitives.js\";import{ShaderOutput as s}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as n}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{ObjectAndLayerIdColor as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";import{AlignPixel as d}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";import{HUD as u}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";import{HUDOcclusionPass as p}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";import{OutputHighlight as v}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{VisualVariables as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as f,defaultMaskAlphaCutoff as m}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as b}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{RgbaFloatEncoding as h}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{ScreenSizePerspective as w,addScreenSizePerspective as C,addScreenSizePerspectiveAlignment as x}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";import{Float2PassUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{Float4sPassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float4sPassUniform.js\";import{FloatPassUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{FloatsPassUniform as y}from\"../views/3d/webgl-engine/core/shaderModules/FloatsPassUniform.js\";import{glsl as F}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as O}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as A}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as $}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as D}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{vvColorNumber as L}from\"../views/3d/webgl-engine/materials/VisualVariablePassParameters.js\";function B(r){const l=new O,B=r.signedDistanceFieldEnabled;if(l.include(d),l.include(u,r),l.include(n,r),r.occlusionPass)return l.include(p,r),l;const{vertex:T,fragment:V}=l;l.include(w),V.include(h),V.include(b),l.include(g,r),l.include(c,r),l.varyings.add(\"vcolor\",\"vec4\"),l.varyings.add(\"vtc\",\"vec2\"),l.varyings.add(\"vsize\",\"vec2\"),r.binaryHighlightOcclusionEnabled&&l.varyings.add(\"voccluded\",\"float\"),T.uniforms.add([new j(\"viewport\",((e,o)=>o.camera.fullViewport)),new P(\"screenOffset\",((e,r)=>o(U,2*e.screenOffset[0]*r.camera.pixelRatio,2*e.screenOffset[1]*r.camera.pixelRatio))),new P(\"anchorPosition\",(e=>H(e))),new j(\"materialColor\",(e=>e.color)),new z(\"pixelRatio\",((e,o)=>o.camera.pixelRatio))]),B&&(T.uniforms.add(new j(\"outlineColor\",(e=>e.outlineColor))),V.uniforms.add([new j(\"outlineColor\",(e=>_(e)?e.outlineColor:t)),new z(\"outlineSize\",(e=>_(e)?e.outlineSize:0))])),r.hasScreenSizePerspective&&(C(T),x(T)),(r.debugDrawLabelBorder||r.binaryHighlightOcclusionEnabled)&&l.varyings.add(\"debugBorderCoords\",\"vec4\"),l.attributes.add(D.UV0,\"vec2\"),l.attributes.add(D.COLOR,\"vec4\"),l.attributes.add(D.SIZE,\"vec2\"),l.attributes.add(D.AUXPOS2,\"vec4\"),T.code.add(F`\n    void main(void) {\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      forwardObjectAndLayerIdColor();\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n      vec2 inputSize;\n      ${r.hasScreenSizePerspective?F`\n      inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n      vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);\n         `:F`\n      inputSize = size;\n      vec2 screenOffsetScaled = screenOffset;`}\n\n      ${r.vvSize?\"inputSize *= vvScale(auxpos2).xx;\":\"\"}\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n\n      ${r.occlusionTestEnabled||r.binaryHighlightOcclusionEnabled?\"bool visible = testVisibilityHUD(posProj);\":\"\"}\n\n      ${r.binaryHighlightOcclusionEnabled?\"voccluded = visible ? 0.0 : 1.0;\":\"\"}\n    `);const E=F`vec2 uv01 = floor(uv0);\nvec2 uv = uv0 - uv01;\nquadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`,M=r.pixelSnappingEnabled?B?F`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:F`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}`:F`posProj += quadOffset;`;r.vvColor&&T.uniforms.add([new S(\"vvColorColors\",(e=>e.vvColorColors),L),new y(\"vvColorValues\",(e=>e.vvColorValues),L)]),T.uniforms.add(new P(\"textureCoordinateScaleFactor\",(o=>e(o.texture)&&e(o.texture.descriptor.textureCoordinateScaleFactor)?o.texture.descriptor.textureCoordinateScaleFactor:i))),T.code.add(F`\n    ${r.occlusionTestEnabled?\"if (visible) {\":\"\"}\n    ${E}\n    ${r.vvColor?\"vcolor = vvGetColor(auxpos2, vvColorValues, vvColorColors) * materialColor;\":\"vcolor = color / 255.0 * materialColor;\"}\n\n    ${r.output===s.ObjectAndLayerIdColor?F`vcolor.a = 1.0;`:\"\"}\n\n    bool alphaDiscard = vcolor.a < ${F.float(f)};\n    ${B?`alphaDiscard = alphaDiscard && outlineColor.a < ${F.float(f)};`:\"\"}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${M}\n      gl_Position = posProj;\n    }\n\n    vtc = uv * textureCoordinateScaleFactor;\n\n    ${r.debugDrawLabelBorder?\"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);\":\"\"}\n    vsize = inputSize;\n    ${r.occlusionTestEnabled?F`} else { vtc = vec2(0.0);\n      ${r.debugDrawLabelBorder?\"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}\":\"}\"}`:\"\"}\n  }\n  `),V.uniforms.add(new A(\"tex\",(e=>e.texture)));const I=r.debugDrawLabelBorder?F`(isBorder > 0.0 ? 0.0 : ${F.float(m)})`:F.float(m),R=F`\n    ${r.debugDrawLabelBorder?F`\n      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`:\"\"}\n\n    ${B?F`\n      vec4 fillPixelColor = vcolor;\n\n      // Attempt to sample texel centers to avoid that thin cross outlines\n      // disappear with large symbol sizes.\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041\n      const float txSize = ${F.float(a)};\n      const float texelSize = 1.0 / txSize;\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgba2float(texture2D(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${I} ||\n          fillPixelColor.a + outlinePixelColor.a < ${F.float(f)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        gl_FragColor = vec4(compositeColor, compositeAlpha);\n      } else {\n        if (fillAlphaFactor < ${I}) {\n          discard;\n        }\n\n        gl_FragColor = premultiplyAlpha(fillPixelColor);\n      }\n\n      // visualize SDF:\n      // gl_FragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      `:F`\n          vec4 texColor = texture2D(tex, vtc, -0.5);\n          if (texColor.a < ${I}) {\n            discard;\n          }\n          gl_FragColor = texColor * premultiplyAlpha(vcolor);\n          `}\n\n    // Draw debug border with transparency, so that original texels along border are still partially visible\n    ${r.debugDrawLabelBorder?F`gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`:\"\"}\n  `;return r.output===s.Alpha&&V.code.add(F`\n      void main() {\n        ${R}\n        gl_FragColor = vec4(gl_FragColor.a);\n      }\n      `),r.output===s.ObjectAndLayerIdColor&&V.code.add(F`\n      void main() {\n        ${R}\n        outputObjectAndLayerIdColor();\n      }\n      `),r.output===s.Color&&V.code.add(F`\n    void main() {\n      ${R}\n      ${r.transparencyPassType===$.FrontFace?\"gl_FragColor.rgb /= gl_FragColor.a;\":\"\"}\n    }\n    `),r.output===s.Highlight&&(l.include(v,r),V.code.add(F`\n    void main() {\n      ${R}\n      ${r.binaryHighlightOcclusionEnabled?F`\n          if (voccluded == 1.0) {\n            gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\n          } else {\n            gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n          }`:\"outputHighlight();\"}\n    }\n    `)),l}function _(e){return e.outlineColor[3]>0&&e.outlineSize>0}function H(e,o=U){return e.textureIsSignedDistanceField?T(e.anchorPosition,e.distanceFieldBoundingBox,o):r(o,e.anchorPosition),o}function T(r,i,l){e(i)?o(l,r[0]*(i[2]-i[0])+i[0],r[1]*(i[3]-i[1])+i[1]):o(l,0,0)}const U=l(),V=Object.freeze(Object.defineProperty({__proto__:null,build:B,calculateAnchorPosForRendering:H},Symbol.toStringTag,{value:\"Module\"}));export{V as H,B as b,H as c};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}