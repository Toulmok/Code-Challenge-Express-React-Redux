{"ast":null,"code":"import _classCallCheck from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import{ArcGISIdentityManager}from'@esri/arcgis-rest-request';import{syncAuthToJsApi,updateDisplay}from'./sessionFunctions';// We need to customize the behavior of how ArcGISIdentityManager handles refreshing.\nexport var ManagerWithCustomRefresh=/*#__PURE__*/function(_ArcGISIdentityManage){_inherits(ManagerWithCustomRefresh,_ArcGISIdentityManage);var _super=_createSuper(ManagerWithCustomRefresh);function ManagerWithCustomRefresh(){_classCallCheck(this,ManagerWithCustomRefresh);return _super.apply(this,arguments);}_createClass(ManagerWithCustomRefresh,[{key:\"canRefresh\",get:// This will be false by default because we do not have a refresh token on the client.\n// Forcing this to be `true` will cause ArcGIS REST JS to refresh tokens with our custom `refreshCredentials` method below.\nfunction get(){return true;}// Now we can override the `refreshCredentials` method to change HOW this will be refreshed.\n// This needs to have the signature and return a promise with the new session and call `updateToken` internally.\n},{key:\"refreshCredentials\",value:function refreshCredentials(){return fetch(\"/refresh\").then(function(response){return response.json();}).then(function(sessionJson){console.log(sessionJson);session.updateToken(sessionJson.token,new Date(sessionJson.tokenExpires));updateDisplay();syncAuthToJsApi();return session;});}}]);return ManagerWithCustomRefresh;}(ArcGISIdentityManager);export default ManagerWithCustomRefresh;","map":{"version":3,"names":["React","ArcGISIdentityManager","syncAuthToJsApi","updateDisplay","ManagerWithCustomRefresh","_ArcGISIdentityManage","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","value","refreshCredentials","fetch","then","response","json","sessionJson","console","log","session","updateToken","token","Date","tokenExpires"],"sources":["C:/code-challenge-react/client/src/components/session/sessionManager.jsx"],"sourcesContent":["import React from 'react'\r\nimport { ArcGISIdentityManager } from '@esri/arcgis-rest-request'\r\nimport { syncAuthToJsApi, updateDisplay } from './sessionFunctions'\r\n\r\n// We need to customize the behavior of how ArcGISIdentityManager handles refreshing.\r\nexport class ManagerWithCustomRefresh extends ArcGISIdentityManager {\r\n  // This will be false by default because we do not have a refresh token on the client.\r\n  // Forcing this to be `true` will cause ArcGIS REST JS to refresh tokens with our custom `refreshCredentials` method below.\r\n  get canRefresh() { return true }\r\n  \r\n  // Now we can override the `refreshCredentials` method to change HOW this will be refreshed.\r\n  // This needs to have the signature and return a promise with the new session and call `updateToken` internally.\r\n  refreshCredentials() {\r\n    return fetch(\"/refresh\")\r\n     .then(response => { return response.json() })\r\n     .then(sessionJson => { console.log(sessionJson)\r\n        session.updateToken(sessionJson.token, new Date(sessionJson.tokenExpires))\r\n        updateDisplay()\r\n        syncAuthToJsApi()\r\n        return session\r\n      })\r\n  }\r\n}\r\n\r\nexport default ManagerWithCustomRefresh"],"mappings":"gcAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,qBAAqB,KAAQ,2BAA2B,CACjE,OAASC,eAAe,CAAEC,aAAa,KAAQ,oBAAoB,CAEnE;AACA,UAAa,CAAAC,wBAAwB,uBAAAC,qBAAA,EAAAC,SAAA,CAAAF,wBAAA,CAAAC,qBAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,wBAAA,WAAAA,yBAAA,EAAAK,eAAA,MAAAL,wBAAA,SAAAG,MAAA,CAAAG,KAAA,MAAAC,SAAA,GAAAC,YAAA,CAAAR,wBAAA,GAAAS,GAAA,cAAAC,GAAA,CACnC;AACA;AACA,SAAAA,IAAA,CAAiB,CAAE,MAAO,KAAI,CAAC,CAE/B;AACA;AAAA,GAAAD,GAAA,sBAAAE,KAAA,CACA,SAAAC,mBAAA,CAAqB,CACnB,MAAO,CAAAC,KAAK,CAAC,UAAU,CAAC,CACtBC,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAAE,MAAO,CAAAA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAAC,CAAC,CAC5CF,IAAI,CAAC,SAAAG,WAAW,CAAI,CAAEC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC,CAC5CG,OAAO,CAACC,WAAW,CAACJ,WAAW,CAACK,KAAK,CAAE,GAAI,CAAAC,IAAI,CAACN,WAAW,CAACO,YAAY,CAAC,CAAC,CAC1EzB,aAAa,EAAE,CACfD,eAAe,EAAE,CACjB,MAAO,CAAAsB,OAAO,CAChB,CAAC,CAAC,CACN,CAAC,WAAApB,wBAAA,GAhB2CH,qBAAqB,EAmBnE,cAAe,CAAAG,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}