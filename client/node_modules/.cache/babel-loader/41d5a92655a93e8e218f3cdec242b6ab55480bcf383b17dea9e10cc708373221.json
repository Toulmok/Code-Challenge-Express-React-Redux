{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { a as e } from \"../../../chunks/vec2f64.js\";\nimport { c as r } from \"../../../chunks/vec4f64.js\";\nimport { C as i } from \"../../../chunks/ChapmanAtmosphere.glsl.js\";\nimport { NoParameters as t } from \"../webgl-engine/core/shaderModules/interfaces.js\";\nimport { ReloadableShaderModule as s } from \"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as n } from \"../webgl-engine/core/shaderTechnique/ShaderTechnique.js\";\nimport { Default3D as o } from \"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";\nimport { Program as a } from \"../webgl-engine/lib/Program.js\";\nimport { BlendFactor as h, CompareFunction as l } from \"../../webgl/enums.js\";\nimport { makePipelineState as m, separateBlendingParams as c, defaultColorWriteParams as g } from \"../../webgl/renderState.js\";\nclass d extends t {\n  constructor() {\n    super(...arguments), this.heightParameters = r(), this.radii = e(), this.innerFadeDistance = 0, this.altitudeFade = 0, this.hazeStrength = 1;\n  }\n}\nclass u extends n {\n  initializeProgram(e) {\n    return new a(e.rctx, u.shader.get().build(this.configuration), o);\n  }\n  initializePipeline() {\n    return this.configuration.haze ? m({\n      blending: c(h.ONE, h.ZERO, h.ONE_MINUS_SRC_COLOR, h.ONE),\n      colorWrite: g\n    }) : m({\n      blending: c(h.SRC_ALPHA, h.ONE, h.ONE_MINUS_SRC_ALPHA, h.ONE_MINUS_SRC_ALPHA),\n      depthTest: {\n        func: l.LEQUAL\n      },\n      colorWrite: g\n    });\n  }\n}\nu.shader = new s(i, () => import(\"./ChapmanAtmosphere.glsl.js\"));\nexport { d as ChapmanAtmospherePassParameters, u as ChapmanAtmosphereTechnique };","map":{"version":3,"names":["a","e","c","r","C","i","NoParameters","t","ReloadableShaderModule","s","ShaderTechnique","n","Default3D","o","Program","BlendFactor","h","CompareFunction","l","makePipelineState","m","separateBlendingParams","defaultColorWriteParams","g","d","constructor","arguments","heightParameters","radii","innerFadeDistance","altitudeFade","hazeStrength","u","initializeProgram","rctx","shader","get","build","configuration","initializePipeline","haze","blending","ONE","ZERO","ONE_MINUS_SRC_COLOR","colorWrite","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","depthTest","func","LEQUAL","ChapmanAtmospherePassParameters","ChapmanAtmosphereTechnique"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/environment/ChapmanAtmosphereTechnique.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{a as e}from\"../../../chunks/vec2f64.js\";import{c as r}from\"../../../chunks/vec4f64.js\";import{C as i}from\"../../../chunks/ChapmanAtmosphere.glsl.js\";import{NoParameters as t}from\"../webgl-engine/core/shaderModules/interfaces.js\";import{ReloadableShaderModule as s}from\"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js\";import{ShaderTechnique as n}from\"../webgl-engine/core/shaderTechnique/ShaderTechnique.js\";import{Default3D as o}from\"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";import{Program as a}from\"../webgl-engine/lib/Program.js\";import{BlendFactor as h,CompareFunction as l}from\"../../webgl/enums.js\";import{makePipelineState as m,separateBlendingParams as c,defaultColorWriteParams as g}from\"../../webgl/renderState.js\";class d extends t{constructor(){super(...arguments),this.heightParameters=r(),this.radii=e(),this.innerFadeDistance=0,this.altitudeFade=0,this.hazeStrength=1}}class u extends n{initializeProgram(e){return new a(e.rctx,u.shader.get().build(this.configuration),o)}initializePipeline(){return this.configuration.haze?m({blending:c(h.ONE,h.ZERO,h.ONE_MINUS_SRC_COLOR,h.ONE),colorWrite:g}):m({blending:c(h.SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA),depthTest:{func:l.LEQUAL},colorWrite:g})}}u.shader=new s(i,(()=>import(\"./ChapmanAtmosphere.glsl.js\")));export{d as ChapmanAtmospherePassParameters,u as ChapmanAtmosphereTechnique};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,CAAC,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,CAAC,IAAIC,CAAC,QAAK,2CAA2C;AAAC,SAAOC,YAAY,IAAIC,CAAC,QAAK,kDAAkD;AAAC,SAAOC,sBAAsB,IAAIC,CAAC,QAAK,gEAAgE;AAAC,SAAOC,eAAe,IAAIC,CAAC,QAAK,yDAAyD;AAAC,SAAOC,SAAS,IAAIC,CAAC,QAAK,wDAAwD;AAAC,SAAOC,OAAO,IAAId,CAAC,QAAK,gCAAgC;AAAC,SAAOe,WAAW,IAAIC,CAAC,EAACC,eAAe,IAAIC,CAAC,QAAK,sBAAsB;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,EAACC,sBAAsB,IAAInB,CAAC,EAACoB,uBAAuB,IAAIC,CAAC,QAAK,4BAA4B;AAAC,MAAMC,CAAC,SAASjB,CAAC;EAACkB,WAAWA,CAAA,EAAE;IAAC,KAAK,CAAC,GAAGC,SAAS,CAAC,EAAC,IAAI,CAACC,gBAAgB,GAACxB,CAAC,EAAE,EAAC,IAAI,CAACyB,KAAK,GAAC3B,CAAC,EAAE,EAAC,IAAI,CAAC4B,iBAAiB,GAAC,CAAC,EAAC,IAAI,CAACC,YAAY,GAAC,CAAC,EAAC,IAAI,CAACC,YAAY,GAAC,CAAC;EAAA;AAAC;AAAC,MAAMC,CAAC,SAASrB,CAAC;EAACsB,iBAAiBA,CAAChC,CAAC,EAAC;IAAC,OAAO,IAAID,CAAC,CAACC,CAAC,CAACiC,IAAI,EAACF,CAAC,CAACG,MAAM,CAACC,GAAG,EAAE,CAACC,KAAK,CAAC,IAAI,CAACC,aAAa,CAAC,EAACzB,CAAC,CAAC;EAAA;EAAC0B,kBAAkBA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACD,aAAa,CAACE,IAAI,GAACpB,CAAC,CAAC;MAACqB,QAAQ,EAACvC,CAAC,CAACc,CAAC,CAAC0B,GAAG,EAAC1B,CAAC,CAAC2B,IAAI,EAAC3B,CAAC,CAAC4B,mBAAmB,EAAC5B,CAAC,CAAC0B,GAAG,CAAC;MAACG,UAAU,EAACtB;IAAC,CAAC,CAAC,GAACH,CAAC,CAAC;MAACqB,QAAQ,EAACvC,CAAC,CAACc,CAAC,CAAC8B,SAAS,EAAC9B,CAAC,CAAC0B,GAAG,EAAC1B,CAAC,CAAC+B,mBAAmB,EAAC/B,CAAC,CAAC+B,mBAAmB,CAAC;MAACC,SAAS,EAAC;QAACC,IAAI,EAAC/B,CAAC,CAACgC;MAAM,CAAC;MAACL,UAAU,EAACtB;IAAC,CAAC,CAAC;EAAA;AAAC;AAACS,CAAC,CAACG,MAAM,GAAC,IAAI1B,CAAC,CAACJ,CAAC,EAAE,MAAI,MAAM,CAAC,6BAA6B,CAAC,CAAE;AAAC,SAAOmB,CAAC,IAAI2B,+BAA+B,EAACnB,CAAC,IAAIoB,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}