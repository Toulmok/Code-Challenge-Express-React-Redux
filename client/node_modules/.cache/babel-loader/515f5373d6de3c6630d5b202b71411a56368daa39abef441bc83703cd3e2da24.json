{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { c as t } from \"../../../../chunks/mat4f64.js\";\nimport { c as o } from \"../../../../chunks/vec3f64.js\";\nimport { getReferenceEllipsoid as r } from \"../../../../geometry/ellipsoidUtils.js\";\nimport { computeTranslationToOriginAndRotation as a } from \"../../../../geometry/projection.js\";\nfunction n(o, r, n, s) {\n  const c = h(o, r, n),\n    i = t();\n  return a(n, c, i, s), i;\n}\nconst s = 1,\n  c = 5 - s;\nfunction h(t, a, n) {\n  const h = o(),\n    i = t[3],\n    e = 2 ** (Math.ceil(Math.log(i) * Math.LOG2E / c) * c + s);\n  if (n.isGeographic) {\n    const o = e / r(n).radius * 180 / Math.PI,\n      a = Math.round(t[1] / o),\n      s = Math.max(-90, Math.min(90, a * o)),\n      c = o / Math.cos((Math.abs(s) - o / 2) / 180 * Math.PI),\n      i = Math.round(t[0] / c) * c;\n    h[0] = i, h[1] = s;\n  } else {\n    const o = Math.round(t[0] / e),\n      r = Math.round(t[1] / e);\n    h[0] = o * e, h[1] = r * e;\n  }\n  const M = t[2] + a,\n    m = Math.round(M / e);\n  return h[2] = m * e, h;\n}\nexport { n as computeGlobalTransformation, h as getLocalOrigin };","map":{"version":3,"names":["c","t","o","getReferenceEllipsoid","r","computeTranslationToOriginAndRotation","a","n","s","h","i","e","Math","ceil","log","LOG2E","isGeographic","radius","PI","round","max","min","cos","abs","M","m","computeGlobalTransformation","getLocalOrigin"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/3d/layers/i3s/I3SProjectionUtil.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{c as t}from\"../../../../chunks/mat4f64.js\";import{c as o}from\"../../../../chunks/vec3f64.js\";import{getReferenceEllipsoid as r}from\"../../../../geometry/ellipsoidUtils.js\";import{computeTranslationToOriginAndRotation as a}from\"../../../../geometry/projection.js\";function n(o,r,n,s){const c=h(o,r,n),i=t();return a(n,c,i,s),i}const s=1,c=5-s;function h(t,a,n){const h=o(),i=t[3],e=2**(Math.ceil(Math.log(i)*Math.LOG2E/c)*c+s);if(n.isGeographic){const o=e/r(n).radius*180/Math.PI,a=Math.round(t[1]/o),s=Math.max(-90,Math.min(90,a*o)),c=o/Math.cos((Math.abs(s)-o/2)/180*Math.PI),i=Math.round(t[0]/c)*c;h[0]=i,h[1]=s}else{const o=Math.round(t[0]/e),r=Math.round(t[1]/e);h[0]=o*e,h[1]=r*e}const M=t[2]+a,m=Math.round(M/e);return h[2]=m*e,h}export{n as computeGlobalTransformation,h as getLocalOrigin};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAC,QAAK,+BAA+B;AAAC,SAAOD,CAAC,IAAIE,CAAC,QAAK,+BAA+B;AAAC,SAAOC,qBAAqB,IAAIC,CAAC,QAAK,wCAAwC;AAAC,SAAOC,qCAAqC,IAAIC,CAAC,QAAK,oCAAoC;AAAC,SAASC,CAACA,CAACL,CAAC,EAACE,CAAC,EAACG,CAAC,EAACC,CAAC,EAAC;EAAC,MAAMR,CAAC,GAACS,CAAC,CAACP,CAAC,EAACE,CAAC,EAACG,CAAC,CAAC;IAACG,CAAC,GAACT,CAAC,EAAE;EAAC,OAAOK,CAAC,CAACC,CAAC,EAACP,CAAC,EAACU,CAAC,EAACF,CAAC,CAAC,EAACE,CAAC;AAAA;AAAC,MAAMF,CAAC,GAAC,CAAC;EAACR,CAAC,GAAC,CAAC,GAACQ,CAAC;AAAC,SAASC,CAACA,CAACR,CAAC,EAACK,CAAC,EAACC,CAAC,EAAC;EAAC,MAAME,CAAC,GAACP,CAAC,EAAE;IAACQ,CAAC,GAACT,CAAC,CAAC,CAAC,CAAC;IAACU,CAAC,GAAC,CAAC,KAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAACJ,CAAC,CAAC,GAACE,IAAI,CAACG,KAAK,GAACf,CAAC,CAAC,GAACA,CAAC,GAACQ,CAAC,CAAC;EAAC,IAAGD,CAAC,CAACS,YAAY,EAAC;IAAC,MAAMd,CAAC,GAACS,CAAC,GAACP,CAAC,CAACG,CAAC,CAAC,CAACU,MAAM,GAAC,GAAG,GAACL,IAAI,CAACM,EAAE;MAACZ,CAAC,GAACM,IAAI,CAACO,KAAK,CAAClB,CAAC,CAAC,CAAC,CAAC,GAACC,CAAC,CAAC;MAACM,CAAC,GAACI,IAAI,CAACQ,GAAG,CAAC,CAAC,EAAE,EAACR,IAAI,CAACS,GAAG,CAAC,EAAE,EAACf,CAAC,GAACJ,CAAC,CAAC,CAAC;MAACF,CAAC,GAACE,CAAC,GAACU,IAAI,CAACU,GAAG,CAAC,CAACV,IAAI,CAACW,GAAG,CAACf,CAAC,CAAC,GAACN,CAAC,GAAC,CAAC,IAAE,GAAG,GAACU,IAAI,CAACM,EAAE,CAAC;MAACR,CAAC,GAACE,IAAI,CAACO,KAAK,CAAClB,CAAC,CAAC,CAAC,CAAC,GAACD,CAAC,CAAC,GAACA,CAAC;IAACS,CAAC,CAAC,CAAC,CAAC,GAACC,CAAC,EAACD,CAAC,CAAC,CAAC,CAAC,GAACD,CAAC;EAAA,CAAC,MAAI;IAAC,MAAMN,CAAC,GAACU,IAAI,CAACO,KAAK,CAAClB,CAAC,CAAC,CAAC,CAAC,GAACU,CAAC,CAAC;MAACP,CAAC,GAACQ,IAAI,CAACO,KAAK,CAAClB,CAAC,CAAC,CAAC,CAAC,GAACU,CAAC,CAAC;IAACF,CAAC,CAAC,CAAC,CAAC,GAACP,CAAC,GAACS,CAAC,EAACF,CAAC,CAAC,CAAC,CAAC,GAACL,CAAC,GAACO,CAAC;EAAA;EAAC,MAAMa,CAAC,GAACvB,CAAC,CAAC,CAAC,CAAC,GAACK,CAAC;IAACmB,CAAC,GAACb,IAAI,CAACO,KAAK,CAACK,CAAC,GAACb,CAAC,CAAC;EAAC,OAAOF,CAAC,CAAC,CAAC,CAAC,GAACgB,CAAC,GAACd,CAAC,EAACF,CAAC;AAAA;AAAC,SAAOF,CAAC,IAAImB,2BAA2B,EAACjB,CAAC,IAAIkB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}