{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from \"../../../Graphic.js\";\nimport { W as t } from \"../../../chunks/languageUtils.js\";\nimport { SqlExpressionAdapted as i, OriginalField as s, AdaptedFeatureSet as n } from \"./Adapted.js\";\nimport r from \"./AttributeFilter.js\";\nimport a from \"./OrderBy.js\";\nimport l from \"../support/FeatureSet.js\";\nimport o from \"../support/IdSet.js\";\nimport d from \"../support/OrderbyClause.js\";\nimport { IdState as u, layerGeometryEsriConstants as f, FeatureServiceDatabaseType as c } from \"../support/shared.js\";\nimport { isSingleField as h, toWhereClause as p, predictType as g, scanForField as _, reformulateWithoutField as m } from \"../support/sqlUtils.js\";\nimport { calculateStat as y } from \"../support/stats.js\";\nimport b from \"../support/StatsField.js\";\nimport { createMD5Hash as w, outputTypes as F } from \"../../../core/MD5.js\";\nimport { WhereClause as I } from \"../../../core/sql/WhereClause.js\";\nimport S from \"../../../geometry/SpatialReference.js\";\nimport x from \"../../../layers/support/Field.js\";\nimport k from \"../../../layers/support/FieldsIndex.js\";\nimport { FeatureSetError as D, FeatureSetErrorCodes as A } from \"../support/errorsupport.js\";\nfunction j(e) {\n  if (!e) return \"COUNT\";\n  switch (e.toLowerCase()) {\n    case \"max\":\n      return \"MAX\";\n    case \"var\":\n    case \"variance\":\n      return \"VAR\";\n    case \"avg\":\n    case \"average\":\n    case \"mean\":\n      return \"AVG\";\n    case \"min\":\n      return \"MIN\";\n    case \"sum\":\n      return \"SUM\";\n    case \"stdev\":\n    case \"stddev\":\n      return \"STDDEV\";\n    case \"count\":\n      return \"COUNT\";\n  }\n  return \"COUNT\";\n}\nclass C extends l {\n  constructor(e) {\n    super(e), this._decodedStatsfield = [], this._decodedGroupbyfield = [], this._candosimplegroupby = !0, this.phsyicalgroupbyfields = [], this.objectIdField = \"ROW__ID\", this._internalObjectIdField = \"ROW__ID\", this._adaptedFields = [], this.declaredClass = \"esri.arcade.featureset.actions.Aggregate\", this._uniqueIds = 1, this._maxQuery = 10, this._maxProcessing = 10, this._parent = e.parentfeatureset, this._config = e;\n  }\n  isTable() {\n    return !0;\n  }\n  async _getSet(e) {\n    if (null === this._wset) {\n      const t = await this._getFilteredSet(\"\", null, null, null, e);\n      return this._wset = t, this._wset;\n    }\n    return this._wset;\n  }\n  _isInFeatureSet() {\n    return u.InFeatureSet;\n  }\n  _nextUniqueName(e) {\n    for (; 1 === e[\"T\" + this._uniqueIds.toString()];) this._uniqueIds++;\n    const t = \"T\" + this._uniqueIds.toString();\n    return e[t] = 1, t;\n  }\n  _convertToEsriFieldType(e) {\n    return e;\n  }\n  _initialiseFeatureSet() {\n    const e = {};\n    let t = !1,\n      n = 1;\n    const r = this._parent ? this._parent.getFieldsIndex() : new k([]);\n    for (this.objectIdField = \"ROW__ID\", this.globalIdField = \"\"; !1 === t;) {\n      let e = !1;\n      for (let t = 0; t < this._config.groupbyfields.length; t++) if (this._config.groupbyfields[t].name.toLowerCase() === this.objectIdField.toLowerCase()) {\n        e = !0;\n        break;\n      }\n      if (!1 === e) for (let t = 0; t < this._config.statsfields.length; t++) if (this._config.statsfields[t].name.toLowerCase() === this.objectIdField.toLowerCase()) {\n        e = !0;\n        break;\n      }\n      !1 === e ? t = !0 : (this.objectIdField = \"ROW__ID\" + n.toString(), n++);\n    }\n    for (const i of this._config.statsfields) {\n      const e = new b();\n      e.field = i.name, e.tofieldname = i.name, e.workingexpr = i.expression instanceof I ? i.expression : I.create(i.expression, r), e.typeofstat = j(i.statistic), this._decodedStatsfield.push(e);\n    }\n    this._decodedGroupbyfield = [];\n    for (const i of this._config.groupbyfields) {\n      const e = {\n        name: i.name,\n        singlefield: null,\n        tofieldname: i.name,\n        expression: i.expression instanceof I ? i.expression : I.create(i.expression, r)\n      };\n      this._decodedGroupbyfield.push(e);\n    }\n    if (null !== this._parent) {\n      this.geometryType = this._parent.geometryType, this.spatialReference = this._parent.spatialReference, this.hasM = this._parent.hasM, this.hasZ = this._parent.hasZ, this.typeIdField = \"\";\n      for (const t of this._parent.fields) e[t.name.toUpperCase()] = 1;\n      this.types = null;\n    } else this.geometryType = f.point, this.typeIdField = \"\", this.types = null, this.spatialReference = new S({\n      wkid: 4326\n    });\n    this.fields = [];\n    const a = new b();\n    a.field = this._nextUniqueName(e), a.tofieldname = this.objectIdField, a.workingexpr = I.create(this._parent.objectIdField, this._parent.getFieldsIndex()), a.typeofstat = \"MIN\", this._decodedStatsfield.push(a);\n    for (const s of this._decodedGroupbyfield) {\n      const t = new x();\n      if (s.name = this._nextUniqueName(e), t.name = s.tofieldname, t.alias = t.name, h(s.expression)) {\n        const e = this._parent.getField(p(s.expression, c.Standardised));\n        if (!e) throw new D(A.AggregationFieldNotFound);\n        s.name = e.name, s.singlefield = e.name, this.phsyicalgroupbyfields.push(e.name), t.type = e.type;\n      } else {\n        t.type = this._convertToEsriFieldType(g(s.expression, this._parent.fields));\n        const e = new x();\n        e.name = s.name, e.alias = e.name, this.phsyicalgroupbyfields.push(s.name), this._adaptedFields.push(new i(e, s.expression)), this._candosimplegroupby = !1;\n      }\n      this.fields.push(t);\n    }\n    if (this._adaptedFields.length > 0) for (const i of this._parent.fields) this._adaptedFields.push(new s(i));\n    for (let i = 0; i < this._decodedStatsfield.length; i++) {\n      const t = new x();\n      let s = null;\n      const n = this._decodedStatsfield[i];\n      n.field = this._nextUniqueName(e), n.tofieldname === this.objectIdField && (this._internalObjectIdField = n.field), t.name = n.tofieldname, t.alias = t.name;\n      const r = null !== n.workingexpr && h(n.workingexpr) ? p(n.workingexpr, c.Standardised) : \"\";\n      switch (this._decodedStatsfield[i].typeofstat) {\n        case \"SUM\":\n          if (\"\" !== r) {\n            if (s = this._parent.getField(r), !s) throw new D(A.AggregationFieldNotFound);\n            t.type = s.type;\n          } else t.type = \"double\";\n          break;\n        case \"MIN\":\n        case \"MAX\":\n          if (\"\" !== r) {\n            if (s = this._parent.getField(r), !s) throw new D(A.AggregationFieldNotFound);\n            t.type = s.type;\n          } else t.type = \"double\";\n          break;\n        case \"COUNT\":\n          t.type = \"integer\";\n          break;\n        case \"STDDEV\":\n        case \"VAR\":\n        case \"AVG\":\n          if (\"\" !== r && (s = this._parent.getField(r), !s)) throw new D(A.AggregationFieldNotFound);\n          t.type = \"double\";\n      }\n      this.fields.push(t);\n    }\n  }\n  async _canDoAggregates() {\n    return !1;\n  }\n  async _getFeatures(e, t, i, s) {\n    -1 !== t && this._featureCache[t];\n    const n = this._maxQuery;\n    return !0 === this._checkIfNeedToExpandKnownPage(e, n) ? (await this._expandPagedSet(e, n, 0, 0, s), this._getFeatures(e, t, i, s)) : \"success\";\n  }\n  async _getFilteredSet(e, t, i, s, l) {\n    if (\"\" !== e) return new o([], [], !0, null);\n    let u = null;\n    const f = {\n      ordered: !1,\n      nowhereclause: !1\n    };\n    if (await this._ensureLoaded(), null !== i) for (let n = 0; n < this._decodedStatsfield.length; n++) if (!0 === _(i, this._decodedStatsfield[n].tofieldname)) {\n      f.nowhereclause = !0, i = null;\n      break;\n    }\n    if (null !== s) {\n      f.ordered = !0;\n      for (let e = 0; e < this._decodedStatsfield.length; e++) if (!0 === s.scanForField(this._decodedStatsfield[e].tofieldname)) {\n        s = null, f.ordered = !1;\n        break;\n      }\n      if (null !== s) for (const e of this._decodedGroupbyfield) if (null === e.singlefield && !0 === s.scanForField(e.tofieldname)) {\n        s = null, f.ordered = !1;\n        break;\n      }\n    }\n    if (!1 !== this._candosimplegroupby && (await this._parent._canDoAggregates(this.phsyicalgroupbyfields, this._decodedStatsfield, \"\", null, null))) {\n      let e = null;\n      i && (e = this._reformulateWhereClauseWithoutGroupByFields(i));\n      let t = null;\n      s && (t = this._reformulateOrderClauseWithoutGroupByFields(s));\n      const n = await this._parent._getAggregatePagesDataSourceDefinition(this.phsyicalgroupbyfields, this._decodedStatsfield, \"\", null, e, t, this._internalObjectIdField);\n      return this._checkCancelled(l), u = !0 === f.nowhereclause ? new o(n._candidates.slice(0).concat(n._known.slice(0)), [], !0 === f.ordered && n._ordered, this._clonePageDefinition(n.pagesDefinition)) : new o(n._candidates.slice(0), n._known.slice(0), !0 === f.ordered && n._ordered, this._clonePageDefinition(n.pagesDefinition)), u;\n    }\n    let c = this._parent;\n    if (this._adaptedFields.length > 0 && (c = new n({\n      parentfeatureset: this._parent,\n      adaptedFields: this._adaptedFields,\n      extraFilter: null\n    })), !0 === f.nowhereclause) u = new o([\"GETPAGES\"], [], !1, {\n      aggregatefeaturesetpagedefinition: !0,\n      resultOffset: 0,\n      resultRecordCount: this._maxQuery,\n      internal: {\n        fullyResolved: !1,\n        workingItem: null,\n        type: \"manual\",\n        iterator: null,\n        set: [],\n        subfeatureset: new a({\n          parentfeatureset: c,\n          orderbyclause: new d(this.phsyicalgroupbyfields.join(\",\") + \",\" + this._parent.objectIdField + \" ASC\")\n        })\n      }\n    });else {\n      let e = c;\n      if (null !== i) {\n        let t = null;\n        i && (t = this._reformulateWhereClauseWithoutGroupByFields(i)), e = new r({\n          parentfeatureset: e,\n          whereclause: t\n        });\n      }\n      u = new o([\"GETPAGES\"], [], !1, {\n        aggregatefeaturesetpagedefinition: !0,\n        resultOffset: 0,\n        resultRecordCount: this._maxQuery,\n        internal: {\n          fullyResolved: !1,\n          workingItem: null,\n          type: \"manual\",\n          iterator: null,\n          set: [],\n          subfeatureset: new a({\n            parentfeatureset: e,\n            orderbyclause: new d(this.phsyicalgroupbyfields.join(\",\") + \",\" + this._parent.objectIdField + \" ASC\")\n          })\n        }\n      });\n    }\n    return u;\n  }\n  _reformulateWhereClauseWithoutStatsFields(e) {\n    for (const t of this._decodedStatsfield) e = m(e, t.tofieldname, p(t.workingexpr, c.Standardised), this._parent.getFieldsIndex());\n    return e;\n  }\n  _reformulateWhereClauseWithoutGroupByFields(e) {\n    for (const t of this._decodedGroupbyfield) t.tofieldname !== t.name && (e = m(e, t.tofieldname, p(t.expression, c.Standardised), this._parent.getFieldsIndex()));\n    return e;\n  }\n  _reformulateOrderClauseWithoutGroupByFields(e) {\n    const t = [];\n    for (const i of this._decodedGroupbyfield) i.tofieldname !== i.name && t.push({\n      field: i.tofieldname,\n      newfield: i.name\n    });\n    return t.length > 0 ? e.replaceFields(t) : e;\n  }\n  _clonePageDefinition(e) {\n    return null === e ? null : !0 === e.aggregatefeaturesetpagedefinition ? {\n      aggregatefeaturesetpagedefinition: !0,\n      resultRecordCount: e.resultRecordCount,\n      resultOffset: e.resultOffset,\n      internal: e.internal\n    } : this._parent._clonePageDefinition(e);\n  }\n  async _refineSetBlock(e, t, i) {\n    if (!0 === this._checkIfNeedToExpandCandidatePage(e, this._maxQuery)) return await this._expandPagedSet(e, this._maxQuery, 0, 0, i), this._refineSetBlock(e, t, i);\n    this._checkCancelled(i);\n    const s = e._candidates.length;\n    this._refineKnowns(e, t);\n    e._candidates.length;\n    return e._candidates.length, e;\n  }\n  _expandPagedSet(e, t, i, s, n) {\n    return this._expandPagedSetFeatureSet(e, t, i, s, n);\n  }\n  async _getPhysicalPage(t, i, s) {\n    if (!0 === t.pagesDefinition.aggregatefeaturesetpagedefinition) return this._sequentialGetPhysicalItem(t, t.pagesDefinition.resultRecordCount, s, []);\n    const n = await this._getAgregagtePhysicalPage(t, i, s);\n    for (const r of n) {\n      const t = {\n        geometry: r.geometry,\n        attributes: {}\n      };\n      for (const e of this._decodedGroupbyfield) t.attributes[e.tofieldname] = r.attributes[e.name];\n      for (const e of this._decodedStatsfield) t.attributes[e.tofieldname] = r.attributes[e.field];\n      this._featureCache[t.attributes[this.objectIdField]] = new e(t);\n    }\n    return n.length;\n  }\n  _sequentialGetPhysicalItem(e, t, i, s) {\n    return new Promise((n, r) => {\n      null === e.pagesDefinition.internal.iterator && (e.pagesDefinition.internal.iterator = e.pagesDefinition.internal.subfeatureset.iterator(i)), !0 === e.pagesDefinition.internal.fullyResolved || 0 === t ? n(s.length) : this._nextAggregateItem(e, t, i, s, r => {\n        null === r ? n(s.length) : (t -= 1, n(this._sequentialGetPhysicalItem(e, t, i, s)));\n      }, r);\n    });\n  }\n  _nextAggregateItem(e, i, s, n, r, a) {\n    try {\n      t(e.pagesDefinition.internal.iterator.next()).then(t => {\n        if (null === t) {\n          if (null !== e.pagesDefinition.internal.workingItem) {\n            const t = this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);\n            n.push(t), e.pagesDefinition.internal.workingItem = null, e.pagesDefinition.internal.set.push(t.attributes[this.objectIdField]), e.pagesDefinition.internal.fullyResolved = !0, r(null);\n          } else e.pagesDefinition.internal.fullyResolved = !0, r(null);\n        } else {\n          const l = this._generateAggregateHash(t);\n          if (null === e.pagesDefinition.internal.workingItem) e.pagesDefinition.internal.workingItem = {\n            features: [t],\n            id: l\n          };else {\n            if (l !== e.pagesDefinition.internal.workingItem.id) {\n              const s = this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);\n              return n.push(s), e.pagesDefinition.internal.workingItem = null, e.pagesDefinition.internal.set.push(s.attributes[this.objectIdField]), i -= 1, e.pagesDefinition.internal.workingItem = {\n                features: [t],\n                id: l\n              }, void r(s);\n            }\n            e.pagesDefinition.internal.workingItem.features.push(t);\n          }\n          this._nextAggregateItem(e, i, s, n, r, a);\n        }\n      }, a);\n    } catch (l) {\n      a(l);\n    }\n  }\n  _calculateFieldStat(e, t, i) {\n    const s = [];\n    for (let n = 0; n < e.features.length; n++) if (null !== t.workingexpr) {\n      const i = t.workingexpr.calculateValue(e.features[n]);\n      null !== i && s.push(i);\n    } else s.push(null);\n    switch (t.typeofstat) {\n      case \"MIN\":\n        i.attributes[t.tofieldname] = y(\"min\", s, -1);\n        break;\n      case \"MAX\":\n        i.attributes[t.tofieldname] = y(\"max\", s, -1);\n        break;\n      case \"SUM\":\n        i.attributes[t.tofieldname] = y(\"sum\", s, -1);\n        break;\n      case \"COUNT\":\n        i.attributes[t.tofieldname] = s.length;\n        break;\n      case \"VAR\":\n        i.attributes[t.tofieldname] = y(\"var\", s, -1);\n        break;\n      case \"STDDEV\":\n        i.attributes[t.tofieldname] = y(\"stddev\", s, -1);\n        break;\n      case \"AVG\":\n        i.attributes[t.tofieldname] = y(\"avg\", s, -1);\n    }\n    return !0;\n  }\n  _calculateAndAppendAggregateItem(t) {\n    const i = {\n      attributes: {},\n      geometry: null\n    };\n    for (const e of this._decodedGroupbyfield) {\n      const s = e.singlefield ? t.features[0].attributes[e.singlefield] : e.expression.calculateValue(t.features[0]);\n      i.attributes[e.tofieldname] = s;\n    }\n    for (const e of this._decodedStatsfield) this._calculateFieldStat(t, e, i);\n    const s = [];\n    for (let e = 0; e < this._decodedStatsfield.length; e++) s.push(this._calculateFieldStat(t, this._decodedStatsfield[e], i));\n    return this._featureCache[i.attributes[this.objectIdField]] = new e({\n      attributes: i.attributes,\n      geometry: i.geometry\n    }), i;\n  }\n  _generateAggregateHash(e) {\n    let t = \"\";\n    for (const i of this._decodedGroupbyfield) {\n      const s = i.singlefield ? e.attributes[i.singlefield] : i.expression.calculateValue(e);\n      t += null == s ? \":\" : \":\" + s.toString();\n    }\n    return w(t, F.String);\n  }\n  async _stat() {\n    return {\n      calculated: !1\n    };\n  }\n  async getFeatureByObjectId() {\n    return null;\n  }\n  static registerAction() {\n    l._featuresetFunctions.groupby = function (e, t) {\n      return new C({\n        parentfeatureset: this,\n        groupbyfields: e,\n        statsfields: t\n      });\n    };\n  }\n}\nexport { C as default };","map":{"version":3,"names":["e","W","t","SqlExpressionAdapted","i","OriginalField","s","AdaptedFeatureSet","n","r","a","l","o","d","IdState","u","layerGeometryEsriConstants","f","FeatureServiceDatabaseType","c","isSingleField","h","toWhereClause","p","predictType","g","scanForField","_","reformulateWithoutField","m","calculateStat","y","b","createMD5Hash","w","outputTypes","F","WhereClause","I","S","x","k","FeatureSetError","D","FeatureSetErrorCodes","A","j","toLowerCase","C","constructor","_decodedStatsfield","_decodedGroupbyfield","_candosimplegroupby","phsyicalgroupbyfields","objectIdField","_internalObjectIdField","_adaptedFields","declaredClass","_uniqueIds","_maxQuery","_maxProcessing","_parent","parentfeatureset","_config","isTable","_getSet","_wset","_getFilteredSet","_isInFeatureSet","InFeatureSet","_nextUniqueName","toString","_convertToEsriFieldType","_initialiseFeatureSet","getFieldsIndex","globalIdField","groupbyfields","length","name","statsfields","field","tofieldname","workingexpr","expression","create","typeofstat","statistic","push","singlefield","geometryType","spatialReference","hasM","hasZ","typeIdField","fields","toUpperCase","types","point","wkid","alias","getField","Standardised","AggregationFieldNotFound","type","_canDoAggregates","_getFeatures","_featureCache","_checkIfNeedToExpandKnownPage","_expandPagedSet","ordered","nowhereclause","_ensureLoaded","_reformulateWhereClauseWithoutGroupByFields","_reformulateOrderClauseWithoutGroupByFields","_getAggregatePagesDataSourceDefinition","_checkCancelled","_candidates","slice","concat","_known","_ordered","_clonePageDefinition","pagesDefinition","adaptedFields","extraFilter","aggregatefeaturesetpagedefinition","resultOffset","resultRecordCount","internal","fullyResolved","workingItem","iterator","set","subfeatureset","orderbyclause","join","whereclause","_reformulateWhereClauseWithoutStatsFields","newfield","replaceFields","_refineSetBlock","_checkIfNeedToExpandCandidatePage","_refineKnowns","_expandPagedSetFeatureSet","_getPhysicalPage","_sequentialGetPhysicalItem","_getAgregagtePhysicalPage","geometry","attributes","Promise","_nextAggregateItem","next","then","_calculateAndAppendAggregateItem","_generateAggregateHash","features","id","_calculateFieldStat","calculateValue","String","_stat","calculated","getFeatureByObjectId","registerAction","_featuresetFunctions","groupby","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/arcade/featureset/actions/GroupBy.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../../../Graphic.js\";import{W as t}from\"../../../chunks/languageUtils.js\";import{SqlExpressionAdapted as i,OriginalField as s,AdaptedFeatureSet as n}from\"./Adapted.js\";import r from\"./AttributeFilter.js\";import a from\"./OrderBy.js\";import l from\"../support/FeatureSet.js\";import o from\"../support/IdSet.js\";import d from\"../support/OrderbyClause.js\";import{IdState as u,layerGeometryEsriConstants as f,FeatureServiceDatabaseType as c}from\"../support/shared.js\";import{isSingleField as h,toWhereClause as p,predictType as g,scanForField as _,reformulateWithoutField as m}from\"../support/sqlUtils.js\";import{calculateStat as y}from\"../support/stats.js\";import b from\"../support/StatsField.js\";import{createMD5Hash as w,outputTypes as F}from\"../../../core/MD5.js\";import{WhereClause as I}from\"../../../core/sql/WhereClause.js\";import S from\"../../../geometry/SpatialReference.js\";import x from\"../../../layers/support/Field.js\";import k from\"../../../layers/support/FieldsIndex.js\";import{FeatureSetError as D,FeatureSetErrorCodes as A}from\"../support/errorsupport.js\";function j(e){if(!e)return\"COUNT\";switch(e.toLowerCase()){case\"max\":return\"MAX\";case\"var\":case\"variance\":return\"VAR\";case\"avg\":case\"average\":case\"mean\":return\"AVG\";case\"min\":return\"MIN\";case\"sum\":return\"SUM\";case\"stdev\":case\"stddev\":return\"STDDEV\";case\"count\":return\"COUNT\"}return\"COUNT\"}class C extends l{constructor(e){super(e),this._decodedStatsfield=[],this._decodedGroupbyfield=[],this._candosimplegroupby=!0,this.phsyicalgroupbyfields=[],this.objectIdField=\"ROW__ID\",this._internalObjectIdField=\"ROW__ID\",this._adaptedFields=[],this.declaredClass=\"esri.arcade.featureset.actions.Aggregate\",this._uniqueIds=1,this._maxQuery=10,this._maxProcessing=10,this._parent=e.parentfeatureset,this._config=e}isTable(){return!0}async _getSet(e){if(null===this._wset){const t=await this._getFilteredSet(\"\",null,null,null,e);return this._wset=t,this._wset}return this._wset}_isInFeatureSet(){return u.InFeatureSet}_nextUniqueName(e){for(;1===e[\"T\"+this._uniqueIds.toString()];)this._uniqueIds++;const t=\"T\"+this._uniqueIds.toString();return e[t]=1,t}_convertToEsriFieldType(e){return e}_initialiseFeatureSet(){const e={};let t=!1,n=1;const r=this._parent?this._parent.getFieldsIndex():new k([]);for(this.objectIdField=\"ROW__ID\",this.globalIdField=\"\";!1===t;){let e=!1;for(let t=0;t<this._config.groupbyfields.length;t++)if(this._config.groupbyfields[t].name.toLowerCase()===this.objectIdField.toLowerCase()){e=!0;break}if(!1===e)for(let t=0;t<this._config.statsfields.length;t++)if(this._config.statsfields[t].name.toLowerCase()===this.objectIdField.toLowerCase()){e=!0;break}!1===e?t=!0:(this.objectIdField=\"ROW__ID\"+n.toString(),n++)}for(const i of this._config.statsfields){const e=new b;e.field=i.name,e.tofieldname=i.name,e.workingexpr=i.expression instanceof I?i.expression:I.create(i.expression,r),e.typeofstat=j(i.statistic),this._decodedStatsfield.push(e)}this._decodedGroupbyfield=[];for(const i of this._config.groupbyfields){const e={name:i.name,singlefield:null,tofieldname:i.name,expression:i.expression instanceof I?i.expression:I.create(i.expression,r)};this._decodedGroupbyfield.push(e)}if(null!==this._parent){this.geometryType=this._parent.geometryType,this.spatialReference=this._parent.spatialReference,this.hasM=this._parent.hasM,this.hasZ=this._parent.hasZ,this.typeIdField=\"\";for(const t of this._parent.fields)e[t.name.toUpperCase()]=1;this.types=null}else this.geometryType=f.point,this.typeIdField=\"\",this.types=null,this.spatialReference=new S({wkid:4326});this.fields=[];const a=new b;a.field=this._nextUniqueName(e),a.tofieldname=this.objectIdField,a.workingexpr=I.create(this._parent.objectIdField,this._parent.getFieldsIndex()),a.typeofstat=\"MIN\",this._decodedStatsfield.push(a);for(const s of this._decodedGroupbyfield){const t=new x;if(s.name=this._nextUniqueName(e),t.name=s.tofieldname,t.alias=t.name,h(s.expression)){const e=this._parent.getField(p(s.expression,c.Standardised));if(!e)throw new D(A.AggregationFieldNotFound);s.name=e.name,s.singlefield=e.name,this.phsyicalgroupbyfields.push(e.name),t.type=e.type}else{t.type=this._convertToEsriFieldType(g(s.expression,this._parent.fields));const e=new x;e.name=s.name,e.alias=e.name,this.phsyicalgroupbyfields.push(s.name),this._adaptedFields.push(new i(e,s.expression)),this._candosimplegroupby=!1}this.fields.push(t)}if(this._adaptedFields.length>0)for(const i of this._parent.fields)this._adaptedFields.push(new s(i));for(let i=0;i<this._decodedStatsfield.length;i++){const t=new x;let s=null;const n=this._decodedStatsfield[i];n.field=this._nextUniqueName(e),n.tofieldname===this.objectIdField&&(this._internalObjectIdField=n.field),t.name=n.tofieldname,t.alias=t.name;const r=null!==n.workingexpr&&h(n.workingexpr)?p(n.workingexpr,c.Standardised):\"\";switch(this._decodedStatsfield[i].typeofstat){case\"SUM\":if(\"\"!==r){if(s=this._parent.getField(r),!s)throw new D(A.AggregationFieldNotFound);t.type=s.type}else t.type=\"double\";break;case\"MIN\":case\"MAX\":if(\"\"!==r){if(s=this._parent.getField(r),!s)throw new D(A.AggregationFieldNotFound);t.type=s.type}else t.type=\"double\";break;case\"COUNT\":t.type=\"integer\";break;case\"STDDEV\":case\"VAR\":case\"AVG\":if(\"\"!==r&&(s=this._parent.getField(r),!s))throw new D(A.AggregationFieldNotFound);t.type=\"double\"}this.fields.push(t)}}async _canDoAggregates(){return!1}async _getFeatures(e,t,i,s){-1!==t&&this._featureCache[t];const n=this._maxQuery;return!0===this._checkIfNeedToExpandKnownPage(e,n)?(await this._expandPagedSet(e,n,0,0,s),this._getFeatures(e,t,i,s)):\"success\"}async _getFilteredSet(e,t,i,s,l){if(\"\"!==e)return new o([],[],!0,null);let u=null;const f={ordered:!1,nowhereclause:!1};if(await this._ensureLoaded(),null!==i)for(let n=0;n<this._decodedStatsfield.length;n++)if(!0===_(i,this._decodedStatsfield[n].tofieldname)){f.nowhereclause=!0,i=null;break}if(null!==s){f.ordered=!0;for(let e=0;e<this._decodedStatsfield.length;e++)if(!0===s.scanForField(this._decodedStatsfield[e].tofieldname)){s=null,f.ordered=!1;break}if(null!==s)for(const e of this._decodedGroupbyfield)if(null===e.singlefield&&!0===s.scanForField(e.tofieldname)){s=null,f.ordered=!1;break}}if(!1!==this._candosimplegroupby&&await this._parent._canDoAggregates(this.phsyicalgroupbyfields,this._decodedStatsfield,\"\",null,null)){let e=null;i&&(e=this._reformulateWhereClauseWithoutGroupByFields(i));let t=null;s&&(t=this._reformulateOrderClauseWithoutGroupByFields(s));const n=await this._parent._getAggregatePagesDataSourceDefinition(this.phsyicalgroupbyfields,this._decodedStatsfield,\"\",null,e,t,this._internalObjectIdField);return this._checkCancelled(l),u=!0===f.nowhereclause?new o(n._candidates.slice(0).concat(n._known.slice(0)),[],!0===f.ordered&&n._ordered,this._clonePageDefinition(n.pagesDefinition)):new o(n._candidates.slice(0),n._known.slice(0),!0===f.ordered&&n._ordered,this._clonePageDefinition(n.pagesDefinition)),u}let c=this._parent;if(this._adaptedFields.length>0&&(c=new n({parentfeatureset:this._parent,adaptedFields:this._adaptedFields,extraFilter:null})),!0===f.nowhereclause)u=new o([\"GETPAGES\"],[],!1,{aggregatefeaturesetpagedefinition:!0,resultOffset:0,resultRecordCount:this._maxQuery,internal:{fullyResolved:!1,workingItem:null,type:\"manual\",iterator:null,set:[],subfeatureset:new a({parentfeatureset:c,orderbyclause:new d(this.phsyicalgroupbyfields.join(\",\")+\",\"+this._parent.objectIdField+\" ASC\")})}});else{let e=c;if(null!==i){let t=null;i&&(t=this._reformulateWhereClauseWithoutGroupByFields(i)),e=new r({parentfeatureset:e,whereclause:t})}u=new o([\"GETPAGES\"],[],!1,{aggregatefeaturesetpagedefinition:!0,resultOffset:0,resultRecordCount:this._maxQuery,internal:{fullyResolved:!1,workingItem:null,type:\"manual\",iterator:null,set:[],subfeatureset:new a({parentfeatureset:e,orderbyclause:new d(this.phsyicalgroupbyfields.join(\",\")+\",\"+this._parent.objectIdField+\" ASC\")})}})}return u}_reformulateWhereClauseWithoutStatsFields(e){for(const t of this._decodedStatsfield)e=m(e,t.tofieldname,p(t.workingexpr,c.Standardised),this._parent.getFieldsIndex());return e}_reformulateWhereClauseWithoutGroupByFields(e){for(const t of this._decodedGroupbyfield)t.tofieldname!==t.name&&(e=m(e,t.tofieldname,p(t.expression,c.Standardised),this._parent.getFieldsIndex()));return e}_reformulateOrderClauseWithoutGroupByFields(e){const t=[];for(const i of this._decodedGroupbyfield)i.tofieldname!==i.name&&t.push({field:i.tofieldname,newfield:i.name});return t.length>0?e.replaceFields(t):e}_clonePageDefinition(e){return null===e?null:!0===e.aggregatefeaturesetpagedefinition?{aggregatefeaturesetpagedefinition:!0,resultRecordCount:e.resultRecordCount,resultOffset:e.resultOffset,internal:e.internal}:this._parent._clonePageDefinition(e)}async _refineSetBlock(e,t,i){if(!0===this._checkIfNeedToExpandCandidatePage(e,this._maxQuery))return await this._expandPagedSet(e,this._maxQuery,0,0,i),this._refineSetBlock(e,t,i);this._checkCancelled(i);const s=e._candidates.length;this._refineKnowns(e,t);e._candidates.length;return e._candidates.length,e}_expandPagedSet(e,t,i,s,n){return this._expandPagedSetFeatureSet(e,t,i,s,n)}async _getPhysicalPage(t,i,s){if(!0===t.pagesDefinition.aggregatefeaturesetpagedefinition)return this._sequentialGetPhysicalItem(t,t.pagesDefinition.resultRecordCount,s,[]);const n=await this._getAgregagtePhysicalPage(t,i,s);for(const r of n){const t={geometry:r.geometry,attributes:{}};for(const e of this._decodedGroupbyfield)t.attributes[e.tofieldname]=r.attributes[e.name];for(const e of this._decodedStatsfield)t.attributes[e.tofieldname]=r.attributes[e.field];this._featureCache[t.attributes[this.objectIdField]]=new e(t)}return n.length}_sequentialGetPhysicalItem(e,t,i,s){return new Promise(((n,r)=>{null===e.pagesDefinition.internal.iterator&&(e.pagesDefinition.internal.iterator=e.pagesDefinition.internal.subfeatureset.iterator(i)),!0===e.pagesDefinition.internal.fullyResolved||0===t?n(s.length):this._nextAggregateItem(e,t,i,s,(r=>{null===r?n(s.length):(t-=1,n(this._sequentialGetPhysicalItem(e,t,i,s)))}),r)}))}_nextAggregateItem(e,i,s,n,r,a){try{t(e.pagesDefinition.internal.iterator.next()).then((t=>{if(null===t)if(null!==e.pagesDefinition.internal.workingItem){const t=this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);n.push(t),e.pagesDefinition.internal.workingItem=null,e.pagesDefinition.internal.set.push(t.attributes[this.objectIdField]),e.pagesDefinition.internal.fullyResolved=!0,r(null)}else e.pagesDefinition.internal.fullyResolved=!0,r(null);else{const l=this._generateAggregateHash(t);if(null===e.pagesDefinition.internal.workingItem)e.pagesDefinition.internal.workingItem={features:[t],id:l};else{if(l!==e.pagesDefinition.internal.workingItem.id){const s=this._calculateAndAppendAggregateItem(e.pagesDefinition.internal.workingItem);return n.push(s),e.pagesDefinition.internal.workingItem=null,e.pagesDefinition.internal.set.push(s.attributes[this.objectIdField]),i-=1,e.pagesDefinition.internal.workingItem={features:[t],id:l},void r(s)}e.pagesDefinition.internal.workingItem.features.push(t)}this._nextAggregateItem(e,i,s,n,r,a)}}),a)}catch(l){a(l)}}_calculateFieldStat(e,t,i){const s=[];for(let n=0;n<e.features.length;n++)if(null!==t.workingexpr){const i=t.workingexpr.calculateValue(e.features[n]);null!==i&&s.push(i)}else s.push(null);switch(t.typeofstat){case\"MIN\":i.attributes[t.tofieldname]=y(\"min\",s,-1);break;case\"MAX\":i.attributes[t.tofieldname]=y(\"max\",s,-1);break;case\"SUM\":i.attributes[t.tofieldname]=y(\"sum\",s,-1);break;case\"COUNT\":i.attributes[t.tofieldname]=s.length;break;case\"VAR\":i.attributes[t.tofieldname]=y(\"var\",s,-1);break;case\"STDDEV\":i.attributes[t.tofieldname]=y(\"stddev\",s,-1);break;case\"AVG\":i.attributes[t.tofieldname]=y(\"avg\",s,-1)}return!0}_calculateAndAppendAggregateItem(t){const i={attributes:{},geometry:null};for(const e of this._decodedGroupbyfield){const s=e.singlefield?t.features[0].attributes[e.singlefield]:e.expression.calculateValue(t.features[0]);i.attributes[e.tofieldname]=s}for(const e of this._decodedStatsfield)this._calculateFieldStat(t,e,i);const s=[];for(let e=0;e<this._decodedStatsfield.length;e++)s.push(this._calculateFieldStat(t,this._decodedStatsfield[e],i));return this._featureCache[i.attributes[this.objectIdField]]=new e({attributes:i.attributes,geometry:i.geometry}),i}_generateAggregateHash(e){let t=\"\";for(const i of this._decodedGroupbyfield){const s=i.singlefield?e.attributes[i.singlefield]:i.expression.calculateValue(e);t+=null==s?\":\":\":\"+s.toString()}return w(t,F.String)}async _stat(){return{calculated:!1}}async getFeatureByObjectId(){return null}static registerAction(){l._featuresetFunctions.groupby=function(e,t){return new C({parentfeatureset:this,groupbyfields:e,statsfields:t})}}}export{C as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}