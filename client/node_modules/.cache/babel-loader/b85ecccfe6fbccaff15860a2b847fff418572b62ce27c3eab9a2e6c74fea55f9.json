{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { equals as e } from \"../../../core/arrayUtils.js\";\nimport { isPowerOfTwo as t } from \"../../../core/mathUtils.js\";\nimport { isSome as r, isNone as i, mapOr as s } from \"../../../core/maybe.js\";\nimport { i as a, j as n, u as o, b as l, n as h, e as d, w as g, F as c } from \"../../../chunks/vec3.js\";\nimport { c as u, a as m } from \"../../../chunks/vec3f64.js\";\nimport { empty as p } from \"../../../geometry/support/aaBoundingBox.js\";\nimport { containsXY as f } from \"../../../geometry/support/aaBoundingRect.js\";\nimport { earth as y } from \"../../../geometry/support/Ellipsoid.js\";\nimport { glLayout as _ } from \"../support/buffer/glUtil.js\";\nimport { GeometryState as x } from \"./GeometryState.js\";\nimport { NeighborIndex as C } from \"./interfaces.js\";\nimport { LayerClass as D } from \"./LayerClass.js\";\nimport { PatchGeometry as v, releaseGeometry as S } from \"./PatchGeometry.js\";\nimport { ENABLE_TERRAIN_INTERNAL_CHECKS as $, internalAssert as E, neighborEdgeIndices as b, oppositeEdge as T, neighborCornerIndices as j, v32s as A, lij2s as V } from \"./terrainUtils.js\";\nimport { TextureFader as R, ActivationTime as w } from \"./TextureFader.js\";\nimport { isEdgeNeighbor as L } from \"./Tile.js\";\nimport P from \"./TileOverlayData.js\";\nimport { fallsWithinLayer as N } from \"./tileUtils.js\";\nimport { VertexArrayObject as I } from \"../webgl-engine/lib/VertexArrayObject.js\";\nimport { terrainVertexAttributeLocations as G } from \"../webgl-engine/shaders/TerrainTechnique.js\";\nimport { BufferObject as M } from \"../../webgl/BufferObject.js\";\nclass O {\n  constructor() {\n    this.geometryInfo = new v(), this.intersectionData = null, this.geometryState = null, this._textureRef = new R(() => this.tile.surface.textureFadeDuration), this.overlay = new P(), this._geometryStateChangedSinceLastUpdate = !0, this._hasGeometry = !1, this._numVerticesPerSideChanged = !1, this._samplerDataChanged = !1, this._clippingAreaChanged = !1, this._wireframeChanged = !1, this._shadingChanged = !1, this._dirtyEdgeResolutions = 15, this._dirtyEdges = 15, this._dirtyCorners = 15;\n  }\n  get tile() {\n    return this._tile;\n  }\n  init(e) {\n    this.clear(), this._tile = e;\n    const t = this.geometryInfo;\n    t.indices = null, t.vertexAttributes = null, p(t.boundingBox), t.indexCount = 0, t.numVerticesPerSide = 0, this.intersectionData = null, this.geometryState = new x(), this.localOrigin = null, this.overlay.clear();\n  }\n  clear() {\n    this.releaseGeometry(), this.releaseTexture(), this._textureRef.clear(), this._tile = null, this.intersectionData = null, this.geometryState = null;\n  }\n  updateGeometryIfNeeded(e) {\n    if ((!this._vao || this._geometryStateChangedSinceLastUpdate || this._wireframeChanged || this._shadingChanged || this._clippingAreaChanged || this._samplerDataChanged || this._numVerticesPerSideChanged || this._dirtyCorners || this._dirtyEdgeResolutions || this._dirtyEdges) && (this._updateGeometry(e), this._geometryStateChangedSinceLastUpdate = !1), $ && this.tile.intersectsClippingArea) for (let t = 0; t < 4; ++t) E(this.geometryInfo.outerEdges[t].count === this.geometryState.neighborData.edgeResolutions[t] + 1);\n  }\n  _calculateEdgeResolution(e, t) {\n    const s = this.tile,\n      a = this.geometryState.numVerticesPerSide - 1;\n    if (!s.surface.isGlobal) {\n      const t = s.surface.extent;\n      if (r(t) && (0 === e && s.extent[3] > t[3] || 1 === e && s.extent[2] > t[2] || 2 === e && s.extent[1] < t[1] || 3 === e && s.extent[0] < t[0])) return a;\n    }\n    const n = s.level,\n      o = b[e];\n    if (!t) return E(i(s.surface?.rootTiles) || s.surface.updatingRootTiles || !s.shouldHaveNeighbor(o)), a;\n    if (t.isLoaded) {\n      const r = t,\n        i = r.renderData.geometryState,\n        s = n - r.level;\n      if (E(s >= 0), 0 === s) {\n        const e = i.numVerticesPerSide - 1;\n        return Math.max(e, a);\n      }\n      const o = 2 ** s,\n        l = i.neighborData.edgeResolutions[(e + 2) % 4] / o;\n      return Math.max(1, l);\n    }\n    E(!t.isLeaf);\n    let l = a;\n    return t.forAllSubtreeOnSide(T(o), e => e === s || (e.isLoaded ? (l = Math.max(l, 2 ** (e.level - n)), !0) : (E(!e.isLeaf), !1))), l;\n  }\n  updateNeighborData() {\n    const e = this.tile;\n    if (!e.intersectsClippingArea) return;\n    const r = e.renderData.geometryState.neighborData,\n      i = t => (t.isLoaded || t.level === e.level) && t?.intersectsClippingArea,\n      s = r.edgePeerNeighbors,\n      a = r.edgePeerNeighborSamplerVersions;\n    for (let o = 0; o < 4; ++o) {\n      const n = e.findNeighborTile(b[o], i),\n        l = z(e, n),\n        h = l?.renderData?.geometryState.samplerDataVersion ?? -1,\n        d = s[o],\n        g = l !== z(e, d),\n        c = a[o] !== h;\n      s[o] = n, (g || c) && (a[o] = h, this._markEdgeDirty(o));\n      const u = r.edgeResolutions[o],\n        m = this._calculateEdgeResolution(o, n);\n      E(t(m)), E(m >= 1), r.edgeResolutions[o] = m, u !== m && this._markEdgeResolutionDirty(o);\n    }\n    const n = r.cornerPeerNeighbors;\n    for (let t = 0; t < 4; ++t) {\n      const a = e.findNeighborTile(j[t], i);\n      n[t] = a;\n      const o = z(e, s[t]),\n        l = z(e, s[(t + 1) % 4]),\n        h = z(e, a);\n      q[t] = h, q[(t + 1) % 4] = l, q[(t + 2) % 4] = e, q[(t + 3) % 4] = o, E(q.some(t => t?.isLoaded || t === e));\n      const d = q.reduce((e, t) => Math.min(e, t?.level ?? 1 / 0), 1 / 0);\n      q.forEach((e, t) => {\n        e && e?.level > d && (q[t] = null);\n      }), E(q.some(t => t?.isLoaded || t === e));\n      const g = r.cornerNeighborData[t].cornerTiles,\n        c = r.cornerNeighborData[t].cornerTileSamplerVersions;\n      for (let e = 0; e < 4; ++e) {\n        const r = q[e],\n          i = r?.renderData.geometryState.samplerDataVersion ?? -1,\n          s = g[e] !== r,\n          a = !s && c[e] !== i;\n        (s || a) && (g[e] = r, c[e] = i, this._markCornerDirty(t));\n      }\n      E(g.some(t => t?.isLoaded || t === e));\n    }\n    $ && E(this.geometryState.neighborData.edgeResolutions.every(e => e > 0));\n    for (let t = 0; t < 4; ++t) q[t] = null;\n  }\n  _updateGeometry(e) {\n    if (!this.tile.intersectsClippingArea) return;\n    $ && E(!this.tile.intersectsClippingArea || this.geometryState.neighborData.edgeResolutions.every(e => e > 0)), this.intersectionData = null;\n    const t = this.tile,\n      r = this._vao,\n      i = this.geometryInfo.vertexAttributes,\n      s = !r || !i || this._wireframeChanged || this._shadingChanged || this._numVerticesPerSideChanged || this._samplerDataChanged || this._clippingAreaChanged || this._dirtyEdgeResolutions,\n      a = !s && (0 !== this._dirtyEdges || 0 !== this._dirtyEdgeResolutions),\n      n = !a && 0 !== this._dirtyCorners;\n    s ? (this.releaseGeometry(), this._createGeometry(e)) : a || n ? t.updateEdgeElevations() : n ? t.updateCornerElevations() : console.warn(\"Update for no reason?\"), this._numVerticesPerSideChanged = !1, this._samplerDataChanged = !1, this._dirtyEdgeResolutions = 0, this._dirtyEdges = 0, this._dirtyCorners = 0, this._clippingAreaChanged = !1, this._wireframeChanged = !1, this._shadingChanged = !1;\n  }\n  get hasGeometry() {\n    return this._hasGeometry;\n  }\n  releaseGeometry() {\n    return this._hasGeometry = !1, this.intersectionData = null, !!this._vao && (this._vao.dispose(), this._vao = null, S(this.geometryInfo), !0);\n  }\n  ensureTexture(e, t) {\n    return r(this._texture) && this._texture.descriptor.width !== e && this.releaseTexture(), i(this._texture) && (this._texture = t(), this.tile.setMemoryDirty()), this._texture;\n  }\n  releaseTexture() {\n    r(this._texture) && (this._texture.release(), this._texture = null, this.tile.setMemoryDirty());\n  }\n  _markCornerDirty(e) {\n    const t = 1 << e;\n    this._dirtyCorners |= t;\n  }\n  _markEdgeDirty(e) {\n    const t = 1 << e;\n    this._dirtyEdges |= t;\n  }\n  _markEdgeResolutionDirty(e) {\n    const t = 1 << e;\n    this._dirtyEdgeResolutions |= t, this._dirtyEdges |= t;\n  }\n  _markAllEdgesAndCornersDirty() {\n    this._dirtyCorners = 15, this._dirtyEdges = 15, this._dirtyEdgeResolutions = 15;\n  }\n  updateGeometryState() {\n    const t = this._getElevationInfo(),\n      r = this.tile,\n      i = t.samplerData ? r.getElevationVerticesPerSide(t.maxTileLevel) : r.getDefaultVerticesPerSide(),\n      s = Math.max(i, 5);\n    let a = r.clippingArea;\n    r.intersectsClippingArea && !r.isWithinClippingArea || (a = null);\n    const n = this.geometryState;\n    let o = !1;\n    n.numVerticesPerSide !== s && (this._numVerticesPerSideChanged = !0, n.numVerticesPerSide = s, n.samplerDataVersion++, o = !0), t.changed && (this._samplerDataChanged = !0, n.samplerData = t.samplerData, n.samplerDataVersion++, o = !0), e(n.clippingArea, a) || (this._clippingAreaChanged = !0, n.clippingArea = a, o = !0);\n    const l = r.surface,\n      h = l.wireframe;\n    n.wireframe !== h && (this._wireframeChanged = !0, n.wireframe = h, o = !0);\n    const d = l.shading;\n    return n.shading !== d && (this._shadingChanged = d, n.shading = d, o = d), this._geometryStateChangedSinceLastUpdate || (this._geometryStateChangedSinceLastUpdate = o), o && this._markAllEdgesAndCornersDirty(), this._hasGeometry = !0, this._geometryStateChangedSinceLastUpdate;\n  }\n  _createGeometry(e) {\n    this.tile.createGeometry();\n    const t = this.geometryInfo.vertexAttributes,\n      r = this.geometryInfo.indices,\n      i = e.gl;\n    this._vao = new I(e, G, {\n      geometry: _(t.layout)\n    }, {\n      geometry: M.createVertex(e, i.STATIC_DRAW, t.buffer)\n    }, M.createIndex(e, i.STATIC_DRAW, r)), this._hasGeometry = !0;\n  }\n  get vao() {\n    return this._vao;\n  }\n  setTextureReference(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : w.Immediate;\n    r(e) && e.texture !== this._texture && this.releaseTexture(), this._textureRef.push(e, t);\n  }\n  get textureReference() {\n    return this._textureRef.current;\n  }\n  get nextTextureReference() {\n    return this._textureRef.next;\n  }\n  get textureFadeFactor() {\n    return this._textureRef.fadeFactor;\n  }\n  get textureIsFading() {\n    return this._textureRef.isFading;\n  }\n  _getElevationInfo() {\n    const e = this.geometryState.samplerData,\n      t = this.tile.layerInfo[D.ELEVATION],\n      i = t.length,\n      s = new Array(i);\n    let a = 0,\n      n = 0,\n      o = !1;\n    for (let d = 0; d < i; d++) {\n      const i = t[d];\n      if (r(i.upsampleInfo)) {\n        const t = i.upsampleInfo.tile,\n          r = t.layerInfo[D.ELEVATION][d].data,\n          l = r && r.samplerData;\n        e && e[a] === l || (o = !0), s[a++] = l, n = Math.max(n, t.lij[0]);\n      } else if (i.data) {\n        const t = this.tile.surface.layerViewByIndex(d, D.ELEVATION);\n        if (N(this.tile, t.layer, !1)) {\n          const t = i.data;\n          e && e[a] === t.samplerData || (o = !0), s[a++] = t.samplerData, n = this.tile.level;\n        }\n      }\n    }\n    r(e) && e.length !== a && (o = !0);\n    const l = a > 0,\n      h = l ? s : null;\n    return l && (s.length = a), {\n      changed: o,\n      samplerData: h,\n      maxTileLevel: n\n    };\n  }\n  get estimatedGeometryMemoryUsage() {\n    const e = s(this.intersectionData, 0, e => e.estimatedMemoryUsage);\n    return (this.geometryInfo.indices?.byteLength ?? 0) + (this.geometryInfo.vertexAttributes?.byteLength ?? 0) + e;\n  }\n  get textureDescriptor() {\n    return r(this._texture) ? this._texture.descriptor : null;\n  }\n  get test() {\n    return {\n      hasTexture: null != this._texture\n    };\n  }\n  checkGeometryWaterproofness() {\n    if (!$) return;\n    const e = this.tile;\n    if (E(e?.isLoaded), !e.isLoaded || !e.intersectsClippingArea) return;\n    const s = e.renderData;\n    if (0 === e.level) return;\n    const p = e.surface.extent;\n    if (r(p) && !e.intersectsExtent(p)) return;\n    const _ = b.map((t, i) => !!r(p) && (i < 2 ? -1 : 1) * (e.extent[3 - i] - p[3 - i]) < 0),\n      x = e.level;\n    E(0 === this._dirtyCorners), E(0 === this._dirtyEdges), E(0 === this._dirtyEdgeResolutions), E(!this._numVerticesPerSideChanged), E(!this._samplerDataChanged), E(!this._clippingAreaChanged), E(!this._wireframeChanged);\n    const D = j.map(t => e.findNeighborCornerTileExact(t, t => !t.intersectsClippingArea || t.isLoaded || t.level === e.level) ?? null).map(e => e?.intersectsClippingArea ? e : null),\n      v = this.geometryState.neighborData;\n    for (let t = 0; t < 4; ++t) {\n      const r = v.cornerPeerNeighbors[t],\n        i = D[t];\n      E(i === r, `Tile[${e.lij}].corner[${t}] out of date: cur=[${r?.lij}] exp=[${i?.lij}]`);\n    }\n    b.forEach((p, D) => {\n      if (_[D]) return;\n      const v = e.findNeighborTile(p, e => (e.level === x || e?.isLoaded) && e?.intersectsClippingArea);\n      if (!v) {\n        const t = !e.surface.updatingRootTiles && r(e.surface.rootTiles) && e.surface.rootTiles.length > 0 && e.shouldHaveNeighbor(p);\n        return void E(!t);\n      }\n      E(v.isLoaded || v.level === e.level), E(v === this.geometryState.neighborData.edgePeerNeighbors[D]);\n      const S = x - v.level;\n      if (!v.isLoaded) return E(!v.isLeaf), void E(0 === S);\n      const $ = v.renderData;\n      E(L(e, v, p)), E(S >= 0);\n      const b = 2 ** S;\n      if (S < 0) return void E(!1);\n      const T = s.geometryInfo,\n        j = T.outerEdges[D],\n        R = T.numVerticesPerSide - 1,\n        w = $.geometryInfo;\n      if (!w) return void E(!1);\n      {\n        const e = this.geometryState.neighborData.edgePeerNeighbors[D];\n        if (e?.isLoaded) {\n          const t = e.renderData;\n          E(e == e), E(s.geometryState.neighborData.edgePeerNeighborSamplerVersions[D] === t.geometryState.samplerDataVersion), E(this.geometryState.neighborData.edgePeerNeighborSamplerVersions[D] === t.geometryState.samplerDataVersion);\n        }\n      }\n      const P = (D + 2) % 4,\n        N = w.outerEdges[P],\n        I = j.count - 1,\n        G = N.count - 1;\n      E(I * b === G, `Tile[${e.lij}]:e${D},res=${I} edgeRes mismatch with Neighbor[${v.lij}]:e${P},res=${G} (expected:${I * b})`);\n      const M = e.extent,\n        O = p === C.NORTH || p === C.SOUTH,\n        q = N.count - 1,\n        z = q / 2 ** S,\n        J = j.count - 1;\n      if (z < 1) return void E(1 === J);\n      E(z === J), E(t(z));\n      const K = w.numVerticesPerSide - 1;\n      E(S > 0 || z === Math.max(K, R));\n      const Q = e.getNeighborEdgeStartVertexIndex(D, v);\n      E(0 <= Q && Q < b);\n      const Y = Q * z;\n      E(0 <= Y && Y <= q - z);\n      let Z = 0,\n        ee = Y;\n      j.getVertexPos(U, 0), j.getVertexPos(k, j.count - 1);\n      const te = a(U, k),\n        re = Math.max(W, 1e-4 * te);\n      for (let t = 0; t <= z; ++t) {\n        j.getVertexPos(U, Z), N.getVertexPos(k, ee);\n        const a = t / z,\n          _ = O ? M[0] + a * (M[2] - M[0]) : p === C.WEST ? M[0] : M[2],\n          x = O ? p === C.SOUTH ? M[1] : M[3] : M[1] + a * (M[3] - M[1]),\n          S = e.surface.extent;\n        if (i(S) || f(S, _, x)) {\n          const t = n(U, k),\n            i = o(U) - y.radius,\n            a = o(k) - y.radius,\n            p = t < re;\n          if (!p) {\n            console.warn(`Tile edge vertex position mismatch: between [${e.lij}].edge${D}[${Z}/${j.count}] and [${v.lij}].edge${P}[${ee}/${N.count}]`), r(S) && console.warn(\"  surface extent= \", S, \" x,y=\", _, \",\", x);\n            const n = u();\n            l(n, s.localOrigin, $.localOrigin), o(n) > 0 && console.warn(`   localOrigins: ${s.localOrigin} vs ${$.localOrigin} d=${o(n)} [${n}]`);\n            (() => {\n              const t = m(U),\n                r = m(k);\n              e.updateEdgeElevations(), v.updateEdgeElevations(), j.getVertexPos(U, Z), N.getVertexPos(k, ee);\n              const i = u();\n              g(i, U, t), o(i) > 0 && console.warn(`  XXX Tile[${e.lij}] edge out of date: ${t} vs ${U} d=${o(i)} [${i}]`), g(i, k, r), o(i) > 0 && console.warn(`  XXX Neighbor[${v.lij}] edge out of date: ${r} vs ${k} d=${o(i)} [${i}]`);\n            })(), E(p, `Mismatch in tile [${e.lij}].edge[${D}][${Z}/${j.count}] vs neighbor [${v.lij}].edge[${P}][${ee}/${N.count}] ${A(U)} vs ${A(k)}  dist=${t} h(t|n|d)=${i}|${a}|${a - i}`);\n          }\n          if (e.surface.shading) {\n            j.getNormal(F, Z), N.getNormal(B, ee), h(X, F), h(H, B);\n            const t = d(X, H),\n              r = 1 - t < .01 || !1 || e === v;\n            if (!r) {\n              const i = u();\n              g(i, F, B);\n              const s = () => `Mismatch in tile edge normal ${V(e.lij)} (${Z}/${j.count - 1}) edge ${D} vs neighbor ${V(v.lij)}  (${ee}/${N.count - 1}) nedge ${P} :${A(F)} vs ${A(B)}  dot = ${t} : ${A(i)}`;\n              console.warn(\"Mismatch in tile edge normal: \", s());\n              {\n                e.updateEdgeElevations(), v.updateEdgeElevations();\n                const t = u(),\n                  r = u();\n                j.getNormal(t, Z), N.getNormal(r, ee), c(F, t) || console.warn(\"Missing update in tile normal: \", A(F), \" => \", A(t)), c(B, r) || console.warn(\"Missing update in neighbor normal: \", A(B), \" => \", A(r));\n              }\n              E(r, s());\n            }\n          }\n        }\n        Z += 1, ee += 1;\n      }\n    });\n  }\n}\nconst U = u(),\n  k = u(),\n  F = u(),\n  B = u(),\n  X = u(),\n  H = u(),\n  W = 1,\n  q = [null, null, null, null];\nfunction z(e, t) {\n  return t?.isLoaded || t === e ? t : null;\n}\nexport { w as ActivationTime, O as PatchRenderData, z as neighborTileIfLoadedOrSelf };","map":{"version":3,"names":["equals","e","isPowerOfTwo","t","isSome","r","isNone","i","mapOr","s","a","j","n","u","o","b","l","h","d","w","g","F","c","m","empty","p","containsXY","f","earth","y","glLayout","_","GeometryState","x","NeighborIndex","C","LayerClass","D","PatchGeometry","v","releaseGeometry","S","ENABLE_TERRAIN_INTERNAL_CHECKS","$","internalAssert","E","neighborEdgeIndices","oppositeEdge","T","neighborCornerIndices","v32s","A","lij2s","V","TextureFader","R","ActivationTime","isEdgeNeighbor","L","P","fallsWithinLayer","N","VertexArrayObject","I","terrainVertexAttributeLocations","G","BufferObject","M","O","constructor","geometryInfo","intersectionData","geometryState","_textureRef","tile","surface","textureFadeDuration","overlay","_geometryStateChangedSinceLastUpdate","_hasGeometry","_numVerticesPerSideChanged","_samplerDataChanged","_clippingAreaChanged","_wireframeChanged","_shadingChanged","_dirtyEdgeResolutions","_dirtyEdges","_dirtyCorners","_tile","init","clear","indices","vertexAttributes","boundingBox","indexCount","numVerticesPerSide","localOrigin","releaseTexture","updateGeometryIfNeeded","_vao","_updateGeometry","intersectsClippingArea","outerEdges","count","neighborData","edgeResolutions","_calculateEdgeResolution","isGlobal","extent","level","rootTiles","updatingRootTiles","shouldHaveNeighbor","isLoaded","renderData","Math","max","isLeaf","forAllSubtreeOnSide","updateNeighborData","edgePeerNeighbors","edgePeerNeighborSamplerVersions","findNeighborTile","z","samplerDataVersion","_markEdgeDirty","_markEdgeResolutionDirty","cornerPeerNeighbors","q","some","reduce","min","forEach","cornerNeighborData","cornerTiles","cornerTileSamplerVersions","_markCornerDirty","every","_createGeometry","updateEdgeElevations","updateCornerElevations","console","warn","hasGeometry","dispose","ensureTexture","_texture","descriptor","width","setMemoryDirty","release","_markAllEdgesAndCornersDirty","updateGeometryState","_getElevationInfo","samplerData","getElevationVerticesPerSide","maxTileLevel","getDefaultVerticesPerSide","clippingArea","isWithinClippingArea","changed","wireframe","shading","createGeometry","gl","geometry","layout","createVertex","STATIC_DRAW","buffer","createIndex","vao","setTextureReference","arguments","length","undefined","Immediate","texture","push","textureReference","current","nextTextureReference","next","textureFadeFactor","fadeFactor","textureIsFading","isFading","layerInfo","ELEVATION","Array","upsampleInfo","data","lij","layerViewByIndex","layer","estimatedGeometryMemoryUsage","estimatedMemoryUsage","byteLength","textureDescriptor","test","hasTexture","checkGeometryWaterproofness","intersectsExtent","map","findNeighborCornerTileExact","NORTH","SOUTH","J","K","Q","getNeighborEdgeStartVertexIndex","Y","Z","ee","getVertexPos","U","k","te","re","W","WEST","radius","getNormal","B","X","H","PatchRenderData","neighborTileIfLoadedOrSelf"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/terrain/PatchRenderData.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{equals as e}from\"../../../core/arrayUtils.js\";import{isPowerOfTwo as t}from\"../../../core/mathUtils.js\";import{isSome as r,isNone as i,mapOr as s}from\"../../../core/maybe.js\";import{i as a,j as n,u as o,b as l,n as h,e as d,w as g,F as c}from\"../../../chunks/vec3.js\";import{c as u,a as m}from\"../../../chunks/vec3f64.js\";import{empty as p}from\"../../../geometry/support/aaBoundingBox.js\";import{containsXY as f}from\"../../../geometry/support/aaBoundingRect.js\";import{earth as y}from\"../../../geometry/support/Ellipsoid.js\";import{glLayout as _}from\"../support/buffer/glUtil.js\";import{GeometryState as x}from\"./GeometryState.js\";import{NeighborIndex as C}from\"./interfaces.js\";import{LayerClass as D}from\"./LayerClass.js\";import{PatchGeometry as v,releaseGeometry as S}from\"./PatchGeometry.js\";import{ENABLE_TERRAIN_INTERNAL_CHECKS as $,internalAssert as E,neighborEdgeIndices as b,oppositeEdge as T,neighborCornerIndices as j,v32s as A,lij2s as V}from\"./terrainUtils.js\";import{TextureFader as R,ActivationTime as w}from\"./TextureFader.js\";import{isEdgeNeighbor as L}from\"./Tile.js\";import P from\"./TileOverlayData.js\";import{fallsWithinLayer as N}from\"./tileUtils.js\";import{VertexArrayObject as I}from\"../webgl-engine/lib/VertexArrayObject.js\";import{terrainVertexAttributeLocations as G}from\"../webgl-engine/shaders/TerrainTechnique.js\";import{BufferObject as M}from\"../../webgl/BufferObject.js\";class O{constructor(){this.geometryInfo=new v,this.intersectionData=null,this.geometryState=null,this._textureRef=new R((()=>this.tile.surface.textureFadeDuration)),this.overlay=new P,this._geometryStateChangedSinceLastUpdate=!0,this._hasGeometry=!1,this._numVerticesPerSideChanged=!1,this._samplerDataChanged=!1,this._clippingAreaChanged=!1,this._wireframeChanged=!1,this._shadingChanged=!1,this._dirtyEdgeResolutions=15,this._dirtyEdges=15,this._dirtyCorners=15}get tile(){return this._tile}init(e){this.clear(),this._tile=e;const t=this.geometryInfo;t.indices=null,t.vertexAttributes=null,p(t.boundingBox),t.indexCount=0,t.numVerticesPerSide=0,this.intersectionData=null,this.geometryState=new x,this.localOrigin=null,this.overlay.clear()}clear(){this.releaseGeometry(),this.releaseTexture(),this._textureRef.clear(),this._tile=null,this.intersectionData=null,this.geometryState=null}updateGeometryIfNeeded(e){if((!this._vao||this._geometryStateChangedSinceLastUpdate||this._wireframeChanged||this._shadingChanged||this._clippingAreaChanged||this._samplerDataChanged||this._numVerticesPerSideChanged||this._dirtyCorners||this._dirtyEdgeResolutions||this._dirtyEdges)&&(this._updateGeometry(e),this._geometryStateChangedSinceLastUpdate=!1),$&&this.tile.intersectsClippingArea)for(let t=0;t<4;++t)E(this.geometryInfo.outerEdges[t].count===this.geometryState.neighborData.edgeResolutions[t]+1)}_calculateEdgeResolution(e,t){const s=this.tile,a=this.geometryState.numVerticesPerSide-1;if(!s.surface.isGlobal){const t=s.surface.extent;if(r(t)&&(0===e&&s.extent[3]>t[3]||1===e&&s.extent[2]>t[2]||2===e&&s.extent[1]<t[1]||3===e&&s.extent[0]<t[0]))return a}const n=s.level,o=b[e];if(!t)return E(i(s.surface?.rootTiles)||s.surface.updatingRootTiles||!s.shouldHaveNeighbor(o)),a;if(t.isLoaded){const r=t,i=r.renderData.geometryState,s=n-r.level;if(E(s>=0),0===s){const e=i.numVerticesPerSide-1;return Math.max(e,a)}const o=2**s,l=i.neighborData.edgeResolutions[(e+2)%4]/o;return Math.max(1,l)}E(!t.isLeaf);let l=a;return t.forAllSubtreeOnSide(T(o),(e=>e===s||(e.isLoaded?(l=Math.max(l,2**(e.level-n)),!0):(E(!e.isLeaf),!1)))),l}updateNeighborData(){const e=this.tile;if(!e.intersectsClippingArea)return;const r=e.renderData.geometryState.neighborData,i=t=>(t.isLoaded||t.level===e.level)&&t?.intersectsClippingArea,s=r.edgePeerNeighbors,a=r.edgePeerNeighborSamplerVersions;for(let o=0;o<4;++o){const n=e.findNeighborTile(b[o],i),l=z(e,n),h=l?.renderData?.geometryState.samplerDataVersion??-1,d=s[o],g=l!==z(e,d),c=a[o]!==h;s[o]=n,(g||c)&&(a[o]=h,this._markEdgeDirty(o));const u=r.edgeResolutions[o],m=this._calculateEdgeResolution(o,n);E(t(m)),E(m>=1),r.edgeResolutions[o]=m,u!==m&&this._markEdgeResolutionDirty(o)}const n=r.cornerPeerNeighbors;for(let t=0;t<4;++t){const a=e.findNeighborTile(j[t],i);n[t]=a;const o=z(e,s[t]),l=z(e,s[(t+1)%4]),h=z(e,a);q[t]=h,q[(t+1)%4]=l,q[(t+2)%4]=e,q[(t+3)%4]=o,E(q.some((t=>t?.isLoaded||t===e)));const d=q.reduce(((e,t)=>Math.min(e,t?.level??1/0)),1/0);q.forEach(((e,t)=>{e&&e?.level>d&&(q[t]=null)})),E(q.some((t=>t?.isLoaded||t===e)));const g=r.cornerNeighborData[t].cornerTiles,c=r.cornerNeighborData[t].cornerTileSamplerVersions;for(let e=0;e<4;++e){const r=q[e],i=r?.renderData.geometryState.samplerDataVersion??-1,s=g[e]!==r,a=!s&&c[e]!==i;(s||a)&&(g[e]=r,c[e]=i,this._markCornerDirty(t))}E(g.some((t=>t?.isLoaded||t===e)))}$&&E(this.geometryState.neighborData.edgeResolutions.every((e=>e>0)));for(let t=0;t<4;++t)q[t]=null}_updateGeometry(e){if(!this.tile.intersectsClippingArea)return;$&&E(!this.tile.intersectsClippingArea||this.geometryState.neighborData.edgeResolutions.every((e=>e>0))),this.intersectionData=null;const t=this.tile,r=this._vao,i=this.geometryInfo.vertexAttributes,s=!r||!i||this._wireframeChanged||this._shadingChanged||this._numVerticesPerSideChanged||this._samplerDataChanged||this._clippingAreaChanged||this._dirtyEdgeResolutions,a=!s&&(0!==this._dirtyEdges||0!==this._dirtyEdgeResolutions),n=!a&&0!==this._dirtyCorners;s?(this.releaseGeometry(),this._createGeometry(e)):a||n?t.updateEdgeElevations():n?t.updateCornerElevations():console.warn(\"Update for no reason?\"),this._numVerticesPerSideChanged=!1,this._samplerDataChanged=!1,this._dirtyEdgeResolutions=0,this._dirtyEdges=0,this._dirtyCorners=0,this._clippingAreaChanged=!1,this._wireframeChanged=!1,this._shadingChanged=!1}get hasGeometry(){return this._hasGeometry}releaseGeometry(){return this._hasGeometry=!1,this.intersectionData=null,!!this._vao&&(this._vao.dispose(),this._vao=null,S(this.geometryInfo),!0)}ensureTexture(e,t){return r(this._texture)&&this._texture.descriptor.width!==e&&this.releaseTexture(),i(this._texture)&&(this._texture=t(),this.tile.setMemoryDirty()),this._texture}releaseTexture(){r(this._texture)&&(this._texture.release(),this._texture=null,this.tile.setMemoryDirty())}_markCornerDirty(e){const t=1<<e;this._dirtyCorners|=t}_markEdgeDirty(e){const t=1<<e;this._dirtyEdges|=t}_markEdgeResolutionDirty(e){const t=1<<e;this._dirtyEdgeResolutions|=t,this._dirtyEdges|=t}_markAllEdgesAndCornersDirty(){this._dirtyCorners=15,this._dirtyEdges=15,this._dirtyEdgeResolutions=15}updateGeometryState(){const t=this._getElevationInfo(),r=this.tile,i=t.samplerData?r.getElevationVerticesPerSide(t.maxTileLevel):r.getDefaultVerticesPerSide(),s=Math.max(i,5);let a=r.clippingArea;r.intersectsClippingArea&&!r.isWithinClippingArea||(a=null);const n=this.geometryState;let o=!1;n.numVerticesPerSide!==s&&(this._numVerticesPerSideChanged=!0,n.numVerticesPerSide=s,n.samplerDataVersion++,o=!0),t.changed&&(this._samplerDataChanged=!0,n.samplerData=t.samplerData,n.samplerDataVersion++,o=!0),e(n.clippingArea,a)||(this._clippingAreaChanged=!0,n.clippingArea=a,o=!0);const l=r.surface,h=l.wireframe;n.wireframe!==h&&(this._wireframeChanged=!0,n.wireframe=h,o=!0);const d=l.shading;return n.shading!==d&&(this._shadingChanged=d,n.shading=d,o=d),this._geometryStateChangedSinceLastUpdate||(this._geometryStateChangedSinceLastUpdate=o),o&&this._markAllEdgesAndCornersDirty(),this._hasGeometry=!0,this._geometryStateChangedSinceLastUpdate}_createGeometry(e){this.tile.createGeometry();const t=this.geometryInfo.vertexAttributes,r=this.geometryInfo.indices,i=e.gl;this._vao=new I(e,G,{geometry:_(t.layout)},{geometry:M.createVertex(e,i.STATIC_DRAW,t.buffer)},M.createIndex(e,i.STATIC_DRAW,r)),this._hasGeometry=!0}get vao(){return this._vao}setTextureReference(e,t=w.Immediate){r(e)&&e.texture!==this._texture&&this.releaseTexture(),this._textureRef.push(e,t)}get textureReference(){return this._textureRef.current}get nextTextureReference(){return this._textureRef.next}get textureFadeFactor(){return this._textureRef.fadeFactor}get textureIsFading(){return this._textureRef.isFading}_getElevationInfo(){const e=this.geometryState.samplerData,t=this.tile.layerInfo[D.ELEVATION],i=t.length,s=new Array(i);let a=0,n=0,o=!1;for(let d=0;d<i;d++){const i=t[d];if(r(i.upsampleInfo)){const t=i.upsampleInfo.tile,r=t.layerInfo[D.ELEVATION][d].data,l=r&&r.samplerData;e&&e[a]===l||(o=!0),s[a++]=l,n=Math.max(n,t.lij[0])}else if(i.data){const t=this.tile.surface.layerViewByIndex(d,D.ELEVATION);if(N(this.tile,t.layer,!1)){const t=i.data;e&&e[a]===t.samplerData||(o=!0),s[a++]=t.samplerData,n=this.tile.level}}}r(e)&&e.length!==a&&(o=!0);const l=a>0,h=l?s:null;return l&&(s.length=a),{changed:o,samplerData:h,maxTileLevel:n}}get estimatedGeometryMemoryUsage(){const e=s(this.intersectionData,0,(e=>e.estimatedMemoryUsage));return(this.geometryInfo.indices?.byteLength??0)+(this.geometryInfo.vertexAttributes?.byteLength??0)+e}get textureDescriptor(){return r(this._texture)?this._texture.descriptor:null}get test(){return{hasTexture:null!=this._texture}}checkGeometryWaterproofness(){if(!$)return;const e=this.tile;if(E(e?.isLoaded),!e.isLoaded||!e.intersectsClippingArea)return;const s=e.renderData;if(0===e.level)return;const p=e.surface.extent;if(r(p)&&!e.intersectsExtent(p))return;const _=b.map(((t,i)=>!!r(p)&&(i<2?-1:1)*(e.extent[3-i]-p[3-i])<0)),x=e.level;E(0===this._dirtyCorners),E(0===this._dirtyEdges),E(0===this._dirtyEdgeResolutions),E(!this._numVerticesPerSideChanged),E(!this._samplerDataChanged),E(!this._clippingAreaChanged),E(!this._wireframeChanged);const D=j.map((t=>e.findNeighborCornerTileExact(t,(t=>!t.intersectsClippingArea||t.isLoaded||t.level===e.level))??null)).map((e=>e?.intersectsClippingArea?e:null)),v=this.geometryState.neighborData;for(let t=0;t<4;++t){const r=v.cornerPeerNeighbors[t],i=D[t];E(i===r,`Tile[${e.lij}].corner[${t}] out of date: cur=[${r?.lij}] exp=[${i?.lij}]`)}b.forEach(((p,D)=>{if(_[D])return;const v=e.findNeighborTile(p,(e=>(e.level===x||e?.isLoaded)&&e?.intersectsClippingArea));if(!v){const t=!e.surface.updatingRootTiles&&r(e.surface.rootTiles)&&e.surface.rootTiles.length>0&&e.shouldHaveNeighbor(p);return void E(!t)}E(v.isLoaded||v.level===e.level),E(v===this.geometryState.neighborData.edgePeerNeighbors[D]);const S=x-v.level;if(!v.isLoaded)return E(!v.isLeaf),void E(0===S);const $=v.renderData;E(L(e,v,p)),E(S>=0);const b=2**S;if(S<0)return void E(!1);const T=s.geometryInfo,j=T.outerEdges[D],R=T.numVerticesPerSide-1,w=$.geometryInfo;if(!w)return void E(!1);{const e=this.geometryState.neighborData.edgePeerNeighbors[D];if(e?.isLoaded){const t=e.renderData;E(e==e),E(s.geometryState.neighborData.edgePeerNeighborSamplerVersions[D]===t.geometryState.samplerDataVersion),E(this.geometryState.neighborData.edgePeerNeighborSamplerVersions[D]===t.geometryState.samplerDataVersion)}}const P=(D+2)%4,N=w.outerEdges[P],I=j.count-1,G=N.count-1;E(I*b===G,`Tile[${e.lij}]:e${D},res=${I} edgeRes mismatch with Neighbor[${v.lij}]:e${P},res=${G} (expected:${I*b})`);const M=e.extent,O=p===C.NORTH||p===C.SOUTH,q=N.count-1,z=q/2**S,J=j.count-1;if(z<1)return void E(1===J);E(z===J),E(t(z));const K=w.numVerticesPerSide-1;E(S>0||z===Math.max(K,R));const Q=e.getNeighborEdgeStartVertexIndex(D,v);E(0<=Q&&Q<b);const Y=Q*z;E(0<=Y&&Y<=q-z);let Z=0,ee=Y;j.getVertexPos(U,0),j.getVertexPos(k,j.count-1);const te=a(U,k),re=Math.max(W,1e-4*te);for(let t=0;t<=z;++t){j.getVertexPos(U,Z),N.getVertexPos(k,ee);const a=t/z,_=O?M[0]+a*(M[2]-M[0]):p===C.WEST?M[0]:M[2],x=O?p===C.SOUTH?M[1]:M[3]:M[1]+a*(M[3]-M[1]),S=e.surface.extent;if(i(S)||f(S,_,x)){const t=n(U,k),i=o(U)-y.radius,a=o(k)-y.radius,p=t<re;if(!p){console.warn(`Tile edge vertex position mismatch: between [${e.lij}].edge${D}[${Z}/${j.count}] and [${v.lij}].edge${P}[${ee}/${N.count}]`),r(S)&&console.warn(\"  surface extent= \",S,\" x,y=\",_,\",\",x);const n=u();l(n,s.localOrigin,$.localOrigin),o(n)>0&&console.warn(`   localOrigins: ${s.localOrigin} vs ${$.localOrigin} d=${o(n)} [${n}]`);(()=>{const t=m(U),r=m(k);e.updateEdgeElevations(),v.updateEdgeElevations(),j.getVertexPos(U,Z),N.getVertexPos(k,ee);const i=u();g(i,U,t),o(i)>0&&console.warn(`  XXX Tile[${e.lij}] edge out of date: ${t} vs ${U} d=${o(i)} [${i}]`),g(i,k,r),o(i)>0&&console.warn(`  XXX Neighbor[${v.lij}] edge out of date: ${r} vs ${k} d=${o(i)} [${i}]`)})(),E(p,`Mismatch in tile [${e.lij}].edge[${D}][${Z}/${j.count}] vs neighbor [${v.lij}].edge[${P}][${ee}/${N.count}] ${A(U)} vs ${A(k)}  dist=${t} h(t|n|d)=${i}|${a}|${a-i}`)}if(e.surface.shading){j.getNormal(F,Z),N.getNormal(B,ee),h(X,F),h(H,B);const t=d(X,H),r=1-t<.01||!1||e===v;if(!r){const i=u();g(i,F,B);const s=()=>`Mismatch in tile edge normal ${V(e.lij)} (${Z}/${j.count-1}) edge ${D} vs neighbor ${V(v.lij)}  (${ee}/${N.count-1}) nedge ${P} :${A(F)} vs ${A(B)}  dot = ${t} : ${A(i)}`;console.warn(\"Mismatch in tile edge normal: \",s());{e.updateEdgeElevations(),v.updateEdgeElevations();const t=u(),r=u();j.getNormal(t,Z),N.getNormal(r,ee),c(F,t)||console.warn(\"Missing update in tile normal: \",A(F),\" => \",A(t)),c(B,r)||console.warn(\"Missing update in neighbor normal: \",A(B),\" => \",A(r))}E(r,s())}}}Z+=1,ee+=1}}))}}const U=u(),k=u(),F=u(),B=u(),X=u(),H=u(),W=1,q=[null,null,null,null];function z(e,t){return t?.isLoaded||t===e?t:null}export{w as ActivationTime,O as PatchRenderData,z as neighborTileIfLoadedOrSelf};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}