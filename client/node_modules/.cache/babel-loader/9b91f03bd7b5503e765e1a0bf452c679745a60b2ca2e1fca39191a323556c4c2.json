{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\query-table-tabulator.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ReactTabulator } from 'react-tabulator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class QueryTableTabulator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = null;\n    this.columns = [{\n      title: \"Title\",\n      field: \"title\"\n    }, {\n      title: \"Created\",\n      field: \"created\"\n    }];\n    this.editableColumns = [{\n      title: \"Tags\",\n      field: \"tags\"\n    }];\n    this.rowClick = (e, row) => {\n      this.setState({\n        selectedTitle: row.getData().title\n      });\n    };\n    this.setData = () => {\n      this.setState(this.props.userItems);\n    };\n    this.clearData = () => {\n      this.setState([]);\n    };\n    this.state = {\n      selectedTitle: \"\"\n    };\n  }\n  render() {\n    console.log(\"query-table-tabulator\");\n    const options = {\n      height: 150,\n      movableRows: true,\n      movableColumns: true,\n      progressiveLoad: 'scroll',\n      progressiveLoadDelay: 200,\n      selectable: true,\n      rowClick: (e, row) => {\n        this.setState({\n          selectedTitle: row.getData().title\n        });\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactTabulator, {\n        onRef: r => this.ref = r,\n        columns: this.columns,\n        data: this.props.userItems,\n        events: {\n          rowClick: this.rowClick\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}\nQueryTableTabulator.defaultProps = {\n  userItems: [{\n    id: ''\n  }]\n};\nconst mapStateToProps = _ref => {\n  let {\n    query: {\n      userItems,\n      userTags\n    }\n  } = _ref;\n  return {\n    userItems,\n    userTags\n  };\n};\nexport default connect(mapStateToProps)(QueryTableTabulator);","map":{"version":3,"names":["React","connect","ReactTabulator","jsxDEV","_jsxDEV","QueryTableTabulator","Component","constructor","props","ref","columns","title","field","editableColumns","rowClick","e","row","setState","selectedTitle","getData","setData","userItems","clearData","state","render","console","log","options","height","movableRows","movableColumns","progressiveLoad","progressiveLoadDelay","selectable","children","onRef","r","data","events","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","id","mapStateToProps","_ref","query","userTags"],"sources":["C:/code-challenge-react/frontend/src/components/main/query-table-tabulator.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ColumnDefinition, ReactTabulator } from 'react-tabulator'\n\ninterface Item {\n  id: string,\n  title?: string,\n  created?: Date,\n  tags?: string[],\n}\n\ninterface Tags {\n  tag: string,\n  count: number,\n}\n\ninterface ItemProps {\n  userItems: Item[],\n  userTags?: Tags[],\n}\n\nexport class QueryTableTabulator extends React.Component <ItemProps, any> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      selectedTitle: \"\"\n    }\n  }\n  \n  ref = null\n  public static defaultProps = { userItems: [{id:'',}], }\n\n  columns: ColumnDefinition[] = [\n    { title: \"Title\", field: \"title\", },\n    { title: \"Created\", field: \"created\", },\n  ]\n  editableColumns: ColumnDefinition[] = [\n    { title: \"Tags\", field: \"tags\" }\n  ]\n\n  rowClick = (e:any, row:any) => { this.setState({ selectedTitle: row.getData().title }) }\n  setData = () => { this.setState( this.props.userItems )}\n  clearData = () => { this.setState( [] )}\n\n  render() { console.log(\"query-table-tabulator\")\n    const options = {\n      height: 150,\n      movableRows: true,\n      movableColumns: true,\n      progressiveLoad: 'scroll',\n      progressiveLoadDelay: 200,\n      selectable: true,\n      rowClick: (e:any, row:any) => { this.setState({ selectedTitle: row.getData().title }) }\n    }\n\n    return (\n      <div>\n        <ReactTabulator \n          onRef={(r) => (this.ref = r)}\n          columns={this.columns}\n          data={this.props.userItems} \n          events={{ rowClick: this.rowClick }}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems, userTags }}:any) => ({\n  userItems,\n  userTags\n})\n\nexport default connect(mapStateToProps, )(QueryTableTabulator)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAO,gCAAgC;AACvC,OAAO,2DAA2D,CAAC,CAAC;AACpE,SAA2BC,cAAc,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAmBlE,OAAO,MAAMC,mBAAmB,SAASL,KAAK,CAACM,SAAS,CAAkB;EACxEC,WAAWA,CAACC,KAAU,EAAE;IACtB,KAAK,CAACA,KAAK,CAAC;IAAA,KAMdC,GAAG,GAAG,IAAI;IAAA,KAGVC,OAAO,GAAuB,CAC5B;MAAEC,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAS,CAAC,EACnC;MAAED,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAW,CAAC,CACxC;IAAA,KACDC,eAAe,GAAuB,CACpC;MAAEF,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAC,CACjC;IAAA,KAEDE,QAAQ,GAAG,CAACC,CAAK,EAAEC,GAAO,KAAK;MAAE,IAAI,CAACC,QAAQ,CAAC;QAAEC,aAAa,EAAEF,GAAG,CAACG,OAAO,EAAE,CAACR;MAAM,CAAC,CAAC;IAAC,CAAC;IAAA,KACxFS,OAAO,GAAG,MAAM;MAAE,IAAI,CAACH,QAAQ,CAAE,IAAI,CAACT,KAAK,CAACa,SAAS,CAAE;IAAA,CAAC;IAAA,KACxDC,SAAS,GAAG,MAAM;MAAE,IAAI,CAACL,QAAQ,CAAE,EAAE,CAAE;IAAA,CAAC;IAlBtC,IAAI,CAACM,KAAK,GAAG;MACXL,aAAa,EAAE;IACjB,CAAC;EACH;EAiBAM,MAAMA,CAAA,EAAG;IAAEC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IAC7C,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,GAAG;MACXC,WAAW,EAAE,IAAI;MACjBC,cAAc,EAAE,IAAI;MACpBC,eAAe,EAAE,QAAQ;MACzBC,oBAAoB,EAAE,GAAG;MACzBC,UAAU,EAAE,IAAI;MAChBnB,QAAQ,EAAEA,CAACC,CAAK,EAAEC,GAAO,KAAK;QAAE,IAAI,CAACC,QAAQ,CAAC;UAAEC,aAAa,EAAEF,GAAG,CAACG,OAAO,EAAE,CAACR;QAAM,CAAC,CAAC;MAAC;IACxF,CAAC;IAED,oBACEP,OAAA;MAAA8B,QAAA,eACE9B,OAAA,CAACF,cAAc;QACbiC,KAAK,EAAGC,CAAC,IAAM,IAAI,CAAC3B,GAAG,GAAG2B,CAAG;QAC7B1B,OAAO,EAAE,IAAI,CAACA,OAAQ;QACtB2B,IAAI,EAAE,IAAI,CAAC7B,KAAK,CAACa,SAAU;QAC3BiB,MAAM,EAAE;UAAExB,QAAQ,EAAE,IAAI,CAACA;QAAS;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV;AACF;AA7CarC,mBAAmB,CAShBsC,YAAY,GAAG;EAAEtB,SAAS,EAAE,CAAC;IAACuB,EAAE,EAAC;EAAG,CAAC;AAAG,CAAC;AAsCzD,MAAMC,eAAe,GAAGC,IAAA;EAAA,IAAC;IAAEC,KAAK,EAAE;MAAE1B,SAAS;MAAE2B;IAAS;EAAK,CAAC,GAAAF,IAAA;EAAA,OAAM;IAClEzB,SAAS;IACT2B;EACF,CAAC;AAAA,CAAC;AAEF,eAAe/C,OAAO,CAAC4C,eAAe,CAAG,CAACxC,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}