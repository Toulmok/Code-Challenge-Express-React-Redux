{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { getId as t } from \"./CIMCursor.js\";\nimport { CurveHelper as s, PIXEL_TOLERANCE as e } from \"./CurveHelper.js\";\nconst i = 1e-7;\nclass n {\n  constructor() {\n    this._values = [], this.extPtGap = 0, this.ctrlPtGap = 0, this._length = 0, this._currentValue = 0;\n  }\n  isEmpty() {\n    return 0 === this._values.length;\n  }\n  size() {\n    return this._values.length;\n  }\n  init(t, s) {\n    let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;\n    if (this._setEmpty(), !t || 0 === t.length) return !1;\n    for (let n = 0; n < t.length; n++) {\n      let s = Math.abs(t[n]);\n      e && s < i && (s = i), this._values.push(s), this._length += s;\n    }\n    return s && 1 & t.length && (this._length *= 2), 0 !== this._length && (this.ctrlPtGap = this.extPtGap = 0, this._currentValue = -1, !0);\n  }\n  scale(t) {\n    const s = this._values ? this._values.length : 0;\n    for (let e = 0; e < s; ++e) this._values[e] *= t;\n    this._length *= t, this.extPtGap *= t, this.ctrlPtGap *= t;\n  }\n  addValue(t) {\n    this._length += t, this._values.push(t);\n  }\n  firstValue() {\n    return this._values[0];\n  }\n  lastValue() {\n    return this._values[this._values.length - 1];\n  }\n  nextValue() {\n    return this._currentValue++, this._currentValue === this._values.length && (this._currentValue = 0), this._values[this._currentValue];\n  }\n  reset() {\n    this._currentValue = -1;\n  }\n  length() {\n    return this._length;\n  }\n  _setEmpty() {\n    this.extPtGap = this.ctrlPtGap = this._length = 0, this._currentValue = -1, this._values.length = 0;\n  }\n}\nclass h {\n  constructor() {\n    this.pt = null, this.ca = 0, this.sa = 0;\n  }\n}\nvar r;\n!function (t) {\n  t[t.FAIL = 0] = \"FAIL\", t[t.END = 1] = \"END\", t[t.CONTINUE = 2] = \"CONTINUE\";\n}(r || (r = {}));\nclass a {\n  constructor() {\n    this.reset();\n  }\n  reset() {\n    this.segment = -1, this.segmentLength = 0, this.abscissa = 0, this.isPathEnd = !1, this.isPartEnd = !1;\n  }\n  isValid() {\n    return -1 !== this.segment;\n  }\n  copyTo(t) {\n    t.segment = this.segment, t.segmentLength = this.segmentLength, t.abscissa = this.abscissa, t.isPathEnd = this.isPathEnd, t.isPartEnd = this.isPartEnd;\n  }\n}\nclass g extends s {\n  constructor() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    super(t, s), this._tolerance = e, this._currentPosition = new a();\n  }\n  updateTolerance(t) {\n    this._tolerance = e * t;\n  }\n  init(t, s) {\n    let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;\n    return e ? (this._patternLength = s.length(), this._partExtPtGap = s.extPtGap, this._partCtrlPtGap = s.ctrlPtGap) : (this._patternLength = 0, this._partExtPtGap = 0, this._partCtrlPtGap = 0), this._currentPosition.reset(), this._partSegCount = 0, this._path = t, this._seg = -1, this._setPosAtNextPart();\n  }\n  curPositionIsValid() {\n    return this._currentPosition.isValid();\n  }\n  nextPosition(t) {\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : r.FAIL;\n    const e = new a();\n    return !!this._nextPosition(t, e, null, s) && (e.copyTo(this._currentPosition), !0);\n  }\n  curPointAndAngle(t) {\n    t.pt = this._getPoint(this._currentPosition);\n    const [s, e] = this._getAngle(this._currentPosition);\n    t.ca = s, t.sa = e;\n  }\n  nextPointAndAngle(t, s) {\n    let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : r.FAIL;\n    const i = new a();\n    if (!this._nextPosition(t, i, null, e)) return !1;\n    i.copyTo(this._currentPosition), s.pt = this._getPoint(i);\n    const [n, h] = this._getAngle(i);\n    return s.ca = n, s.sa = h, !0;\n  }\n  nextCurve(t) {\n    if (0 === t) return null;\n    const s = [],\n      e = new a();\n    return this._nextPosition(t, e, s, r.END) ? (e.copyTo(this._currentPosition), s) : null;\n  }\n  isPathEnd() {\n    return this._currentPosition.isPathEnd;\n  }\n  getPathEnd() {\n    if (-1 === this._currentPosition.segment) throw new Error(\"missing segment\");\n    return this._path[this._currentPosition.segment + 1];\n  }\n  _nextPosition(t, s, e, i) {\n    if (this._currentPosition.isPathEnd) return !1;\n    let n = this._currentPosition.abscissa;\n    for (this._currentPosition.segmentLength > 0 && (n /= this._currentPosition.segmentLength), this._currentPosition.copyTo(s); s.abscissa + t * this._partLengthRatio > s.segmentLength + this._tolerance;) {\n      if (e) {\n        if (0 === e.length) if (0 === n) {\n          const t = this._path[s.segment];\n          e.push([t[0], t[1]]);\n        } else e.push(this.getSegCoord2D(this._path, s.segment, n));\n        const t = this._path[s.segment + 1];\n        e.push([t[0], t[1]]);\n      }\n      if (n = 0, t -= (s.segmentLength - s.abscissa) / this._partLengthRatio, this._partSegCount) s.segment = this._nextSegment(), s.segmentLength = this.calculateSegLength(this._path, s.segment), s.abscissa = 0, this._partSegCount--;else {\n        if (!this._setPosAtNextPart()) return i !== r.FAIL && (s.segmentLength = this.calculateSegLength(this._path, s.segment), s.isPartEnd = !0, i === r.END ? (s.abscissa = s.segmentLength, s.isPathEnd = !0) : s.abscissa = s.segmentLength + t, !0);\n        this._currentPosition.copyTo(s);\n      }\n    }\n    if (s.abscissa += t * this._partLengthRatio, e) {\n      if (0 === e.length) if (0 === n) {\n        const t = this._path[s.segment];\n        e.push([t[0], t[1]]);\n      } else e.push(this.getSegCoord2D(this._path, s.segment, n));\n      const t = s.abscissa / s.segmentLength;\n      if (1 === t) {\n        const t = this._path[s.segment + 1];\n        e.push([t[0], t[1]]);\n      } else e.push(this.getSegCoord2D(this._path, s.segment, t));\n    }\n    return this._partSegCount || Math.abs(s.abscissa - s.segmentLength) < this._tolerance && (s.isPathEnd = this._partIsLast, s.isPartEnd = !0), !0;\n  }\n  _getPoint(t) {\n    if (-1 === t.segment) throw new Error(\"missing segment\");\n    const s = t.segmentLength <= 0 ? 0 : t.abscissa / t.segmentLength;\n    return this.getSegCoord2D(this._path, t.segment, s);\n  }\n  _getAngle(t) {\n    if (-1 === t.segment) throw new Error(\"missing segment\");\n    const s = t.segmentLength <= 0 ? 0 : t.abscissa / t.segmentLength;\n    return this.getSegAngleCS(this._path, t.segment, s);\n  }\n  _setPosAtNextPart() {\n    for (; this._partSegCount;) this._hasNextSegment() && this._nextSegment(), this._partSegCount--;\n    if (!this._hasNextSegment()) return !1;\n    for (this._partLength = 0, this._partIsLast = !0, this._partSegCount = 0; this._hasNextSegment();) if (this._partLength += this.calculateSegLength(this._path, this._nextSegment()), this._partSegCount++, 1 === t(this._path[this._getEndPointIndex()])) {\n      this._partIsLast = !this._hasNextSegment();\n      break;\n    }\n    let s = this._partSegCount;\n    for (; s;) this._previousSegment(), --s;\n    this._currentPosition.segment = this._nextSegment(), this._currentPosition.segmentLength = this.calculateSegLength(this._path, this._currentPosition.segment), this._currentPosition.abscissa = 0, this._currentPosition.isPathEnd = this._currentPosition.isPartEnd = !1, --this._partSegCount;\n    const e = this._getStartPointIndex();\n    this._ctrlPtBegin = 1 === t(this._path[e]);\n    let i = e + this._partSegCount + 1;\n    if (i >= this._path.length && (i = 0), this._ctrlPtEnd = 1 === t(this._path[i]), this._patternLength > 0) {\n      const t = this._ctrlPtBegin ? this._partCtrlPtGap : this._partExtPtGap,\n        s = this._ctrlPtEnd ? this._partCtrlPtGap : this._partExtPtGap;\n      let e = Math.round((this._partLength - (t + s)) / this._patternLength);\n      e <= 0 && (e = t + s > 0 ? 0 : 1), this._partLengthRatio = this._partLength / (t + s + e * this._patternLength), this._partLengthRatio < .01 && (this._partLengthRatio = 1);\n    } else this._partLengthRatio = 1;\n    return !0;\n  }\n  _hasNextSegment() {\n    return this._seg < this._path.length - 2;\n  }\n  _previousSegment() {\n    return --this._seg;\n  }\n  _nextSegment() {\n    return ++this._seg;\n  }\n  _getStartPointIndex() {\n    return this._seg;\n  }\n  _getEndPointIndex() {\n    return this._seg + 1;\n  }\n}\nexport { n as DashPattern, r as EndType, g as GeometryWalker, h as Pos };","map":{"version":3,"names":["getId","t","CurveHelper","s","PIXEL_TOLERANCE","e","i","n","constructor","_values","extPtGap","ctrlPtGap","_length","_currentValue","isEmpty","length","size","init","arguments","undefined","_setEmpty","Math","abs","push","scale","addValue","firstValue","lastValue","nextValue","reset","h","pt","ca","sa","r","FAIL","END","CONTINUE","a","segment","segmentLength","abscissa","isPathEnd","isPartEnd","isValid","copyTo","g","_tolerance","_currentPosition","updateTolerance","_patternLength","_partExtPtGap","_partCtrlPtGap","_partSegCount","_path","_seg","_setPosAtNextPart","curPositionIsValid","nextPosition","_nextPosition","curPointAndAngle","_getPoint","_getAngle","nextPointAndAngle","nextCurve","getPathEnd","Error","_partLengthRatio","getSegCoord2D","_nextSegment","calculateSegLength","_partIsLast","getSegAngleCS","_hasNextSegment","_partLength","_getEndPointIndex","_previousSegment","_getStartPointIndex","_ctrlPtBegin","_ctrlPtEnd","round","DashPattern","EndType","GeometryWalker","Pos"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/symbols/cim/GeometryWalker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{getId as t}from\"./CIMCursor.js\";import{CurveHelper as s,PIXEL_TOLERANCE as e}from\"./CurveHelper.js\";const i=1e-7;class n{constructor(){this._values=[],this.extPtGap=0,this.ctrlPtGap=0,this._length=0,this._currentValue=0}isEmpty(){return 0===this._values.length}size(){return this._values.length}init(t,s,e=!0){if(this._setEmpty(),!t||0===t.length)return!1;for(let n=0;n<t.length;n++){let s=Math.abs(t[n]);e&&s<i&&(s=i),this._values.push(s),this._length+=s}return s&&1&t.length&&(this._length*=2),0!==this._length&&(this.ctrlPtGap=this.extPtGap=0,this._currentValue=-1,!0)}scale(t){const s=this._values?this._values.length:0;for(let e=0;e<s;++e)this._values[e]*=t;this._length*=t,this.extPtGap*=t,this.ctrlPtGap*=t}addValue(t){this._length+=t,this._values.push(t)}firstValue(){return this._values[0]}lastValue(){return this._values[this._values.length-1]}nextValue(){return this._currentValue++,this._currentValue===this._values.length&&(this._currentValue=0),this._values[this._currentValue]}reset(){this._currentValue=-1}length(){return this._length}_setEmpty(){this.extPtGap=this.ctrlPtGap=this._length=0,this._currentValue=-1,this._values.length=0}}class h{constructor(){this.pt=null,this.ca=0,this.sa=0}}var r;!function(t){t[t.FAIL=0]=\"FAIL\",t[t.END=1]=\"END\",t[t.CONTINUE=2]=\"CONTINUE\"}(r||(r={}));class a{constructor(){this.reset()}reset(){this.segment=-1,this.segmentLength=0,this.abscissa=0,this.isPathEnd=!1,this.isPartEnd=!1}isValid(){return-1!==this.segment}copyTo(t){t.segment=this.segment,t.segmentLength=this.segmentLength,t.abscissa=this.abscissa,t.isPathEnd=this.isPathEnd,t.isPartEnd=this.isPartEnd}}class g extends s{constructor(t=0,s=!1){super(t,s),this._tolerance=e,this._currentPosition=new a}updateTolerance(t){this._tolerance=e*t}init(t,s,e=!0){return e?(this._patternLength=s.length(),this._partExtPtGap=s.extPtGap,this._partCtrlPtGap=s.ctrlPtGap):(this._patternLength=0,this._partExtPtGap=0,this._partCtrlPtGap=0),this._currentPosition.reset(),this._partSegCount=0,this._path=t,this._seg=-1,this._setPosAtNextPart()}curPositionIsValid(){return this._currentPosition.isValid()}nextPosition(t,s=r.FAIL){const e=new a;return!!this._nextPosition(t,e,null,s)&&(e.copyTo(this._currentPosition),!0)}curPointAndAngle(t){t.pt=this._getPoint(this._currentPosition);const[s,e]=this._getAngle(this._currentPosition);t.ca=s,t.sa=e}nextPointAndAngle(t,s,e=r.FAIL){const i=new a;if(!this._nextPosition(t,i,null,e))return!1;i.copyTo(this._currentPosition),s.pt=this._getPoint(i);const[n,h]=this._getAngle(i);return s.ca=n,s.sa=h,!0}nextCurve(t){if(0===t)return null;const s=[],e=new a;return this._nextPosition(t,e,s,r.END)?(e.copyTo(this._currentPosition),s):null}isPathEnd(){return this._currentPosition.isPathEnd}getPathEnd(){if(-1===this._currentPosition.segment)throw new Error(\"missing segment\");return this._path[this._currentPosition.segment+1]}_nextPosition(t,s,e,i){if(this._currentPosition.isPathEnd)return!1;let n=this._currentPosition.abscissa;for(this._currentPosition.segmentLength>0&&(n/=this._currentPosition.segmentLength),this._currentPosition.copyTo(s);s.abscissa+t*this._partLengthRatio>s.segmentLength+this._tolerance;){if(e){if(0===e.length)if(0===n){const t=this._path[s.segment];e.push([t[0],t[1]])}else e.push(this.getSegCoord2D(this._path,s.segment,n));const t=this._path[s.segment+1];e.push([t[0],t[1]])}if(n=0,t-=(s.segmentLength-s.abscissa)/this._partLengthRatio,this._partSegCount)s.segment=this._nextSegment(),s.segmentLength=this.calculateSegLength(this._path,s.segment),s.abscissa=0,this._partSegCount--;else{if(!this._setPosAtNextPart())return i!==r.FAIL&&(s.segmentLength=this.calculateSegLength(this._path,s.segment),s.isPartEnd=!0,i===r.END?(s.abscissa=s.segmentLength,s.isPathEnd=!0):s.abscissa=s.segmentLength+t,!0);this._currentPosition.copyTo(s)}}if(s.abscissa+=t*this._partLengthRatio,e){if(0===e.length)if(0===n){const t=this._path[s.segment];e.push([t[0],t[1]])}else e.push(this.getSegCoord2D(this._path,s.segment,n));const t=s.abscissa/s.segmentLength;if(1===t){const t=this._path[s.segment+1];e.push([t[0],t[1]])}else e.push(this.getSegCoord2D(this._path,s.segment,t))}return this._partSegCount||Math.abs(s.abscissa-s.segmentLength)<this._tolerance&&(s.isPathEnd=this._partIsLast,s.isPartEnd=!0),!0}_getPoint(t){if(-1===t.segment)throw new Error(\"missing segment\");const s=t.segmentLength<=0?0:t.abscissa/t.segmentLength;return this.getSegCoord2D(this._path,t.segment,s)}_getAngle(t){if(-1===t.segment)throw new Error(\"missing segment\");const s=t.segmentLength<=0?0:t.abscissa/t.segmentLength;return this.getSegAngleCS(this._path,t.segment,s)}_setPosAtNextPart(){for(;this._partSegCount;)this._hasNextSegment()&&this._nextSegment(),this._partSegCount--;if(!this._hasNextSegment())return!1;for(this._partLength=0,this._partIsLast=!0,this._partSegCount=0;this._hasNextSegment();)if(this._partLength+=this.calculateSegLength(this._path,this._nextSegment()),this._partSegCount++,1===t(this._path[this._getEndPointIndex()])){this._partIsLast=!this._hasNextSegment();break}let s=this._partSegCount;for(;s;)this._previousSegment(),--s;this._currentPosition.segment=this._nextSegment(),this._currentPosition.segmentLength=this.calculateSegLength(this._path,this._currentPosition.segment),this._currentPosition.abscissa=0,this._currentPosition.isPathEnd=this._currentPosition.isPartEnd=!1,--this._partSegCount;const e=this._getStartPointIndex();this._ctrlPtBegin=1===t(this._path[e]);let i=e+this._partSegCount+1;if(i>=this._path.length&&(i=0),this._ctrlPtEnd=1===t(this._path[i]),this._patternLength>0){const t=this._ctrlPtBegin?this._partCtrlPtGap:this._partExtPtGap,s=this._ctrlPtEnd?this._partCtrlPtGap:this._partExtPtGap;let e=Math.round((this._partLength-(t+s))/this._patternLength);e<=0&&(e=t+s>0?0:1),this._partLengthRatio=this._partLength/(t+s+e*this._patternLength),this._partLengthRatio<.01&&(this._partLengthRatio=1)}else this._partLengthRatio=1;return!0}_hasNextSegment(){return this._seg<this._path.length-2}_previousSegment(){return--this._seg}_nextSegment(){return++this._seg}_getStartPointIndex(){return this._seg}_getEndPointIndex(){return this._seg+1}}export{n as DashPattern,r as EndType,g as GeometryWalker,h as Pos};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}