{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { findScriptDependencies as n } from \"./treeAnalysis.js\";\nimport { parse as o } from \"./lib/arcade-parser.js\";\nimport { ParsingError as e, ParsingErrorCodes as i } from \"./lib/types.js\";\nfunction d(d) {\n  var l = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var r = o(d);\n  if (null === r.body || void 0 === r.body) throw new e({\n    index: 0,\n    line: 0,\n    column: 0,\n    data: null,\n    description: \"\",\n    code: i.InvalidExpression\n  });\n  if (0 === r.body.length) throw new e({\n    index: 0,\n    line: 0,\n    column: 0,\n    data: null,\n    description: \"\",\n    code: i.InvalidExpression\n  });\n  if (0 === r.body.length) throw new e({\n    index: 0,\n    line: 0,\n    column: 0,\n    data: null,\n    description: \"\",\n    code: i.InvalidExpression\n  });\n  return r.loadedModules = {}, n(r, l), r;\n}\nexport { d as parseScript };","map":{"version":3,"names":["findScriptDependencies","n","parse","o","ParsingError","e","ParsingErrorCodes","i","d","l","arguments","length","undefined","r","body","index","line","column","data","description","code","InvalidExpression","loadedModules","parseScript"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/arcade/parser.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{findScriptDependencies as n}from\"./treeAnalysis.js\";import{parse as o}from\"./lib/arcade-parser.js\";import{ParsingError as e,ParsingErrorCodes as i}from\"./lib/types.js\";function d(d,l=[]){const r=o(d);if(null===r.body||void 0===r.body)throw new e({index:0,line:0,column:0,data:null,description:\"\",code:i.InvalidExpression});if(0===r.body.length)throw new e({index:0,line:0,column:0,data:null,description:\"\",code:i.InvalidExpression});if(0===r.body.length)throw new e({index:0,line:0,column:0,data:null,description:\"\",code:i.InvalidExpression});return r.loadedModules={},n(r,l),r}export{d as parseScript};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,sBAAsB,IAAIC,CAAC,QAAK,mBAAmB;AAAC,SAAOC,KAAK,IAAIC,CAAC,QAAK,wBAAwB;AAAC,SAAOC,YAAY,IAAIC,CAAC,EAACC,iBAAiB,IAAIC,CAAC,QAAK,gBAAgB;AAAC,SAASC,CAACA,CAACA,CAAC,EAAM;EAAA,IAALC,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,EAAE;EAAE,IAAMG,CAAC,GAACV,CAAC,CAACK,CAAC,CAAC;EAAC,IAAG,IAAI,KAAGK,CAAC,CAACC,IAAI,IAAE,KAAK,CAAC,KAAGD,CAAC,CAACC,IAAI,EAAC,MAAM,IAAIT,CAAC,CAAC;IAACU,KAAK,EAAC,CAAC;IAACC,IAAI,EAAC,CAAC;IAACC,MAAM,EAAC,CAAC;IAACC,IAAI,EAAC,IAAI;IAACC,WAAW,EAAC,EAAE;IAACC,IAAI,EAACb,CAAC,CAACc;EAAiB,CAAC,CAAC;EAAC,IAAG,CAAC,KAAGR,CAAC,CAACC,IAAI,CAACH,MAAM,EAAC,MAAM,IAAIN,CAAC,CAAC;IAACU,KAAK,EAAC,CAAC;IAACC,IAAI,EAAC,CAAC;IAACC,MAAM,EAAC,CAAC;IAACC,IAAI,EAAC,IAAI;IAACC,WAAW,EAAC,EAAE;IAACC,IAAI,EAACb,CAAC,CAACc;EAAiB,CAAC,CAAC;EAAC,IAAG,CAAC,KAAGR,CAAC,CAACC,IAAI,CAACH,MAAM,EAAC,MAAM,IAAIN,CAAC,CAAC;IAACU,KAAK,EAAC,CAAC;IAACC,IAAI,EAAC,CAAC;IAACC,MAAM,EAAC,CAAC;IAACC,IAAI,EAAC,IAAI;IAACC,WAAW,EAAC,EAAE;IAACC,IAAI,EAACb,CAAC,CAACc;EAAiB,CAAC,CAAC;EAAC,OAAOR,CAAC,CAACS,aAAa,GAAC,CAAC,CAAC,EAACrB,CAAC,CAACY,CAAC,EAACJ,CAAC,CAAC,EAACI,CAAC;AAAA;AAAC,SAAOL,CAAC,IAAIe,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}