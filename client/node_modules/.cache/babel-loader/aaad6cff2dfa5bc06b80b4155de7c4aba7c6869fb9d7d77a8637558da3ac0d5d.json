{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isNone as e } from \"../../../../core/maybe.js\";\nimport { getBasisTranscoder as t } from \"../../../../libs/basisu/BasisU.js\";\nimport { TextureFormat as n } from \"../../../../libs/basisu/TextureFormat.js\";\nimport { CompressedTextureFormat as r, PixelFormat as s, TextureSamplingMode as i } from \"../../../webgl/enums.js\";\nimport { Texture as a } from \"../../../webgl/Texture.js\";\nimport { getBytesPerElementFormat as o } from \"../../../webgl/Util.js\";\nlet g = null,\n  l = null;\nasync function c() {\n  return e(l) && (l = t(), g = await l), l;\n}\nfunction u(t, n) {\n  if (e(g)) return t.byteLength;\n  const r = new g.BasisFile(new Uint8Array(t)),\n    s = T(r) ? E(r.getNumLevels(0), r.getHasAlpha(), r.getImageWidth(0, 0), r.getImageHeight(0, 0), n) : 0;\n  return r.close(), r.delete(), s;\n}\nfunction m(t, n) {\n  if (e(g)) return t.byteLength;\n  const r = new g.KTX2File(new Uint8Array(t)),\n    s = _(r) ? E(r.getLevels(), r.getHasAlpha(), r.getWidth(), r.getHeight(), n) : 0;\n  return r.close(), r.delete(), s;\n}\nfunction E(e, t, n, s, i) {\n  const a = o(t ? r.COMPRESSED_RGBA8_ETC2_EAC : r.COMPRESSED_RGB8_ETC2),\n    g = i && e > 1 ? (4 ** e - 1) / (3 * 4 ** (e - 1)) : 1;\n  return Math.ceil(n * s * a * g);\n}\nfunction T(e) {\n  return e.getNumImages() >= 1 && !e.isUASTC();\n}\nfunction _(e) {\n  return e.getFaces() >= 1 && e.isETC1S();\n}\nasync function h(t, n, r) {\n  e(g) && (g = await c());\n  const s = new g.BasisFile(new Uint8Array(r));\n  if (!T(s)) return null;\n  s.startTranscoding();\n  const i = p(t, n, s.getNumLevels(0), s.getHasAlpha(), s.getImageWidth(0, 0), s.getImageHeight(0, 0), (e, t) => s.getImageTranscodedSizeInBytes(0, e, t), (e, t, n) => s.transcodeImage(n, 0, e, t, 0, 0));\n  return s.close(), s.delete(), i;\n}\nasync function A(t, n, r) {\n  e(g) && (g = await c());\n  const s = new g.KTX2File(new Uint8Array(r));\n  if (!_(s)) return null;\n  s.startTranscoding();\n  const i = p(t, n, s.getLevels(), s.getHasAlpha(), s.getWidth(), s.getHeight(), (e, t) => s.getImageTranscodedSizeInBytes(e, 0, 0, t), (e, t, n) => s.transcodeImage(n, e, 0, 0, t, 0, -1, -1));\n  return s.close(), s.delete(), i;\n}\nfunction p(e, t, o, g, l, c, u, m) {\n  const {\n      compressedTextureETC: E,\n      compressedTextureS3TC: T\n    } = e.capabilities,\n    [_, h] = E ? g ? [n.ETC2_RGBA, r.COMPRESSED_RGBA8_ETC2_EAC] : [n.ETC1_RGB, r.COMPRESSED_RGB8_ETC2] : T ? g ? [n.BC3_RGBA, r.COMPRESSED_RGBA_S3TC_DXT5_EXT] : [n.BC1_RGB, r.COMPRESSED_RGB_S3TC_DXT1_EXT] : [n.RGBA32, s.RGBA],\n    A = t.hasMipmap ? o : Math.min(1, o),\n    p = [];\n  for (let n = 0; n < A; n++) p.push(new Uint8Array(u(n, _))), m(n, _, p[n]);\n  const C = p.length > 1,\n    d = C ? i.LINEAR_MIPMAP_LINEAR : i.LINEAR,\n    R = {\n      ...t,\n      samplingMode: d,\n      hasMipmap: C,\n      internalFormat: h,\n      width: l,\n      height: c\n    };\n  return new a(e, R, {\n    type: \"compressed\",\n    levels: p\n  });\n}\nexport { h as createTextureBasis, A as createTextureKTX2, u as estimateMemoryBasis, m as estimateMemoryKTX2, c as loadBasis };","map":{"version":3,"names":["isNone","e","getBasisTranscoder","t","TextureFormat","n","CompressedTextureFormat","r","PixelFormat","s","TextureSamplingMode","i","Texture","a","getBytesPerElementFormat","o","g","l","c","u","byteLength","BasisFile","Uint8Array","T","E","getNumLevels","getHasAlpha","getImageWidth","getImageHeight","close","delete","m","KTX2File","_","getLevels","getWidth","getHeight","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGB8_ETC2","Math","ceil","getNumImages","isUASTC","getFaces","isETC1S","h","startTranscoding","p","getImageTranscodedSizeInBytes","transcodeImage","A","compressedTextureETC","compressedTextureS3TC","capabilities","ETC2_RGBA","ETC1_RGB","BC3_RGBA","COMPRESSED_RGBA_S3TC_DXT5_EXT","BC1_RGB","COMPRESSED_RGB_S3TC_DXT1_EXT","RGBA32","RGBA","hasMipmap","min","push","C","length","d","LINEAR_MIPMAP_LINEAR","LINEAR","R","samplingMode","internalFormat","width","height","type","levels","createTextureBasis","createTextureKTX2","estimateMemoryBasis","estimateMemoryKTX2","loadBasis"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/3d/webgl-engine/lib/BasisUtil.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as e}from\"../../../../core/maybe.js\";import{getBasisTranscoder as t}from\"../../../../libs/basisu/BasisU.js\";import{TextureFormat as n}from\"../../../../libs/basisu/TextureFormat.js\";import{CompressedTextureFormat as r,PixelFormat as s,TextureSamplingMode as i}from\"../../../webgl/enums.js\";import{Texture as a}from\"../../../webgl/Texture.js\";import{getBytesPerElementFormat as o}from\"../../../webgl/Util.js\";let g=null,l=null;async function c(){return e(l)&&(l=t(),g=await l),l}function u(t,n){if(e(g))return t.byteLength;const r=new g.BasisFile(new Uint8Array(t)),s=T(r)?E(r.getNumLevels(0),r.getHasAlpha(),r.getImageWidth(0,0),r.getImageHeight(0,0),n):0;return r.close(),r.delete(),s}function m(t,n){if(e(g))return t.byteLength;const r=new g.KTX2File(new Uint8Array(t)),s=_(r)?E(r.getLevels(),r.getHasAlpha(),r.getWidth(),r.getHeight(),n):0;return r.close(),r.delete(),s}function E(e,t,n,s,i){const a=o(t?r.COMPRESSED_RGBA8_ETC2_EAC:r.COMPRESSED_RGB8_ETC2),g=i&&e>1?(4**e-1)/(3*4**(e-1)):1;return Math.ceil(n*s*a*g)}function T(e){return e.getNumImages()>=1&&!e.isUASTC()}function _(e){return e.getFaces()>=1&&e.isETC1S()}async function h(t,n,r){e(g)&&(g=await c());const s=new g.BasisFile(new Uint8Array(r));if(!T(s))return null;s.startTranscoding();const i=p(t,n,s.getNumLevels(0),s.getHasAlpha(),s.getImageWidth(0,0),s.getImageHeight(0,0),((e,t)=>s.getImageTranscodedSizeInBytes(0,e,t)),((e,t,n)=>s.transcodeImage(n,0,e,t,0,0)));return s.close(),s.delete(),i}async function A(t,n,r){e(g)&&(g=await c());const s=new g.KTX2File(new Uint8Array(r));if(!_(s))return null;s.startTranscoding();const i=p(t,n,s.getLevels(),s.getHasAlpha(),s.getWidth(),s.getHeight(),((e,t)=>s.getImageTranscodedSizeInBytes(e,0,0,t)),((e,t,n)=>s.transcodeImage(n,e,0,0,t,0,-1,-1)));return s.close(),s.delete(),i}function p(e,t,o,g,l,c,u,m){const{compressedTextureETC:E,compressedTextureS3TC:T}=e.capabilities,[_,h]=E?g?[n.ETC2_RGBA,r.COMPRESSED_RGBA8_ETC2_EAC]:[n.ETC1_RGB,r.COMPRESSED_RGB8_ETC2]:T?g?[n.BC3_RGBA,r.COMPRESSED_RGBA_S3TC_DXT5_EXT]:[n.BC1_RGB,r.COMPRESSED_RGB_S3TC_DXT1_EXT]:[n.RGBA32,s.RGBA],A=t.hasMipmap?o:Math.min(1,o),p=[];for(let n=0;n<A;n++)p.push(new Uint8Array(u(n,_))),m(n,_,p[n]);const C=p.length>1,d=C?i.LINEAR_MIPMAP_LINEAR:i.LINEAR,R={...t,samplingMode:d,hasMipmap:C,internalFormat:h,width:l,height:c};return new a(e,R,{type:\"compressed\",levels:p})}export{h as createTextureBasis,A as createTextureKTX2,u as estimateMemoryBasis,m as estimateMemoryKTX2,c as loadBasis};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}