{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nfunction a(a, n) {\n  var t = l[a.toLowerCase()];\n  if (null == t) throw new Error(\"Function Not Recognised\");\n  if (n.length < t.minParams || n.length > t.maxParams) throw new Error(\"Invalid Parameter count for call to \".concat(a.toUpperCase()));\n  return t.evaluate(n);\n}\nfunction n(a, n) {\n  var t = l[a.toLowerCase()];\n  return null != t && n >= t.minParams && n <= t.maxParams;\n}\nvar l = {\n  min: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: function evaluate(a) {\n      return null == a[0] ? null : Math.min.apply(Math, a[0]);\n    }\n  },\n  max: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: function evaluate(a) {\n      return null == a[0] ? null : Math.max.apply(Math, a[0]);\n    }\n  },\n  avg: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: function evaluate(a) {\n      return null == a[0] ? null : t(a[0]);\n    }\n  },\n  sum: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: function evaluate(a) {\n      return null == a[0] ? null : r(a[0]);\n    }\n  },\n  stddev: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: function evaluate(a) {\n      return null == a[0] ? null : Math.sqrt(e(a[0]));\n    }\n  },\n  count: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: function evaluate(a) {\n      return null == a[0] ? null : a[0].length;\n    }\n  },\n  var: {\n    minParams: 1,\n    maxParams: 1,\n    evaluate: function evaluate(a) {\n      return null == a[0] ? null : e(a[0]);\n    }\n  }\n};\nfunction t(a) {\n  var n = 0;\n  for (var _l = 0; _l < a.length; _l++) n += a[_l];\n  return n / a.length;\n}\nfunction r(a) {\n  var n = 0;\n  for (var _l2 = 0; _l2 < a.length; _l2++) n += a[_l2];\n  return n;\n}\nfunction e(a) {\n  var n = t(a),\n    l = a.length;\n  var r = 0;\n  var _iterator = _createForOfIteratorHelper(a),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _t = _step.value;\n      r += Math.pow(_t - n, 2);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return l > 1 ? r / (l - 1) : 0;\n}\nexport { a as aggregateFunction, n as isAggregate };","map":{"version":3,"names":["a","n","t","l","toLowerCase","Error","length","minParams","maxParams","concat","toUpperCase","evaluate","min","Math","apply","max","avg","sum","r","stddev","sqrt","e","count","var","_iterator","_createForOfIteratorHelper","_step","s","done","value","pow","err","f","aggregateFunction","isAggregate"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/core/sql/AggregateFunctions.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nfunction a(a,n){const t=l[a.toLowerCase()];if(null==t)throw new Error(\"Function Not Recognised\");if(n.length<t.minParams||n.length>t.maxParams)throw new Error(`Invalid Parameter count for call to ${a.toUpperCase()}`);return t.evaluate(n)}function n(a,n){const t=l[a.toLowerCase()];return null!=t&&n>=t.minParams&&n<=t.maxParams}const l={min:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.min.apply(Math,a[0])},max:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.max.apply(Math,a[0])},avg:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:t(a[0])},sum:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:r(a[0])},stddev:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sqrt(e(a[0]))},count:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].length},var:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:e(a[0])}};function t(a){let n=0;for(let l=0;l<a.length;l++)n+=a[l];return n/a.length}function r(a){let n=0;for(let l=0;l<a.length;l++)n+=a[l];return n}function e(a){const n=t(a),l=a.length;let r=0;for(const t of a)r+=(t-n)**2;return l>1?r/(l-1):0}export{a as aggregateFunction,n as isAggregate};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}