{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { ShaderOutput as t } from \"../ShaderOutput.js\";\nimport { RgbaFloatEncoding as a } from \"../util/RgbaFloatEncoding.glsl.js\";\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\nfunction o(o, l) {\n  switch (o.fragment.include(a), l.output) {\n    case t.Shadow:\n    case t.ShadowHighlight:\n    case t.ShadowExcludeHighlight:\n      o.extensions.add(\"GL_OES_standard_derivatives\"), o.fragment.code.add(e`float _calculateFragDepth(const in float depth) {\nconst float SLOPE_SCALE = 2.0;\nconst float BIAS = 20.0 * .000015259;\nfloat m = max(abs(dFdx(depth)), abs(dFdy(depth)));\nfloat result = depth + SLOPE_SCALE * m + BIAS;\nreturn clamp(result, .0, .999999);\n}\nvoid outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_calculateFragDepth(_linearDepth));\n}`);\n      break;\n    case t.Depth:\n      o.fragment.code.add(e`void outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_linearDepth);\n}`);\n  }\n}\nexport { o as OutputDepth };","map":{"version":3,"names":["ShaderOutput","t","RgbaFloatEncoding","a","glsl","e","o","l","fragment","include","output","Shadow","ShadowHighlight","ShadowExcludeHighlight","extensions","add","code","Depth","OutputDepth"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as t}from\"../ShaderOutput.js\";import{RgbaFloatEncoding as a}from\"../util/RgbaFloatEncoding.glsl.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";function o(o,l){switch(o.fragment.include(a),l.output){case t.Shadow:case t.ShadowHighlight:case t.ShadowExcludeHighlight:o.extensions.add(\"GL_OES_standard_derivatives\"),o.fragment.code.add(e`float _calculateFragDepth(const in float depth) {\nconst float SLOPE_SCALE = 2.0;\nconst float BIAS = 20.0 * .000015259;\nfloat m = max(abs(dFdx(depth)), abs(dFdy(depth)));\nfloat result = depth + SLOPE_SCALE * m + BIAS;\nreturn clamp(result, .0, .999999);\n}\nvoid outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_calculateFragDepth(_linearDepth));\n}`);break;case t.Depth:o.fragment.code.add(e`void outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_linearDepth);\n}`)}}export{o as OutputDepth};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,YAAY,IAAIC,CAAC,QAAK,oBAAoB;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,QAAOD,CAAC,CAACE,QAAQ,CAACC,OAAO,CAACN,CAAC,CAAC,EAACI,CAAC,CAACG,MAAM;IAAE,KAAKT,CAAC,CAACU,MAAM;IAAC,KAAKV,CAAC,CAACW,eAAe;IAAC,KAAKX,CAAC,CAACY,sBAAsB;MAACP,CAAC,CAACQ,UAAU,CAACC,GAAG,CAAC,6BAA6B,CAAC,EAACT,CAAC,CAACE,QAAQ,CAACQ,IAAI,CAACD,GAAG,CAACV,CAAE;AACjX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;MAAC;IAAM,KAAKJ,CAAC,CAACgB,KAAK;MAACX,CAAC,CAACE,QAAQ,CAACQ,IAAI,CAACD,GAAG,CAACV,CAAE;AAC7C;AACA,EAAE,CAAC;EAAA;AAAC;AAAC,SAAOC,CAAC,IAAIY,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}