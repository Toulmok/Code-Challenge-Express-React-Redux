{"ast":null,"code":"import _regeneratorRuntime from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isNone as i, assertIsSome as s, isSome as r, unwrap as a } from \"../../../core/maybe.js\";\nimport { urlToObject as l } from \"../../../core/urlUtils.js\";\nimport { property as o } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as n } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport c from \"../RasterInfo.js\";\nimport m from \"../RasterStorageInfo.js\";\nimport { readServiceTileInfo as h } from \"../serviceTileInfoProperty.js\";\nimport u from \"../TileInfo.js\";\nimport { TilemapCache as f } from \"../TilemapCache.js\";\nimport p from \"./BaseRaster.js\";\nimport { setValidBoundary as y } from \"../rasterFunctions/pixelUtils.js\";\nimport d from \"../rasterTransforms/GCSShiftTransform.js\";\nimport { fetchServiceRasterInfo as x } from \"../../../rest/imageService/fetchRasterInfo.js\";\nimport g from \"../../../geometry/SpatialReference.js\";\nimport v from \"../../../geometry/Point.js\";\nimport S from \"../../../geometry/Extent.js\";\nvar I = /*#__PURE__*/function (_p) {\n  _inherits(I, _p);\n  var _super = _createSuper(I);\n  function I() {\n    var _this;\n    _classCallCheck(this, I);\n    _this = _super.apply(this, arguments), _this._levelOffset = 0, _this._tilemapCache = null, _this._slices = null, _this.datasetFormat = \"RasterTileServer\", _this.tileType = null;\n    return _this;\n  }\n  _createClass(I, [{\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n        var _o$name$slice, _o$name, _c$keyProperties$_yxs, _c$keyProperties, _M$;\n        var r, a, o, n, c, p, _this$_computeMinMaxL, _this$_computeMinMaxL2, y, d, x, g, v, S, _I, w, _p$size, j, T, b, M, _, R, z, P, _e;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.init();\n            case 2:\n              r = e && e.signal;\n              if (!this.sourceJSON) {\n                _context.next = 7;\n                break;\n              }\n              _context.t0 = {\n                data: this.sourceJSON\n              };\n              _context.next = 10;\n              break;\n            case 7:\n              _context.next = 9;\n              return this.request(this.url, {\n                query: {\n                  f: \"json\"\n                },\n                signal: r\n              });\n            case 9:\n              _context.t0 = _context.sent;\n            case 10:\n              a = _context.t0;\n              a.ssl && (this.url = this.url.replace(/^http:/i, \"https:\"));\n              o = a.data;\n              if (!(this.sourceJSON = o, !o)) {\n                _context.next = 15;\n                break;\n              }\n              throw new t(\"imageserverraster:open\", \"cannot initialize tiled image service, missing service info\");\n            case 15:\n              if (o.tileInfo) {\n                _context.next = 17;\n                break;\n              }\n              throw new t(\"imageserverraster:open\", \"use ImageryLayer to open non-tiled image services\");\n            case 17:\n              this._fixScaleInServiceInfo();\n              n = [\"jpg\", \"jpeg\", \"png\", \"png8\", \"png24\", \"png32\", \"mixed\"];\n              this.tileType = o.cacheType, null == this.tileType && (n.includes(o.tileInfo.format.toLowerCase()) ? this.tileType = \"Map\" : \"lerc\" === o.tileInfo.format.toLowerCase() ? this.tileType = \"Elevation\" : this.tileType = \"Raster\"), this.datasetName = (_o$name$slice = (_o$name = o.name) === null || _o$name === void 0 ? void 0 : _o$name.slice(o.name.indexOf(\"/\") + 1)) !== null && _o$name$slice !== void 0 ? _o$name$slice : \"\";\n              _context.next = 22;\n              return this._fetchRasterInfo({\n                signal: r\n              });\n            case 22:\n              c = _context.sent;\n              if (!i(c)) {\n                _context.next = 25;\n                break;\n              }\n              throw new t(\"image-server-raster:open\", \"cannot initialize image service\");\n            case 25:\n              p = \"Map\" === this.tileType ? h(o.tileInfo, o) : u.fromJSON(o.tileInfo);\n              s(p);\n              _this$_computeMinMaxL = this._computeMinMaxLOD(c, p), _this$_computeMinMaxL2 = _slicedToArray(_this$_computeMinMaxL, 2), y = _this$_computeMinMaxL2[0], d = _this$_computeMinMaxL2[1], x = c.extent, g = c.pixelSize, v = .5 / c.width * g.x, S = Math.max(g.x, g.y), _I = p.lods;\n              (\"Map\" !== this.tileType && 0 !== o.maxScale || Math.abs(g.x - g.y) > v || !_I.some(function (e) {\n                return Math.abs(e.resolution - S) < v;\n              })) && (g.x = g.y = y.resolution, c.width = Math.ceil((x.xmax - x.xmin) / g.x - .1), c.height = Math.ceil((x.ymax - x.ymin) / g.y - .1));\n              w = y.level - d.level, _p$size = _slicedToArray(p.size, 2), j = _p$size[0], T = _p$size[1], b = [], M = [];\n              _I.forEach(function (e, t) {\n                e.level >= d.level && e.level <= y.level && b.push({\n                  x: e.resolution,\n                  y: e.resolution\n                }), t < _I.length - 1 && M.push(Math.round(10 * e.resolution / _I[t + 1].resolution) / 10);\n              }), b.sort(function (e, t) {\n                return e.x - t.x;\n              });\n              _ = this.computeBlockBoundary(x, j, T, p.origin, b, w), R = b.length > 1 ? b.slice(1) : null;\n              o.transposeInfo && (z = {\n                tileSize: [o.transposeInfo.rows, o.transposeInfo.cols],\n                packetSize: (_c$keyProperties$_yxs = (_c$keyProperties = c.keyProperties) === null || _c$keyProperties === void 0 ? void 0 : _c$keyProperties._yxs.PacketSize) !== null && _c$keyProperties$_yxs !== void 0 ? _c$keyProperties$_yxs : 0\n              });\n              P = M.length <= 1 || M.length >= 3 && M.slice(0, M.length - 1).every(function (e) {\n                return e === M[0];\n              }) ? (_M$ = M[0]) !== null && _M$ !== void 0 ? _M$ : 2 : Math.round(10 / Math.pow(d.resolution / y.resolution, -1 / w)) / 10;\n              if (c.storageInfo = new m({\n                blockWidth: p.size[0],\n                blockHeight: p.size[1],\n                pyramidBlockWidth: p.size[0],\n                pyramidBlockHeight: p.size[1],\n                pyramidResolutions: R,\n                pyramidScalingFactor: P,\n                compression: p.format,\n                origin: p.origin,\n                firstPyramidLevel: 1,\n                maximumPyramidLevel: w,\n                tileInfo: p,\n                transposeInfo: z,\n                blockBoundary: _\n              }), this._fixGCSShift(c), this._set(\"rasterInfo\", c), o.capabilities.toLowerCase().includes(\"tilemap\")) {\n                _e = {\n                  tileInfo: c.storageInfo.tileInfo,\n                  parsedUrl: l(this.url),\n                  url: this.url,\n                  tileServers: [],\n                  type: \"tile\"\n                };\n                this._tilemapCache = new f({\n                  layer: _e\n                });\n              }\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function open(_x) {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n  }, {\n    key: \"fetchRawTile\",\n    value: function () {\n      var _fetchRawTile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e, t, i) {\n        var s,\n          _this$rasterInfo,\n          l,\n          o,\n          n,\n          c,\n          m,\n          h,\n          u,\n          _yield$this$request,\n          f,\n          p,\n          d,\n          x,\n          g,\n          v,\n          S,\n          _this$getPyramidPixel,\n          _I2,\n          w,\n          j,\n          T,\n          b,\n          M,\n          _,\n          R,\n          z,\n          P,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              s = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};\n              _this$rasterInfo = this.rasterInfo, l = _this$rasterInfo.storageInfo, o = _this$rasterInfo.extent, n = l.transposeInfo, c = r(n) && !!s.transposedVariableName;\n              if (!(this._slices && !c && null == s.sliceId)) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 4:\n              m = c ? 0 : l.maximumPyramidLevel - e + this._levelOffset;\n              h = \"\".concat(this.url, \"/tile/\").concat(m, \"/\").concat(t, \"/\").concat(i);\n              u = this._slices ? c ? {\n                variable: s.transposedVariableName\n              } : {\n                sliceId: s.sliceId || 0\n              } : null;\n              _context2.next = 9;\n              return this.request(h, {\n                query: u,\n                responseType: \"array-buffer\",\n                signal: s.signal\n              });\n            case 9:\n              _yield$this$request = _context2.sent;\n              f = _yield$this$request.data;\n              if (f) {\n                _context2.next = 13;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 13:\n              p = c ? n.tileSize : l.tileInfo.size;\n              _context2.next = 16;\n              return this.decodePixelBlock(f, {\n                width: p[0],\n                height: p[1],\n                planes: null,\n                pixelType: null,\n                isPoint: \"Elevation\" === this.tileType,\n                returnInterleaved: c,\n                noDataValue: a(this.rasterInfo.noDataValue)\n              });\n            case 16:\n              d = _context2.sent;\n              if (!(null == d)) {\n                _context2.next = 19;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 19:\n              x = l.blockBoundary[e];\n              if (!(\"jpg\" !== l.compression || i > x.minCol && i < x.maxCol && t > x.minRow && t < x.maxRow)) {\n                _context2.next = 22;\n                break;\n              }\n              return _context2.abrupt(\"return\", d);\n            case 22:\n              g = l.origin, v = l.blockWidth, S = l.blockHeight, _this$getPyramidPixel = this.getPyramidPixelSize(e), _I2 = _this$getPyramidPixel.x, w = _this$getPyramidPixel.y, j = Math.round((o.xmin - g.x) / _I2) % v, T = Math.round((o.xmax - g.x) / _I2) % v || v, b = Math.round((g.y - o.ymax) / w) % S, M = Math.round((g.y - o.ymin) / w) % S || S, _ = i === x.minCol ? j : 0, R = t === x.minRow ? b : 0, z = i === x.maxCol ? T : v, P = t === x.maxRow ? M : S;\n              return _context2.abrupt(\"return\", (y(d, {\n                x: _,\n                y: R\n              }, {\n                width: z - _,\n                height: P - R\n              }), d));\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function fetchRawTile(_x2, _x3, _x4) {\n        return _fetchRawTile.apply(this, arguments);\n      }\n      return fetchRawTile;\n    }()\n  }, {\n    key: \"getSliceIndex\",\n    value: function getSliceIndex(e) {\n      if (!this._slices || i(e) || 0 === e.length) return null;\n      var t = e;\n      for (var _i = 0; _i < this._slices.length; _i++) {\n        var _e2 = this._slices[_i].multidimensionalDefinition;\n        if (_e2.length === t.length && !_e2.some(function (e) {\n          var i = t.find(function (t) {\n            return e.variableName === t.variableName && t.dimensionName === e.dimensionName;\n          });\n          if (!i) return !0;\n          return (Array.isArray(e.values[0]) ? \"\".concat(e.values[0][0], \"-\").concat(e.values[0][1]) : e.values[0]) !== (Array.isArray(i.values[0]) ? \"\".concat(i.values[0][0], \"-\").concat(i.values[0][1]) : i.values[0]);\n        })) return _i;\n      }\n      return null;\n    }\n  }, {\n    key: \"fetchVariableStatisticsHistograms\",\n    value: function () {\n      var _fetchVariableStatisticsHistograms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e, t) {\n        var i, s, r;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              i = this.request(this.url + \"/statistics\", {\n                query: {\n                  variable: e,\n                  f: \"json\"\n                },\n                signal: t\n              }).then(function (e) {\n                var _e$data;\n                return (_e$data = e.data) === null || _e$data === void 0 ? void 0 : _e$data.statistics;\n              });\n              s = this.request(this.url + \"/histograms\", {\n                query: {\n                  variable: e,\n                  f: \"json\"\n                },\n                signal: t\n              }).then(function (e) {\n                var _e$data2;\n                return (_e$data2 = e.data) === null || _e$data2 === void 0 ? void 0 : _e$data2.histograms;\n              });\n              _context3.next = 4;\n              return Promise.all([i, s]);\n            case 4:\n              r = _context3.sent;\n              return _context3.abrupt(\"return\", (r[0] && r[0].forEach(function (e) {\n                e.avg = e.mean, e.stddev = e.standardDeviation;\n              }), {\n                statistics: r[0] || null,\n                histograms: r[1] || null\n              }));\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function fetchVariableStatisticsHistograms(_x5, _x6) {\n        return _fetchVariableStatisticsHistograms.apply(this, arguments);\n      }\n      return fetchVariableStatisticsHistograms;\n    }()\n  }, {\n    key: \"computeBestPyramidLevelForLocation\",\n    value: function () {\n      var _computeBestPyramidLevelForLocation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {\n        var t,\n          i,\n          s,\n          r,\n          l,\n          o,\n          _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              t = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n              if (this._tilemapCache) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", 0);\n            case 3:\n              i = this.identifyPixelLocation(e, 0, a(t.datumTransformation));\n              if (!(null === i)) {\n                _context4.next = 6;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 6:\n              s = 0;\n              r = this.rasterInfo.storageInfo.maximumPyramidLevel;\n              l = r - s + this._levelOffset;\n              o = i.srcLocation;\n            case 10:\n              if (!(l >= 0)) {\n                _context4.next = 25;\n                break;\n              }\n              _context4.prev = 11;\n              _context4.next = 14;\n              return this._tilemapCache.fetchAvailability(l, i.row, i.col, t);\n            case 14:\n              _context4.t0 = _context4.sent;\n              if (!(\"available\" === _context4.t0)) {\n                _context4.next = 17;\n                break;\n              }\n              return _context4.abrupt(\"break\", 25);\n            case 17:\n              _context4.next = 21;\n              break;\n            case 19:\n              _context4.prev = 19;\n              _context4.t1 = _context4[\"catch\"](11);\n            case 21:\n              if (!(l--, s++, i = this.identifyPixelLocation(o, s, a(t.datumTransformation)), null === i)) {\n                _context4.next = 23;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 23:\n              _context4.next = 10;\n              break;\n            case 25:\n              return _context4.abrupt(\"return\", -1 === l || null == i ? null : s);\n            case 26:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[11, 19]]);\n      }));\n      function computeBestPyramidLevelForLocation(_x7) {\n        return _computeBestPyramidLevelForLocation.apply(this, arguments);\n      }\n      return computeBestPyramidLevelForLocation;\n    }()\n  }, {\n    key: \"_fetchRasterInfo\",\n    value: function () {\n      var _fetchRasterInfo2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {\n        var t, _e3, _i2, _s, _r, _a, i, s, r, a;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              t = this.sourceJSON;\n              if (!(\"Map\" === this.tileType)) {\n                _context5.next = 4;\n                break;\n              }\n              _e3 = t.fullExtent || t.extent, _i2 = Math.ceil((_e3.xmax - _e3.xmin) / t.pixelSizeX - .1), _s = Math.ceil((_e3.ymax - _e3.ymin) / t.pixelSizeY - .1), _r = g.fromJSON(t.spatialReference || _e3.spatialReference), _a = new v({\n                x: t.pixelSizeX,\n                y: t.pixelSizeY,\n                spatialReference: _r\n              });\n              return _context5.abrupt(\"return\", new c({\n                width: _i2,\n                height: _s,\n                bandCount: 3,\n                extent: S.fromJSON(_e3),\n                spatialReference: _r,\n                pixelSize: _a,\n                pixelType: \"u8\",\n                statistics: null,\n                keyProperties: {\n                  DataType: \"processed\"\n                }\n              }));\n            case 4:\n              i = e.signal;\n              s = x(this.url, this.sourceJSON, {\n                signal: i,\n                query: this.ioConfig.customFetchParameters\n              });\n              r = t.hasMultidimensions ? this.request(\"\".concat(this.url, \"/slices\"), {\n                query: {\n                  f: \"json\"\n                },\n                signal: i\n              }).then(function (e) {\n                return e.data && e.data.slices;\n              }).catch(function () {\n                return null;\n              }) : null;\n              _context5.next = 9;\n              return Promise.all([s, r]);\n            case 9:\n              a = _context5.sent;\n              return _context5.abrupt(\"return\", (this._slices = a[1], a[0]));\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function _fetchRasterInfo(_x8) {\n        return _fetchRasterInfo2.apply(this, arguments);\n      }\n      return _fetchRasterInfo;\n    }()\n  }, {\n    key: \"_fixScaleInServiceInfo\",\n    value: function _fixScaleInServiceInfo() {\n      var e = this.sourceJSON;\n      e.minScale && e.minScale < 0 && (e.minScale = 0), e.maxScale && e.maxScale < 0 && (e.maxScale = 0);\n    }\n  }, {\n    key: \"_fixGCSShift\",\n    value: function _fixGCSShift(e) {\n      var t = e.extent,\n        i = e.spatialReference;\n      t.xmin > -1 && t.xmax > 181 && (i === null || i === void 0 ? void 0 : i.wkid) && i.isGeographic && (e.nativeExtent = e.extent, e.transform = new d(), e.extent = e.transform.forwardTransform(t));\n    }\n  }, {\n    key: \"_computeMinMaxLOD\",\n    value: function _computeMinMaxLOD(e, t) {\n      var _r$filter$sort$, _r$find2;\n      var i = e.pixelSize,\n        s = .5 / e.width * i.x,\n        r = t.lods,\n        a = t.lodAt(Math.max.apply(null, r.map(function (e) {\n          return e.level;\n        }))),\n        l = t.lodAt(Math.min.apply(null, r.map(function (e) {\n          return e.level;\n        }))),\n        o = this.tileType;\n      if (\"Map\" === o) return this._levelOffset = r[0].level, [a, l];\n      if (\"Raster\" === o) {\n        var _r$find;\n        return [(_r$find = r.find(function (e) {\n          return e.resolution === i.x;\n        })) !== null && _r$find !== void 0 ? _r$find : a, l];\n      }\n      var _this$sourceJSON = this.sourceJSON,\n        n = _this$sourceJSON.minScale,\n        c = _this$sourceJSON.maxScale;\n      var m = a;\n      c > 0 && (m = r.find(function (e) {\n        return Math.abs(e.scale - c) < s;\n      }), m || (m = (_r$filter$sort$ = r.filter(function (e) {\n        return e.scale > c;\n      }).sort(function (e, t) {\n        return e.scale > t.scale ? 1 : -1;\n      })[0]) !== null && _r$filter$sort$ !== void 0 ? _r$filter$sort$ : a));\n      var h = l;\n      return n > 0 && (h = (_r$find2 = r.find(function (e) {\n        return Math.abs(e.scale - n) < s;\n      })) !== null && _r$find2 !== void 0 ? _r$find2 : l, this._levelOffset = h.level - l.level), [m, h];\n    }\n  }]);\n  return I;\n}(p);\ne([o({\n  type: String,\n  json: {\n    write: !0\n  }\n})], I.prototype, \"datasetFormat\", void 0), e([o()], I.prototype, \"tileType\", void 0), I = e([n(\"esri.layers.support.rasterDatasets.ImageServerRaster\")], I);\nvar w = I;\nexport { w as default };","map":{"version":3,"names":["_","e","t","isNone","i","assertIsSome","s","isSome","r","unwrap","a","urlToObject","l","property","o","subclass","n","c","m","readServiceTileInfo","h","u","TilemapCache","f","p","setValidBoundary","y","d","fetchServiceRasterInfo","x","g","v","S","I","_p","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_levelOffset","_tilemapCache","_slices","datasetFormat","tileType","_createClass","key","value","_open","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_o$name$slice","_o$name","_c$keyProperties$_yxs","_c$keyProperties","_M$","_this$_computeMinMaxL","_this$_computeMinMaxL2","_I","w","_p$size","j","T","b","M","R","z","P","_e","wrap","_callee$","_context","prev","next","init","signal","sourceJSON","t0","data","request","url","query","sent","ssl","replace","tileInfo","_fixScaleInServiceInfo","cacheType","includes","format","toLowerCase","datasetName","name","slice","indexOf","_fetchRasterInfo","fromJSON","_computeMinMaxLOD","_slicedToArray","extent","pixelSize","width","Math","max","lods","maxScale","abs","some","resolution","ceil","xmax","xmin","height","ymax","ymin","level","size","forEach","push","length","round","sort","computeBlockBoundary","origin","transposeInfo","tileSize","rows","cols","packetSize","keyProperties","_yxs","PacketSize","every","pow","storageInfo","blockWidth","blockHeight","pyramidBlockWidth","pyramidBlockHeight","pyramidResolutions","pyramidScalingFactor","compression","firstPyramidLevel","maximumPyramidLevel","blockBoundary","_fixGCSShift","_set","capabilities","parsedUrl","tileServers","type","layer","stop","open","_x","_fetchRawTile","_callee2","_this$rasterInfo","_yield$this$request","_this$getPyramidPixel","_I2","_args2","_callee2$","_context2","undefined","rasterInfo","transposedVariableName","sliceId","abrupt","concat","variable","responseType","decodePixelBlock","planes","pixelType","isPoint","returnInterleaved","noDataValue","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","fetchRawTile","_x2","_x3","_x4","getSliceIndex","multidimensionalDefinition","find","variableName","dimensionName","Array","isArray","values","_fetchVariableStatisticsHistograms","_callee3","_callee3$","_context3","then","_e$data","statistics","_e$data2","histograms","Promise","all","avg","mean","stddev","standardDeviation","fetchVariableStatisticsHistograms","_x5","_x6","_computeBestPyramidLevelForLocation","_callee4","_args4","_callee4$","_context4","identifyPixelLocation","datumTransformation","srcLocation","fetchAvailability","row","col","t1","computeBestPyramidLevelForLocation","_x7","_fetchRasterInfo2","_callee5","_e3","_i2","_s","_r","_a","_callee5$","_context5","fullExtent","pixelSizeX","pixelSizeY","spatialReference","bandCount","DataType","ioConfig","customFetchParameters","hasMultidimensions","slices","catch","_x8","minScale","wkid","isGeographic","nativeExtent","transform","forwardTransform","_r$filter$sort$","_r$find2","lodAt","map","min","_r$find","_this$sourceJSON","scale","filter","String","json","write","prototype","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isNone as i,assertIsSome as s,isSome as r,unwrap as a}from\"../../../core/maybe.js\";import{urlToObject as l}from\"../../../core/urlUtils.js\";import{property as o}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as n}from\"../../../core/accessorSupport/decorators/subclass.js\";import c from\"../RasterInfo.js\";import m from\"../RasterStorageInfo.js\";import{readServiceTileInfo as h}from\"../serviceTileInfoProperty.js\";import u from\"../TileInfo.js\";import{TilemapCache as f}from\"../TilemapCache.js\";import p from\"./BaseRaster.js\";import{setValidBoundary as y}from\"../rasterFunctions/pixelUtils.js\";import d from\"../rasterTransforms/GCSShiftTransform.js\";import{fetchServiceRasterInfo as x}from\"../../../rest/imageService/fetchRasterInfo.js\";import g from\"../../../geometry/SpatialReference.js\";import v from\"../../../geometry/Point.js\";import S from\"../../../geometry/Extent.js\";let I=class extends p{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat=\"RasterTileServer\",this.tileType=null}async open(e){await this.init();const r=e&&e.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:\"json\"},signal:r});a.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\"));const o=a.data;if(this.sourceJSON=o,!o)throw new t(\"imageserverraster:open\",\"cannot initialize tiled image service, missing service info\");if(!o.tileInfo)throw new t(\"imageserverraster:open\",\"use ImageryLayer to open non-tiled image services\");this._fixScaleInServiceInfo();const n=[\"jpg\",\"jpeg\",\"png\",\"png8\",\"png24\",\"png32\",\"mixed\"];this.tileType=o.cacheType,null==this.tileType&&(n.includes(o.tileInfo.format.toLowerCase())?this.tileType=\"Map\":\"lerc\"===o.tileInfo.format.toLowerCase()?this.tileType=\"Elevation\":this.tileType=\"Raster\"),this.datasetName=o.name?.slice(o.name.indexOf(\"/\")+1)??\"\";const c=await this._fetchRasterInfo({signal:r});if(i(c))throw new t(\"image-server-raster:open\",\"cannot initialize image service\");const p=\"Map\"===this.tileType?h(o.tileInfo,o):u.fromJSON(o.tileInfo);s(p);const[y,d]=this._computeMinMaxLOD(c,p),{extent:x,pixelSize:g}=c,v=.5/c.width*g.x,S=Math.max(g.x,g.y),{lods:I}=p;(\"Map\"!==this.tileType&&0!==o.maxScale||Math.abs(g.x-g.y)>v||!I.some((e=>Math.abs(e.resolution-S)<v)))&&(g.x=g.y=y.resolution,c.width=Math.ceil((x.xmax-x.xmin)/g.x-.1),c.height=Math.ceil((x.ymax-x.ymin)/g.y-.1));const w=y.level-d.level,[j,T]=p.size,b=[],M=[];I.forEach(((e,t)=>{e.level>=d.level&&e.level<=y.level&&b.push({x:e.resolution,y:e.resolution}),t<I.length-1&&M.push(Math.round(10*e.resolution/I[t+1].resolution)/10)})),b.sort(((e,t)=>e.x-t.x));const _=this.computeBlockBoundary(x,j,T,p.origin,b,w),R=b.length>1?b.slice(1):null;let z;o.transposeInfo&&(z={tileSize:[o.transposeInfo.rows,o.transposeInfo.cols],packetSize:c.keyProperties?._yxs.PacketSize??0});const P=M.length<=1||M.length>=3&&M.slice(0,M.length-1).every((e=>e===M[0]))?M[0]??2:Math.round(10/(d.resolution/y.resolution)**(-1/w))/10;if(c.storageInfo=new m({blockWidth:p.size[0],blockHeight:p.size[1],pyramidBlockWidth:p.size[0],pyramidBlockHeight:p.size[1],pyramidResolutions:R,pyramidScalingFactor:P,compression:p.format,origin:p.origin,firstPyramidLevel:1,maximumPyramidLevel:w,tileInfo:p,transposeInfo:z,blockBoundary:_}),this._fixGCSShift(c),this._set(\"rasterInfo\",c),o.capabilities.toLowerCase().includes(\"tilemap\")){const e={tileInfo:c.storageInfo.tileInfo,parsedUrl:l(this.url),url:this.url,tileServers:[],type:\"tile\"};this._tilemapCache=new f({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:l,extent:o}=this.rasterInfo,{transposeInfo:n}=l,c=r(n)&&!!s.transposedVariableName;if(this._slices&&!c&&null==s.sliceId)return null;const m=c?0:l.maximumPyramidLevel-e+this._levelOffset,h=`${this.url}/tile/${m}/${t}/${i}`,u=this._slices?c?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:f}=await this.request(h,{query:u,responseType:\"array-buffer\",signal:s.signal});if(!f)return null;const p=c?n.tileSize:l.tileInfo.size,d=await this.decodePixelBlock(f,{width:p[0],height:p[1],planes:null,pixelType:null,isPoint:\"Elevation\"===this.tileType,returnInterleaved:c,noDataValue:a(this.rasterInfo.noDataValue)});if(null==d)return null;const x=l.blockBoundary[e];if(\"jpg\"!==l.compression||i>x.minCol&&i<x.maxCol&&t>x.minRow&&t<x.maxRow)return d;const{origin:g,blockWidth:v,blockHeight:S}=l,{x:I,y:w}=this.getPyramidPixelSize(e),j=Math.round((o.xmin-g.x)/I)%v,T=Math.round((o.xmax-g.x)/I)%v||v,b=Math.round((g.y-o.ymax)/w)%S,M=Math.round((g.y-o.ymin)/w)%S||S,_=i===x.minCol?j:0,R=t===x.minRow?b:0,z=i===x.maxCol?T:v,P=t===x.maxRow?M:S;return y(d,{x:_,y:R},{width:z-_,height:P-R}),d}getSliceIndex(e){if(!this._slices||i(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));if(!i)return!0;return(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+\"/statistics\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+\"/histograms\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,a(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let l=r-s+this._levelOffset;const o=i.srcLocation;for(;l>=0;){try{if(\"available\"===await this._tilemapCache.fetchAvailability(l,i.row,i.col,t))break}catch{}if(l--,s++,i=this.identifyPixelLocation(o,s,a(t.datumTransformation)),null===i)return null}return-1===l||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if(\"Map\"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=g.fromJSON(t.spatialReference||e.spatialReference),a=new v({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new c({width:i,height:s,bandCount:3,extent:S.fromJSON(e),spatialReference:r,pixelSize:a,pixelType:\"u8\",statistics:null,keyProperties:{DataType:\"processed\"}})}const{signal:i}=e,s=x(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:\"json\"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,a=await Promise.all([s,r]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new d,e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:r}=t,a=t.lodAt(Math.max.apply(null,r.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,r.map((e=>e.level)))),{tileType:o}=this;if(\"Map\"===o)return this._levelOffset=r[0].level,[a,l];if(\"Raster\"===o){return[r.find((e=>e.resolution===i.x))??a,l]}const{minScale:n,maxScale:c}=this.sourceJSON;let m=a;c>0&&(m=r.find((e=>Math.abs(e.scale-c)<s)),m||(m=r.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??a));let h=l;return n>0&&(h=r.find((e=>Math.abs(e.scale-n)<s))??l,this._levelOffset=h.level-l.level),[m,h]}};e([o({type:String,json:{write:!0}})],I.prototype,\"datasetFormat\",void 0),e([o()],I.prototype,\"tileType\",void 0),I=e([n(\"esri.layers.support.rasterDatasets.ImageServerRaster\")],I);const w=I;export{w as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}