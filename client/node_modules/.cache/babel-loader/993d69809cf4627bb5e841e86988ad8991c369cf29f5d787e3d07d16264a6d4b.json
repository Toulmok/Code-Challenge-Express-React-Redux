{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { p as e } from \"./mat4.js\";\nimport { c as r } from \"./mat4f64.js\";\nimport { c as a } from \"./vec3f64.js\";\nimport { TextureCoordinateAttribute as o, TextureCoordinateAttributeType as t } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { ReadLinearDepth as i } from \"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";\nimport { Gamma as n } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/Gamma.glsl.js\";\nimport { Float2PassUniform as s } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float3PassUniform as d } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { FloatPassUniform as m } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { NoParameters as c, glsl as l } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4PassUniform as f } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as g } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as p } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { VertexAttribute as h } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nclass u extends c {\n  constructor() {\n    super(...arguments), this.fogColor = a(), this.hazeColor = a(), this.fogStrength = 4e-6, this.hazeStrength = 4e-6, this.atmosphereC = 1, this.fogAmount = 0, this.hazeAmount = 0;\n  }\n}\nfunction v(r) {\n  const a = new g();\n  a.attributes.add(h.POSITION, \"vec2\"), a.include(o, {\n    textureCoordinateType: t.Default\n  }), a.varyings.add(\"worldRay\", \"vec3\"), a.varyings.add(\"eyeDir\", \"vec3\");\n  const {\n    vertex: c,\n    fragment: u\n  } = a;\n  return c.uniforms.add([new f(\"inverseProjectionMatrix\", (e, r) => r.camera.inverseProjectionMatrix), new f(\"inverseViewMatrix\", (r, a) => e(w, a.camera.viewMatrix))]), c.code.add(l`void main(void) {\nvec3 posViewNear = (inverseProjectionMatrix * vec4(position, -1, 1)).xyz;\neyeDir = posViewNear;\nworldRay = (inverseViewMatrix * vec4(posViewNear, 0)).xyz;\nforwardTextureCoordinates();\ngl_Position = vec4(position, 1, 1);\n}`), u.uniforms.add(new m(\"atmosphereC\", e => e.atmosphereC)), u.uniforms.add(new d(\"cameraPosition\", (e, r) => r.camera.eye)), u.uniforms.add(new s(\"nearFar\", (e, r) => r.camera.nearFar)), u.uniforms.add(new p(\"depthTex\", e => e.depthTexture)), u.uniforms.add(new m(\"fogStrength\", e => r.haze ? e.hazeStrength : e.fogStrength)), u.uniforms.add(new m(\"fogAmount\", e => r.haze ? e.hazeAmount : e.fogAmount)), u.uniforms.add(new d(\"fogColor\", e => r.haze ? e.hazeColor : e.fogColor)), a.include(n), u.include(i), u.code.add(l`vec2 sphereIntersect(vec3 start, vec3 dir) {\nfloat a = dot(dir, dir);\nfloat b = 2.0 * dot(dir, start);\nfloat d = (b * b) - 4.0 * a * atmosphereC;\nif (d < 0.0) {\nreturn vec2(1e5, -1e5);\n}\nreturn vec2((-b - sqrt(d)) / (2.0 * a), (-b + sqrt(d)) / (2.0 * a));\n}`), u.code.add(l`vec4 applyFog(float dist, vec3 rayDir){\nif(dist == -1.0){\nvec2 rayAtmosphereIntersect = sphereIntersect(cameraPosition, rayDir);\ndist = 0.055 * rayAtmosphereIntersect.y;\n}\nfloat fogAmount = fogAmount * (1.0 - exp(-dist * fogStrength));\nreturn vec4(fogAmount * fogColor, fogAmount);\n}`), u.code.add(l`\n    vec3 tonemapACES(vec3 x) {\n      return clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14), 0.0, 1.0);\n    }\n\n    void main() {\n      vec3 rayDir = normalize(worldRay);\n      float terrainDepth = -1.0;\n\n      float depthSample = texture2D(depthTex, vuv0).r;\n      float zNorm = 2.0 * depthSample - 1.0;\n      float linDepth = 2.0 * nearFar[0] * nearFar[1] / (nearFar[1] + nearFar[0] - zNorm * (nearFar[1] - nearFar[0]));\n      if(depthSample < 1.0 && depthSample > 0.0){\n        vec3 cameraSpaceRay = normalize(eyeDir);\n        cameraSpaceRay /= cameraSpaceRay.z;\n        cameraSpaceRay *= linDepth;\n        terrainDepth = max(0.0, length(cameraSpaceRay));\n      }\n\n      ${r.haze ? l`\n          if(terrainDepth == -1.0){\n            gl_FragColor = vec4(0);\n            return;\n          }` : \"\"}\n\n      vec4 fog = applyFog(terrainDepth, rayDir);\n\n      gl_FragColor = delinearizeGamma(vec4(tonemapACES(fog.rgb), fog.a));\n    }\n  `), a;\n}\nconst w = r(),\n  y = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    FogHazePassParameters: u,\n    build: v\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { u as F, y as H, v as b };","map":{"version":3,"names":["p","e","c","r","a","TextureCoordinateAttribute","o","TextureCoordinateAttributeType","t","ReadLinearDepth","i","Gamma","n","Float2PassUniform","s","Float3PassUniform","d","FloatPassUniform","m","NoParameters","glsl","l","Matrix4PassUniform","f","ShaderBuilder","g","Texture2DPassUniform","VertexAttribute","h","u","constructor","arguments","fogColor","hazeColor","fogStrength","hazeStrength","atmosphereC","fogAmount","hazeAmount","v","attributes","add","POSITION","include","textureCoordinateType","Default","varyings","vertex","fragment","uniforms","camera","inverseProjectionMatrix","w","viewMatrix","code","eye","nearFar","depthTexture","haze","y","Object","freeze","defineProperty","__proto__","FogHazePassParameters","build","Symbol","toStringTag","value","F","H","b"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/chunks/FogHaze.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{p as e}from\"./mat4.js\";import{c as r}from\"./mat4f64.js\";import{c as a}from\"./vec3f64.js\";import{TextureCoordinateAttribute as o,TextureCoordinateAttributeType as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{ReadLinearDepth as i}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{Gamma as n}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Gamma.glsl.js\";import{Float2PassUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3PassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{FloatPassUniform as m}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{NoParameters as c,glsl as l}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as f}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as g}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as p}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{VertexAttribute as h}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";class u extends c{constructor(){super(...arguments),this.fogColor=a(),this.hazeColor=a(),this.fogStrength=4e-6,this.hazeStrength=4e-6,this.atmosphereC=1,this.fogAmount=0,this.hazeAmount=0}}function v(r){const a=new g;a.attributes.add(h.POSITION,\"vec2\"),a.include(o,{textureCoordinateType:t.Default}),a.varyings.add(\"worldRay\",\"vec3\"),a.varyings.add(\"eyeDir\",\"vec3\");const{vertex:c,fragment:u}=a;return c.uniforms.add([new f(\"inverseProjectionMatrix\",((e,r)=>r.camera.inverseProjectionMatrix)),new f(\"inverseViewMatrix\",((r,a)=>e(w,a.camera.viewMatrix)))]),c.code.add(l`void main(void) {\nvec3 posViewNear = (inverseProjectionMatrix * vec4(position, -1, 1)).xyz;\neyeDir = posViewNear;\nworldRay = (inverseViewMatrix * vec4(posViewNear, 0)).xyz;\nforwardTextureCoordinates();\ngl_Position = vec4(position, 1, 1);\n}`),u.uniforms.add(new m(\"atmosphereC\",(e=>e.atmosphereC))),u.uniforms.add(new d(\"cameraPosition\",((e,r)=>r.camera.eye))),u.uniforms.add(new s(\"nearFar\",((e,r)=>r.camera.nearFar))),u.uniforms.add(new p(\"depthTex\",(e=>e.depthTexture))),u.uniforms.add(new m(\"fogStrength\",(e=>r.haze?e.hazeStrength:e.fogStrength))),u.uniforms.add(new m(\"fogAmount\",(e=>r.haze?e.hazeAmount:e.fogAmount))),u.uniforms.add(new d(\"fogColor\",(e=>r.haze?e.hazeColor:e.fogColor))),a.include(n),u.include(i),u.code.add(l`vec2 sphereIntersect(vec3 start, vec3 dir) {\nfloat a = dot(dir, dir);\nfloat b = 2.0 * dot(dir, start);\nfloat d = (b * b) - 4.0 * a * atmosphereC;\nif (d < 0.0) {\nreturn vec2(1e5, -1e5);\n}\nreturn vec2((-b - sqrt(d)) / (2.0 * a), (-b + sqrt(d)) / (2.0 * a));\n}`),u.code.add(l`vec4 applyFog(float dist, vec3 rayDir){\nif(dist == -1.0){\nvec2 rayAtmosphereIntersect = sphereIntersect(cameraPosition, rayDir);\ndist = 0.055 * rayAtmosphereIntersect.y;\n}\nfloat fogAmount = fogAmount * (1.0 - exp(-dist * fogStrength));\nreturn vec4(fogAmount * fogColor, fogAmount);\n}`),u.code.add(l`\n    vec3 tonemapACES(vec3 x) {\n      return clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14), 0.0, 1.0);\n    }\n\n    void main() {\n      vec3 rayDir = normalize(worldRay);\n      float terrainDepth = -1.0;\n\n      float depthSample = texture2D(depthTex, vuv0).r;\n      float zNorm = 2.0 * depthSample - 1.0;\n      float linDepth = 2.0 * nearFar[0] * nearFar[1] / (nearFar[1] + nearFar[0] - zNorm * (nearFar[1] - nearFar[0]));\n      if(depthSample < 1.0 && depthSample > 0.0){\n        vec3 cameraSpaceRay = normalize(eyeDir);\n        cameraSpaceRay /= cameraSpaceRay.z;\n        cameraSpaceRay *= linDepth;\n        terrainDepth = max(0.0, length(cameraSpaceRay));\n      }\n\n      ${r.haze?l`\n          if(terrainDepth == -1.0){\n            gl_FragColor = vec4(0);\n            return;\n          }`:\"\"}\n\n      vec4 fog = applyFog(terrainDepth, rayDir);\n\n      gl_FragColor = delinearizeGamma(vec4(tonemapACES(fog.rgb), fog.a));\n    }\n  `),a}const w=r(),y=Object.freeze(Object.defineProperty({__proto__:null,FogHazePassParameters:u,build:v},Symbol.toStringTag,{value:\"Module\"}));export{u as F,y as H,v as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}