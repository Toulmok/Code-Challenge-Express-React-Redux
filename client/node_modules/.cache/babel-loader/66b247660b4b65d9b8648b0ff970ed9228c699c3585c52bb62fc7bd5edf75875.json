{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { JSONMap as e } from \"../../../core/jsonMap.js\";\nimport { isNone as t, isSome as i } from \"../../../core/maybe.js\";\nimport { getUnitString as r } from \"../../../core/unitUtils.js\";\nimport { canProjectWithoutEngine as n } from \"../../../geometry/projection.js\";\nimport { getGeometryExtent as o } from \"../../../geometry/support/extentUtils.js\";\nimport { fromJSON as s, isExtent as a, isPolygon as l, isPolyline as m } from \"../../../geometry/support/jsonUtils.js\";\nimport { normalizeCentralMeridian as f } from \"../../../geometry/support/normalizeUtils.js\";\nimport { equals as u, isGeographic as c, isWebMercator as p, WGS84 as y } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { quantizeOptimizedGeometry as g, convertToPoint as S, generalizeOptimizedGeometry as R, removeZMValues as w, convertToPolyline as j, convertToPolygon as h, convertToMultipoint as d } from \"../featureConversionUtils.js\";\nimport x from \"../OptimizedGeometry.js\";\nimport { checkProjectionSupport as U, project as M } from \"./projectionSupport.js\";\nconst O = new e({\n    esriSRUnit_Meter: \"meters\",\n    esriSRUnit_Kilometer: \"kilometers\",\n    esriSRUnit_Foot: \"feet\",\n    esriSRUnit_StatuteMile: \"miles\",\n    esriSRUnit_NauticalMile: \"nautical-miles\",\n    esriSRUnit_USNauticalMile: \"us-nautical-miles\"\n  }),\n  F = Object.freeze({}),\n  N = new x(),\n  _ = new x(),\n  G = new x(),\n  P = {\n    esriGeometryPoint: S,\n    esriGeometryPolyline: j,\n    esriGeometryPolygon: h,\n    esriGeometryMultipoint: d\n  };\nfunction b(e, i, r) {\n  let n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : e.hasZ;\n  let o = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : e.hasM;\n  if (t(i)) return null;\n  const s = e.hasZ && n,\n    a = e.hasM && o;\n  if (r) {\n    const t = g(G, i, e.hasZ, e.hasM, \"esriGeometryPoint\", r, n, o);\n    return S(t, s, a);\n  }\n  return S(i, s, a);\n}\nfunction v(e, r, n, o, s, a) {\n  let l = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : r;\n  let m = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : n;\n  const f = r && l,\n    u = n && m,\n    c = i(o) ? \"coords\" in o ? o : o.geometry : null;\n  if (t(c)) return null;\n  if (s) {\n    let t = R(_, c, r, n, e, s, l, m);\n    return a && (t = g(G, t, f, u, e, a)), P[e]?.(t, f, u) ?? null;\n  }\n  if (a) {\n    const t = g(G, c, r, n, e, a, l, m);\n    return P[e]?.(t, f, u) ?? null;\n  }\n  return w(N, c, r, n, l, m), P[e]?.(N, f, u) ?? null;\n}\nasync function z(e, t, i) {\n  const {\n    outFields: r,\n    orderByFields: n,\n    groupByFieldsForStatistics: o,\n    outStatistics: s\n  } = e;\n  if (r) for (let a = 0; a < r.length; a++) r[a] = r[a].trim();\n  if (n) for (let a = 0; a < n.length; a++) n[a] = n[a].trim();\n  if (o) for (let a = 0; a < o.length; a++) o[a] = o[a].trim();\n  if (s) for (let a = 0; a < s.length; a++) s[a].onStatisticField && (s[a].onStatisticField = s[a].onStatisticField.trim());\n  return e.geometry && !e.outSR && (e.outSR = e.geometry.spatialReference), J(e, t, i);\n}\nasync function J(e, i, r) {\n  if (!e) return null;\n  let {\n    where: n\n  } = e;\n  if (e.where = n = n && n.trim(), (!n || /^1 *= *1$/.test(n) || i && i === n) && (e.where = null), !e.geometry) return e;\n  let a = await Z(e);\n  if (e.distance = 0, e.units = null, \"esriSpatialRelEnvelopeIntersects\" === e.spatialRel) {\n    const {\n      spatialReference: t\n    } = e.geometry;\n    a = o(a), a.spatialReference = t;\n  }\n  if (a) {\n    await U(a.spatialReference, r), a = B(a, r);\n    const i = (await f(s(a)))[0];\n    if (t(i)) throw F;\n    const n = \"quantizationParameters\" in e && e.quantizationParameters?.tolerance || \"maxAllowableOffset\" in e && e.maxAllowableOffset || 0,\n      o = n && A(a, r) ? {\n        densificationStep: 8 * n\n      } : void 0,\n      l = i.toJSON(),\n      m = await M(l, l.spatialReference, r, o);\n    if (!m) throw F;\n    m.spatialReference = r, e.geometry = m;\n  }\n  return e;\n}\nfunction A(e, t) {\n  if (!e) return !1;\n  const i = e.spatialReference;\n  return (a(e) || l(e) || m(e)) && !u(i, t) && !n(i, t);\n}\nfunction B(e, t) {\n  const i = e.spatialReference;\n  return A(e, t) && a(e) ? {\n    spatialReference: i,\n    rings: [[[e.xmin, e.ymin], [e.xmin, e.ymax], [e.xmax, e.ymax], [e.xmax, e.ymin], [e.xmin, e.ymin]]]\n  } : e;\n}\nasync function Z(e) {\n  const {\n      distance: t,\n      units: i\n    } = e,\n    n = e.geometry;\n  if (null == t || \"vertexAttributes\" in n) return n;\n  const o = n.spatialReference,\n    s = i ? O.fromJSON(i) : r(o),\n    a = o && (c(o) || p(o)) ? n : await U(o, y).then(() => M(n, y));\n  return (await q())(a.spatialReference, a, t, s);\n}\nasync function q() {\n  return (await import(\"../../../geometry/geometryEngineJSON.js\")).geodesicBuffer;\n}\nfunction E(e) {\n  return e && k in e ? JSON.parse(JSON.stringify(e, C)) : e;\n}\nconst k = \"_geVersion\",\n  C = (e, t) => e !== k ? t : void 0;\nexport { F as QUERY_ENGINE_EMPTY_RESULT, E as cleanFromGeometryEngine, v as getGeometry, z as normalizeQuery, J as normalizeQueryLike, b as transformCentroid };","map":{"version":3,"names":["JSONMap","e","isNone","t","isSome","i","getUnitString","r","canProjectWithoutEngine","n","getGeometryExtent","o","fromJSON","s","isExtent","a","isPolygon","l","isPolyline","m","normalizeCentralMeridian","f","equals","u","isGeographic","c","isWebMercator","p","WGS84","y","quantizeOptimizedGeometry","g","convertToPoint","S","generalizeOptimizedGeometry","R","removeZMValues","w","convertToPolyline","j","convertToPolygon","h","convertToMultipoint","d","x","checkProjectionSupport","U","project","M","O","esriSRUnit_Meter","esriSRUnit_Kilometer","esriSRUnit_Foot","esriSRUnit_StatuteMile","esriSRUnit_NauticalMile","esriSRUnit_USNauticalMile","F","Object","freeze","N","_","G","P","esriGeometryPoint","esriGeometryPolyline","esriGeometryPolygon","esriGeometryMultipoint","b","arguments","length","undefined","hasZ","hasM","v","geometry","z","outFields","orderByFields","groupByFieldsForStatistics","outStatistics","trim","onStatisticField","outSR","spatialReference","J","where","test","Z","distance","units","spatialRel","B","quantizationParameters","tolerance","maxAllowableOffset","A","densificationStep","toJSON","rings","xmin","ymin","ymax","xmax","then","q","geodesicBuffer","E","k","JSON","parse","stringify","C","QUERY_ENGINE_EMPTY_RESULT","cleanFromGeometryEngine","getGeometry","normalizeQuery","normalizeQueryLike","transformCentroid"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/graphics/data/utils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{JSONMap as e}from\"../../../core/jsonMap.js\";import{isNone as t,isSome as i}from\"../../../core/maybe.js\";import{getUnitString as r}from\"../../../core/unitUtils.js\";import{canProjectWithoutEngine as n}from\"../../../geometry/projection.js\";import{getGeometryExtent as o}from\"../../../geometry/support/extentUtils.js\";import{fromJSON as s,isExtent as a,isPolygon as l,isPolyline as m}from\"../../../geometry/support/jsonUtils.js\";import{normalizeCentralMeridian as f}from\"../../../geometry/support/normalizeUtils.js\";import{equals as u,isGeographic as c,isWebMercator as p,WGS84 as y}from\"../../../geometry/support/spatialReferenceUtils.js\";import{quantizeOptimizedGeometry as g,convertToPoint as S,generalizeOptimizedGeometry as R,removeZMValues as w,convertToPolyline as j,convertToPolygon as h,convertToMultipoint as d}from\"../featureConversionUtils.js\";import x from\"../OptimizedGeometry.js\";import{checkProjectionSupport as U,project as M}from\"./projectionSupport.js\";const O=new e({esriSRUnit_Meter:\"meters\",esriSRUnit_Kilometer:\"kilometers\",esriSRUnit_Foot:\"feet\",esriSRUnit_StatuteMile:\"miles\",esriSRUnit_NauticalMile:\"nautical-miles\",esriSRUnit_USNauticalMile:\"us-nautical-miles\"}),F=Object.freeze({}),N=new x,_=new x,G=new x,P={esriGeometryPoint:S,esriGeometryPolyline:j,esriGeometryPolygon:h,esriGeometryMultipoint:d};function b(e,i,r,n=e.hasZ,o=e.hasM){if(t(i))return null;const s=e.hasZ&&n,a=e.hasM&&o;if(r){const t=g(G,i,e.hasZ,e.hasM,\"esriGeometryPoint\",r,n,o);return S(t,s,a)}return S(i,s,a)}function v(e,r,n,o,s,a,l=r,m=n){const f=r&&l,u=n&&m,c=i(o)?\"coords\"in o?o:o.geometry:null;if(t(c))return null;if(s){let t=R(_,c,r,n,e,s,l,m);return a&&(t=g(G,t,f,u,e,a)),P[e]?.(t,f,u)??null}if(a){const t=g(G,c,r,n,e,a,l,m);return P[e]?.(t,f,u)??null}return w(N,c,r,n,l,m),P[e]?.(N,f,u)??null}async function z(e,t,i){const{outFields:r,orderByFields:n,groupByFieldsForStatistics:o,outStatistics:s}=e;if(r)for(let a=0;a<r.length;a++)r[a]=r[a].trim();if(n)for(let a=0;a<n.length;a++)n[a]=n[a].trim();if(o)for(let a=0;a<o.length;a++)o[a]=o[a].trim();if(s)for(let a=0;a<s.length;a++)s[a].onStatisticField&&(s[a].onStatisticField=s[a].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),J(e,t,i)}async function J(e,i,r){if(!e)return null;let{where:n}=e;if(e.where=n=n&&n.trim(),(!n||/^1 *= *1$/.test(n)||i&&i===n)&&(e.where=null),!e.geometry)return e;let a=await Z(e);if(e.distance=0,e.units=null,\"esriSpatialRelEnvelopeIntersects\"===e.spatialRel){const{spatialReference:t}=e.geometry;a=o(a),a.spatialReference=t}if(a){await U(a.spatialReference,r),a=B(a,r);const i=(await f(s(a)))[0];if(t(i))throw F;const n=\"quantizationParameters\"in e&&e.quantizationParameters?.tolerance||\"maxAllowableOffset\"in e&&e.maxAllowableOffset||0,o=n&&A(a,r)?{densificationStep:8*n}:void 0,l=i.toJSON(),m=await M(l,l.spatialReference,r,o);if(!m)throw F;m.spatialReference=r,e.geometry=m}return e}function A(e,t){if(!e)return!1;const i=e.spatialReference;return(a(e)||l(e)||m(e))&&!u(i,t)&&!n(i,t)}function B(e,t){const i=e.spatialReference;return A(e,t)&&a(e)?{spatialReference:i,rings:[[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]]}:e}async function Z(e){const{distance:t,units:i}=e,n=e.geometry;if(null==t||\"vertexAttributes\"in n)return n;const o=n.spatialReference,s=i?O.fromJSON(i):r(o),a=o&&(c(o)||p(o))?n:await U(o,y).then((()=>M(n,y)));return(await q())(a.spatialReference,a,t,s)}async function q(){return(await import(\"../../../geometry/geometryEngineJSON.js\")).geodesicBuffer}function E(e){return e&&k in e?JSON.parse(JSON.stringify(e,C)):e}const k=\"_geVersion\",C=(e,t)=>e!==k?t:void 0;export{F as QUERY_ENGINE_EMPTY_RESULT,E as cleanFromGeometryEngine,v as getGeometry,z as normalizeQuery,J as normalizeQueryLike,b as transformCentroid};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}