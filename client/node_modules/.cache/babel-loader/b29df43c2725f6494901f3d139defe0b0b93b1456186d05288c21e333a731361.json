{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { readTask } from '@stencil/core/internal/client/index.js';\nconst componentToTransitionListeners = new WeakMap();\nfunction transitionStart(event) {\n  if (event.propertyName === this.openTransitionProp && event.target === this.transitionEl) {\n    this.open ? this.onBeforeOpen() : this.onBeforeClose();\n  }\n}\nfunction transitionEnd(event) {\n  if (event.propertyName === this.openTransitionProp && event.target === this.transitionEl) {\n    this.open ? this.onOpen() : this.onClose();\n  }\n}\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @param component\n * @param nonOpenCloseComponent\n */\nfunction onToggleOpenCloseComponent(component) {\n  let nonOpenCloseComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  readTask(() => {\n    if (component.transitionEl) {\n      const allTransitionPropsArray = getComputedStyle(component.transitionEl).transition.split(\" \");\n      const openTransitionPropIndex = allTransitionPropsArray.findIndex(item => item === component.openTransitionProp);\n      const transitionDuration = allTransitionPropsArray[openTransitionPropIndex + 1];\n      if (transitionDuration === \"0s\") {\n        (nonOpenCloseComponent ? component[component.transitionProp] : component.open) ? component.onBeforeOpen() : component.onBeforeClose();\n        (nonOpenCloseComponent ? component[component.transitionProp] : component.open) ? component.onOpen() : component.onClose();\n      } else {\n        component.transitionEl.addEventListener(\"transitionstart\", () => {\n          (nonOpenCloseComponent ? component[component.transitionProp] : component.open) ? component.onBeforeOpen() : component.onBeforeClose();\n        }, {\n          once: true\n        });\n        component.transitionEl.addEventListener(\"transitionend\", () => {\n          (nonOpenCloseComponent ? component[component.transitionProp] : component.open) ? component.onOpen() : component.onClose();\n        }, {\n          once: true\n        });\n      }\n    }\n  });\n}\n/**\n * Helper to keep track of transition listeners on setTransitionEl and connectedCallback on OpenCloseComponent components.\n *\n * For component which do not have open prop, use `onToggleOpenCloseComponent` implementation.\n *\n * @param component\n */\nfunction connectOpenCloseComponent(component) {\n  disconnectOpenCloseComponent(component);\n  if (component.transitionEl) {\n    const boundOnTransitionStart = transitionStart.bind(component);\n    const boundOnTransitionEnd = transitionEnd.bind(component);\n    componentToTransitionListeners.set(component, [component.transitionEl, boundOnTransitionStart, boundOnTransitionEnd]);\n    component.transitionEl.addEventListener(\"transitionstart\", boundOnTransitionStart);\n    component.transitionEl.addEventListener(\"transitionend\", boundOnTransitionEnd);\n  }\n}\n/**\n * Helper to tear down transition listeners on disconnectedCallback on OpenCloseComponent components.\n *\n * @param component\n */\nfunction disconnectOpenCloseComponent(component) {\n  if (!componentToTransitionListeners.has(component)) {\n    return;\n  }\n  const [transitionEl, start, end] = componentToTransitionListeners.get(component);\n  transitionEl.removeEventListener(\"transitionstart\", start);\n  transitionEl.removeEventListener(\"transitionend\", end);\n  componentToTransitionListeners.delete(component);\n}\nexport { connectOpenCloseComponent as c, disconnectOpenCloseComponent as d, onToggleOpenCloseComponent as o };","map":{"version":3,"names":["readTask","componentToTransitionListeners","WeakMap","transitionStart","event","propertyName","openTransitionProp","target","transitionEl","open","onBeforeOpen","onBeforeClose","transitionEnd","onOpen","onClose","onToggleOpenCloseComponent","component","nonOpenCloseComponent","arguments","length","undefined","allTransitionPropsArray","getComputedStyle","transition","split","openTransitionPropIndex","findIndex","item","transitionDuration","transitionProp","addEventListener","once","connectOpenCloseComponent","disconnectOpenCloseComponent","boundOnTransitionStart","bind","boundOnTransitionEnd","set","has","start","end","get","removeEventListener","delete","c","d","o"],"sources":["C:/code-challenge-react/frontend/node_modules/@esri/calcite-components/dist/components/openCloseComponent.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { readTask } from '@stencil/core/internal/client/index.js';\n\nconst componentToTransitionListeners = new WeakMap();\nfunction transitionStart(event) {\n  if (event.propertyName === this.openTransitionProp && event.target === this.transitionEl) {\n    this.open ? this.onBeforeOpen() : this.onBeforeClose();\n  }\n}\nfunction transitionEnd(event) {\n  if (event.propertyName === this.openTransitionProp && event.target === this.transitionEl) {\n    this.open ? this.onOpen() : this.onClose();\n  }\n}\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @param component\n * @param nonOpenCloseComponent\n */\nfunction onToggleOpenCloseComponent(component, nonOpenCloseComponent = false) {\n  readTask(() => {\n    if (component.transitionEl) {\n      const allTransitionPropsArray = getComputedStyle(component.transitionEl).transition.split(\" \");\n      const openTransitionPropIndex = allTransitionPropsArray.findIndex((item) => item === component.openTransitionProp);\n      const transitionDuration = allTransitionPropsArray[openTransitionPropIndex + 1];\n      if (transitionDuration === \"0s\") {\n        (nonOpenCloseComponent ? component[component.transitionProp] : component.open)\n          ? component.onBeforeOpen()\n          : component.onBeforeClose();\n        (nonOpenCloseComponent ? component[component.transitionProp] : component.open)\n          ? component.onOpen()\n          : component.onClose();\n      }\n      else {\n        component.transitionEl.addEventListener(\"transitionstart\", () => {\n          (nonOpenCloseComponent ? component[component.transitionProp] : component.open)\n            ? component.onBeforeOpen()\n            : component.onBeforeClose();\n        }, { once: true });\n        component.transitionEl.addEventListener(\"transitionend\", () => {\n          (nonOpenCloseComponent ? component[component.transitionProp] : component.open)\n            ? component.onOpen()\n            : component.onClose();\n        }, { once: true });\n      }\n    }\n  });\n}\n/**\n * Helper to keep track of transition listeners on setTransitionEl and connectedCallback on OpenCloseComponent components.\n *\n * For component which do not have open prop, use `onToggleOpenCloseComponent` implementation.\n *\n * @param component\n */\nfunction connectOpenCloseComponent(component) {\n  disconnectOpenCloseComponent(component);\n  if (component.transitionEl) {\n    const boundOnTransitionStart = transitionStart.bind(component);\n    const boundOnTransitionEnd = transitionEnd.bind(component);\n    componentToTransitionListeners.set(component, [\n      component.transitionEl,\n      boundOnTransitionStart,\n      boundOnTransitionEnd\n    ]);\n    component.transitionEl.addEventListener(\"transitionstart\", boundOnTransitionStart);\n    component.transitionEl.addEventListener(\"transitionend\", boundOnTransitionEnd);\n  }\n}\n/**\n * Helper to tear down transition listeners on disconnectedCallback on OpenCloseComponent components.\n *\n * @param component\n */\nfunction disconnectOpenCloseComponent(component) {\n  if (!componentToTransitionListeners.has(component)) {\n    return;\n  }\n  const [transitionEl, start, end] = componentToTransitionListeners.get(component);\n  transitionEl.removeEventListener(\"transitionstart\", start);\n  transitionEl.removeEventListener(\"transitionend\", end);\n  componentToTransitionListeners.delete(component);\n}\n\nexport { connectOpenCloseComponent as c, disconnectOpenCloseComponent as d, onToggleOpenCloseComponent as o };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}