{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport t from \"../../Graphic.js\";\nimport { rasterRendererTypes as i, websceneRasterRendererTypes as r, read as s } from \"../../rasterRenderers.js\";\nimport n from \"../../request.js\";\nimport o from \"../../core/Error.js\";\nimport { strict as a } from \"../../core/jsonMap.js\";\nimport { clone as l } from \"../../core/lang.js\";\nimport u from \"../../core/Logger.js\";\nimport { isSome as p, isNone as c, unwrap as m } from \"../../core/maybe.js\";\nimport { watch as d } from \"../../core/reactiveUtils.js\";\nimport { urlToObject as h } from \"../../core/urlUtils.js\";\nimport { property as f, ensureRange as g } from \"../../core/accessorSupport/decorators/property.js\";\nimport { Integer as y, ensureClass as R, ensureNumber as b } from \"../../core/accessorSupport/ensureType.js\";\nimport { reader as S } from \"../../core/accessorSupport/decorators/reader.js\";\nimport { subclass as v } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { writer as x } from \"../../core/accessorSupport/decorators/writer.js\";\nimport { opacity as I, url as w } from \"../support/commonProperties.js\";\nimport _ from \"../support/DimensionalDefinition.js\";\nimport { ExportImageServiceParameters as F } from \"../support/ExportImageServiceParameters.js\";\nimport D from \"../support/Field.js\";\nimport j from \"../support/FieldsIndex.js\";\nimport { createBitmap as P } from \"../support/imageBitmapUtils.js\";\nimport { isSupportedRendererType as T } from \"../support/imageryRendererUtils.js\";\nimport O from \"../support/MosaicRule.js\";\nimport N from \"../support/MultidimensionalSubset.js\";\nimport C from \"../support/PixelBlock.js\";\nimport { interpolationKebab as M, noDataInterpretationKebab as A } from \"../support/rasterEnums.js\";\nimport J from \"../support/RasterFunction.js\";\nimport q from \"../support/RasterInfo.js\";\nimport E from \"../support/RasterJobHandler.js\";\nimport { intersectMultimensionalSubset as V, getSubsetVariablesFromMdInfo as H, getDefaultMultidimensionalDefinition as Q } from \"../support/rasterDatasets/multidimensionalUtils.js\";\nimport { decode as U, getFormat as L } from \"../support/rasterFormats/RasterCodec.js\";\nimport { uvComponentToVector as z } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { getSupportedRendererTypes as B, getDefaultBandCombination as k, createDefaultRenderer as G, normalizeRendererJSON as W } from \"../../renderers/support/rasterRendererHelper.js\";\nimport $ from \"../../renderers/support/RasterSymbolizer.js\";\nimport { computeAngles as K, computePixelSpaceLocations as X, computeHistograms as Y, computeStatisticsHistograms as Z, measureHeight as ee, measureAreaAndPerimeter as te, measureDistanceAndAngle as ie, measurePointOrCentroid as re, getImageSpatialReferenceQueryParameter as se, getSamples as ne, identify as oe } from \"../../rest/imageService.js\";\nimport \"../../core/has.js\";\nimport \"../support/source/DataLayerSource.js\";\nimport { executeQueryJSON as ae } from \"../../rest/query/executeQueryJSON.js\";\nimport \"../../config.js\";\nimport \"../../kernel.js\";\nimport \"../../core/unitUtils.js\";\nimport \"../../geometry/support/spatialReferenceUtils.js\";\nimport \"../graphics/featureConversionUtils.js\";\nimport le from \"../../geometry/Extent.js\";\nimport \"../../geometry/Geometry.js\";\nimport \"../../geometry/Multipoint.js\";\nimport \"../../geometry/Point.js\";\nimport ue from \"../../geometry/Polygon.js\";\nimport \"../../geometry/Polyline.js\";\nimport \"../../geometry/support/normalizeUtils.js\";\nimport \"../../core/pbf.js\";\nimport pe from \"../../rest/support/FeatureSet.js\";\nimport ce from \"../../rest/support/Query.js\";\nimport \"../../rest/query/support/AttachmentInfo.js\";\nimport \"../../rest/support/AttachmentQuery.js\";\nimport { executeForCount as me } from \"../../rest/query/executeForCount.js\";\nimport { executeForIds as de } from \"../../rest/query/executeForIds.js\";\nimport \"../../rest/support/RelationshipQuery.js\";\nimport \"../../rest/support/TopFeaturesQuery.js\";\nimport { fetchServiceRasterInfo as he, generateRasterInfo as fe } from \"../../rest/imageService/fetchRasterInfo.js\";\nimport { getCatalogItemRasterInfo as ge } from \"../../rest/imageService/getCatalogItemRasterInfo.js\";\nimport ye from \"../../rest/support/ImageAngleParameters.js\";\nimport Re from \"../../rest/support/ImageAreaParameters.js\";\nimport be from \"../../rest/support/ImageDistanceParameters.js\";\nimport Se from \"../../rest/support/ImageHeightParameters.js\";\nimport ve from \"../../rest/support/ImageHistogramParameters.js\";\nimport xe from \"../../rest/support/ImageIdentifyParameters.js\";\nimport Ie from \"../../rest/support/ImagePixelLocationParameters.js\";\nimport we from \"../../rest/support/ImagePointParameters.js\";\nimport _e from \"../../rest/support/ImageSampleParameters.js\";\nimport { createFlowMesh as Fe } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport De from \"../../geometry/SpatialReference.js\";\nconst je = a()({\n    U1: \"u1\",\n    U2: \"u2\",\n    U4: \"u4\",\n    U8: \"u8\",\n    S8: \"s8\",\n    U16: \"u16\",\n    S16: \"s16\",\n    U32: \"u32\",\n    S32: \"s32\",\n    F32: \"f32\",\n    F64: \"f64\",\n    C64: \"c64\",\n    C128: \"c128\",\n    UNKNOWN: \"unknown\"\n  }),\n  Pe = new Set([\"png\", \"png8\", \"png24\", \"png32\", \"jpg\", \"bmp\", \"gif\", \"jpgpng\", \"lerc\", \"tiff\"]),\n  Te = g(b, {\n    min: 0,\n    max: 255\n  });\nfunction Oe(e) {\n  if (!e) return null;\n  const t = JSON.stringify(e).match(/\"rasterFunction\":\"(.*?\")/gi)?.map(e => e.replace('\"rasterFunction\":\"', \"\").replace('\"', \"\"));\n  return t ? t.join(\"/\") : null;\n}\nconst Ne = a => {\n  let g = class extends a {\n    constructor() {\n      super(...arguments), this._functionRasterInfos = {}, this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this._cachedRendererJson = null, this._serviceSupportsMosaicRule = null, this._rasterAttributeTableFieldPrefix = \"Raster.\", this.adjustAspectRatio = null, this.bandIds = void 0, this.capabilities = null, this.compressionQuality = void 0, this.compressionTolerance = .01, this.copyright = null, this.defaultMosaicRule = null, this.definitionExpression = null, this.exportImageServiceParameters = null, this.rasterInfo = null, this.fields = null, this.fullExtent = null, this.hasMultidimensions = !1, this.imageMaxHeight = 4100, this.imageMaxWidth = 4100, this.interpolation = void 0, this.minScale = 0, this.maxScale = 0, this.multidimensionalInfo = null, this.multidimensionalSubset = null, this.noData = null, this.noDataInterpretation = void 0, this.objectIdField = null, this.geometryType = \"polygon\", this.typeIdField = null, this.types = [], this.pixelFilter = null, this.raster = void 0, this.sourceType = null, this.viewId = void 0, this.symbolizer = null, this.rasterFunctionInfos = null, this.serviceDataType = null, this.spatialReference = null, this.pixelType = null, this.serviceRasterInfo = null, this.sourceJSON = null, this.url = null, this.version = void 0;\n    }\n    initialize() {\n      this._set(\"exportImageServiceParameters\", new F({\n        layer: this\n      }));\n    }\n    readServiceSupportsMosaicRule(e, t) {\n      return this._isMosaicRuleSupported(t);\n    }\n    get _rasterFunctionNamesIndex() {\n      const e = new Map();\n      return !this.rasterFunctionInfos || p(this.rasterFunctionInfos) && this.rasterFunctionInfos.length < 1 || p(this.rasterFunctionInfos) && this.rasterFunctionInfos.forEach(t => {\n        e.set(t.name.toLowerCase().replace(/ /gi, \"_\"), t.name);\n      }), e;\n    }\n    readBandIds(e, t) {\n      if (Array.isArray(e) && e.length > 0 && e.every(e => \"number\" == typeof e)) return e;\n    }\n    readCapabilities(e, t) {\n      return this._readCapabilities(t);\n    }\n    writeCompressionQuality(e, t, i) {\n      null != e && \"lerc\" !== this.format && (t[i] = e);\n    }\n    writeCompressionTolerance(e, t, i) {\n      \"lerc\" === this.format && null != e && (t[i] = e);\n    }\n    readDefaultMosaicRule(e, t) {\n      return this._serviceSupportsMosaicRule ? O.fromJSON(t) : null;\n    }\n    get fieldsIndex() {\n      return this.fields ? new j(this.fields) : null;\n    }\n    set format(e) {\n      e && Pe.has(e.toLowerCase()) && this._set(\"format\", e.toLowerCase());\n    }\n    readFormat(e, t) {\n      return \"esriImageServiceDataTypeVector-UV\" === t.serviceDataType || \"esriImageServiceDataTypeVector-MagDir\" === t.serviceDataType || null != this.pixelFilter ? \"lerc\" : \"jpgpng\";\n    }\n    readMinScale(e, t) {\n      return null != t.minLOD && null != t.maxLOD ? e : 0;\n    }\n    readMaxScale(e, t) {\n      return null != t.minLOD && null != t.maxLOD ? e : 0;\n    }\n    set mosaicRule(e) {\n      let t = e;\n      t && t.mosaicMethod && (t = O.fromJSON({\n        ...t.toJSON(),\n        mosaicMethod: t.mosaicMethod,\n        mosaicOperation: t.mosaicOperation\n      })), this._set(\"mosaicRule\", t);\n    }\n    readMosaicRule(e, t) {\n      const i = e || t.mosaicRule;\n      return i ? O.fromJSON(i) : this._isMosaicRuleSupported(t) ? O.fromJSON(t) : null;\n    }\n    writeMosaicRule(e, t, i) {\n      let r = this.mosaicRule;\n      const s = this.definitionExpression;\n      r ? s && s !== r.where && (r = r.clone(), r.where = s) : s && (r = new O({\n        where: s\n      })), this._isValidCustomizedMosaicRule(r) && (t[i] = r.toJSON());\n    }\n    writeNoData(e, t, i) {\n      null != e && \"number\" == typeof e && (t[i] = Te(e));\n    }\n    readObjectIdField(e, t) {\n      if (!e) {\n        const i = t.fields.filter(e => \"esriFieldTypeOID\" === e.type || \"oid\" === e.type);\n        e = i && i[0] && i[0].name;\n      }\n      return e;\n    }\n    get parsedUrl() {\n      return h(this.url);\n    }\n    readSourceType(e, t) {\n      return this._isMosaicDataset(t) ? \"mosaic-dataset\" : \"raster-dataset\";\n    }\n    set renderer(e) {\n      this.loaded && (e = this._configRenderer(e)), this._set(\"renderer\", e);\n    }\n    readRenderer(e, t, i) {\n      const r = t?.layerDefinition?.drawingInfo?.renderer,\n        n = s(r, i);\n      return null == n ? null : (\"vector-field\" === n.type && t.symbolTileSize && !r.symbolTileSize && (n.symbolTileSize = t.symbolTileSize), T(n) || u.getLogger(this.declaredClass).warn(\"ArcGISImageService\", \"Imagery layer doesn't support given renderer type.\"), n);\n    }\n    writeRenderer(e, t, i) {\n      t.layerDefinition = t.layerDefinition || {}, t.layerDefinition.drawingInfo = t.layerDefinition.drawingInfo || {}, t.layerDefinition.drawingInfo.renderer = e.toJSON(), \"vector-field\" === e.type && (t.symbolTileSize = e.symbolTileSize);\n    }\n    get rasterFields() {\n      const e = this._rasterAttributeTableFieldPrefix || \"Raster.\",\n        t = new D({\n          name: \"Raster.ItemPixelValue\",\n          alias: \"Item Pixel Value\",\n          domain: null,\n          editable: !1,\n          length: 50,\n          type: \"string\"\n        }),\n        i = new D({\n          name: \"Raster.ServicePixelValue\",\n          alias: \"Service Pixel Value\",\n          domain: null,\n          editable: !1,\n          length: 50,\n          type: \"string\"\n        }),\n        r = new D({\n          name: \"Raster.ServicePixelValue.Raw\",\n          alias: \"Raw Service Pixel Value\",\n          domain: null,\n          editable: !1,\n          length: 50,\n          type: \"string\"\n        });\n      let s = this.fields ? l(this.fields) : [];\n      s.push(i), this.capabilities?.operations.supportsQuery && this.fields && this.fields.length > 0 && s.push(t), this.version >= 10.4 && p(this.rasterFunctionInfos) && this.rasterFunctionInfos.some(e => \"none\" === e.name.toLowerCase()) && s.push(r), p(this.rasterFunctionInfos) && this.rasterFunctionInfos.filter(e => \"none\" !== e.name.toLowerCase()).forEach(e => {\n        s.push(new D({\n          name: \"Raster.ServicePixelValue.\" + e.name,\n          alias: e.name,\n          domain: null,\n          editable: !1,\n          length: 50,\n          type: \"string\"\n        }));\n      }), this._isVectorDataSet() && (s.push(new D({\n        name: \"Raster.Magnitude\",\n        alias: \"Magnitude\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })), s.push(new D({\n        name: \"Raster.Direction\",\n        alias: \"Direction\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })));\n      const {\n        attributeTable: n\n      } = this.rasterInfo ?? {};\n      if (p(n)) {\n        const t = n.fields.filter(e => \"esriFieldTypeOID\" !== e.type && \"value\" !== e.name.toLowerCase()).map(t => {\n          const i = l(t);\n          return i.name = e + t.name, i;\n        });\n        s = s.concat(t);\n      }\n      return s;\n    }\n    set renderingRule(e) {\n      let t = e;\n      t && t.rasterFunction && (t = J.fromJSON({\n        ...t.toJSON(),\n        rasterFunction: t.rasterFunction,\n        rasterFunctionArguments: t.rasterFunctionArguments\n      })), this._set(\"renderingRule\", t);\n    }\n    readRenderingRule(e, t) {\n      const i = t.rasterFunctionInfos;\n      return t.renderingRule || i && i.length && \"None\" !== i[0].name ? this._isRFTJson(t.renderingRule) ? J.fromJSON({\n        rasterFunctionDefinition: t.renderingRule\n      }) : J.fromJSON(t.renderingRule || {\n        rasterFunctionInfos: t.rasterFunctionInfos\n      }) : null;\n    }\n    writeRenderingRule(e, t, i) {\n      const r = e.toJSON();\n      r.rasterFunctionDefinition ? t[i] = r.rasterFunctionDefinition : t[i] = r;\n    }\n    readSpatialReference(e, t) {\n      const i = e || t.extent.spatialReference;\n      return i ? De.fromJSON(i) : null;\n    }\n    readPixelType(e) {\n      return je.fromJSON(e) || e;\n    }\n    writePixelType(e, t, i) {\n      (c(this.serviceRasterInfo) || this.pixelType !== this.serviceRasterInfo.pixelType) && (t[i] = je.toJSON(e));\n    }\n    readVersion(e, t) {\n      let i = t.currentVersion;\n      return i || (i = t.hasOwnProperty(\"fields\") || t.hasOwnProperty(\"timeInfo\") ? 10 : 9.3), i;\n    }\n    applyFilter(e) {\n      let t = e;\n      return this.pixelFilter && (t = this._clonePixelData(e), this.pixelFilter(t)), t;\n    }\n    async applyRenderer(e, t) {\n      let i = e;\n      const {\n        renderer: r,\n        symbolizer: s,\n        pixelFilter: n,\n        bandIds: o\n      } = this;\n      if (!this._isPicture() && r && s && !n) {\n        const n = JSON.stringify(this._cachedRendererJson) !== JSON.stringify(r.toJSON()),\n          a = this._rasterJobHandler.instance;\n        if (a) {\n          n && (s.bind(), await a.updateSymbolizer(s, t), this._cachedRendererJson = r.toJSON());\n          const l = await a.symbolize({\n            bandIds: o,\n            ...e\n          }, t);\n          i = {\n            extent: e.extent,\n            pixelBlock: l\n          };\n        } else i = {\n          extent: e.extent,\n          pixelBlock: s.symbolize({\n            bandIds: o,\n            ...e\n          })\n        };\n      }\n      return i;\n    }\n    destroy() {\n      this._shutdownJobHandler();\n    }\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n    async computeAngles(e, t) {\n      if (!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles) throw new o(\"imagery-layer:compute-angles\", \"this operation is not supported on the input image service\");\n      return e = R(ye, e).clone(), K(this.url, e, this._getRequestOptions(t));\n    }\n    async computePixelSpaceLocations(e, t) {\n      if (!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation) throw new o(\"imagery-layer:compute-pixel-space-locations\", \"this operation is not supported on the input image service\");\n      return e = R(Ie, e).clone(), X(this.url, e, this._getRequestOptions(t));\n    }\n    async computeHistograms(e, t) {\n      if (!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms) throw new o(\"imagery-layer:compute-histograms\", \"this operation is not supported on the input image service\");\n      return e = R(ve, e).clone(), this._applyMosaicAndRenderingRules(e), Y(this.url, e, this._getRequestOptions(t));\n    }\n    async computeStatisticsHistograms(e, t) {\n      if (!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms) throw new o(\"imagery-layer:compute-statistics-histograms\", \"this operation is not supported on the input image service\");\n      return e = R(ve, e).clone(), this._applyMosaicAndRenderingRules(e), Z(this.url, e, this._getRequestOptions(t));\n    }\n    async measureHeight(e, t) {\n      const i = await this._fetchCapabilities(t?.signal);\n      if (!(\"base-and-top\" === e.operationType ? i.mensuration.supportsHeightFromBaseAndTop : \"base-and-top-shadow\" === e.operationType ? i.mensuration.supportsHeightFromBaseAndTopShadow : i.mensuration.supportsHeightFromTopAndTopShadow)) throw new o(\"imagery-layer:measure-height\", \"this operation is not supported on the input image service\");\n      return e = R(Se, e).clone(), this._applyMosaicAndRenderingRules(e), ee(this.url, e, this._getRequestOptions(t));\n    }\n    async measureAreaAndPerimeter(e, t) {\n      const i = await this._fetchCapabilities(t?.signal);\n      if (!(i.mensuration.supportsAreaAndPerimeter && (!e.is3D || i.mensuration.supports3D))) throw new o(\"imagery-layer:measure-area-and-perimeter\", \"this operation is not supported on the input image service\");\n      return e = R(Re, e).clone(), this._applyMosaicAndRenderingRules(e), te(this.url, e, this._getRequestOptions(t));\n    }\n    async measureDistanceAndAngle(e, t) {\n      const i = await this._fetchCapabilities(t?.signal);\n      if (!(i.mensuration.supportsDistanceAndAngle && (!e.is3D || i.mensuration.supports3D))) throw new o(\"imagery-layer:measure-distance-and-angle\", \"this operation is not supported on the input image service\");\n      return e = R(be, e).clone(), this._applyMosaicAndRenderingRules(e), ie(this.url, e, this._getRequestOptions(t));\n    }\n    async measurePointOrCentroid(e, t) {\n      const i = await this._fetchCapabilities(t?.signal);\n      if (!(i.mensuration.supportsPointOrCentroid && (!e.is3D || i.mensuration.supports3D))) throw new o(\"imagery-layer:measure-point-or-centroid\", \"this operation is not supported on the input image service\");\n      return e = R(we, e).clone(), this._applyMosaicAndRenderingRules(e), re(this.url, e, this._getRequestOptions(t));\n    }\n    getField(e) {\n      const {\n        fieldsIndex: t\n      } = this;\n      return p(t) ? t.get(e) : void 0;\n    }\n    getFieldDomain(e, t) {\n      const i = this.getField(e);\n      return i ? i.domain : null;\n    }\n    async fetchImage(e, t, i) {\n      let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (null == e || null == t || null == i) throw new o(\"imagery-layer:fetch-image\", \"Insufficient parameters for requesting an image. A valid extent, width and height values are required.\");\n      if (this.renderer || this.symbolizer) {\n        const e = await this.generateRasterInfo(this.renderingRule, {\n          signal: r.signal\n        });\n        e && (this.rasterInfo = e);\n      }\n      const s = this.getExportImageServiceParameters(e, t, i, r.timeExtent);\n      if (null == s) {\n        if (r.requestAsImageElement && this._canRequestImageElement(this.format)) {\n          const e = document.createElement(\"canvas\");\n          if (e.width = t, e.height = i, r.returnImageBitmap) {\n            return {\n              imageBitmap: await P(e, `${b(this.parsedUrl)}/exportImage`)\n            };\n          }\n          return {\n            imageOrCanvasElement: e\n          };\n        }\n        const {\n            bandIds: s,\n            rasterInfo: n\n          } = this,\n          o = (s?.length || n.bandCount) ?? 0,\n          a = t * i,\n          l = n.pixelType,\n          u = [];\n        for (let e = 0; e < o; e++) u.push(C.createEmptyBand(l, a));\n        return {\n          pixelData: {\n            pixelBlock: new C({\n              width: t,\n              height: i,\n              pixels: u,\n              mask: new Uint8Array(a),\n              pixelType: l\n            }),\n            extent: e\n          }\n        };\n      }\n      const n = !!r.requestAsImageElement && !this.pixelFilter,\n        a = n && !!r.returnImageBitmap,\n        l = {\n          imageServiceParameters: s,\n          imageProps: {\n            extent: e,\n            width: t,\n            height: i,\n            format: this.format\n          },\n          requestAsImageElement: n,\n          returnImageBitmap: a,\n          signal: r.signal\n        };\n      return this._requestArrayBuffer(l);\n    }\n    fetchKeyProperties(e) {\n      return n(b(this.parsedUrl) + \"/keyProperties\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.3 ? e?.renderingRule : null\n        })\n      }).then(e => e.data);\n    }\n    fetchRasterAttributeTable(e) {\n      return this.version < 10.1 ? Promise.reject(new o(\"#fetchRasterAttributeTable()\", \"Failed to get rasterAttributeTable\")) : n(b(this.parsedUrl) + \"/rasterAttributeTable\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.3 ? e?.renderingRule : null\n        })\n      }).then(e => pe.fromJSON(e.data));\n    }\n    getCatalogItemRasterInfo(e, t) {\n      const i = {\n        ...t,\n        query: this._getQueryParams()\n      };\n      return ge(b(this.parsedUrl), e, i);\n    }\n    async getCatalogItemICSInfo(e, t) {\n      const {\n          data: i\n        } = await n(b(this.parsedUrl) + \"/\" + e + \"/info/ics\", {\n          query: this._getQueryParams(),\n          ...t\n        }),\n        r = i && i.ics;\n      if (!r) return;\n      let s = null;\n      try {\n        s = (await n(b(this.parsedUrl) + \"/\" + e + \"/info\", {\n          query: this._getQueryParams(),\n          ...t\n        })).data.extent;\n      } catch {}\n      if (!s || !s.spatialReference) return {\n        ics: r,\n        icsToPixelTransform: null,\n        icsExtent: null,\n        northDirection: null\n      };\n      const o = this.version >= 10.7 ? n(b(this.parsedUrl) + \"/\" + e + \"/info/icstopixel\", {\n          query: this._getQueryParams(),\n          ...t\n        }).then(e => e.data).catch(() => ({})) : {},\n        a = s.spatialReference,\n        l = {\n          geometries: JSON.stringify({\n            geometryType: \"esriGeometryEnvelope\",\n            geometries: [s]\n          }),\n          inSR: a.wkid || JSON.stringify(a),\n          outSR: \"0:\" + e\n        },\n        u = n(b(this.parsedUrl) + \"/project\", {\n          query: this._getQueryParams(l),\n          ...t\n        }).then(e => e.data).catch(() => ({})),\n        p = 5,\n        c = (s.xmin + s.xmax) / 2,\n        m = (s.ymax - s.ymin) / (p + 1),\n        d = s.ymin + m,\n        h = [];\n      for (let n = 0; n < p; n++) h.push({\n        x: c,\n        y: d + m * n\n      });\n      const f = {\n          geometries: JSON.stringify({\n            geometryType: \"esriGeometryPoint\",\n            geometries: h\n          }),\n          inSR: a.wkid || JSON.stringify(a),\n          outSR: \"0:\" + e\n        },\n        g = n(b(this.parsedUrl) + \"/project\", {\n          query: this._getQueryParams(f),\n          ...t\n        }).then(e => e.data).catch(() => ({})),\n        y = await Promise.all([o, u, g]);\n      let R = y[0].ipxf;\n      if (null == R) {\n        const e = r.geodataXform?.xf_0;\n        \"topup\" === e?.name?.toLowerCase() && 6 === e?.coefficients?.length && (R = {\n          affine: {\n            name: \"ics [sensor: Frame] to pixel (column, row) transformation\",\n            coefficients: e.coefficients,\n            cellsizeRatio: 0,\n            type: \"GeometricXform\"\n          }\n        });\n      }\n      const S = le.fromJSON(y[1] && y[1].geometries && y[1].geometries[0]);\n      S && (S.spatialReference = new De({\n        wkid: 0,\n        imageCoordinateSystem: r\n      }));\n      const v = y[2].geometries ? y[2].geometries.filter(e => null != e && null != e.x && null != e.y && \"NaN\" !== e.x && \"NaN\" !== e.y) : [],\n        x = v.length;\n      if (x < 3) return {\n        ics: r,\n        icsToPixelTransform: R,\n        icsExtent: S,\n        northDirection: null\n      };\n      let I = 0,\n        w = 0,\n        _ = 0,\n        F = 0;\n      for (let n = 0; n < x; n++) I += v[n].x, w += v[n].y, _ += v[n].x * v[n].x, F += v[n].x * v[n].y;\n      const D = (x * F - I * w) / (x * _ - I * I);\n      let j = 0;\n      const P = v[p - 1].x > v[0].x,\n        T = v[p - 1].y > v[0].y;\n      return D === 1 / 0 ? j = T ? 90 : 270 : 0 === D ? j = P ? 0 : 180 : D > 0 ? j = P ? 180 * Math.atan(D) / Math.PI : 180 * Math.atan(D) / Math.PI + 180 : D < 0 && (j = T ? 180 + 180 * Math.atan(D) / Math.PI : 360 + 180 * Math.atan(D) / Math.PI), {\n        ics: r,\n        icsToPixelTransform: R,\n        icsExtent: S,\n        northDirection: j\n      };\n    }\n    async generateRasterInfo(e, t) {\n      if (e = R(J, e), this.serviceRasterInfo && (!e || \"none\" === e.functionName?.toLowerCase() || this._isVectorFieldResampleFunction(e))) return this.serviceRasterInfo;\n      const i = Oe(e);\n      if (!i) return null;\n      if (this._functionRasterInfos[i]) return this._functionRasterInfos[i];\n      const r = this._generateRasterInfo(e, t);\n      this._functionRasterInfos[i] = r;\n      try {\n        return await r;\n      } catch {\n        return this._functionRasterInfos[i] = null, null;\n      }\n    }\n    getExportImageServiceParameters(e, t, i, r) {\n      e = e.clone().shiftCentralMeridian();\n      const s = se(e.spatialReference, b(this.parsedUrl));\n      this.pixelType !== this.serviceRasterInfo.pixelType && (this.exportImageServiceParameters.pixelType = this.pixelType);\n      const n = this.exportImageServiceParameters.toJSON(),\n        {\n          bandIds: o,\n          noData: a\n        } = n;\n      let {\n        renderingRule: l\n      } = n;\n      const u = this.renderingRule?.rasterFunctionDefinition,\n        c = !this.renderer || \"raster-stretch\" === this.renderer.type;\n      if (o?.length && this._hasRenderingRule(this.renderingRule) && !u && c) {\n        const e = {\n          rasterFunction: \"ExtractBand\",\n          rasterFunctionArguments: {\n            BandIds: o\n          }\n        };\n        if (\"Stretch\" === l.rasterFunction) e.rasterFunctionArguments.Raster = l.rasterFunctionArguments.Raster, l.rasterFunctionArguments.Raster = e;else if (\"Colormap\" === l.rasterFunction) {\n          const t = l.rasterFunctionArguments.Raster;\n          \"Stretch\" === t?.rasterFunction ? (e.rasterFunctionArguments.Raster = t.rasterFunctionArguments.Raster, t.rasterFunctionArguments.Raster = e) : (e.rasterFunctionArguments.Raster = t, l.rasterFunctionArguments.Raster = e);\n        } else e.rasterFunctionArguments.Raster = l, l = e;\n        n.bandIds = void 0;\n      } else n.bandIds = o?.join(\",\");\n      a instanceof Array && a.length > 0 && (n.noData = a.join(\",\"));\n      const m = this._processMultidimensionalIntersection(null, r, this.exportImageServiceParameters.mosaicRule);\n      if (m.isOutSide) return null;\n      n.mosaicRule = p(m.mosaicRule) ? JSON.stringify(m.mosaicRule) : null, r = m.timeExtent, n.renderingRule = this._getRenderingRuleString(J.fromJSON(l));\n      const d = {};\n      if (p(r)) {\n        const {\n          start: e,\n          end: t\n        } = r.toJSON();\n        e && t && e === t ? d.time = \"\" + e : null == e && null == t || (d.time = `${e ?? \"null\"},${t ?? \"null\"}`);\n      }\n      return {\n        bbox: e.xmin + \",\" + e.ymin + \",\" + e.xmax + \",\" + e.ymax,\n        bboxSR: s,\n        imageSR: s,\n        size: t + \",\" + i,\n        ...n,\n        ...d\n      };\n    }\n    async getSamples(e, t) {\n      if (!(await this._fetchCapabilities(t?.signal))?.operations.supportsGetSamples) throw new o(\"imagery-layer:get-samples\", \"getSamples operation is not supported on the input image service\");\n      e = R(_e, e).clone();\n      const {\n        raster: i\n      } = this;\n      return i && null == e.raster && (e.raster = i), ne(this.url, e, this._getRequestOptions(t));\n    }\n    async identify(e, t) {\n      if (!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify) throw new o(\"imagery-layer:identify\", \"identify operation is not supported on the input image service\");\n      e = R(xe, e).clone();\n      const i = this._processMultidimensionalIntersection(e.geometry, e.timeExtent, e.mosaicRule || this.mosaicRule);\n      if (i.isOutSide) throw new o(\"imagery-layer:identify\", \"the request cannot be fulfilled when falling outside of the multidimensional subset\");\n      e.timeExtent = m(i.timeExtent), e.mosaicRule = m(i.mosaicRule);\n      const {\n        raster: r,\n        renderingRule: s\n      } = this;\n      return s && null == e.renderingRule && (e.renderingRule = s), r && null == e.raster && (e.raster = r), oe(this.url, e, this._getRequestOptions(t));\n    }\n    createQuery() {\n      const e = new ce();\n      return e.outFields = [\"*\"], e.returnGeometry = !0, e.where = this.definitionExpression || \"1=1\", e;\n    }\n    async queryRasters(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), ae(this.url, e, t);\n    }\n    async queryObjectIds(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), de(this.url, e, t);\n    }\n    async queryRasterCount(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), me(this.url, e, t);\n    }\n    async queryVisibleRasters(e, t) {\n      if (!e) throw new o(\"imagery-layer: query-visible-rasters\", \"missing query parameter\");\n      await this.load();\n      const {\n        pixelSize: i,\n        returnDomainValues: r,\n        returnTopmostRaster: s,\n        showNoDataRecords: n\n      } = t || {\n        pixelSize: null,\n        returnDomainValues: !1,\n        returnTopmostRaster: !1,\n        showNoDataRecords: !1\n      };\n      let a = !1,\n        l = null,\n        u = null;\n      const d = \"raster.servicepixelvalue\",\n        h = this._rasterFunctionNamesIndex;\n      if (p(e.outFields) && (a = e.outFields.some(e => !e.toLowerCase().includes(d)), this.version >= 10.4)) {\n        const t = e.outFields.filter(e => e.toLowerCase().includes(d) && e.length > d.length).map(e => {\n          const t = e.slice(d.length + 1);\n          return [this._updateRenderingRulesFunctionName(t, h), t];\n        });\n        l = t.map(e => new J({\n          functionName: e[0]\n        })), u = t.map(e => e[1]);\n        const {\n          renderingRule: i\n        } = this;\n        0 === l.length ? i?.functionName ? (l.push(i), u.push(i.functionName)) : l = null : i?.functionName && !l.some(e => e.functionName === i.functionName) && (l.push(i), u.push(i.functionName));\n      }\n      const f = c(e.outSpatialReference) || e.outSpatialReference.equals(this.spatialReference),\n        {\n          multidimensionalSubset: g\n        } = this;\n      let y = e.timeExtent || this.timeExtent;\n      if (g) {\n        const {\n          isOutside: t,\n          intersection: i\n        } = V(g, {\n          geometry: m(e.geometry),\n          timeExtent: m(e.timeExtent),\n          multidimensionalDefinition: this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition\n        });\n        if (t) throw new o(\"imagery-layer:query-visible-rasters\", \"the request cannot be fulfilled when falling outside of the multidimensional subset\");\n        i && p(i.timeExtent) && (y = i.timeExtent);\n      }\n      const R = this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule, y),\n        b = this._getQueryParams({\n          geometry: e.geometry,\n          timeExtent: y,\n          mosaicRule: R,\n          renderingRule: this.version < 10.4 ? this.renderingRule : null,\n          renderingRules: l,\n          pixelSize: i,\n          returnCatalogItems: a,\n          returnGeometry: f,\n          raster: this.raster,\n          maxItemCount: s ? 1 : null\n        });\n      delete b.f;\n      const S = new xe(b);\n      try {\n        await this.generateRasterInfo(this.renderingRule);\n        const i = await oe(this.url, S, {\n            signal: t?.signal,\n            query: {\n              ...this.customParameters\n            }\n          }),\n          s = e.outFields,\n          o = null != i.value && i.value.toLowerCase().includes(\"nodata\");\n        if (!(a && !f && i?.catalogItems?.features.length && (n || !o))) return this._processVisibleRastersResponse(i, {\n          returnDomainValues: r,\n          templateRRFunctionNames: u,\n          showNoDataRecords: n,\n          templateFields: s\n        });\n        const l = this.objectIdField || \"ObjectId\",\n          c = i.catalogItems?.features ?? [],\n          m = c.map(e => e.attributes?.[l]),\n          d = new ce({\n            objectIds: m,\n            returnGeometry: !0,\n            outSpatialReference: e.outSpatialReference,\n            outFields: [l]\n          }),\n          h = await this.queryRasters(d);\n        return h?.features?.length && h.features.forEach(t => {\n          c.forEach(i => {\n            i.attributes[l] === t.attributes[l] && (i.geometry = new ue(t.geometry), p(e.outSpatialReference) && (i.geometry.spatialReference = e.outSpatialReference));\n          });\n        }), this._processVisibleRastersResponse(i, {\n          returnDomainValues: r,\n          templateRRFunctionNames: u,\n          showNoDataRecords: n,\n          templateFields: s\n        });\n      } catch {\n        throw new o(\"imagery-layer:query-visible-rasters\", \"encountered error when querying visible rasters\");\n      }\n    }\n    async fetchVariableStatisticsHistograms(e, t) {\n      const i = n(b(this.parsedUrl) + \"/statistics\", {\n          query: this._getQueryParams({\n            variable: e\n          }),\n          signal: t\n        }).then(e => e.data?.statistics),\n        r = n(b(this.parsedUrl) + \"/histograms\", {\n          query: this._getQueryParams({\n            variable: e\n          }),\n          signal: t\n        }).then(e => e.data?.histograms),\n        s = await Promise.all([i, r]);\n      return s[0] && s[0].forEach(e => {\n        e.avg = e.mean, e.stddev = e.standardDeviation;\n      }), {\n        statistics: s[0] || null,\n        histograms: s[1] || null\n      };\n    }\n    async createFlowMesh(e, t) {\n      const i = this._rasterJobHandler.instance;\n      return i ? i.createFlowMesh(e, t) : Fe(e.meshType, e.simulationSettings, e.flowData, p(t.signal) ? t.signal : new AbortController().signal);\n    }\n    getMultidimensionalSubsetVariables(e) {\n      const t = e ?? this.serviceRasterInfo.multidimensionalInfo;\n      return H(this.multidimensionalSubset, t);\n    }\n    async _fetchService(e) {\n      await this._fetchServiceInfo(e), this.rasterInfo || (this.rasterInfo = this.serviceRasterInfo);\n      const t = this.sourceJSON,\n        i = p(this.serviceRasterInfo) ? Promise.resolve(this.serviceRasterInfo) : he(b(this.parsedUrl), t, {\n          signal: e,\n          query: this._getQueryParams()\n        }).then(e => (this._set(\"serviceRasterInfo\", e), this._set(\"multidimensionalInfo\", e.multidimensionalInfo), e)),\n        r = this._hasRenderingRule(this.renderingRule) ? this.generateRasterInfo(this.renderingRule, {\n          signal: e\n        }) : null,\n        s = this._getRasterFunctionInfos();\n      return Promise.all([i, r, s]).then(e => {\n        e[1] ? this._set(\"rasterInfo\", e[1]) : this._set(\"rasterInfo\", e[0]), e[2] && this._set(\"rasterFunctionInfos\", e[2]), this.renderer && !this._isSupportedRenderer(this.renderer) && (this._set(\"renderer\", null), u.getLogger(this.declaredClass).warn(\"ArcGISImageService\", \"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer\")), this._set(\"renderer\", this._configRenderer(this.renderer)), this.addHandles([d(() => this.renderingRule, e => {\n          (this.renderer || this.symbolizer || this.popupEnabled && this.popupTemplate) && this.generateRasterInfo(e).then(e => {\n            e && (this.rasterInfo = e);\n          });\n        })]);\n        const {\n          serviceRasterInfo: t\n        } = this;\n        p(t.multidimensionalInfo) && this._updateMultidimensionalDefinition(t);\n      });\n    }\n    _combineMosaicRuleWithTimeExtent(e, t) {\n      const i = this.timeInfo,\n        {\n          multidimensionalInfo: r\n        } = this.serviceRasterInfo;\n      if (c(e) || c(r) || c(t) || c(i?.startField)) return e;\n      const {\n          startField: s\n        } = i,\n        n = r.variables.some(e => e.dimensions.some(e => e.name === s)) ? s : \"StdTime\";\n      if (e = e.clone(), \"mosaic-dataset\" === this.sourceType) return e.multidimensionalDefinition = e.multidimensionalDefinition?.filter(e => e.dimensionName !== n), this._cleanupMultidimensionalDefinition(e);\n      e.multidimensionalDefinition = e.multidimensionalDefinition || [];\n      const o = e.multidimensionalDefinition.filter(e => e.dimensionName === n),\n        a = p(t.start) ? t.start.getTime() : null,\n        l = p(t.end) ? t.end.getTime() : null,\n        u = null == a || null == l || a === l,\n        m = u ? [a || l] : [[a, l]],\n        d = this.version >= 10.8;\n      if (o.length) o.forEach(e => {\n        e.dimensionName === n && (d ? (e.dimensionName = null, e.isSlice = !1, e.values = []) : (e.isSlice = u, e.values = m));\n      });else if (!d) {\n        const t = e.multidimensionalDefinition.filter(e => null != e.variableName && null == e.dimensionName);\n        t.length ? t.forEach(e => {\n          e.dimensionName = n, e.isSlice = u, e.values = m;\n        }) : e.multidimensionalDefinition.push(new _({\n          variableName: \"\",\n          dimensionName: n,\n          isSlice: u,\n          values: m\n        }));\n      }\n      return this._cleanupMultidimensionalDefinition(e);\n    }\n    _cleanupMultidimensionalDefinition(e) {\n      return c(e) ? null : (e.multidimensionalDefinition && (e.multidimensionalDefinition = e.multidimensionalDefinition.filter(e => !(!e.variableName && !e.dimensionName)), 0 === e.multidimensionalDefinition.length && (e.multidimensionalDefinition = null)), \"mosaic-dataset\" !== this.sourceType && null == e.multidimensionalDefinition ? null : e);\n    }\n    async _prepareForQuery(e, t) {\n      if (!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery) throw new o(\"imagery-layer:query-rasters\", \"query operation is not supported on the input image service\");\n      return e = p(e) ? R(ce, e) : this.createQuery(), t = this._getRequestOptions(t), this.raster && (t.query = {\n        ...t.query,\n        raster: this.raster\n      }), {\n        query: e,\n        requestOptions: t\n      };\n    }\n    async _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new E();\n      this._rasterJobHandler.connectionPromise = e.initialize().then(() => {\n        this._rasterJobHandler.instance = e;\n      }, () => {}), await this._rasterJobHandler.connectionPromise;\n    }\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this._cachedRendererJson = null;\n    }\n    _isSupportedRenderer(e) {\n      const {\n        rasterInfo: t,\n        renderingRule: i\n      } = this;\n      return \"unique-value\" === e.type && this._hasRenderingRule(i) && 1 === t?.bandCount && [\"u8\", \"s8\"].includes(t.pixelType) || null != t && null != e && B(t).includes(e.type);\n    }\n    async _fetchCapabilities(e) {\n      return this.capabilities || (await this._fetchServiceInfo(e)), this.capabilities;\n    }\n    async _fetchServiceInfo(e) {\n      let t = this.sourceJSON;\n      if (!t) {\n        const {\n          data: i,\n          ssl: r\n        } = await n(b(this.parsedUrl), {\n          query: this._getQueryParams(),\n          signal: e\n        });\n        t = i, this.sourceJSON = t, r && (this.url = this.url.replace(/^http:/i, \"https:\"));\n      }\n      if (t.capabilities?.toLowerCase().split(\",\").map(e => e.trim()).indexOf(\"tilesonly\") > -1) throw new o(\"imagery-layer:fetch-service-info\", \"use ImageryTileLayer to open tiles-only image services\");\n      this.read(t, {\n        origin: \"service\",\n        url: this.parsedUrl\n      });\n    }\n    _isMosaicDataset(e) {\n      return e.serviceSourceType ? \"esriImageServiceSourceTypeMosaicDataset\" === e.serviceSourceType : e.fields?.length > 0;\n    }\n    _isMosaicRuleSupported(e) {\n      if (!e) return !1;\n      const t = this._isMosaicDataset(e),\n        i = e.currentVersion >= 10.71 && e.hasMultidimensions && !(e.fields?.length > 1);\n      return t || i;\n    }\n    _isVectorFieldResampleFunction(e) {\n      if (c(e)) return !1;\n      const {\n          functionName: t,\n          functionArguments: i\n        } = e,\n        r = \"resample\" === t?.toLowerCase(),\n        s = i?.ResampleType || i?.resampleType;\n      return r && (7 === s || 10 === s);\n    }\n    _isPicture() {\n      return !this.format || this.format.includes(\"jpg\") || this.format.includes(\"png\");\n    }\n    _configRenderer(e) {\n      const t = this._isPicture(),\n        {\n          rasterInfo: i\n        } = this;\n      if (!t && !this.pixelFilter || this._isVectorDataSet()) {\n        if (!this.bandIds && i.bandCount >= 3) {\n          const e = k(i);\n          !e || 3 === i.bandCount && 0 === e[0] && 1 === e[1] && 2 === e[2] || (this.bandIds = e);\n        }\n        e || (e = G(i, {\n          bandIds: this.bandIds,\n          variableName: this.renderingRule ? null : this.mosaicRule?.multidimensionalDefinition?.[0].variableName\n        }));\n        const t = W(e.toJSON());\n        this.symbolizer ? (this.symbolizer.rendererJSON = t, this.symbolizer.rasterInfo = i) : this.symbolizer = new $({\n          rendererJSON: t,\n          rasterInfo: i\n        }), this.symbolizer.bind().success || (this.symbolizer = null);\n      }\n      return e;\n    }\n    _clonePixelData(e) {\n      return null == e ? e : {\n        extent: e.extent && e.extent.clone(),\n        pixelBlock: p(e.pixelBlock) ? e.pixelBlock.clone() : null\n      };\n    }\n    _getQueryParams(e) {\n      e && p(e.renderingRule) && \"string\" != typeof e.renderingRule && (e.renderingRule = this._getRenderingRuleString(e.renderingRule));\n      const {\n        raster: t,\n        viewId: i\n      } = this;\n      return {\n        raster: t,\n        viewId: i,\n        f: \"json\",\n        ...e,\n        ...this.customParameters\n      };\n    }\n    _getRequestOptions(e) {\n      return {\n        ...e,\n        query: {\n          ...e?.query,\n          ...this.customParameters\n        }\n      };\n    }\n    _decodePixelBlock(e, t, i) {\n      return this._rasterJobHandler.instance ? this._rasterJobHandler.instance.decode({\n        data: e,\n        options: t\n      }) : U(e, t, i);\n    }\n    async _getRasterFunctionInfos(e) {\n      const t = this.sourceJSON.rasterFunctionInfos;\n      if (this.loaded) return t;\n      if (t && this.version >= 10.3) {\n        if (1 === t.length && \"none\" === t[0].name.toLowerCase()) return t;\n        return (await n(b(this.parsedUrl) + \"/rasterFunctionInfos\", {\n          query: this._getQueryParams(),\n          signal: e\n        })).data?.rasterFunctionInfos;\n      }\n      return null;\n    }\n    _canRequestImageElement(e) {\n      return !this.pixelFilter && (!e || e.includes(\"png\"));\n    }\n    async _requestArrayBuffer(e) {\n      const {\n        imageProps: t,\n        requestAsImageElement: i,\n        returnImageBitmap: r,\n        signal: s\n      } = e;\n      if (i && this._canRequestImageElement(t.format)) {\n        const i = `${b(this.parsedUrl)}/exportImage`,\n          {\n            data: o\n          } = await n(i, {\n            responseType: r ? \"blob\" : \"image\",\n            query: this._getQueryParams({\n              f: \"image\",\n              ...this.refreshParameters,\n              ...e.imageServiceParameters\n            }),\n            signal: s\n          });\n        if (o instanceof Blob) {\n          return {\n            imageBitmap: await P(o, i),\n            params: t\n          };\n        }\n        return {\n          imageOrCanvasElement: o,\n          params: t\n        };\n      }\n      const a = this._initJobHandler(),\n        l = n(b(this.parsedUrl) + \"/exportImage\", {\n          responseType: \"array-buffer\",\n          query: this._getQueryParams({\n            f: \"image\",\n            ...e.imageServiceParameters\n          }),\n          signal: s\n        }),\n        u = (await Promise.all([l, a]))[0].data,\n        p = t.format || \"jpgpng\";\n      let c = p;\n      if (\"bsq\" !== c && \"bip\" !== c && (c = L(u)), !c) throw new o(\"imagery-layer:fetch-image\", \"unsupported format signature \" + String.fromCharCode.apply(null, new Uint8Array(u)));\n      const m = {\n          signal: s\n        },\n        d = \"gif\" === p || \"bmp\" === p || p.includes(\"png\") && (\"png\" === c || \"jpg\" === c) ? U(u, {\n          useCanvas: !0,\n          ...t\n        }, m) : this._decodePixelBlock(u, {\n          width: t.width,\n          height: t.height,\n          planes: null,\n          pixelType: null,\n          noDataValue: null,\n          format: p\n        }, m);\n      return {\n        pixelData: {\n          pixelBlock: await d,\n          extent: t.extent\n        },\n        params: t\n      };\n    }\n    _generateRasterInfo(e, t) {\n      const i = {\n        ...t,\n        query: this._getQueryParams()\n      };\n      return fe(b(this.parsedUrl), e, i);\n    }\n    _isValidCustomizedMosaicRule(e) {\n      return e && JSON.stringify(e.toJSON()) !== JSON.stringify(this.defaultMosaicRule?.toJSON());\n    }\n    _updateMultidimensionalDefinition(e) {\n      if (this._isValidCustomizedMosaicRule(this.mosaicRule)) return;\n      let t = Q(e, {\n        multidimensionalSubset: this.multidimensionalSubset\n      });\n      if (p(t) && t.length > 0) {\n        this.mosaicRule = this.mosaicRule || new O();\n        const e = this.mosaicRule.multidimensionalDefinition;\n        !this.sourceJSON.defaultVariableName && this.renderingRule && \"none\" !== this.renderingRule.functionName?.toLowerCase() && t.forEach(e => e.variableName = \"\"), t = t.filter(_ref => {\n          let {\n            variableName: e,\n            dimensionName: t\n          } = _ref;\n          return e && \"*\" !== e || t;\n        }), !e?.length && t.length && (this.mosaicRule.multidimensionalDefinition = t);\n      }\n    }\n    _processVisibleRastersResponse(e, i) {\n      i = i || {};\n      const r = e.value,\n        {\n          templateRRFunctionNames: s,\n          showNoDataRecords: n,\n          returnDomainValues: o,\n          templateFields: a\n        } = i,\n        l = e.processedValues;\n      let u = e.catalogItems && e.catalogItems.features,\n        c = e.properties && e.properties.Values && e.properties.Values.map(e => e.replace(/ /gi, \", \")) || [];\n      const m = this.objectIdField || \"ObjectId\",\n        d = \"string\" == typeof r && r.toLowerCase().includes(\"nodata\"),\n        h = [];\n      if (r && !u && !d) {\n        const e = {};\n        e[m] = 0;\n        c = [r], u = [new t(this.fullExtent, null, e)];\n      }\n      if (!u) return [];\n      let f, g, y;\n      this._updateResponseFieldNames(u, a), d && !n && (u = []);\n      for (let t = 0; t < u.length; t++) {\n        if (f = u[t], null != r) {\n          if (g = c[t], y = this.renderingRule && l && l.length > 0 && s && s.length > 0 && s.includes(this.renderingRule.functionName) ? l[s.indexOf(this.renderingRule.functionName)] : r, \"nodata\" === g.toLowerCase() && !n) continue;\n          const e = \"Raster.ItemPixelValue\",\n            i = \"Raster.ServicePixelValue\";\n          f.attributes[e] = g, f.attributes[i] = y, this._updateFeatureWithMagDirValues(f, g);\n          const o = this.fields && this.fields.length > 0;\n          let a = this.renderingRule && p(this.serviceRasterInfo.attributeTable) ? o ? g : r : y;\n          this.renderingRule || (a = o ? g : r), this._updateFeatureWithRasterAttributeTableValues(f, a);\n        }\n        if (f.sourceLayer = f.layer = this, o && this._updateFeatureWithDomainValues(f), s && l && s.length === l.length) for (let e = 0; e < s.length; e++) {\n          const t = \"Raster.ServicePixelValue.\" + s[e];\n          f.attributes[t] = l[e];\n        }\n        h.push(u[t]);\n      }\n      return h;\n    }\n    _processMultidimensionalIntersection(e, t, i) {\n      const {\n        multidimensionalSubset: r\n      } = this;\n      if (!r) return {\n        isOutSide: !1,\n        timeExtent: t,\n        mosaicRule: i = this._combineMosaicRuleWithTimeExtent(i, t)\n      };\n      if (r) {\n        const {\n          isOutside: i,\n          intersection: s\n        } = V(r, {\n          geometry: e,\n          timeExtent: t\n        });\n        if (i) return {\n          isOutSide: !0,\n          timeExtent: null,\n          mosaicRule: null\n        };\n        s && p(s.timeExtent) && (t = s.timeExtent);\n      }\n      if (i = this._combineMosaicRuleWithTimeExtent(i, t), p(i) && i.multidimensionalDefinition) {\n        const {\n          isOutside: e\n        } = V(r, {\n          multidimensionalDefinition: i.multidimensionalDefinition\n        });\n        if (e) return {\n          isOutSide: !0,\n          timeExtent: null,\n          mosaicRule: null\n        };\n      }\n      return {\n        isOutSide: !1,\n        timeExtent: t,\n        mosaicRule: i\n      };\n    }\n    _updateFeatureWithRasterAttributeTableValues(e, t) {\n      const i = this.rasterInfo.attributeTable || this.serviceRasterInfo.attributeTable;\n      if (c(i)) return;\n      const {\n          features: r,\n          fields: s\n        } = i,\n        n = s.map(e => e.name).filter(e => \"value\" === e.toLowerCase()),\n        o = n && n[0];\n      if (!o) return;\n      const a = r.filter(e => e.attributes[o] === (null != t ? parseInt(t, 10) : null));\n      a && a[0] && s.forEach(t => {\n        const i = this._rasterAttributeTableFieldPrefix + t.name;\n        e.attributes[i] = a[0].attributes[t.name];\n      });\n    }\n    _updateFeatureWithMagDirValues(e, t) {\n      if (!this._isVectorDataSet()) return;\n      const i = t.split(/,\\s*/).map(e => parseFloat(e)),\n        r = i.map(e => [e]),\n        s = i.map(e => ({\n          minValue: e,\n          maxValue: e,\n          noDataValue: null\n        })),\n        n = new C({\n          height: 1,\n          width: 1,\n          pixelType: \"f32\",\n          pixels: r,\n          statistics: s\n        });\n      null != this.pixelFilter && this.pixelFilter({\n        pixelBlock: n,\n        extent: new le(0, 0, 0, 0, this.spatialReference)\n      });\n      const o = \"esriImageServiceDataTypeVector-MagDir\" === this.serviceDataType ? [n.pixels[0][0], n.pixels[1][0]] : z([n.pixels[0][0], n.pixels[1][0]]);\n      e.attributes[\"Raster.Magnitude\"] = o[0], e.attributes[\"Raster.Direction\"] = o[1];\n    }\n    _updateFeatureWithDomainValues(e) {\n      const t = this.fields && this.fields.filter(e => e.domain && \"coded-value\" === e.domain.type);\n      null != t && t.forEach(t => {\n        const i = e.attributes[t.name];\n        if (null != i) {\n          const r = t.domain.codedValues.find(e => e.code === i);\n          r && (e.attributes[t.name] = r.name);\n        }\n      });\n    }\n    _updateResponseFieldNames(e, t) {\n      if (!t || t.length < 1) return;\n      const i = this.fieldsIndex;\n      c(i) || e.forEach(e => {\n        if (e && e.attributes) for (const r of t) {\n          const t = i.get(r)?.name;\n          t && t !== r && (e.attributes[r] = e.attributes[t], delete e.attributes[t]);\n        }\n      });\n    }\n    _getRenderingRuleString(e) {\n      if (e) {\n        let t = e.toJSON();\n        return t = t.rasterFunctionDefinition ?? t, (t.thumbnail || t.thumbnailEx) && (t.thumbnail = t.thumbnailEx = null), JSON.stringify(t);\n      }\n      return null;\n    }\n    _hasRenderingRule(e) {\n      return null != e && null != e.functionName && \"none\" !== e.functionName.toLowerCase();\n    }\n    _updateRenderingRulesFunctionName(e, t) {\n      if (!e || e.length < 1) return;\n      if (\"Raw\" === e) return e.replace(\"Raw\", \"None\");\n      const i = e.toLowerCase().replace(/ /gi, \"_\");\n      return t.has(i) ? t.get(i) : e;\n    }\n    _isRFTJson(e) {\n      return e && e.name && e.arguments && e.function && e.hasOwnProperty(\"functionType\");\n    }\n    _isVectorDataSet() {\n      return \"esriImageServiceDataTypeVector-UV\" === this.serviceDataType || \"esriImageServiceDataTypeVector-MagDir\" === this.serviceDataType;\n    }\n    _applyMosaicAndRenderingRules(e) {\n      const {\n        raster: t,\n        mosaicRule: i,\n        renderingRule: r\n      } = this;\n      r && null == e.renderingRule && (e.renderingRule = r), i && null == e.mosaicRule && (e.mosaicRule = i), t && null == e.raster && (e.raster = t);\n    }\n    _readCapabilities(e) {\n      const t = e.capabilities ? e.capabilities.toLowerCase().split(\",\").map(e => e.trim()) : [\"image\", \"catalog\"],\n        {\n          currentVersion: i,\n          advancedQueryCapabilities: r,\n          maxRecordCount: s\n        } = e,\n        n = t.includes(\"image\"),\n        o = \"esriImageServiceDataTypeElevation\" === e.serviceDataType,\n        a = !!(e.spatialReference || e.extent && e.extent.spatialReference),\n        l = t.includes(\"edit\"),\n        u = t.includes(\"mensuration\") && a,\n        p = null == e.mensurationCapabilities ? [] : e.mensurationCapabilities.toLowerCase().split(\",\").map(e => e.trim()),\n        c = u && p.includes(\"basic\");\n      return {\n        data: {\n          supportsAttachment: !1\n        },\n        operations: {\n          supportsComputeHistograms: n,\n          supportsExportImage: n,\n          supportsIdentify: n,\n          supportsMeasure: u,\n          supportsDownload: t.includes(\"download\"),\n          supportsQuery: t.includes(\"catalog\") && e.fields && e.fields.length > 0,\n          supportsGetSamples: i >= 10.2 && n,\n          supportsProject: i >= 10.3 && n,\n          supportsComputeStatisticsHistograms: i >= 10.4 && n,\n          supportsQueryBoundary: i >= 10.6 && n,\n          supportsCalculateVolume: i >= 10.7 && o,\n          supportsComputePixelLocation: i >= 10.7 && t.includes(\"catalog\"),\n          supportsComputeAngles: i >= 10.91,\n          supportsAdd: l,\n          supportsDelete: l,\n          supportsEditing: l,\n          supportsUpdate: l,\n          supportsCalculate: !1,\n          supportsTruncate: !1,\n          supportsValidateSql: !1,\n          supportsChangeTracking: !1,\n          supportsQueryAttachments: !1,\n          supportsResizeAttachments: !1,\n          supportsSync: !1,\n          supportsExceedsLimitStatistics: !1,\n          supportsQueryAnalytics: !1,\n          supportsQueryTopFeatures: !1\n        },\n        query: {\n          maxRecordCount: s,\n          maxRecordCountFactor: void 0,\n          supportsStatistics: !!r?.supportsStatistics,\n          supportsOrderBy: !!r?.supportsOrderBy,\n          supportsDistinct: !!r?.supportsDistinct,\n          supportsPagination: !!r?.supportsPagination,\n          supportsStandardizedQueriesOnly: !!r?.useStandardizedQueries,\n          supportsPercentileStatistics: !!r?.supportsPercentileStatistics,\n          supportsCentroid: !!r?.supportsReturningGeometryCentroid,\n          supportsDistance: !!r?.supportsQueryWithDistance,\n          supportsExtent: !!r?.supportsReturningQueryExtent,\n          supportsGeometryProperties: !!r?.supportsReturningGeometryProperties,\n          supportsHavingClause: !!r?.supportsHavingClause,\n          supportsQuantization: !1,\n          supportsQuantizationEditMode: !1,\n          supportsQueryGeometry: !1,\n          supportsResultType: !1,\n          supportsMaxRecordCountFactor: !1,\n          supportsSqlExpression: !1,\n          supportsTopFeaturesQuery: !1,\n          supportsQueryByOthers: !1,\n          supportsHistoricMoment: !1,\n          supportsFormatPBF: !1,\n          supportsDisjointSpatialRelationship: !1,\n          supportsCacheHint: !1,\n          supportsSpatialAggregationStatistics: !1,\n          supportedSpatialAggregationStatistics: {\n            envelope: !1,\n            centroid: !1,\n            convexHull: !1\n          },\n          supportsDefaultSpatialReference: !!r?.supportsDefaultSR,\n          supportsFullTextSearch: !1,\n          supportsCompactGeometry: !1,\n          standardMaxRecordCount: void 0,\n          tileMaxRecordCount: void 0\n        },\n        mensuration: {\n          supportsDistanceAndAngle: c,\n          supportsAreaAndPerimeter: c,\n          supportsPointOrCentroid: c,\n          supportsHeightFromBaseAndTop: u && p.includes(\"base-top height\"),\n          supportsHeightFromBaseAndTopShadow: u && p.includes(\"base-top shadow height\"),\n          supportsHeightFromTopAndTopShadow: u && p.includes(\"top-top shadow height\"),\n          supports3D: u && p.includes(\"3d\")\n        }\n      };\n    }\n  };\n  function b(e) {\n    return e?.path ?? \"\";\n  }\n  return e([f()], g.prototype, \"_functionRasterInfos\", void 0), e([f()], g.prototype, \"_rasterJobHandler\", void 0), e([f()], g.prototype, \"_cachedRendererJson\", void 0), e([f({\n    readOnly: !0\n  })], g.prototype, \"_serviceSupportsMosaicRule\", void 0), e([S(\"_serviceSupportsMosaicRule\", [\"currentVersion\", \"fields\"])], g.prototype, \"readServiceSupportsMosaicRule\", null), e([f()], g.prototype, \"_rasterAttributeTableFieldPrefix\", void 0), e([f({\n    readOnly: !0\n  })], g.prototype, \"_rasterFunctionNamesIndex\", null), e([f()], g.prototype, \"adjustAspectRatio\", void 0), e([f({\n    type: [y],\n    json: {\n      write: !0\n    }\n  })], g.prototype, \"bandIds\", void 0), e([S(\"bandIds\")], g.prototype, \"readBandIds\", null), e([f({\n    readOnly: !0,\n    json: {\n      read: !1\n    }\n  })], g.prototype, \"capabilities\", void 0), e([S(\"service\", \"capabilities\", [\"capabilities\", \"currentVersion\", \"serviceDataType\"])], g.prototype, \"readCapabilities\", null), e([f({\n    type: Number\n  })], g.prototype, \"compressionQuality\", void 0), e([x(\"compressionQuality\")], g.prototype, \"writeCompressionQuality\", null), e([f({\n    type: Number\n  })], g.prototype, \"compressionTolerance\", void 0), e([x(\"compressionTolerance\")], g.prototype, \"writeCompressionTolerance\", null), e([f({\n    json: {\n      read: {\n        source: \"copyrightText\"\n      }\n    }\n  })], g.prototype, \"copyright\", void 0), e([f({\n    readOnly: !0,\n    dependsOn: [\"_serviceSupportsMosaicRule\"]\n  })], g.prototype, \"defaultMosaicRule\", void 0), e([S(\"defaultMosaicRule\", [\"defaultMosaicMethod\"])], g.prototype, \"readDefaultMosaicRule\", null), e([f({\n    type: String,\n    json: {\n      name: \"layerDefinition.definitionExpression\",\n      write: {\n        enabled: !0,\n        allowNull: !0\n      }\n    }\n  })], g.prototype, \"definitionExpression\", void 0), e([f({\n    readOnly: !0,\n    constructOnly: !0\n  })], g.prototype, \"exportImageServiceParameters\", void 0), e([f()], g.prototype, \"rasterInfo\", void 0), e([f({\n    readOnly: !0,\n    type: [D]\n  })], g.prototype, \"fields\", void 0), e([f({\n    readOnly: !0\n  })], g.prototype, \"fieldsIndex\", null), e([f({\n    type: [\"png\", \"png8\", \"png24\", \"png32\", \"jpg\", \"bmp\", \"gif\", \"jpgpng\", \"lerc\", \"tiff\"],\n    json: {\n      write: !0\n    }\n  })], g.prototype, \"format\", null), e([S(\"service\", \"format\", [\"serviceDataType\"])], g.prototype, \"readFormat\", null), e([f({\n    type: le\n  })], g.prototype, \"fullExtent\", void 0), e([f({\n    readOnly: !0\n  })], g.prototype, \"hasMultidimensions\", void 0), e([f({\n    json: {\n      read: {\n        source: \"maxImageHeight\"\n      }\n    }\n  })], g.prototype, \"imageMaxHeight\", void 0), e([f({\n    json: {\n      read: {\n        source: \"maxImageWidth\"\n      }\n    }\n  })], g.prototype, \"imageMaxWidth\", void 0), e([f({\n    type: String,\n    json: {\n      type: M.jsonValues,\n      read: M.read,\n      write: M.write\n    }\n  })], g.prototype, \"interpolation\", void 0), e([f()], g.prototype, \"minScale\", void 0), e([S(\"service\", \"minScale\")], g.prototype, \"readMinScale\", null), e([f()], g.prototype, \"maxScale\", void 0), e([S(\"service\", \"maxScale\")], g.prototype, \"readMaxScale\", null), e([f({\n    type: O\n  })], g.prototype, \"mosaicRule\", null), e([S(\"mosaicRule\", [\"mosaicRule\", \"defaultMosaicMethod\"])], g.prototype, \"readMosaicRule\", null), e([x(\"mosaicRule\")], g.prototype, \"writeMosaicRule\", null), e([f()], g.prototype, \"multidimensionalInfo\", void 0), e([f({\n    type: N,\n    json: {\n      write: !0\n    }\n  })], g.prototype, \"multidimensionalSubset\", void 0), e([f({\n    json: {\n      type: y\n    }\n  })], g.prototype, \"noData\", void 0), e([x(\"noData\")], g.prototype, \"writeNoData\", null), e([f({\n    type: String,\n    json: {\n      type: A.jsonValues,\n      read: A.read,\n      write: A.write\n    }\n  })], g.prototype, \"noDataInterpretation\", void 0), e([f({\n    type: String,\n    readOnly: !0,\n    json: {\n      read: {\n        source: [\"fields\"]\n      }\n    }\n  })], g.prototype, \"objectIdField\", void 0), e([S(\"objectIdField\")], g.prototype, \"readObjectIdField\", null), e([f({})], g.prototype, \"geometryType\", void 0), e([f({})], g.prototype, \"typeIdField\", void 0), e([f({})], g.prototype, \"types\", void 0), e([f({\n    readOnly: !0\n  })], g.prototype, \"parsedUrl\", null), e([f({\n    type: Function\n  })], g.prototype, \"pixelFilter\", void 0), e([f()], g.prototype, \"raster\", void 0), e([f({\n    readOnly: !0\n  })], g.prototype, \"sourceType\", void 0), e([S(\"sourceType\", [\"serviceSourceType\", \"fields\"])], g.prototype, \"readSourceType\", null), e([f()], g.prototype, \"viewId\", void 0), e([f({\n    types: i,\n    json: {\n      name: \"layerDefinition.drawingInfo.renderer\",\n      origins: {\n        \"web-scene\": {\n          types: r,\n          name: \"layerDefinition.drawingInfo.renderer\",\n          write: {\n            overridePolicy: e => ({\n              enabled: e && \"vector-field\" !== e.type && \"flow\" !== e.type\n            })\n          }\n        }\n      }\n    }\n  })], g.prototype, \"renderer\", null), e([S(\"renderer\")], g.prototype, \"readRenderer\", null), e([x(\"renderer\")], g.prototype, \"writeRenderer\", null), e([f()], g.prototype, \"symbolizer\", void 0), e([f(I)], g.prototype, \"opacity\", void 0), e([f({\n    readOnly: !0\n  })], g.prototype, \"rasterFields\", null), e([f({\n    constructOnly: !0\n  })], g.prototype, \"rasterFunctionInfos\", void 0), e([f({\n    type: J\n  })], g.prototype, \"renderingRule\", null), e([S(\"renderingRule\", [\"renderingRule\", \"rasterFunctionInfos\"])], g.prototype, \"readRenderingRule\", null), e([x(\"renderingRule\")], g.prototype, \"writeRenderingRule\", null), e([f()], g.prototype, \"serviceDataType\", void 0), e([f({\n    readOnly: !0,\n    type: De\n  })], g.prototype, \"spatialReference\", void 0), e([S(\"spatialReference\", [\"spatialReference\", \"extent\"])], g.prototype, \"readSpatialReference\", null), e([f({\n    json: {\n      type: je.jsonValues\n    }\n  })], g.prototype, \"pixelType\", void 0), e([S(\"pixelType\")], g.prototype, \"readPixelType\", null), e([x(\"pixelType\")], g.prototype, \"writePixelType\", null), e([f({\n    constructOnly: !0,\n    type: q\n  })], g.prototype, \"serviceRasterInfo\", void 0), e([f()], g.prototype, \"sourceJSON\", void 0), e([f(w)], g.prototype, \"url\", void 0), e([f({\n    readOnly: !0\n  })], g.prototype, \"version\", void 0), e([S(\"version\", [\"currentVersion\", \"fields\", \"timeInfo\"])], g.prototype, \"readVersion\", null), g = e([v(\"esri.layers.mixins.ArcGISImageService\")], g), g;\n};\nexport { Ne as ArcGISImageService };","map":{"version":3,"names":["_","e","t","rasterRendererTypes","i","websceneRasterRendererTypes","r","read","s","n","o","strict","a","clone","l","u","isSome","p","isNone","c","unwrap","m","watch","d","urlToObject","h","property","f","ensureRange","g","Integer","y","ensureClass","R","ensureNumber","b","reader","S","subclass","v","writer","x","opacity","I","url","w","ExportImageServiceParameters","F","D","j","createBitmap","P","isSupportedRendererType","T","O","N","C","interpolationKebab","M","noDataInterpretationKebab","A","J","q","E","intersectMultimensionalSubset","V","getSubsetVariablesFromMdInfo","H","getDefaultMultidimensionalDefinition","Q","decode","U","getFormat","L","uvComponentToVector","z","getSupportedRendererTypes","B","getDefaultBandCombination","k","createDefaultRenderer","G","normalizeRendererJSON","W","$","computeAngles","K","computePixelSpaceLocations","X","computeHistograms","Y","computeStatisticsHistograms","Z","measureHeight","ee","measureAreaAndPerimeter","te","measureDistanceAndAngle","ie","measurePointOrCentroid","re","getImageSpatialReferenceQueryParameter","se","getSamples","ne","identify","oe","executeQueryJSON","ae","le","ue","pe","ce","executeForCount","me","executeForIds","de","fetchServiceRasterInfo","he","generateRasterInfo","fe","getCatalogItemRasterInfo","ge","ye","Re","be","Se","ve","xe","Ie","we","_e","createFlowMesh","Fe","De","je","U1","U2","U4","U8","S8","U16","S16","U32","S32","F32","F64","C64","C128","UNKNOWN","Pe","Set","Te","min","max","Oe","JSON","stringify","match","map","replace","join","Ne","constructor","arguments","_functionRasterInfos","_rasterJobHandler","instance","refCount","connectionPromise","_cachedRendererJson","_serviceSupportsMosaicRule","_rasterAttributeTableFieldPrefix","adjustAspectRatio","bandIds","capabilities","compressionQuality","compressionTolerance","copyright","defaultMosaicRule","definitionExpression","exportImageServiceParameters","rasterInfo","fields","fullExtent","hasMultidimensions","imageMaxHeight","imageMaxWidth","interpolation","minScale","maxScale","multidimensionalInfo","multidimensionalSubset","noData","noDataInterpretation","objectIdField","geometryType","typeIdField","types","pixelFilter","raster","sourceType","viewId","symbolizer","rasterFunctionInfos","serviceDataType","spatialReference","pixelType","serviceRasterInfo","sourceJSON","version","initialize","_set","layer","readServiceSupportsMosaicRule","_isMosaicRuleSupported","_rasterFunctionNamesIndex","Map","length","forEach","set","name","toLowerCase","readBandIds","Array","isArray","every","readCapabilities","_readCapabilities","writeCompressionQuality","format","writeCompressionTolerance","readDefaultMosaicRule","fromJSON","fieldsIndex","has","readFormat","readMinScale","minLOD","maxLOD","readMaxScale","mosaicRule","mosaicMethod","toJSON","mosaicOperation","readMosaicRule","writeMosaicRule","where","_isValidCustomizedMosaicRule","writeNoData","readObjectIdField","filter","type","parsedUrl","readSourceType","_isMosaicDataset","renderer","loaded","_configRenderer","readRenderer","layerDefinition","drawingInfo","symbolTileSize","getLogger","declaredClass","warn","writeRenderer","rasterFields","alias","domain","editable","push","operations","supportsQuery","some","_isVectorDataSet","attributeTable","concat","renderingRule","rasterFunction","rasterFunctionArguments","readRenderingRule","_isRFTJson","rasterFunctionDefinition","writeRenderingRule","readSpatialReference","extent","readPixelType","writePixelType","readVersion","currentVersion","hasOwnProperty","applyFilter","_clonePixelData","applyRenderer","_isPicture","bind","updateSymbolizer","symbolize","pixelBlock","destroy","_shutdownJobHandler","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_fetchCapabilities","signal","supportsComputeAngles","_getRequestOptions","supportsComputePixelLocation","supportsComputeHistograms","_applyMosaicAndRenderingRules","supportsComputeStatisticsHistograms","operationType","mensuration","supportsHeightFromBaseAndTop","supportsHeightFromBaseAndTopShadow","supportsHeightFromTopAndTopShadow","supportsAreaAndPerimeter","is3D","supports3D","supportsDistanceAndAngle","supportsPointOrCentroid","getField","get","getFieldDomain","fetchImage","undefined","getExportImageServiceParameters","timeExtent","requestAsImageElement","_canRequestImageElement","document","createElement","width","height","returnImageBitmap","imageBitmap","imageOrCanvasElement","bandCount","createEmptyBand","pixelData","pixels","mask","Uint8Array","imageServiceParameters","imageProps","_requestArrayBuffer","fetchKeyProperties","query","_getQueryParams","then","data","fetchRasterAttributeTable","Promise","reject","getCatalogItemICSInfo","ics","icsToPixelTransform","icsExtent","northDirection","catch","geometries","inSR","wkid","outSR","xmin","xmax","ymax","ymin","all","ipxf","geodataXform","xf_0","coefficients","affine","cellsizeRatio","imageCoordinateSystem","Math","atan","PI","functionName","_isVectorFieldResampleFunction","_generateRasterInfo","shiftCentralMeridian","_hasRenderingRule","BandIds","Raster","_processMultidimensionalIntersection","isOutSide","_getRenderingRuleString","start","end","time","bbox","bboxSR","imageSR","size","supportsGetSamples","supportsIdentify","geometry","createQuery","outFields","returnGeometry","queryRasters","requestOptions","_prepareForQuery","queryObjectIds","queryRasterCount","queryVisibleRasters","load","pixelSize","returnDomainValues","returnTopmostRaster","showNoDataRecords","includes","slice","_updateRenderingRulesFunctionName","outSpatialReference","equals","isOutside","intersection","multidimensionalDefinition","_combineMosaicRuleWithTimeExtent","renderingRules","returnCatalogItems","maxItemCount","customParameters","value","catalogItems","features","_processVisibleRastersResponse","templateRRFunctionNames","templateFields","attributes","objectIds","fetchVariableStatisticsHistograms","variable","statistics","histograms","avg","mean","stddev","standardDeviation","meshType","simulationSettings","flowData","AbortController","getMultidimensionalSubsetVariables","_fetchService","_fetchServiceInfo","resolve","_getRasterFunctionInfos","_isSupportedRenderer","addHandles","popupEnabled","popupTemplate","_updateMultidimensionalDefinition","timeInfo","startField","variables","dimensions","dimensionName","_cleanupMultidimensionalDefinition","getTime","isSlice","values","variableName","_initJobHandler","ssl","split","trim","indexOf","origin","serviceSourceType","functionArguments","ResampleType","resampleType","rendererJSON","success","_decodePixelBlock","options","responseType","refreshParameters","Blob","params","String","fromCharCode","apply","useCanvas","planes","noDataValue","defaultVariableName","_ref","processedValues","properties","Values","_updateResponseFieldNames","_updateFeatureWithMagDirValues","_updateFeatureWithRasterAttributeTableValues","sourceLayer","_updateFeatureWithDomainValues","parseInt","parseFloat","minValue","maxValue","codedValues","find","code","thumbnail","thumbnailEx","function","advancedQueryCapabilities","maxRecordCount","mensurationCapabilities","supportsAttachment","supportsExportImage","supportsMeasure","supportsDownload","supportsProject","supportsQueryBoundary","supportsCalculateVolume","supportsAdd","supportsDelete","supportsEditing","supportsUpdate","supportsCalculate","supportsTruncate","supportsValidateSql","supportsChangeTracking","supportsQueryAttachments","supportsResizeAttachments","supportsSync","supportsExceedsLimitStatistics","supportsQueryAnalytics","supportsQueryTopFeatures","maxRecordCountFactor","supportsStatistics","supportsOrderBy","supportsDistinct","supportsPagination","supportsStandardizedQueriesOnly","useStandardizedQueries","supportsPercentileStatistics","supportsCentroid","supportsReturningGeometryCentroid","supportsDistance","supportsQueryWithDistance","supportsExtent","supportsReturningQueryExtent","supportsGeometryProperties","supportsReturningGeometryProperties","supportsHavingClause","supportsQuantization","supportsQuantizationEditMode","supportsQueryGeometry","supportsResultType","supportsMaxRecordCountFactor","supportsSqlExpression","supportsTopFeaturesQuery","supportsQueryByOthers","supportsHistoricMoment","supportsFormatPBF","supportsDisjointSpatialRelationship","supportsCacheHint","supportsSpatialAggregationStatistics","supportedSpatialAggregationStatistics","envelope","centroid","convexHull","supportsDefaultSpatialReference","supportsDefaultSR","supportsFullTextSearch","supportsCompactGeometry","standardMaxRecordCount","tileMaxRecordCount","path","prototype","readOnly","json","write","Number","source","dependsOn","enabled","allowNull","constructOnly","jsonValues","Function","origins","overridePolicy","ArcGISImageService"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/mixins/ArcGISImageService.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import t from\"../../Graphic.js\";import{rasterRendererTypes as i,websceneRasterRendererTypes as r,read as s}from\"../../rasterRenderers.js\";import n from\"../../request.js\";import o from\"../../core/Error.js\";import{strict as a}from\"../../core/jsonMap.js\";import{clone as l}from\"../../core/lang.js\";import u from\"../../core/Logger.js\";import{isSome as p,isNone as c,unwrap as m}from\"../../core/maybe.js\";import{watch as d}from\"../../core/reactiveUtils.js\";import{urlToObject as h}from\"../../core/urlUtils.js\";import{property as f,ensureRange as g}from\"../../core/accessorSupport/decorators/property.js\";import{Integer as y,ensureClass as R,ensureNumber as b}from\"../../core/accessorSupport/ensureType.js\";import{reader as S}from\"../../core/accessorSupport/decorators/reader.js\";import{subclass as v}from\"../../core/accessorSupport/decorators/subclass.js\";import{writer as x}from\"../../core/accessorSupport/decorators/writer.js\";import{opacity as I,url as w}from\"../support/commonProperties.js\";import _ from\"../support/DimensionalDefinition.js\";import{ExportImageServiceParameters as F}from\"../support/ExportImageServiceParameters.js\";import D from\"../support/Field.js\";import j from\"../support/FieldsIndex.js\";import{createBitmap as P}from\"../support/imageBitmapUtils.js\";import{isSupportedRendererType as T}from\"../support/imageryRendererUtils.js\";import O from\"../support/MosaicRule.js\";import N from\"../support/MultidimensionalSubset.js\";import C from\"../support/PixelBlock.js\";import{interpolationKebab as M,noDataInterpretationKebab as A}from\"../support/rasterEnums.js\";import J from\"../support/RasterFunction.js\";import q from\"../support/RasterInfo.js\";import E from\"../support/RasterJobHandler.js\";import{intersectMultimensionalSubset as V,getSubsetVariablesFromMdInfo as H,getDefaultMultidimensionalDefinition as Q}from\"../support/rasterDatasets/multidimensionalUtils.js\";import{decode as U,getFormat as L}from\"../support/rasterFormats/RasterCodec.js\";import{uvComponentToVector as z}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{getSupportedRendererTypes as B,getDefaultBandCombination as k,createDefaultRenderer as G,normalizeRendererJSON as W}from\"../../renderers/support/rasterRendererHelper.js\";import $ from\"../../renderers/support/RasterSymbolizer.js\";import{computeAngles as K,computePixelSpaceLocations as X,computeHistograms as Y,computeStatisticsHistograms as Z,measureHeight as ee,measureAreaAndPerimeter as te,measureDistanceAndAngle as ie,measurePointOrCentroid as re,getImageSpatialReferenceQueryParameter as se,getSamples as ne,identify as oe}from\"../../rest/imageService.js\";import\"../../core/has.js\";import\"../support/source/DataLayerSource.js\";import{executeQueryJSON as ae}from\"../../rest/query/executeQueryJSON.js\";import\"../../config.js\";import\"../../kernel.js\";import\"../../core/unitUtils.js\";import\"../../geometry/support/spatialReferenceUtils.js\";import\"../graphics/featureConversionUtils.js\";import le from\"../../geometry/Extent.js\";import\"../../geometry/Geometry.js\";import\"../../geometry/Multipoint.js\";import\"../../geometry/Point.js\";import ue from\"../../geometry/Polygon.js\";import\"../../geometry/Polyline.js\";import\"../../geometry/support/normalizeUtils.js\";import\"../../core/pbf.js\";import pe from\"../../rest/support/FeatureSet.js\";import ce from\"../../rest/support/Query.js\";import\"../../rest/query/support/AttachmentInfo.js\";import\"../../rest/support/AttachmentQuery.js\";import{executeForCount as me}from\"../../rest/query/executeForCount.js\";import{executeForIds as de}from\"../../rest/query/executeForIds.js\";import\"../../rest/support/RelationshipQuery.js\";import\"../../rest/support/TopFeaturesQuery.js\";import{fetchServiceRasterInfo as he,generateRasterInfo as fe}from\"../../rest/imageService/fetchRasterInfo.js\";import{getCatalogItemRasterInfo as ge}from\"../../rest/imageService/getCatalogItemRasterInfo.js\";import ye from\"../../rest/support/ImageAngleParameters.js\";import Re from\"../../rest/support/ImageAreaParameters.js\";import be from\"../../rest/support/ImageDistanceParameters.js\";import Se from\"../../rest/support/ImageHeightParameters.js\";import ve from\"../../rest/support/ImageHistogramParameters.js\";import xe from\"../../rest/support/ImageIdentifyParameters.js\";import Ie from\"../../rest/support/ImagePixelLocationParameters.js\";import we from\"../../rest/support/ImagePointParameters.js\";import _e from\"../../rest/support/ImageSampleParameters.js\";import{createFlowMesh as Fe}from\"../../views/2d/engine/flow/dataUtils.js\";import De from\"../../geometry/SpatialReference.js\";const je=a()({U1:\"u1\",U2:\"u2\",U4:\"u4\",U8:\"u8\",S8:\"s8\",U16:\"u16\",S16:\"s16\",U32:\"u32\",S32:\"s32\",F32:\"f32\",F64:\"f64\",C64:\"c64\",C128:\"c128\",UNKNOWN:\"unknown\"}),Pe=new Set([\"png\",\"png8\",\"png24\",\"png32\",\"jpg\",\"bmp\",\"gif\",\"jpgpng\",\"lerc\",\"tiff\"]),Te=g(b,{min:0,max:255});function Oe(e){if(!e)return null;const t=JSON.stringify(e).match(/\"rasterFunction\":\"(.*?\")/gi)?.map((e=>e.replace('\"rasterFunction\":\"',\"\").replace('\"',\"\")));return t?t.join(\"/\"):null}const Ne=a=>{let g=class extends a{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix=\"Raster.\",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType=\"polygon\",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set(\"exportImageServiceParameters\",new F({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,\"_\"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>\"number\"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&\"lerc\"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){\"lerc\"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?O.fromJSON(t):null}get fieldsIndex(){return this.fields?new j(this.fields):null}set format(e){e&&Pe.has(e.toLowerCase())&&this._set(\"format\",e.toLowerCase())}readFormat(e,t){return\"esriImageServiceDataTypeVector-UV\"===t.serviceDataType||\"esriImageServiceDataTypeVector-MagDir\"===t.serviceDataType||null!=this.pixelFilter?\"lerc\":\"jpgpng\"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=O.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set(\"mosaicRule\",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?O.fromJSON(i):this._isMosaicRuleSupported(t)?O.fromJSON(t):null}writeMosaicRule(e,t,i){let r=this.mosaicRule;const s=this.definitionExpression;r?s&&s!==r.where&&(r=r.clone(),r.where=s):s&&(r=new O({where:s})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&\"number\"==typeof e&&(t[i]=Te(e))}readObjectIdField(e,t){if(!e){const i=t.fields.filter((e=>\"esriFieldTypeOID\"===e.type||\"oid\"===e.type));e=i&&i[0]&&i[0].name}return e}get parsedUrl(){return h(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?\"mosaic-dataset\":\"raster-dataset\"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set(\"renderer\",e)}readRenderer(e,t,i){const r=t?.layerDefinition?.drawingInfo?.renderer,n=s(r,i);return null==n?null:(\"vector-field\"===n.type&&t.symbolTileSize&&!r.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),T(n)||u.getLogger(this.declaredClass).warn(\"ArcGISImageService\",\"Imagery layer doesn't support given renderer type.\"),n)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),\"vector-field\"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix||\"Raster.\",t=new D({name:\"Raster.ItemPixelValue\",alias:\"Item Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"}),i=new D({name:\"Raster.ServicePixelValue\",alias:\"Service Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"}),r=new D({name:\"Raster.ServicePixelValue.Raw\",alias:\"Raw Service Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"});let s=this.fields?l(this.fields):[];s.push(i),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>\"none\"===e.name.toLowerCase()))&&s.push(r),p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>\"none\"!==e.name.toLowerCase())).forEach((e=>{s.push(new D({name:\"Raster.ServicePixelValue.\"+e.name,alias:e.name,domain:null,editable:!1,length:50,type:\"string\"}))})),this._isVectorDataSet()&&(s.push(new D({name:\"Raster.Magnitude\",alias:\"Magnitude\",domain:null,editable:!1,type:\"double\"})),s.push(new D({name:\"Raster.Direction\",alias:\"Direction\",domain:null,editable:!1,type:\"double\"})));const{attributeTable:n}=this.rasterInfo??{};if(p(n)){const t=n.fields.filter((e=>\"esriFieldTypeOID\"!==e.type&&\"value\"!==e.name.toLowerCase())).map((t=>{const i=l(t);return i.name=e+t.name,i}));s=s.concat(t)}return s}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=J.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set(\"renderingRule\",t)}readRenderingRule(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i&&i.length&&\"None\"!==i[0].name?this._isRFTJson(t.renderingRule)?J.fromJSON({rasterFunctionDefinition:t.renderingRule}):J.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,i){const r=e.toJSON();r.rasterFunctionDefinition?t[i]=r.rasterFunctionDefinition:t[i]=r}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?De.fromJSON(i):null}readPixelType(e){return je.fromJSON(e)||e}writePixelType(e,t,i){(c(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=je.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty(\"fields\")||t.hasOwnProperty(\"timeInfo\")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:r,symbolizer:s,pixelFilter:n,bandIds:o}=this;if(!this._isPicture()&&r&&s&&!n){const n=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(r.toJSON()),a=this._rasterJobHandler.instance;if(a){n&&(s.bind(),await a.updateSymbolizer(s,t),this._cachedRendererJson=r.toJSON());const l=await a.symbolize({bandIds:o,...e},t);i={extent:e.extent,pixelBlock:l}}else i={extent:e.extent,pixelBlock:s.symbolize({bandIds:o,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new o(\"imagery-layer:compute-angles\",\"this operation is not supported on the input image service\");return e=R(ye,e).clone(),K(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new o(\"imagery-layer:compute-pixel-space-locations\",\"this operation is not supported on the input image service\");return e=R(Ie,e).clone(),X(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new o(\"imagery-layer:compute-histograms\",\"this operation is not supported on the input image service\");return e=R(ve,e).clone(),this._applyMosaicAndRenderingRules(e),Y(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new o(\"imagery-layer:compute-statistics-histograms\",\"this operation is not supported on the input image service\");return e=R(ve,e).clone(),this._applyMosaicAndRenderingRules(e),Z(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const i=await this._fetchCapabilities(t?.signal);if(!(\"base-and-top\"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:\"base-and-top-shadow\"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new o(\"imagery-layer:measure-height\",\"this operation is not supported on the input image service\");return e=R(Se,e).clone(),this._applyMosaicAndRenderingRules(e),ee(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const i=await this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsAreaAndPerimeter&&(!e.is3D||i.mensuration.supports3D)))throw new o(\"imagery-layer:measure-area-and-perimeter\",\"this operation is not supported on the input image service\");return e=R(Re,e).clone(),this._applyMosaicAndRenderingRules(e),te(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const i=await this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsDistanceAndAngle&&(!e.is3D||i.mensuration.supports3D)))throw new o(\"imagery-layer:measure-distance-and-angle\",\"this operation is not supported on the input image service\");return e=R(be,e).clone(),this._applyMosaicAndRenderingRules(e),ie(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const i=await this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsPointOrCentroid&&(!e.is3D||i.mensuration.supports3D)))throw new o(\"imagery-layer:measure-point-or-centroid\",\"this operation is not supported on the input image service\");return e=R(we,e).clone(),this._applyMosaicAndRenderingRules(e),re(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return p(t)?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,i,r={}){if(null==e||null==t||null==i)throw new o(\"imagery-layer:fetch-image\",\"Insufficient parameters for requesting an image. A valid extent, width and height values are required.\");if(this.renderer||this.symbolizer){const e=await this.generateRasterInfo(this.renderingRule,{signal:r.signal});e&&(this.rasterInfo=e)}const s=this.getExportImageServiceParameters(e,t,i,r.timeExtent);if(null==s){if(r.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement(\"canvas\");if(e.width=t,e.height=i,r.returnImageBitmap){return{imageBitmap:await P(e,`${b(this.parsedUrl)}/exportImage`)}}return{imageOrCanvasElement:e}}const{bandIds:s,rasterInfo:n}=this,o=(s?.length||n.bandCount)??0,a=t*i,l=n.pixelType,u=[];for(let e=0;e<o;e++)u.push(C.createEmptyBand(l,a));return{pixelData:{pixelBlock:new C({width:t,height:i,pixels:u,mask:new Uint8Array(a),pixelType:l}),extent:e}}}const n=!!r.requestAsImageElement&&!this.pixelFilter,a=n&&!!r.returnImageBitmap,l={imageServiceParameters:s,imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:n,returnImageBitmap:a,signal:r.signal};return this._requestArrayBuffer(l)}fetchKeyProperties(e){return n(b(this.parsedUrl)+\"/keyProperties\",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new o(\"#fetchRasterAttributeTable()\",\"Failed to get rasterAttributeTable\")):n(b(this.parsedUrl)+\"/rasterAttributeTable\",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>pe.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return ge(b(this.parsedUrl),e,i)}async getCatalogItemICSInfo(e,t){const{data:i}=await n(b(this.parsedUrl)+\"/\"+e+\"/info/ics\",{query:this._getQueryParams(),...t}),r=i&&i.ics;if(!r)return;let s=null;try{s=(await n(b(this.parsedUrl)+\"/\"+e+\"/info\",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:r,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?n(b(this.parsedUrl)+\"/\"+e+\"/info/icstopixel\",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=s.spatialReference,l={geometries:JSON.stringify({geometryType:\"esriGeometryEnvelope\",geometries:[s]}),inSR:a.wkid||JSON.stringify(a),outSR:\"0:\"+e},u=n(b(this.parsedUrl)+\"/project\",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=5,c=(s.xmin+s.xmax)/2,m=(s.ymax-s.ymin)/(p+1),d=s.ymin+m,h=[];for(let n=0;n<p;n++)h.push({x:c,y:d+m*n});const f={geometries:JSON.stringify({geometryType:\"esriGeometryPoint\",geometries:h}),inSR:a.wkid||JSON.stringify(a),outSR:\"0:\"+e},g=n(b(this.parsedUrl)+\"/project\",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),y=await Promise.all([o,u,g]);let R=y[0].ipxf;if(null==R){const e=r.geodataXform?.xf_0;\"topup\"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(R={affine:{name:\"ics [sensor: Frame] to pixel (column, row) transformation\",coefficients:e.coefficients,cellsizeRatio:0,type:\"GeometricXform\"}})}const S=le.fromJSON(y[1]&&y[1].geometries&&y[1].geometries[0]);S&&(S.spatialReference=new De({wkid:0,imageCoordinateSystem:r}));const v=y[2].geometries?y[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&\"NaN\"!==e.x&&\"NaN\"!==e.y)):[],x=v.length;if(x<3)return{ics:r,icsToPixelTransform:R,icsExtent:S,northDirection:null};let I=0,w=0,_=0,F=0;for(let n=0;n<x;n++)I+=v[n].x,w+=v[n].y,_+=v[n].x*v[n].x,F+=v[n].x*v[n].y;const D=(x*F-I*w)/(x*_-I*I);let j=0;const P=v[p-1].x>v[0].x,T=v[p-1].y>v[0].y;return D===1/0?j=T?90:270:0===D?j=P?0:180:D>0?j=P?180*Math.atan(D)/Math.PI:180*Math.atan(D)/Math.PI+180:D<0&&(j=T?180+180*Math.atan(D)/Math.PI:360+180*Math.atan(D)/Math.PI),{ics:r,icsToPixelTransform:R,icsExtent:S,northDirection:j}}async generateRasterInfo(e,t){if(e=R(J,e),this.serviceRasterInfo&&(!e||\"none\"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const i=Oe(e);if(!i)return null;if(this._functionRasterInfos[i])return this._functionRasterInfos[i];const r=this._generateRasterInfo(e,t);this._functionRasterInfos[i]=r;try{return await r}catch{return this._functionRasterInfos[i]=null,null}}getExportImageServiceParameters(e,t,i,r){e=e.clone().shiftCentralMeridian();const s=se(e.spatialReference,b(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const n=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:a}=n;let{renderingRule:l}=n;const u=this.renderingRule?.rasterFunctionDefinition,c=!this.renderer||\"raster-stretch\"===this.renderer.type;if(o?.length&&this._hasRenderingRule(this.renderingRule)&&!u&&c){const e={rasterFunction:\"ExtractBand\",rasterFunctionArguments:{BandIds:o}};if(\"Stretch\"===l.rasterFunction)e.rasterFunctionArguments.Raster=l.rasterFunctionArguments.Raster,l.rasterFunctionArguments.Raster=e;else if(\"Colormap\"===l.rasterFunction){const t=l.rasterFunctionArguments.Raster;\"Stretch\"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,l.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=l,l=e;n.bandIds=void 0}else n.bandIds=o?.join(\",\");a instanceof Array&&a.length>0&&(n.noData=a.join(\",\"));const m=this._processMultidimensionalIntersection(null,r,this.exportImageServiceParameters.mosaicRule);if(m.isOutSide)return null;n.mosaicRule=p(m.mosaicRule)?JSON.stringify(m.mosaicRule):null,r=m.timeExtent,n.renderingRule=this._getRenderingRuleString(J.fromJSON(l));const d={};if(p(r)){const{start:e,end:t}=r.toJSON();e&&t&&e===t?d.time=\"\"+e:null==e&&null==t||(d.time=`${e??\"null\"},${t??\"null\"}`)}return{bbox:e.xmin+\",\"+e.ymin+\",\"+e.xmax+\",\"+e.ymax,bboxSR:s,imageSR:s,size:t+\",\"+i,...n,...d}}async getSamples(e,t){if(!(await this._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new o(\"imagery-layer:get-samples\",\"getSamples operation is not supported on the input image service\");e=R(_e,e).clone();const{raster:i}=this;return i&&null==e.raster&&(e.raster=i),ne(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new o(\"imagery-layer:identify\",\"identify operation is not supported on the input image service\");e=R(xe,e).clone();const i=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(i.isOutSide)throw new o(\"imagery-layer:identify\",\"the request cannot be fulfilled when falling outside of the multidimensional subset\");e.timeExtent=m(i.timeExtent),e.mosaicRule=m(i.mosaicRule);const{raster:r,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),r&&null==e.raster&&(e.raster=r),oe(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new ce;return e.outFields=[\"*\"],e.returnGeometry=!0,e.where=this.definitionExpression||\"1=1\",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),ae(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),de(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),me(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new o(\"imagery-layer: query-visible-rasters\",\"missing query parameter\");await this.load();const{pixelSize:i,returnDomainValues:r,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let a=!1,l=null,u=null;const d=\"raster.servicepixelvalue\",h=this._rasterFunctionNamesIndex;if(p(e.outFields)&&(a=e.outFields.some((e=>!e.toLowerCase().includes(d))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(d)&&e.length>d.length)).map((e=>{const t=e.slice(d.length+1);return[this._updateRenderingRulesFunctionName(t,h),t]}));l=t.map((e=>new J({functionName:e[0]}))),u=t.map((e=>e[1]));const{renderingRule:i}=this;0===l.length?i?.functionName?(l.push(i),u.push(i.functionName)):l=null:i?.functionName&&!l.some((e=>e.functionName===i.functionName))&&(l.push(i),u.push(i.functionName))}const f=c(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:g}=this;let y=e.timeExtent||this.timeExtent;if(g){const{isOutside:t,intersection:i}=V(g,{geometry:m(e.geometry),timeExtent:m(e.timeExtent),multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new o(\"imagery-layer:query-visible-rasters\",\"the request cannot be fulfilled when falling outside of the multidimensional subset\");i&&p(i.timeExtent)&&(y=i.timeExtent)}const R=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y),b=this._getQueryParams({geometry:e.geometry,timeExtent:y,mosaicRule:R,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:i,returnCatalogItems:a,returnGeometry:f,raster:this.raster,maxItemCount:s?1:null});delete b.f;const S=new xe(b);try{await this.generateRasterInfo(this.renderingRule);const i=await oe(this.url,S,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,o=null!=i.value&&i.value.toLowerCase().includes(\"nodata\");if(!(a&&!f&&i?.catalogItems?.features.length&&(n||!o)))return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s});const l=this.objectIdField||\"ObjectId\",c=i.catalogItems?.features??[],m=c.map((e=>e.attributes?.[l])),d=new ce({objectIds:m,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),h=await this.queryRasters(d);return h?.features?.length&&h.features.forEach((t=>{c.forEach((i=>{i.attributes[l]===t.attributes[l]&&(i.geometry=new ue(t.geometry),p(e.outSpatialReference)&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s})}catch{throw new o(\"imagery-layer:query-visible-rasters\",\"encountered error when querying visible rasters\")}}async fetchVariableStatisticsHistograms(e,t){const i=n(b(this.parsedUrl)+\"/statistics\",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),r=n(b(this.parsedUrl)+\"/histograms\",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),s=await Promise.all([i,r]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):Fe(e.meshType,e.simulationSettings,e.flowData,p(t.signal)?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return H(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,i=p(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):he(b(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set(\"serviceRasterInfo\",e),this._set(\"multidimensionalInfo\",e.multidimensionalInfo),e))),r=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([i,r,s]).then((e=>{e[1]?this._set(\"rasterInfo\",e[1]):this._set(\"rasterInfo\",e[0]),e[2]&&this._set(\"rasterFunctionInfos\",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set(\"renderer\",null),u.getLogger(this.declaredClass).warn(\"ArcGISImageService\",\"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer\")),this._set(\"renderer\",this._configRenderer(this.renderer)),this.addHandles([d((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;p(t.multidimensionalInfo)&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo,{multidimensionalInfo:r}=this.serviceRasterInfo;if(c(e)||c(r)||c(t)||c(i?.startField))return e;const{startField:s}=i,n=r.variables.some((e=>e.dimensions.some((e=>e.name===s))))?s:\"StdTime\";if(e=e.clone(),\"mosaic-dataset\"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==n)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter((e=>e.dimensionName===n)),a=p(t.start)?t.start.getTime():null,l=p(t.end)?t.end.getTime():null,u=null==a||null==l||a===l,m=u?[a||l]:[[a,l]],d=this.version>=10.8;if(o.length)o.forEach((e=>{e.dimensionName===n&&(d?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=m))}));else if(!d){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=n,e.isSlice=u,e.values=m})):e.multidimensionalDefinition.push(new _({variableName:\"\",dimensionName:n,isSlice:u,values:m}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return c(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),\"mosaic-dataset\"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new o(\"imagery-layer:query-rasters\",\"query operation is not supported on the input image service\");return e=p(e)?R(ce,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new E;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:i}=this;return\"unique-value\"===e.type&&this._hasRenderingRule(i)&&1===t?.bandCount&&[\"u8\",\"s8\"].includes(t.pixelType)||null!=t&&null!=e&&B(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:i,ssl:r}=await n(b(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=i,this.sourceJSON=t,r&&(this.url=this.url.replace(/^http:/i,\"https:\"))}if(t.capabilities?.toLowerCase().split(\",\").map((e=>e.trim())).indexOf(\"tilesonly\")>-1)throw new o(\"imagery-layer:fetch-service-info\",\"use ImageryTileLayer to open tiles-only image services\");this.read(t,{origin:\"service\",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?\"esriImageServiceSourceTypeMosaicDataset\"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||i}_isVectorFieldResampleFunction(e){if(c(e))return!1;const{functionName:t,functionArguments:i}=e,r=\"resample\"===t?.toLowerCase(),s=i?.ResampleType||i?.resampleType;return r&&(7===s||10===s)}_isPicture(){return!this.format||this.format.includes(\"jpg\")||this.format.includes(\"png\")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&i.bandCount>=3){const e=k(i);!e||3===i.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=G(i,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=W(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=i):this.symbolizer=new $({rendererJSON:t,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:p(e.pixelBlock)?e.pixelBlock.clone():null}}_getQueryParams(e){e&&p(e.renderingRule)&&\"string\"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:\"json\",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):U(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&\"none\"===t[0].name.toLowerCase())return t;return(await n(b(this.parsedUrl)+\"/rasterFunctionInfos\",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes(\"png\"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:i,returnImageBitmap:r,signal:s}=e;if(i&&this._canRequestImageElement(t.format)){const i=`${b(this.parsedUrl)}/exportImage`,{data:o}=await n(i,{responseType:r?\"blob\":\"image\",query:this._getQueryParams({f:\"image\",...this.refreshParameters,...e.imageServiceParameters}),signal:s});if(o instanceof Blob){return{imageBitmap:await P(o,i),params:t}}return{imageOrCanvasElement:o,params:t}}const a=this._initJobHandler(),l=n(b(this.parsedUrl)+\"/exportImage\",{responseType:\"array-buffer\",query:this._getQueryParams({f:\"image\",...e.imageServiceParameters}),signal:s}),u=(await Promise.all([l,a]))[0].data,p=t.format||\"jpgpng\";let c=p;if(\"bsq\"!==c&&\"bip\"!==c&&(c=L(u)),!c)throw new o(\"imagery-layer:fetch-image\",\"unsupported format signature \"+String.fromCharCode.apply(null,new Uint8Array(u)));const m={signal:s},d=\"gif\"===p||\"bmp\"===p||p.includes(\"png\")&&(\"png\"===c||\"jpg\"===c)?U(u,{useCanvas:!0,...t},m):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},m);return{pixelData:{pixelBlock:await d,extent:t.extent},params:t}}_generateRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return fe(b(this.parsedUrl),e,i)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=Q(e,{multidimensionalSubset:this.multidimensionalSubset});if(p(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new O;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&\"none\"!==this.renderingRule.functionName?.toLowerCase()&&t.forEach((e=>e.variableName=\"\")),t=t.filter((({variableName:e,dimensionName:t})=>e&&\"*\"!==e||t)),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,i){i=i||{};const r=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:o,templateFields:a}=i,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,c=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,\", \")))||[];const m=this.objectIdField||\"ObjectId\",d=\"string\"==typeof r&&r.toLowerCase().includes(\"nodata\"),h=[];if(r&&!u&&!d){const e={};e[m]=0;c=[r],u=[new t(this.fullExtent,null,e)]}if(!u)return[];let f,g,y;this._updateResponseFieldNames(u,a),d&&!n&&(u=[]);for(let t=0;t<u.length;t++){if(f=u[t],null!=r){if(g=c[t],y=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.includes(this.renderingRule.functionName)?l[s.indexOf(this.renderingRule.functionName)]:r,\"nodata\"===g.toLowerCase()&&!n)continue;const e=\"Raster.ItemPixelValue\",i=\"Raster.ServicePixelValue\";f.attributes[e]=g,f.attributes[i]=y,this._updateFeatureWithMagDirValues(f,g);const o=this.fields&&this.fields.length>0;let a=this.renderingRule&&p(this.serviceRasterInfo.attributeTable)?o?g:r:y;this.renderingRule||(a=o?g:r),this._updateFeatureWithRasterAttributeTableValues(f,a)}if(f.sourceLayer=f.layer=this,o&&this._updateFeatureWithDomainValues(f),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t=\"Raster.ServicePixelValue.\"+s[e];f.attributes[t]=l[e]}h.push(u[t])}return h}_processMultidimensionalIntersection(e,t,i){const{multidimensionalSubset:r}=this;if(!r)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(r){const{isOutside:i,intersection:s}=V(r,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};s&&p(s.timeExtent)&&(t=s.timeExtent)}if(i=this._combineMosaicRuleWithTimeExtent(i,t),p(i)&&i.multidimensionalDefinition){const{isOutside:e}=V(r,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(c(i))return;const{features:r,fields:s}=i,n=s.map((e=>e.name)).filter((e=>\"value\"===e.toLowerCase())),o=n&&n[0];if(!o)return;const a=r.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));a&&a[0]&&s.forEach((t=>{const i=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=a[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\\s*/).map((e=>parseFloat(e))),r=i.map((e=>[e])),s=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new C({height:1,width:1,pixelType:\"f32\",pixels:r,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new le(0,0,0,0,this.spatialReference)});const o=\"esriImageServiceDataTypeVector-MagDir\"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:z([n.pixels[0][0],n.pixels[1][0]]);e.attributes[\"Raster.Magnitude\"]=o[0],e.attributes[\"Raster.Direction\"]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&\"coded-value\"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find((e=>e.code===i));r&&(e.attributes[t.name]=r.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;c(i)||e.forEach((e=>{if(e&&e.attributes)for(const r of t){const t=i.get(r)?.name;t&&t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRenderingRule(e){return null!=e&&null!=e.functionName&&\"none\"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(\"Raw\"===e)return e.replace(\"Raw\",\"None\");const i=e.toLowerCase().replace(/ /gi,\"_\");return t.has(i)?t.get(i):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty(\"functionType\")}_isVectorDataSet(){return\"esriImageServiceDataTypeVector-UV\"===this.serviceDataType||\"esriImageServiceDataTypeVector-MagDir\"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,renderingRule:r}=this;r&&null==e.renderingRule&&(e.renderingRule=r),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(\",\").map((e=>e.trim())):[\"image\",\"catalog\"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:s}=e,n=t.includes(\"image\"),o=\"esriImageServiceDataTypeElevation\"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes(\"edit\"),u=t.includes(\"mensuration\")&&a,p=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(\",\").map((e=>e.trim())),c=u&&p.includes(\"basic\");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:u,supportsDownload:t.includes(\"download\"),supportsQuery:t.includes(\"catalog\")&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&n,supportsProject:i>=10.3&&n,supportsComputeStatisticsHistograms:i>=10.4&&n,supportsQueryBoundary:i>=10.6&&n,supportsCalculateVolume:i>=10.7&&o,supportsComputePixelLocation:i>=10.7&&t.includes(\"catalog\"),supportsComputeAngles:i>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!!r?.supportsStatistics,supportsOrderBy:!!r?.supportsOrderBy,supportsDistinct:!!r?.supportsDistinct,supportsPagination:!!r?.supportsPagination,supportsStandardizedQueriesOnly:!!r?.useStandardizedQueries,supportsPercentileStatistics:!!r?.supportsPercentileStatistics,supportsCentroid:!!r?.supportsReturningGeometryCentroid,supportsDistance:!!r?.supportsQueryWithDistance,supportsExtent:!!r?.supportsReturningQueryExtent,supportsGeometryProperties:!!r?.supportsReturningGeometryProperties,supportsHavingClause:!!r?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!r?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:c,supportsAreaAndPerimeter:c,supportsPointOrCentroid:c,supportsHeightFromBaseAndTop:u&&p.includes(\"base-top height\"),supportsHeightFromBaseAndTopShadow:u&&p.includes(\"base-top shadow height\"),supportsHeightFromTopAndTopShadow:u&&p.includes(\"top-top shadow height\"),supports3D:u&&p.includes(\"3d\")}}}};function b(e){return e?.path??\"\"}return e([f()],g.prototype,\"_functionRasterInfos\",void 0),e([f()],g.prototype,\"_rasterJobHandler\",void 0),e([f()],g.prototype,\"_cachedRendererJson\",void 0),e([f({readOnly:!0})],g.prototype,\"_serviceSupportsMosaicRule\",void 0),e([S(\"_serviceSupportsMosaicRule\",[\"currentVersion\",\"fields\"])],g.prototype,\"readServiceSupportsMosaicRule\",null),e([f()],g.prototype,\"_rasterAttributeTableFieldPrefix\",void 0),e([f({readOnly:!0})],g.prototype,\"_rasterFunctionNamesIndex\",null),e([f()],g.prototype,\"adjustAspectRatio\",void 0),e([f({type:[y],json:{write:!0}})],g.prototype,\"bandIds\",void 0),e([S(\"bandIds\")],g.prototype,\"readBandIds\",null),e([f({readOnly:!0,json:{read:!1}})],g.prototype,\"capabilities\",void 0),e([S(\"service\",\"capabilities\",[\"capabilities\",\"currentVersion\",\"serviceDataType\"])],g.prototype,\"readCapabilities\",null),e([f({type:Number})],g.prototype,\"compressionQuality\",void 0),e([x(\"compressionQuality\")],g.prototype,\"writeCompressionQuality\",null),e([f({type:Number})],g.prototype,\"compressionTolerance\",void 0),e([x(\"compressionTolerance\")],g.prototype,\"writeCompressionTolerance\",null),e([f({json:{read:{source:\"copyrightText\"}}})],g.prototype,\"copyright\",void 0),e([f({readOnly:!0,dependsOn:[\"_serviceSupportsMosaicRule\"]})],g.prototype,\"defaultMosaicRule\",void 0),e([S(\"defaultMosaicRule\",[\"defaultMosaicMethod\"])],g.prototype,\"readDefaultMosaicRule\",null),e([f({type:String,json:{name:\"layerDefinition.definitionExpression\",write:{enabled:!0,allowNull:!0}}})],g.prototype,\"definitionExpression\",void 0),e([f({readOnly:!0,constructOnly:!0})],g.prototype,\"exportImageServiceParameters\",void 0),e([f()],g.prototype,\"rasterInfo\",void 0),e([f({readOnly:!0,type:[D]})],g.prototype,\"fields\",void 0),e([f({readOnly:!0})],g.prototype,\"fieldsIndex\",null),e([f({type:[\"png\",\"png8\",\"png24\",\"png32\",\"jpg\",\"bmp\",\"gif\",\"jpgpng\",\"lerc\",\"tiff\"],json:{write:!0}})],g.prototype,\"format\",null),e([S(\"service\",\"format\",[\"serviceDataType\"])],g.prototype,\"readFormat\",null),e([f({type:le})],g.prototype,\"fullExtent\",void 0),e([f({readOnly:!0})],g.prototype,\"hasMultidimensions\",void 0),e([f({json:{read:{source:\"maxImageHeight\"}}})],g.prototype,\"imageMaxHeight\",void 0),e([f({json:{read:{source:\"maxImageWidth\"}}})],g.prototype,\"imageMaxWidth\",void 0),e([f({type:String,json:{type:M.jsonValues,read:M.read,write:M.write}})],g.prototype,\"interpolation\",void 0),e([f()],g.prototype,\"minScale\",void 0),e([S(\"service\",\"minScale\")],g.prototype,\"readMinScale\",null),e([f()],g.prototype,\"maxScale\",void 0),e([S(\"service\",\"maxScale\")],g.prototype,\"readMaxScale\",null),e([f({type:O})],g.prototype,\"mosaicRule\",null),e([S(\"mosaicRule\",[\"mosaicRule\",\"defaultMosaicMethod\"])],g.prototype,\"readMosaicRule\",null),e([x(\"mosaicRule\")],g.prototype,\"writeMosaicRule\",null),e([f()],g.prototype,\"multidimensionalInfo\",void 0),e([f({type:N,json:{write:!0}})],g.prototype,\"multidimensionalSubset\",void 0),e([f({json:{type:y}})],g.prototype,\"noData\",void 0),e([x(\"noData\")],g.prototype,\"writeNoData\",null),e([f({type:String,json:{type:A.jsonValues,read:A.read,write:A.write}})],g.prototype,\"noDataInterpretation\",void 0),e([f({type:String,readOnly:!0,json:{read:{source:[\"fields\"]}}})],g.prototype,\"objectIdField\",void 0),e([S(\"objectIdField\")],g.prototype,\"readObjectIdField\",null),e([f({})],g.prototype,\"geometryType\",void 0),e([f({})],g.prototype,\"typeIdField\",void 0),e([f({})],g.prototype,\"types\",void 0),e([f({readOnly:!0})],g.prototype,\"parsedUrl\",null),e([f({type:Function})],g.prototype,\"pixelFilter\",void 0),e([f()],g.prototype,\"raster\",void 0),e([f({readOnly:!0})],g.prototype,\"sourceType\",void 0),e([S(\"sourceType\",[\"serviceSourceType\",\"fields\"])],g.prototype,\"readSourceType\",null),e([f()],g.prototype,\"viewId\",void 0),e([f({types:i,json:{name:\"layerDefinition.drawingInfo.renderer\",origins:{\"web-scene\":{types:r,name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:e=>({enabled:e&&\"vector-field\"!==e.type&&\"flow\"!==e.type})}}}}})],g.prototype,\"renderer\",null),e([S(\"renderer\")],g.prototype,\"readRenderer\",null),e([x(\"renderer\")],g.prototype,\"writeRenderer\",null),e([f()],g.prototype,\"symbolizer\",void 0),e([f(I)],g.prototype,\"opacity\",void 0),e([f({readOnly:!0})],g.prototype,\"rasterFields\",null),e([f({constructOnly:!0})],g.prototype,\"rasterFunctionInfos\",void 0),e([f({type:J})],g.prototype,\"renderingRule\",null),e([S(\"renderingRule\",[\"renderingRule\",\"rasterFunctionInfos\"])],g.prototype,\"readRenderingRule\",null),e([x(\"renderingRule\")],g.prototype,\"writeRenderingRule\",null),e([f()],g.prototype,\"serviceDataType\",void 0),e([f({readOnly:!0,type:De})],g.prototype,\"spatialReference\",void 0),e([S(\"spatialReference\",[\"spatialReference\",\"extent\"])],g.prototype,\"readSpatialReference\",null),e([f({json:{type:je.jsonValues}})],g.prototype,\"pixelType\",void 0),e([S(\"pixelType\")],g.prototype,\"readPixelType\",null),e([x(\"pixelType\")],g.prototype,\"writePixelType\",null),e([f({constructOnly:!0,type:q})],g.prototype,\"serviceRasterInfo\",void 0),e([f()],g.prototype,\"sourceJSON\",void 0),e([f(w)],g.prototype,\"url\",void 0),e([f({readOnly:!0})],g.prototype,\"version\",void 0),e([S(\"version\",[\"currentVersion\",\"fields\",\"timeInfo\"])],g.prototype,\"readVersion\",null),g=e([v(\"esri.layers.mixins.ArcGISImageService\")],g),g};export{Ne as ArcGISImageService};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}