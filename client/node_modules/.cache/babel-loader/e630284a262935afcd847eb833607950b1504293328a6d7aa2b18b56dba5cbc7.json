{"ast":null,"code":"/* Tabulator v5.0.10 (c) Oliver Folkerd 2021 */\nclass CoreFeature {\n  constructor(table) {\n    this.table = table;\n  }\n\n  //////////////////////////////////////////\n  /////////////// DataLoad /////////////////\n  //////////////////////////////////////////\n\n  reloadData(data, silent) {\n    return this.table.dataLoader.load(data, undefined, undefined, undefined, silent);\n  }\n\n  //////////////////////////////////////////\n  ///////////// Localization ///////////////\n  //////////////////////////////////////////\n\n  langText() {\n    return this.table.modules.localize.getText(...arguments);\n  }\n  langBind() {\n    return this.table.modules.localize.bind(...arguments);\n  }\n  langLocale() {\n    return this.table.modules.localize.getLocale(...arguments);\n  }\n\n  //////////////////////////////////////////\n  ////////// Inter Table Comms /////////////\n  //////////////////////////////////////////\n\n  commsConnections() {\n    return this.table.modules.comms.getConnections(...arguments);\n  }\n  commsSend() {\n    return this.table.modules.comms.send(...arguments);\n  }\n\n  //////////////////////////////////////////\n  //////////////// Layout  /////////////////\n  //////////////////////////////////////////\n\n  layoutMode() {\n    return this.table.modules.layout.getMode();\n  }\n  layoutRefresh() {\n    return this.table.modules.layout.layout();\n  }\n\n  //////////////////////////////////////////\n  /////////////// Event Bus ////////////////\n  //////////////////////////////////////////\n\n  subscribe() {\n    return this.table.eventBus.subscribe(...arguments);\n  }\n  unsubscribe() {\n    return this.table.eventBus.unsubscribe(...arguments);\n  }\n  subscribed(key) {\n    return this.table.eventBus.subscribed(key);\n  }\n  subscriptionChange() {\n    return this.table.eventBus.subscriptionChange(...arguments);\n  }\n  dispatch() {\n    return this.table.eventBus.dispatch(...arguments);\n  }\n  chain() {\n    return this.table.eventBus.chain(...arguments);\n  }\n  confirm() {\n    return this.table.eventBus.confirm(...arguments);\n  }\n  dispatchExternal() {\n    return this.table.externalEvents.dispatch(...arguments);\n  }\n  subscribedExternal(key) {\n    return this.table.externalEvents.subscribed(key);\n  }\n  subscriptionChangeExternal() {\n    return this.table.externalEvents.subscriptionChange(...arguments);\n  }\n\n  //////////////////////////////////////////\n  //////////////// Options /////////////////\n  //////////////////////////////////////////\n\n  options(key) {\n    return this.table.options[key];\n  }\n  setOption(key, value) {\n    if (typeof value !== \"undefined\") {\n      this.table.options[key] = value;\n    }\n    return this.table.options[key];\n  }\n\n  //////////////////////////////////////////\n  //////////////// Modules /////////////////\n  //////////////////////////////////////////\n\n  module(key) {\n    return this.table.module(key);\n  }\n}\nclass Module extends CoreFeature {\n  constructor(table, name) {\n    super(table);\n    this._handler = null;\n  }\n  initialize() {\n    // setup module when table is initialized, to be overriden in module\n  }\n\n  ///////////////////////////////////\n  ////// Options Registration ///////\n  ///////////////////////////////////\n\n  registerTableOption(key, value) {\n    this.table.optionsList.register(key, value);\n  }\n  registerColumnOption(key, value) {\n    this.table.columnManager.optionsList.register(key, value);\n  }\n\n  ///////////////////////////////////\n  /// Public Function Registation ///\n  ///////////////////////////////////\n\n  registerTableFunction(name, func) {\n    if (typeof this.table[name] === \"undefined\") {\n      this.table[name] = func;\n    } else {\n      console.warn(\"Unable to bind table function, name already in use\", name);\n    }\n  }\n  registerComponentFunction(component, func, handler) {\n    return this.table.componentFunctionBinder.bind(component, func, handler);\n  }\n\n  ///////////////////////////////////\n  ////////// Data Pipeline //////////\n  ///////////////////////////////////\n\n  registerDataHandler(handler, priority) {\n    this.table.rowManager.registerDataPipelineHandler(handler, priority);\n    this._handler = handler;\n  }\n  registerDisplayHandler(handler, priority) {\n    this.table.rowManager.registerDisplayPipelineHandler(handler, priority);\n    this._handler = handler;\n  }\n  refreshData(renderInPosition, handler) {\n    if (!handler) {\n      handler = this._handler;\n    }\n    if (handler) {\n      this.table.rowManager.refreshActiveData(handler, false, renderInPosition);\n    }\n  }\n}\nclass Helpers {\n  static elVisible(el) {\n    return !(el.offsetWidth <= 0 && el.offsetHeight <= 0);\n  }\n  static elOffset(el) {\n    var box = el.getBoundingClientRect();\n    return {\n      top: box.top + window.pageYOffset - document.documentElement.clientTop,\n      left: box.left + window.pageXOffset - document.documentElement.clientLeft\n    };\n  }\n  static deepClone(obj, clone) {\n    let list = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var objectProto = {}.__proto__,\n      arrayProto = [].__proto__;\n    if (!clone) {\n      clone = Object.assign(Array.isArray(obj) ? [] : {}, obj);\n    }\n    for (var i in obj) {\n      let subject = obj[i],\n        match,\n        copy;\n      if (subject != null && typeof subject === \"object\" && (subject.__proto__ === objectProto || subject.__proto__ === arrayProto)) {\n        match = list.findIndex(item => {\n          return item.subject === subject;\n        });\n        if (match > -1) {\n          clone[i] = list[match].copy;\n        } else {\n          copy = Object.assign(Array.isArray(subject) ? [] : {}, subject);\n          list.unshift({\n            subject,\n            copy\n          });\n          clone[i] = this.deepClone(subject, copy, list);\n        }\n      }\n    }\n    return clone;\n  }\n}\nvar defautlAccessors = {};\nclass Accessor extends Module {\n  constructor(table) {\n    super(table);\n    this.allowedTypes = [\"\", \"data\", \"download\", \"clipboard\", \"print\", \"htmlOutput\"]; //list of accessor types\n\n    this.registerColumnOption(\"accessor\");\n    this.registerColumnOption(\"accessorParams\");\n    this.registerColumnOption(\"accessorData\");\n    this.registerColumnOption(\"accessorDataParams\");\n    this.registerColumnOption(\"accessorDownload\");\n    this.registerColumnOption(\"accessorDownloadParams\");\n    this.registerColumnOption(\"accessorClipboard\");\n    this.registerColumnOption(\"accessorClipboardParams\");\n    this.registerColumnOption(\"accessorPrint\");\n    this.registerColumnOption(\"accessorPrintParams\");\n    this.registerColumnOption(\"accessorHtmlOutput\");\n    this.registerColumnOption(\"accessorHtmlOutputParams\");\n  }\n  initialize() {\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-data-retrieve\", this.transformRow.bind(this));\n  }\n\n  //initialize column accessor\n  initializeColumn(column) {\n    var match = false,\n      config = {};\n    this.allowedTypes.forEach(type => {\n      var key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n        accessor;\n      if (column.definition[key]) {\n        accessor = this.lookupAccessor(column.definition[key]);\n        if (accessor) {\n          match = true;\n          config[key] = {\n            accessor: accessor,\n            params: column.definition[key + \"Params\"] || {}\n          };\n        }\n      }\n    });\n    if (match) {\n      column.modules.accessor = config;\n    }\n  }\n  lookupAccessor(value) {\n    var accessor = false;\n\n    //set column accessor\n    switch (typeof value) {\n      case \"string\":\n        if (Accessor.accessors[value]) {\n          accessor = Accessor.accessors[value];\n        } else {\n          console.warn(\"Accessor Error - No such accessor found, ignoring: \", value);\n        }\n        break;\n      case \"function\":\n        accessor = value;\n        break;\n    }\n    return accessor;\n  }\n\n  //apply accessor to row\n  transformRow(row, type) {\n    var key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n      rowComponent = row.getComponent();\n\n    //clone data object with deep copy to isolate internal data from returned result\n    var data = Helpers.deepClone(row.data || {});\n    this.table.columnManager.traverse(function (column) {\n      var value, accessor, params, colCompnent;\n      if (column.modules.accessor) {\n        accessor = column.modules.accessor[key] || column.modules.accessor.accessor || false;\n        if (accessor) {\n          value = column.getFieldValue(data);\n          if (value != \"undefined\") {\n            colCompnent = column.getComponent();\n            params = typeof accessor.params === \"function\" ? accessor.params(value, data, type, colCompnent, rowComponent) : accessor.params;\n            column.setFieldValue(data, accessor.accessor(value, data, type, params, colCompnent, rowComponent));\n          }\n        }\n      }\n    });\n    return data;\n  }\n}\n\n//load defaults\nAccessor.moduleName = \"accessor\";\nAccessor.accessors = defautlAccessors;\nvar defaultConfig = {\n  method: \"GET\"\n};\nfunction generateParamsList(data, prefix) {\n  var output = [];\n  prefix = prefix || \"\";\n  if (Array.isArray(data)) {\n    data.forEach((item, i) => {\n      output = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\n    });\n  } else if (typeof data === \"object\") {\n    for (var key in data) {\n      output = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\n    }\n  } else {\n    output.push({\n      key: prefix,\n      value: data\n    });\n  }\n  return output;\n}\nfunction serializeParams(params) {\n  var output = generateParamsList(params),\n    encoded = [];\n  output.forEach(function (item) {\n    encoded.push(encodeURIComponent(item.key) + \"=\" + encodeURIComponent(item.value));\n  });\n  return encoded.join(\"&\");\n}\nfunction defaultURLGenerator(url, config, params) {\n  if (url) {\n    if (params && Object.keys(params).length) {\n      if (!config.method || config.method.toLowerCase() == \"get\") {\n        config.method = \"get\";\n        url += (url.includes(\"?\") ? \"&\" : \"?\") + serializeParams(params);\n      }\n    }\n  }\n  return url;\n}\nfunction defaultLoaderPromise(url, config, params) {\n  var contentType;\n  return new Promise((resolve, reject) => {\n    //set url\n    url = this.urlGenerator.call(this.table, url, config, params);\n\n    //set body content if not GET request\n    if (config.method.toUpperCase() != \"GET\") {\n      contentType = typeof this.table.options.ajaxContentType === \"object\" ? this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType];\n      if (contentType) {\n        for (var key in contentType.headers) {\n          if (!config.headers) {\n            config.headers = {};\n          }\n          if (typeof config.headers[key] === \"undefined\") {\n            config.headers[key] = contentType.headers[key];\n          }\n        }\n        config.body = contentType.body.call(this, url, config, params);\n      } else {\n        console.warn(\"Ajax Error - Invalid ajaxContentType value:\", this.table.options.ajaxContentType);\n      }\n    }\n    if (url) {\n      //configure headers\n      if (typeof config.headers === \"undefined\") {\n        config.headers = {};\n      }\n      if (typeof config.headers.Accept === \"undefined\") {\n        config.headers.Accept = \"application/json\";\n      }\n      if (typeof config.headers[\"X-Requested-With\"] === \"undefined\") {\n        config.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n      }\n      if (typeof config.mode === \"undefined\") {\n        config.mode = \"cors\";\n      }\n      if (config.mode == \"cors\") {\n        if (typeof config.headers[\"Origin\"] === \"undefined\") {\n          config.headers[\"Origin\"] = window.location.origin;\n        }\n        if (typeof config.credentials === \"undefined\") {\n          config.credentials = 'same-origin';\n        }\n      } else {\n        if (typeof config.credentials === \"undefined\") {\n          config.credentials = 'include';\n        }\n      }\n\n      //send request\n      fetch(url, config).then(response => {\n        if (response.ok) {\n          response.json().then(data => {\n            resolve(data);\n          }).catch(error => {\n            reject(error);\n            console.warn(\"Ajax Load Error - Invalid JSON returned\", error);\n          });\n        } else {\n          console.error(\"Ajax Load Error - Connection Error: \" + response.status, response.statusText);\n          reject(response);\n        }\n      }).catch(error => {\n        console.error(\"Ajax Load Error - Connection Error: \", error);\n        reject(error);\n      });\n    } else {\n      console.warn(\"Ajax Load Error - No URL Set\");\n      resolve([]);\n    }\n  });\n}\nfunction generateParamsList$1(data, prefix) {\n  var output = [];\n  prefix = prefix || \"\";\n  if (Array.isArray(data)) {\n    data.forEach((item, i) => {\n      output = output.concat(generateParamsList$1(item, prefix ? prefix + \"[\" + i + \"]\" : i));\n    });\n  } else if (typeof data === \"object\") {\n    for (var key in data) {\n      output = output.concat(generateParamsList$1(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\n    }\n  } else {\n    output.push({\n      key: prefix,\n      value: data\n    });\n  }\n  return output;\n}\nvar defaultContentTypeFormatters = {\n  \"json\": {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: function (url, config, params) {\n      return JSON.stringify(params);\n    }\n  },\n  \"form\": {\n    headers: {},\n    body: function (url, config, params) {\n      var output = generateParamsList$1(params),\n        form = new FormData();\n      output.forEach(function (item) {\n        form.append(item.key, item.value);\n      });\n      return form;\n    }\n  }\n};\nclass Ajax extends Module {\n  constructor(table) {\n    super(table);\n    this.config = false; //hold config object for ajax request\n    this.url = \"\"; //request URL\n    this.urlGenerator = false;\n    this.params = false; //request parameters\n\n    this.loaderPromise = false;\n    this.registerTableOption(\"ajaxURL\", false); //url for ajax loading\n    this.registerTableOption(\"ajaxURLGenerator\", false);\n    this.registerTableOption(\"ajaxParams\", {}); //params for ajax loading\n    this.registerTableOption(\"ajaxConfig\", \"get\"); //ajax request type\n    this.registerTableOption(\"ajaxContentType\", \"form\"); //ajax request type\n    this.registerTableOption(\"ajaxRequestFunc\", false); //promise function\n\n    this.registerTableOption(\"ajaxRequesting\", function () {});\n    this.registerTableOption(\"ajaxResponse\", false);\n    this.contentTypeFormatters = Ajax.contentTypeFormatters;\n  }\n\n  //initialize setup options\n  initialize() {\n    this.loaderPromise = this.table.options.ajaxRequestFunc || Ajax.defaultLoaderPromise;\n    this.urlGenerator = this.table.options.ajaxURLGenerator || Ajax.defaultURLGenerator;\n    if (this.table.options.ajaxParams) {\n      this.setParams(this.table.options.ajaxParams);\n    }\n    if (this.table.options.ajaxConfig) {\n      this.setConfig(this.table.options.ajaxConfig);\n    }\n    if (this.table.options.ajaxURL) {\n      this.setUrl(this.table.options.ajaxURL);\n    }\n    this.registerTableFunction(\"getAjaxUrl\", this.getUrl.bind(this));\n    this.subscribe(\"data-loading\", this.requestDataCheck.bind(this));\n    this.subscribe(\"data-load\", this.requestData.bind(this));\n  }\n  requestDataCheck(data, params, config, silent) {\n    return !!(!data && this.url || typeof data === \"string\");\n  }\n  requestData(data, params, config, silent, previousData) {\n    if (this.requestDataCheck(data)) {\n      if (data) {\n        this.setUrl(data);\n      }\n      if (params) {\n        this.setParams(params, true);\n      }\n      if (config) {\n        this.setConfig(config);\n      }\n      return this.sendRequest();\n    } else {\n      return previousData;\n    }\n  }\n\n  //set ajax params\n  setParams(params, update) {\n    if (update) {\n      this.params = this.params || {};\n      for (let key in params) {\n        this.params[key] = params[key];\n      }\n    } else {\n      this.params = params;\n    }\n  }\n  getParams() {\n    return this.params || {};\n  }\n\n  //load config object\n  setConfig(config) {\n    this._loadDefaultConfig();\n    if (typeof config == \"string\") {\n      this.config.method = config;\n    } else {\n      for (let key in config) {\n        this.config[key] = config[key];\n      }\n    }\n  }\n\n  //create config object from default\n  _loadDefaultConfig(force) {\n    if (!this.config || force) {\n      this.config = {};\n\n      //load base config from defaults\n      for (let key in Ajax.defaultConfig) {\n        this.config[key] = Ajax.defaultConfig[key];\n      }\n    }\n  }\n\n  //set request url\n  setUrl(url) {\n    this.url = url;\n  }\n\n  //get request url\n  getUrl() {\n    return this.url;\n  }\n\n  //send ajax request\n  sendRequest(silent) {\n    var url = this.url;\n    this._loadDefaultConfig();\n    if (this.table.options.ajaxRequesting.call(this.table, this.url, this.params) !== false) {\n      return this.loaderPromise(url, this.config, this.params).then(data => {\n        if (this.table.options.ajaxResponse) {\n          data = this.table.options.ajaxResponse.call(this.table, this.url, this.params, data);\n        }\n        return data;\n      });\n    } else {\n      return Promise.reject();\n    }\n  }\n}\nAjax.moduleName = \"ajax\";\n\n//load defaults\nAjax.defaultConfig = defaultConfig;\nAjax.defaultURLGenerator = defaultURLGenerator;\nAjax.defaultLoaderPromise = defaultLoaderPromise;\nAjax.contentTypeFormatters = defaultContentTypeFormatters;\nvar defaultPasteActions = {\n  replace: function (rows) {\n    return this.table.setData(rows);\n  },\n  update: function (rows) {\n    return this.table.updateOrAddData(rows);\n  },\n  insert: function (rows) {\n    return this.table.addData(rows);\n  }\n};\nvar defaultPasteParsers = {\n  table: function (clipboard) {\n    var data = [],\n      headerFindSuccess = true,\n      columns = this.table.columnManager.columns,\n      columnMap = [],\n      rows = [];\n\n    //get data from clipboard into array of columns and rows.\n    clipboard = clipboard.split(\"\\n\");\n    clipboard.forEach(function (row) {\n      data.push(row.split(\"\\t\"));\n    });\n    if (data.length && !(data.length === 1 && data[0].length < 2)) {\n      //check if headers are present by title\n      data[0].forEach(function (value) {\n        var column = columns.find(function (column) {\n          return value && column.definition.title && value.trim() && column.definition.title.trim() === value.trim();\n        });\n        if (column) {\n          columnMap.push(column);\n        } else {\n          headerFindSuccess = false;\n        }\n      });\n\n      //check if column headers are present by field\n      if (!headerFindSuccess) {\n        headerFindSuccess = true;\n        columnMap = [];\n        data[0].forEach(function (value) {\n          var column = columns.find(function (column) {\n            return value && column.field && value.trim() && column.field.trim() === value.trim();\n          });\n          if (column) {\n            columnMap.push(column);\n          } else {\n            headerFindSuccess = false;\n          }\n        });\n        if (!headerFindSuccess) {\n          columnMap = this.table.columnManager.columnsByIndex;\n        }\n      }\n\n      //remove header row if found\n      if (headerFindSuccess) {\n        data.shift();\n      }\n      data.forEach(function (item) {\n        var row = {};\n        item.forEach(function (value, i) {\n          if (columnMap[i]) {\n            row[columnMap[i].field] = value;\n          }\n        });\n        rows.push(row);\n      });\n      return rows;\n    } else {\n      return false;\n    }\n  }\n};\nclass Clipboard extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = true;\n    this.pasteParser = function () {};\n    this.pasteAction = function () {};\n    this.customSelection = false;\n    this.rowRange = false;\n    this.blocked = true; //block copy actions not originating from this command\n\n    this.registerTableOption(\"clipboard\", false); //enable clipboard\n    this.registerTableOption(\"clipboardCopyStyled\", true); //formatted table data\n    this.registerTableOption(\"clipboardCopyConfig\", false); //clipboard config\n    this.registerTableOption(\"clipboardCopyFormatter\", false); //DEPRICATED - REMOVE in 5.0\n    this.registerTableOption(\"clipboardCopyRowRange\", \"active\"); //restrict clipboard to visible rows only\n    this.registerTableOption(\"clipboardPasteParser\", \"table\"); //convert pasted clipboard data to rows\n    this.registerTableOption(\"clipboardPasteAction\", \"insert\"); //how to insert pasted data into the table\n\n    this.registerColumnOption(\"clipboard\");\n    this.registerColumnOption(\"titleClipboard\");\n  }\n  initialize() {\n    this.mode = this.table.options.clipboard;\n    this.rowRange = this.table.options.clipboardCopyRowRange;\n    if (this.mode === true || this.mode === \"copy\") {\n      this.table.element.addEventListener(\"copy\", e => {\n        var plain, html, list;\n        if (!this.blocked) {\n          e.preventDefault();\n          if (this.customSelection) {\n            plain = this.customSelection;\n            if (this.table.options.clipboardCopyFormatter) {\n              plain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\n            }\n          } else {\n            var list = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, \"clipboard\");\n            html = this.table.modules.export.genereateHTMLTable(list);\n            plain = html ? this.generatePlainContent(list) : \"\";\n            if (this.table.options.clipboardCopyFormatter) {\n              plain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\n              html = this.table.options.clipboardCopyFormatter(\"html\", html);\n            }\n          }\n          if (window.clipboardData && window.clipboardData.setData) {\n            window.clipboardData.setData('Text', plain);\n          } else if (e.clipboardData && e.clipboardData.setData) {\n            e.clipboardData.setData('text/plain', plain);\n            if (html) {\n              e.clipboardData.setData('text/html', html);\n            }\n          } else if (e.originalEvent && e.originalEvent.clipboardData.setData) {\n            e.originalEvent.clipboardData.setData('text/plain', plain);\n            if (html) {\n              e.originalEvent.clipboardData.setData('text/html', html);\n            }\n          }\n          this.dispatchExternal(\"clipboardCopied\", plain, html);\n          this.reset();\n        }\n      });\n    }\n    if (this.mode === true || this.mode === \"paste\") {\n      this.table.element.addEventListener(\"paste\", e => {\n        this.paste(e);\n      });\n    }\n    this.setPasteParser(this.table.options.clipboardPasteParser);\n    this.setPasteAction(this.table.options.clipboardPasteAction);\n    this.registerTableFunction(\"copyToClipboard\", this.copy.bind(this));\n  }\n  reset() {\n    this.blocked = true;\n    this.customSelection = false;\n  }\n  generatePlainContent(list) {\n    var output = [];\n    list.forEach(row => {\n      var rowData = [];\n      row.columns.forEach(col => {\n        var value = \"\";\n        if (col) {\n          if (row.type === \"group\") {\n            col.value = col.component.getKey();\n          }\n          if (col.value === null) {\n            value = \"\";\n          } else {\n            switch (typeof col.value) {\n              case \"object\":\n                value = JSON.stringify(col.value);\n                break;\n              case \"undefined\":\n                value = \"\";\n                break;\n              default:\n                value = col.value;\n            }\n          }\n        }\n        rowData.push(value);\n      });\n      output.push(rowData.join(\"\\t\"));\n    });\n    return output.join(\"\\n\");\n  }\n  copy(range, internal) {\n    var range, sel, textRange;\n    this.blocked = false;\n    this.customSelection = false;\n    if (this.mode === true || this.mode === \"copy\") {\n      this.rowRange = range || this.table.options.clipboardCopyRowRange;\n      if (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\n        range = document.createRange();\n        range.selectNodeContents(this.table.element);\n        sel = window.getSelection();\n        if (sel.toString() && internal) {\n          this.customSelection = sel.toString();\n        }\n        sel.removeAllRanges();\n        sel.addRange(range);\n      } else if (typeof document.selection != \"undefined\" && typeof document.body.createTextRange != \"undefined\") {\n        textRange = document.body.createTextRange();\n        textRange.moveToElementText(this.table.element);\n        textRange.select();\n      }\n      document.execCommand('copy');\n      if (sel) {\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  //PASTE EVENT HANDLING\n  setPasteAction(action) {\n    switch (typeof action) {\n      case \"string\":\n        this.pasteAction = Clipboard.pasteActions[action];\n        if (!this.pasteAction) {\n          console.warn(\"Clipboard Error - No such paste action found:\", action);\n        }\n        break;\n      case \"function\":\n        this.pasteAction = action;\n        break;\n    }\n  }\n  setPasteParser(parser) {\n    switch (typeof parser) {\n      case \"string\":\n        this.pasteParser = Clipboard.pasteParsers[parser];\n        if (!this.pasteParser) {\n          console.warn(\"Clipboard Error - No such paste parser found:\", parser);\n        }\n        break;\n      case \"function\":\n        this.pasteParser = parser;\n        break;\n    }\n  }\n  paste(e) {\n    var data, rowData, rows;\n    if (this.checkPaseOrigin(e)) {\n      data = this.getPasteData(e);\n      rowData = this.pasteParser.call(this, data);\n      if (rowData) {\n        e.preventDefault();\n        if (this.table.modExists(\"mutator\")) {\n          rowData = this.mutateData(rowData);\n        }\n        rows = this.pasteAction.call(this, rowData);\n        this.dispatchExternal(\"clipboardPasted\", data, rowData, rows);\n      } else {\n        this.dispatchExternal(\"clipboardPasteError\", data);\n      }\n    }\n  }\n  mutateData(data) {\n    var output = [];\n    if (Array.isArray(data)) {\n      data.forEach(row => {\n        output.push(this.table.modules.mutator.transformRow(row, \"clipboard\"));\n      });\n    } else {\n      output = data;\n    }\n    return output;\n  }\n  checkPaseOrigin(e) {\n    var valid = true;\n    if (e.target.tagName != \"DIV\" || this.table.modules.edit.currentCell) {\n      valid = false;\n    }\n    return valid;\n  }\n  getPasteData(e) {\n    var data;\n    if (window.clipboardData && window.clipboardData.getData) {\n      data = window.clipboardData.getData('Text');\n    } else if (e.clipboardData && e.clipboardData.getData) {\n      data = e.clipboardData.getData('text/plain');\n    } else if (e.originalEvent && e.originalEvent.clipboardData.getData) {\n      data = e.originalEvent.clipboardData.getData('text/plain');\n    }\n    return data;\n  }\n}\nClipboard.moduleName = \"clipboard\";\n\n//load defaults\nClipboard.pasteActions = defaultPasteActions;\nClipboard.pasteParsers = defaultPasteParsers;\nclass CalcComponent {\n  constructor(row) {\n    this._row = row;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._row.table.componentFunctionBinder.handle(\"row\", target._row, name);\n        }\n      }\n    });\n  }\n  getData(transform) {\n    return this._row.getData(transform);\n  }\n  getElement() {\n    return this._row.getElement();\n  }\n  getTable() {\n    return this._row.table;\n  }\n  getCells() {\n    var cells = [];\n    this._row.getCells().forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n    return cells;\n  }\n  getCell(column) {\n    var cell = this._row.getCell(column);\n    return cell ? cell.getComponent() : false;\n  }\n  _getSelf() {\n    return this._row;\n  }\n}\n\n//public cell object\nclass CellComponent {\n  constructor(cell) {\n    this._cell = cell;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._cell.table.componentFunctionBinder.handle(\"cell\", target._cell, name);\n        }\n      }\n    });\n  }\n  getValue() {\n    return this._cell.getValue();\n  }\n  getOldValue() {\n    return this._cell.getOldValue();\n  }\n  getInitialValue() {\n    return this._cell.initialValue;\n  }\n  getElement() {\n    return this._cell.getElement();\n  }\n  getRow() {\n    return this._cell.row.getComponent();\n  }\n  getData() {\n    return this._cell.row.getData();\n  }\n  getField() {\n    return this._cell.column.getField();\n  }\n  getColumn() {\n    return this._cell.column.getComponent();\n  }\n  setValue(value, mutate) {\n    if (typeof mutate == \"undefined\") {\n      mutate = true;\n    }\n    this._cell.setValue(value, mutate);\n  }\n  restoreOldValue() {\n    this._cell.setValueActual(this._cell.getOldValue());\n  }\n  restoreInitialValue() {\n    this._cell.setValueActual(this._cell.initialValue);\n  }\n  checkHeight() {\n    this._cell.checkHeight();\n  }\n  getTable() {\n    return this._cell.table;\n  }\n  _getSelf() {\n    return this._cell;\n  }\n}\nclass Cell extends CoreFeature {\n  constructor(column, row) {\n    super(column.table);\n    this.table = column.table;\n    this.column = column;\n    this.row = row;\n    this.element = null;\n    this.value = null;\n    this.initialValue;\n    this.oldValue = null;\n    this.modules = {};\n    this.height = null;\n    this.width = null;\n    this.minWidth = null;\n    this.component = null;\n    this.loaded = false; //track if the cell has been added to the DOM yet\n\n    this.build();\n  }\n\n  //////////////// Setup Functions /////////////////\n  //generate element\n  build() {\n    this.generateElement();\n    this.setWidth();\n    this._configureCell();\n    this.setValueActual(this.column.getFieldValue(this.row.data));\n    this.initialValue = this.value;\n  }\n  generateElement() {\n    this.element = document.createElement('div');\n    this.element.className = \"tabulator-cell\";\n    this.element.setAttribute(\"role\", \"gridcell\");\n    this.element = this.element;\n  }\n  _configureCell() {\n    var element = this.element,\n      field = this.column.getField(),\n      vertAligns = {\n        top: \"flex-start\",\n        bottom: \"flex-end\",\n        middle: \"center\"\n      },\n      hozAligns = {\n        left: \"flex-start\",\n        right: \"flex-end\",\n        center: \"center\"\n      };\n\n    //set text alignment\n    element.style.textAlign = this.column.hozAlign;\n    if (this.column.vertAlign) {\n      element.style.display = \"inline-flex\";\n      element.style.alignItems = vertAligns[this.column.vertAlign] || \"\";\n      if (this.column.hozAlign) {\n        element.style.justifyContent = hozAligns[this.column.hozAlign] || \"\";\n      }\n    }\n    if (field) {\n      element.setAttribute(\"tabulator-field\", field);\n    }\n\n    //add class to cell if needed\n    if (this.column.definition.cssClass) {\n      var classNames = this.column.definition.cssClass.split(\" \");\n      classNames.forEach(className => {\n        element.classList.add(className);\n      });\n    }\n\n    //update tooltip on mouse enter\n    if (this.table.options.tooltipGenerationMode === \"hover\") {\n      element.addEventListener(\"mouseenter\", e => {\n        this._generateTooltip();\n      });\n    }\n    this.dispatch(\"cell-init\", this);\n\n    //hide cell if not visible\n    if (!this.column.visible) {\n      this.hide();\n    }\n  }\n\n  //generate cell contents\n  _generateContents() {\n    var val;\n    val = this.chain(\"cell-format\", this, null, () => {\n      return this.element.innerHTML = this.value;\n    });\n    switch (typeof val) {\n      case \"object\":\n        if (val instanceof Node) {\n          //clear previous cell contents\n          while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n          this.element.appendChild(val);\n        } else {\n          this.element.innerHTML = \"\";\n          if (val != null) {\n            console.warn(\"Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", val);\n          }\n        }\n        break;\n      case \"undefined\":\n      case \"null\":\n        this.element.innerHTML = \"\";\n        break;\n      default:\n        this.element.innerHTML = val;\n    }\n  }\n  cellRendered() {\n    this.dispatch(\"cell-rendered\", this);\n  }\n\n  //generate tooltip text\n  _generateTooltip() {\n    var tooltip = this.column.tooltip;\n    if (tooltip) {\n      if (tooltip === true) {\n        tooltip = this.value;\n      } else if (typeof tooltip == \"function\") {\n        tooltip = tooltip(this.getComponent());\n        if (tooltip === false) {\n          tooltip = \"\";\n        }\n      }\n      if (typeof tooltip === \"undefined\") {\n        tooltip = \"\";\n      }\n      this.element.setAttribute(\"title\", tooltip);\n    } else {\n      this.element.setAttribute(\"title\", \"\");\n    }\n  }\n\n  //////////////////// Getters ////////////////////\n  getElement(containerOnly) {\n    if (!this.loaded) {\n      this.loaded = true;\n      if (!containerOnly) {\n        this.layoutElement();\n      }\n    }\n    return this.element;\n  }\n  getValue() {\n    return this.value;\n  }\n  getOldValue() {\n    return this.oldValue;\n  }\n\n  //////////////////// Actions ////////////////////\n  setValue(value, mutate) {\n    var changed = this.setValueProcessData(value, mutate);\n    if (changed) {\n      this.dispatch(\"cell-value-updated\", this);\n      this.cellRendered();\n      this.dispatchExternal(\"cellEdited\", this.getComponent());\n      if (this.subscribedExternal(\"dataChanged\")) {\n        this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n      }\n    }\n  }\n  setValueProcessData(value, mutate) {\n    var changed = false;\n    if (this.value != value) {\n      changed = true;\n      if (mutate) {\n        value = this.chain(\"cell-value-changing\", [this, value], null, value);\n      }\n    }\n    this.setValueActual(value);\n    if (changed) {\n      this.dispatch(\"cell-value-changed\", this);\n    }\n    return changed;\n  }\n  setValueActual(value) {\n    this.oldValue = this.value;\n    this.value = value;\n    this.dispatch(\"cell-value-save-before\", this);\n    this.column.setFieldValue(this.row.data, value);\n    this.dispatch(\"cell-value-save-after\", this);\n    if (this.loaded) {\n      this.layoutElement();\n    }\n  }\n  layoutElement() {\n    this._generateContents();\n    this._generateTooltip();\n    this.dispatch(\"cell-layout\", this);\n  }\n  setWidth() {\n    this.width = this.column.width;\n    this.element.style.width = this.column.widthStyled;\n  }\n  clearWidth() {\n    this.width = \"\";\n    this.element.style.width = \"\";\n  }\n  getWidth() {\n    return this.width || this.element.offsetWidth;\n  }\n  setMinWidth() {\n    this.minWidth = this.column.minWidth;\n    this.element.style.minWidth = this.column.minWidthStyled;\n  }\n  setMaxWidth() {\n    this.maxWidth = this.column.maxWidth;\n    this.element.style.maxWidth = this.column.maxWidthStyled;\n  }\n  checkHeight() {\n    // var height = this.element.css(\"height\");\n    this.row.reinitializeHeight();\n  }\n  clearHeight() {\n    this.element.style.height = \"\";\n    this.height = null;\n  }\n  setHeight() {\n    this.height = this.row.height;\n    this.element.style.height = this.row.heightStyled;\n  }\n  getHeight() {\n    return this.height || this.element.offsetHeight;\n  }\n  show() {\n    this.element.style.display = this.column.vertAlign ? \"inline-flex\" : \"\";\n  }\n  hide() {\n    this.element.style.display = \"none\";\n  }\n  delete() {\n    this.dispatch(\"cell-delete\", this);\n    if (!this.table.rowManager.redrawBlock && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n    this.element = false;\n    this.column.deleteCell(this);\n    this.row.deleteCell(this);\n    this.calcs = {};\n  }\n  getIndex() {\n    return this.row.getCellIndex(this);\n  }\n\n  //////////////// Object Generation /////////////////\n  getComponent() {\n    if (!this.component) {\n      this.component = new CellComponent(this);\n    }\n    return this.component;\n  }\n}\n\n//public column object\nclass ColumnComponent {\n  constructor(column) {\n    this._column = column;\n    this.type = \"ColumnComponent\";\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._column.table.componentFunctionBinder.handle(\"column\", target._column, name);\n        }\n      }\n    });\n  }\n  getElement() {\n    return this._column.getElement();\n  }\n  getDefinition() {\n    return this._column.getDefinition();\n  }\n  getField() {\n    return this._column.getField();\n  }\n  getCells() {\n    var cells = [];\n    this._column.cells.forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n    return cells;\n  }\n  isVisible() {\n    return this._column.visible;\n  }\n  show() {\n    if (this._column.isGroup) {\n      this._column.columns.forEach(function (column) {\n        column.show();\n      });\n    } else {\n      this._column.show();\n    }\n  }\n  hide() {\n    if (this._column.isGroup) {\n      this._column.columns.forEach(function (column) {\n        column.hide();\n      });\n    } else {\n      this._column.hide();\n    }\n  }\n  toggle() {\n    if (this._column.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  delete() {\n    return this._column.delete();\n  }\n  getSubColumns() {\n    var output = [];\n    if (this._column.columns.length) {\n      this._column.columns.forEach(function (column) {\n        output.push(column.getComponent());\n      });\n    }\n    return output;\n  }\n  getParentColumn() {\n    return this._column.parent instanceof Column ? this._column.parent.getComponent() : false;\n  }\n  _getSelf() {\n    return this._column;\n  }\n  scrollTo() {\n    return this._column.table.columnManager.scrollToColumn(this._column);\n  }\n  getTable() {\n    return this._column.table;\n  }\n  move(to, after) {\n    var toColumn = this._column.table.columnManager.findColumn(to);\n    if (toColumn) {\n      this._column.table.columnManager.moveColumn(this._column, toColumn, after);\n    } else {\n      console.warn(\"Move Error - No matching column found:\", toColumn);\n    }\n  }\n  getNextColumn() {\n    var nextCol = this._column.nextColumn();\n    return nextCol ? nextCol.getComponent() : false;\n  }\n  getPrevColumn() {\n    var prevCol = this._column.prevColumn();\n    return prevCol ? prevCol.getComponent() : false;\n  }\n  updateDefinition(updates) {\n    return this._column.updateDefinition(updates);\n  }\n  getWidth() {\n    return this._column.getWidth();\n  }\n  setWidth(width) {\n    var result;\n    if (width === true) {\n      result = this._column.reinitializeWidth(true);\n    } else {\n      result = this._column.setWidth(width);\n    }\n    this._column.table.columnManager.renderer.rerenderColumns(true);\n    return result;\n  }\n}\nvar defaultColumnOptions = {\n  \"title\": undefined,\n  \"field\": undefined,\n  \"columns\": undefined,\n  \"visible\": undefined,\n  \"hozAlign\": undefined,\n  \"vertAlign\": undefined,\n  \"width\": undefined,\n  \"minWidth\": 40,\n  \"maxWidth\": undefined,\n  \"tooltip\": undefined,\n  \"cssClass\": undefined,\n  \"variableHeight\": undefined,\n  \"headerTooltip\": undefined,\n  \"headerVertical\": undefined,\n  \"headerHozAlign\": undefined,\n  \"editableTitle\": undefined\n};\nclass Column$1 extends CoreFeature {\n  constructor(def, parent) {\n    super(parent.table);\n    this.definition = def; //column definition\n    this.parent = parent; //hold parent object\n    this.type = \"column\"; //type of element\n    this.columns = []; //child columns\n    this.cells = []; //cells bound to this column\n    this.element = this.createElement(); //column header element\n    this.contentElement = false;\n    this.titleHolderElement = false;\n    this.titleElement = false;\n    this.groupElement = this.createGroupElement(); //column group holder element\n    this.isGroup = false;\n    this.tooltip = false; //hold column tooltip\n    this.hozAlign = \"\"; //horizontal text alignment\n    this.vertAlign = \"\"; //vert text alignment\n\n    //multi dimensional filed handling\n    this.field = \"\";\n    this.fieldStructure = \"\";\n    this.getFieldValue = \"\";\n    this.setFieldValue = \"\";\n    this.titleFormatterRendered = false;\n    this.mapDefinitions();\n    this.setField(this.definition.field);\n    this.modules = {}; //hold module variables;\n\n    this.width = null; //column width\n    this.widthStyled = \"\"; //column width prestyled to improve render efficiency\n    this.maxWidth = null; //column maximum width\n    this.maxWidthStyled = \"\"; //column maximum prestyled to improve render efficiency\n    this.minWidth = null; //column minimum width\n    this.minWidthStyled = \"\"; //column minimum prestyled to improve render efficiency\n    this.widthFixed = false; //user has specified a width for this column\n\n    this.visible = true; //default visible state\n\n    this.component = null;\n\n    //initialize column\n    if (this.definition.columns) {\n      this.isGroup = true;\n      this.definition.columns.forEach((def, i) => {\n        var newCol = new Column$1(def, this);\n        this.attachColumn(newCol);\n      });\n      this.checkColumnVisibility();\n    } else {\n      parent.registerColumnField(this);\n    }\n    this._initialize();\n    this.bindModuleColumns();\n  }\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col\");\n    el.setAttribute(\"role\", \"columnheader\");\n    el.setAttribute(\"aria-sort\", \"none\");\n    return el;\n  }\n  createGroupElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col-group-cols\");\n    return el;\n  }\n  mapDefinitions() {\n    var defaults = this.table.options.columnDefaults;\n\n    //map columnDefaults onto column definitions\n    if (defaults) {\n      for (let key in defaults) {\n        if (typeof this.definition[key] === \"undefined\") {\n          this.definition[key] = defaults[key];\n        }\n      }\n    }\n    this.definition = this.table.columnManager.optionsList.generate(Column$1.defaultOptionList, this.definition);\n  }\n  checkDefinition() {\n    Object.keys(this.definition).forEach(key => {\n      if (Column$1.defaultOptionList.indexOf(key) === -1) {\n        console.warn(\"Invalid column definition option in '\" + (this.field || this.definition.title) + \"' column:\", key);\n      }\n    });\n  }\n  setField(field) {\n    this.field = field;\n    this.fieldStructure = field ? this.table.options.nestedFieldSeparator ? field.split(this.table.options.nestedFieldSeparator) : [field] : [];\n    this.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData;\n    this.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData;\n  }\n\n  //register column position with column manager\n  registerColumnPosition(column) {\n    this.parent.registerColumnPosition(column);\n  }\n\n  //register column position with column manager\n  registerColumnField(column) {\n    this.parent.registerColumnField(column);\n  }\n\n  //trigger position registration\n  reRegisterPosition() {\n    if (this.isGroup) {\n      this.columns.forEach(function (column) {\n        column.reRegisterPosition();\n      });\n    } else {\n      this.registerColumnPosition(this);\n    }\n  }\n  _mapDepricatedFunctionality() {\n    //all previously deprecated functionality removed in the 5.0 release\n  }\n  setTooltip() {\n    var def = this.definition;\n\n    //set header tooltips\n    var tooltip = def.headerTooltip;\n    if (tooltip) {\n      if (tooltip === true) {\n        if (def.field) {\n          this.langBind(\"columns|\" + def.field, value => {\n            this.element.setAttribute(\"title\", value || def.title);\n          });\n        } else {\n          this.element.setAttribute(\"title\", def.title);\n        }\n      } else {\n        if (typeof tooltip == \"function\") {\n          tooltip = tooltip(this.getComponent());\n          if (tooltip === false) {\n            tooltip = \"\";\n          }\n        }\n        this.element.setAttribute(\"title\", tooltip);\n      }\n    } else {\n      this.element.setAttribute(\"title\", \"\");\n    }\n  }\n\n  //build header element\n  _initialize() {\n    var def = this.definition;\n    while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n    if (def.headerVertical) {\n      this.element.classList.add(\"tabulator-col-vertical\");\n      if (def.headerVertical === \"flip\") {\n        this.element.classList.add(\"tabulator-col-vertical-flip\");\n      }\n    }\n    this.contentElement = this._bindEvents();\n    this.contentElement = this._buildColumnHeaderContent();\n    this.element.appendChild(this.contentElement);\n    if (this.isGroup) {\n      this._buildGroupHeader();\n    } else {\n      this._buildColumnHeader();\n    }\n    this.setTooltip();\n    this.dispatch(\"column-init\", this);\n\n    //update header tooltip on mouse enter\n    this.element.addEventListener(\"mouseenter\", e => {\n      this.setTooltip();\n    });\n  }\n  _bindEvents() {\n    var def = this.definition,\n      dblTap,\n      tapHold,\n      tap;\n\n    //setup header click event bindings\n    if (typeof def.headerClick == \"function\") {\n      this.element.addEventListener(\"click\", e => {\n        def.headerClick(e, this.getComponent());\n      });\n    }\n    if (typeof def.headerDblClick == \"function\") {\n      this.element.addEventListener(\"dblclick\", e => {\n        def.headerDblClick(e, this.getComponent());\n      });\n    }\n    if (typeof def.headerContext == \"function\") {\n      this.element.addEventListener(\"contextmenu\", e => {\n        def.headerContext(e, this.getComponent());\n      });\n    }\n\n    //setup header tap event bindings\n    if (typeof def.headerTap == \"function\") {\n      tap = false;\n      this.element.addEventListener(\"touchstart\", e => {\n        tap = true;\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        if (tap) {\n          def.headerTap(e, this.getComponent());\n        }\n        tap = false;\n      });\n    }\n    if (typeof def.headerDblTap == \"function\") {\n      dblTap = null;\n      this.element.addEventListener(\"touchend\", e => {\n        if (dblTap) {\n          clearTimeout(dblTap);\n          dblTap = null;\n          def.headerDblTap(e, this.getComponent());\n        } else {\n          dblTap = setTimeout(() => {\n            clearTimeout(dblTap);\n            dblTap = null;\n          }, 300);\n        }\n      });\n    }\n    if (typeof def.headerTapHold == \"function\") {\n      tapHold = null;\n      this.element.addEventListener(\"touchstart\", e => {\n        clearTimeout(tapHold);\n        tapHold = setTimeout(function () {\n          clearTimeout(tapHold);\n          tapHold = null;\n          tap = false;\n          def.headerTapHold(e, this.getComponent());\n        }, 1000);\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        clearTimeout(tapHold);\n        tapHold = null;\n      });\n    }\n  }\n\n  //build header element for header\n  _buildColumnHeader() {\n    var def = this.definition,\n      table = this.table;\n    this.dispatch(\"column-layout\", this);\n\n    //set column visibility\n    if (typeof def.visible != \"undefined\") {\n      if (def.visible) {\n        this.show(true);\n      } else {\n        this.hide(true);\n      }\n    }\n\n    //asign additional css classes to column header\n    if (def.cssClass) {\n      var classeNames = def.cssClass.split(\" \");\n      classeNames.forEach(className => {\n        this.element.classList.add(className);\n      });\n    }\n    if (def.field) {\n      this.element.setAttribute(\"tabulator-field\", def.field);\n    }\n\n    //set min width if present\n    this.setMinWidth(parseInt(def.minWidth));\n    if (def.maxWidth) {\n      this.setMaxWidth(parseInt(def.maxWidth));\n    }\n    this.reinitializeWidth();\n\n    //set tooltip if present\n    this.tooltip = this.definition.tooltip;\n\n    //set orizontal text alignment\n    this.hozAlign = this.definition.hozAlign;\n    this.vertAlign = this.definition.vertAlign;\n    this.titleElement.style.textAlign = this.definition.headerHozAlign;\n  }\n  _buildColumnHeaderContent() {\n    var def = this.definition,\n      table = this.table;\n    var contentElement = document.createElement(\"div\");\n    contentElement.classList.add(\"tabulator-col-content\");\n    this.titleHolderElement = document.createElement(\"div\");\n    this.titleHolderElement.classList.add(\"tabulator-col-title-holder\");\n    contentElement.appendChild(this.titleHolderElement);\n    this.titleElement = this._buildColumnHeaderTitle();\n    this.titleHolderElement.appendChild(this.titleElement);\n    return contentElement;\n  }\n\n  //build title element of column\n  _buildColumnHeaderTitle() {\n    var def = this.definition;\n    var titleHolderElement = document.createElement(\"div\");\n    titleHolderElement.classList.add(\"tabulator-col-title\");\n    if (def.editableTitle) {\n      var titleElement = document.createElement(\"input\");\n      titleElement.classList.add(\"tabulator-title-editor\");\n      titleElement.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        titleElement.focus();\n      });\n      titleElement.addEventListener(\"change\", () => {\n        def.title = titleElement.value;\n        this.dispatchExternal(\"columnTitleChanged\", this.getComponent());\n      });\n      titleHolderElement.appendChild(titleElement);\n      if (def.field) {\n        this.langBind(\"columns|\" + def.field, text => {\n          titleElement.value = text || def.title || \"&nbsp;\";\n        });\n      } else {\n        titleElement.value = def.title || \"&nbsp;\";\n      }\n    } else {\n      if (def.field) {\n        this.langBind(\"columns|\" + def.field, text => {\n          this._formatColumnHeaderTitle(titleHolderElement, text || def.title || \"&nbsp;\");\n        });\n      } else {\n        this._formatColumnHeaderTitle(titleHolderElement, def.title || \"&nbsp;\");\n      }\n    }\n    return titleHolderElement;\n  }\n  _formatColumnHeaderTitle(el, title) {\n    var contents = this.chain(\"column-format\", [this, title, el], null, () => {\n      return title;\n    });\n    switch (typeof contents) {\n      case \"object\":\n        if (contents instanceof Node) {\n          el.appendChild(contents);\n        } else {\n          el.innerHTML = \"\";\n          console.warn(\"Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", contents);\n        }\n        break;\n      case \"undefined\":\n      case \"null\":\n        el.innerHTML = \"\";\n        break;\n      default:\n        el.innerHTML = contents;\n    }\n  }\n\n  //build header element for column group\n  _buildGroupHeader() {\n    this.element.classList.add(\"tabulator-col-group\");\n    this.element.setAttribute(\"role\", \"columngroup\");\n    this.element.setAttribute(\"aria-title\", this.definition.title);\n\n    //asign additional css classes to column header\n    if (this.definition.cssClass) {\n      var classeNames = this.definition.cssClass.split(\" \");\n      classeNames.forEach(className => {\n        this.element.classList.add(className);\n      });\n    }\n    this.titleElement.style.textAlign = this.definition.headerHozAlign;\n    this.element.appendChild(this.groupElement);\n  }\n\n  //flat field lookup\n  _getFlatData(data) {\n    return data[this.field];\n  }\n\n  //nested field lookup\n  _getNestedData(data) {\n    var dataObj = data,\n      structure = this.fieldStructure,\n      length = structure.length,\n      output;\n    for (let i = 0; i < length; i++) {\n      dataObj = dataObj[structure[i]];\n      output = dataObj;\n      if (!dataObj) {\n        break;\n      }\n    }\n    return output;\n  }\n\n  //flat field set\n  _setFlatData(data, value) {\n    if (this.field) {\n      data[this.field] = value;\n    }\n  }\n\n  //nested field set\n  _setNestedData(data, value) {\n    var dataObj = data,\n      structure = this.fieldStructure,\n      length = structure.length;\n    for (let i = 0; i < length; i++) {\n      if (i == length - 1) {\n        dataObj[structure[i]] = value;\n      } else {\n        if (!dataObj[structure[i]]) {\n          if (typeof value !== \"undefined\") {\n            dataObj[structure[i]] = {};\n          } else {\n            break;\n          }\n        }\n        dataObj = dataObj[structure[i]];\n      }\n    }\n  }\n\n  //attach column to this group\n  attachColumn(column) {\n    if (this.groupElement) {\n      this.columns.push(column);\n      this.groupElement.appendChild(column.getElement());\n    } else {\n      console.warn(\"Column Warning - Column being attached to another column instead of column group\");\n    }\n  }\n\n  //vertically align header in column\n  verticalAlign(alignment, height) {\n    //calculate height of column header and group holder element\n    var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : height || this.parent.getHeadersElement().clientHeight;\n    // var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : this.parent.getHeadersElement().clientHeight;\n\n    this.element.style.height = parentHeight + \"px\";\n    if (this.isGroup) {\n      this.groupElement.style.minHeight = parentHeight - this.contentElement.offsetHeight + \"px\";\n    }\n\n    //vertically align cell contents\n    if (!this.isGroup && alignment !== \"top\") {\n      if (alignment === \"bottom\") {\n        this.element.style.paddingTop = this.element.clientHeight - this.contentElement.offsetHeight + \"px\";\n      } else {\n        this.element.style.paddingTop = (this.element.clientHeight - this.contentElement.offsetHeight) / 2 + \"px\";\n      }\n    }\n    this.columns.forEach(function (column) {\n      column.verticalAlign(alignment);\n    });\n  }\n\n  //clear vertical alignmenet\n  clearVerticalAlign() {\n    this.element.style.paddingTop = \"\";\n    this.element.style.height = \"\";\n    this.element.style.minHeight = \"\";\n    this.groupElement.style.minHeight = \"\";\n    this.columns.forEach(function (column) {\n      column.clearVerticalAlign();\n    });\n  }\n  bindModuleColumns() {\n    //check if rownum formatter is being used on a column\n    if (this.definition.formatter == \"rownum\") {\n      this.table.rowManager.rowNumColumn = this;\n    }\n  }\n\n  //// Retreive Column Information ////\n  //return column header element\n  getElement() {\n    return this.element;\n  }\n\n  //return colunm group element\n  getGroupElement() {\n    return this.groupElement;\n  }\n\n  //return field name\n  getField() {\n    return this.field;\n  }\n\n  //return the first column in a group\n  getFirstColumn() {\n    if (!this.isGroup) {\n      return this;\n    } else {\n      if (this.columns.length) {\n        return this.columns[0].getFirstColumn();\n      } else {\n        return false;\n      }\n    }\n  }\n\n  //return the last column in a group\n  getLastColumn() {\n    if (!this.isGroup) {\n      return this;\n    } else {\n      if (this.columns.length) {\n        return this.columns[this.columns.length - 1].getLastColumn();\n      } else {\n        return false;\n      }\n    }\n  }\n\n  //return all columns in a group\n  getColumns() {\n    return this.columns;\n  }\n\n  //return all columns in a group\n  getCells() {\n    return this.cells;\n  }\n\n  //retreive the top column in a group of columns\n  getTopColumn() {\n    if (this.parent.isGroup) {\n      return this.parent.getTopColumn();\n    } else {\n      return this;\n    }\n  }\n\n  //return column definition object\n  getDefinition(updateBranches) {\n    var colDefs = [];\n    if (this.isGroup && updateBranches) {\n      this.columns.forEach(function (column) {\n        colDefs.push(column.getDefinition(true));\n      });\n      this.definition.columns = colDefs;\n    }\n    return this.definition;\n  }\n\n  //////////////////// Actions ////////////////////\n  checkColumnVisibility() {\n    var visible = false;\n    this.columns.forEach(function (column) {\n      if (column.visible) {\n        visible = true;\n      }\n    });\n    if (visible) {\n      this.show();\n      this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\n    } else {\n      this.hide();\n    }\n  }\n\n  //show column\n  show(silent, responsiveToggle) {\n    if (!this.visible) {\n      this.visible = true;\n      this.element.style.display = \"\";\n      if (this.parent.isGroup) {\n        this.parent.checkColumnVisibility();\n      }\n      this.cells.forEach(function (cell) {\n        cell.show();\n      });\n      if (!this.isGroup && this.width === null) {\n        this.reinitializeWidth();\n      }\n      this.table.columnManager.verticalAlignHeaders();\n      this.dispatch(\"column-show\", this, responsiveToggle);\n      if (!silent) {\n        this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), true);\n      }\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n      if (!this.silent) {\n        this.table.columnManager.renderer.rerenderColumns();\n      }\n    }\n  }\n\n  //hide column\n  hide(silent, responsiveToggle) {\n    if (this.visible) {\n      this.visible = false;\n      this.element.style.display = \"none\";\n      this.table.columnManager.verticalAlignHeaders();\n      if (this.parent.isGroup) {\n        this.parent.checkColumnVisibility();\n      }\n      this.cells.forEach(function (cell) {\n        cell.hide();\n      });\n      this.dispatch(\"column-hide\", this, responsiveToggle);\n      if (!silent) {\n        this.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\n      }\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n      if (!this.silent) {\n        this.table.columnManager.renderer.rerenderColumns();\n      }\n    }\n  }\n  matchChildWidths() {\n    var childWidth = 0;\n    if (this.contentElement && this.columns.length) {\n      this.columns.forEach(function (column) {\n        if (column.visible) {\n          childWidth += column.getWidth();\n        }\n      });\n      this.contentElement.style.maxWidth = childWidth - 1 + \"px\";\n      if (this.parent.isGroup) {\n        this.parent.matchChildWidths();\n      }\n    }\n  }\n  removeChild(child) {\n    var index = this.columns.indexOf(child);\n    if (index > -1) {\n      this.columns.splice(index, 1);\n    }\n    if (!this.columns.length) {\n      this.delete();\n    }\n  }\n  setWidth(width) {\n    this.widthFixed = true;\n    this.setWidthActual(width);\n  }\n  setWidthActual(width) {\n    if (isNaN(width)) {\n      width = Math.floor(this.table.element.clientWidth / 100 * parseInt(width));\n    }\n    width = Math.max(this.minWidth, width);\n    if (this.maxWidth) {\n      width = Math.min(this.maxWidth, width);\n    }\n    this.width = width;\n    this.widthStyled = width ? width + \"px\" : \"\";\n    this.element.style.width = this.widthStyled;\n    if (!this.isGroup) {\n      this.cells.forEach(function (cell) {\n        cell.setWidth();\n      });\n    }\n    if (this.parent.isGroup) {\n      this.parent.matchChildWidths();\n    }\n    this.dispatch(\"column-width\", this);\n  }\n  checkCellHeights() {\n    var rows = [];\n    this.cells.forEach(function (cell) {\n      if (cell.row.heightInitialized) {\n        if (cell.row.getElement().offsetParent !== null) {\n          rows.push(cell.row);\n          cell.row.clearCellHeight();\n        } else {\n          cell.row.heightInitialized = false;\n        }\n      }\n    });\n    rows.forEach(function (row) {\n      row.calcHeight();\n    });\n    rows.forEach(function (row) {\n      row.setCellHeight();\n    });\n  }\n  getWidth() {\n    var width = 0;\n    if (this.isGroup) {\n      this.columns.forEach(function (column) {\n        if (column.visible) {\n          width += column.getWidth();\n        }\n      });\n    } else {\n      width = this.width;\n    }\n    return width;\n  }\n  getHeight() {\n    return this.element.offsetHeight;\n  }\n  setMinWidth(minWidth) {\n    this.minWidth = minWidth;\n    this.minWidthStyled = minWidth ? minWidth + \"px\" : \"\";\n    this.element.style.minWidth = this.minWidthStyled;\n    this.cells.forEach(function (cell) {\n      cell.setMinWidth();\n    });\n  }\n  setMaxWidth(maxWidth) {\n    this.maxWidth = maxWidth;\n    this.maxWidthStyled = maxWidth ? maxWidth + \"px\" : \"\";\n    this.element.style.maxWidth = this.maxWidthStyled;\n    this.cells.forEach(function (cell) {\n      cell.setMaxWidth();\n    });\n  }\n  delete() {\n    return new Promise((resolve, reject) => {\n      if (this.isGroup) {\n        this.columns.forEach(function (column) {\n          column.delete();\n        });\n      }\n      this.dispatch(\"column-delete\", this);\n      var cellCount = this.cells.length;\n      for (let i = 0; i < cellCount; i++) {\n        this.cells[0].delete();\n      }\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = false;\n      this.contentElement = false;\n      this.titleElement = false;\n      this.groupElement = false;\n      if (this.parent.isGroup) {\n        this.parent.removeChild(this);\n      }\n      this.table.columnManager.deregisterColumn(this);\n      this.table.columnManager.renderer.rerenderColumns(true);\n      resolve();\n    });\n  }\n  columnRendered() {\n    if (this.titleFormatterRendered) {\n      this.titleFormatterRendered();\n    }\n  }\n\n  //////////////// Cell Management /////////////////\n  //generate cell for this column\n  generateCell(row) {\n    var cell = new Cell(this, row);\n    this.cells.push(cell);\n    return cell;\n  }\n  nextColumn() {\n    var index = this.table.columnManager.findColumnIndex(this);\n    return index > -1 ? this._nextVisibleColumn(index + 1) : false;\n  }\n  _nextVisibleColumn(index) {\n    var column = this.table.columnManager.getColumnByIndex(index);\n    return !column || column.visible ? column : this._nextVisibleColumn(index + 1);\n  }\n  prevColumn() {\n    var index = this.table.columnManager.findColumnIndex(this);\n    return index > -1 ? this._prevVisibleColumn(index - 1) : false;\n  }\n  _prevVisibleColumn(index) {\n    var column = this.table.columnManager.getColumnByIndex(index);\n    return !column || column.visible ? column : this._prevVisibleColumn(index - 1);\n  }\n  reinitializeWidth(force) {\n    this.widthFixed = false;\n\n    //set width if present\n    if (typeof this.definition.width !== \"undefined\" && !force) {\n      this.setWidth(this.definition.width);\n    }\n    this.dispatch(\"column-width-fit-before\", this);\n    this.fitToData();\n    this.dispatch(\"column-width-fit-after\", this);\n  }\n\n  //set column width to maximum cell width for non group columns\n  fitToData() {\n    if (this.isGroup) {\n      return;\n    }\n    if (!this.widthFixed) {\n      this.element.style.width = \"\";\n      this.cells.forEach(cell => {\n        cell.clearWidth();\n      });\n    }\n    var maxWidth = this.element.offsetWidth;\n    if (!this.width || !this.widthFixed) {\n      this.cells.forEach(cell => {\n        var width = cell.getWidth();\n        if (width > maxWidth) {\n          maxWidth = width;\n        }\n      });\n      if (maxWidth) {\n        this.setWidthActual(maxWidth + 1);\n      }\n    }\n  }\n  updateDefinition(updates) {\n    var definition;\n    if (!this.isGroup) {\n      if (!this.parent.isGroup) {\n        definition = Object.assign({}, this.getDefinition());\n        definition = Object.assign(definition, updates);\n        return this.table.columnManager.addColumn(definition, false, this).then(column => {\n          if (definition.field == this.field) {\n            this.field = false; //cleair field name to prevent deletion of duplicate column from arrays\n          }\n\n          return this.delete().then(() => {\n            return column.getComponent();\n          });\n        });\n      } else {\n        console.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\n        return Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\n      }\n    } else {\n      console.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\n      return Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\n    }\n  }\n  deleteCell(cell) {\n    var index = this.cells.indexOf(cell);\n    if (index > -1) {\n      this.cells.splice(index, 1);\n    }\n  }\n\n  //////////////// Object Generation /////////////////\n  getComponent() {\n    if (!this.component) {\n      this.component = new ColumnComponent(this);\n    }\n    return this.component;\n  }\n}\nColumn$1.defaultOptionList = defaultColumnOptions;\n\n//public row object\nclass RowComponent$1 {\n  constructor(row) {\n    this._row = row;\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._row.table.componentFunctionBinder.handle(\"row\", target._row, name);\n        }\n      }\n    });\n  }\n  getData(transform) {\n    return this._row.getData(transform);\n  }\n  getElement() {\n    return this._row.getElement();\n  }\n  getCells() {\n    var cells = [];\n    this._row.getCells().forEach(function (cell) {\n      cells.push(cell.getComponent());\n    });\n    return cells;\n  }\n  getCell(column) {\n    var cell = this._row.getCell(column);\n    return cell ? cell.getComponent() : false;\n  }\n  getIndex() {\n    return this._row.getData(\"data\")[this._row.table.options.index];\n  }\n  getPosition(active) {\n    return this._row.table.rowManager.getRowPosition(this._row, active);\n  }\n  delete() {\n    return this._row.delete();\n  }\n  scrollTo() {\n    return this._row.table.rowManager.scrollToRow(this._row);\n  }\n  move(to, after) {\n    this._row.moveToRow(to, after);\n  }\n  update(data) {\n    return this._row.updateData(data);\n  }\n  normalizeHeight() {\n    this._row.normalizeHeight(true);\n  }\n  _getSelf() {\n    return this._row;\n  }\n  reformat() {\n    return this._row.reinitialize();\n  }\n  getTable() {\n    return this._row.table;\n  }\n  getNextRow() {\n    var row = this._row.nextRow();\n    return row ? row.getComponent() : row;\n  }\n  getPrevRow() {\n    var row = this._row.prevRow();\n    return row ? row.getComponent() : row;\n  }\n}\nclass Row extends CoreFeature {\n  constructor(data, parent) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"row\";\n    super(parent.table);\n    this.parent = parent;\n    this.data = {};\n    this.type = type; //type of element\n    this.element = false;\n    this.modules = {}; //hold module variables;\n    this.cells = [];\n    this.height = 0; //hold element height\n    this.heightStyled = \"\"; //hold element height prestyled to improve render efficiency\n    this.manualHeight = false; //user has manually set row height\n    this.outerHeight = 0; //holde lements outer height\n    this.initialized = false; //element has been rendered\n    this.heightInitialized = false; //element has resized cells to fit\n\n    this.component = null;\n    this.created = false;\n    this.setData(data);\n  }\n  create() {\n    if (!this.created) {\n      this.created = true;\n      this.generateElement();\n    }\n  }\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    el.setAttribute(\"role\", \"row\");\n    this.element = el;\n  }\n  getElement() {\n    this.create();\n    return this.element;\n  }\n  detachElement() {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n  generateElement() {\n    this.createElement();\n    this.dispatch(\"row-init\", this);\n  }\n  generateCells() {\n    this.cells = this.table.columnManager.generateCells(this);\n  }\n\n  //functions to setup on first render\n  initialize(force) {\n    this.create();\n    if (!this.initialized || force) {\n      this.deleteCells();\n      while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n      this.dispatch(\"row-layout-before\", this);\n      this.generateCells();\n      this.table.columnManager.renderer.renderRowCells(this);\n      if (force) {\n        this.normalizeHeight();\n      }\n      this.dispatch(\"row-layout\", this);\n      if (this.table.options.rowFormatter) {\n        this.table.options.rowFormatter(this.getComponent());\n      }\n      this.initialized = true;\n      this.dispatch(\"row-layout-after\", this);\n    } else {\n      this.table.columnManager.renderer.rerenderRowCells(this);\n    }\n  }\n  reinitializeHeight() {\n    this.heightInitialized = false;\n    if (this.element && this.element.offsetParent !== null) {\n      this.normalizeHeight(true);\n    }\n  }\n  deinitializeHeight() {\n    this.heightInitialized = false;\n  }\n  reinitialize(children) {\n    this.initialized = false;\n    this.heightInitialized = false;\n    if (!this.manualHeight) {\n      this.height = 0;\n      this.heightStyled = \"\";\n    }\n    if (this.element && this.element.offsetParent !== null) {\n      this.initialize(true);\n    }\n    this.dispatch(\"row-relayout\", this);\n  }\n\n  //get heights when doing bulk row style calcs in virtual DOM\n  calcHeight(force) {\n    var maxHeight = 0,\n      minHeight = this.table.options.resizableRows ? this.element.clientHeight : 0;\n    this.cells.forEach(function (cell) {\n      var height = cell.getHeight();\n      if (height > maxHeight) {\n        maxHeight = height;\n      }\n    });\n    if (force) {\n      this.height = Math.max(maxHeight, minHeight);\n    } else {\n      this.height = this.manualHeight ? this.height : Math.max(maxHeight, minHeight);\n    }\n    this.heightStyled = this.height ? this.height + \"px\" : \"\";\n    this.outerHeight = this.element.offsetHeight;\n  }\n\n  //set of cells\n  setCellHeight() {\n    this.cells.forEach(function (cell) {\n      cell.setHeight();\n    });\n    this.heightInitialized = true;\n  }\n  clearCellHeight() {\n    this.cells.forEach(function (cell) {\n      cell.clearHeight();\n    });\n  }\n\n  //normalize the height of elements in the row\n  normalizeHeight(force) {\n    if (force) {\n      this.clearCellHeight();\n    }\n    this.calcHeight(force);\n    this.setCellHeight();\n  }\n\n  //set height of rows\n  setHeight(height, force) {\n    if (this.height != height || force) {\n      this.manualHeight = true;\n      this.height = height;\n      this.heightStyled = height ? height + \"px\" : \"\";\n      this.setCellHeight();\n\n      // this.outerHeight = this.element.outerHeight();\n      this.outerHeight = this.element.offsetHeight;\n    }\n  }\n\n  //return rows outer height\n  getHeight() {\n    return this.outerHeight;\n  }\n\n  //return rows outer Width\n  getWidth() {\n    return this.element.offsetWidth;\n  }\n\n  //////////////// Cell Management /////////////////\n  deleteCell(cell) {\n    var index = this.cells.indexOf(cell);\n    if (index > -1) {\n      this.cells.splice(index, 1);\n    }\n  }\n\n  //////////////// Data Management /////////////////\n  setData(data) {\n    this.data = this.chain(\"row-data-init-before\", [this, data], undefined, data);\n    this.dispatch(\"row-data-init-after\", this);\n  }\n\n  //update the rows data\n  updateData(updatedData) {\n    var visible = this.element && Helpers.elVisible(this.element),\n      tempData = {},\n      newRowData;\n    return new Promise((resolve, reject) => {\n      if (typeof updatedData === \"string\") {\n        updatedData = JSON.parse(updatedData);\n      }\n      this.dispatch(\"row-data-save-before\", this);\n      if (this.subscribed(\"row-data-changing\")) {\n        tempData = Object.assign(tempData, this.data);\n        tempData = Object.assign(tempData, updatedData);\n      }\n      newRowData = this.chain(\"row-data-changing\", [this, tempData, updatedData], null, updatedData);\n\n      //set data\n      for (var attrname in newRowData) {\n        this.data[attrname] = newRowData[attrname];\n      }\n      this.dispatch(\"row-data-save-after\", this);\n\n      //update affected cells only\n      for (var attrname in updatedData) {\n        let columns = this.table.columnManager.getColumnsByFieldRoot(attrname);\n        columns.forEach(column => {\n          let cell = this.getCell(column.getField());\n          if (cell) {\n            let value = column.getFieldValue(newRowData);\n            if (cell.getValue() != value) {\n              cell.setValueProcessData(value);\n              if (visible) {\n                cell.cellRendered();\n              }\n            }\n          }\n        });\n      }\n\n      //Partial reinitialization if visible\n      if (visible) {\n        this.normalizeHeight(true);\n        if (this.table.options.rowFormatter) {\n          this.table.options.rowFormatter(this.getComponent());\n        }\n      } else {\n        this.initialized = false;\n        this.height = 0;\n        this.heightStyled = \"\";\n      }\n      this.dispatch(\"row-data-changed\", this, visible, updatedData);\n\n      //this.reinitialize();\n\n      this.dispatchExternal(\"rowUpdated\", this.getComponent());\n      if (this.subscribedExternal(\"dataChanged\")) {\n        this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n      }\n      resolve();\n    });\n  }\n  getData(transform) {\n    if (transform) {\n      return this.chain(\"row-data-retrieve\", [this, transform], null, this.data);\n    }\n    return this.data;\n  }\n  getCell(column) {\n    var match = false;\n    column = this.table.columnManager.findColumn(column);\n    if (!this.initialized) {\n      this.generateCells();\n    }\n    match = this.cells.find(function (cell) {\n      return cell.column === column;\n    });\n    return match;\n  }\n  getCellIndex(findCell) {\n    return this.cells.findIndex(function (cell) {\n      return cell === findCell;\n    });\n  }\n  findCell(subject) {\n    return this.cells.find(cell => {\n      return cell.element === subject;\n    });\n  }\n  getCells() {\n    if (!this.initialized) {\n      this.generateCells();\n    }\n    return this.cells;\n  }\n  nextRow() {\n    var row = this.table.rowManager.nextDisplayRow(this, true);\n    return row || false;\n  }\n  prevRow() {\n    var row = this.table.rowManager.prevDisplayRow(this, true);\n    return row || false;\n  }\n  moveToRow(to, before) {\n    var toRow = this.table.rowManager.findRow(to);\n    if (toRow) {\n      this.table.rowManager.moveRowActual(this, toRow, !before);\n      this.table.rowManager.refreshActiveData(\"display\", false, true);\n    } else {\n      console.warn(\"Move Error - No matching row found:\", to);\n    }\n  }\n\n  ///////////////////// Actions  /////////////////////\n  delete() {\n    this.dispatch(\"row-delete\", this);\n    this.deleteActual();\n    return Promise.resolve();\n  }\n  deleteActual(blockRedraw) {\n    var index = this.table.rowManager.getRowIndex(this);\n    this.detatchModules();\n    this.table.rowManager.deleteRow(this, blockRedraw);\n    this.deleteCells();\n    this.initialized = false;\n    this.heightInitialized = false;\n    this.element = false;\n    this.dispatch(\"row-deleted\", this);\n  }\n  detatchModules() {\n    this.dispatch(\"row-deleting\", this);\n  }\n  deleteCells() {\n    var cellCount = this.cells.length;\n    for (let i = 0; i < cellCount; i++) {\n      this.cells[0].delete();\n    }\n  }\n  wipe() {\n    this.detatchModules();\n    this.deleteCells();\n    if (this.element) {\n      while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n    }\n    this.element = false;\n    this.modules = {};\n  }\n  getGroup() {\n    return this.modules.group || false;\n  }\n\n  //////////////// Object Generation /////////////////\n  getComponent() {\n    if (!this.component) {\n      this.component = new RowComponent$1(this);\n    }\n    return this.component;\n  }\n}\nvar defaultCalculations = {\n  \"avg\": function (values, data, calcParams) {\n    var output = 0,\n      precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : 2;\n    if (values.length) {\n      output = values.reduce(function (sum, value) {\n        return Number(sum) + Number(value);\n      });\n      output = output / values.length;\n      output = precision !== false ? output.toFixed(precision) : output;\n    }\n    return parseFloat(output).toString();\n  },\n  \"max\": function (values, data, calcParams) {\n    var output = null,\n      precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    values.forEach(function (value) {\n      value = Number(value);\n      if (value > output || output === null) {\n        output = value;\n      }\n    });\n    return output !== null ? precision !== false ? output.toFixed(precision) : output : \"\";\n  },\n  \"min\": function (values, data, calcParams) {\n    var output = null,\n      precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    values.forEach(function (value) {\n      value = Number(value);\n      if (value < output || output === null) {\n        output = value;\n      }\n    });\n    return output !== null ? precision !== false ? output.toFixed(precision) : output : \"\";\n  },\n  \"sum\": function (values, data, calcParams) {\n    var output = 0,\n      precision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\n    if (values.length) {\n      values.forEach(function (value) {\n        value = Number(value);\n        output += !isNaN(value) ? Number(value) : 0;\n      });\n    }\n    return precision !== false ? output.toFixed(precision) : output;\n  },\n  \"concat\": function (values, data, calcParams) {\n    var output = 0;\n    if (values.length) {\n      output = values.reduce(function (sum, value) {\n        return String(sum) + String(value);\n      });\n    }\n    return output;\n  },\n  \"count\": function (values, data, calcParams) {\n    var output = 0;\n    if (values.length) {\n      values.forEach(function (value) {\n        if (value) {\n          output++;\n        }\n      });\n    }\n    return output;\n  }\n};\nclass ColumnCalcs extends Module {\n  constructor(table) {\n    super(table);\n    this.topCalcs = [];\n    this.botCalcs = [];\n    this.genColumn = false;\n    this.topElement = this.createElement();\n    this.botElement = this.createElement();\n    this.topRow = false;\n    this.botRow = false;\n    this.topInitialized = false;\n    this.botInitialized = false;\n    this.registerTableOption(\"columnCalcs\", true);\n    this.registerColumnOption(\"topCalc\");\n    this.registerColumnOption(\"topCalcParams\");\n    this.registerColumnOption(\"topCalcFormatter\");\n    this.registerColumnOption(\"topCalcFormatterParams\");\n    this.registerColumnOption(\"bottomCalc\");\n    this.registerColumnOption(\"bottomCalcParams\");\n    this.registerColumnOption(\"bottomCalcFormatter\");\n    this.registerColumnOption(\"bottomCalcFormatterParams\");\n  }\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-calcs-holder\");\n    return el;\n  }\n  initialize() {\n    this.genColumn = new Column$1({\n      field: \"value\"\n    }, this);\n    this.subscribe(\"cell-value-changed\", this.cellValueChanged.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"row-added\", this.rowsUpdated.bind(this));\n    this.subscribe(\"column-moved\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"column-add\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"data-refeshed\", this.recalcActiveRows.bind(this));\n    this.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\n    this.subscribe(\"rows-visible\", this.visibleRows.bind(this));\n    this.registerTableFunction(\"getCalcResults\", this.getResults.bind(this));\n    this.registerTableFunction(\"recalc\", this.userRecalc.bind(this));\n  }\n  tableRedraw(force) {\n    this.recalc(this.table.rowManager.activeRows);\n    if (force) {\n      this.redraw();\n    }\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  userRecalc() {\n    this.recalc(this.table.rowManager.activeRows);\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  visibleRows(viewable, rows) {\n    if (this.topRow) {\n      rows.unshift(this.topRow);\n    }\n    if (this.botRow) {\n      rows.push(this.botRow);\n    }\n    return rows;\n  }\n  rowsUpdated(row) {\n    if (this.table.options.groupBy) {\n      this.recalcRowGroup(this);\n    } else {\n      this.recalcActiveRows();\n    }\n  }\n  recalcActiveRows() {\n    this.recalc(this.table.rowManager.activeRows);\n  }\n  cellValueChanged(cell) {\n    if (cell.column.definition.topCalc || cell.column.definition.bottomCalc) {\n      if (this.table.options.groupBy) {\n        if (this.table.options.columnCalcs == \"table\" || this.table.options.columnCalcs == \"both\") {\n          this.recalcActiveRows();\n        }\n        if (this.table.options.columnCalcs != \"table\") {\n          this.recalcRowGroup(cell.row);\n        }\n      } else {\n        this.recalcActiveRows();\n      }\n    }\n  }\n  initializeColumnCheck(column) {\n    if (column.definition.topCalc || column.definition.bottomCalc) {\n      this.initializeColumn(column);\n    }\n  }\n\n  //initialize column calcs\n  initializeColumn(column) {\n    var def = column.definition;\n    var config = {\n      topCalcParams: def.topCalcParams || {},\n      botCalcParams: def.bottomCalcParams || {}\n    };\n    if (def.topCalc) {\n      switch (typeof def.topCalc) {\n        case \"string\":\n          if (ColumnCalcs.calculations[def.topCalc]) {\n            config.topCalc = ColumnCalcs.calculations[def.topCalc];\n          } else {\n            console.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.topCalc);\n          }\n          break;\n        case \"function\":\n          config.topCalc = def.topCalc;\n          break;\n      }\n      if (config.topCalc) {\n        column.modules.columnCalcs = config;\n        this.topCalcs.push(column);\n        if (this.table.options.columnCalcs != \"group\") {\n          this.initializeTopRow();\n        }\n      }\n    }\n    if (def.bottomCalc) {\n      switch (typeof def.bottomCalc) {\n        case \"string\":\n          if (ColumnCalcs.calculations[def.bottomCalc]) {\n            config.botCalc = ColumnCalcs.calculations[def.bottomCalc];\n          } else {\n            console.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.bottomCalc);\n          }\n          break;\n        case \"function\":\n          config.botCalc = def.bottomCalc;\n          break;\n      }\n      if (config.botCalc) {\n        column.modules.columnCalcs = config;\n        this.botCalcs.push(column);\n        if (this.table.options.columnCalcs != \"group\") {\n          this.initializeBottomRow();\n        }\n      }\n    }\n  }\n\n  //dummy functions to handle being mock column manager\n  registerColumnField() {}\n  removeCalcs() {\n    var changed = false;\n    if (this.topInitialized) {\n      this.topInitialized = false;\n      this.topElement.parentNode.removeChild(this.topElement);\n      changed = true;\n    }\n    if (this.botInitialized) {\n      this.botInitialized = false;\n      this.table.footerManager.remove(this.botElement);\n      changed = true;\n    }\n    if (changed) {\n      this.table.rowManager.adjustTableSize();\n    }\n  }\n  initializeTopRow() {\n    if (!this.topInitialized) {\n      this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\n      this.topInitialized = true;\n    }\n  }\n  initializeBottomRow() {\n    if (!this.botInitialized) {\n      this.table.footerManager.prepend(this.botElement);\n      this.botInitialized = true;\n    }\n  }\n  scrollHorizontal(left) {\n    if (this.botInitialized && this.botRow) {\n      this.botRow.getElement().style.marginLeft = -left + \"px\";\n    }\n  }\n  recalc(rows) {\n    var row;\n    if (this.topInitialized || this.botInitialized) {\n      this.rowsToData(rows);\n      if (this.topInitialized) {\n        if (this.topRow) {\n          this.topRow.deleteCells();\n        }\n        row = this.generateRow(\"top\", this.rowsToData(rows));\n        this.topRow = row;\n        while (this.topElement.firstChild) this.topElement.removeChild(this.topElement.firstChild);\n        this.topElement.appendChild(row.getElement());\n        row.initialize(true);\n      }\n      if (this.botInitialized) {\n        if (this.botRow) {\n          this.botRow.deleteCells();\n        }\n        row = this.generateRow(\"bottom\", this.rowsToData(rows));\n        this.botRow = row;\n        while (this.botElement.firstChild) this.botElement.removeChild(this.botElement.firstChild);\n        this.botElement.appendChild(row.getElement());\n        row.initialize(true);\n      }\n      this.table.rowManager.adjustTableSize();\n\n      //set resizable handles\n      if (this.table.modExists(\"frozenColumns\")) {\n        this.table.modules.frozenColumns.layout();\n      }\n    }\n  }\n  recalcRowGroup(row) {\n    this.recalcGroup(this.table.modules.groupRows.getRowGroup(row));\n  }\n  recalcAll() {\n    if (this.topCalcs.length || this.botCalcs.length) {\n      if (this.table.options.columnCalcs !== \"group\") {\n        this.recalcActiveRows();\n      }\n      if (this.table.options.groupBy && this.table.options.columnCalcs !== \"table\") {\n        var groups = this.table.modules.groupRows.getChildGroups();\n        groups.forEach(group => {\n          this.recalcGroup(group);\n        });\n      }\n    }\n  }\n  recalcGroup(group) {\n    var data, rowData;\n    if (group) {\n      if (group.calcs) {\n        if (group.calcs.bottom) {\n          data = this.rowsToData(group.rows);\n          rowData = this.generateRowData(\"bottom\", data);\n          group.calcs.bottom.updateData(rowData);\n          group.calcs.bottom.reinitialize();\n        }\n        if (group.calcs.top) {\n          data = this.rowsToData(group.rows);\n          rowData = this.generateRowData(\"top\", data);\n          group.calcs.top.updateData(rowData);\n          group.calcs.top.reinitialize();\n        }\n      }\n    }\n  }\n\n  //generate top stats row\n  generateTopRow(rows) {\n    return this.generateRow(\"top\", this.rowsToData(rows));\n  }\n  //generate bottom stats row\n  generateBottomRow(rows) {\n    return this.generateRow(\"bottom\", this.rowsToData(rows));\n  }\n  rowsToData(rows) {\n    var data = [];\n    rows.forEach(row => {\n      data.push(row.getData());\n      if (this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs) {\n        if (row.modules.dataTree.open) {\n          var children = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(row));\n          data = data.concat(children);\n        }\n      }\n    });\n    return data;\n  }\n\n  //generate stats row\n  generateRow(pos, data) {\n    var rowData = this.generateRowData(pos, data),\n      row;\n    if (this.table.modExists(\"mutator\")) {\n      this.table.modules.mutator.disable();\n    }\n    row = new Row(rowData, this, \"calc\");\n    if (this.table.modExists(\"mutator\")) {\n      this.table.modules.mutator.enable();\n    }\n    row.getElement().classList.add(\"tabulator-calcs\", \"tabulator-calcs-\" + pos);\n    row.component = false;\n    row.getComponent = () => {\n      if (!row.component) {\n        row.component = new CalcComponent(row);\n      }\n      return row.component;\n    };\n    row.generateCells = () => {\n      var cells = [];\n      this.table.columnManager.columnsByIndex.forEach(column => {\n        //set field name of mock column\n        this.genColumn.setField(column.getField());\n        this.genColumn.hozAlign = column.hozAlign;\n        if (column.definition[pos + \"CalcFormatter\"] && this.table.modExists(\"format\")) {\n          this.genColumn.modules.format = {\n            formatter: this.table.modules.format.getFormatter(column.definition[pos + \"CalcFormatter\"]),\n            params: column.definition[pos + \"CalcFormatterParams\"] || {}\n          };\n        } else {\n          this.genColumn.modules.format = {\n            formatter: this.table.modules.format.getFormatter(\"plaintext\"),\n            params: {}\n          };\n        }\n\n        //ensure css class defintion is replicated to calculation cell\n        this.genColumn.definition.cssClass = column.definition.cssClass;\n\n        //generate cell and assign to correct column\n        var cell = new Cell(this.genColumn, row);\n        cell.getElement();\n        cell.column = column;\n        cell.setWidth();\n        column.cells.push(cell);\n        cells.push(cell);\n        if (!column.visible) {\n          cell.hide();\n        }\n      });\n      row.cells = cells;\n    };\n    return row;\n  }\n\n  //generate stats row\n  generateRowData(pos, data) {\n    var rowData = {},\n      calcs = pos == \"top\" ? this.topCalcs : this.botCalcs,\n      type = pos == \"top\" ? \"topCalc\" : \"botCalc\",\n      params,\n      paramKey;\n    calcs.forEach(function (column) {\n      var values = [];\n      if (column.modules.columnCalcs && column.modules.columnCalcs[type]) {\n        data.forEach(function (item) {\n          values.push(column.getFieldValue(item));\n        });\n        paramKey = type + \"Params\";\n        params = typeof column.modules.columnCalcs[paramKey] === \"function\" ? column.modules.columnCalcs[paramKey](values, data) : column.modules.columnCalcs[paramKey];\n        column.setFieldValue(rowData, column.modules.columnCalcs[type](values, data, params));\n      }\n    });\n    return rowData;\n  }\n  hasTopCalcs() {\n    return !!this.topCalcs.length;\n  }\n  hasBottomCalcs() {\n    return !!this.botCalcs.length;\n  }\n\n  //handle table redraw\n  redraw() {\n    if (this.topRow) {\n      this.topRow.normalizeHeight(true);\n    }\n    if (this.botRow) {\n      this.botRow.normalizeHeight(true);\n    }\n  }\n\n  //return the calculated\n  getResults() {\n    var results = {},\n      groups;\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      groups = this.table.modules.groupRows.getGroups(true);\n      groups.forEach(group => {\n        results[group.getKey()] = this.getGroupResults(group);\n      });\n    } else {\n      results = {\n        top: this.topRow ? this.topRow.getData() : {},\n        bottom: this.botRow ? this.botRow.getData() : {}\n      };\n    }\n    return results;\n  }\n\n  //get results from a group\n  getGroupResults(group) {\n    var groupObj = group._getSelf(),\n      subGroups = group.getSubGroups(),\n      subGroupResults = {},\n      results = {};\n    subGroups.forEach(subgroup => {\n      subGroupResults[subgroup.getKey()] = this.getGroupResults(subgroup);\n    });\n    results = {\n      top: groupObj.calcs.top ? groupObj.calcs.top.getData() : {},\n      bottom: groupObj.calcs.bottom ? groupObj.calcs.bottom.getData() : {},\n      groups: subGroupResults\n    };\n    return results;\n  }\n}\nColumnCalcs.moduleName = \"columnCalcs\";\n\n//load defaults\nColumnCalcs.calculations = defaultCalculations;\nclass DataTree extends Module {\n  constructor(table) {\n    super(table);\n    this.indent = 10;\n    this.field = \"\";\n    this.collapseEl = null;\n    this.expandEl = null;\n    this.branchEl = null;\n    this.elementField = false;\n    this.startOpen = function () {};\n    this.displayIndex = 0;\n    this.registerTableOption(\"dataTree\", false); //enable data tree\n    this.registerTableOption(\"dataTreeFilter\", true); //filter child rows\n    this.registerTableOption(\"dataTreeSort\", true); //sort child rows\n    this.registerTableOption(\"dataTreeElementColumn\", false);\n    this.registerTableOption(\"dataTreeBranchElement\", true); //show data tree branch element\n    this.registerTableOption(\"dataTreeChildIndent\", 9); //data tree child indent in px\n    this.registerTableOption(\"dataTreeChildField\", \"_children\"); //data tre column field to look for child rows\n    this.registerTableOption(\"dataTreeCollapseElement\", false); //data tree row collapse element\n    this.registerTableOption(\"dataTreeExpandElement\", false); //data tree row expand element\n    this.registerTableOption(\"dataTreeStartExpanded\", false);\n    this.registerTableOption(\"dataTreeChildColumnCalcs\", false); //include visible data tree rows in column calculations\n    this.registerTableOption(\"dataTreeSelectPropagate\", false); //seleccting a parent row selects its children\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"treeCollapse\", this.collapseRow.bind(this));\n    this.registerComponentFunction(\"row\", \"treeExpand\", this.expandRow.bind(this));\n    this.registerComponentFunction(\"row\", \"treeToggle\", this.toggleRow.bind(this));\n    this.registerComponentFunction(\"row\", \"getTreeParent\", this.getTreeParent.bind(this));\n    this.registerComponentFunction(\"row\", \"getTreeChildren\", this.getRowChildren.bind(this));\n    this.registerComponentFunction(\"row\", \"addTreeChild\", this.addTreeChildRow.bind(this));\n  }\n  initialize() {\n    if (this.table.options.dataTree) {\n      var dummyEl = null,\n        options = this.table.options;\n      this.field = options.dataTreeChildField;\n      this.indent = options.dataTreeChildIndent;\n      if (options.dataTreeBranchElement) {\n        if (options.dataTreeBranchElement === true) {\n          this.branchEl = document.createElement(\"div\");\n          this.branchEl.classList.add(\"tabulator-data-tree-branch\");\n        } else {\n          if (typeof options.dataTreeBranchElement === \"string\") {\n            dummyEl = document.createElement(\"div\");\n            dummyEl.innerHTML = options.dataTreeBranchElement;\n            this.branchEl = dummyEl.firstChild;\n          } else {\n            this.branchEl = options.dataTreeBranchElement;\n          }\n        }\n      }\n      if (options.dataTreeCollapseElement) {\n        if (typeof options.dataTreeCollapseElement === \"string\") {\n          dummyEl = document.createElement(\"div\");\n          dummyEl.innerHTML = options.dataTreeCollapseElement;\n          this.collapseEl = dummyEl.firstChild;\n        } else {\n          this.collapseEl = options.dataTreeCollapseElement;\n        }\n      } else {\n        this.collapseEl = document.createElement(\"div\");\n        this.collapseEl.classList.add(\"tabulator-data-tree-control\");\n        this.collapseEl.tabIndex = 0;\n        this.collapseEl.innerHTML = \"<div class='tabulator-data-tree-control-collapse'></div>\";\n      }\n      if (options.dataTreeExpandElement) {\n        if (typeof options.dataTreeExpandElement === \"string\") {\n          dummyEl = document.createElement(\"div\");\n          dummyEl.innerHTML = options.dataTreeExpandElement;\n          this.expandEl = dummyEl.firstChild;\n        } else {\n          this.expandEl = options.dataTreeExpandElement;\n        }\n      } else {\n        this.expandEl = document.createElement(\"div\");\n        this.expandEl.classList.add(\"tabulator-data-tree-control\");\n        this.expandEl.tabIndex = 0;\n        this.expandEl.innerHTML = \"<div class='tabulator-data-tree-control-expand'></div>\";\n      }\n      switch (typeof options.dataTreeStartExpanded) {\n        case \"boolean\":\n          this.startOpen = function (row, index) {\n            return options.dataTreeStartExpanded;\n          };\n          break;\n        case \"function\":\n          this.startOpen = options.dataTreeStartExpanded;\n          break;\n        default:\n          this.startOpen = function (row, index) {\n            return options.dataTreeStartExpanded[index];\n          };\n          break;\n      }\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n      this.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\n      this.subscribe(\"row-deleted\", this.rowDelete.bind(this), 0);\n      this.subscribe(\"row-data-changed\", this.rowDataChanged.bind(this), 10);\n      this.subscribe(\"cell-value-updated\", this.cellValueChanged.bind(this));\n      this.subscribe(\"edit-cancelled\", this.cellValueChanged.bind(this));\n      this.subscribe(\"column-moving-rows\", this.columnMoving.bind(this));\n      this.subscribe(\"table-built\", this.initializeElementField.bind(this));\n      this.registerDisplayHandler(this.getRows.bind(this), 30);\n    }\n  }\n  initializeElementField() {\n    var firstCol = this.table.columnManager.getFirstVisibleColumn();\n    this.elementField = this.table.options.dataTreeElementColumn || (firstCol ? firstCol.field : false);\n  }\n  getRowChildren(row) {\n    return this.getTreeChildren(row, true);\n  }\n  columnMoving() {\n    var rows = [];\n    this.table.rowManager.rows.forEach(row => {\n      rows = rows.concat(this.getTreeChildren(row, false, true));\n    });\n    return rows;\n  }\n  rowDataChanged(row, visible, updatedData) {\n    if (this.redrawNeeded(updatedData)) {\n      this.initializeRow(row);\n      if (visible) {\n        this.layoutRow(row);\n        this.refreshData(true);\n      }\n    }\n  }\n  cellValueChanged(cell) {\n    var field = cell.column.getField();\n    if (field === this.elementField) {\n      this.layoutRow(cell.row);\n    }\n  }\n  initializeRow(row) {\n    var childArray = row.getData()[this.field];\n    var isArray = Array.isArray(childArray);\n    var children = isArray || !isArray && typeof childArray === \"object\" && childArray !== null;\n    if (!children && row.modules.dataTree && row.modules.dataTree.branchEl) {\n      row.modules.dataTree.branchEl.parentNode.removeChild(row.modules.dataTree.branchEl);\n    }\n    if (!children && row.modules.dataTree && row.modules.dataTree.controlEl) {\n      row.modules.dataTree.controlEl.parentNode.removeChild(row.modules.dataTree.controlEl);\n    }\n    row.modules.dataTree = {\n      index: row.modules.dataTree ? row.modules.dataTree.index : 0,\n      open: children ? row.modules.dataTree ? row.modules.dataTree.open : this.startOpen(row.getComponent(), 0) : false,\n      controlEl: row.modules.dataTree && children ? row.modules.dataTree.controlEl : false,\n      branchEl: row.modules.dataTree && children ? row.modules.dataTree.branchEl : false,\n      parent: row.modules.dataTree ? row.modules.dataTree.parent : false,\n      children: children\n    };\n  }\n  reinitializeRowChildren(row) {\n    var children = this.getTreeChildren(row, false, true);\n    children.forEach(function (child) {\n      child.reinitialize(true);\n    });\n  }\n  layoutRow(row) {\n    var cell = this.elementField ? row.getCell(this.elementField) : row.getCells()[0],\n      el = cell.getElement(),\n      config = row.modules.dataTree;\n    if (config.branchEl) {\n      if (config.branchEl.parentNode) {\n        config.branchEl.parentNode.removeChild(config.branchEl);\n      }\n      config.branchEl = false;\n    }\n    if (config.controlEl) {\n      if (config.controlEl.parentNode) {\n        config.controlEl.parentNode.removeChild(config.controlEl);\n      }\n      config.controlEl = false;\n    }\n    this.generateControlElement(row, el);\n    row.getElement().classList.add(\"tabulator-tree-level-\" + config.index);\n    if (config.index) {\n      if (this.branchEl) {\n        config.branchEl = this.branchEl.cloneNode(true);\n        el.insertBefore(config.branchEl, el.firstChild);\n        if (this.table.rtl) {\n          config.branchEl.style.marginRight = (config.branchEl.offsetWidth + config.branchEl.style.marginLeft) * (config.index - 1) + config.index * this.indent + \"px\";\n        } else {\n          config.branchEl.style.marginLeft = (config.branchEl.offsetWidth + config.branchEl.style.marginRight) * (config.index - 1) + config.index * this.indent + \"px\";\n        }\n      } else {\n        if (this.table.rtl) {\n          el.style.paddingRight = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-right')) + config.index * this.indent + \"px\";\n        } else {\n          el.style.paddingLeft = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + config.index * this.indent + \"px\";\n        }\n      }\n    }\n  }\n  generateControlElement(row, el) {\n    var config = row.modules.dataTree,\n      el = el || row.getCells()[0].getElement(),\n      oldControl = config.controlEl;\n    if (config.children !== false) {\n      if (config.open) {\n        config.controlEl = this.collapseEl.cloneNode(true);\n        config.controlEl.addEventListener(\"click\", e => {\n          e.stopPropagation();\n          this.collapseRow(row);\n        });\n      } else {\n        config.controlEl = this.expandEl.cloneNode(true);\n        config.controlEl.addEventListener(\"click\", e => {\n          e.stopPropagation();\n          this.expandRow(row);\n        });\n      }\n      config.controlEl.addEventListener(\"mousedown\", e => {\n        e.stopPropagation();\n      });\n      if (oldControl && oldControl.parentNode === el) {\n        oldControl.parentNode.replaceChild(config.controlEl, oldControl);\n      } else {\n        el.insertBefore(config.controlEl, el.firstChild);\n      }\n    }\n  }\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n  getDisplayIndex() {\n    return this.displayIndex;\n  }\n  getRows(rows) {\n    var output = [];\n    rows.forEach((row, i) => {\n      var config, children;\n      output.push(row);\n      if (row instanceof Row) {\n        row.create();\n        config = row.modules.dataTree.children;\n        if (!config.index && config.children !== false) {\n          children = this.getChildren(row);\n          children.forEach(child => {\n            child.create();\n            output.push(child);\n          });\n        }\n      }\n    });\n    return output;\n  }\n  getChildren(row, allChildren) {\n    var config = row.modules.dataTree,\n      children = [],\n      output = [];\n    if (config.children !== false && (config.open || allChildren)) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n      if (this.table.modExists(\"filter\") && this.table.options.dataTreeFilter) {\n        children = this.table.modules.filter.filter(config.children);\n      } else {\n        children = config.children;\n      }\n      if (this.table.modExists(\"sort\") && this.table.options.dataTreeSort) {\n        this.table.modules.sort.sort(children);\n      }\n      children.forEach(child => {\n        output.push(child);\n        var subChildren = this.getChildren(child);\n        subChildren.forEach(sub => {\n          output.push(sub);\n        });\n      });\n    }\n    return output;\n  }\n  generateChildren(row) {\n    var children = [];\n    var childArray = row.getData()[this.field];\n    if (!Array.isArray(childArray)) {\n      childArray = [childArray];\n    }\n    childArray.forEach(childData => {\n      var childRow = new Row(childData || {}, this.table.rowManager);\n      childRow.create();\n      childRow.modules.dataTree.index = row.modules.dataTree.index + 1;\n      childRow.modules.dataTree.parent = row;\n      if (childRow.modules.dataTree.children) {\n        childRow.modules.dataTree.open = this.startOpen(childRow.getComponent(), childRow.modules.dataTree.index);\n      }\n      children.push(childRow);\n    });\n    return children;\n  }\n  expandRow(row, silent) {\n    var config = row.modules.dataTree;\n    if (config.children !== false) {\n      config.open = true;\n      row.reinitialize();\n      this.refreshData(true);\n      this.dispatchExternal(\"dataTreeRowExpanded\", row.getComponent(), row.modules.dataTree.index);\n    }\n  }\n  collapseRow(row) {\n    var config = row.modules.dataTree;\n    if (config.children !== false) {\n      config.open = false;\n      row.reinitialize();\n      this.refreshData(true);\n      this.dispatchExternal(\"dataTreeRowCollapsed\", row.getComponent(), row.modules.dataTree.index);\n    }\n  }\n  toggleRow(row) {\n    var config = row.modules.dataTree;\n    if (config.children !== false) {\n      if (config.open) {\n        this.collapseRow(row);\n      } else {\n        this.expandRow(row);\n      }\n    }\n  }\n  getTreeParent(row) {\n    return row.modules.dataTree.parent ? row.modules.dataTree.parent.getComponent() : false;\n  }\n  getFilteredTreeChildren(row) {\n    var config = row.modules.dataTree,\n      output = [],\n      children;\n    if (config.children) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n      if (this.table.modExists(\"filter\") && this.table.options.dataTreeFilter) {\n        children = this.table.modules.filter.filter(config.children);\n      } else {\n        children = config.children;\n      }\n      children.forEach(childRow => {\n        if (childRow instanceof Row) {\n          output.push(childRow);\n        }\n      });\n    }\n    return output;\n  }\n  rowDelete(row) {\n    var parent = row.modules.dataTree.parent,\n      childIndex;\n    if (parent) {\n      childIndex = this.findChildIndex(row, parent);\n      if (childIndex !== false) {\n        parent.data[this.field].splice(childIndex, 1);\n      }\n      if (!parent.data[this.field].length) {\n        delete parent.data[this.field];\n      }\n      this.initializeRow(parent);\n      this.layoutRow(parent);\n    }\n    this.refreshData(true);\n  }\n  addTreeChildRow(row, data, top, index) {\n    var childIndex = false;\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n    if (!Array.isArray(row.data[this.field])) {\n      row.data[this.field] = [];\n      row.modules.dataTree.open = this.startOpen(row.getComponent(), row.modules.dataTree.index);\n    }\n    if (typeof index !== \"undefined\") {\n      childIndex = this.findChildIndex(index, row);\n      if (childIndex !== false) {\n        row.data[this.field].splice(top ? childIndex : childIndex + 1, 0, data);\n      }\n    }\n    if (childIndex === false) {\n      if (top) {\n        row.data[this.field].unshift(data);\n      } else {\n        row.data[this.field].push(data);\n      }\n    }\n    this.initializeRow(row);\n    this.layoutRow(row);\n    this.refreshData(true);\n  }\n  findChildIndex(subject, parent) {\n    var match = false;\n    if (typeof subject == \"object\") {\n      if (subject instanceof Row) {\n        //subject is row element\n        match = subject.data;\n      } else if (subject instanceof RowComponent) {\n        //subject is public row component\n        match = subject._getSelf().data;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        if (parent.modules.dataTree) {\n          match = parent.modules.dataTree.children.find(childRow => {\n            return childRow instanceof Row ? childRow.element === subject : false;\n          });\n          if (match) {\n            match = match.data;\n          }\n        }\n      }\n    } else if (typeof subject == \"undefined\" || subject === null) {\n      match = false;\n    } else {\n      //subject should be treated as the index of the row\n      match = parent.data[this.field].find(row => {\n        return row.data[this.table.options.index] == subject;\n      });\n    }\n    if (match) {\n      if (Array.isArray(parent.data[this.field])) {\n        match = parent.data[this.field].indexOf(match);\n      }\n      if (match == -1) {\n        match = false;\n      }\n    }\n\n    //catch all for any other type of input\n\n    return match;\n  }\n  getTreeChildren(row, component, recurse) {\n    var config = row.modules.dataTree,\n      output = [];\n    if (config.children) {\n      if (!Array.isArray(config.children)) {\n        config.children = this.generateChildren(row);\n      }\n      config.children.forEach(childRow => {\n        if (childRow instanceof Row) {\n          output.push(component ? childRow.getComponent() : childRow);\n          if (recurse) {\n            output = output.concat(this.getTreeChildren(childRow, component, recurse));\n          }\n        }\n      });\n    }\n    return output;\n  }\n  getChildField() {\n    return this.field;\n  }\n  redrawNeeded(data) {\n    console.log(\"needed?\", data);\n    return (this.field ? typeof data[this.field] !== \"undefined\" : false) || (this.elementField ? typeof data[this.elementField] !== \"undefined\" : false);\n  }\n}\nDataTree.moduleName = \"dataTree\";\nfunction csv(list, options, setFileContents) {\n  var delimiter = options && options.delimiter ? options.delimiter : \",\",\n    fileContents = [],\n    headers = [];\n  list.forEach(row => {\n    var item = [];\n    switch (row.type) {\n      case \"group\":\n        console.warn(\"Download Warning - CSV downloader cannot process row groups\");\n        break;\n      case \"calc\":\n        console.warn(\"Download Warning - CSV downloader cannot process column calculations\");\n        break;\n      case \"header\":\n        row.columns.forEach((col, i) => {\n          if (col && col.depth === 1) {\n            headers[i] = typeof col.value == \"undefined\" || col.value === null ? \"\" : '\"' + String(col.value).split('\"').join('\"\"') + '\"';\n          }\n        });\n        break;\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            switch (typeof col.value) {\n              case \"object\":\n                col.value = JSON.stringify(col.value);\n                break;\n              case \"undefined\":\n              case \"null\":\n                col.value = \"\";\n                break;\n            }\n            item.push('\"' + String(col.value).split('\"').join('\"\"') + '\"');\n          }\n        });\n        fileContents.push(item.join(delimiter));\n        break;\n    }\n  });\n  if (headers.length) {\n    fileContents.unshift(headers.join(delimiter));\n  }\n  fileContents = fileContents.join(\"\\n\");\n  if (options.bom) {\n    fileContents = \"\\ufeff\" + fileContents;\n  }\n  setFileContents(fileContents, \"text/csv\");\n}\nfunction json(list, options, setFileContents) {\n  var fileContents = [];\n  list.forEach(row => {\n    var item = {};\n    switch (row.type) {\n      case \"header\":\n        break;\n      case \"group\":\n        console.warn(\"Download Warning - JSON downloader cannot process row groups\");\n        break;\n      case \"calc\":\n        console.warn(\"Download Warning - JSON downloader cannot process column calculations\");\n        break;\n      case \"row\":\n        row.columns.forEach(col => {\n          if (col) {\n            item[col.component.getField()] = col.value;\n          }\n        });\n        fileContents.push(item);\n        break;\n    }\n  });\n  fileContents = JSON.stringify(fileContents, null, '\\t');\n  setFileContents(fileContents, \"application/json\");\n}\nfunction pdf(list, options, setFileContents) {\n  var header = [],\n    body = [],\n    autoTableParams = {},\n    rowGroupStyles = options.rowGroupStyles || {\n      fontStyle: \"bold\",\n      fontSize: 12,\n      cellPadding: 6,\n      fillColor: 220\n    },\n    rowCalcStyles = options.rowCalcStyles || {\n      fontStyle: \"bold\",\n      fontSize: 10,\n      cellPadding: 4,\n      fillColor: 232\n    },\n    jsPDFParams = options.jsPDF || {},\n    title = options && options.title ? options.title : \"\";\n  if (!jsPDFParams.orientation) {\n    jsPDFParams.orientation = options.orientation || \"landscape\";\n  }\n  if (!jsPDFParams.unit) {\n    jsPDFParams.unit = \"pt\";\n  }\n\n  //parse row list\n  list.forEach(row => {\n    switch (row.type) {\n      case \"header\":\n        header.push(parseRow(row));\n        break;\n      case \"group\":\n        body.push(parseRow(row, rowGroupStyles));\n        break;\n      case \"calc\":\n        body.push(parseRow(row, rowCalcStyles));\n        break;\n      case \"row\":\n        body.push(parseRow(row));\n        break;\n    }\n  });\n  function parseRow(row, styles) {\n    var rowData = [];\n    row.columns.forEach(col => {\n      var cell;\n      if (col) {\n        switch (typeof col.value) {\n          case \"object\":\n            col.value = JSON.stringify(col.value);\n            break;\n          case \"undefined\":\n          case \"null\":\n            col.value = \"\";\n            break;\n        }\n        cell = {\n          content: col.value,\n          colSpan: col.width,\n          rowSpan: col.height\n        };\n        if (styles) {\n          cell.styles = styles;\n        }\n        rowData.push(cell);\n      }\n    });\n    return rowData;\n  }\n\n  //configure PDF\n  var doc = new jspdf.jsPDF(jsPDFParams); //set document to landscape, better for most tables\n\n  if (options && options.autoTable) {\n    if (typeof options.autoTable === \"function\") {\n      autoTableParams = options.autoTable(doc) || {};\n    } else {\n      autoTableParams = options.autoTable;\n    }\n  }\n  if (title) {\n    autoTableParams.didDrawPage = function (data) {\n      doc.text(title, 40, 30);\n    };\n  }\n  autoTableParams.head = header;\n  autoTableParams.body = body;\n  doc.autoTable(autoTableParams);\n  if (options && options.documentProcessing) {\n    options.documentProcessing(doc);\n  }\n  setFileContents(doc.output(\"arraybuffer\"), \"application/pdf\");\n}\nfunction xlsx(list, options, setFileContents) {\n  var self = this,\n    sheetName = options.sheetName || \"Sheet1\",\n    workbook = XLSX.utils.book_new(),\n    tableFeatures = new CoreFeature(this),\n    output;\n  workbook.SheetNames = [];\n  workbook.Sheets = {};\n  function generateSheet() {\n    var rows = [],\n      merges = [],\n      worksheet = {},\n      range = {\n        s: {\n          c: 0,\n          r: 0\n        },\n        e: {\n          c: list[0] ? list[0].columns.reduce((a, b) => a + (b && b.width ? b.width : 1), 0) : 0,\n          r: list.length\n        }\n      };\n\n    //parse row list\n    list.forEach((row, i) => {\n      var rowData = [];\n      row.columns.forEach(function (col, j) {\n        if (col) {\n          rowData.push(!(col.value instanceof Date) && typeof col.value === \"object\" ? JSON.stringify(col.value) : col.value);\n          if (col.width > 1 || col.height > -1) {\n            if (col.height > 1 || col.width > 1) {\n              merges.push({\n                s: {\n                  r: i,\n                  c: j\n                },\n                e: {\n                  r: i + col.height - 1,\n                  c: j + col.width - 1\n                }\n              });\n            }\n          }\n        } else {\n          rowData.push(\"\");\n        }\n      });\n      rows.push(rowData);\n    });\n\n    //convert rows to worksheet\n    XLSX.utils.sheet_add_aoa(worksheet, rows);\n    worksheet['!ref'] = XLSX.utils.encode_range(range);\n    if (merges.length) {\n      worksheet[\"!merges\"] = merges;\n    }\n    return worksheet;\n  }\n  if (options.sheetOnly) {\n    setFileContents(generateSheet());\n    return;\n  }\n  if (options.sheets) {\n    for (var sheet in options.sheets) {\n      if (options.sheets[sheet] === true) {\n        workbook.SheetNames.push(sheet);\n        workbook.Sheets[sheet] = generateSheet();\n      } else {\n        workbook.SheetNames.push(sheet);\n        tableFeatures.commsSend(options.sheets[sheet], \"download\", \"intercept\", {\n          type: \"xlsx\",\n          options: {\n            sheetOnly: true\n          },\n          active: self.active,\n          intercept: function (data) {\n            workbook.Sheets[sheet] = data;\n          }\n        });\n      }\n    }\n  } else {\n    workbook.SheetNames.push(sheetName);\n    workbook.Sheets[sheetName] = generateSheet();\n  }\n  if (options.documentProcessing) {\n    workbook = options.documentProcessing(workbook);\n  }\n\n  //convert workbook to binary array\n  function s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n  }\n  output = XLSX.write(workbook, {\n    bookType: 'xlsx',\n    bookSST: true,\n    type: 'binary'\n  });\n  setFileContents(s2ab(output), \"application/octet-stream\");\n}\nfunction html(list, options, setFileContents) {\n  if (this.modExists(\"export\", true)) {\n    setFileContents(this.modules.export.genereateHTMLTable(list), \"text/html\");\n  }\n}\nvar defaultDownloaders = {\n  csv: csv,\n  json: json,\n  pdf: pdf,\n  xlsx: xlsx,\n  html: html\n};\nclass Download extends Module {\n  constructor(table) {\n    super(table);\n    this.registerTableOption(\"downloadReady\", function (data, blob) {\n      return blob;\n    }); //function to manipulate download data\n    this.registerTableOption(\"downloadConfig\", {}); //download config\n    this.registerTableOption(\"downloadRowRange\", \"active\"); //restrict download to active rows only\n\n    this.registerColumnOption(\"download\");\n    this.registerColumnOption(\"titleDownload\");\n  }\n  initialize() {\n    this.registerTableFunction(\"download\", this.download.bind(this));\n    this.registerTableFunction(\"downloadToTab\", this.downloadToTab.bind(this));\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  downloadToTab(type, filename, options, active) {\n    this.download(type, filename, options, active, true);\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  //trigger file download\n  download(type, filename, options, range, interceptCallback) {\n    var downloadFunc = false;\n    function buildLink(data, mime) {\n      if (interceptCallback) {\n        if (interceptCallback === true) {\n          this.triggerDownload(data, mime, type, filename, true);\n        } else {\n          interceptCallback(data);\n        }\n      } else {\n        this.triggerDownload(data, mime, type, filename);\n      }\n    }\n    if (typeof type == \"function\") {\n      downloadFunc = type;\n    } else {\n      if (Download.downloaders[type]) {\n        downloadFunc = Download.downloaders[type];\n      } else {\n        console.warn(\"Download Error - No such download type found: \", type);\n      }\n    }\n    if (downloadFunc) {\n      var list = this.generateExportList(range);\n      downloadFunc.call(this.table, list, options || {}, buildLink.bind(this));\n    }\n  }\n  generateExportList(range) {\n    var list = this.table.modules.export.generateExportList(this.table.options.downloadConfig, false, range || this.table.options.downloadRowRange, \"download\");\n\n    //assign group header formatter\n    var groupHeader = this.table.options.groupHeaderDownload;\n    if (groupHeader && !Array.isArray(groupHeader)) {\n      groupHeader = [groupHeader];\n    }\n    list.forEach(row => {\n      var group;\n      if (row.type === \"group\") {\n        group = row.columns[0];\n        if (groupHeader && groupHeader[row.indent]) {\n          group.value = groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n        }\n      }\n    });\n    return list;\n  }\n  triggerDownload(data, mime, type, filename, newTab) {\n    var element = document.createElement('a'),\n      blob = new Blob([data], {\n        type: mime\n      }),\n      filename = filename || \"Tabulator.\" + (typeof type === \"function\" ? \"txt\" : type);\n    blob = this.table.options.downloadReady(data, blob);\n    if (blob) {\n      if (newTab) {\n        window.open(window.URL.createObjectURL(blob));\n      } else {\n        if (navigator.msSaveOrOpenBlob) {\n          navigator.msSaveOrOpenBlob(blob, filename);\n        } else {\n          element.setAttribute('href', window.URL.createObjectURL(blob));\n\n          //set file title\n          element.setAttribute('download', filename);\n\n          //trigger download\n          element.style.display = 'none';\n          document.body.appendChild(element);\n          element.click();\n\n          //remove temporary link element\n          document.body.removeChild(element);\n        }\n      }\n      this.dispatchExternal(\"downloadComplete\");\n    }\n  }\n  commsReceived(table, action, data) {\n    switch (action) {\n      case \"intercept\":\n        this.download(data.type, \"\", data.options, data.active, data.intercept);\n        break;\n    }\n  }\n}\nDownload.moduleName = \"download\";\n\n//load defaults\nDownload.downloaders = defaultDownloaders;\nfunction maskInput(el, options) {\n  var mask = options.mask,\n    maskLetter = typeof options.maskLetterChar !== \"undefined\" ? options.maskLetterChar : \"A\",\n    maskNumber = typeof options.maskNumberChar !== \"undefined\" ? options.maskNumberChar : \"9\",\n    maskWildcard = typeof options.maskWildcardChar !== \"undefined\" ? options.maskWildcardChar : \"*\";\n  function fillSymbols(index) {\n    var symbol = mask[index];\n    if (typeof symbol !== \"undefined\" && symbol !== maskWildcard && symbol !== maskLetter && symbol !== maskNumber) {\n      el.value = el.value + \"\" + symbol;\n      fillSymbols(index + 1);\n    }\n  }\n  el.addEventListener(\"keydown\", e => {\n    var index = el.value.length,\n      char = e.key;\n    if (e.keyCode > 46) {\n      if (index >= mask.length) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      } else {\n        switch (mask[index]) {\n          case maskLetter:\n            if (char.toUpperCase() == char.toLowerCase()) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n            break;\n          case maskNumber:\n            if (isNaN(char)) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n            break;\n          case maskWildcard:\n            break;\n          default:\n            if (char !== mask[index]) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n        }\n      }\n    }\n    return;\n  });\n  el.addEventListener(\"keyup\", e => {\n    if (e.keyCode > 46) {\n      if (options.maskAutoFill) {\n        fillSymbols(el.value.length);\n      }\n    }\n  });\n  if (!el.placeholder) {\n    el.placeholder = mask;\n  }\n  if (options.maskAutoFill) {\n    fillSymbols(el.value.length);\n  }\n}\n\n//input element\nfunction input(cell, onRendered, success, cancel, editorParams) {\n  //create and style input\n  var cellValue = cell.getValue(),\n    input = document.createElement(\"input\");\n  input.setAttribute(\"type\", editorParams.search ? \"search\" : \"text\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = typeof cellValue !== \"undefined\" ? cellValue : \"\";\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n  });\n  function onChange(e) {\n    if ((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\" || input.value !== cellValue) {\n      if (success(input.value)) {\n        cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  }\n\n  //submit new value on blur or change\n  input.addEventListener(\"change\", onChange);\n  input.addEventListener(\"blur\", onChange);\n\n  //submit new value on enter\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      // case 9:\n      case 13:\n        onChange();\n        break;\n      case 27:\n        cancel();\n        break;\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n  return input;\n}\n\n//resizable text area element\nfunction textarea(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n    vertNav = editorParams.verticalNavigation || \"hybrid\",\n    value = String(cellValue !== null && typeof cellValue !== \"undefined\" ? cellValue : \"\"),\n    count = (value.match(/(?:\\r\\n|\\r|\\n)/g) || []).length + 1,\n    input = document.createElement(\"textarea\"),\n    scrollHeight = 0;\n\n  //create and style input\n  input.style.display = \"block\";\n  input.style.padding = \"2px\";\n  input.style.height = \"100%\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  input.style.whiteSpace = \"pre-wrap\";\n  input.style.resize = \"none\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = value;\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n    input.scrollHeight;\n    input.style.height = input.scrollHeight + \"px\";\n    cell.getRow().normalizeHeight();\n  });\n  function onChange(e) {\n    if ((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\" || input.value !== cellValue) {\n      if (success(input.value)) {\n        cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\n      }\n\n      setTimeout(function () {\n        cell.getRow().normalizeHeight();\n      }, 300);\n    } else {\n      cancel();\n    }\n  }\n\n  //submit new value on blur or change\n  input.addEventListener(\"change\", onChange);\n  input.addEventListener(\"blur\", onChange);\n  input.addEventListener(\"keyup\", function () {\n    input.style.height = \"\";\n    var heightNow = input.scrollHeight;\n    input.style.height = heightNow + \"px\";\n    if (heightNow != scrollHeight) {\n      scrollHeight = heightNow;\n      cell.getRow().normalizeHeight();\n    }\n  });\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 27:\n        cancel();\n        break;\n      case 38:\n        //up arrow\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && input.selectionStart) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n        break;\n      case 40:\n        //down arrow\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && input.selectionStart !== input.value.length) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n        break;\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n  return input;\n}\n\n//input element with type of number\nfunction number(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n    vertNav = editorParams.verticalNavigation || \"editor\",\n    input = document.createElement(\"input\");\n  input.setAttribute(\"type\", \"number\");\n  if (typeof editorParams.max != \"undefined\") {\n    input.setAttribute(\"max\", editorParams.max);\n  }\n  if (typeof editorParams.min != \"undefined\") {\n    input.setAttribute(\"min\", editorParams.min);\n  }\n  if (typeof editorParams.step != \"undefined\") {\n    input.setAttribute(\"step\", editorParams.step);\n  }\n\n  //create and style input\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = cellValue;\n  var blurFunc = function (e) {\n    onChange();\n  };\n  onRendered(function () {\n    //submit new value on blur\n    input.removeEventListener(\"blur\", blurFunc);\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n\n    //submit new value on blur\n    input.addEventListener(\"blur\", blurFunc);\n  });\n  function onChange() {\n    var value = input.value;\n    if (!isNaN(value) && value !== \"\") {\n      value = Number(value);\n    }\n    if (value !== cellValue) {\n      if (success(value)) {\n        cellValue = value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  }\n\n  //submit new value on enter\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 13:\n        // case 9:\n        onChange();\n        break;\n      case 27:\n        cancel();\n        break;\n      case 38: //up arrow\n      case 40:\n        //down arrow\n        if (vertNav == \"editor\") {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n        }\n        break;\n      case 35:\n      case 36:\n        e.stopPropagation();\n        break;\n    }\n  });\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n  return input;\n}\n\n//input element with type of number\nfunction range(cell, onRendered, success, cancel, editorParams) {\n  var cellValue = cell.getValue(),\n    input = document.createElement(\"input\");\n  input.setAttribute(\"type\", \"range\");\n  if (typeof editorParams.max != \"undefined\") {\n    input.setAttribute(\"max\", editorParams.max);\n  }\n  if (typeof editorParams.min != \"undefined\") {\n    input.setAttribute(\"min\", editorParams.min);\n  }\n  if (typeof editorParams.step != \"undefined\") {\n    input.setAttribute(\"step\", editorParams.step);\n  }\n\n  //create and style input\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = cellValue;\n  onRendered(function () {\n    input.focus({\n      preventScroll: true\n    });\n    input.style.height = \"100%\";\n  });\n  function onChange() {\n    var value = input.value;\n    if (!isNaN(value) && value !== \"\") {\n      value = Number(value);\n    }\n    if (value != cellValue) {\n      if (success(value)) {\n        cellValue = value; //persist value if successfully validated incase editor is used as header filter\n      }\n    } else {\n      cancel();\n    }\n  }\n\n  //submit new value on blur\n  input.addEventListener(\"blur\", function (e) {\n    onChange();\n  });\n\n  //submit new value on enter\n  input.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 13:\n        // case 9:\n        onChange();\n        break;\n      case 27:\n        cancel();\n        break;\n    }\n  });\n  return input;\n}\n\n//dropdown select editor\nfunction select(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n    cellEl = cell.getElement(),\n    initialValue = cell.getValue(),\n    vertNav = editorParams.verticalNavigation || \"editor\",\n    initialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? Array.isArray(initialValue) ? initialValue : [initialValue] : typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : [],\n    input = document.createElement(\"input\"),\n    listEl = document.createElement(\"div\"),\n    multiselect = editorParams.multiselect,\n    dataItems = [],\n    currentItem = {},\n    displayItems = [],\n    currentItems = [],\n    blurable = true,\n    blockListShow = false,\n    searchWord = \"\",\n    searchWordTimeout = null;\n  if (Array.isArray(editorParams) || !Array.isArray(editorParams) && typeof editorParams === \"object\" && !editorParams.values) {\n    console.warn(\"DEPRECATION WARNING - values for the select editor must now be passed into the values property of the editorParams object, not as the editorParams object\");\n    editorParams = {\n      values: editorParams\n    };\n  }\n  function getUniqueColumnValues(field) {\n    var output = {},\n      data = self.table.getData(),\n      column;\n    if (field) {\n      column = self.table.columnManager.getColumnByField(field);\n    } else {\n      column = cell.getColumn()._getSelf();\n    }\n    if (column) {\n      data.forEach(function (row) {\n        var val = column.getFieldValue(row);\n        if (val !== null && typeof val !== \"undefined\" && val !== \"\") {\n          output[val] = true;\n        }\n      });\n    } else {\n      console.warn(\"unable to find matching column to create select lookup list:\", field);\n    }\n    return Object.keys(output);\n  }\n  function parseItems(inputValues, curentValues) {\n    var dataList = [];\n    var displayList = [];\n    function processComplexListItem(item) {\n      var item = {\n        label: item.label,\n        value: item.value,\n        itemParams: item.itemParams,\n        elementAttributes: item.elementAttributes,\n        element: false\n      };\n\n      // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n      // \tsetCurrentItem(item);\n      // }\n\n      if (curentValues.indexOf(item.value) > -1) {\n        setItem(item);\n      }\n      dataList.push(item);\n      displayList.push(item);\n      return item;\n    }\n    if (typeof inputValues == \"function\") {\n      inputValues = inputValues(cell);\n    }\n    if (Array.isArray(inputValues)) {\n      inputValues.forEach(function (value) {\n        var item;\n        if (typeof value === \"object\") {\n          if (value.options) {\n            item = {\n              label: value.label,\n              group: true,\n              itemParams: value.itemParams,\n              elementAttributes: value.elementAttributes,\n              element: false\n            };\n            displayList.push(item);\n            value.options.forEach(function (item) {\n              processComplexListItem(item);\n            });\n          } else {\n            processComplexListItem(value);\n          }\n        } else {\n          item = {\n            label: value,\n            value: value,\n            element: false\n          };\n\n          // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n          // \tsetCurrentItem(item);\n          // }\n\n          if (curentValues.indexOf(item.value) > -1) {\n            setItem(item);\n          }\n          dataList.push(item);\n          displayList.push(item);\n        }\n      });\n    } else {\n      for (var key in inputValues) {\n        var item = {\n          label: inputValues[key],\n          value: key,\n          element: false\n        };\n\n        // if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\n        // \tsetCurrentItem(item);\n        // }\n\n        if (curentValues.indexOf(item.value) > -1) {\n          setItem(item);\n        }\n        dataList.push(item);\n        displayList.push(item);\n      }\n    }\n    if (editorParams.sortValuesList) {\n      dataList.sort((a, b) => {\n        return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n      });\n      displayList.sort((a, b) => {\n        return a.label < b.label ? -1 : a.label > b.label ? 1 : 0;\n      });\n      if (editorParams.sortValuesList !== \"asc\") {\n        dataList.reverse();\n        displayList.reverse();\n      }\n    }\n    dataItems = dataList;\n    displayItems = displayList;\n    fillList();\n  }\n  function fillList() {\n    while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n    displayItems.forEach(function (item) {\n      var el = item.element;\n      if (!el) {\n        el = document.createElement(\"div\");\n        item.label = editorParams.listItemFormatter ? editorParams.listItemFormatter(item.value, item.label, cell, el, item.itemParams) : item.label;\n        if (item.group) {\n          el.classList.add(\"tabulator-edit-select-list-group\");\n          el.tabIndex = 0;\n          el.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\n        } else {\n          el.classList.add(\"tabulator-edit-select-list-item\");\n          el.tabIndex = 0;\n          el.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\n          el.addEventListener(\"click\", function () {\n            blockListShow = true;\n            setTimeout(() => {\n              blockListShow = false;\n            }, 10);\n\n            // setCurrentItem(item);\n            // chooseItem();\n            if (multiselect) {\n              toggleItem(item);\n              input.focus();\n            } else {\n              chooseItem(item);\n            }\n          });\n\n          // if(item === currentItem){\n          // \tel.classList.add(\"active\");\n          // }\n\n          if (currentItems.indexOf(item) > -1) {\n            el.classList.add(\"active\");\n          }\n        }\n        if (item.elementAttributes && typeof item.elementAttributes == \"object\") {\n          for (let key in item.elementAttributes) {\n            if (key.charAt(0) == \"+\") {\n              key = key.slice(1);\n              el.setAttribute(key, input.getAttribute(key) + item.elementAttributes[\"+\" + key]);\n            } else {\n              el.setAttribute(key, item.elementAttributes[key]);\n            }\n          }\n        }\n        el.addEventListener(\"mousedown\", function () {\n          blurable = false;\n          setTimeout(function () {\n            blurable = true;\n          }, 10);\n        });\n        item.element = el;\n      }\n      listEl.appendChild(el);\n    });\n  }\n  function setCurrentItem(item, active) {\n    if (!multiselect && currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"active\");\n    }\n    if (currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"focused\");\n    }\n    currentItem = item;\n    if (item.element) {\n      item.element.classList.add(\"focused\");\n      if (active) {\n        item.element.classList.add(\"active\");\n      }\n    }\n    if (item && item.element && item.element.scrollIntoView) {\n      item.element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  }\n\n  // function chooseItem(){\n  // \thideList();\n\n  // \tif(initialValue !== currentItem.value){\n  // \t\tinitialValue = currentItem.value;\n  // \t\tsuccess(currentItem.value);\n  // \t}else{\n  // \t\tcancel();\n  // \t}\n  // }\n\n  function setItem(item) {\n    var index = currentItems.indexOf(item);\n    if (index == -1) {\n      currentItems.push(item);\n      setCurrentItem(item, true);\n    }\n    fillInput();\n  }\n  function unsetItem(index) {\n    var item = currentItems[index];\n    if (index > -1) {\n      currentItems.splice(index, 1);\n      if (item.element) {\n        item.element.classList.remove(\"active\");\n      }\n    }\n  }\n  function toggleItem(item) {\n    if (!item) {\n      item = currentItem;\n    }\n    var index = currentItems.indexOf(item);\n    if (index > -1) {\n      unsetItem(index);\n    } else {\n      if (multiselect !== true && currentItems.length >= multiselect) {\n        unsetItem(0);\n      }\n      setItem(item);\n    }\n    fillInput();\n  }\n  function chooseItem(item) {\n    hideList();\n    if (!item) {\n      item = currentItem;\n    }\n    if (item) {\n      input.value = item.label;\n      success(item.value);\n    }\n    initialDisplayValue = [item.value];\n  }\n  function chooseItems(silent) {\n    if (!silent) {\n      hideList();\n    }\n    var output = [];\n    currentItems.forEach(item => {\n      output.push(item.value);\n    });\n    initialDisplayValue = output;\n    success(output);\n  }\n  function fillInput() {\n    var output = [];\n    currentItems.forEach(item => {\n      output.push(item.label);\n    });\n    input.value = output.join(\", \");\n    if (self.currentCell === false) {\n      chooseItems(true);\n    }\n  }\n  function unsetItems() {\n    var len = currentItems.length;\n    for (let i = 0; i < len; i++) {\n      unsetItem(0);\n    }\n  }\n  function cancelItem() {\n    hideList();\n    cancel();\n  }\n  function showList() {\n    currentItems = [];\n    if (!listEl.parentNode) {\n      if (editorParams.values === true) {\n        parseItems(getUniqueColumnValues(), initialDisplayValue);\n      } else if (typeof editorParams.values === \"string\") {\n        parseItems(getUniqueColumnValues(editorParams.values), initialDisplayValue);\n      } else {\n        parseItems(editorParams.values || [], initialDisplayValue);\n      }\n      var offset = Helpers.elOffset(cellEl);\n      listEl.style.minWidth = cellEl.offsetWidth + \"px\";\n      listEl.style.top = offset.top + cellEl.offsetHeight + \"px\";\n      listEl.style.left = offset.left + \"px\";\n      listEl.addEventListener(\"mousedown\", function (e) {\n        blurable = false;\n        setTimeout(function () {\n          blurable = true;\n        }, 10);\n      });\n      document.body.appendChild(listEl);\n    }\n  }\n  function hideList() {\n    if (listEl.parentNode) {\n      listEl.parentNode.removeChild(listEl);\n    }\n    removeScrollListener();\n  }\n  function removeScrollListener() {\n    self.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\n  }\n  function scrollTovalue(char) {\n    clearTimeout(searchWordTimeout);\n    var character = String.fromCharCode(event.keyCode).toLowerCase();\n    searchWord += character.toLowerCase();\n    var match = dataItems.find(item => {\n      return typeof item.label !== \"undefined\" && item.label.toLowerCase().startsWith(searchWord);\n    });\n    if (match) {\n      setCurrentItem(match, !multiselect);\n    }\n    searchWordTimeout = setTimeout(() => {\n      searchWord = \"\";\n    }, 800);\n  }\n\n  //style input\n  input.setAttribute(\"type\", \"text\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  input.style.cursor = \"default\";\n  input.readOnly = this.currentCell != false;\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : \"\";\n\n  // if(editorParams.values === true){\n  // \tparseItems(getUniqueColumnValues(), initialValue);\n  // }else if(typeof editorParams.values === \"string\"){\n  // \tparseItems(getUniqueColumnValues(editorParams.values), initialValue);\n  // }else{\n  // \tparseItems(editorParams.values || [], initialValue);\n  // }\n\n  input.addEventListener(\"search\", function (e) {\n    if (!input.value) {\n      unsetItems();\n      chooseItems();\n    }\n  });\n\n  //allow key based navigation\n  input.addEventListener(\"keydown\", function (e) {\n    var index;\n    switch (e.keyCode) {\n      case 38:\n        //up arrow\n        index = dataItems.indexOf(currentItem);\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n          if (index > 0) {\n            setCurrentItem(dataItems[index - 1], !multiselect);\n          }\n        }\n        break;\n      case 40:\n        //down arrow\n        index = dataItems.indexOf(currentItem);\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index < dataItems.length - 1) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n          if (index < dataItems.length - 1) {\n            if (index == -1) {\n              setCurrentItem(dataItems[0], !multiselect);\n            } else {\n              setCurrentItem(dataItems[index + 1], !multiselect);\n            }\n          }\n        }\n        break;\n      case 37: //left arrow\n      case 39:\n        //right arrow\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n        break;\n      case 13:\n        //enter\n        // chooseItem();\n\n        if (multiselect) {\n          toggleItem();\n        } else {\n          chooseItem();\n        }\n        break;\n      case 27:\n        //escape\n        cancelItem();\n        break;\n      case 9:\n        //tab\n        break;\n      default:\n        if (self.currentCell === false) {\n          e.preventDefault();\n        }\n        if (e.keyCode >= 38 && e.keyCode <= 90) {\n          scrollTovalue(e.keyCode);\n        }\n    }\n  });\n  input.addEventListener(\"blur\", function (e) {\n    if (blurable) {\n      if (multiselect) {\n        chooseItems();\n      } else {\n        cancelItem();\n      }\n    }\n  });\n  input.addEventListener(\"focus\", function (e) {\n    if (!blockListShow) {\n      showList();\n    }\n  });\n\n  //style list element\n  listEl = document.createElement(\"div\");\n  listEl.classList.add(\"tabulator-edit-select-list\");\n  onRendered(function () {\n    input.style.height = \"100%\";\n    input.focus({\n      preventScroll: true\n    });\n  });\n  setTimeout(() => {\n    this.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\n  }, 10);\n  return input;\n}\n\n//autocomplete\nfunction autocomplete(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n    cellEl = cell.getElement(),\n    initialValue = cell.getValue(),\n    vertNav = editorParams.verticalNavigation || \"editor\",\n    initialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : \"\",\n    input = document.createElement(\"input\"),\n    listEl = document.createElement(\"div\"),\n    displayItems = [],\n    currentItem = false,\n    blurable = true,\n    uniqueColumnValues = false;\n\n  //style input\n  input.setAttribute(\"type\", \"search\");\n  input.style.padding = \"4px\";\n  input.style.width = \"100%\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  //style list element\n  listEl.classList.add(\"tabulator-edit-select-list\");\n  listEl.addEventListener(\"mousedown\", function (e) {\n    blurable = false;\n    setTimeout(function () {\n      blurable = true;\n    }, 10);\n  });\n  function genUniqueColumnValues() {\n    if (editorParams.values === true) {\n      uniqueColumnValues = getUniqueColumnValues();\n    } else if (typeof editorParams.values === \"string\") {\n      uniqueColumnValues = getUniqueColumnValues(editorParams.values);\n    }\n  }\n  function getUniqueColumnValues(field) {\n    var output = {},\n      data = self.table.getData(),\n      column;\n    if (field) {\n      column = self.table.columnManager.getColumnByField(field);\n    } else {\n      column = cell.getColumn()._getSelf();\n    }\n    if (column) {\n      data.forEach(function (row) {\n        var val = column.getFieldValue(row);\n        if (val !== null && typeof val !== \"undefined\" && val !== \"\") {\n          output[val] = true;\n        }\n      });\n      if (editorParams.sortValuesList) {\n        if (editorParams.sortValuesList == \"asc\") {\n          output = Object.keys(output).sort();\n        } else {\n          output = Object.keys(output).sort().reverse();\n        }\n      } else {\n        output = Object.keys(output);\n      }\n    } else {\n      console.warn(\"unable to find matching column to create autocomplete lookup list:\", field);\n    }\n    return output;\n  }\n  function filterList(term, intialLoad) {\n    var matches = [],\n      values,\n      items;\n\n    //lookup base values list\n    if (uniqueColumnValues) {\n      values = uniqueColumnValues;\n    } else {\n      values = editorParams.values || [];\n    }\n    if (editorParams.searchFunc) {\n      matches = editorParams.searchFunc(term, values);\n      if (matches instanceof Promise) {\n        addNotice(typeof editorParams.searchingPlaceholder !== \"undefined\" ? editorParams.searchingPlaceholder : \"Searching...\");\n        matches.then(result => {\n          fillListIfNotEmpty(parseItems(result), intialLoad);\n        }).catch(err => {\n          console.err(\"error in autocomplete search promise:\", err);\n        });\n      } else {\n        fillListIfNotEmpty(parseItems(matches), intialLoad);\n      }\n    } else {\n      items = parseItems(values);\n      if (term === \"\") {\n        if (editorParams.showListOnEmpty) {\n          matches = items;\n        }\n      } else {\n        items.forEach(function (item) {\n          if (item.value !== null || typeof item.value !== \"undefined\") {\n            if (String(item.value).toLowerCase().indexOf(String(term).toLowerCase()) > -1 || String(item.title).toLowerCase().indexOf(String(term).toLowerCase()) > -1) {\n              matches.push(item);\n            }\n          }\n        });\n      }\n      fillListIfNotEmpty(matches, intialLoad);\n    }\n  }\n  function addNotice(notice) {\n    var searchEl = document.createElement(\"div\");\n    clearList();\n    if (notice !== false) {\n      searchEl.classList.add(\"tabulator-edit-select-list-notice\");\n      searchEl.tabIndex = 0;\n      if (notice instanceof Node) {\n        searchEl.appendChild(notice);\n      } else {\n        searchEl.innerHTML = notice;\n      }\n      listEl.appendChild(searchEl);\n    }\n  }\n  function parseItems(inputValues) {\n    var itemList = [];\n    if (Array.isArray(inputValues)) {\n      inputValues.forEach(function (value) {\n        var item = {};\n        if (typeof value === \"object\") {\n          item.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value.value, value.label) : value.label;\n          item.value = value.value;\n        } else {\n          item.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value, value) : value;\n          item.value = value;\n        }\n        itemList.push(item);\n      });\n    } else {\n      for (var key in inputValues) {\n        var item = {\n          title: editorParams.listItemFormatter ? editorParams.listItemFormatter(key, inputValues[key]) : inputValues[key],\n          value: key\n        };\n        itemList.push(item);\n      }\n    }\n    return itemList;\n  }\n  function clearList() {\n    while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n  }\n  function fillListIfNotEmpty(items, intialLoad) {\n    if (items.length) {\n      fillList(items, intialLoad);\n    } else {\n      if (editorParams.emptyPlaceholder) {\n        addNotice(editorParams.emptyPlaceholder);\n      }\n    }\n  }\n  function fillList(items, intialLoad) {\n    var current = false;\n    clearList();\n    displayItems = items;\n    displayItems.forEach(function (item) {\n      var el = item.element;\n      if (!el) {\n        el = document.createElement(\"div\");\n        el.classList.add(\"tabulator-edit-select-list-item\");\n        el.tabIndex = 0;\n        el.innerHTML = item.title;\n        el.addEventListener(\"click\", function (e) {\n          setCurrentItem(item);\n          chooseItem();\n        });\n        el.addEventListener(\"mousedown\", function (e) {\n          blurable = false;\n          setTimeout(function () {\n            blurable = true;\n          }, 10);\n        });\n        item.element = el;\n        if (intialLoad && item.value == initialValue) {\n          input.value = item.title;\n          item.element.classList.add(\"active\");\n          current = true;\n        }\n        if (item === currentItem) {\n          item.element.classList.add(\"active\");\n          current = true;\n        }\n      }\n      listEl.appendChild(el);\n    });\n    if (!current) {\n      setCurrentItem(false);\n    }\n  }\n  function chooseItem() {\n    hideList();\n    if (currentItem) {\n      if (initialValue !== currentItem.value) {\n        initialValue = currentItem.value;\n        input.value = currentItem.title;\n        success(currentItem.value);\n      } else {\n        cancel();\n      }\n    } else {\n      if (editorParams.freetext) {\n        initialValue = input.value;\n        success(input.value);\n      } else {\n        if (editorParams.allowEmpty && input.value === \"\") {\n          initialValue = input.value;\n          success(input.value);\n        } else {\n          cancel();\n        }\n      }\n    }\n  }\n  function showList() {\n    if (!listEl.parentNode) {\n      while (listEl.firstChild) listEl.removeChild(listEl.firstChild);\n      var offset = Helpers.elOffset(cellEl);\n      listEl.style.minWidth = cellEl.offsetWidth + \"px\";\n      listEl.style.top = offset.top + cellEl.offsetHeight + \"px\";\n      listEl.style.left = offset.left + \"px\";\n      document.body.appendChild(listEl);\n    }\n  }\n  function setCurrentItem(item, showInputValue) {\n    if (currentItem && currentItem.element) {\n      currentItem.element.classList.remove(\"active\");\n    }\n    currentItem = item;\n    if (item && item.element) {\n      item.element.classList.add(\"active\");\n    }\n    if (item && item.element && item.element.scrollIntoView) {\n      item.element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  }\n  function hideList() {\n    if (listEl.parentNode) {\n      listEl.parentNode.removeChild(listEl);\n    }\n    removeScrollListener();\n  }\n  function cancelItem() {\n    hideList();\n    cancel();\n  }\n  function removeScrollListener() {\n    self.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\n  }\n\n  //allow key based navigation\n  input.addEventListener(\"keydown\", function (e) {\n    var index;\n    switch (e.keyCode) {\n      case 38:\n        //up arrow\n        index = displayItems.indexOf(currentItem);\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n          if (index > 0) {\n            setCurrentItem(displayItems[index - 1]);\n          } else {\n            setCurrentItem(false);\n          }\n        }\n        break;\n      case 40:\n        //down arrow\n\n        index = displayItems.indexOf(currentItem);\n        if (vertNav == \"editor\" || vertNav == \"hybrid\" && index < displayItems.length - 1) {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          e.preventDefault();\n          if (index < displayItems.length - 1) {\n            if (index == -1) {\n              setCurrentItem(displayItems[0]);\n            } else {\n              setCurrentItem(displayItems[index + 1]);\n            }\n          }\n        }\n        break;\n      case 37: //left arrow\n      case 39:\n        //right arrow\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        // e.preventDefault();\n        break;\n      case 13:\n        //enter\n        chooseItem();\n        break;\n      case 27:\n        //escape\n        cancelItem();\n        break;\n      case 36: //home\n      case 35:\n        //end\n        //prevent table navigation while using input element\n        e.stopImmediatePropagation();\n        break;\n    }\n  });\n  input.addEventListener(\"keyup\", function (e) {\n    switch (e.keyCode) {\n      case 38: //up arrow\n      case 37: //left arrow\n      case 39: //up arrow\n      case 40: //right arrow\n      case 13: //enter\n      case 27:\n        //escape\n        break;\n      default:\n        filterList(input.value);\n    }\n  });\n  input.addEventListener(\"search\", function (e) {\n    filterList(input.value);\n  });\n  input.addEventListener(\"blur\", function (e) {\n    if (blurable) {\n      chooseItem();\n    }\n  });\n  input.addEventListener(\"focus\", function (e) {\n    var value = initialDisplayValue;\n    genUniqueColumnValues();\n    showList();\n    input.value = value;\n    filterList(value, true);\n  });\n  onRendered(function () {\n    input.style.height = \"100%\";\n    input.focus({\n      preventScroll: true\n    });\n  });\n  if (editorParams.mask) {\n    maskInput(input, editorParams);\n  }\n  setTimeout(() => {\n    this.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\n  }, 10);\n  genUniqueColumnValues();\n  input.value = initialDisplayValue;\n  filterList(initialDisplayValue, true);\n  return input;\n}\n\n//star rating\nfunction star(cell, onRendered, success, cancel, editorParams) {\n  var self = this,\n    element = cell.getElement(),\n    value = cell.getValue(),\n    maxStars = element.getElementsByTagName(\"svg\").length || 5,\n    size = element.getElementsByTagName(\"svg\")[0] ? element.getElementsByTagName(\"svg\")[0].getAttribute(\"width\") : 14,\n    stars = [],\n    starsHolder = document.createElement(\"div\"),\n    star = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\n\n  //change star type\n  function starChange(val) {\n    stars.forEach(function (star, i) {\n      if (i < val) {\n        if (self.table.browser == \"ie\") {\n          star.setAttribute(\"class\", \"tabulator-star-active\");\n        } else {\n          star.classList.replace(\"tabulator-star-inactive\", \"tabulator-star-active\");\n        }\n        star.innerHTML = '<polygon fill=\"#488CE9\" stroke=\"#014AAE\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n      } else {\n        if (self.table.browser == \"ie\") {\n          star.setAttribute(\"class\", \"tabulator-star-inactive\");\n        } else {\n          star.classList.replace(\"tabulator-star-active\", \"tabulator-star-inactive\");\n        }\n        star.innerHTML = '<polygon fill=\"#010155\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n      }\n    });\n  }\n\n  //build stars\n  function buildStar(i) {\n    var starHolder = document.createElement(\"span\");\n    var nextStar = star.cloneNode(true);\n    stars.push(nextStar);\n    starHolder.addEventListener(\"mouseenter\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      starChange(i);\n    });\n    starHolder.addEventListener(\"mousemove\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    });\n    starHolder.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      success(i);\n      element.blur();\n    });\n    starHolder.appendChild(nextStar);\n    starsHolder.appendChild(starHolder);\n  }\n\n  //handle keyboard navigation value change\n  function changeValue(val) {\n    value = val;\n    starChange(val);\n  }\n\n  //style cell\n  element.style.whiteSpace = \"nowrap\";\n  element.style.overflow = \"hidden\";\n  element.style.textOverflow = \"ellipsis\";\n\n  //style holding element\n  starsHolder.style.verticalAlign = \"middle\";\n  starsHolder.style.display = \"inline-block\";\n  starsHolder.style.padding = \"4px\";\n\n  //style star\n  star.setAttribute(\"width\", size);\n  star.setAttribute(\"height\", size);\n  star.setAttribute(\"viewBox\", \"0 0 512 512\");\n  star.setAttribute(\"xml:space\", \"preserve\");\n  star.style.padding = \"0 1px\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        starsHolder.setAttribute(key, starsHolder.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        starsHolder.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  //create correct number of stars\n  for (var i = 1; i <= maxStars; i++) {\n    buildStar(i);\n  }\n\n  //ensure value does not exceed number of stars\n  value = Math.min(parseInt(value), maxStars);\n\n  // set initial styling of stars\n  starChange(value);\n  starsHolder.addEventListener(\"mousemove\", function (e) {\n    starChange(0);\n  });\n  starsHolder.addEventListener(\"click\", function (e) {\n    success(0);\n  });\n  element.addEventListener(\"blur\", function (e) {\n    cancel();\n  });\n\n  //allow key based navigation\n  element.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 39:\n        //right arrow\n        changeValue(value + 1);\n        break;\n      case 37:\n        //left arrow\n        changeValue(value - 1);\n        break;\n      case 13:\n        //enter\n        success(value);\n        break;\n      case 27:\n        //escape\n        cancel();\n        break;\n    }\n  });\n  return starsHolder;\n}\n\n//draggable progress bar\nfunction progress(cell, onRendered, success, cancel, editorParams) {\n  var element = cell.getElement(),\n    max = typeof editorParams.max === \"undefined\" ? element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"max\") || 100 : editorParams.max,\n    min = typeof editorParams.min === \"undefined\" ? element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"min\") || 0 : editorParams.min,\n    percent = (max - min) / 100,\n    value = cell.getValue() || 0,\n    handle = document.createElement(\"div\"),\n    bar = document.createElement(\"div\"),\n    mouseDrag,\n    mouseDragWidth;\n\n  //set new value\n  function updateValue() {\n    var style = window.getComputedStyle(element, null);\n    var calcVal = percent * Math.round(bar.offsetWidth / ((element.clientWidth - parseInt(style.getPropertyValue(\"padding-left\")) - parseInt(style.getPropertyValue(\"padding-right\"))) / 100)) + min;\n    success(calcVal);\n    element.setAttribute(\"aria-valuenow\", calcVal);\n    element.setAttribute(\"aria-label\", value);\n  }\n\n  //style handle\n  handle.style.position = \"absolute\";\n  handle.style.right = \"0\";\n  handle.style.top = \"0\";\n  handle.style.bottom = \"0\";\n  handle.style.width = \"5px\";\n  handle.classList.add(\"tabulator-progress-handle\");\n\n  //style bar\n  bar.style.display = \"inline-block\";\n  bar.style.position = \"relative\";\n  // bar.style.top = \"8px\";\n  // bar.style.bottom = \"8px\";\n  // bar.style.left = \"4px\";\n  // bar.style.marginRight = \"4px\";\n  bar.style.height = \"100%\";\n  bar.style.backgroundColor = \"#488CE9\";\n  bar.style.maxWidth = \"100%\";\n  bar.style.minWidth = \"0%\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        bar.setAttribute(key, bar.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        bar.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n\n  //style cell\n  element.style.padding = \"4px 4px\";\n\n  //make sure value is in range\n  value = Math.min(parseFloat(value), max);\n  value = Math.max(parseFloat(value), min);\n\n  //workout percentage\n  value = Math.round((value - min) / percent);\n  // bar.style.right = value + \"%\";\n  bar.style.width = value + \"%\";\n  element.setAttribute(\"aria-valuemin\", min);\n  element.setAttribute(\"aria-valuemax\", max);\n  bar.appendChild(handle);\n  handle.addEventListener(\"mousedown\", function (e) {\n    mouseDrag = e.screenX;\n    mouseDragWidth = bar.offsetWidth;\n  });\n  handle.addEventListener(\"mouseover\", function () {\n    handle.style.cursor = \"ew-resize\";\n  });\n  element.addEventListener(\"mousemove\", function (e) {\n    if (mouseDrag) {\n      bar.style.width = mouseDragWidth + e.screenX - mouseDrag + \"px\";\n    }\n  });\n  element.addEventListener(\"mouseup\", function (e) {\n    if (mouseDrag) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      mouseDrag = false;\n      mouseDragWidth = false;\n      updateValue();\n    }\n  });\n\n  //allow key based navigation\n  element.addEventListener(\"keydown\", function (e) {\n    switch (e.keyCode) {\n      case 39:\n        //right arrow\n        e.preventDefault();\n        bar.style.width = bar.clientWidth + element.clientWidth / 100 + \"px\";\n        break;\n      case 37:\n        //left arrow\n        e.preventDefault();\n        bar.style.width = bar.clientWidth - element.clientWidth / 100 + \"px\";\n        break;\n      case 9: //tab\n      case 13:\n        //enter\n        updateValue();\n        break;\n      case 27:\n        //escape\n        cancel();\n        break;\n    }\n  });\n  element.addEventListener(\"blur\", function () {\n    cancel();\n  });\n  return bar;\n}\n\n//checkbox\nfunction tickCross(cell, onRendered, success, cancel, editorParams) {\n  var value = cell.getValue(),\n    input = document.createElement(\"input\"),\n    tristate = editorParams.tristate,\n    indetermValue = typeof editorParams.indeterminateValue === \"undefined\" ? null : editorParams.indeterminateValue,\n    indetermState = false;\n  input.setAttribute(\"type\", \"checkbox\");\n  input.style.marginTop = \"5px\";\n  input.style.boxSizing = \"border-box\";\n  if (editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\") {\n    for (let key in editorParams.elementAttributes) {\n      if (key.charAt(0) == \"+\") {\n        key = key.slice(1);\n        input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\n      } else {\n        input.setAttribute(key, editorParams.elementAttributes[key]);\n      }\n    }\n  }\n  input.value = value;\n  if (tristate && (typeof value === \"undefined\" || value === indetermValue || value === \"\")) {\n    indetermState = true;\n    input.indeterminate = true;\n  }\n  if (this.table.browser != \"firefox\") {\n    //prevent blur issue on mac firefox\n    onRendered(function () {\n      input.focus({\n        preventScroll: true\n      });\n    });\n  }\n  input.checked = value === true || value === \"true\" || value === \"True\" || value === 1;\n  onRendered(function () {\n    input.focus();\n  });\n  function setValue(blur) {\n    if (tristate) {\n      if (!blur) {\n        if (input.checked && !indetermState) {\n          input.checked = false;\n          input.indeterminate = true;\n          indetermState = true;\n          return indetermValue;\n        } else {\n          indetermState = false;\n          return input.checked;\n        }\n      } else {\n        if (indetermState) {\n          return indetermValue;\n        } else {\n          return input.checked;\n        }\n      }\n    } else {\n      return input.checked;\n    }\n  }\n\n  //submit new value on blur\n  input.addEventListener(\"change\", function (e) {\n    success(setValue());\n  });\n  input.addEventListener(\"blur\", function (e) {\n    success(setValue(true));\n  });\n\n  //submit new value on enter\n  input.addEventListener(\"keydown\", function (e) {\n    if (e.keyCode == 13) {\n      success(setValue());\n    }\n    if (e.keyCode == 27) {\n      cancel();\n    }\n  });\n  return input;\n}\nvar defaultEditors = {\n  input: input,\n  textarea: textarea,\n  number: number,\n  range: range,\n  select: select,\n  autocomplete: autocomplete,\n  star: star,\n  progress: progress,\n  tickCross: tickCross\n};\nclass Edit extends Module {\n  constructor(table) {\n    super(table);\n    this.currentCell = false; //hold currently editing cell\n    this.mouseClick = false; //hold mousedown state to prevent click binding being overriden by editor opening\n    this.recursionBlock = false; //prevent focus recursion\n    this.invalidEdit = false;\n    this.editedCells = [];\n    this.editors = Edit.editors;\n    this.registerColumnOption(\"editable\");\n    this.registerColumnOption(\"editor\");\n    this.registerColumnOption(\"editorParams\");\n    this.registerColumnOption(\"cellEditing\");\n    this.registerColumnOption(\"cellEdited\");\n    this.registerColumnOption(\"cellEditCancelled\");\n    this.registerTableFunction(\"getEditedCells\", this.getEditedCells.bind(this));\n    this.registerTableFunction(\"clearCellEdited\", this.clearCellEdited.bind(this));\n    this.registerTableFunction(\"navigatePrev\", this.navigatePrev.bind(this));\n    this.registerTableFunction(\"navigateNext\", this.navigateNext.bind(this));\n    this.registerTableFunction(\"navigateLeft\", this.navigateLeft.bind(this));\n    this.registerTableFunction(\"navigateRight\", this.navigateRight.bind(this));\n    this.registerTableFunction(\"navigateUp\", this.navigateUp.bind(this));\n    this.registerTableFunction(\"navigateDown\", this.navigateDown.bind(this));\n    this.registerComponentFunction(\"cell\", \"isEdited\", this.cellisEdited.bind(this));\n    this.registerComponentFunction(\"cell\", \"clearEdited\", this.clearEdited.bind(this));\n    this.registerComponentFunction(\"cell\", \"edit\", this.editCell.bind(this));\n    this.registerComponentFunction(\"cell\", \"cancelEdit\", this.cellCancelEdit.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigatePrev\", this.navigatePrev.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateNext\", this.navigateNext.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateLeft\", this.navigateLeft.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateRight\", this.navigateRight.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateUp\", this.navigateUp.bind(this));\n    this.registerComponentFunction(\"cell\", \"navigateDown\", this.navigateDown.bind(this));\n  }\n  initialize() {\n    this.subscribe(\"cell-init\", this.bindEditor.bind(this));\n    this.subscribe(\"cell-delete\", this.clearEdited.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\n    this.subscribe(\"column-delete\", this.columnDeleteCheck.bind(this));\n    this.subscribe(\"row-deleting\", this.rowDeleteCheck.bind(this));\n    this.subscribe(\"data-refeshing\", this.cancelEdit.bind(this));\n    this.subscribe(\"keybinding-nav-prev\", this.navigatePrev.bind(this));\n    this.subscribe(\"keybinding-nav-next\", this.keybindingNavigateNext.bind(this));\n    this.subscribe(\"keybinding-nav-left\", this.navigateLeft.bind(this));\n    this.subscribe(\"keybinding-nav-right\", this.navigateRight.bind(this));\n    this.subscribe(\"keybinding-nav-up\", this.navigateUp.bind(this));\n    this.subscribe(\"keybinding-nav-down\", this.navigateDown.bind(this));\n  }\n\n  ///////////////////////////////////\n  ////// Keybinding Functions ///////\n  ///////////////////////////////////\n\n  keybindingNavigateNext(e) {\n    var cell = this.currentCell,\n      newRow = this.options(\"tabEndNewRow\");\n    if (cell) {\n      if (!this.navigateNext(e)) {\n        if (newRow) {\n          cell.getElement().firstChild.blur();\n          if (newRow === true) {\n            newRow = this.table.addRow({});\n          } else {\n            if (typeof newRow == \"function\") {\n              newRow = this.table.addRow(newRow(cell.row.getComponent()));\n            } else {\n              newRow = this.table.addRow(Object.assign({}, newRow));\n            }\n          }\n          newRow.then(() => {\n            setTimeout(() => {\n              nav.next();\n            });\n          });\n        }\n      }\n    }\n  }\n\n  ///////////////////////////////////\n  ///////// Cell Functions //////////\n  ///////////////////////////////////\n\n  cellisEdited(cell) {\n    return !!cell.modules.edit && cell.modules.edit.edited;\n  }\n  cellCancelEdit(cell) {\n    if (cell === this.currentCell) {\n      this.table.modules.edit.cancelEdit();\n    } else {\n      console.warn(\"Cancel Editor Error - This cell is not currently being edited \");\n    }\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n  clearCellEdited(cells) {\n    if (!cells) {\n      cells = this.modules.edit.getEditedCells();\n    }\n    if (!Array.isArray(cells)) {\n      cells = [cells];\n    }\n    cells.forEach(cell => {\n      this.modules.edit.clearEdited(cell._getSelf());\n    });\n  }\n  navigatePrev(e) {\n    var cell = this.currentCell,\n      nextCell,\n      prevRow;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      nextCell = this.navigateLeft();\n      if (nextCell) {\n        return true;\n      } else {\n        prevRow = this.table.rowManager.prevDisplayRow(cell.row, true);\n        if (prevRow) {\n          nextCell = this.findNextEditableCell(prevRow, prevRow.cells.length);\n          if (nextCell) {\n            nextCell.getComponent().edit();\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  navigateNext(e) {\n    var cell = this.currentCell,\n      nextCell,\n      nextRow;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      nextCell = this.navigateRight();\n      if (nextCell) {\n        return true;\n      } else {\n        nextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\n        if (nextRow) {\n          nextCell = this.findNextEditableCell(nextRow, -1);\n          if (nextCell) {\n            nextCell.getComponent().edit();\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  navigateLeft(e) {\n    var cell = this.currentCell,\n      index,\n      nextCell;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      index = cell.getIndex();\n      nextCell = this.findPrevEditableCell(cell.row, index);\n      if (nextCell) {\n        nextCell.getComponent().edit();\n        return true;\n      }\n    }\n    return false;\n  }\n  navigateRight(e) {\n    var cell = this.currentCell,\n      index,\n      nextCell;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      index = cell.getIndex();\n      nextCell = this.findNextEditableCell(cell.row, index);\n      if (nextCell) {\n        nextCell.getComponent().edit();\n        return true;\n      }\n    }\n    return false;\n  }\n  navigateUp(e) {\n    var cell = this.currentCell,\n      index,\n      nextRow;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      index = cell.getIndex();\n      nextRow = this.table.rowManager.prevDisplayRow(cell.row, true);\n      if (nextRow) {\n        nextRow.cells[index].getComponent().edit();\n        return true;\n      }\n    }\n    return false;\n  }\n  navigateDown(e) {\n    var cell = this.currentCell,\n      index,\n      nextRow;\n    if (cell) {\n      if (e) {\n        e.preventDefault();\n      }\n      index = cell.getIndex();\n      nextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\n      if (nextRow) {\n        nextRow.cells[index].getComponent().edit();\n        return true;\n      }\n    }\n    return false;\n  }\n  findNextEditableCell(row, index) {\n    var nextCell = false;\n    if (index < row.cells.length - 1) {\n      for (var i = index + 1; i < row.cells.length; i++) {\n        let cell = row.cells[i];\n        if (cell.column.modules.edit && Helpers.elVisible(cell.getElement())) {\n          let allowEdit = true;\n          if (typeof cell.column.modules.edit.check == \"function\") {\n            allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          }\n          if (allowEdit) {\n            nextCell = cell;\n            break;\n          }\n        }\n      }\n    }\n    return nextCell;\n  }\n  findPrevEditableCell(row, index) {\n    var prevCell = false;\n    if (index > 0) {\n      for (var i = index - 1; i >= 0; i--) {\n        let cell = row.cells[i],\n          allowEdit = true;\n        if (cell.column.modules.edit && Helpers.elVisible(cell.getElement())) {\n          if (typeof cell.column.modules.edit.check == \"function\") {\n            allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          }\n          if (allowEdit) {\n            prevCell = cell;\n            break;\n          }\n        }\n      }\n    }\n    return prevCell;\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  initializeColumnCheck(column) {\n    if (typeof column.definition.editor !== \"undefined\") {\n      this.initializeColumn(column);\n    }\n  }\n  columnDeleteCheck(column) {\n    if (this.currentCell && this.currentCell.column === column) {\n      this.cancelEdit();\n    }\n  }\n  rowDeleteCheck(row) {\n    if (this.currentCell && this.currentCell.row === row) {\n      this.cancelEdit();\n    }\n  }\n\n  //initialize column editor\n  initializeColumn(column) {\n    var config = {\n      editor: false,\n      blocked: false,\n      check: column.definition.editable,\n      params: column.definition.editorParams || {}\n    };\n\n    //set column editor\n    switch (typeof column.definition.editor) {\n      case \"string\":\n        if (this.editors[column.definition.editor]) {\n          config.editor = this.editors[column.definition.editor];\n        } else {\n          console.warn(\"Editor Error - No such editor found: \", column.definition.editor);\n        }\n        break;\n      case \"function\":\n        config.editor = column.definition.editor;\n        break;\n      case \"boolean\":\n        if (column.definition.editor === true) {\n          if (typeof column.definition.formatter !== \"function\") {\n            if (this.editors[column.definition.formatter]) {\n              config.editor = this.editors[column.definition.formatter];\n            } else {\n              config.editor = this.editors[\"input\"];\n            }\n          } else {\n            console.warn(\"Editor Error - Cannot auto lookup editor for a custom formatter: \", column.definition.formatter);\n          }\n        }\n        break;\n    }\n    if (config.editor) {\n      column.modules.edit = config;\n    }\n  }\n  getCurrentCell() {\n    return this.currentCell ? this.currentCell.getComponent() : false;\n  }\n  clearEditor(cancel) {\n    var cell = this.currentCell,\n      cellEl;\n    this.invalidEdit = false;\n    console.log(\"clear\", cancel, cell, cell.validate);\n    if (cell) {\n      this.currentCell = false;\n      cellEl = cell.getElement();\n      if (cancel) {\n        if (cell.column.modules.validate && this.table.modExists(\"validate\")) {\n          this.table.modules.validate.cellValidate(cell);\n        }\n      } else {\n        cellEl.classList.remove(\"tabulator-validation-fail\");\n      }\n      cellEl.classList.remove(\"tabulator-editing\");\n      while (cellEl.firstChild) cellEl.removeChild(cellEl.firstChild);\n      cell.row.getElement().classList.remove(\"tabulator-row-editing\");\n    }\n  }\n  cancelEdit() {\n    if (this.currentCell) {\n      var cell = this.currentCell;\n      var component = this.currentCell.getComponent();\n      this.clearEditor(true);\n      cell.setValueActual(cell.getValue());\n      cell.cellRendered();\n      if (cell.column.definition.editor == \"textarea\" || cell.column.definition.variableHeight) {\n        cell.row.normalizeHeight(true);\n      }\n      if (cell.column.definition.cellEditCancelled) {\n        cell.column.definition.cellEditCancelled.call(this.table, component);\n      }\n      this.dispatch(\"edit-cancelled\", cell);\n      this.dispatchExternal(\"cellEditCancelled\", component);\n    }\n  }\n\n  //return a formatted value for a cell\n  bindEditor(cell) {\n    if (cell.column.modules.edit) {\n      var self = this,\n        element = cell.getElement(true);\n      element.setAttribute(\"tabindex\", 0);\n      element.addEventListener(\"click\", function (e) {\n        if (!element.classList.contains(\"tabulator-editing\")) {\n          element.focus({\n            preventScroll: true\n          });\n        }\n      });\n      element.addEventListener(\"mousedown\", function (e) {\n        if (e.button === 2) {\n          e.preventDefault();\n        } else {\n          self.mouseClick = true;\n        }\n      });\n      element.addEventListener(\"focus\", function (e) {\n        if (!self.recursionBlock) {\n          self.edit(cell, e, false);\n        }\n      });\n    }\n  }\n  focusCellNoEvent(cell, block) {\n    this.recursionBlock = true;\n    if (!(block && this.table.browser === \"ie\")) {\n      cell.getElement().focus({\n        preventScroll: true\n      });\n    }\n    this.recursionBlock = false;\n  }\n  editCell(cell, forceEdit) {\n    this.focusCellNoEvent(cell);\n    this.edit(cell, false, forceEdit);\n  }\n  focusScrollAdjust(cell) {\n    if (this.table.rowManager.getRenderMode() == \"virtual\") {\n      var topEdge = this.table.rowManager.element.scrollTop,\n        bottomEdge = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,\n        rowEl = cell.row.getElement(),\n        offset = rowEl.offsetTop;\n      if (rowEl.offsetTop < topEdge) {\n        this.table.rowManager.element.scrollTop -= topEdge - rowEl.offsetTop;\n      } else {\n        if (rowEl.offsetTop + rowEl.offsetHeight > bottomEdge) {\n          this.table.rowManager.element.scrollTop += rowEl.offsetTop + rowEl.offsetHeight - bottomEdge;\n        }\n      }\n      var leftEdge = this.table.rowManager.element.scrollLeft,\n        rightEdge = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,\n        cellEl = cell.getElement(),\n        offset = cellEl.offsetLeft;\n      if (this.table.modExists(\"frozenColumns\")) {\n        leftEdge += parseInt(this.table.modules.frozenColumns.leftMargin);\n        rightEdge -= parseInt(this.table.modules.frozenColumns.rightMargin);\n      }\n      if (this.table.options.renderHorizontal === \"virtual\") {\n        leftEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\n        rightEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\n      }\n      if (cellEl.offsetLeft < leftEdge) {\n        this.table.rowManager.element.scrollLeft -= leftEdge - cellEl.offsetLeft;\n      } else {\n        if (cellEl.offsetLeft + cellEl.offsetWidth > rightEdge) {\n          this.table.rowManager.element.scrollLeft += cellEl.offsetLeft + cellEl.offsetWidth - rightEdge;\n        }\n      }\n    }\n  }\n  edit(cell, e, forceEdit) {\n    var self = this,\n      allowEdit = true,\n      rendered = function () {},\n      element = cell.getElement(),\n      cellEditor,\n      component,\n      params;\n\n    //prevent editing if another cell is refusing to leave focus (eg. validation fail)\n    if (this.currentCell) {\n      if (!this.invalidEdit) {\n        this.cancelEdit();\n      }\n      return;\n    }\n\n    //handle successfull value change\n    function success(value) {\n      if (self.currentCell === cell) {\n        var valid = true;\n        if (cell.column.modules.validate && self.table.modExists(\"validate\") && self.table.options.validationMode != \"manual\") {\n          valid = self.table.modules.validate.validate(cell.column.modules.validate, cell, value);\n        }\n        if (valid === true || self.table.options.validationMode === \"highlight\") {\n          self.clearEditor();\n          if (!cell.modules.edit) {\n            cell.modules.edit = {};\n          }\n          cell.modules.edit.edited = true;\n          if (self.editedCells.indexOf(cell) == -1) {\n            self.editedCells.push(cell);\n          }\n          cell.setValue(value, true);\n          if (valid !== true) {\n            element.classList.add(\"tabulator-validation-fail\");\n            self.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\n            return false;\n          }\n          return true;\n        } else {\n          self.invalidEdit = true;\n          element.classList.add(\"tabulator-validation-fail\");\n          self.focusCellNoEvent(cell, true);\n          rendered();\n          self.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\n          return false;\n        }\n      }\n    }\n\n    //handle aborted edit\n    function cancel() {\n      if (self.currentCell === cell) {\n        self.cancelEdit();\n      }\n    }\n    function onRendered(callback) {\n      rendered = callback;\n    }\n    if (!cell.column.modules.edit.blocked) {\n      if (e) {\n        e.stopPropagation();\n      }\n      switch (typeof cell.column.modules.edit.check) {\n        case \"function\":\n          allowEdit = cell.column.modules.edit.check(cell.getComponent());\n          break;\n        case \"boolean\":\n          allowEdit = cell.column.modules.edit.check;\n          break;\n      }\n      if (allowEdit || forceEdit) {\n        self.cancelEdit();\n        self.currentCell = cell;\n        this.focusScrollAdjust(cell);\n        component = cell.getComponent();\n        if (this.mouseClick) {\n          this.mouseClick = false;\n          if (cell.column.definition.cellClick) {\n            cell.column.definition.cellClick.call(this.table, e, component);\n          }\n        }\n        if (cell.column.definition.cellEditing) {\n          cell.column.definition.cellEditing.call(this.table, component);\n        }\n        this.dispatchExternal(\"cellEditing\", component);\n        params = typeof cell.column.modules.edit.params === \"function\" ? cell.column.modules.edit.params(component) : cell.column.modules.edit.params;\n        cellEditor = cell.column.modules.edit.editor.call(self, component, onRendered, success, cancel, params);\n\n        //if editor returned, add to DOM, if false, abort edit\n        if (cellEditor !== false) {\n          if (cellEditor instanceof Node) {\n            element.classList.add(\"tabulator-editing\");\n            cell.row.getElement().classList.add(\"tabulator-row-editing\");\n            while (element.firstChild) element.removeChild(element.firstChild);\n            element.appendChild(cellEditor);\n\n            //trigger onRendered Callback\n            rendered();\n\n            //prevent editing from triggering rowClick event\n            var children = element.children;\n            for (var i = 0; i < children.length; i++) {\n              children[i].addEventListener(\"click\", function (e) {\n                e.stopPropagation();\n              });\n            }\n          } else {\n            console.warn(\"Edit Error - Editor should return an instance of Node, the editor returned:\", cellEditor);\n            element.blur();\n            return false;\n          }\n        } else {\n          element.blur();\n          return false;\n        }\n        return true;\n      } else {\n        this.mouseClick = false;\n        element.blur();\n        return false;\n      }\n    } else {\n      this.mouseClick = false;\n      element.blur();\n      return false;\n    }\n  }\n  getEditedCells() {\n    var output = [];\n    this.editedCells.forEach(cell => {\n      output.push(cell.getComponent());\n    });\n    return output;\n  }\n  clearEdited(cell) {\n    var editIndex;\n    if (cell.modules.edit && cell.modules.edit.edited) {\n      cell.modules.edit.edited = false;\n      if (cell.modules.validate) {\n        cell.modules.validate.invalid = false;\n      }\n    }\n    editIndex = this.editedCells.indexOf(cell);\n    if (editIndex > -1) {\n      this.editedCells.splice(editIndex, 1);\n    }\n  }\n}\nEdit.moduleName = \"edit\";\n\n//load defaults\nEdit.editors = defaultEditors;\nclass ExportRow {\n  constructor(type, columns, component, indent) {\n    this.type = type;\n    this.columns = columns;\n    this.component = component || false;\n    this.indent = indent || 0;\n  }\n}\nclass ExportColumn {\n  constructor(value, component, width, height, depth) {\n    this.value = value;\n    this.component = component || false;\n    this.width = width;\n    this.height = height;\n    this.depth = depth;\n  }\n}\nclass Export extends Module {\n  constructor(table) {\n    super(table);\n    this.config = {};\n    this.cloneTableStyle = true;\n    this.colVisProp = \"\";\n    this.registerTableOption(\"htmlOutputConfig\", false); //html outypu config\n\n    this.registerColumnOption(\"htmlOutput\");\n    this.registerColumnOption(\"titleHtmlOutput\");\n  }\n  initialize() {\n    this.registerTableFunction(\"getHtml\", this.getHtml.bind(this));\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  generateExportList(config, style, range, colVisProp) {\n    this.cloneTableStyle = style;\n    this.config = config || {};\n    this.colVisProp = colVisProp;\n    var headers = this.config.columnHeaders !== false ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [];\n    var body = this.bodyToExportRows(this.rowLookup(range));\n    return headers.concat(body);\n  }\n  genereateTable(config, style, range, colVisProp) {\n    var list = this.generateExportList(config, style, range, colVisProp);\n    return this.genereateTableElement(list);\n  }\n  rowLookup(range) {\n    var rows = [];\n    if (typeof range == \"function\") {\n      range.call(this.table).forEach(row => {\n        row = this.table.rowManager.findRow(row);\n        if (row) {\n          rows.push(row);\n        }\n      });\n    } else {\n      switch (range) {\n        case true:\n        case \"visible\":\n          rows = this.table.rowManager.getVisibleRows(false, true);\n          break;\n        case \"all\":\n          rows = this.table.rowManager.rows;\n          break;\n        case \"selected\":\n          rows = this.table.modules.selectRow.selectedRows;\n          break;\n        case \"active\":\n        default:\n          if (this.table.options.pagination) {\n            rows = this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2);\n          } else {\n            rows = this.table.rowManager.getDisplayRows();\n          }\n      }\n    }\n    return Object.assign([], rows);\n  }\n  generateColumnGroupHeaders() {\n    var output = [];\n    var columns = this.config.columnGroups !== false ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex;\n    columns.forEach(column => {\n      var colData = this.processColumnGroup(column);\n      if (colData) {\n        output.push(colData);\n      }\n    });\n    return output;\n  }\n  processColumnGroup(column) {\n    var subGroups = column.columns,\n      maxDepth = 0,\n      title = column.definition[\"title\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || column.definition.title;\n    var groupData = {\n      title: title,\n      column: column,\n      depth: 1\n    };\n    if (subGroups.length) {\n      groupData.subGroups = [];\n      groupData.width = 0;\n      subGroups.forEach(subGroup => {\n        var subGroupData = this.processColumnGroup(subGroup);\n        if (subGroupData) {\n          groupData.width += subGroupData.width;\n          groupData.subGroups.push(subGroupData);\n          if (subGroupData.depth > maxDepth) {\n            maxDepth = subGroupData.depth;\n          }\n        }\n      });\n      groupData.depth += maxDepth;\n      if (!groupData.width) {\n        return false;\n      }\n    } else {\n      if (this.columnVisCheck(column)) {\n        groupData.width = 1;\n      } else {\n        return false;\n      }\n    }\n    return groupData;\n  }\n  columnVisCheck(column) {\n    return column.definition[this.colVisProp] !== false && (column.visible || !column.visible && column.definition[this.colVisProp]);\n  }\n  headersToExportRows(columns) {\n    var headers = [],\n      headerDepth = 0,\n      exportRows = [];\n    function parseColumnGroup(column, level) {\n      var depth = headerDepth - level;\n      if (typeof headers[level] === \"undefined\") {\n        headers[level] = [];\n      }\n      column.height = column.subGroups ? 1 : depth - column.depth + 1;\n      headers[level].push(column);\n      if (column.height > 1) {\n        for (let i = 1; i < column.height; i++) {\n          if (typeof headers[level + i] === \"undefined\") {\n            headers[level + i] = [];\n          }\n          headers[level + i].push(false);\n        }\n      }\n      if (column.width > 1) {\n        for (let i = 1; i < column.width; i++) {\n          headers[level].push(false);\n        }\n      }\n      if (column.subGroups) {\n        column.subGroups.forEach(function (subGroup) {\n          parseColumnGroup(subGroup, level + 1);\n        });\n      }\n    }\n\n    //calculate maximum header debth\n    columns.forEach(function (column) {\n      if (column.depth > headerDepth) {\n        headerDepth = column.depth;\n      }\n    });\n    columns.forEach(function (column) {\n      parseColumnGroup(column, 0);\n    });\n    headers.forEach(header => {\n      var columns = [];\n      header.forEach(col => {\n        if (col) {\n          columns.push(new ExportColumn(col.title, col.column.getComponent(), col.width, col.height, col.depth));\n        } else {\n          columns.push(null);\n        }\n      });\n      exportRows.push(new ExportRow(\"header\", columns));\n    });\n    return exportRows;\n  }\n  bodyToExportRows(rows) {\n    var columns = [];\n    var exportRows = [];\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      if (this.columnVisCheck(column)) {\n        columns.push(column.getComponent());\n      }\n    });\n    if (this.config.columnCalcs !== false && this.table.modExists(\"columnCalcs\")) {\n      if (this.table.modules.columnCalcs.topInitialized) {\n        rows.unshift(this.table.modules.columnCalcs.topRow);\n      }\n      if (this.table.modules.columnCalcs.botInitialized) {\n        rows.push(this.table.modules.columnCalcs.botRow);\n      }\n    }\n    rows = rows.filter(row => {\n      switch (row.type) {\n        case \"group\":\n          return this.config.rowGroups !== false;\n        case \"calc\":\n          return this.config.columnCalcs !== false;\n        case \"row\":\n          return !(this.table.options.dataTree && this.config.dataTree === false && row.modules.dataTree.parent);\n      }\n      return true;\n    });\n    rows.forEach((row, i) => {\n      var rowData = row.getData(this.colVisProp);\n      var exportCols = [];\n      var indent = 0;\n      switch (row.type) {\n        case \"group\":\n          indent = row.level;\n          exportCols.push(new ExportColumn(row.key, row.getComponent(), columns.length, 1));\n          break;\n        case \"calc\":\n        case \"row\":\n          columns.forEach(col => {\n            exportCols.push(new ExportColumn(col._column.getFieldValue(rowData), col, 1, 1));\n          });\n          if (this.table.options.dataTree && this.config.dataTree !== false) {\n            indent = row.modules.dataTree.index;\n          }\n          break;\n      }\n      exportRows.push(new ExportRow(row.type, exportCols, row.getComponent(), indent));\n    });\n    return exportRows;\n  }\n  genereateTableElement(list) {\n    var table = document.createElement(\"table\"),\n      headerEl = document.createElement(\"thead\"),\n      bodyEl = document.createElement(\"tbody\"),\n      styles = this.lookupTableStyles(),\n      rowFormatter = this.table.options[\"rowFormatter\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],\n      setup = {};\n    setup.rowFormatter = rowFormatter !== null ? rowFormatter : this.table.options.rowFormatter;\n    if (this.table.options.dataTree && this.config.dataTree !== false && this.table.modExists(\"columnCalcs\")) {\n      setup.treeElementField = this.table.modules.dataTree.elementField;\n    }\n\n    //assign group header formatter\n    setup.groupHeader = this.table.options[\"groupHeader\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))];\n    if (setup.groupHeader && !Array.isArray(setup.groupHeader)) {\n      setup.groupHeader = [setup.groupHeader];\n    }\n    table.classList.add(\"tabulator-print-table\");\n    this.mapElementStyles(this.table.columnManager.getHeadersElement(), headerEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n    if (list.length > 1000) {\n      console.warn(\"It may take a long time to render an HTML table with more than 1000 rows\");\n    }\n    list.forEach((row, i) => {\n      switch (row.type) {\n        case \"header\":\n          headerEl.appendChild(this.genereateHeaderElement(row, setup, styles));\n          break;\n        case \"group\":\n          bodyEl.appendChild(this.genereateGroupElement(row, setup, styles));\n          break;\n        case \"calc\":\n          bodyEl.appendChild(this.genereateCalcElement(row, setup, styles));\n          break;\n        case \"row\":\n          let rowEl = this.genereateRowElement(row, setup, styles);\n          this.mapElementStyles(i % 2 && styles.evenRow ? styles.evenRow : styles.oddRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n          bodyEl.appendChild(rowEl);\n          break;\n      }\n    });\n    if (headerEl.innerHTML) {\n      table.appendChild(headerEl);\n    }\n    table.appendChild(bodyEl);\n    this.mapElementStyles(this.table.element, table, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\"]);\n    return table;\n  }\n  lookupTableStyles() {\n    var styles = {};\n\n    //lookup row styles\n    if (this.cloneTableStyle && window.getComputedStyle) {\n      styles.oddRow = this.table.element.querySelector(\".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.evenRow = this.table.element.querySelector(\".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.calcRow = this.table.element.querySelector(\".tabulator-row.tabulator-calcs\");\n      styles.firstRow = this.table.element.querySelector(\".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)\");\n      styles.firstGroup = this.table.element.getElementsByClassName(\"tabulator-group\")[0];\n      if (styles.firstRow) {\n        styles.styleCells = styles.firstRow.getElementsByClassName(\"tabulator-cell\");\n        styles.firstCell = styles.styleCells[0];\n        styles.lastCell = styles.styleCells[styles.styleCells.length - 1];\n      }\n    }\n    return styles;\n  }\n  genereateHeaderElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\");\n    row.columns.forEach(column => {\n      if (column) {\n        var cellEl = document.createElement(\"th\");\n        var classNames = column.component._column.definition.cssClass ? column.component._column.definition.cssClass.split(\" \") : [];\n        cellEl.colSpan = column.width;\n        cellEl.rowSpan = column.height;\n        cellEl.innerHTML = column.value;\n        if (this.cloneTableStyle) {\n          cellEl.style.boxSizing = \"border-box\";\n        }\n        classNames.forEach(function (className) {\n          cellEl.classList.add(className);\n        });\n        this.mapElementStyles(column.component.getElement(), cellEl, [\"text-align\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n        this.mapElementStyles(column.component._column.contentElement, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\n        if (column.component._column.visible) {\n          this.mapElementStyles(column.component.getElement(), cellEl, [\"width\"]);\n        } else {\n          if (column.component._column.definition.width) {\n            cellEl.style.width = column.component._column.definition.width + \"px\";\n          }\n        }\n        if (column.component._column.parent) {\n          this.mapElementStyles(column.component._column.parent.groupElement, cellEl, [\"border-top\"]);\n        }\n        rowEl.appendChild(cellEl);\n      }\n    });\n    return rowEl;\n  }\n  genereateGroupElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\"),\n      cellEl = document.createElement(\"td\"),\n      group = row.columns[0];\n    rowEl.classList.add(\"tabulator-print-table-row\");\n    if (setup.groupHeader && setup.groupHeader[row.indent]) {\n      group.value = setup.groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n    } else {\n      if (setup.groupHeader === false) {\n        group.value = group.value;\n      } else {\n        group.value = row.component._group.generator(group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\n      }\n    }\n    cellEl.colSpan = group.width;\n    cellEl.innerHTML = group.value;\n    rowEl.classList.add(\"tabulator-print-table-group\");\n    rowEl.classList.add(\"tabulator-group-level-\" + row.indent);\n    if (group.component.isVisible()) {\n      rowEl.classList.add(\"tabulator-group-visible\");\n    }\n    this.mapElementStyles(styles.firstGroup, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n    this.mapElementStyles(styles.firstGroup, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\n    rowEl.appendChild(cellEl);\n    return rowEl;\n  }\n  genereateCalcElement(row, setup, styles) {\n    var rowEl = this.genereateRowElement(row, setup, styles);\n    rowEl.classList.add(\"tabulator-print-table-calcs\");\n    this.mapElementStyles(styles.calcRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\n    return rowEl;\n  }\n  genereateRowElement(row, setup, styles) {\n    var rowEl = document.createElement(\"tr\");\n    rowEl.classList.add(\"tabulator-print-table-row\");\n    row.columns.forEach(col => {\n      if (col) {\n        var cellEl = document.createElement(\"td\"),\n          column = col.component._column,\n          value = col.value;\n        var cellWrapper = {\n          modules: {},\n          getValue: function () {\n            return value;\n          },\n          getField: function () {\n            return column.definition.field;\n          },\n          getElement: function () {\n            return cellEl;\n          },\n          getColumn: function () {\n            return column.getComponent();\n          },\n          getData: function () {\n            return row.component.getData();\n          },\n          getRow: function () {\n            return row.component;\n          },\n          getComponent: function () {\n            return cellWrapper;\n          },\n          column: column\n        };\n        var classNames = column.definition.cssClass ? column.definition.cssClass.split(\" \") : [];\n        classNames.forEach(function (className) {\n          cellEl.classList.add(className);\n        });\n        if (this.table.modExists(\"format\") && this.config.formatCells !== false) {\n          value = this.table.modules.format.formatExportValue(cellWrapper, this.colVisProp);\n        } else {\n          switch (typeof value) {\n            case \"object\":\n              value = JSON.stringify(value);\n              break;\n            case \"undefined\":\n            case \"null\":\n              value = \"\";\n              break;\n            default:\n              value = value;\n          }\n        }\n        if (value instanceof Node) {\n          cellEl.appendChild(value);\n        } else {\n          cellEl.innerHTML = value;\n        }\n        if (styles.firstCell) {\n          this.mapElementStyles(styles.firstCell, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\n          if (column.definition.align) {\n            cellEl.style.textAlign = column.definition.align;\n          }\n        }\n        if (this.table.options.dataTree && this.config.dataTree !== false) {\n          if (setup.treeElementField && setup.treeElementField == column.field || !setup.treeElementField && i == 0) {\n            if (row.component._row.modules.dataTree.controlEl) {\n              cellEl.insertBefore(row.component._row.modules.dataTree.controlEl.cloneNode(true), cellEl.firstChild);\n            }\n            if (row.component._row.modules.dataTree.branchEl) {\n              cellEl.insertBefore(row.component._row.modules.dataTree.branchEl.cloneNode(true), cellEl.firstChild);\n            }\n          }\n        }\n        rowEl.appendChild(cellEl);\n        if (cellWrapper.modules.format && cellWrapper.modules.format.renderedCallback) {\n          cellWrapper.modules.format.renderedCallback();\n        }\n        if (setup.rowFormatter && this.config.formatCells !== false) {\n          setup.rowFormatter(row.component);\n        }\n      }\n    });\n    return rowEl;\n  }\n  genereateHTMLTable(list) {\n    var holder = document.createElement(\"div\");\n    holder.appendChild(this.genereateTableElement(list));\n    return holder.innerHTML;\n  }\n  getHtml(visible, style, config, colVisProp) {\n    var list = this.generateExportList(config || this.table.options.htmlOutputConfig, style, visible, colVisProp || \"htmlOutput\");\n    return this.genereateHTMLTable(list);\n  }\n  mapElementStyles(from, to, props) {\n    if (this.cloneTableStyle && from && to) {\n      var lookup = {\n        \"background-color\": \"backgroundColor\",\n        \"color\": \"fontColor\",\n        \"width\": \"width\",\n        \"font-weight\": \"fontWeight\",\n        \"font-family\": \"fontFamily\",\n        \"font-size\": \"fontSize\",\n        \"text-align\": \"textAlign\",\n        \"border-top\": \"borderTop\",\n        \"border-left\": \"borderLeft\",\n        \"border-right\": \"borderRight\",\n        \"border-bottom\": \"borderBottom\",\n        \"padding-top\": \"paddingTop\",\n        \"padding-left\": \"paddingLeft\",\n        \"padding-right\": \"paddingRight\",\n        \"padding-bottom\": \"paddingBottom\"\n      };\n      if (window.getComputedStyle) {\n        var fromStyle = window.getComputedStyle(from);\n        props.forEach(function (prop) {\n          to.style[lookup[prop]] = fromStyle.getPropertyValue(prop);\n        });\n      }\n    }\n  }\n}\nExport.moduleName = \"export\";\nvar defaultFilters = {\n  //equal to\n  \"=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal == filterVal ? true : false;\n  },\n  //less than\n  \"<\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal < filterVal ? true : false;\n  },\n  //less than or equal to\n  \"<=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal <= filterVal ? true : false;\n  },\n  //greater than\n  \">\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal > filterVal ? true : false;\n  },\n  //greater than or equal to\n  \">=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal >= filterVal ? true : false;\n  },\n  //not equal to\n  \"!=\": function (filterVal, rowVal, rowData, filterParams) {\n    return rowVal != filterVal ? true : false;\n  },\n  \"regex\": function (filterVal, rowVal, rowData, filterParams) {\n    if (typeof filterVal == \"string\") {\n      filterVal = new RegExp(filterVal);\n    }\n    return filterVal.test(rowVal);\n  },\n  //contains the string\n  \"like\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().indexOf(filterVal.toLowerCase()) > -1;\n      } else {\n        return false;\n      }\n    }\n  },\n  //contains the keywords\n  \"keywords\": function (filterVal, rowVal, rowData, filterParams) {\n    var keywords = filterVal.toLowerCase().split(typeof filterParams.separator === \"undefined\" ? \" \" : filterParams.separator),\n      value = String(rowVal === null || typeof rowVal === \"undefined\" ? \"\" : rowVal).toLowerCase(),\n      matches = [];\n    keywords.forEach(keyword => {\n      if (value.includes(keyword)) {\n        matches.push(true);\n      }\n    });\n    return filterParams.matchAll ? matches.length === keywords.length : !!matches.length;\n  },\n  //starts with the string\n  \"starts\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().startsWith(filterVal.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  },\n  //ends with the string\n  \"ends\": function (filterVal, rowVal, rowData, filterParams) {\n    if (filterVal === null || typeof filterVal === \"undefined\") {\n      return rowVal === filterVal ? true : false;\n    } else {\n      if (typeof rowVal !== 'undefined' && rowVal !== null) {\n        return String(rowVal).toLowerCase().endsWith(filterVal.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  },\n  //in array\n  \"in\": function (filterVal, rowVal, rowData, filterParams) {\n    if (Array.isArray(filterVal)) {\n      return filterVal.length ? filterVal.indexOf(rowVal) > -1 : true;\n    } else {\n      console.warn(\"Filter Error - filter value is not an array:\", filterVal);\n      return false;\n    }\n  }\n};\nclass Filter extends Module {\n  constructor(table) {\n    super(table);\n    this.filterList = []; //hold filter list\n    this.headerFilters = {}; //hold column filters\n    this.headerFilterColumns = []; //hold columns that use header filters\n\n    this.prevHeaderFilterChangeCheck = \"\";\n    this.prevHeaderFilterChangeCheck = \"{}\";\n    this.changed = false; //has filtering changed since last render\n    this.tableInitialized = false;\n    this.registerTableOption(\"filterMode\", \"local\"); //local or remote filtering\n\n    this.registerTableOption(\"initialFilter\", false); //initial filtering criteria\n    this.registerTableOption(\"initialHeaderFilter\", false); //initial header filtering criteria\n    this.registerTableOption(\"headerFilterLiveFilterDelay\", 300); //delay before updating column after user types in header filter\n\n    this.registerColumnOption(\"headerFilter\");\n    this.registerColumnOption(\"headerFilterPlaceholder\");\n    this.registerColumnOption(\"headerFilterParams\");\n    this.registerColumnOption(\"headerFilterEmptyCheck\");\n    this.registerColumnOption(\"headerFilterFunc\");\n    this.registerColumnOption(\"headerFilterFuncParams\");\n    this.registerColumnOption(\"headerFilterLiveFilter\");\n    this.registerTableFunction(\"searchRows\", this.searchRows.bind(this));\n    this.registerTableFunction(\"searchData\", this.searchData.bind(this));\n    this.registerTableFunction(\"setFilter\", this.userSetFilter.bind(this));\n    this.registerTableFunction(\"refreshFilter\", this.userRefreshFilter.bind(this));\n    this.registerTableFunction(\"addFilter\", this.userAddFilter.bind(this));\n    this.registerTableFunction(\"getFilters\", this.getFilters.bind(this));\n    this.registerTableFunction(\"setHeaderFilterFocus\", this.userSetHeaderFilterFocus.bind(this));\n    this.registerTableFunction(\"getHeaderFilterValue\", this.userGetHeaderFilterValue.bind(this));\n    this.registerTableFunction(\"setHeaderFilterValue\", this.userSetHeaderFilterValue.bind(this));\n    this.registerTableFunction(\"getHeaderFilters\", this.getHeaderFilters.bind(this));\n    this.registerTableFunction(\"removeFilter\", this.userRemoveFilter.bind(this));\n    this.registerTableFunction(\"clearFilter\", this.userClearFilter.bind(this));\n    this.registerTableFunction(\"clearHeaderFilter\", this.userClearHeaderFilter.bind(this));\n    this.registerComponentFunction(\"column\", \"headerFilterFocus\", this.setHeaderFilterFocus.bind(this));\n    this.registerComponentFunction(\"column\", \"reloadHeaderFilter\", this.reloadHeaderFilter.bind(this));\n    this.registerComponentFunction(\"column\", \"getHeaderFilterValue\", this.getHeaderFilterValue.bind(this));\n    this.registerComponentFunction(\"column\", \"setHeaderFilterValue\", this.setHeaderFilterValue.bind(this));\n  }\n  initialize() {\n    this.subscribe(\"column-init\", this.initializeColumnHeaderFilter.bind(this));\n    this.subscribe(\"column-width-fit-before\", this.hideHeaderFilterElements.bind(this));\n    this.subscribe(\"column-width-fit-after\", this.showHeaderFilterElements.bind(this));\n    this.subscribe(\"table-built\", this.tableBuilt.bind(this));\n    if (this.table.options.filterMode === \"remote\") {\n      this.subscribe(\"data-params\", this.remoteFilterParams.bind(this));\n    }\n    this.registerDataHandler(this.filter.bind(this), 10);\n  }\n  tableBuilt() {\n    if (this.table.options.initialFilter) {\n      this.setFilter(this.table.options.initialFilter);\n    }\n    if (this.table.options.initialHeaderFilter) {\n      this.table.options.initialHeaderFilter.forEach(item => {\n        var column = this.table.columnManager.findColumn(item.field);\n        if (column) {\n          this.setHeaderFilterValue(column, item.value);\n        } else {\n          console.warn(\"Column Filter Error - No matching column found:\", item.field);\n          return false;\n        }\n      });\n    }\n    this.tableInitialized = true;\n  }\n  remoteFilterParams(data, config, silent, params) {\n    params.filter = this.getFilters(true, true);\n    return params;\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  //set standard filters\n  userSetFilter(field, type, value, params) {\n    this.setFilter(field, type, value, params);\n    this.refreshFilter();\n  }\n\n  //set standard filters\n  userRefreshFilter() {\n    this.refreshFilter();\n  }\n\n  //add filter to array\n  userAddFilter(field, type, value, params) {\n    this.addFilter(field, type, value, params);\n    this.refreshFilter();\n  }\n  userSetHeaderFilterFocus(field) {\n    var column = this.table.columnManager.findColumn(field);\n    if (column) {\n      this.setHeaderFilterFocus(column);\n    } else {\n      console.warn(\"Column Filter Focus Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  userGetHeaderFilterValue(field) {\n    var column = this.table.columnManager.findColumn(field);\n    if (column) {\n      return this.getHeaderFilterValue(column);\n    } else {\n      console.warn(\"Column Filter Error - No matching column found:\", field);\n    }\n  }\n  userSetHeaderFilterValue(field, value) {\n    var column = this.table.columnManager.findColumn(field);\n    if (column) {\n      this.setHeaderFilterValue(column, value);\n    } else {\n      console.warn(\"Column Filter Error - No matching column found:\", field);\n      return false;\n    }\n  }\n\n  //remove filter from array\n  userRemoveFilter(field, type, value) {\n    this.removeFilter(field, type, value);\n    this.refreshFilter();\n  }\n\n  //clear filters\n  userClearFilter(all) {\n    this.clearFilter(all);\n    this.refreshFilter();\n  }\n\n  //clear header filters\n  userClearHeaderFilter() {\n    this.clearHeaderFilter();\n    this.refreshFilter();\n  }\n\n  //search for specific row components\n  searchRows(field, type, value) {\n    return this.search(\"rows\", field, type, value);\n  }\n\n  //search for specific data\n  searchData(field, type, value) {\n    return this.search(\"data\", field, type, value);\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  initializeColumnHeaderFilter(column) {\n    var def = column.definition;\n    if (def.headerFilter) {\n      if (typeof def.headerFilterPlaceholder !== \"undefined\" && def.field) {\n        this.module(\"localize\").setHeaderFilterColumnPlaceholder(def.field, def.headerFilterPlaceholder);\n      }\n      this.initializeColumn(column);\n    }\n  }\n\n  //initialize column header filter\n  initializeColumn(column, value) {\n    var self = this,\n      field = column.getField();\n\n    //handle successfull value change\n    function success(value) {\n      var filterType = column.modules.filter.tagType == \"input\" && column.modules.filter.attrType == \"text\" || column.modules.filter.tagType == \"textarea\" ? \"partial\" : \"match\",\n        type = \"\",\n        filterChangeCheck = \"\",\n        filterFunc;\n      if (typeof column.modules.filter.prevSuccess === \"undefined\" || column.modules.filter.prevSuccess !== value) {\n        column.modules.filter.prevSuccess = value;\n        if (!column.modules.filter.emptyFunc(value)) {\n          column.modules.filter.value = value;\n          switch (typeof column.definition.headerFilterFunc) {\n            case \"string\":\n              if (Filter.filters[column.definition.headerFilterFunc]) {\n                type = column.definition.headerFilterFunc;\n                filterFunc = function (data) {\n                  var params = column.definition.headerFilterFuncParams || {};\n                  var fieldVal = column.getFieldValue(data);\n                  params = typeof params === \"function\" ? params(value, fieldVal, data) : params;\n                  return Filter.filters[column.definition.headerFilterFunc](value, fieldVal, data, params);\n                };\n              } else {\n                console.warn(\"Header Filter Error - Matching filter function not found: \", column.definition.headerFilterFunc);\n              }\n              break;\n            case \"function\":\n              filterFunc = function (data) {\n                var params = column.definition.headerFilterFuncParams || {};\n                var fieldVal = column.getFieldValue(data);\n                params = typeof params === \"function\" ? params(value, fieldVal, data) : params;\n                return column.definition.headerFilterFunc(value, fieldVal, data, params);\n              };\n              type = filterFunc;\n              break;\n          }\n          if (!filterFunc) {\n            switch (filterType) {\n              case \"partial\":\n                filterFunc = function (data) {\n                  var colVal = column.getFieldValue(data);\n                  if (typeof colVal !== 'undefined' && colVal !== null) {\n                    return String(colVal).toLowerCase().indexOf(String(value).toLowerCase()) > -1;\n                  } else {\n                    return false;\n                  }\n                };\n                type = \"like\";\n                break;\n              default:\n                filterFunc = function (data) {\n                  return column.getFieldValue(data) == value;\n                };\n                type = \"=\";\n            }\n          }\n          self.headerFilters[field] = {\n            value: value,\n            func: filterFunc,\n            type: type,\n            params: {}\n          };\n        } else {\n          delete self.headerFilters[field];\n        }\n        filterChangeCheck = JSON.stringify(self.headerFilters);\n        if (self.prevHeaderFilterChangeCheck !== filterChangeCheck) {\n          self.prevHeaderFilterChangeCheck = filterChangeCheck;\n          self.trackChanges();\n          self.refreshFilter();\n        }\n      }\n      return true;\n    }\n    column.modules.filter = {\n      success: success,\n      attrType: false,\n      tagType: false,\n      emptyFunc: false\n    };\n    this.generateHeaderFilterElement(column);\n  }\n  generateHeaderFilterElement(column, initialValue, reinitialize) {\n    var self = this,\n      success = column.modules.filter.success,\n      field = column.getField(),\n      filterElement,\n      editor,\n      editorElement,\n      cellWrapper,\n      typingTimer,\n      searchTrigger,\n      params;\n\n    //handle aborted edit\n    function cancel() {}\n    if (column.modules.filter.headerElement && column.modules.filter.headerElement.parentNode) {\n      column.contentElement.removeChild(column.modules.filter.headerElement.parentNode);\n    }\n    if (field) {\n      //set empty value function\n      column.modules.filter.emptyFunc = column.definition.headerFilterEmptyCheck || function (value) {\n        return !value && value !== \"0\" && value !== 0;\n      };\n      filterElement = document.createElement(\"div\");\n      filterElement.classList.add(\"tabulator-header-filter\");\n\n      //set column editor\n      switch (typeof column.definition.headerFilter) {\n        case \"string\":\n          if (self.table.modules.edit.editors[column.definition.headerFilter]) {\n            editor = self.table.modules.edit.editors[column.definition.headerFilter];\n            if ((column.definition.headerFilter === \"tick\" || column.definition.headerFilter === \"tickCross\") && !column.definition.headerFilterEmptyCheck) {\n              column.modules.filter.emptyFunc = function (value) {\n                return value !== true && value !== false;\n              };\n            }\n          } else {\n            console.warn(\"Filter Error - Cannot build header filter, No such editor found: \", column.definition.editor);\n          }\n          break;\n        case \"function\":\n          editor = column.definition.headerFilter;\n          break;\n        case \"boolean\":\n          if (column.modules.edit && column.modules.edit.editor) {\n            editor = column.modules.edit.editor;\n          } else {\n            if (column.definition.formatter && self.table.modules.edit.editors[column.definition.formatter]) {\n              editor = self.table.modules.edit.editors[column.definition.formatter];\n              if ((column.definition.formatter === \"tick\" || column.definition.formatter === \"tickCross\") && !column.definition.headerFilterEmptyCheck) {\n                column.modules.filter.emptyFunc = function (value) {\n                  return value !== true && value !== false;\n                };\n              }\n            } else {\n              editor = self.table.modules.edit.editors[\"input\"];\n            }\n          }\n          break;\n      }\n      if (editor) {\n        cellWrapper = {\n          getValue: function () {\n            return typeof initialValue !== \"undefined\" ? initialValue : \"\";\n          },\n          getField: function () {\n            return column.definition.field;\n          },\n          getElement: function () {\n            return filterElement;\n          },\n          getColumn: function () {\n            return column.getComponent();\n          },\n          getRow: function () {\n            return {\n              normalizeHeight: function () {}\n            };\n          }\n        };\n        params = column.definition.headerFilterParams || {};\n        params = typeof params === \"function\" ? params.call(self.table) : params;\n        editorElement = editor.call(this.table.modules.edit, cellWrapper, function () {}, success, cancel, params);\n        if (!editorElement) {\n          console.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor returned a value of false\");\n          return;\n        }\n        if (!(editorElement instanceof Node)) {\n          console.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor should return an instance of Node, the editor returned:\", editorElement);\n          return;\n        }\n\n        //set Placeholder Text\n        if (field) {\n          self.langBind(\"headerFilters|columns|\" + column.definition.field, function (value) {\n            editorElement.setAttribute(\"placeholder\", typeof value !== \"undefined\" && value ? value : self.langText(\"headerFilters|default\"));\n          });\n        } else {\n          self.langBind(\"headerFilters|default\", function (value) {\n            editorElement.setAttribute(\"placeholder\", value);\n          });\n        }\n\n        //focus on element on click\n        editorElement.addEventListener(\"click\", function (e) {\n          e.stopPropagation();\n          editorElement.focus();\n        });\n        editorElement.addEventListener(\"focus\", e => {\n          var left = this.table.columnManager.element.scrollLeft;\n          if (left !== this.table.rowManager.element.scrollLeft) {\n            this.table.rowManager.scrollHorizontal(left);\n            this.table.columnManager.scrollHorizontal(left);\n          }\n        });\n\n        //live update filters as user types\n        typingTimer = false;\n        searchTrigger = function (e) {\n          if (typingTimer) {\n            clearTimeout(typingTimer);\n          }\n          typingTimer = setTimeout(function () {\n            success(editorElement.value);\n          }, self.table.options.headerFilterLiveFilterDelay);\n        };\n        column.modules.filter.headerElement = editorElement;\n        column.modules.filter.attrType = editorElement.hasAttribute(\"type\") ? editorElement.getAttribute(\"type\").toLowerCase() : \"\";\n        column.modules.filter.tagType = editorElement.tagName.toLowerCase();\n        if (column.definition.headerFilterLiveFilter !== false) {\n          if (!(column.definition.headerFilter === 'autocomplete' || column.definition.headerFilter === 'tickCross' || (column.definition.editor === 'autocomplete' || column.definition.editor === 'tickCross') && column.definition.headerFilter === true)) {\n            editorElement.addEventListener(\"keyup\", searchTrigger);\n            editorElement.addEventListener(\"search\", searchTrigger);\n\n            //update number filtered columns on change\n            if (column.modules.filter.attrType == \"number\") {\n              editorElement.addEventListener(\"change\", function (e) {\n                success(editorElement.value);\n              });\n            }\n\n            //change text inputs to search inputs to allow for clearing of field\n            if (column.modules.filter.attrType == \"text\" && this.table.browser !== \"ie\") {\n              editorElement.setAttribute(\"type\", \"search\");\n              // editorElement.off(\"change blur\"); //prevent blur from triggering filter and preventing selection click\n            }\n          }\n\n          //prevent input and select elements from propegating click to column sorters etc\n          if (column.modules.filter.tagType == \"input\" || column.modules.filter.tagType == \"select\" || column.modules.filter.tagType == \"textarea\") {\n            editorElement.addEventListener(\"mousedown\", function (e) {\n              e.stopPropagation();\n            });\n          }\n        }\n        filterElement.appendChild(editorElement);\n        column.contentElement.appendChild(filterElement);\n        if (!reinitialize) {\n          self.headerFilterColumns.push(column);\n        }\n      }\n    } else {\n      console.warn(\"Filter Error - Cannot add header filter, column has no field set:\", column.definition.title);\n    }\n  }\n\n  //hide all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\n  hideHeaderFilterElements() {\n    this.headerFilterColumns.forEach(function (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        column.modules.filter.headerElement.style.display = 'none';\n      }\n    });\n  }\n\n  //show all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\n  showHeaderFilterElements() {\n    this.headerFilterColumns.forEach(function (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        column.modules.filter.headerElement.style.display = '';\n      }\n    });\n  }\n\n  //programatically set focus of header filter\n  setHeaderFilterFocus(column) {\n    if (column.modules.filter && column.modules.filter.headerElement) {\n      column.modules.filter.headerElement.focus();\n    } else {\n      console.warn(\"Column Filter Focus Error - No header filter set on column:\", column.getField());\n    }\n  }\n\n  //programmatically get value of header filter\n  getHeaderFilterValue(column) {\n    if (column.modules.filter && column.modules.filter.headerElement) {\n      return column.modules.filter.headerElement.value;\n    } else {\n      console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n    }\n  }\n\n  //programatically set value of header filter\n  setHeaderFilterValue(column, value) {\n    if (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        this.generateHeaderFilterElement(column, value, true);\n        column.modules.filter.success(value);\n      } else {\n        console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n      }\n    }\n  }\n  reloadHeaderFilter(column) {\n    if (column) {\n      if (column.modules.filter && column.modules.filter.headerElement) {\n        this.generateHeaderFilterElement(column, column.modules.filter.value, true);\n      } else {\n        console.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\n      }\n    }\n  }\n  refreshFilter() {\n    if (this.tableInitialized) {\n      if (this.table.options.filterMode === \"remote\") {\n        this.reloadData();\n      } else {\n        this.refreshData(true);\n      }\n    }\n\n    //TODO - Persist left position of row manager\n    // left = this.scrollLeft;\n    // this.scrollHorizontal(left);\n  }\n\n  //check if the filters has changed since last use\n  trackChanges() {\n    this.changed = true;\n    this.dispatch(\"filter-changed\");\n  }\n\n  //check if the filters has changed since last use\n  hasChanged() {\n    var changed = this.changed;\n    this.changed = false;\n    return changed;\n  }\n\n  //set standard filters\n  setFilter(field, type, value, params) {\n    this.filterList = [];\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value,\n        params: params\n      }];\n    }\n    this.addFilter(field);\n  }\n\n  //add filter to array\n  addFilter(field, type, value, params) {\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value,\n        params: params\n      }];\n    }\n    field.forEach(filter => {\n      filter = this.findFilter(filter);\n      if (filter) {\n        this.filterList.push(filter);\n        this.changed = true;\n      }\n    });\n  }\n  findFilter(filter) {\n    var column;\n    if (Array.isArray(filter)) {\n      return this.findSubFilters(filter);\n    }\n    var filterFunc = false;\n    if (typeof filter.field == \"function\") {\n      filterFunc = function (data) {\n        return filter.field(data, filter.type || {}); // pass params to custom filter function\n      };\n    } else {\n      if (Filter.filters[filter.type]) {\n        column = this.table.columnManager.getColumnByField(filter.field);\n        if (column) {\n          filterFunc = function (data) {\n            return Filter.filters[filter.type](filter.value, column.getFieldValue(data), data, filter.params || {});\n          };\n        } else {\n          filterFunc = function (data) {\n            return Filter.filters[filter.type](filter.value, data[filter.field], data, filter.params || {});\n          };\n        }\n      } else {\n        console.warn(\"Filter Error - No such filter type found, ignoring: \", filter.type);\n      }\n    }\n    filter.func = filterFunc;\n    return filter.func ? filter : false;\n  }\n  findSubFilters(filters) {\n    var output = [];\n    filters.forEach(filter => {\n      filter = this.findFilter(filter);\n      if (filter) {\n        output.push(filter);\n      }\n    });\n    return output.length ? output : false;\n  }\n\n  //get all filters\n  getFilters(all, ajax) {\n    var output = [];\n    if (all) {\n      output = this.getHeaderFilters();\n    }\n    if (ajax) {\n      output.forEach(function (item) {\n        if (typeof item.type == \"function\") {\n          item.type = \"function\";\n        }\n      });\n    }\n    output = output.concat(this.filtersToArray(this.filterList, ajax));\n    return output;\n  }\n\n  //filter to Object\n  filtersToArray(filterList, ajax) {\n    var output = [];\n    filterList.forEach(filter => {\n      var item;\n      if (Array.isArray(filter)) {\n        output.push(this.filtersToArray(filter, ajax));\n      } else {\n        item = {\n          field: filter.field,\n          type: filter.type,\n          value: filter.value\n        };\n        if (ajax) {\n          if (typeof item.type == \"function\") {\n            item.type = \"function\";\n          }\n        }\n        output.push(item);\n      }\n    });\n    return output;\n  }\n\n  //get all filters\n  getHeaderFilters() {\n    var output = [];\n    for (var key in this.headerFilters) {\n      output.push({\n        field: key,\n        type: this.headerFilters[key].type,\n        value: this.headerFilters[key].value\n      });\n    }\n    return output;\n  }\n\n  //remove filter from array\n  removeFilter(field, type, value) {\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value\n      }];\n    }\n    field.forEach(filter => {\n      var index = -1;\n      if (typeof filter.field == \"object\") {\n        index = this.filterList.findIndex(element => {\n          return filter === element;\n        });\n      } else {\n        index = this.filterList.findIndex(element => {\n          return filter.field === element.field && filter.type === element.type && filter.value === element.value;\n        });\n      }\n      if (index > -1) {\n        this.filterList.splice(index, 1);\n      } else {\n        console.warn(\"Filter Error - No matching filter type found, ignoring: \", filter.type);\n      }\n    });\n    this.trackChanges();\n  }\n\n  //clear filters\n  clearFilter(all) {\n    this.filterList = [];\n    if (all) {\n      this.clearHeaderFilter();\n    }\n    this.trackChanges();\n  }\n\n  //clear header filters\n  clearHeaderFilter() {\n    this.headerFilters = {};\n    this.prevHeaderFilterChangeCheck = \"{}\";\n    this.headerFilterColumns.forEach(column => {\n      if (typeof column.modules.filter.value !== \"undefined\") {\n        delete column.modules.filter.value;\n      }\n      column.modules.filter.prevSuccess = undefined;\n      this.reloadHeaderFilter(column);\n    });\n    this.trackChanges();\n  }\n\n  //search data and return matching rows\n  search(searchType, field, type, value) {\n    var activeRows = [],\n      filterList = [];\n    if (!Array.isArray(field)) {\n      field = [{\n        field: field,\n        type: type,\n        value: value\n      }];\n    }\n    field.forEach(filter => {\n      filter = this.findFilter(filter);\n      if (filter) {\n        filterList.push(filter);\n      }\n    });\n    this.table.rowManager.rows.forEach(row => {\n      var match = true;\n      filterList.forEach(filter => {\n        if (!this.filterRecurse(filter, row.getData())) {\n          match = false;\n        }\n      });\n      if (match) {\n        activeRows.push(searchType === \"data\" ? row.getData(\"data\") : row.getComponent());\n      }\n    });\n    return activeRows;\n  }\n\n  //filter row array\n  filter(rowList, filters) {\n    var activeRows = [],\n      activeRowComponents = [];\n    if (this.subscribedExternal(\"dataFiltering\")) {\n      this.dispatchExternal(\"dataFiltering\", this.getFilters());\n    }\n    if (this.table.options.filterMode !== \"remote\" && (this.filterList.length || Object.keys(this.headerFilters).length)) {\n      rowList.forEach(row => {\n        if (this.filterRow(row)) {\n          activeRows.push(row);\n        }\n      });\n    } else {\n      activeRows = rowList.slice(0);\n    }\n    if (this.subscribedExternal(\"dataFiltered\")) {\n      activeRows.forEach(row => {\n        activeRowComponents.push(row.getComponent());\n      });\n      this.dispatchExternal(\"dataFiltered\", this.getFilters(), activeRowComponents);\n    }\n    return activeRows;\n  }\n\n  //filter individual row\n  filterRow(row, filters) {\n    var match = true,\n      data = row.getData();\n    this.filterList.forEach(filter => {\n      if (!this.filterRecurse(filter, data)) {\n        match = false;\n      }\n    });\n    for (var field in this.headerFilters) {\n      if (!this.headerFilters[field].func(data)) {\n        match = false;\n      }\n    }\n    return match;\n  }\n  filterRecurse(filter, data) {\n    var match = false;\n    if (Array.isArray(filter)) {\n      filter.forEach(subFilter => {\n        if (this.filterRecurse(subFilter, data)) {\n          match = true;\n        }\n      });\n    } else {\n      match = filter.func(data);\n    }\n    return match;\n  }\n}\nFilter.moduleName = \"filter\";\n\n//load defaults\nFilter.filters = defaultFilters;\nfunction plaintext(cell, formatterParams, onRendered) {\n  return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n}\nfunction html$1(cell, formatterParams, onRendered) {\n  return cell.getValue();\n}\nfunction textarea$1(cell, formatterParams, onRendered) {\n  cell.getElement().style.whiteSpace = \"pre-wrap\";\n  return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n}\nfunction money(cell, formatterParams, onRendered) {\n  var floatVal = parseFloat(cell.getValue()),\n    sign = \"\",\n    number,\n    integer,\n    decimal,\n    rgx;\n  var decimalSym = formatterParams.decimal || \".\";\n  var thousandSym = formatterParams.thousand || \",\";\n  var negativeSign = formatterParams.negativeSign || \"-\";\n  var symbol = formatterParams.symbol || \"\";\n  var after = !!formatterParams.symbolAfter;\n  var precision = typeof formatterParams.precision !== \"undefined\" ? formatterParams.precision : 2;\n  if (isNaN(floatVal)) {\n    return this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\n  }\n  if (floatVal < 0) {\n    floatVal = Math.abs(floatVal);\n    sign = negativeSign;\n  }\n  number = precision !== false ? floatVal.toFixed(precision) : floatVal;\n  number = String(number).split(\".\");\n  integer = number[0];\n  decimal = number.length > 1 ? decimalSym + number[1] : \"\";\n  rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(integer)) {\n    integer = integer.replace(rgx, \"$1\" + thousandSym + \"$2\");\n  }\n  return after ? sign + integer + decimal + symbol : sign + symbol + integer + decimal;\n}\nfunction link(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n    urlPrefix = formatterParams.urlPrefix || \"\",\n    download = formatterParams.download,\n    label = value,\n    el = document.createElement(\"a\"),\n    data;\n  if (formatterParams.labelField) {\n    data = cell.getData();\n    label = data[formatterParams.labelField];\n  }\n  if (formatterParams.label) {\n    switch (typeof formatterParams.label) {\n      case \"string\":\n        label = formatterParams.label;\n        break;\n      case \"function\":\n        label = formatterParams.label(cell);\n        break;\n    }\n  }\n  if (label) {\n    if (formatterParams.urlField) {\n      data = cell.getData();\n      value = data[formatterParams.urlField];\n    }\n    if (formatterParams.url) {\n      switch (typeof formatterParams.url) {\n        case \"string\":\n          value = formatterParams.url;\n          break;\n        case \"function\":\n          value = formatterParams.url(cell);\n          break;\n      }\n    }\n    el.setAttribute(\"href\", urlPrefix + value);\n    if (formatterParams.target) {\n      el.setAttribute(\"target\", formatterParams.target);\n    }\n    if (formatterParams.download) {\n      if (typeof download == \"function\") {\n        download = download(cell);\n      } else {\n        download = download === true ? \"\" : download;\n      }\n      el.setAttribute(\"download\", download);\n    }\n    el.innerHTML = this.emptyToSpace(this.sanitizeHTML(label));\n    return el;\n  } else {\n    return \"&nbsp;\";\n  }\n}\nfunction image(cell, formatterParams, onRendered) {\n  var el = document.createElement(\"img\"),\n    src = cell.getValue();\n  if (formatterParams.urlPrefix) {\n    src = formatterParams.urlPrefix + cell.getValue();\n  }\n  if (formatterParams.urlSuffix) {\n    src = src + formatterParams.urlSuffix;\n  }\n  el.setAttribute(\"src\", src);\n  switch (typeof formatterParams.height) {\n    case \"number\":\n      el.style.height = formatterParams.height + \"px\";\n      break;\n    case \"string\":\n      el.style.height = formatterParams.height;\n      break;\n  }\n  switch (typeof formatterParams.width) {\n    case \"number\":\n      el.style.width = formatterParams.width + \"px\";\n      break;\n    case \"string\":\n      el.style.width = formatterParams.width;\n      break;\n  }\n  el.addEventListener(\"load\", function () {\n    cell.getRow().normalizeHeight();\n  });\n  return el;\n}\nfunction tickCross$1(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n    element = cell.getElement(),\n    empty = formatterParams.allowEmpty,\n    truthy = formatterParams.allowTruthy,\n    tick = typeof formatterParams.tickElement !== \"undefined\" ? formatterParams.tickElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>',\n    cross = typeof formatterParams.crossElement !== \"undefined\" ? formatterParams.crossElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\"  viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\n  if (truthy && value || value === true || value === \"true\" || value === \"True\" || value === 1 || value === \"1\") {\n    element.setAttribute(\"aria-checked\", true);\n    return tick || \"\";\n  } else {\n    if (empty && (value === \"null\" || value === \"\" || value === null || typeof value === \"undefined\")) {\n      element.setAttribute(\"aria-checked\", \"mixed\");\n      return \"\";\n    } else {\n      element.setAttribute(\"aria-checked\", false);\n      return cross || \"\";\n    }\n  }\n}\nfunction datetime(cell, formatterParams, onRendered) {\n  var DT = window.DateTime || luxon.DateTime;\n  var inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\n  var outputFormat = formatterParams.outputFormat || \"dd/MM/yyyy HH:mm:ss\";\n  var invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\n  var value = cell.getValue();\n  if (typeof DT != \"undefined\") {\n    var newDatetime = DT.fromFormat(String(value), inputFormat);\n    if (newDatetime.isValid) {\n      if (formatterParams.timezone) {\n        newDatetime = newDatetime.shiftTimezone(formatterParams.timezone);\n      }\n      return newDatetime.toFormat(outputFormat);\n    } else {\n      if (invalid === true || !value) {\n        return value;\n      } else if (typeof invalid === \"function\") {\n        return invalid(value);\n      } else {\n        return invalid;\n      }\n    }\n  } else {\n    console.error(\"Format Error - 'datetime' formatter is dependant on luxon.js\");\n  }\n}\nfunction datetimediff(cell, formatterParams, onRendered) {\n  var DT = window.DateTime || luxon.DateTime;\n  var inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\n  var invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\n  var suffix = typeof formatterParams.suffix !== \"undefined\" ? formatterParams.suffix : false;\n  var unit = typeof formatterParams.unit !== \"undefined\" ? formatterParams.unit : \"days\";\n  var humanize = typeof formatterParams.humanize !== \"undefined\" ? formatterParams.humanize : false;\n  var date = typeof formatterParams.date !== \"undefined\" ? formatterParams.date : DT.now();\n  var value = cell.getValue();\n  if (typeof DT != \"undefined\") {\n    var newDatetime = DT.fromFormat(String(value), inputFormat);\n    if (newDatetime.isValid) {\n      if (humanize) ;else {\n        return parseInt(newDatetime.diff(date, unit)[unit]) + (suffix ? \" \" + suffix : \"\");\n      }\n    } else {\n      if (invalid === true) {\n        return value;\n      } else if (typeof invalid === \"function\") {\n        return invalid(value);\n      } else {\n        return invalid;\n      }\n    }\n  } else {\n    console.error(\"Format Error - 'datetimediff' formatter is dependant on luxon.js\");\n  }\n}\nfunction lookup(cell, formatterParams, onRendered) {\n  var value = cell.getValue();\n  if (typeof formatterParams[value] === \"undefined\") {\n    console.warn('Missing display value for ' + value);\n    return value;\n  }\n  return formatterParams[value];\n}\nfunction star$1(cell, formatterParams, onRendered) {\n  var value = cell.getValue(),\n    element = cell.getElement(),\n    maxStars = formatterParams && formatterParams.stars ? formatterParams.stars : 5,\n    stars = document.createElement(\"span\"),\n    star = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"),\n    starActive = '<polygon fill=\"#FFEA00\" stroke=\"#C1AB60\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>',\n    starInactive = '<polygon fill=\"#D2D2D2\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\n\n  //style stars holder\n  stars.style.verticalAlign = \"middle\";\n\n  //style star\n  star.setAttribute(\"width\", \"14\");\n  star.setAttribute(\"height\", \"14\");\n  star.setAttribute(\"viewBox\", \"0 0 512 512\");\n  star.setAttribute(\"xml:space\", \"preserve\");\n  star.style.padding = \"0 1px\";\n  value = value && !isNaN(value) ? parseInt(value) : 0;\n  value = Math.max(0, Math.min(value, maxStars));\n  for (var i = 1; i <= maxStars; i++) {\n    var nextStar = star.cloneNode(true);\n    nextStar.innerHTML = i <= value ? starActive : starInactive;\n    stars.appendChild(nextStar);\n  }\n  element.style.whiteSpace = \"nowrap\";\n  element.style.overflow = \"hidden\";\n  element.style.textOverflow = \"ellipsis\";\n  element.setAttribute(\"aria-label\", value);\n  return stars;\n}\nfunction traffic(cell, formatterParams, onRendered) {\n  var value = this.sanitizeHTML(cell.getValue()) || 0,\n    el = document.createElement(\"span\"),\n    max = formatterParams && formatterParams.max ? formatterParams.max : 100,\n    min = formatterParams && formatterParams.min ? formatterParams.min : 0,\n    colors = formatterParams && typeof formatterParams.color !== \"undefined\" ? formatterParams.color : [\"red\", \"orange\", \"green\"],\n    color = \"#666666\",\n    percent,\n    percentValue;\n  if (isNaN(value) || typeof cell.getValue() === \"undefined\") {\n    return;\n  }\n  el.classList.add(\"tabulator-traffic-light\");\n\n  //make sure value is in range\n  percentValue = parseFloat(value) <= max ? parseFloat(value) : max;\n  percentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\n\n  //workout percentage\n  percent = (max - min) / 100;\n  percentValue = Math.round((percentValue - min) / percent);\n\n  //set color\n  switch (typeof colors) {\n    case \"string\":\n      color = colors;\n      break;\n    case \"function\":\n      color = colors(value);\n      break;\n    case \"object\":\n      if (Array.isArray(colors)) {\n        var unit = 100 / colors.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, colors.length - 1);\n        index = Math.max(index, 0);\n        color = colors[index];\n        break;\n      }\n  }\n  el.style.backgroundColor = color;\n  return el;\n}\nfunction progress$1(cell, formatterParams, onRendered) {\n  //progress bar\n  var value = this.sanitizeHTML(cell.getValue()) || 0,\n    element = cell.getElement(),\n    max = formatterParams && formatterParams.max ? formatterParams.max : 100,\n    min = formatterParams && formatterParams.min ? formatterParams.min : 0,\n    legendAlign = formatterParams && formatterParams.legendAlign ? formatterParams.legendAlign : \"center\",\n    percent,\n    percentValue,\n    color,\n    legend,\n    legendColor;\n\n  //make sure value is in range\n  percentValue = parseFloat(value) <= max ? parseFloat(value) : max;\n  percentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\n\n  //workout percentage\n  percent = (max - min) / 100;\n  percentValue = Math.round((percentValue - min) / percent);\n\n  //set bar color\n  switch (typeof formatterParams.color) {\n    case \"string\":\n      color = formatterParams.color;\n      break;\n    case \"function\":\n      color = formatterParams.color(value);\n      break;\n    case \"object\":\n      if (Array.isArray(formatterParams.color)) {\n        var unit = 100 / formatterParams.color.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, formatterParams.color.length - 1);\n        index = Math.max(index, 0);\n        color = formatterParams.color[index];\n        break;\n      }\n    default:\n      color = \"#2DC214\";\n  }\n\n  //generate legend\n  switch (typeof formatterParams.legend) {\n    case \"string\":\n      legend = formatterParams.legend;\n      break;\n    case \"function\":\n      legend = formatterParams.legend(value);\n      break;\n    case \"boolean\":\n      legend = value;\n      break;\n    default:\n      legend = false;\n  }\n\n  //set legend color\n  switch (typeof formatterParams.legendColor) {\n    case \"string\":\n      legendColor = formatterParams.legendColor;\n      break;\n    case \"function\":\n      legendColor = formatterParams.legendColor(value);\n      break;\n    case \"object\":\n      if (Array.isArray(formatterParams.legendColor)) {\n        var unit = 100 / formatterParams.legendColor.length;\n        var index = Math.floor(percentValue / unit);\n        index = Math.min(index, formatterParams.legendColor.length - 1);\n        index = Math.max(index, 0);\n        legendColor = formatterParams.legendColor[index];\n      }\n      break;\n    default:\n      legendColor = \"#000\";\n  }\n  element.style.minWidth = \"30px\";\n  element.style.position = \"relative\";\n  element.setAttribute(\"aria-label\", percentValue);\n  var barEl = document.createElement(\"div\");\n  barEl.style.display = \"inline-block\";\n  barEl.style.position = \"absolute\";\n  barEl.style.width = percentValue + \"%\";\n  barEl.style.backgroundColor = color;\n  barEl.style.height = \"100%\";\n  barEl.setAttribute('data-max', max);\n  barEl.setAttribute('data-min', min);\n  var barContainer = document.createElement(\"div\");\n  barContainer.style.position = \"relative\";\n  barContainer.style.width = \"100%\";\n  barContainer.style.height = \"100%\";\n  if (legend) {\n    var legendEl = document.createElement(\"div\");\n    legendEl.style.position = \"absolute\";\n    legendEl.style.top = 0;\n    legendEl.style.left = 0;\n    legendEl.style.textAlign = legendAlign;\n    legendEl.style.width = \"100%\";\n    legendEl.style.color = legendColor;\n    legendEl.innerHTML = legend;\n  }\n  onRendered(function () {\n    //handle custom element needed if formatter is to be included in printed/downloaded output\n    if (!(cell instanceof CellComponent)) {\n      var holderEl = document.createElement(\"div\");\n      holderEl.style.position = \"absolute\";\n      holderEl.style.top = \"4px\";\n      holderEl.style.bottom = \"4px\";\n      holderEl.style.left = \"4px\";\n      holderEl.style.right = \"4px\";\n      element.appendChild(holderEl);\n      element = holderEl;\n    }\n    element.appendChild(barContainer);\n    barContainer.appendChild(barEl);\n    if (legend) {\n      barContainer.appendChild(legendEl);\n    }\n  });\n  return \"\";\n}\nfunction color(cell, formatterParams, onRendered) {\n  cell.getElement().style.backgroundColor = this.sanitizeHTML(cell.getValue());\n  return \"\";\n}\nfunction buttonTick(cell, formatterParams, onRendered) {\n  return '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>';\n}\nfunction buttonCross(cell, formatterParams, onRendered) {\n  return '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\n}\nfunction rownum(cell, formatterParams, onRendered) {\n  return this.table.rowManager.activeRows.indexOf(cell.getRow()._getSelf()) + 1;\n}\nfunction handle(cell, formatterParams, onRendered) {\n  cell.getElement().classList.add(\"tabulator-row-handle\");\n  return \"<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>\";\n}\nfunction responsiveCollapse(cell, formatterParams, onRendered) {\n  var el = document.createElement(\"div\"),\n    config = cell.getRow()._row.modules.responsiveLayout;\n  el.classList.add(\"tabulator-responsive-collapse-toggle\");\n  el.innerHTML = \"<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>\";\n  cell.getElement().classList.add(\"tabulator-row-handle\");\n  function toggleList(isOpen) {\n    var collapseEl = config.element;\n    config.open = isOpen;\n    if (collapseEl) {\n      if (config.open) {\n        el.classList.add(\"open\");\n        collapseEl.style.display = '';\n      } else {\n        el.classList.remove(\"open\");\n        collapseEl.style.display = 'none';\n      }\n    }\n  }\n  el.addEventListener(\"click\", function (e) {\n    e.stopImmediatePropagation();\n    toggleList(!config.open);\n  });\n  toggleList(config.open);\n  return el;\n}\nfunction rowSelection(cell, formatterParams, onRendered) {\n  var checkbox = document.createElement(\"input\");\n  checkbox.type = 'checkbox';\n  if (this.table.modExists(\"selectRow\", true)) {\n    checkbox.addEventListener(\"click\", e => {\n      e.stopPropagation();\n    });\n    if (typeof cell.getRow == 'function') {\n      var row = cell.getRow();\n      if (row instanceof RowComponent$1) {\n        checkbox.addEventListener(\"change\", e => {\n          row.toggleSelect();\n        });\n        checkbox.checked = row.isSelected && row.isSelected();\n        this.table.modules.selectRow.registerRowSelectCheckbox(row, checkbox);\n      } else {\n        checkbox = \"\";\n      }\n    } else {\n      checkbox.addEventListener(\"change\", e => {\n        if (this.table.modules.selectRow.selectedRows.length) {\n          this.table.deselectRow();\n        } else {\n          this.table.selectRow(formatterParams.rowRange);\n        }\n      });\n      this.table.modules.selectRow.registerHeaderSelectCheckbox(checkbox);\n    }\n  }\n  return checkbox;\n}\nvar defaultFormatters = {\n  plaintext: plaintext,\n  html: html$1,\n  textarea: textarea$1,\n  money: money,\n  link: link,\n  image: image,\n  tickCross: tickCross$1,\n  datetime: datetime,\n  datetimediff: datetimediff,\n  lookup: lookup,\n  star: star$1,\n  traffic: traffic,\n  progress: progress$1,\n  color: color,\n  buttonTick: buttonTick,\n  buttonCross: buttonCross,\n  rownum: rownum,\n  handle: handle,\n  responsiveCollapse: responsiveCollapse,\n  rowSelection: rowSelection\n};\nclass Format extends Module {\n  constructor(table) {\n    super(table);\n    this.registerColumnOption(\"formatter\");\n    this.registerColumnOption(\"formatterParams\");\n    this.registerColumnOption(\"formatterPrint\");\n    this.registerColumnOption(\"formatterPrintParams\");\n    this.registerColumnOption(\"formatterClipboard\");\n    this.registerColumnOption(\"formatterClipboardParams\");\n    this.registerColumnOption(\"formatterHtmlOutput\");\n    this.registerColumnOption(\"formatterHtmlOutputParams\");\n    this.registerColumnOption(\"titleFormatter\");\n    this.registerColumnOption(\"titleFormatterParams\");\n  }\n  initialize() {\n    this.subscribe(\"cell-format\", this.formatValue.bind(this));\n    this.subscribe(\"cell-rendered\", this.cellRendered.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"column-format\", this.formatHeader.bind(this));\n  }\n\n  //initialize column formatter\n  initializeColumn(column) {\n    column.modules.format = this.lookupFormatter(column, \"\");\n    if (typeof column.definition.formatterPrint !== \"undefined\") {\n      column.modules.format.print = this.lookupFormatter(column, \"Print\");\n    }\n    if (typeof column.definition.formatterClipboard !== \"undefined\") {\n      column.modules.format.clipboard = this.lookupFormatter(column, \"Clipboard\");\n    }\n    if (typeof column.definition.formatterHtmlOutput !== \"undefined\") {\n      column.modules.format.htmlOutput = this.lookupFormatter(column, \"HtmlOutput\");\n    }\n  }\n  lookupFormatter(column, type) {\n    var config = {\n        params: column.definition[\"formatter\" + type + \"Params\"] || {}\n      },\n      formatter = column.definition[\"formatter\" + type];\n\n    //set column formatter\n    switch (typeof formatter) {\n      case \"string\":\n        if (Format.formatters[formatter]) {\n          config.formatter = Format.formatters[formatter];\n        } else {\n          console.warn(\"Formatter Error - No such formatter found: \", formatter);\n          config.formatter = Format.formatters.plaintext;\n        }\n        break;\n      case \"function\":\n        config.formatter = formatter;\n        break;\n      default:\n        config.formatter = Format.formatters.plaintext;\n        break;\n    }\n    return config;\n  }\n  cellRendered(cell) {\n    if (cell.modules.format && cell.modules.format.renderedCallback && !cell.modules.format.rendered) {\n      cell.modules.format.renderedCallback();\n      cell.modules.format.rendered = true;\n    }\n  }\n\n  //return a formatted value for a column header\n  formatHeader(column, title, el) {\n    var formatter, params, onRendered, mockCell;\n    if (column.definition.titleFormatter) {\n      formatter = this.getFormatter(column.definition.titleFormatter);\n      onRendered = callback => {\n        column.titleFormatterRendered = callback;\n      };\n      mockCell = {\n        getValue: function () {\n          return title;\n        },\n        getElement: function () {\n          return el;\n        }\n      };\n      params = column.definition.titleFormatterParams || {};\n      params = typeof params === \"function\" ? params() : params;\n      return formatter.call(this, mockCell, params, onRendered);\n    } else {\n      return title;\n    }\n  }\n\n  //return a formatted value for a cell\n  formatValue(cell) {\n    var component = cell.getComponent(),\n      params = typeof cell.column.modules.format.params === \"function\" ? cell.column.modules.format.params(component) : cell.column.modules.format.params;\n    function onRendered(callback) {\n      if (!cell.modules.format) {\n        cell.modules.format = {};\n      }\n      cell.modules.format.renderedCallback = callback;\n      cell.modules.format.rendered = false;\n    }\n    return cell.column.modules.format.formatter.call(this, component, params, onRendered);\n  }\n  formatExportValue(cell, type) {\n    var formatter = cell.column.modules.format[type],\n      params;\n    if (formatter) {\n      params = typeof formatter.params === \"function\" ? formatter.params(component) : formatter.params;\n      function onRendered(callback) {\n        if (!cell.modules.format) {\n          cell.modules.format = {};\n        }\n        cell.modules.format.renderedCallback = callback;\n        cell.modules.format.rendered = false;\n      }\n      return formatter.formatter.call(this, cell.getComponent(), params, onRendered);\n    } else {\n      return this.formatValue(cell);\n    }\n  }\n  sanitizeHTML(value) {\n    if (value) {\n      var entityMap = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;',\n        '`': '&#x60;',\n        '=': '&#x3D;'\n      };\n      return String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\n        return entityMap[s];\n      });\n    } else {\n      return value;\n    }\n  }\n  emptyToSpace(value) {\n    return value === null || typeof value === \"undefined\" || value === \"\" ? \"&nbsp;\" : value;\n  }\n\n  //get formatter for cell\n  getFormatter(formatter) {\n    var formatter;\n    switch (typeof formatter) {\n      case \"string\":\n        if (Format.formatters[formatter]) {\n          formatter = Format.formatters[formatter];\n        } else {\n          console.warn(\"Formatter Error - No such formatter found: \", formatter);\n          formatter = Format.formatters.plaintext;\n        }\n        break;\n      case \"function\":\n        formatter = formatter;\n        break;\n      default:\n        formatter = Format.formatters.plaintext;\n        break;\n    }\n    return formatter;\n  }\n}\nFormat.moduleName = \"format\";\n\n//load defaults\nFormat.formatters = defaultFormatters;\nclass FrozenColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.leftColumns = [];\n    this.rightColumns = [];\n    this.leftMargin = 0;\n    this.rightMargin = 0;\n    this.rightPadding = 0;\n    this.initializationMode = \"left\";\n    this.active = false;\n    this.scrollEndTimer = false;\n    this.registerColumnOption(\"frozen\");\n  }\n\n  //reset initial state\n  reset() {\n    this.initializationMode = \"left\";\n    this.leftColumns = [];\n    this.rightColumns = [];\n    this.leftMargin = 0;\n    this.rightMargin = 0;\n    this.rightMargin = 0;\n    this.active = false;\n    this.table.columnManager.headersElement.style.marginLeft = 0;\n    this.table.columnManager.element.style.paddingRight = 0;\n  }\n  initialize() {\n    this.subscribe(\"cell-layout\", this.layoutCell.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"column-width\", this.layout.bind(this));\n    this.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\n    this.subscribe(\"table-layout\", this.layout.bind(this));\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n    this.subscribe(\"columns-loading\", this.reset.bind(this));\n    this.subscribe(\"table-redraw\", this.layout.bind(this));\n  }\n  layoutCell(cell) {\n    this.layoutElement(cell.element, cell.column);\n  }\n\n  //initialize specific column\n  initializeColumn(column) {\n    var config = {\n      margin: 0,\n      edge: false\n    };\n    if (!column.isGroup) {\n      if (this.frozenCheck(column)) {\n        config.position = this.initializationMode;\n        if (this.initializationMode == \"left\") {\n          this.leftColumns.push(column);\n        } else {\n          this.rightColumns.unshift(column);\n        }\n        this.active = true;\n        column.modules.frozen = config;\n      } else {\n        this.initializationMode = \"right\";\n      }\n    }\n  }\n  frozenCheck(column) {\n    if (column.parent.isGroup && column.definition.frozen) {\n      console.warn(\"Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups\");\n    }\n    if (column.parent.isGroup) {\n      return this.frozenCheck(column.parent);\n    } else {\n      return column.definition.frozen;\n    }\n  }\n\n  //quick layout to smooth horizontal scrolling\n  scrollHorizontal() {\n    var rows;\n    if (this.active) {\n      clearTimeout(this.scrollEndTimer);\n\n      //layout all rows after scroll is complete\n      this.scrollEndTimer = setTimeout(() => {\n        this.layout();\n      }, 100);\n      rows = this.table.rowManager.getVisibleRows();\n      this.calcMargins();\n      this.layoutColumnPosition();\n      this.layoutCalcRows();\n      rows.forEach(row => {\n        if (row.type === \"row\") {\n          this.layoutRow(row);\n        }\n      });\n      this.table.rowManager.tableElement.style.marginRight = this.rightMargin;\n    }\n  }\n\n  //calculate margins for rows\n  calcMargins() {\n    this.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + \"px\";\n    this.table.columnManager.headersElement.style.marginLeft = this.leftMargin;\n    this.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + \"px\";\n    this.table.columnManager.element.style.paddingRight = this.rightMargin;\n\n    //calculate right frozen columns\n    this.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;\n  }\n\n  //layout calculation rows\n  layoutCalcRows() {\n    if (this.table.modExists(\"columnCalcs\")) {\n      if (this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow) {\n        this.layoutRow(this.table.modules.columnCalcs.topRow);\n      }\n      if (this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow) {\n        this.layoutRow(this.table.modules.columnCalcs.botRow);\n      }\n      if (this.table.modExists(\"groupRows\")) {\n        this.layoutGroupCalcs(this.table.modules.groupRows.getGroups());\n      }\n    }\n  }\n  layoutGroupCalcs(groups) {\n    groups.forEach(group => {\n      if (group.calcs.top) {\n        this.layoutRow(group.calcs.top);\n      }\n      if (group.calcs.bottom) {\n        this.layoutRow(group.calcs.bottom);\n      }\n      if (group.groupList && group.groupList.length) {\n        this.layoutGroupCalcs(group.groupList && group.groupList);\n      }\n    });\n  }\n\n  //calculate column positions and layout headers\n  layoutColumnPosition(allCells) {\n    var leftParents = [];\n    this.leftColumns.forEach((column, i) => {\n      column.modules.frozen.margin = this._calcSpace(this.leftColumns, i) + this.table.columnManager.scrollLeft + \"px\";\n      if (i == this.leftColumns.length - 1) {\n        column.modules.frozen.edge = true;\n      } else {\n        column.modules.frozen.edge = false;\n      }\n      if (column.parent.isGroup) {\n        var parentEl = this.getColGroupParentElement(column);\n        if (!leftParents.includes(parentEl)) {\n          this.layoutElement(parentEl, column);\n          leftParents.push(parentEl);\n        }\n        if (column.modules.frozen.edge) {\n          parentEl.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\n        }\n      } else {\n        this.layoutElement(column.getElement(), column);\n      }\n      if (allCells) {\n        column.cells.forEach(cell => {\n          this.layoutElement(cell.getElement(true), column);\n        });\n      }\n    });\n    this.rightColumns.forEach((column, i) => {\n      column.modules.frozen.margin = this.rightPadding - this._calcSpace(this.rightColumns, i + 1) + \"px\";\n      if (i == this.rightColumns.length - 1) {\n        column.modules.frozen.edge = true;\n      } else {\n        column.modules.frozen.edge = false;\n      }\n      if (column.parent.isGroup) {\n        this.layoutElement(this.getColGroupParentElement(column), column);\n      } else {\n        this.layoutElement(column.getElement(), column);\n      }\n      if (allCells) {\n        column.cells.forEach(cell => {\n          this.layoutElement(cell.getElement(true), column);\n        });\n      }\n    });\n  }\n  getColGroupParentElement(column) {\n    return column.parent.isGroup ? this.getColGroupParentElement(column.parent) : column.getElement();\n  }\n\n  //layout columns appropropriatly\n  layout() {\n    if (this.active) {\n      //calculate row padding\n      this.calcMargins();\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\") {\n          this.layoutRow(row);\n        }\n      });\n      this.layoutCalcRows();\n\n      //calculate left columns\n      this.layoutColumnPosition(true);\n      this.table.rowManager.tableElement.style.marginRight = this.rightMargin;\n    }\n  }\n  layoutRow(row) {\n    var rowEl = row.getElement();\n    rowEl.style.paddingLeft = this.leftMargin;\n    this.leftColumns.forEach(column => {\n      var cell = row.getCell(column);\n      if (cell) {\n        this.layoutElement(cell.getElement(true), column);\n      }\n    });\n    this.rightColumns.forEach(column => {\n      var cell = row.getCell(column);\n      if (cell) {\n        this.layoutElement(cell.getElement(true), column);\n      }\n    });\n  }\n  layoutElement(element, column) {\n    if (column.modules.frozen) {\n      element.style.position = \"absolute\";\n      element.style.left = column.modules.frozen.margin;\n      element.classList.add(\"tabulator-frozen\");\n      if (column.modules.frozen.edge) {\n        element.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\n      }\n    }\n  }\n  _calcSpace(columns, index) {\n    var width = 0;\n    for (let i = 0; i < index; i++) {\n      if (columns[i].visible) {\n        width += columns[i].getWidth();\n      }\n    }\n    return width;\n  }\n}\nFrozenColumns.moduleName = \"frozenColumns\";\nclass FrozenRows extends Module {\n  constructor(table) {\n    super(table);\n    this.topElement = document.createElement(\"div\");\n    this.rows = [];\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"freeze\", this.freezeRow.bind(this));\n    this.registerComponentFunction(\"row\", \"unfreeze\", this.unfreezeRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isFrozen\", this.isRowFrozen.bind(this));\n  }\n  initialize() {\n    this.rows = [];\n    this.topElement.classList.add(\"tabulator-frozen-rows-holder\");\n\n    // this.table.columnManager.element.append(this.topElement);\n    this.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\n    this.subscribe(\"row-deleting\", this.detachRow.bind(this));\n    this.registerDisplayHandler(this.getRows.bind(this), 10);\n  }\n  isRowFrozen(row) {\n    var index = this.rows.indexOf(row);\n    return index > -1;\n  }\n  isFrozen() {\n    return !!this.rows.length;\n  }\n\n  //filter frozen rows out of display data\n  getRows(rows) {\n    var output = rows.slice(0);\n    this.rows.forEach(function (row) {\n      var index = output.indexOf(row);\n      if (index > -1) {\n        output.splice(index, 1);\n      }\n    });\n    return output;\n  }\n  freezeRow(row) {\n    if (!row.modules.frozen) {\n      row.modules.frozen = true;\n      this.topElement.appendChild(row.getElement());\n      row.initialize();\n      row.normalizeHeight();\n      this.table.rowManager.adjustTableSize();\n      this.rows.push(row);\n      this.refreshData(false, \"display\");\n      this.styleRows();\n    } else {\n      console.warn(\"Freeze Error - Row is already frozen\");\n    }\n  }\n  unfreezeRow(row) {\n    var index = this.rows.indexOf(row);\n    if (row.modules.frozen) {\n      row.modules.frozen = false;\n      this.detachRow(row);\n      this.table.rowManager.adjustTableSize();\n      this.refreshData(false, \"display\");\n      if (this.rows.length) {\n        this.styleRows();\n      }\n    } else {\n      console.warn(\"Freeze Error - Row is already unfrozen\");\n    }\n  }\n  detachRow(row) {\n    var index = this.rows.indexOf(row);\n    if (index > -1) {\n      var rowEl = row.getElement();\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n      this.rows.splice(index, 1);\n    }\n  }\n  styleRows(row) {\n    this.rows.forEach((row, i) => {\n      this.table.rowManager.styleRow(row, i);\n    });\n  }\n}\nFrozenRows.moduleName = \"frozenRows\";\n\n//public group object\nclass GroupComponent {\n  constructor(group) {\n    this._group = group;\n    this.type = \"GroupComponent\";\n    return new Proxy(this, {\n      get: function (target, name, receiver) {\n        if (typeof target[name] !== \"undefined\") {\n          return target[name];\n        } else {\n          return target._group.table.componentFunctionBinder.handle(\"row\", target._group, name);\n        }\n      }\n    });\n  }\n  getKey() {\n    return this._group.key;\n  }\n  getField() {\n    return this._group.field;\n  }\n  getElement() {\n    return this._group.element;\n  }\n  getRows() {\n    return this._group.getRows(true);\n  }\n  getSubGroups() {\n    return this._group.getSubGroups(true);\n  }\n  getParentGroup() {\n    return this._group.parent ? this._group.parent.getComponent() : false;\n  }\n  isVisible() {\n    return this._group.visible;\n  }\n  show() {\n    this._group.show();\n  }\n  hide() {\n    this._group.hide();\n  }\n  toggle() {\n    this._group.toggleVisibility();\n  }\n  _getSelf() {\n    return this._group;\n  }\n  getTable() {\n    return this._group.groupManager.table;\n  }\n}\n\n//Group functions\nclass Group {\n  constructor(groupManager, parent, level, key, field, generator, oldGroup) {\n    this.groupManager = groupManager;\n    this.parent = parent;\n    this.key = key;\n    this.level = level;\n    this.field = field;\n    this.hasSubGroups = level < groupManager.groupIDLookups.length - 1;\n    this.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow;\n    this.type = \"group\"; //type of element\n    this.old = oldGroup;\n    this.rows = [];\n    this.groups = [];\n    this.groupList = [];\n    this.generator = generator;\n    this.elementContents = false;\n    this.height = 0;\n    this.outerHeight = 0;\n    this.initialized = false;\n    this.calcs = {};\n    this.initialized = false;\n    this.modules = {};\n    this.arrowElement = false;\n    this.visible = oldGroup ? oldGroup.visible : typeof groupManager.startOpen[level] !== \"undefined\" ? groupManager.startOpen[level] : groupManager.startOpen[0];\n    this.component = null;\n    this.createElements();\n    this.addBindings();\n    this.createValueGroups();\n  }\n  wipe() {\n    if (this.groupList.length) {\n      this.groupList.forEach(function (group) {\n        group.wipe();\n      });\n    } else {\n      this.rows.forEach(row => {\n        if (row.modules) {\n          delete row.modules.group;\n        }\n      });\n    }\n    this.element = false;\n    this.arrowElement = false;\n    this.elementContents = false;\n  }\n  createElements() {\n    var arrow = document.createElement(\"div\");\n    arrow.classList.add(\"tabulator-arrow\");\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"tabulator-row\");\n    this.element.classList.add(\"tabulator-group\");\n    this.element.classList.add(\"tabulator-group-level-\" + this.level);\n    this.element.setAttribute(\"role\", \"rowgroup\");\n    this.arrowElement = document.createElement(\"div\");\n    this.arrowElement.classList.add(\"tabulator-group-toggle\");\n    this.arrowElement.appendChild(arrow);\n\n    //setup movable rows\n    if (this.groupManager.table.options.movableRows !== false && this.groupManager.table.modExists(\"moveRow\")) {\n      this.groupManager.table.modules.moveRow.initializeGroupHeader(this);\n    }\n  }\n  createValueGroups() {\n    var level = this.level + 1;\n    if (this.groupManager.allowedValues && this.groupManager.allowedValues[level]) {\n      this.groupManager.allowedValues[level].forEach(value => {\n        this._createGroup(value, level);\n      });\n    }\n  }\n  addBindings() {\n    var dblTap, tapHold, tap, toggleElement;\n    if ((this.groupManager.table.options.groupContextMenu || this.groupManager.table.options.groupClickMenu) && this.groupManager.table.modExists(\"menu\")) {\n      this.groupManager.table.modules.menu.initializeGroup.call(this.groupManager.table.modules.menu, this);\n    }\n    if (this.groupManager.table.options.groupTap) {\n      tap = false;\n      this.element.addEventListener(\"touchstart\", e => {\n        tap = true;\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        if (tap) {\n          this.groupManager.table.options.groupTap(e, this.getComponent());\n        }\n        tap = false;\n      });\n    }\n    if (this.groupManager.table.options.groupDblTap) {\n      dblTap = null;\n      this.element.addEventListener(\"touchend\", e => {\n        if (dblTap) {\n          clearTimeout(dblTap);\n          dblTap = null;\n          this.groupManager.table.options.groupDblTap(e, this.getComponent());\n        } else {\n          dblTap = setTimeout(() => {\n            clearTimeout(dblTap);\n            dblTap = null;\n          }, 300);\n        }\n      });\n    }\n    if (this.groupManager.table.options.groupTapHold) {\n      tapHold = null;\n      this.element.addEventListener(\"touchstart\", e => {\n        clearTimeout(tapHold);\n        tapHold = setTimeout(() => {\n          clearTimeout(tapHold);\n          tapHold = null;\n          tap = false;\n          this.groupManager.table.options.groupTapHold(e, this.getComponent());\n        }, 1000);\n      }, {\n        passive: true\n      });\n      this.element.addEventListener(\"touchend\", e => {\n        clearTimeout(tapHold);\n        tapHold = null;\n      });\n    }\n    if (this.groupManager.table.options.groupToggleElement) {\n      toggleElement = this.groupManager.table.options.groupToggleElement == \"arrow\" ? this.arrowElement : this.element;\n      toggleElement.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        this.toggleVisibility();\n      });\n    }\n  }\n  _createGroup(groupID, level) {\n    var groupKey = level + \"_\" + groupID;\n    var group = new Group(this.groupManager, this, level, groupID, this.groupManager.groupIDLookups[level].field, this.groupManager.headerGenerator[level] || this.groupManager.headerGenerator[0], this.old ? this.old.groups[groupKey] : false);\n    this.groups[groupKey] = group;\n    this.groupList.push(group);\n  }\n  _addRowToGroup(row) {\n    var level = this.level + 1;\n    if (this.hasSubGroups) {\n      var groupID = this.groupManager.groupIDLookups[level].func(row.getData()),\n        groupKey = level + \"_\" + groupID;\n      if (this.groupManager.allowedValues && this.groupManager.allowedValues[level]) {\n        if (this.groups[groupKey]) {\n          this.groups[groupKey].addRow(row);\n        }\n      } else {\n        if (!this.groups[groupKey]) {\n          this._createGroup(groupID, level);\n        }\n        this.groups[groupKey].addRow(row);\n      }\n    }\n  }\n  _addRow(row) {\n    this.rows.push(row);\n    row.modules.group = this;\n  }\n  insertRow(row, to, after) {\n    var data = this.conformRowData({});\n    row.updateData(data);\n    var toIndex = this.rows.indexOf(to);\n    if (toIndex > -1) {\n      if (after) {\n        this.rows.splice(toIndex + 1, 0, row);\n      } else {\n        this.rows.splice(toIndex, 0, row);\n      }\n    } else {\n      if (after) {\n        this.rows.push(row);\n      } else {\n        this.rows.unshift(row);\n      }\n    }\n    row.modules.group = this;\n    this.generateGroupHeaderContents();\n    if (this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\") {\n      this.groupManager.table.modules.columnCalcs.recalcGroup(this);\n    }\n    this.groupManager.updateGroupRows(true);\n  }\n  scrollHeader(left) {\n    this.arrowElement.style.marginLeft = left;\n    this.groupList.forEach(function (child) {\n      child.scrollHeader(left);\n    });\n  }\n  getRowIndex(row) {}\n\n  //update row data to match grouping contraints\n  conformRowData(data) {\n    if (this.field) {\n      data[this.field] = this.key;\n    } else {\n      console.warn(\"Data Conforming Error - Cannot conform row data to match new group as groupBy is a function\");\n    }\n    if (this.parent) {\n      data = this.parent.conformRowData(data);\n    }\n    return data;\n  }\n  removeRow(row) {\n    var index = this.rows.indexOf(row);\n    var el = row.getElement();\n    if (index > -1) {\n      this.rows.splice(index, 1);\n    }\n    if (!this.groupManager.table.options.groupValues && !this.rows.length) {\n      if (this.parent) {\n        this.parent.removeGroup(this);\n      } else {\n        this.groupManager.removeGroup(this);\n      }\n      this.groupManager.updateGroupRows(true);\n    } else {\n      if (el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n      this.generateGroupHeaderContents();\n      if (this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\") {\n        this.groupManager.table.modules.columnCalcs.recalcGroup(this);\n      }\n    }\n  }\n  removeGroup(group) {\n    var groupKey = group.level + \"_\" + group.key,\n      index;\n    if (this.groups[groupKey]) {\n      delete this.groups[groupKey];\n      index = this.groupList.indexOf(group);\n      if (index > -1) {\n        this.groupList.splice(index, 1);\n      }\n      if (!this.groupList.length) {\n        if (this.parent) {\n          this.parent.removeGroup(this);\n        } else {\n          this.groupManager.removeGroup(this);\n        }\n      }\n    }\n  }\n  getHeadersAndRows(noCalc) {\n    var output = [];\n    output.push(this);\n    this._visSet();\n    if (this.visible) {\n      if (this.groupList.length) {\n        this.groupList.forEach(function (group) {\n          output = output.concat(group.getHeadersAndRows(noCalc));\n        });\n      } else {\n        if (!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasTopCalcs()) {\n          if (this.calcs.top) {\n            this.calcs.top.detachElement();\n            this.calcs.top.deleteCells();\n          }\n          this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\n          output.push(this.calcs.top);\n        }\n        output = output.concat(this.rows);\n        if (!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()) {\n          if (this.calcs.bottom) {\n            this.calcs.bottom.detachElement();\n            this.calcs.bottom.deleteCells();\n          }\n          this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\n          output.push(this.calcs.bottom);\n        }\n      }\n    } else {\n      if (!this.groupList.length && this.groupManager.table.options.columnCalcs != \"table\") {\n        if (this.groupManager.table.modExists(\"columnCalcs\")) {\n          if (!noCalc && this.groupManager.table.modules.columnCalcs.hasTopCalcs()) {\n            if (this.calcs.top) {\n              this.calcs.top.detachElement();\n              this.calcs.top.deleteCells();\n            }\n            if (this.groupManager.table.options.groupClosedShowCalcs) {\n              this.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\n              output.push(this.calcs.top);\n            }\n          }\n          if (!noCalc && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()) {\n            if (this.calcs.bottom) {\n              this.calcs.bottom.detachElement();\n              this.calcs.bottom.deleteCells();\n            }\n            if (this.groupManager.table.options.groupClosedShowCalcs) {\n              this.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\n              output.push(this.calcs.bottom);\n            }\n          }\n        }\n      }\n    }\n    return output;\n  }\n  getData(visible, transform) {\n    var output = [];\n    this._visSet();\n    if (!visible || visible && this.visible) {\n      this.rows.forEach(row => {\n        output.push(row.getData(transform || \"data\"));\n      });\n    }\n    return output;\n  }\n  getRowCount() {\n    var count = 0;\n    if (this.groupList.length) {\n      this.groupList.forEach(group => {\n        count += group.getRowCount();\n      });\n    } else {\n      count = this.rows.length;\n    }\n    return count;\n  }\n  toggleVisibility() {\n    if (this.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  hide() {\n    this.visible = false;\n    if (this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination) {\n      this.element.classList.remove(\"tabulator-group-visible\");\n      if (this.groupList.length) {\n        this.groupList.forEach(group => {\n          var rows = group.getHeadersAndRows();\n          rows.forEach(row => {\n            row.detachElement();\n          });\n        });\n      } else {\n        this.rows.forEach(row => {\n          var rowEl = row.getElement();\n          rowEl.parentNode.removeChild(rowEl);\n        });\n      }\n      this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\n      this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\n    } else {\n      this.groupManager.updateGroupRows(true);\n    }\n    this.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), false);\n  }\n  show() {\n    this.visible = true;\n    if (this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination) {\n      this.element.classList.add(\"tabulator-group-visible\");\n      var prev = this.generateElement();\n      if (this.groupList.length) {\n        this.groupList.forEach(group => {\n          var rows = group.getHeadersAndRows();\n          rows.forEach(row => {\n            var rowEl = row.getElement();\n            prev.parentNode.insertBefore(rowEl, prev.nextSibling);\n            row.initialize();\n            prev = rowEl;\n          });\n        });\n      } else {\n        this.rows.forEach(row => {\n          var rowEl = row.getElement();\n          prev.parentNode.insertBefore(rowEl, prev.nextSibling);\n          row.initialize();\n          prev = rowEl;\n        });\n      }\n      this.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\n      this.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\n    } else {\n      this.groupManager.updateGroupRows(true);\n    }\n    this.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), true);\n  }\n  _visSet() {\n    var data = [];\n    if (typeof this.visible == \"function\") {\n      this.rows.forEach(function (row) {\n        data.push(row.getData());\n      });\n      this.visible = this.visible(this.key, this.getRowCount(), data, this.getComponent());\n    }\n  }\n  getRowGroup(row) {\n    var match = false;\n    if (this.groupList.length) {\n      this.groupList.forEach(function (group) {\n        var result = group.getRowGroup(row);\n        if (result) {\n          match = result;\n        }\n      });\n    } else {\n      if (this.rows.find(function (item) {\n        return item === row;\n      })) {\n        match = this;\n      }\n    }\n    return match;\n  }\n  getSubGroups(component) {\n    var output = [];\n    this.groupList.forEach(function (child) {\n      output.push(component ? child.getComponent() : child);\n    });\n    return output;\n  }\n  getRows(compoment) {\n    var output = [];\n    this.rows.forEach(function (row) {\n      output.push(compoment ? row.getComponent() : row);\n    });\n    return output;\n  }\n  generateGroupHeaderContents() {\n    var data = [];\n    this.rows.forEach(function (row) {\n      data.push(row.getData());\n    });\n    this.elementContents = this.generator(this.key, this.getRowCount(), data, this.getComponent());\n    while (this.element.firstChild) this.element.removeChild(this.element.firstChild);\n    if (typeof this.elementContents === \"string\") {\n      this.element.innerHTML = this.elementContents;\n    } else {\n      this.element.appendChild(this.elementContents);\n    }\n    this.element.insertBefore(this.arrowElement, this.element.firstChild);\n  }\n  getPath() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    path.unshift(this.key);\n    if (this.parent) {\n      this.parent.getPath(path);\n    }\n    return path;\n  }\n\n  ////////////// Standard Row Functions //////////////\n\n  getElement() {\n    return this.elementContents ? this.element : this.generateElement();\n  }\n  generateElement() {\n    this.addBindings = false;\n    this._visSet();\n    if (this.visible) {\n      this.element.classList.add(\"tabulator-group-visible\");\n    } else {\n      this.element.classList.remove(\"tabulator-group-visible\");\n    }\n    for (var i = 0; i < this.element.childNodes.length; ++i) {\n      this.element.childNodes[i].parentNode.removeChild(this.element.childNodes[i]);\n    }\n    this.generateGroupHeaderContents();\n\n    // this.addBindings();\n\n    return this.element;\n  }\n  detachElement() {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  //normalize the height of elements in the row\n  normalizeHeight() {\n    this.setHeight(this.element.clientHeight);\n  }\n  initialize(force) {\n    if (!this.initialized || force) {\n      this.normalizeHeight();\n      this.initialized = true;\n    }\n  }\n  reinitialize() {\n    this.initialized = false;\n    this.height = 0;\n    if (Helpers.elVisible(this.element)) {\n      this.initialize(true);\n    }\n  }\n  setHeight(height) {\n    if (this.height != height) {\n      this.height = height;\n      this.outerHeight = this.element.offsetHeight;\n    }\n  }\n\n  //return rows outer height\n  getHeight() {\n    return this.outerHeight;\n  }\n  getGroup() {\n    return this;\n  }\n  reinitializeHeight() {}\n  calcHeight() {}\n  setCellHeight() {}\n  clearCellHeight() {}\n  deinitializeHeight() {}\n\n  //////////////// Object Generation /////////////////\n  getComponent() {\n    if (!this.component) {\n      this.component = new GroupComponent(this);\n    }\n    return this.component;\n  }\n}\nclass GroupRows extends Module {\n  constructor(table) {\n    super(table);\n    this.groupIDLookups = false; //enable table grouping and set field to group by\n    this.startOpen = [function () {\n      return false;\n    }]; //starting state of group\n    this.headerGenerator = [function () {\n      return \"\";\n    }];\n    this.groupList = []; //ordered list of groups\n    this.allowedValues = false;\n    this.groups = {}; //hold row groups\n    this.displayIndex = 0; //index in display pipeline\n\n    this.displayHandler = this.getRows.bind(this);\n\n    //register table options\n    this.registerTableOption(\"groupBy\", false); //enable table grouping and set field to group by\n    this.registerTableOption(\"groupStartOpen\", true); //starting state of group\n    this.registerTableOption(\"groupValues\", false);\n    this.registerTableOption(\"groupUpdateOnCellEdit\", false);\n    this.registerTableOption(\"groupHeader\", false); //header generation function\n    this.registerTableOption(\"groupHeaderPrint\", null);\n    this.registerTableOption(\"groupHeaderClipboard\", null);\n    this.registerTableOption(\"groupHeaderHtmlOutput\", null);\n    this.registerTableOption(\"groupHeaderDownload\", null);\n    this.registerTableOption(\"groupToggleElement\", \"arrow\");\n    this.registerTableOption(\"groupClosedShowCalcs\", false);\n\n    //register table functions\n    this.registerTableFunction(\"setGroupBy\", this.setGroupBy.bind(this));\n    this.registerTableFunction(\"setGroupValues\", this.setGroupValues.bind(this));\n    this.registerTableFunction(\"setGroupStartOpen\", this.setGroupStartOpen.bind(this));\n    this.registerTableFunction(\"setGroupHeader\", this.setGroupHeader.bind(this));\n    this.registerTableFunction(\"getGroups\", this.userGetGroups.bind(this));\n    this.registerTableFunction(\"getGroupedData\", this.userGetGroupedData.bind(this));\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"getGroup\", this.rowGetGroup.bind(this));\n  }\n\n  //initialize group configuration\n  initialize() {\n    if (this.table.options.groupBy) {\n      this.configureGroupSetup();\n      if (this.table.options.groupUpdateOnCellEdit) {\n        this.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\n        this.subscribe(\"row-data-changed\", this.reassignRowToGroup.bind(this), 0);\n      }\n      this.subscribe(\"row-deleting\", this.rowDeleting.bind(this));\n      this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n      this.subscribe(\"scroll-horizontal\", this.scrollHeaders.bind(this));\n      this.subscribe(\"rows-wipe\", this.wipe.bind(this));\n      this.subscribe(\"rows-added\", this.rowsUpdated.bind(this));\n      this.subscribe(\"row-moving\", this.rowMoving.bind(this));\n      this.subscribe(\"row-adding-index\", this.rowAddingIndex.bind(this));\n      this.subscribe(\"rows-sample\", this.rowSample.bind(this));\n      this.subscribe(\"render-virtual-fill\", this.virtualRenderFill.bind(this));\n      this.registerDisplayHandler(this.displayHandler, 20);\n      this.initialized = true;\n    }\n  }\n  configureGroupSetup() {\n    if (this.table.options.groupBy) {\n      var groupBy = this.table.options.groupBy,\n        startOpen = this.table.options.groupStartOpen,\n        groupHeader = this.table.options.groupHeader;\n      this.allowedValues = this.table.options.groupValues;\n      if (Array.isArray(groupBy) && Array.isArray(groupHeader) && groupBy.length > groupHeader.length) {\n        console.warn(\"Error creating group headers, groupHeader array is shorter than groupBy array\");\n      }\n      this.headerGenerator = [function () {\n        return \"\";\n      }];\n      this.startOpen = [function () {\n        return false;\n      }]; //starting state of group\n\n      this.langBind(\"groups|item\", (langValue, lang) => {\n        this.headerGenerator[0] = (value, count, data) => {\n          //header layout function\n          return (typeof value === \"undefined\" ? \"\" : value) + \"<span>(\" + count + \" \" + (count === 1 ? langValue : lang.groups.items) + \")</span>\";\n        };\n      });\n      this.groupIDLookups = [];\n      if (Array.isArray(groupBy) || groupBy) {\n        if (this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"table\" && this.table.options.columnCalcs != \"both\") {\n          this.table.modules.columnCalcs.removeCalcs();\n        }\n      } else {\n        if (this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"group\") {\n          var cols = this.table.columnManager.getRealColumns();\n          cols.forEach(col => {\n            if (col.definition.topCalc) {\n              this.table.modules.columnCalcs.initializeTopRow();\n            }\n            if (col.definition.bottomCalc) {\n              this.table.modules.columnCalcs.initializeBottomRow();\n            }\n          });\n        }\n      }\n      if (!Array.isArray(groupBy)) {\n        groupBy = [groupBy];\n      }\n      groupBy.forEach((group, i) => {\n        var lookupFunc, column;\n        if (typeof group == \"function\") {\n          lookupFunc = group;\n        } else {\n          column = this.table.columnManager.getColumnByField(group);\n          if (column) {\n            lookupFunc = function (data) {\n              return column.getFieldValue(data);\n            };\n          } else {\n            lookupFunc = function (data) {\n              return data[group];\n            };\n          }\n        }\n        this.groupIDLookups.push({\n          field: typeof group === \"function\" ? false : group,\n          func: lookupFunc,\n          values: this.allowedValues ? this.allowedValues[i] : false\n        });\n      });\n      if (startOpen) {\n        if (!Array.isArray(startOpen)) {\n          startOpen = [startOpen];\n        }\n        startOpen.forEach(level => {});\n        this.startOpen = startOpen;\n      }\n      if (groupHeader) {\n        this.headerGenerator = Array.isArray(groupHeader) ? groupHeader : [groupHeader];\n      }\n    }\n  }\n  rowSample(rows, prevValue) {\n    var group = this.getGroups(false)[0];\n    prevValue.push(group.getRows(false)[0]);\n    return prevValue;\n  }\n  virtualRenderFill() {\n    var el = this.table.rowManager.tableElement;\n    var rows = this.table.rowManager.getVisibleRows();\n    rows = rows.filter(row => {\n      return row.type !== \"group\";\n    });\n    el.style.minWidth = !rows.length ? this.table.columnManager.getWidth() + \"px\" : \"\";\n\n    // if(this.table.options.groupBy){\n    // \tif(this.layoutMode() != \"fitDataFill\" && rowsCount == this.table.modules.groupRows.countGroups()){\n    // \t\tel.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n    // \t}\n    // }\n  }\n\n  rowAddingIndex(row, index, top) {\n    this.assignRowToGroup(row);\n    var groupRows = row.modules.group.rows;\n    if (groupRows.length > 1) {\n      if (!index || index && groupRows.indexOf(index) == -1) {\n        if (top) {\n          if (groupRows[0] !== row) {\n            index = groupRows[0];\n            this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n          }\n        } else {\n          if (groupRows[groupRows.length - 1] !== row) {\n            index = groupRows[groupRows.length - 1];\n            this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n          }\n        }\n      } else {\n        this.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\n      }\n    }\n    return index;\n  }\n  trackChanges() {\n    this.dispatch(\"group-changed\");\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  setGroupBy(groups) {\n    this.table.options.groupBy = groups;\n    if (!this.initialized) {\n      this.initialize();\n    } else {\n      this.configureGroupSetup();\n    }\n    this.refreshData();\n    this.trackChanges();\n  }\n  setGroupValues(groupValues) {\n    this.table.options.groupValues = groupValues;\n    this.configureGroupSetup();\n    this.refreshData();\n    this.trackChanges();\n  }\n  setGroupStartOpen(values) {\n    this.table.options.groupStartOpen = values;\n    this.configureGroupSetup();\n    if (this.table.options.groupBy) {\n      this.refreshData();\n      this.trackChanges();\n    } else {\n      console.warn(\"Grouping Update - cant refresh view, no groups have been set\");\n    }\n  }\n  setGroupHeader(values) {\n    this.table.options.groupHeader = values;\n    this.configureGroupSetup();\n    if (this.table.options.groupBy) {\n      this.refreshData();\n      this.trackChanges();\n    } else {\n      console.warn(\"Grouping Update - cant refresh view, no groups have been set\");\n    }\n  }\n  userGetGroups(values) {\n    return this.getGroups(true);\n  }\n\n  // get grouped table data in the same format as getData()\n  userGetGroupedData() {\n    return this.table.options.groupBy ? this.getGroupedData() : this.getData();\n  }\n\n  ///////////////////////////////////////\n  ///////// Component Functions /////////\n  ///////////////////////////////////////\n\n  rowGetGroup(row) {\n    return row.modules.group ? row.modules.group.getComponent() : false;\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  rowMoving(from, to, after) {\n    if (!after && to instanceof Group) {\n      to = this.table.rowManager.prevDisplayRow(from) || to;\n    }\n    var toGroup = to instanceof Group ? to : to.modules.group;\n    var fromGroup = from instanceof Group ? from : from.modules.group;\n    if (toGroup === fromGroup) {\n      this.table.rowManager.moveRowInArray(toGroup.rows, from, to, after);\n    } else {\n      if (fromGroup) {\n        fromGroup.removeRow(from);\n      }\n      toGroup.insertRow(from, to, after);\n    }\n  }\n  rowDeleting(row) {\n    //remove from group\n    if (row.modules.group) {\n      row.modules.group.removeRow(row);\n    }\n  }\n  rowsUpdated(row) {\n    this.updateGroupRows(true);\n  }\n  cellUpdated(cell) {\n    this.reassignRowToGroup(cell.row);\n  }\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n  getDisplayIndex() {\n    return this.displayIndex;\n  }\n\n  //return appropriate rows with group headers\n  getRows(rows) {\n    if (this.table.options.groupBy && this.groupIDLookups.length) {\n      this.dispatchExternal(\"dataGrouping\");\n      this.generateGroups(rows);\n      if (this.subscribedExternal(\"dataGrouped\")) {\n        this.dispatchExternal(\"dataGrouped\", this.getGroups(true));\n      }\n      return this.updateGroupRows();\n    } else {\n      return rows.slice(0);\n    }\n  }\n  getGroups(component) {\n    var groupComponents = [];\n    this.groupList.forEach(function (group) {\n      groupComponents.push(component ? group.getComponent() : group);\n    });\n    return groupComponents;\n  }\n  getChildGroups(group) {\n    var groupComponents = [];\n    if (!group) {\n      group = this;\n    }\n    group.groupList.forEach(child => {\n      if (child.groupList.length) {\n        groupComponents = groupComponents.concat(this.getChildGroups(child));\n      } else {\n        groupComponents.push(child);\n      }\n    });\n    return groupComponents;\n  }\n  wipe() {\n    this.groupList.forEach(function (group) {\n      group.wipe();\n    });\n  }\n  pullGroupListData(groupList) {\n    var groupListData = [];\n    groupList.forEach(group => {\n      var groupHeader = {};\n      groupHeader.level = 0;\n      groupHeader.rowCount = 0;\n      groupHeader.headerContent = \"\";\n      var childData = [];\n      if (group.hasSubGroups) {\n        childData = this.pullGroupListData(group.groupList);\n        groupHeader.level = group.level;\n        groupHeader.rowCount = childData.length - group.groupList.length; // data length minus number of sub-headers\n        groupHeader.headerContent = group.generator(group.key, groupHeader.rowCount, group.rows, group);\n        groupListData.push(groupHeader);\n        groupListData = groupListData.concat(childData);\n      } else {\n        groupHeader.level = group.level;\n        groupHeader.headerContent = group.generator(group.key, group.rows.length, group.rows, group);\n        groupHeader.rowCount = group.getRows().length;\n        groupListData.push(groupHeader);\n        group.getRows().forEach(row => {\n          groupListData.push(row.getData(\"data\"));\n        });\n      }\n    });\n    return groupListData;\n  }\n  getGroupedData() {\n    return this.pullGroupListData(this.groupList);\n  }\n  getRowGroup(row) {\n    var match = false;\n    this.groupList.forEach(group => {\n      var result = group.getRowGroup(row);\n      if (result) {\n        match = result;\n      }\n    });\n    return match;\n  }\n  countGroups() {\n    return this.groupList.length;\n  }\n  generateGroups(rows) {\n    var oldGroups = this.groups;\n    this.groups = {};\n    this.groupList = [];\n    if (this.allowedValues && this.allowedValues[0]) {\n      this.allowedValues[0].forEach(value => {\n        this.createGroup(value, 0, oldGroups);\n      });\n      rows.forEach(row => {\n        this.assignRowToExistingGroup(row, oldGroups);\n      });\n    } else {\n      rows.forEach(row => {\n        this.assignRowToGroup(row, oldGroups);\n      });\n    }\n  }\n  createGroup(groupID, level, oldGroups) {\n    var groupKey = level + \"_\" + groupID,\n      group;\n    oldGroups = oldGroups || [];\n    group = new Group(this, false, level, groupID, this.groupIDLookups[0].field, this.headerGenerator[0], oldGroups[groupKey]);\n    this.groups[groupKey] = group;\n    this.groupList.push(group);\n  }\n  assignRowToExistingGroup(row, oldGroups) {\n    var groupID = this.groupIDLookups[0].func(row.getData()),\n      groupKey = \"0_\" + groupID;\n    if (this.groups[groupKey]) {\n      this.groups[groupKey].addRow(row);\n    }\n  }\n  assignRowToGroup(row, oldGroups) {\n    var groupID = this.groupIDLookups[0].func(row.getData()),\n      newGroupNeeded = !this.groups[\"0_\" + groupID];\n    if (newGroupNeeded) {\n      this.createGroup(groupID, 0, oldGroups);\n    }\n    this.groups[\"0_\" + groupID].addRow(row);\n    return !newGroupNeeded;\n  }\n  reassignRowToGroup(row) {\n    if (row.type === \"row\") {\n      var oldRowGroup = row.modules.group,\n        oldGroupPath = oldRowGroup.getPath(),\n        newGroupPath = this.getExpectedPath(row),\n        samePath = true;\n\n      // figure out if new group path is the same as old group path\n      var samePath = oldGroupPath.length == newGroupPath.length && oldGroupPath.every((element, index) => {\n        return element === newGroupPath[index];\n      });\n\n      // refresh if they new path and old path aren't the same (aka the row's groupings have changed)\n      if (!samePath) {\n        oldRowGroup.removeRow(row);\n        this.assignRowToGroup(row, this.groups);\n        this.refreshData(true);\n      }\n    }\n  }\n  getExpectedPath(row) {\n    var groupPath = [],\n      rowData = row.getData();\n    this.groupIDLookups.forEach(groupId => {\n      groupPath.push(groupId.func(rowData));\n    });\n    return groupPath;\n  }\n  updateGroupRows(force) {\n    var output = [];\n    this.groupList.forEach(group => {\n      output = output.concat(group.getHeadersAndRows());\n    });\n    if (force) {\n      this.refreshData(true, this.displayHandler);\n    }\n    return output;\n  }\n  scrollHeaders(left) {\n    if (this.table.options.renderHorizontal === \"virtual\") {\n      left -= this.table.columnManager.renderer.vDomPadLeft;\n    }\n    left = left + \"px\";\n    this.groupList.forEach(group => {\n      group.scrollHeader(left);\n    });\n  }\n  removeGroup(group) {\n    var groupKey = group.level + \"_\" + group.key,\n      index;\n    if (this.groups[groupKey]) {\n      delete this.groups[groupKey];\n      index = this.groupList.indexOf(group);\n      if (index > -1) {\n        this.groupList.splice(index, 1);\n      }\n    }\n  }\n}\nGroupRows.moduleName = \"groupRows\";\nvar defaultUndoers = {\n  cellEdit: function (action) {\n    action.component.setValueProcessData(action.data.oldValue);\n    action.component.cellRendered();\n  },\n  rowAdd: function (action) {\n    action.component.deleteActual();\n  },\n  rowDelete: function (action) {\n    var newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      this.table.modules.groupRows.updateGroupRows(true);\n    }\n    this._rebindRow(action.component, newRow);\n  },\n  rowMove: function (action) {\n    this.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posFrom], !action.data.after);\n    this.table.rowManager.redraw();\n  }\n};\nvar defaultRedoers = {\n  cellEdit: function (action) {\n    action.component.setValueProcessData(action.data.newValue);\n    action.component.cellRendered();\n  },\n  rowAdd: function (action) {\n    var newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\n    if (this.table.options.groupBy && this.table.modExists(\"groupRows\")) {\n      this.table.modules.groupRows.updateGroupRows(true);\n    }\n    this._rebindRow(action.component, newRow);\n  },\n  rowDelete: function (action) {\n    action.component.deleteActual();\n  },\n  rowMove: function (action) {\n    this.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posTo], action.data.after);\n    this.table.rowManager.redraw();\n  }\n};\nclass History extends Module {\n  constructor(table) {\n    super(table);\n    this.history = [];\n    this.index = -1;\n    this.registerTableOption(\"history\", false); //enable edit history\n  }\n\n  initialize() {\n    if (this.table.options.history) {\n      this.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\n      this.subscribe(\"cell-delete\", this.clearComponentHistory.bind(this));\n      this.subscribe(\"row-delete\", this.rowDeleted.bind(this));\n      this.subscribe(\"rows-wipe\", this.clear.bind(this));\n      this.subscribe(\"row-added\", this.rowAdded.bind(this));\n      this.subscribe(\"row-move\", this.rowMoved.bind(this));\n    }\n    this.registerTableFunction(\"undo\", this.undo.bind(this));\n    this.registerTableFunction(\"redo\", this.redo.bind(this));\n    this.registerTableFunction(\"getHistoryUndoSize\", this.getHistoryUndoSize.bind(this));\n    this.registerTableFunction(\"getHistoryRedoSize\", this.getHistoryRedoSize.bind(this));\n    this.registerTableFunction(\"clearHistory\", this.clear.bind(this));\n  }\n  rowMoved(from, to, after) {\n    this.action(\"rowMove\", from, {\n      posFrom: this.table.rowManager.getRowPosition(from),\n      posTo: this.table.rowManager.getRowPosition(to),\n      to: to,\n      after: after\n    });\n  }\n  rowAdded(row, data, pos, index) {\n    this.action(\"rowAdd\", row, {\n      data: data,\n      pos: pos,\n      index: index\n    });\n  }\n  rowDeleted(row) {\n    var index, rows;\n    if (this.table.options.groupBy) {\n      rows = row.getComponent().getGroup().rows;\n      index = rows.indexOf(row);\n      if (index) {\n        index = rows[index - 1];\n      }\n    } else {\n      index = row.table.rowManager.getRowIndex(row);\n      if (index) {\n        index = row.table.rowManager.rows[index - 1];\n      }\n    }\n    this.action(\"rowDelete\", row, {\n      data: row.getData(),\n      pos: !index,\n      index: index\n    });\n  }\n  cellUpdated(cell) {\n    this.action(\"cellEdit\", cell, {\n      oldValue: cell.oldValue,\n      newValue: cell.value\n    });\n  }\n  clear() {\n    this.history = [];\n    this.index = -1;\n  }\n  action(type, component, data) {\n    this.history = this.history.slice(0, this.index + 1);\n    this.history.push({\n      type: type,\n      component: component,\n      data: data\n    });\n    this.index++;\n  }\n  getHistoryUndoSize() {\n    return this.index + 1;\n  }\n  getHistoryRedoSize() {\n    return this.history.length - (this.index + 1);\n  }\n  clearComponentHistory(component) {\n    var index = this.history.findIndex(function (item) {\n      return item.component === component;\n    });\n    if (index > -1) {\n      this.history.splice(index, 1);\n      if (index <= this.index) {\n        this.index--;\n      }\n      this.clearComponentHistory(component);\n    }\n  }\n  undo() {\n    if (this.index > -1) {\n      let action = this.history[this.index];\n      History.undoers[action.type].call(this, action);\n      this.index--;\n      this.dispatchExternal(\"historyUndo\", action.type, action.component.getComponent(), action.data);\n      return true;\n    } else {\n      console.warn(\"History Undo Error - No more history to undo\");\n      return false;\n    }\n  }\n  redo() {\n    if (this.history.length - 1 > this.index) {\n      this.index++;\n      let action = this.history[this.index];\n      History.redoers[action.type].call(this, action);\n      this.dispatchExternal(\"historyRedo\", action.type, action.component.getComponent(), action.data);\n      return true;\n    } else {\n      console.warn(\"History Redo Error - No more history to redo\");\n      return false;\n    }\n  }\n\n  //rebind rows to new element after deletion\n  _rebindRow(oldRow, newRow) {\n    this.history.forEach(function (action) {\n      if (action.component instanceof Row) {\n        if (action.component === oldRow) {\n          action.component = newRow;\n        }\n      } else if (action.component instanceof Cell) {\n        if (action.component.row === oldRow) {\n          var field = action.component.column.getField();\n          if (field) {\n            action.component = newRow.getCell(field);\n          }\n        }\n      }\n    });\n  }\n}\nHistory.moduleName = \"history\";\n\n//load defaults\nHistory.undoers = defaultUndoers;\nHistory.redoers = defaultRedoers;\nclass HtmlTableImport extends Module {\n  constructor(table) {\n    super(table);\n    this.fieldIndex = [];\n    this.hasIndex = false;\n  }\n  initialize() {\n    this.tableElementCheck();\n  }\n  tableElementCheck() {\n    if (this.table.originalElement && this.table.originalElement.tagName === \"TABLE\") {\n      this.parseTable();\n    }\n  }\n  parseTable() {\n    var element = this.table.originalElement,\n      options = this.table.options,\n      columns = options.columns,\n      headers = element.getElementsByTagName(\"th\"),\n      rows = element.getElementsByTagName(\"tbody\")[0],\n      data = [];\n    this.hasIndex = false;\n    this.dispatchExternal(\"htmlImporting\");\n    rows = rows ? rows.getElementsByTagName(\"tr\") : [];\n\n    //check for Tabulator inline options\n    this._extractOptions(element, options);\n    if (headers.length) {\n      this._extractHeaders(headers, rows);\n    } else {\n      this._generateBlankHeaders(headers, rows);\n    }\n\n    //iterate through table rows and build data set\n    for (var index = 0; index < rows.length; index++) {\n      var row = rows[index],\n        cells = row.getElementsByTagName(\"td\"),\n        item = {};\n\n      //create index if the dont exist in table\n      if (!this.hasIndex) {\n        item[options.index] = index;\n      }\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        if (typeof this.fieldIndex[i] !== \"undefined\") {\n          item[this.fieldIndex[i]] = cell.innerHTML;\n        }\n      }\n\n      //add row data to item\n      data.push(item);\n    }\n    options.data = data;\n    this.dispatchExternal(\"htmlImported\");\n  }\n\n  //extract tabulator attribute options\n  _extractOptions(element, options, defaultOptions) {\n    var attributes = element.attributes;\n    var optionsArr = defaultOptions ? Object.keys(defaultOptions) : Object.keys(options);\n    var optionsList = {};\n    optionsArr.forEach(item => {\n      optionsList[item.toLowerCase()] = item;\n    });\n    for (var index in attributes) {\n      var attrib = attributes[index];\n      var name;\n      if (attrib && typeof attrib == \"object\" && attrib.name && attrib.name.indexOf(\"tabulator-\") === 0) {\n        name = attrib.name.replace(\"tabulator-\", \"\");\n        if (typeof optionsList[name] !== \"undefined\") {\n          options[optionsList[name]] = this._attribValue(attrib.value);\n        }\n      }\n    }\n  }\n\n  //get value of attribute\n  _attribValue(value) {\n    if (value === \"true\") {\n      return true;\n    }\n    if (value === \"false\") {\n      return false;\n    }\n    return value;\n  }\n\n  //find column if it has already been defined\n  _findCol(title) {\n    var match = this.table.options.columns.find(column => {\n      return column.title === title;\n    });\n    return match || false;\n  }\n\n  //extract column from headers\n  _extractHeaders(headers, rows) {\n    for (var index = 0; index < headers.length; index++) {\n      var header = headers[index],\n        exists = false,\n        col = this._findCol(header.textContent),\n        width;\n      if (col) {\n        exists = true;\n      } else {\n        col = {\n          title: header.textContent.trim()\n        };\n      }\n      if (!col.field) {\n        col.field = header.textContent.trim().toLowerCase().replace(\" \", \"_\");\n      }\n      width = header.getAttribute(\"width\");\n      if (width && !col.width) {\n        col.width = width;\n      }\n\n      //check for Tabulator inline options\n      this._extractOptions(header, col, this.table.columnManager.optionsList.registeredDefaults);\n      this.fieldIndex[index] = col.field;\n      if (col.field == this.table.options.index) {\n        this.hasIndex = true;\n      }\n      if (!exists) {\n        this.table.options.columns.push(col);\n      }\n    }\n  }\n\n  //generate blank headers\n  _generateBlankHeaders(headers, rows) {\n    for (var index = 0; index < headers.length; index++) {\n      var header = headers[index],\n        col = {\n          title: \"\",\n          field: \"col\" + index\n        };\n      this.fieldIndex[index] = col.field;\n      var width = header.getAttribute(\"width\");\n      if (width) {\n        col.width = width;\n      }\n      this.table.options.columns.push(col);\n    }\n  }\n}\nHtmlTableImport.moduleName = \"htmlTableImport\";\nclass Interaction extends Module {\n  constructor(table) {\n    super(table);\n    this.eventMap = {\n      //row events\n      rowClick: \"row-click\",\n      rowDblClick: \"row-dblclick\",\n      rowContext: \"row-contextmenu\",\n      rowMouseEnter: \"row-mouseenter\",\n      rowMouseLeave: \"row-mouseleave\",\n      rowMouseOver: \"row-mouseover\",\n      rowMouseOut: \"row-mouseout\",\n      rowMouseMove: \"row-mousemove\",\n      rowTap: \"row\",\n      rowDblTap: \"row\",\n      rowTapHold: \"row\",\n      //cell events\n      cellClick: \"cell-click\",\n      cellDblClick: \"cell-dblclick\",\n      cellContext: \"cell-contextmenu\",\n      cellMouseEnter: \"cell-mouseenter\",\n      cellMouseLeave: \"cell-mouseleave\",\n      cellMouseOver: \"cell-mouseover\",\n      cellMouseOut: \"cell-mouseout\",\n      cellMouseMove: \"cell-mousemove\",\n      cellTap: \"cell\",\n      cellDblTap: \"cell\",\n      cellTapHold: \"cell\",\n      //column header events\n      headerClick: \"column-click\",\n      headerDblClick: \"column-dblclick\",\n      headerContext: \"column-contextmenu\",\n      headerMouseEnter: \"column-mouseenter\",\n      headerMouseLeave: \"column-mouseleave\",\n      headerMouseOver: \"column-mouseover\",\n      headerMouseOut: \"column-mouseout\",\n      headerMouseMove: \"column-mousemove\",\n      headerTap: \"column\",\n      headerDblTap: \"column\",\n      headerTapHold: \"column\",\n      //group header\n      groupClick: \"group-click\",\n      groupDblClick: \"group-dblclick\",\n      groupContext: \"group-contextmenu\",\n      groupMouseEnter: \"group-mouseenter\",\n      groupMouseLeave: \"group-mouseleave\",\n      groupMouseOver: \"group-mouseover\",\n      groupMouseOut: \"group-mouseout\",\n      groupMouseMove: \"group-mousemove\",\n      groupTap: \"group\",\n      groupDblTap: \"group\",\n      groupTapHold: \"group\"\n    };\n    this.subscribers = {};\n    this.touchSubscribers = {};\n    this.columnSubscribers = {};\n    this.touchWatchers = {\n      row: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      cell: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      },\n      column: {\n        tap: null,\n        tapDbl: null,\n        tapHold: null\n      }\n    };\n    this.registerColumnOption(\"headerClick\");\n    this.registerColumnOption(\"headerDblClick\");\n    this.registerColumnOption(\"headerContext\");\n    this.registerColumnOption(\"headerMouseEnter\");\n    this.registerColumnOption(\"headerMouseLeave\");\n    this.registerColumnOption(\"headerMouseOver\");\n    this.registerColumnOption(\"headerMouseOut\");\n    this.registerColumnOption(\"headerMouseMove\");\n    this.registerColumnOption(\"headerTap\");\n    this.registerColumnOption(\"headerDblTap\");\n    this.registerColumnOption(\"headerTapHold\");\n    this.registerColumnOption(\"cellClick\");\n    this.registerColumnOption(\"cellDblClick\");\n    this.registerColumnOption(\"cellContext\");\n    this.registerColumnOption(\"cellMouseEnter\");\n    this.registerColumnOption(\"cellMouseLeave\");\n    this.registerColumnOption(\"cellMouseOver\");\n    this.registerColumnOption(\"cellMouseOut\");\n    this.registerColumnOption(\"cellMouseMove\");\n    this.registerColumnOption(\"cellTap\");\n    this.registerColumnOption(\"cellDblTap\");\n    this.registerColumnOption(\"cellTapHold\");\n  }\n  initialize() {\n    this.initializeExternalEvents();\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"cell-dblclick\", this.cellContentsSelectionFixer.bind(this));\n  }\n  cellContentsSelectionFixer(e, cell) {\n    if (this.table.modExists(\"edit\")) {\n      if (this.table.modules.edit.currentCell === this) {\n        return; //prevent instant selection of editor content\n      }\n    }\n\n    e.preventDefault();\n    try {\n      if (document.selection) {\n        // IE\n        var range = document.body.createTextRange();\n        range.moveToElementText(this.element);\n        range.select();\n      } else if (window.getSelection) {\n        var range = document.createRange();\n        range.selectNode(this.element);\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n      }\n    } catch (e) {}\n  }\n  initializeExternalEvents() {\n    for (let key in this.eventMap) {\n      this.subscriptionChangeExternal(key, this.subscriptionChanged.bind(this, key));\n    }\n  }\n  subscriptionChanged(key, added) {\n    if (added) {\n      if (!this.subscribers[key]) {\n        if (this.eventMap[key].includes(\"-\")) {\n          this.subscribers[key] = this.handle.bind(this, key);\n          this.subscribe(this.eventMap[key], this.subscribers[key]);\n        } else {\n          this.subscribeTouchEvents(key);\n        }\n      }\n    } else {\n      if (this.eventMap[key].includes(\"-\")) {\n        if (this.subscribers[key] && !this.columnSubscribers[key] && !this.subscribedExternal(key)) {\n          this.unsubscribe(this.eventMap[key], this.subscribers[key]);\n          delete this.subscribers[key];\n        }\n      } else {\n        this.unsubscribeTouchEvents(key);\n      }\n    }\n  }\n  subscribeTouchEvents(key) {\n    var type = this.eventMap[key];\n    if (!this.touchSubscribers[type + \"-touchstart\"]) {\n      this.touchSubscribers[type + \"-touchstart\"] = this.handleTouch.bind(this, type, \"start\");\n      this.touchSubscribers[type + \"-touchend\"] = this.handleTouch.bind(this, type, \"end\");\n      this.subscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\n      this.subscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\n    }\n    this.subscribers[key] = true;\n  }\n  unsubscribeTouchEvents(key) {\n    var notouch = true,\n      type = this.eventMap[key];\n    if (this.subscribers[key] && !this.subscribedExternal(key)) {\n      delete this.subscribers[key];\n      for (let i in this.eventMap) {\n        if (this.eventMap[i] === type) {\n          if (this.subscribers[i]) {\n            notouch = false;\n          }\n        }\n      }\n      if (notouch) {\n        this.unsubscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\n        this.unsubscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\n        delete this.touchSubscribers[type + \"-touchstart\"];\n        delete this.touchSubscribers[type + \"-touchend\"];\n      }\n    }\n  }\n  initializeColumn(column) {\n    var def = column.definition;\n    for (let key in this.eventMap) {\n      if (def[key]) {\n        this.subscriptionChanged(key, true);\n        if (!this.columnSubscribers[key]) {\n          this.columnSubscribers[key] = [];\n        }\n        this.columnSubscribers[key].push(column);\n      }\n    }\n  }\n  handle(action, e, component) {\n    this.dispatchEvent(action, e, component);\n  }\n  handleTouch(type, action, e, component) {\n    var watchers = this.touchWatchers[type];\n    if (type === \"column\") {\n      type = \"header\";\n    }\n    switch (action) {\n      case \"start\":\n        watchers.tap = true;\n        clearTimeout(watchers.tapHold);\n        watchers.tapHold = setTimeout(() => {\n          clearTimeout(watchers.tapHold);\n          watchers.tapHold = null;\n          watchers.tap = null;\n          clearTimeout(watchers.tapDbl);\n          watchers.tapDbl = null;\n          this.dispatchEvent(type + \"TapHold\", e, component);\n        }, 1000);\n        break;\n      case \"end\":\n        if (watchers.tap) {\n          watchers.tap = null;\n          this.dispatchEvent(type + \"Tap\", e, component);\n        }\n        if (watchers.tapDbl) {\n          clearTimeout(watchers.tapDbl);\n          watchers.tapDbl = null;\n          this.dispatchEvent(type + \"DblTap\", e, component);\n        } else {\n          watchers.tapDbl = setTimeout(() => {\n            clearTimeout(watchers.tapDbl);\n            watchers.tapDbl = null;\n          }, 300);\n        }\n        clearTimeout(watchers.tapHold);\n        watchers.tapHold = null;\n        break;\n    }\n  }\n  dispatchEvent(action, e, component) {\n    var componentObj = component.getComponent(),\n      callback;\n    if (this.columnSubscribers[action]) {\n      if (component instanceof Cell) {\n        callback = component.column.definition[action];\n      } else if (component instanceof Column$1) {\n        callback = component.definition[action];\n      }\n      if (callback) {\n        callback(e, componentObj);\n      }\n    }\n    this.dispatchExternal(action, e, componentObj);\n  }\n}\nInteraction.moduleName = \"interaction\";\nvar defaultBindings = {\n  navPrev: \"shift + 9\",\n  navNext: 9,\n  navUp: 38,\n  navDown: 40,\n  scrollPageUp: 33,\n  scrollPageDown: 34,\n  scrollToStart: 36,\n  scrollToEnd: 35,\n  undo: \"ctrl + 90\",\n  redo: \"ctrl + 89\",\n  copyToClipboard: \"ctrl + 67\"\n};\nvar defaultActions = {\n  keyBlock: function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n  },\n  scrollPageUp: function (e) {\n    var rowManager = this.table.rowManager,\n      newPos = rowManager.scrollTop - rowManager.element.clientHeight,\n      scrollMax = rowManager.element.scrollHeight;\n    e.preventDefault();\n    if (rowManager.displayRowsCount) {\n      if (newPos >= 0) {\n        rowManager.element.scrollTop = newPos;\n      } else {\n        rowManager.scrollToRow(rowManager.getDisplayRows()[0]);\n      }\n    }\n    this.table.element.focus();\n  },\n  scrollPageDown: function (e) {\n    var rowManager = this.table.rowManager,\n      newPos = rowManager.scrollTop + rowManager.element.clientHeight,\n      scrollMax = rowManager.element.scrollHeight;\n    e.preventDefault();\n    if (rowManager.displayRowsCount) {\n      if (newPos <= scrollMax) {\n        rowManager.element.scrollTop = newPos;\n      } else {\n        rowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\n      }\n    }\n    this.table.element.focus();\n  },\n  scrollToStart: function (e) {\n    var rowManager = this.table.rowManager;\n    e.preventDefault();\n    if (rowManager.displayRowsCount) {\n      rowManager.scrollToRow(rowManager.getDisplayRows()[0]);\n    }\n    this.table.element.focus();\n  },\n  scrollToEnd: function (e) {\n    var rowManager = this.table.rowManager;\n    e.preventDefault();\n    if (rowManager.displayRowsCount) {\n      rowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\n    }\n    this.table.element.focus();\n  },\n  navPrev: function (e) {\n    this.dispatch(\"keybinding-nav-prev\", e);\n  },\n  navNext: function (e) {\n    this.dispatch(\"keybinding-nav-next\", e);\n  },\n  navLeft: function (e) {\n    this.dispatch(\"keybinding-nav-left\", e);\n  },\n  navRight: function (e) {\n    this.dispatch(\"keybinding-nav-right\", e);\n  },\n  navUp: function (e) {\n    this.dispatch(\"keybinding-nav-up\", e);\n  },\n  navDown: function (e) {\n    this.dispatch(\"keybinding-nav-down\", e);\n  },\n  undo: function (e) {\n    var cell = false;\n    if (this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")) {\n      cell = this.table.modules.edit.currentCell;\n      if (!cell) {\n        e.preventDefault();\n        this.table.modules.history.undo();\n      }\n    }\n  },\n  redo: function (e) {\n    var cell = false;\n    if (this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")) {\n      cell = this.table.modules.edit.currentCell;\n      if (!cell) {\n        e.preventDefault();\n        this.table.modules.history.redo();\n      }\n    }\n  },\n  copyToClipboard: function (e) {\n    if (!this.table.modules.edit.currentCell) {\n      if (this.table.modExists(\"clipboard\", true)) {\n        this.table.modules.clipboard.copy(false, true);\n      }\n    }\n  }\n};\nclass Keybindings extends Module {\n  constructor(table) {\n    super(table);\n    this.watchKeys = null;\n    this.pressedKeys = null;\n    this.keyupBinding = false;\n    this.keydownBinding = false;\n    this.registerTableOption(\"keybindings\", []); //array for keybindings\n    this.registerTableOption(\"tabEndNewRow\", false); //create new row when tab to end of table\n  }\n\n  initialize() {\n    var bindings = this.table.options.keybindings,\n      mergedBindings = {};\n    this.watchKeys = {};\n    this.pressedKeys = [];\n    if (bindings !== false) {\n      for (let key in Keybindings.bindings) {\n        mergedBindings[key] = Keybindings.bindings[key];\n      }\n      if (Object.keys(bindings).length) {\n        for (let key in bindings) {\n          mergedBindings[key] = bindings[key];\n        }\n      }\n      this.mapBindings(mergedBindings);\n      this.bindEvents();\n    }\n    this.subscribe(\"table-destroy\", this.clearBindings.bind(this));\n  }\n  mapBindings(bindings) {\n    for (let key in bindings) {\n      if (Keybindings.actions[key]) {\n        if (bindings[key]) {\n          if (typeof bindings[key] !== \"object\") {\n            bindings[key] = [bindings[key]];\n          }\n          bindings[key].forEach(binding => {\n            this.mapBinding(key, binding);\n          });\n        }\n      } else {\n        console.warn(\"Key Binding Error - no such action:\", key);\n      }\n    }\n  }\n  mapBinding(action, symbolsList) {\n    var binding = {\n      action: Keybindings.actions[action],\n      keys: [],\n      ctrl: false,\n      shift: false,\n      meta: false\n    };\n    var symbols = symbolsList.toString().toLowerCase().split(\" \").join(\"\").split(\"+\");\n    symbols.forEach(symbol => {\n      switch (symbol) {\n        case \"ctrl\":\n          binding.ctrl = true;\n          break;\n        case \"shift\":\n          binding.shift = true;\n          break;\n        case \"meta\":\n          binding.meta = true;\n          break;\n        default:\n          symbol = parseInt(symbol);\n          binding.keys.push(symbol);\n          if (!this.watchKeys[symbol]) {\n            this.watchKeys[symbol] = [];\n          }\n          this.watchKeys[symbol].push(binding);\n      }\n    });\n  }\n  bindEvents() {\n    var self = this;\n    this.keyupBinding = function (e) {\n      var code = e.keyCode;\n      var bindings = self.watchKeys[code];\n      if (bindings) {\n        self.pressedKeys.push(code);\n        bindings.forEach(function (binding) {\n          self.checkBinding(e, binding);\n        });\n      }\n    };\n    this.keydownBinding = function (e) {\n      var code = e.keyCode;\n      var bindings = self.watchKeys[code];\n      if (bindings) {\n        var index = self.pressedKeys.indexOf(code);\n        if (index > -1) {\n          self.pressedKeys.splice(index, 1);\n        }\n      }\n    };\n    this.table.element.addEventListener(\"keydown\", this.keyupBinding);\n    this.table.element.addEventListener(\"keyup\", this.keydownBinding);\n  }\n  clearBindings() {\n    if (this.keyupBinding) {\n      this.table.element.removeEventListener(\"keydown\", this.keyupBinding);\n    }\n    if (this.keydownBinding) {\n      this.table.element.removeEventListener(\"keyup\", this.keydownBinding);\n    }\n  }\n  checkBinding(e, binding) {\n    var match = true;\n    if (e.ctrlKey == binding.ctrl && e.shiftKey == binding.shift && e.metaKey == binding.meta) {\n      binding.keys.forEach(key => {\n        var index = this.pressedKeys.indexOf(key);\n        if (index == -1) {\n          match = false;\n        }\n      });\n      if (match) {\n        binding.action.call(this, e);\n      }\n      return true;\n    }\n    return false;\n  }\n}\nKeybindings.moduleName = \"keybindings\";\n\n//load defaults\nKeybindings.bindings = defaultBindings;\nKeybindings.actions = defaultActions;\nclass Menu extends Module {\n  constructor(table) {\n    super(table);\n    this.menuElements = [];\n    this.blurEvent = this.hideMenu.bind(this);\n    this.escEvent = this.escMenu.bind(this);\n    this.nestedMenuBlock = false;\n    this.positionReversedX = false;\n    this.registerTableOption(\"rowContextMenu\", false);\n    this.registerTableOption(\"rowClickMenu\", false);\n    this.registerTableOption(\"groupContextMenu\", false);\n    this.registerTableOption(\"groupClickMenu\", false);\n    this.registerColumnOption(\"headerContextMenu\");\n    this.registerColumnOption(\"headerMenu\");\n    this.registerColumnOption(\"contextMenu\");\n    this.registerColumnOption(\"clickMenu\");\n  }\n  initialize() {\n    this.subscribe(\"cell-layout\", this.layoutCell.bind(this));\n    this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-init\", this.initializeRow.bind(this));\n  }\n  layoutCell(cell) {\n    if (cell.column.definition.contextMenu || cell.column.definition.clickMenu) {\n      this.initializeCell(cell);\n    }\n  }\n  initializeColumn(column) {\n    var def = column.definition;\n    if (def.headerContextMenu || def.headerClickMenu || def.headerMenu) {\n      this.initializeColumnHeader(column);\n    }\n  }\n  initializeColumnHeader(column) {\n    var headerMenuEl;\n    if (column.definition.headerContextMenu) {\n      column.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, column, column.definition.headerContextMenu));\n      this.tapHold(column, column.definition.headerContextMenu);\n    }\n\n    // if(column.definition.headerClickMenu){\n    // \tcolumn.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, column, column.definition.headerClickMenu));\n    // }\n\n    if (column.definition.headerMenu) {\n      headerMenuEl = document.createElement(\"span\");\n      headerMenuEl.classList.add(\"tabulator-header-menu-button\");\n      headerMenuEl.innerHTML = \"&vellip;\";\n      headerMenuEl.addEventListener(\"click\", e => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.LoadMenuEvent(column, column.definition.headerMenu, e);\n      });\n      column.titleElement.insertBefore(headerMenuEl, column.titleElement.firstChild);\n    }\n  }\n  LoadMenuEvent(component, menu, e) {\n    menu = typeof menu == \"function\" ? menu.call(this.table, component.getComponent(), e) : menu;\n\n    // if(component instanceof Cell){\n    // \te.stopImmediatePropagation();\n    // }\n\n    this.loadMenu(e, component, menu);\n  }\n  tapHold(component, menu) {\n    var element = component.getElement(),\n      tapHold = null,\n      loaded = false;\n    element.addEventListener(\"touchstart\", e => {\n      clearTimeout(tapHold);\n      loaded = false;\n      tapHold = setTimeout(() => {\n        clearTimeout(tapHold);\n        tapHold = null;\n        loaded = true;\n        this.LoadMenuEvent(component, menu, e);\n      }, 1000);\n    }, {\n      passive: true\n    });\n    element.addEventListener(\"touchend\", e => {\n      clearTimeout(tapHold);\n      tapHold = null;\n      if (loaded) {\n        e.preventDefault();\n      }\n    });\n  }\n  initializeCell(cell) {\n    if (cell.column.definition.contextMenu) {\n      cell.getElement(true).addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.contextMenu));\n      this.tapHold(cell, cell.column.definition.contextMenu);\n    }\n    if (cell.column.definition.clickMenu) {\n      cell.getElement(true).addEventListener(\"click\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.clickMenu));\n    }\n  }\n  initializeRow(row) {\n    if (this.table.options.rowContextMenu) {\n      row.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, row, this.table.options.rowContextMenu));\n      this.tapHold(row, this.table.options.rowContextMenu);\n    }\n    if (this.table.options.rowClickMenu) {\n      row.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, row, this.table.options.rowClickMenu));\n    }\n  }\n  initializeGroup(group) {\n    if (this.table.options.groupContextMenu) {\n      group.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, group, this.table.options.groupContextMenu));\n      this.tapHold(group, this.table.options.groupContextMenu);\n    }\n    if (this.table.options.groupClickMenu) {\n      group.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, group, this.table.options.groupClickMenu));\n    }\n  }\n  loadMenu(e, component, menu, parentEl) {\n    var touch = !(e instanceof MouseEvent);\n    var menuEl = document.createElement(\"div\");\n    menuEl.classList.add(\"tabulator-menu\");\n    if (!touch) {\n      e.preventDefault();\n    }\n\n    //abort if no menu set\n    if (!menu || !menu.length) {\n      return;\n    }\n    if (!parentEl) {\n      if (this.nestedMenuBlock) {\n        //abort if child menu already open\n        if (this.isOpen()) {\n          return;\n        }\n      } else {\n        this.nestedMenuBlock = setTimeout(() => {\n          this.nestedMenuBlock = false;\n        }, 100);\n      }\n      this.hideMenu();\n      this.menuElements = [];\n    }\n    menu.forEach(item => {\n      var itemEl = document.createElement(\"div\"),\n        label = item.label,\n        disabled = item.disabled;\n      if (item.separator) {\n        itemEl.classList.add(\"tabulator-menu-separator\");\n      } else {\n        itemEl.classList.add(\"tabulator-menu-item\");\n        if (typeof label == \"function\") {\n          label = label.call(this.table, component.getComponent());\n        }\n        if (label instanceof Node) {\n          itemEl.appendChild(label);\n        } else {\n          itemEl.innerHTML = label;\n        }\n        if (typeof disabled == \"function\") {\n          disabled = disabled.call(this.table, component.getComponent());\n        }\n        if (disabled) {\n          itemEl.classList.add(\"tabulator-menu-item-disabled\");\n          itemEl.addEventListener(\"click\", e => {\n            e.stopPropagation();\n          });\n        } else {\n          if (item.menu && item.menu.length) {\n            itemEl.addEventListener(\"click\", e => {\n              e.stopPropagation();\n              this.hideOldSubMenus(menuEl);\n              this.loadMenu(e, component, item.menu, itemEl);\n            });\n          } else {\n            if (item.action) {\n              itemEl.addEventListener(\"click\", e => {\n                item.action(e, component.getComponent());\n              });\n            }\n          }\n        }\n        if (item.menu && item.menu.length) {\n          itemEl.classList.add(\"tabulator-menu-item-submenu\");\n        }\n      }\n      menuEl.appendChild(itemEl);\n    });\n    menuEl.addEventListener(\"click\", e => {\n      this.hideMenu();\n    });\n    this.menuElements.push(menuEl);\n    this.positionMenu(menuEl, parentEl, touch, e);\n  }\n  hideOldSubMenus(menuEl) {\n    var index = this.menuElements.indexOf(menuEl);\n    if (index > -1) {\n      for (let i = this.menuElements.length - 1; i > index; i--) {\n        var el = this.menuElements[i];\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n        this.menuElements.pop();\n      }\n    }\n  }\n  positionMenu(element, parentEl, touch, e) {\n    var docHeight = Math.max(document.body.offsetHeight, window.innerHeight),\n      x,\n      y,\n      parentOffset;\n    if (!parentEl) {\n      x = touch ? e.touches[0].pageX : e.pageX;\n      y = touch ? e.touches[0].pageY : e.pageY;\n      this.positionReversedX = false;\n    } else {\n      parentOffset = Helpers.elOffset(parentEl);\n      x = parentOffset.left + parentEl.offsetWidth;\n      y = parentOffset.top - 1;\n    }\n    element.style.top = y + \"px\";\n    element.style.left = x + \"px\";\n    setTimeout(() => {\n      this.table.rowManager.element.addEventListener(\"scroll\", this.blurEvent);\n      document.body.addEventListener(\"click\", this.blurEvent);\n      document.body.addEventListener(\"contextmenu\", this.blurEvent);\n      window.addEventListener(\"resize\", this.blurEvent);\n      document.body.addEventListener(\"keydown\", this.escEvent);\n    }, 100);\n    document.body.appendChild(element);\n\n    //move menu to start on bottom edge if it is too close to the edge of the screen\n    if (y + element.offsetHeight >= docHeight) {\n      element.style.top = \"\";\n      if (parentEl) {\n        element.style.bottom = docHeight - parentOffset.top - parentEl.offsetHeight - 1 + \"px\";\n      } else {\n        element.style.bottom = docHeight - y + \"px\";\n      }\n    }\n\n    //move menu to start on right edge if it is too close to the edge of the screen\n    if (x + element.offsetWidth >= document.body.offsetWidth || this.positionReversedX) {\n      element.style.left = \"\";\n      if (parentEl) {\n        element.style.right = document.documentElement.offsetWidth - parentOffset.left + \"px\";\n      } else {\n        element.style.right = document.documentElement.offsetWidth - x + \"px\";\n      }\n      this.positionReversedX = true;\n    }\n  }\n  isOpen() {\n    return !!this.menuElements.length;\n  }\n  escMenu(e) {\n    if (e.keyCode == 27) {\n      this.hideMenu();\n    }\n  }\n  hideMenu() {\n    this.menuElements.forEach(menuEl => {\n      if (menuEl.parentNode) {\n        menuEl.parentNode.removeChild(menuEl);\n      }\n    });\n    document.body.removeEventListener(\"keydown\", this.escEvent);\n    document.body.removeEventListener(\"click\", this.blurEvent);\n    document.body.removeEventListener(\"contextmenu\", this.blurEvent);\n    window.removeEventListener(\"resize\", this.blurEvent);\n    this.table.rowManager.element.removeEventListener(\"scroll\", this.blurEvent);\n  }\n}\nMenu.moduleName = \"menu\";\nclass MoveColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.placeholderElement = this.createPlaceholderElement();\n    this.hoverElement = false; //floating column header element\n    this.checkTimeout = false; //click check timeout holder\n    this.checkPeriod = 250; //period to wait on mousedown to consider this a move and not a click\n    this.moving = false; //currently moving column\n    this.toCol = false; //destination column\n    this.toColAfter = false; //position of moving column relative to the desitnation column\n    this.startX = 0; //starting position within header element\n    this.autoScrollMargin = 40; //auto scroll on edge when within margin\n    this.autoScrollStep = 5; //auto scroll distance in pixels\n    this.autoScrollTimeout = false; //auto scroll timeout\n    this.touchMove = false;\n    this.moveHover = this.moveHover.bind(this);\n    this.endMove = this.endMove.bind(this);\n    this.registerTableOption(\"movableColumns\", false); //enable movable columns\n  }\n\n  createPlaceholderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-col\");\n    el.classList.add(\"tabulator-col-placeholder\");\n    return el;\n  }\n  initialize() {\n    if (this.table.options.movableColumns) {\n      this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n    }\n  }\n  initializeColumn(column) {\n    var self = this,\n      config = {},\n      colEl;\n    if (!column.modules.frozen) {\n      colEl = column.getElement();\n      config.mousemove = function (e) {\n        if (column.parent === self.moving.parent) {\n          if ((self.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(colEl).left + self.table.columnManager.element.scrollLeft > column.getWidth() / 2) {\n            if (self.toCol !== column || !self.toColAfter) {\n              colEl.parentNode.insertBefore(self.placeholderElement, colEl.nextSibling);\n              self.moveColumn(column, true);\n            }\n          } else {\n            if (self.toCol !== column || self.toColAfter) {\n              colEl.parentNode.insertBefore(self.placeholderElement, colEl);\n              self.moveColumn(column, false);\n            }\n          }\n        }\n      }.bind(self);\n      colEl.addEventListener(\"mousedown\", function (e) {\n        self.touchMove = false;\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, column);\n          }, self.checkPeriod);\n        }\n      });\n      colEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      self.bindTouchEvents(column);\n    }\n    column.modules.moveColumn = config;\n  }\n  bindTouchEvents(column) {\n    var colEl = column.getElement(),\n      startXMove = false,\n      //shifting center position of the cell\n      nextCol,\n      prevCol,\n      nextColWidth,\n      prevColWidth,\n      nextColWidthLast,\n      prevColWidthLast;\n    colEl.addEventListener(\"touchstart\", e => {\n      this.checkTimeout = setTimeout(() => {\n        this.touchMove = true;\n        nextCol = column.nextColumn();\n        nextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\n        prevCol = column.prevColumn();\n        prevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\n        nextColWidthLast = 0;\n        prevColWidthLast = 0;\n        startXMove = false;\n        this.startMove(e, column);\n      }, this.checkPeriod);\n    }, {\n      passive: true\n    });\n    colEl.addEventListener(\"touchmove\", e => {\n      var diff, moveToCol;\n      if (this.moving) {\n        this.moveHover(e);\n        if (!startXMove) {\n          startXMove = e.touches[0].pageX;\n        }\n        diff = e.touches[0].pageX - startXMove;\n        if (diff > 0) {\n          if (nextCol && diff - nextColWidthLast > nextColWidth) {\n            moveToCol = nextCol;\n            if (moveToCol !== column) {\n              startXMove = e.touches[0].pageX;\n              moveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement().nextSibling);\n              this.moveColumn(moveToCol, true);\n            }\n          }\n        } else {\n          if (prevCol && -diff - prevColWidthLast > prevColWidth) {\n            moveToCol = prevCol;\n            if (moveToCol !== column) {\n              startXMove = e.touches[0].pageX;\n              moveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement());\n              this.moveColumn(moveToCol, false);\n            }\n          }\n        }\n        if (moveToCol) {\n          nextCol = moveToCol.nextColumn();\n          nextColWidthLast = nextColWidth;\n          nextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\n          prevCol = moveToCol.prevColumn();\n          prevColWidthLast = prevColWidth;\n          prevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\n        }\n      }\n    }, {\n      passive: true\n    });\n    colEl.addEventListener(\"touchend\", e => {\n      if (this.checkTimeout) {\n        clearTimeout(this.checkTimeout);\n      }\n      if (this.moving) {\n        this.endMove(e);\n      }\n    });\n  }\n  startMove(e, column) {\n    var element = column.getElement(),\n      headerElement = this.table.columnManager.getElement(),\n      headersElement = this.table.columnManager.getHeadersElement();\n    this.moving = column;\n    this.startX = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(element).left;\n    this.table.element.classList.add(\"tabulator-block-select\");\n\n    //create placeholder\n    this.placeholderElement.style.width = column.getWidth() + \"px\";\n    this.placeholderElement.style.height = column.getHeight() + \"px\";\n    element.parentNode.insertBefore(this.placeholderElement, element);\n    element.parentNode.removeChild(element);\n\n    //create hover element\n    this.hoverElement = element.cloneNode(true);\n    this.hoverElement.classList.add(\"tabulator-moving\");\n    this.table.columnManager.getElement().appendChild(this.hoverElement);\n    this.hoverElement.style.left = \"0\";\n    this.hoverElement.style.bottom = headerElement.clientHeight - headersElement.offsetHeight + \"px\";\n    if (!this.touchMove) {\n      this._bindMouseMove();\n      document.body.addEventListener(\"mousemove\", this.moveHover);\n      document.body.addEventListener(\"mouseup\", this.endMove);\n    }\n    this.moveHover(e);\n  }\n  _bindMouseMove() {\n    this.table.columnManager.columnsByIndex.forEach(function (column) {\n      if (column.modules.moveColumn.mousemove) {\n        column.getElement().addEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\n      }\n    });\n  }\n  _unbindMouseMove() {\n    this.table.columnManager.columnsByIndex.forEach(function (column) {\n      if (column.modules.moveColumn.mousemove) {\n        column.getElement().removeEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\n      }\n    });\n  }\n  moveColumn(column, after) {\n    var movingCells = this.moving.getCells();\n    this.toCol = column;\n    this.toColAfter = after;\n    if (after) {\n      column.getCells().forEach(function (cell, i) {\n        var cellEl = cell.getElement(true);\n        if (cellEl.parentNode && movingCells[i]) {\n          cellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl.nextSibling);\n        }\n      });\n    } else {\n      column.getCells().forEach(function (cell, i) {\n        var cellEl = cell.getElement(true);\n        if (cellEl.parentNode && movingCells[i]) {\n          cellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl);\n        }\n      });\n    }\n  }\n  endMove(e) {\n    if (e.which === 1 || this.touchMove) {\n      this._unbindMouseMove();\n      this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\n      this.placeholderElement.parentNode.removeChild(this.placeholderElement);\n      this.hoverElement.parentNode.removeChild(this.hoverElement);\n      this.table.element.classList.remove(\"tabulator-block-select\");\n      if (this.toCol) {\n        this.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter);\n      }\n      this.moving = false;\n      this.toCol = false;\n      this.toColAfter = false;\n      if (!this.touchMove) {\n        document.body.removeEventListener(\"mousemove\", this.moveHover);\n        document.body.removeEventListener(\"mouseup\", this.endMove);\n      }\n    }\n  }\n  moveHover(e) {\n    var columnHolder = this.table.columnManager.getElement(),\n      scrollLeft = columnHolder.scrollLeft,\n      xPos = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(columnHolder).left + scrollLeft,\n      scrollPos;\n    this.hoverElement.style.left = xPos - this.startX + \"px\";\n    if (xPos - scrollLeft < this.autoScrollMargin) {\n      if (!this.autoScrollTimeout) {\n        this.autoScrollTimeout = setTimeout(() => {\n          scrollPos = Math.max(0, scrollLeft - 5);\n          this.table.rowManager.getElement().scrollLeft = scrollPos;\n          this.autoScrollTimeout = false;\n        }, 1);\n      }\n    }\n    if (scrollLeft + columnHolder.clientWidth - xPos < this.autoScrollMargin) {\n      if (!this.autoScrollTimeout) {\n        this.autoScrollTimeout = setTimeout(() => {\n          scrollPos = Math.min(columnHolder.clientWidth, scrollLeft + 5);\n          this.table.rowManager.getElement().scrollLeft = scrollPos;\n          this.autoScrollTimeout = false;\n        }, 1);\n      }\n    }\n  }\n}\nMoveColumns.moduleName = \"moveColumn\";\nclass MoveRows extends Module {\n  constructor(table) {\n    super(table);\n    this.placeholderElement = this.createPlaceholderElement();\n    this.hoverElement = false; //floating row header element\n    this.checkTimeout = false; //click check timeout holder\n    this.checkPeriod = 150; //period to wait on mousedown to consider this a move and not a click\n    this.moving = false; //currently moving row\n    this.toRow = false; //destination row\n    this.toRowAfter = false; //position of moving row relative to the desitnation row\n    this.hasHandle = false; //row has handle instead of fully movable row\n    this.startY = 0; //starting Y position within header element\n    this.startX = 0; //starting X position within header element\n\n    this.moveHover = this.moveHover.bind(this);\n    this.endMove = this.endMove.bind(this);\n    this.tableRowDropEvent = false;\n    this.touchMove = false;\n    this.connection = false;\n    this.connectionSelectorsTables = false;\n    this.connectionSelectorsElements = false;\n    this.connectionElements = [];\n    this.connections = [];\n    this.connectedTable = false;\n    this.connectedRow = false;\n    this.registerTableOption(\"movableRows\", false); //enable movable rows\n    this.registerTableOption(\"movableRowsConnectedTables\", false); //tables for movable rows to be connected to\n    this.registerTableOption(\"movableRowsConnectedElements\", false); //other elements for movable rows to be connected to\n    this.registerTableOption(\"movableRowsSender\", false);\n    this.registerTableOption(\"movableRowsReceiver\", \"insert\");\n    this.registerColumnOption(\"rowHandle\");\n  }\n  createPlaceholderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    el.classList.add(\"tabulator-row-placeholder\");\n    return el;\n  }\n  initialize() {\n    if (this.table.options.movableRows) {\n      this.connectionSelectorsTables = this.table.options.movableRowsConnectedTables;\n      this.connectionSelectorsElements = this.table.options.movableRowsConnectedElements;\n      this.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;\n      this.subscribe(\"cell-init\", this.initializeCell.bind(this));\n      this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n    }\n  }\n  initializeGroupHeader(group) {\n    var self = this,\n      config = {};\n\n    //inter table drag drop\n    config.mouseup = function (e) {\n      self.tableRowDrop(e, row);\n    }.bind(self);\n\n    //same table drag drop\n    config.mousemove = function (e) {\n      if (e.pageY - Helpers.elOffset(group.element).top + self.table.rowManager.element.scrollTop > group.getHeight() / 2) {\n        if (self.toRow !== group || !self.toRowAfter) {\n          var rowEl = group.getElement();\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\n          self.moveRow(group, true);\n        }\n      } else {\n        if (self.toRow !== group || self.toRowAfter) {\n          var rowEl = group.getElement();\n          if (rowEl.previousSibling) {\n            rowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\n            self.moveRow(group, false);\n          }\n        }\n      }\n    }.bind(self);\n    group.modules.moveRow = config;\n  }\n  initializeRow(row) {\n    var self = this,\n      config = {},\n      rowEl;\n\n    //inter table drag drop\n    config.mouseup = function (e) {\n      self.tableRowDrop(e, row);\n    }.bind(self);\n\n    //same table drag drop\n    config.mousemove = function (e) {\n      var rowEl = row.getElement();\n      if (e.pageY - Helpers.elOffset(rowEl).top + self.table.rowManager.element.scrollTop > row.getHeight() / 2) {\n        if (self.toRow !== row || !self.toRowAfter) {\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\n          self.moveRow(row, true);\n        }\n      } else {\n        if (self.toRow !== row || self.toRowAfter) {\n          rowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\n          self.moveRow(row, false);\n        }\n      }\n    }.bind(self);\n    if (!this.hasHandle) {\n      rowEl = row.getElement();\n      rowEl.addEventListener(\"mousedown\", function (e) {\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, row);\n          }, self.checkPeriod);\n        }\n      });\n      rowEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      this.bindTouchEvents(row, row.getElement());\n    }\n    row.modules.moveRow = config;\n  }\n  initializeColumn(column) {\n    if (column.definition.rowHandle && this.table.options.movableRows !== false) {\n      this.hasHandle = true;\n    }\n  }\n  initializeCell(cell) {\n    if (cell.column.definition.rowHandle && this.table.options.movableRows !== false) {\n      var self = this,\n        cellEl = cell.getElement(true);\n      cellEl.addEventListener(\"mousedown\", function (e) {\n        if (e.which === 1) {\n          self.checkTimeout = setTimeout(function () {\n            self.startMove(e, cell.row);\n          }, self.checkPeriod);\n        }\n      });\n      cellEl.addEventListener(\"mouseup\", function (e) {\n        if (e.which === 1) {\n          if (self.checkTimeout) {\n            clearTimeout(self.checkTimeout);\n          }\n        }\n      });\n      this.bindTouchEvents(cell.row, cellEl);\n    }\n  }\n  bindTouchEvents(row, element) {\n    var startYMove = false,\n      //shifting center position of the cell\n      nextRow,\n      prevRow,\n      nextRowHeight,\n      prevRowHeight,\n      nextRowHeightLast,\n      prevRowHeightLast;\n    element.addEventListener(\"touchstart\", e => {\n      this.checkTimeout = setTimeout(() => {\n        this.touchMove = true;\n        nextRow = row.nextRow();\n        nextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\n        prevRow = row.prevRow();\n        prevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\n        nextRowHeightLast = 0;\n        prevRowHeightLast = 0;\n        startYMove = false;\n        this.startMove(e, row);\n      }, this.checkPeriod);\n    }, {\n      passive: true\n    });\n    this.moving, this.toRow, this.toRowAfter;\n    element.addEventListener(\"touchmove\", e => {\n      var diff, moveToRow;\n      if (this.moving) {\n        e.preventDefault();\n        this.moveHover(e);\n        if (!startYMove) {\n          startYMove = e.touches[0].pageY;\n        }\n        diff = e.touches[0].pageY - startYMove;\n        if (diff > 0) {\n          if (nextRow && diff - nextRowHeightLast > nextRowHeight) {\n            moveToRow = nextRow;\n            if (moveToRow !== row) {\n              startYMove = e.touches[0].pageY;\n              moveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement().nextSibling);\n              this.moveRow(moveToRow, true);\n            }\n          }\n        } else {\n          if (prevRow && -diff - prevRowHeightLast > prevRowHeight) {\n            moveToRow = prevRow;\n            if (moveToRow !== row) {\n              startYMove = e.touches[0].pageY;\n              moveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement());\n              this.moveRow(moveToRow, false);\n            }\n          }\n        }\n        if (moveToRow) {\n          nextRow = moveToRow.nextRow();\n          nextRowHeightLast = nextRowHeight;\n          nextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\n          prevRow = moveToRow.prevRow();\n          prevRowHeightLast = prevRowHeight;\n          prevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\n        }\n      }\n    });\n    element.addEventListener(\"touchend\", e => {\n      if (this.checkTimeout) {\n        clearTimeout(this.checkTimeout);\n      }\n      if (this.moving) {\n        this.endMove(e);\n        this.touchMove = false;\n      }\n    });\n  }\n  _bindMouseMove() {\n    this.table.rowManager.getDisplayRows().forEach(row => {\n      if ((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove) {\n        row.getElement().addEventListener(\"mousemove\", row.modules.moveRow.mousemove);\n      }\n    });\n  }\n  _unbindMouseMove() {\n    this.table.rowManager.getDisplayRows().forEach(row => {\n      if ((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove) {\n        row.getElement().removeEventListener(\"mousemove\", row.modules.moveRow.mousemove);\n      }\n    });\n  }\n  startMove(e, row) {\n    var element = row.getElement();\n    this.setStartPosition(e, row);\n    this.moving = row;\n    this.table.element.classList.add(\"tabulator-block-select\");\n\n    //create placeholder\n    this.placeholderElement.style.width = row.getWidth() + \"px\";\n    this.placeholderElement.style.height = row.getHeight() + \"px\";\n    if (!this.connection) {\n      element.parentNode.insertBefore(this.placeholderElement, element);\n      element.parentNode.removeChild(element);\n    } else {\n      this.table.element.classList.add(\"tabulator-movingrow-sending\");\n      this.connectToTables(row);\n    }\n\n    //create hover element\n    this.hoverElement = element.cloneNode(true);\n    this.hoverElement.classList.add(\"tabulator-moving\");\n    if (this.connection) {\n      document.body.appendChild(this.hoverElement);\n      this.hoverElement.style.left = \"0\";\n      this.hoverElement.style.top = \"0\";\n      this.hoverElement.style.width = this.table.element.clientWidth + \"px\";\n      this.hoverElement.style.whiteSpace = \"nowrap\";\n      this.hoverElement.style.overflow = \"hidden\";\n      this.hoverElement.style.pointerEvents = \"none\";\n    } else {\n      this.table.rowManager.getTableElement().appendChild(this.hoverElement);\n      this.hoverElement.style.left = \"0\";\n      this.hoverElement.style.top = \"0\";\n      this._bindMouseMove();\n    }\n    document.body.addEventListener(\"mousemove\", this.moveHover);\n    document.body.addEventListener(\"mouseup\", this.endMove);\n    this.moveHover(e);\n  }\n  setStartPosition(e, row) {\n    var pageX = this.touchMove ? e.touches[0].pageX : e.pageX,\n      pageY = this.touchMove ? e.touches[0].pageY : e.pageY,\n      element,\n      position;\n    element = row.getElement();\n    if (this.connection) {\n      position = element.getBoundingClientRect();\n      this.startX = position.left - pageX + window.pageXOffset;\n      this.startY = position.top - pageY + window.pageYOffset;\n    } else {\n      this.startY = pageY - element.getBoundingClientRect().top;\n    }\n  }\n  endMove(e) {\n    if (!e || e.which === 1 || this.touchMove) {\n      this._unbindMouseMove();\n      if (!this.connection) {\n        this.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\n        this.placeholderElement.parentNode.removeChild(this.placeholderElement);\n      }\n      this.hoverElement.parentNode.removeChild(this.hoverElement);\n      this.table.element.classList.remove(\"tabulator-block-select\");\n      if (this.toRow) {\n        this.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter);\n      }\n      this.moving = false;\n      this.toRow = false;\n      this.toRowAfter = false;\n      document.body.removeEventListener(\"mousemove\", this.moveHover);\n      document.body.removeEventListener(\"mouseup\", this.endMove);\n      if (this.connection) {\n        this.table.element.classList.remove(\"tabulator-movingrow-sending\");\n        this.disconnectFromTables();\n      }\n    }\n  }\n  moveRow(row, after) {\n    this.toRow = row;\n    this.toRowAfter = after;\n  }\n  moveHover(e) {\n    if (this.connection) {\n      this.moveHoverConnections.call(this, e);\n    } else {\n      this.moveHoverTable.call(this, e);\n    }\n  }\n  moveHoverTable(e) {\n    var rowHolder = this.table.rowManager.getElement(),\n      scrollTop = rowHolder.scrollTop,\n      yPos = (this.touchMove ? e.touches[0].pageY : e.pageY) - rowHolder.getBoundingClientRect().top + scrollTop;\n    this.hoverElement.style.top = yPos - this.startY + \"px\";\n  }\n  moveHoverConnections(e) {\n    this.hoverElement.style.left = this.startX + (this.touchMove ? e.touches[0].pageX : e.pageX) + \"px\";\n    this.hoverElement.style.top = this.startY + (this.touchMove ? e.touches[0].pageY : e.pageY) + \"px\";\n  }\n  elementRowDrop(e, element, row) {\n    this.dispatchExternal(\"movableRowsElementDrop\", e, element, row ? row.getComponent() : false);\n  }\n\n  //establish connection with other tables\n  connectToTables(row) {\n    var connectionTables;\n    if (this.connectionSelectorsTables) {\n      connectionTables = this.commsConnections(this.connectionSelectorsTables);\n      this.dispatchExternal(\"movableRowsSendingStart\", connectionTables);\n      this.commsSend(this.connectionSelectorsTables, \"moveRow\", \"connect\", {\n        row: row\n      });\n    }\n    if (this.connectionSelectorsElements) {\n      this.connectionElements = [];\n      if (!Array.isArray(this.connectionSelectorsElements)) {\n        this.connectionSelectorsElements = [this.connectionSelectorsElements];\n      }\n      this.connectionSelectorsElements.forEach(query => {\n        if (typeof query === \"string\") {\n          this.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(query)));\n        } else {\n          this.connectionElements.push(query);\n        }\n      });\n      this.connectionElements.forEach(element => {\n        var dropEvent = e => {\n          this.elementRowDrop(e, element, this.moving);\n        };\n        element.addEventListener(\"mouseup\", dropEvent);\n        element.tabulatorElementDropEvent = dropEvent;\n        element.classList.add(\"tabulator-movingrow-receiving\");\n      });\n    }\n  }\n\n  //disconnect from other tables\n  disconnectFromTables() {\n    var connectionTables;\n    if (this.connectionSelectorsTables) {\n      connectionTables = this.commsConnections(this.connectionSelectorsTables);\n      this.dispatchExternal(\"movableRowsSendingStop\", connectionTables);\n      this.commsSend(this.connectionSelectorsTables, \"moveRow\", \"disconnect\");\n    }\n    this.connectionElements.forEach(element => {\n      element.classList.remove(\"tabulator-movingrow-receiving\");\n      element.removeEventListener(\"mouseup\", element.tabulatorElementDropEvent);\n      delete element.tabulatorElementDropEvent;\n    });\n  }\n\n  //accept incomming connection\n  connect(table, row) {\n    if (!this.connectedTable) {\n      this.connectedTable = table;\n      this.connectedRow = row;\n      this.table.element.classList.add(\"tabulator-movingrow-receiving\");\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup) {\n          row.getElement().addEventListener(\"mouseup\", row.modules.moveRow.mouseup);\n        }\n      });\n      this.tableRowDropEvent = this.tableRowDrop.bind(this);\n      this.table.element.addEventListener(\"mouseup\", this.tableRowDropEvent);\n      this.dispatchExternal(\"movableRowsReceivingStart\", row, table);\n      return true;\n    } else {\n      console.warn(\"Move Row Error - Table cannot accept connection, already connected to table:\", this.connectedTable);\n      return false;\n    }\n  }\n\n  //close incomming connection\n  disconnect(table) {\n    if (table === this.connectedTable) {\n      this.connectedTable = false;\n      this.connectedRow = false;\n      this.table.element.classList.remove(\"tabulator-movingrow-receiving\");\n      this.table.rowManager.getDisplayRows().forEach(row => {\n        if (row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup) {\n          row.getElement().removeEventListener(\"mouseup\", row.modules.moveRow.mouseup);\n        }\n      });\n      this.table.element.removeEventListener(\"mouseup\", this.tableRowDropEvent);\n      this.dispatchExternal(\"movableRowsReceivingStop\", table);\n    } else {\n      console.warn(\"Move Row Error - trying to disconnect from non connected table\");\n    }\n  }\n  dropComplete(table, row, success) {\n    var sender = false;\n    if (success) {\n      switch (typeof this.table.options.movableRowsSender) {\n        case \"string\":\n          sender = this.senders[this.table.options.movableRowsSender];\n          break;\n        case \"function\":\n          sender = this.table.options.movableRowsSender;\n          break;\n      }\n      if (sender) {\n        sender.call(this, this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n      } else {\n        if (this.table.options.movableRowsSender) {\n          console.warn(\"Mover Row Error - no matching sender found:\", this.table.options.movableRowsSender);\n        }\n      }\n      this.dispatchExternal(\"movableRowsSent\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n    } else {\n      this.dispatchExternal(\"movableRowsSentFailed\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\n    }\n    this.endMove();\n  }\n  tableRowDrop(e, row) {\n    var receiver = false,\n      success = false;\n    e.stopImmediatePropagation();\n    switch (typeof this.table.options.movableRowsReceiver) {\n      case \"string\":\n        receiver = this.receivers[this.table.options.movableRowsReceiver];\n        break;\n      case \"function\":\n        receiver = this.table.options.movableRowsReceiver;\n        break;\n    }\n    if (receiver) {\n      success = receiver.call(this, this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    } else {\n      console.warn(\"Mover Row Error - no matching receiver found:\", this.table.options.movableRowsReceiver);\n    }\n    if (success) {\n      this.dispatchExternal(\"movableRowsReceived\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    } else {\n      this.dispatchExternal(\"movableRowsReceivedFailed\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\n    }\n    this.commsSend(this.connectedTable, \"moveRow\", \"dropcomplete\", {\n      row: row,\n      success: success\n    });\n  }\n  commsReceived(table, action, data) {\n    switch (action) {\n      case \"connect\":\n        return this.connect(table, data.row);\n      case \"disconnect\":\n        return this.disconnect(table);\n      case \"dropcomplete\":\n        return this.dropComplete(table, data.row, data.success);\n    }\n  }\n}\nMoveRows.prototype.receivers = {\n  insert: function (fromRow, toRow, fromTable) {\n    this.table.addRow(fromRow.getData(), undefined, toRow);\n    return true;\n  },\n  add: function (fromRow, toRow, fromTable) {\n    this.table.addRow(fromRow.getData());\n    return true;\n  },\n  update: function (fromRow, toRow, fromTable) {\n    if (toRow) {\n      toRow.update(fromRow.getData());\n      return true;\n    }\n    return false;\n  },\n  replace: function (fromRow, toRow, fromTable) {\n    if (toRow) {\n      this.table.addRow(fromRow.getData(), undefined, toRow);\n      toRow.delete();\n      return true;\n    }\n    return false;\n  }\n};\nMoveRows.prototype.senders = {\n  delete: function (fromRow, toRow, toTable) {\n    fromRow.delete();\n  }\n};\nMoveRows.moduleName = \"moveRow\";\nvar defaultMutators = {};\nclass Mutator extends Module {\n  constructor(table) {\n    super(table);\n    this.allowedTypes = [\"\", \"data\", \"edit\", \"clipboard\"]; //list of muatation types\n    this.enabled = true;\n    this.registerColumnOption(\"mutator\");\n    this.registerColumnOption(\"mutatorParams\");\n    this.registerColumnOption(\"mutatorData\");\n    this.registerColumnOption(\"mutatorDataParams\");\n    this.registerColumnOption(\"mutatorEdit\");\n    this.registerColumnOption(\"mutatorEditParams\");\n    this.registerColumnOption(\"mutatorClipboard\");\n    this.registerColumnOption(\"mutatorClipboardParams\");\n  }\n  initialize() {\n    this.subscribe(\"cell-value-changing\", this.transformCell.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"row-data-init-before\", this.rowDataChanged.bind(this));\n    this.subscribe(\"row-data-changing\", this.rowDataChanged.bind(this));\n  }\n  rowDataChanged(row, tempData, updatedData) {\n    return this.transformRow(tempData, \"data\", updatedData);\n  }\n\n  //initialize column mutator\n  initializeColumn(column) {\n    var match = false,\n      config = {};\n    this.allowedTypes.forEach(type => {\n      var key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n        mutator;\n      if (column.definition[key]) {\n        mutator = this.lookupMutator(column.definition[key]);\n        if (mutator) {\n          match = true;\n          config[key] = {\n            mutator: mutator,\n            params: column.definition[key + \"Params\"] || {}\n          };\n        }\n      }\n    });\n    if (match) {\n      column.modules.mutate = config;\n    }\n  }\n  lookupMutator(value) {\n    var mutator = false;\n\n    //set column mutator\n    switch (typeof value) {\n      case \"string\":\n        if (Mutator.mutators[value]) {\n          mutator = Mutator.mutators[value];\n        } else {\n          console.warn(\"Mutator Error - No such mutator found, ignoring: \", value);\n        }\n        break;\n      case \"function\":\n        mutator = value;\n        break;\n    }\n    return mutator;\n  }\n\n  //apply mutator to row\n  transformRow(data, type, updatedData) {\n    var key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\n      value;\n    if (this.enabled) {\n      this.table.columnManager.traverse(column => {\n        var mutator, params, component;\n        if (column.modules.mutate) {\n          mutator = column.modules.mutate[key] || column.modules.mutate.mutator || false;\n          if (mutator) {\n            value = column.getFieldValue(typeof updatedData !== \"undefined\" ? updatedData : data);\n            if (type == \"data\" || typeof value !== \"undefined\") {\n              component = column.getComponent();\n              params = typeof mutator.params === \"function\" ? mutator.params(value, data, type, component) : mutator.params;\n              column.setFieldValue(data, mutator.mutator(value, data, type, params, component));\n            }\n          }\n        }\n      });\n    }\n    return data;\n  }\n\n  //apply mutator to new cell value\n  transformCell(cell, value) {\n    if (cell.column.modules.mutate) {\n      var mutator = cell.column.modules.mutate.mutatorEdit || cell.column.modules.mutate.mutator || false,\n        tempData = {};\n      if (mutator) {\n        tempData = Object.assign(tempData, cell.row.getData());\n        cell.column.setFieldValue(tempData, value);\n        return mutator.mutator(value, tempData, \"edit\", mutator.params, cell.getComponent());\n      }\n    }\n    return value;\n  }\n  enable() {\n    this.enabled = true;\n  }\n  disable() {\n    this.enabled = false;\n  }\n}\nMutator.moduleName = \"mutator\";\n\n//load defaults\nMutator.mutators = defaultMutators;\nclass Page extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = \"local\";\n    this.progressiveLoad = false;\n    this.size = 0;\n    this.page = 1;\n    this.count = 5;\n    this.max = 1;\n    this.displayIndex = 0; //index in display pipeline\n\n    this.initialLoad = true;\n    this.dataChanging = false; //flag to check if data is being changed by this module\n\n    this.pageSizes = [];\n    this.registerTableOption(\"pagination\", false); //set pagination type\n    this.registerTableOption(\"paginationMode\", \"local\"); //local or remote pagination\n    this.registerTableOption(\"paginationSize\", false); //set number of rows to a page\n    this.registerTableOption(\"paginationInitialPage\", 1); //initial page to show on load\n    this.registerTableOption(\"paginationButtonCount\", 5); // set count of page button\n    this.registerTableOption(\"paginationSizeSelector\", false); //add pagination size selector element\n    this.registerTableOption(\"paginationElement\", false); //element to hold pagination numbers\n    // this.registerTableOption(\"paginationDataSent\", {}); //pagination data sent to the server\n    // this.registerTableOption(\"paginationDataReceived\", {}); //pagination data received from the server\n    this.registerTableOption(\"paginationAddRow\", \"page\"); //add rows on table or page\n\n    this.registerTableOption(\"progressiveLoad\", false); //progressive loading\n    this.registerTableOption(\"progressiveLoadDelay\", 0); //delay between requests\n    this.registerTableOption(\"progressiveLoadScrollMargin\", 0); //margin before scroll begins\n\n    this.registerTableFunction(\"setMaxPage\", this.setMaxPage.bind(this));\n    this.registerTableFunction(\"setPage\", this.setPage.bind(this));\n    this.registerTableFunction(\"setPageToRow\", this.userSetPageToRow.bind(this));\n    this.registerTableFunction(\"setPageSize\", this.userSetPageSize.bind(this));\n    this.registerTableFunction(\"getPageSize\", this.getPageSize.bind(this));\n    this.registerTableFunction(\"previousPage\", this.previousPage.bind(this));\n    this.registerTableFunction(\"nextPage\", this.nextPage.bind(this));\n    this.registerTableFunction(\"getPage\", this.getPage.bind(this));\n    this.registerTableFunction(\"getPageMax\", this.getPageMax.bind(this));\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"pageTo\", this.setPageToRow.bind(this));\n  }\n  initialize() {\n    if (this.table.options.pagination) {\n      this.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\n      this.subscribe(\"row-adding-position\", this.rowAddingPosition.bind(this));\n      this.subscribe(\"row-added\", this.rowsUpdated.bind(this));\n      this.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\n      this.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\n      if (this.table.options.paginationMode === \"remote\") {\n        this.subscribe(\"data-params\", this.remotePageParams.bind(this));\n        this.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\n      }\n      if (this.table.options.progressiveLoad) {\n        console.error(\"Progressive Load Error - Pagination and progressive load cannot be used at the same time\");\n      }\n      this.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40);\n      this.registerDisplayHandler(this.getRows.bind(this), 50);\n      this.createElements();\n      this.initializePaginator();\n    } else if (this.table.options.progressiveLoad) {\n      this.subscribe(\"data-params\", this.remotePageParams.bind(this));\n      this.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\n      this.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\n      this.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\n      this.initializeProgressive(this.table.options.progressiveLoad);\n      if (this.table.options.progressiveLoad === \"scroll\") {\n        this.subscribe(\"scroll-vertical\", this.scrollVertical.bind(this));\n      }\n    }\n  }\n  rowAddingPosition(row, top) {\n    var rowManager = this.table.rowManager,\n      dispRows = rowManager.getDisplayRows(),\n      index;\n    if (top) {\n      if (dispRows.length) {\n        index = dispRows[0];\n      } else {\n        if (rowManager.activeRows.length) {\n          index = rowManager.activeRows[rowManager.activeRows.length - 1];\n          top = false;\n        }\n      }\n    } else {\n      if (dispRows.length) {\n        index = dispRows[dispRows.length - 1];\n        top = dispRows.length < this.size ? false : true;\n      }\n    }\n    return {\n      index,\n      top\n    };\n  }\n  calculatePageSizes() {\n    var testElRow, testElCell;\n    if (this.table.options.paginationSize) {\n      this.size = this.table.options.paginationSize;\n    } else {\n      testElRow = document.createElement(\"div\");\n      testElRow.classList.add(\"tabulator-row\");\n      testElRow.style.visibility = \"hidden\";\n      testElCell = document.createElement(\"div\");\n      testElCell.classList.add(\"tabulator-cell\");\n      testElCell.innerHTML = \"Page Row Test\";\n      testElRow.appendChild(testElCell);\n      this.table.rowManager.getTableElement().appendChild(testElRow);\n      this.size = Math.floor(this.table.rowManager.getElement().clientHeight / testElRow.offsetHeight);\n      this.table.rowManager.getTableElement().removeChild(testElRow);\n    }\n    this.generatePageSizeSelectList();\n  }\n  initialLoadComplete() {\n    this.initialLoad = false;\n  }\n  remotePageParams(data, config, silent, params) {\n    if (!this.initialLoad) {\n      if (this.progressiveLoad && !silent || !this.progressiveLoad && !this.dataChanging) {\n        this.reset(true);\n      }\n    }\n\n    //configure request params\n    params.page = this.page;\n\n    //set page size if defined\n    if (this.size) {\n      params.size = this.size;\n    }\n    return params;\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  userSetPageToRow(row) {\n    if (this.table.options.pagination) {\n      row = this.rowManager.findRow(row);\n      if (row) {\n        return this.setPageToRow(row);\n      }\n    }\n    return Promise.reject();\n  }\n  userSetPageSize(size) {\n    if (this.table.options.pagination) {\n      this.setPageSize(size);\n      return this.setPage(1);\n    } else {\n      return false;\n    }\n  }\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  scrollVertical(top, dir) {\n    var element, diff, margin;\n    if (!dir && !this.table.dataLoader.loading) {\n      element = this.table.rowManager.getElement();\n      diff = element.scrollHeight - element.clientHeight - top;\n      margin = this.table.options.progressiveLoadScrollMargin || element.clientHeight * 2;\n      if (diff < margin) {\n        this.nextPage().catch(() => {}); //consume the exception thrown when on the last page\n      }\n    }\n  }\n\n  restOnRenderBefore(rows, renderInPosition) {\n    if (!renderInPosition) {\n      if (this.mode === \"local\") {\n        this.reset();\n      }\n    }\n    return rows;\n  }\n  rowsUpdated() {\n    this.refreshData(true, \"all\");\n  }\n  createElements() {\n    var button;\n    this.element = document.createElement(\"span\");\n    this.element.classList.add(\"tabulator-paginator\");\n    this.pagesElement = document.createElement(\"span\");\n    this.pagesElement.classList.add(\"tabulator-pages\");\n    button = document.createElement(\"button\");\n    button.classList.add(\"tabulator-page\");\n    button.setAttribute(\"type\", \"button\");\n    button.setAttribute(\"role\", \"button\");\n    button.setAttribute(\"aria-label\", \"\");\n    button.setAttribute(\"title\", \"\");\n    this.firstBut = button.cloneNode(true);\n    this.firstBut.setAttribute(\"data-page\", \"first\");\n    this.prevBut = button.cloneNode(true);\n    this.prevBut.setAttribute(\"data-page\", \"prev\");\n    this.nextBut = button.cloneNode(true);\n    this.nextBut.setAttribute(\"data-page\", \"next\");\n    this.lastBut = button.cloneNode(true);\n    this.lastBut.setAttribute(\"data-page\", \"last\");\n    if (this.table.options.paginationSizeSelector) {\n      this.pageSizeSelect = document.createElement(\"select\");\n      this.pageSizeSelect.classList.add(\"tabulator-page-size\");\n    }\n  }\n  generatePageSizeSelectList() {\n    var pageSizes = [];\n    if (this.pageSizeSelect) {\n      if (Array.isArray(this.table.options.paginationSizeSelector)) {\n        pageSizes = this.table.options.paginationSizeSelector;\n        this.pageSizes = pageSizes;\n        if (this.pageSizes.indexOf(this.size) == -1) {\n          pageSizes.unshift(this.size);\n        }\n      } else {\n        if (this.pageSizes.indexOf(this.size) == -1) {\n          pageSizes = [];\n          for (let i = 1; i < 5; i++) {\n            pageSizes.push(this.size * i);\n          }\n          this.pageSizes = pageSizes;\n        } else {\n          pageSizes = this.pageSizes;\n        }\n      }\n      while (this.pageSizeSelect.firstChild) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);\n      pageSizes.forEach(item => {\n        var itemEl = document.createElement(\"option\");\n        itemEl.value = item;\n        if (item === true) {\n          this.langBind(\"pagination|all\", function (value) {\n            itemEl.innerHTML = value;\n          });\n        } else {\n          itemEl.innerHTML = item;\n        }\n        this.pageSizeSelect.appendChild(itemEl);\n      });\n      this.pageSizeSelect.value = this.size;\n    }\n  }\n\n  //setup pageination\n  initializePaginator(hidden) {\n    var pageSelectLabel;\n    if (!hidden) {\n      //build pagination element\n\n      //bind localizations\n      this.langBind(\"pagination|first\", value => {\n        this.firstBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|first_title\", value => {\n        this.firstBut.setAttribute(\"aria-label\", value);\n        this.firstBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|prev\", value => {\n        this.prevBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|prev_title\", value => {\n        this.prevBut.setAttribute(\"aria-label\", value);\n        this.prevBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|next\", value => {\n        this.nextBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|next_title\", value => {\n        this.nextBut.setAttribute(\"aria-label\", value);\n        this.nextBut.setAttribute(\"title\", value);\n      });\n      this.langBind(\"pagination|last\", value => {\n        this.lastBut.innerHTML = value;\n      });\n      this.langBind(\"pagination|last_title\", value => {\n        this.lastBut.setAttribute(\"aria-label\", value);\n        this.lastBut.setAttribute(\"title\", value);\n      });\n\n      //click bindings\n      this.firstBut.addEventListener(\"click\", () => {\n        this.setPage(1);\n      });\n      this.prevBut.addEventListener(\"click\", () => {\n        this.previousPage();\n      });\n      this.nextBut.addEventListener(\"click\", () => {\n        this.nextPage();\n      });\n      this.lastBut.addEventListener(\"click\", () => {\n        this.setPage(this.max);\n      });\n      if (this.table.options.paginationElement) {\n        this.element = this.table.options.paginationElement;\n      }\n      if (this.pageSizeSelect) {\n        pageSelectLabel = document.createElement(\"label\");\n        this.langBind(\"pagination|page_size\", value => {\n          this.pageSizeSelect.setAttribute(\"aria-label\", value);\n          this.pageSizeSelect.setAttribute(\"title\", value);\n          pageSelectLabel.innerHTML = value;\n        });\n        this.element.appendChild(pageSelectLabel);\n        this.element.appendChild(this.pageSizeSelect);\n        this.pageSizeSelect.addEventListener(\"change\", e => {\n          this.setPageSize(this.pageSizeSelect.value == \"true\" ? true : this.pageSizeSelect.value);\n          this.setPage(1);\n        });\n      }\n\n      //append to DOM\n      this.element.appendChild(this.firstBut);\n      this.element.appendChild(this.prevBut);\n      this.element.appendChild(this.pagesElement);\n      this.element.appendChild(this.nextBut);\n      this.element.appendChild(this.lastBut);\n      if (!this.table.options.paginationElement && !hidden) {\n        this.table.footerManager.append(this.element, this);\n      }\n      this.page = this.table.options.paginationInitialPage;\n      this.count = this.table.options.paginationButtonCount;\n    }\n\n    //set default values\n    this.mode = this.table.options.paginationMode;\n  }\n  initializeProgressive(mode) {\n    this.initializePaginator(true);\n    this.mode = \"progressive_\" + mode;\n    this.progressiveLoad = true;\n  }\n  trackChanges() {\n    this.dispatch(\"page-changed\");\n  }\n  setDisplayIndex(index) {\n    this.displayIndex = index;\n  }\n  getDisplayIndex() {\n    return this.displayIndex;\n  }\n\n  //calculate maximum page from number of rows\n  setMaxRows(rowCount) {\n    if (!rowCount) {\n      this.max = 1;\n    } else {\n      this.max = this.size === true ? 1 : Math.ceil(rowCount / this.size);\n    }\n    if (this.page > this.max) {\n      this.page = this.max;\n    }\n  }\n\n  //reset to first page without triggering action\n  reset(force) {\n    if (!this.initialLoad) {\n      if (this.mode == \"local\" || force) {\n        this.page = 1;\n      }\n    }\n  }\n\n  //set the maximum page\n  setMaxPage(max) {\n    max = parseInt(max);\n    this.max = max || 1;\n    if (this.page > this.max) {\n      this.page = this.max;\n      this.trigger();\n    }\n  }\n\n  //set current page number\n  setPage(page) {\n    switch (page) {\n      case \"first\":\n        return this.setPage(1);\n      case \"prev\":\n        return this.previousPage();\n      case \"next\":\n        return this.nextPage();\n      case \"last\":\n        return this.setPage(this.max);\n    }\n    page = parseInt(page);\n    if (page > 0 && page <= this.max || this.mode !== \"local\") {\n      this.page = page;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      console.warn(\"Pagination Error - Requested page is out of range of 1 - \" + this.max + \":\", page);\n      return Promise.reject();\n    }\n  }\n  setPageToRow(row) {\n    var rows = this.table.rowManager.getDisplayRows(this.displayIndex - 1);\n    var index = rows.indexOf(row);\n    if (index > -1) {\n      var page = this.size === true ? 1 : Math.ceil((index + 1) / this.size);\n      return this.setPage(page);\n    } else {\n      console.warn(\"Pagination Error - Requested row is not visible\");\n      return Promise.reject();\n    }\n  }\n  setPageSize(size) {\n    if (size !== true) {\n      size = parseInt(size);\n    }\n    if (size > 0) {\n      this.size = size;\n    }\n    if (this.pageSizeSelect) {\n      // this.pageSizeSelect.value = size;\n      this.generatePageSizeSelectList();\n    }\n    this.trackChanges();\n  }\n\n  //setup the pagination buttons\n  _setPageButtons() {\n    let leftSize = Math.floor((this.count - 1) / 2);\n    let rightSize = Math.ceil((this.count - 1) / 2);\n    let min = this.max - this.page + leftSize + 1 < this.count ? this.max - this.count + 1 : Math.max(this.page - leftSize, 1);\n    let max = this.page <= rightSize ? Math.min(this.count, this.max) : Math.min(this.page + rightSize, this.max);\n    while (this.pagesElement.firstChild) this.pagesElement.removeChild(this.pagesElement.firstChild);\n    if (this.page == 1) {\n      this.firstBut.disabled = true;\n      this.prevBut.disabled = true;\n    } else {\n      this.firstBut.disabled = false;\n      this.prevBut.disabled = false;\n    }\n    if (this.page == this.max) {\n      this.lastBut.disabled = true;\n      this.nextBut.disabled = true;\n    } else {\n      this.lastBut.disabled = false;\n      this.nextBut.disabled = false;\n    }\n    for (let i = min; i <= max; i++) {\n      if (i > 0 && i <= this.max) {\n        this.pagesElement.appendChild(this._generatePageButton(i));\n      }\n    }\n    this.footerRedraw();\n  }\n  _generatePageButton(page) {\n    var button = document.createElement(\"button\");\n    button.classList.add(\"tabulator-page\");\n    if (page == this.page) {\n      button.classList.add(\"active\");\n    }\n    button.setAttribute(\"type\", \"button\");\n    button.setAttribute(\"role\", \"button\");\n    this.langBind(\"pagination|page_title\", value => {\n      button.setAttribute(\"aria-label\", value + \" \" + page);\n      button.setAttribute(\"title\", value + \" \" + page);\n    });\n    button.setAttribute(\"data-page\", page);\n    button.textContent = page;\n    button.addEventListener(\"click\", e => {\n      this.setPage(page);\n    });\n    return button;\n  }\n\n  //previous page\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      console.warn(\"Pagination Error - Previous page would be less than page 1:\", 0);\n      return Promise.reject();\n    }\n  }\n\n  //next page\n  nextPage() {\n    if (this.page < this.max) {\n      this.page++;\n      this.trackChanges();\n      return this.trigger();\n    } else {\n      if (!this.progressiveLoad) {\n        console.warn(\"Pagination Error - Next page would be greater than maximum page of \" + this.max + \":\", this.max + 1);\n      }\n      return Promise.reject();\n    }\n  }\n\n  //return current page number\n  getPage() {\n    return this.page;\n  }\n\n  //return max page number\n  getPageMax() {\n    return this.max;\n  }\n  getPageSize(size) {\n    return this.size;\n  }\n  getMode() {\n    return this.mode;\n  }\n\n  //return appropriate rows for current page\n  getRows(data) {\n    var output, start, end;\n    if (this.mode == \"local\") {\n      output = [];\n      this.setMaxRows(data.length);\n      if (this.size === true) {\n        start = 0;\n        end = data.length;\n      } else {\n        start = this.size * (this.page - 1);\n        end = start + parseInt(this.size);\n      }\n      this._setPageButtons();\n      for (let i = start; i < end; i++) {\n        if (data[i]) {\n          output.push(data[i]);\n        }\n      }\n      return output;\n    } else {\n      this._setPageButtons();\n      return data.slice(0);\n    }\n  }\n  trigger() {\n    var left;\n    switch (this.mode) {\n      case \"local\":\n        left = this.table.rowManager.scrollLeft;\n        this.refreshData();\n        this.table.rowManager.scrollHorizontal(left);\n        this.dispatchExternal(\"pageLoaded\", this.getPage());\n        return Promise.resolve();\n      case \"remote\":\n        this.dataChanging = true;\n        return this.reloadData(null).finally(() => {\n          this.dataChanging = false;\n        });\n      case \"progressive_load\":\n      case \"progressive_scroll\":\n        return this.reloadData(null, true);\n      default:\n        console.warn(\"Pagination Error - no such pagination mode:\", this.mode);\n        return Promise.reject();\n    }\n  }\n  _parseRemoteData(data) {\n    var data, margin;\n    if (typeof data.last_page === \"undefined\") {\n      console.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").last_page || \"last_page\") + \"' property\");\n    }\n    if (data.data) {\n      this.max = parseInt(data.last_page) || 1;\n      if (this.progressiveLoad) {\n        switch (this.mode) {\n          case \"progressive_load\":\n            if (this.page == 1) {\n              this.table.rowManager.setData(data.data, false, this.page == 1);\n            } else {\n              this.table.rowManager.addRows(data.data);\n            }\n            if (this.page < this.max) {\n              setTimeout(() => {\n                this.nextPage();\n              }, this.table.options.progressiveLoadDelay);\n            }\n            break;\n          case \"progressive_scroll\":\n            data = this.page === 1 ? data.data : this.table.rowManager.getData().concat(data.data);\n            this.table.rowManager.setData(data, this.page !== 1, this.page == 1);\n            margin = this.table.options.progressiveLoadScrollMargin || this.table.rowManager.element.clientHeight * 2;\n            if (this.table.rowManager.element.scrollHeight <= this.table.rowManager.element.clientHeight + margin) {\n              setTimeout(() => {\n                this.nextPage();\n              });\n            }\n            break;\n        }\n        return false;\n      } else {\n        // left = this.table.rowManager.scrollLeft;\n        this.dispatchExternal(\"pageLoaded\", this.getPage());\n        // this.table.rowManager.scrollHorizontal(left);\n        // this.table.columnManager.scrollHorizontal(left);\n      }\n    } else {\n      console.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").data || \"data\") + \"' property\");\n    }\n    return data.data;\n  }\n\n  //handle the footer element being redrawn\n  footerRedraw() {\n    var footer = this.table.footerManager.element;\n    if (Math.ceil(footer.clientWidth) - footer.scrollWidth < 0) {\n      this.pagesElement.style.display = 'none';\n    } else {\n      this.pagesElement.style.display = '';\n      if (Math.ceil(footer.clientWidth) - footer.scrollWidth < 0) {\n        this.pagesElement.style.display = 'none';\n      }\n    }\n  }\n}\nPage.moduleName = \"page\";\n\n// read peristence information from storage\nvar defaultReaders = {\n  local: function (id, type) {\n    var data = localStorage.getItem(id + \"-\" + type);\n    return data ? JSON.parse(data) : false;\n  },\n  cookie: function (id, type) {\n    var cookie = document.cookie,\n      key = id + \"-\" + type,\n      cookiePos = cookie.indexOf(key + \"=\"),\n      end,\n      data;\n\n    //if cookie exists, decode and load column data into tabulator\n    if (cookiePos > -1) {\n      cookie = cookie.substr(cookiePos);\n      end = cookie.indexOf(\";\");\n      if (end > -1) {\n        cookie = cookie.substr(0, end);\n      }\n      data = cookie.replace(key + \"=\", \"\");\n    }\n    return data ? JSON.parse(data) : false;\n  }\n};\n\n//write persistence information to storage\nvar defaultWriters = {\n  local: function (id, type, data) {\n    localStorage.setItem(id + \"-\" + type, JSON.stringify(data));\n  },\n  cookie: function (id, type, data) {\n    var expireDate = new Date();\n    expireDate.setDate(expireDate.getDate() + 10000);\n    document.cookie = id + \"-\" + type + \"=\" + JSON.stringify(data) + \"; expires=\" + expireDate.toUTCString();\n  }\n};\nclass Persistence extends Module {\n  constructor(table) {\n    super(table);\n    this.mode = \"\";\n    this.id = \"\";\n    // this.persistProps = [\"field\", \"width\", \"visible\"];\n    this.defWatcherBlock = false;\n    this.config = {};\n    this.readFunc = false;\n    this.writeFunc = false;\n    this.registerTableOption(\"persistence\", false);\n    this.registerTableOption(\"persistenceID\", \"\"); //key for persistent storage\n    this.registerTableOption(\"persistenceMode\", true); //mode for storing persistence information\n    this.registerTableOption(\"persistenceReaderFunc\", false); //function for handling persistence data reading\n    this.registerTableOption(\"persistenceWriterFunc\", false); //function for handling persistence data writing\n  }\n\n  // Test for whether localStorage is available for use.\n  localStorageTest() {\n    var testKey = \"_tabulator_test\";\n    try {\n      window.localStorage.setItem(testKey, testKey);\n      window.localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  //setup parameters\n  initialize() {\n    if (this.table.options.persistence) {\n      //determine persistent layout storage type\n      var mode = this.table.options.persistenceMode,\n        id = this.table.options.persistenceID,\n        retreivedData;\n      this.mode = mode !== true ? mode : this.localStorageTest() ? \"local\" : \"cookie\";\n      if (this.table.options.persistenceReaderFunc) {\n        if (typeof this.table.options.persistenceReaderFunc === \"function\") {\n          this.readFunc = this.table.options.persistenceReaderFunc;\n        } else {\n          if (Persistence.readers[this.table.options.persistenceReaderFunc]) {\n            this.readFunc = Persistence.readers[this.table.options.persistenceReaderFunc];\n          } else {\n            console.warn(\"Persistence Read Error - invalid reader set\", this.table.options.persistenceReaderFunc);\n          }\n        }\n      } else {\n        if (Persistence.readers[this.mode]) {\n          this.readFunc = Persistence.readers[this.mode];\n        } else {\n          console.warn(\"Persistence Read Error - invalid reader set\", this.mode);\n        }\n      }\n      if (this.table.options.persistenceWriterFunc) {\n        if (typeof this.table.options.persistenceWriterFunc === \"function\") {\n          this.writeFunc = this.table.options.persistenceWriterFunc;\n        } else {\n          if (Persistence.writers[this.table.options.persistenceWriterFunc]) {\n            this.writeFunc = Persistence.writers[this.table.options.persistenceWriterFunc];\n          } else {\n            console.warn(\"Persistence Write Error - invalid reader set\", this.table.options.persistenceWriterFunc);\n          }\n        }\n      } else {\n        if (Persistence.writers[this.mode]) {\n          this.writeFunc = Persistence.writers[this.mode];\n        } else {\n          console.warn(\"Persistence Write Error - invalid writer set\", this.mode);\n        }\n      }\n\n      //set storage tag\n      this.id = \"tabulator-\" + (id || this.table.element.getAttribute(\"id\") || \"\");\n      this.config = {\n        sort: this.table.options.persistence === true || this.table.options.persistence.sort,\n        filter: this.table.options.persistence === true || this.table.options.persistence.filter,\n        group: this.table.options.persistence === true || this.table.options.persistence.group,\n        page: this.table.options.persistence === true || this.table.options.persistence.page,\n        columns: this.table.options.persistence === true ? [\"title\", \"width\", \"visible\"] : this.table.options.persistence.columns\n      };\n\n      //load pagination data if needed\n      if (this.config.page) {\n        retreivedData = this.retreiveData(\"page\");\n        if (retreivedData) {\n          if (typeof retreivedData.paginationSize !== \"undefined\" && (this.config.page === true || this.config.page.size)) {\n            this.table.options.paginationSize = retreivedData.paginationSize;\n          }\n          if (typeof retreivedData.paginationInitialPage !== \"undefined\" && (this.config.page === true || this.config.page.page)) {\n            this.table.options.paginationInitialPage = retreivedData.paginationInitialPage;\n          }\n        }\n      }\n\n      //load group data if needed\n      if (this.config.group) {\n        retreivedData = this.retreiveData(\"group\");\n        if (retreivedData) {\n          if (typeof retreivedData.groupBy !== \"undefined\" && (this.config.group === true || this.config.group.groupBy)) {\n            this.table.options.groupBy = retreivedData.groupBy;\n          }\n          if (typeof retreivedData.groupStartOpen !== \"undefined\" && (this.config.group === true || this.config.group.groupStartOpen)) {\n            this.table.options.groupStartOpen = retreivedData.groupStartOpen;\n          }\n          if (typeof retreivedData.groupHeader !== \"undefined\" && (this.config.group === true || this.config.group.groupHeader)) {\n            this.table.options.groupHeader = retreivedData.groupHeader;\n          }\n        }\n      }\n      if (this.config.columns) {\n        this.table.options.columns = this.load(\"columns\", this.table.options.columns);\n        this.subscribe(\"column-init\", this.initializeColumn.bind(this));\n        this.subscribe(\"column-show\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"column-hide\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"column-moved\", this.save.bind(this, \"columns\"));\n        this.subscribe(\"table-built\", this.tableBuilt.bind(this), 0);\n      }\n      this.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\n      this.subscribe(\"filter-changed\", this.eventSave.bind(this, \"filter\"));\n      this.subscribe(\"sort-changed\", this.eventSave.bind(this, \"sort\"));\n      this.subscribe(\"group-changed\", this.eventSave.bind(this, \"group\"));\n      this.subscribe(\"page-changed\", this.eventSave.bind(this, \"page\"));\n      this.subscribe(\"column-resized\", this.eventSave.bind(this, \"columns\"));\n      this.subscribe(\"layout-refreshed\", this.eventSave.bind(this, \"columns\"));\n    }\n    this.registerTableFunction(\"getColumnLayout\", this.getColumnLayout.bind(this));\n    this.registerTableFunction(\"setColumnLayout\", this.setColumnLayout.bind(this));\n  }\n  eventSave(type) {\n    if (this.config[type]) {\n      this.save(type);\n    }\n  }\n  tableBuilt() {\n    var options = this.table.options,\n      sorters,\n      filters;\n    if (this.config.sort) {\n      sorters = this.load(\"sort\");\n      if (!sorters === false) {\n        this.table.initialSort = sorters;\n      }\n    }\n    if (this.config.filter) {\n      filters = this.load(\"filter\");\n      if (!filters === false) {\n        this.table.initialFilter = filters;\n      }\n    }\n  }\n  tableRedraw(force) {\n    if (force && this.config.columns) {\n      this.save(\"columns\");\n    }\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  getColumnLayout() {\n    return this.parseColumns(this.table.columnManager.getColumns());\n  }\n  setColumnLayout(layout) {\n    this.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, layout));\n    return true;\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  initializeColumn(column) {\n    var def, keys;\n    if (this.config.columns) {\n      this.defWatcherBlock = true;\n      def = column.getDefinition();\n      keys = this.config.columns === true ? Object.keys(def) : this.config.columns;\n      keys.forEach(key => {\n        var props = Object.getOwnPropertyDescriptor(def, key);\n        var value = def[key];\n        if (props) {\n          Object.defineProperty(def, key, {\n            set: function (newValue) {\n              value = newValue;\n              if (!this.defWatcherBlock) {\n                this.save(\"columns\");\n              }\n              if (props.set) {\n                props.set(newValue);\n              }\n            },\n            get: function () {\n              if (props.get) {\n                props.get();\n              }\n              return value;\n            }\n          });\n        }\n      });\n      this.defWatcherBlock = false;\n    }\n  }\n\n  //load saved definitions\n  load(type, current) {\n    var data = this.retreiveData(type);\n    if (current) {\n      data = data ? this.mergeDefinition(current, data) : current;\n    }\n    return data;\n  }\n\n  //retreive data from memory\n  retreiveData(type) {\n    return this.readFunc ? this.readFunc(this.id, type) : false;\n  }\n\n  //merge old and new column definitions\n  mergeDefinition(oldCols, newCols) {\n    var output = [];\n    newCols = newCols || [];\n    newCols.forEach((column, to) => {\n      var from = this._findColumn(oldCols, column),\n        keys;\n      if (from) {\n        if (this.config.columns === true || this.config.columns == undefined) {\n          keys = Object.keys(from);\n          keys.push(\"width\");\n        } else {\n          keys = this.config.columns;\n        }\n        keys.forEach(key => {\n          if (key !== \"columns\" && typeof column[key] !== \"undefined\") {\n            from[key] = column[key];\n          }\n        });\n        if (from.columns) {\n          from.columns = this.mergeDefinition(from.columns, column.columns);\n        }\n        output.push(from);\n      }\n    });\n    oldCols.forEach((column, i) => {\n      var from = this._findColumn(newCols, column);\n      if (!from) {\n        if (output.length > i) {\n          output.splice(i, 0, column);\n        } else {\n          output.push(column);\n        }\n      }\n    });\n    return output;\n  }\n\n  //find matching columns\n  _findColumn(columns, subject) {\n    var type = subject.columns ? \"group\" : subject.field ? \"field\" : \"object\";\n    return columns.find(function (col) {\n      switch (type) {\n        case \"group\":\n          return col.title === subject.title && col.columns.length === subject.columns.length;\n        case \"field\":\n          return col.field === subject.field;\n        case \"object\":\n          return col === subject;\n      }\n    });\n  }\n\n  //save data\n  save(type) {\n    var data = {};\n    switch (type) {\n      case \"columns\":\n        data = this.parseColumns(this.table.columnManager.getColumns());\n        break;\n      case \"filter\":\n        data = this.table.modules.filter.getFilters();\n        break;\n      case \"sort\":\n        data = this.validateSorters(this.table.modules.sort.getSort());\n        break;\n      case \"group\":\n        data = this.getGroupConfig();\n        break;\n      case \"page\":\n        data = this.getPageConfig();\n        break;\n    }\n    if (this.writeFunc) {\n      this.writeFunc(this.id, type, data);\n    }\n  }\n\n  //ensure sorters contain no function data\n  validateSorters(data) {\n    data.forEach(function (item) {\n      item.column = item.field;\n      delete item.field;\n    });\n    return data;\n  }\n  getGroupConfig() {\n    var data = {};\n    if (this.config.group) {\n      if (this.config.group === true || this.config.group.groupBy) {\n        data.groupBy = this.table.options.groupBy;\n      }\n      if (this.config.group === true || this.config.group.groupStartOpen) {\n        data.groupStartOpen = this.table.options.groupStartOpen;\n      }\n      if (this.config.group === true || this.config.group.groupHeader) {\n        data.groupHeader = this.table.options.groupHeader;\n      }\n    }\n    return data;\n  }\n  getPageConfig() {\n    var data = {};\n    if (this.config.page) {\n      if (this.config.page === true || this.config.page.size) {\n        data.paginationSize = this.table.modules.page.getPageSize();\n      }\n      if (this.config.page === true || this.config.page.page) {\n        data.paginationInitialPage = this.table.modules.page.getPage();\n      }\n    }\n    return data;\n  }\n\n  //parse columns for data to store\n  parseColumns(columns) {\n    var definitions = [],\n      excludedKeys = [\"headerContextMenu\", \"headerMenu\", \"contextMenu\", \"clickMenu\"];\n    columns.forEach(column => {\n      var defStore = {},\n        colDef = column.getDefinition(),\n        keys;\n      if (column.isGroup) {\n        defStore.title = colDef.title;\n        defStore.columns = this.parseColumns(column.getColumns());\n      } else {\n        defStore.field = column.getField();\n        if (this.config.columns === true || this.config.columns == undefined) {\n          keys = Object.keys(colDef);\n          keys.push(\"width\");\n        } else {\n          keys = this.config.columns;\n        }\n        keys.forEach(key => {\n          switch (key) {\n            case \"width\":\n              defStore.width = column.getWidth();\n              break;\n            case \"visible\":\n              defStore.visible = column.visible;\n              break;\n            default:\n              if (typeof colDef[key] !== \"function\" && excludedKeys.indexOf(key) === -1) {\n                defStore[key] = colDef[key];\n              }\n          }\n        });\n      }\n      definitions.push(defStore);\n    });\n    return definitions;\n  }\n}\nPersistence.moduleName = \"persistence\";\n\n//load defaults\nPersistence.readers = defaultReaders;\nPersistence.writers = defaultWriters;\nclass Print extends Module {\n  constructor(table) {\n    super(table);\n    this.element = false;\n    this.manualBlock = false;\n    this.registerTableOption(\"printAsHtml\", false); //enable print as html\n    this.registerTableOption(\"printFormatter\", false); //printing page formatter\n    this.registerTableOption(\"printHeader\", false); //page header contents\n    this.registerTableOption(\"printFooter\", false); //page footer contents\n    this.registerTableOption(\"printStyled\", true); //enable print as html styling\n    this.registerTableOption(\"printRowRange\", \"visible\"); //restrict print to visible rows only\n    this.registerTableOption(\"printConfig\", {}); //print config options\n\n    this.registerColumnOption(\"print\");\n    this.registerColumnOption(\"titlePrint\");\n  }\n  initialize() {\n    if (this.table.options.printAsHtml) {\n      window.addEventListener(\"beforeprint\", this.replaceTable.bind(this));\n      window.addEventListener(\"afterprint\", this.cleanup.bind(this));\n    }\n    this.registerTableFunction(\"print\", this.printFullscreen.bind(this));\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  replaceTable() {\n    if (!this.manualBlock) {\n      this.element = document.createElement(\"div\");\n      this.element.classList.add(\"tabulator-print-table\");\n      this.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, \"print\"));\n      this.table.element.style.display = \"none\";\n      this.table.element.parentNode.insertBefore(this.element, this.table.element);\n    }\n  }\n  cleanup() {\n    document.body.classList.remove(\"tabulator-print-fullscreen-hide\");\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n      this.table.element.style.display = \"\";\n    }\n  }\n  printFullscreen(visible, style, config) {\n    var scrollX = window.scrollX,\n      scrollY = window.scrollY,\n      headerEl = document.createElement(\"div\"),\n      footerEl = document.createElement(\"div\"),\n      tableEl = this.table.modules.export.genereateTable(typeof config != \"undefined\" ? config : this.table.options.printConfig, typeof style != \"undefined\" ? style : this.table.options.printStyled, visible || this.table.options.printRowRange, \"print\"),\n      headerContent,\n      footerContent;\n    this.manualBlock = true;\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"tabulator-print-fullscreen\");\n    if (this.table.options.printHeader) {\n      headerEl.classList.add(\"tabulator-print-header\");\n      headerContent = typeof this.table.options.printHeader == \"function\" ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader;\n      if (typeof headerContent == \"string\") {\n        headerEl.innerHTML = headerContent;\n      } else {\n        headerEl.appendChild(headerContent);\n      }\n      this.element.appendChild(headerEl);\n    }\n    this.element.appendChild(tableEl);\n    if (this.table.options.printFooter) {\n      footerEl.classList.add(\"tabulator-print-footer\");\n      footerContent = typeof this.table.options.printFooter == \"function\" ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter;\n      if (typeof footerContent == \"string\") {\n        footerEl.innerHTML = footerContent;\n      } else {\n        footerEl.appendChild(footerContent);\n      }\n      this.element.appendChild(footerEl);\n    }\n    document.body.classList.add(\"tabulator-print-fullscreen-hide\");\n    document.body.appendChild(this.element);\n    if (this.table.options.printFormatter) {\n      this.table.options.printFormatter(this.element, tableEl);\n    }\n    window.print();\n    this.cleanup();\n    window.scrollTo(scrollX, scrollY);\n    this.manualBlock = false;\n  }\n}\nPrint.moduleName = \"print\";\nclass ReactiveData extends Module {\n  constructor(table) {\n    super(table);\n    this.data = false;\n    this.blocked = false; //block reactivity while performing update\n    this.origFuncs = {}; // hold original data array functions to allow replacement after data is done with\n    this.currentVersion = 0;\n    this.registerTableOption(\"reactiveData\", false); //enable data reactivity\n  }\n\n  initialize() {\n    if (this.table.options.reactiveData) {\n      this.subscribe(\"cell-value-save-before\", this.block.bind(this));\n      this.subscribe(\"cell-value-save-after\", this.unblock.bind(this));\n      this.subscribe(\"row-data-save-before\", this.block.bind(this));\n      this.subscribe(\"row-data-save-after\", this.unblock.bind(this));\n      this.subscribe(\"row-data-init-after\", this.watchRow.bind(this));\n      this.subscribe(\"data-processing\", this.watchData.bind(this));\n      this.subscribe(\"table-destroy\", this.unwatchData.bind(this));\n    }\n  }\n  watchData(data) {\n    var self = this,\n      version;\n    this.currentVersion++;\n    version = this.currentVersion;\n    this.unwatchData();\n    this.data = data;\n\n    //override array push function\n    this.origFuncs.push = data.push;\n    Object.defineProperty(this.data, \"push\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments);\n        if (!self.blocked && version === self.currentVersion) {\n          args.forEach(arg => {\n            self.table.rowManager.addRowActual(arg, false);\n          });\n        }\n        return self.origFuncs.push.apply(data, arguments);\n      }\n    });\n\n    //override array unshift function\n    this.origFuncs.unshift = data.unshift;\n    Object.defineProperty(this.data, \"unshift\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments);\n        if (!self.blocked && version === self.currentVersion) {\n          args.forEach(arg => {\n            self.table.rowManager.addRowActual(arg, true);\n          });\n        }\n        return self.origFuncs.unshift.apply(data, arguments);\n      }\n    });\n\n    //override array shift function\n    this.origFuncs.shift = data.shift;\n    Object.defineProperty(this.data, \"shift\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var row;\n        if (!self.blocked && version === self.currentVersion) {\n          if (self.data.length) {\n            row = self.table.rowManager.getRowFromDataObject(self.data[0]);\n            if (row) {\n              row.deleteActual();\n            }\n          }\n        }\n        return self.origFuncs.shift.call(data);\n      }\n    });\n\n    //override array pop function\n    this.origFuncs.pop = data.pop;\n    Object.defineProperty(this.data, \"pop\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var row;\n        if (!self.blocked && version === self.currentVersion) {\n          if (self.data.length) {\n            row = self.table.rowManager.getRowFromDataObject(self.data[self.data.length - 1]);\n            if (row) {\n              row.deleteActual();\n            }\n          }\n        }\n        return self.origFuncs.pop.call(data);\n      }\n    });\n\n    //override array splice function\n    this.origFuncs.splice = data.splice;\n    Object.defineProperty(this.data, \"splice\", {\n      enumerable: false,\n      configurable: true,\n      value: function () {\n        var args = Array.from(arguments),\n          start = args[0] < 0 ? data.length + args[0] : args[0],\n          end = args[1],\n          newRows = args[2] ? args.slice(2) : false,\n          startRow;\n        if (!self.blocked && version === self.currentVersion) {\n          //add new rows\n          if (newRows) {\n            startRow = data[start] ? self.table.rowManager.getRowFromDataObject(data[start]) : false;\n            if (startRow) {\n              newRows.forEach(rowData => {\n                self.table.rowManager.addRowActual(rowData, true, startRow, true);\n              });\n            } else {\n              newRows = newRows.slice().reverse();\n              newRows.forEach(rowData => {\n                self.table.rowManager.addRowActual(rowData, true, false, true);\n              });\n            }\n          }\n\n          //delete removed rows\n          if (end !== 0) {\n            var oldRows = data.slice(start, typeof args[1] === \"undefined\" ? args[1] : start + end);\n            oldRows.forEach((rowData, i) => {\n              var row = self.table.rowManager.getRowFromDataObject(rowData);\n              if (row) {\n                row.deleteActual(i !== oldRows.length - 1);\n              }\n            });\n          }\n          if (newRows || end !== 0) {\n            self.table.rowManager.reRenderInPosition();\n          }\n        }\n        return self.origFuncs.splice.apply(data, arguments);\n      }\n    });\n  }\n  unwatchData() {\n    if (this.data !== false) {\n      for (var key in this.origFuncs) {\n        Object.defineProperty(this.data, key, {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: this.origFuncs.key\n        });\n      }\n    }\n  }\n  watchRow(row) {\n    var data = row.getData();\n    this.blocked = true;\n    for (var key in data) {\n      this.watchKey(row, data, key);\n    }\n    if (this.table.options.dataTree) {\n      this.watchTreeChildren(row);\n    }\n    this.blocked = false;\n  }\n  watchTreeChildren(row) {\n    var childField = row.getData()[this.table.options.dataTreeChildField],\n      origFuncs = {};\n    function rebuildTree() {\n      this.table.modules.dataTree.initializeRow(row);\n      this.table.modules.dataTree.layoutRow(row);\n      this.table.rowManager.refreshActiveData(\"tree\", false, true);\n    }\n    if (childField) {\n      origFuncs.push = childField.push;\n      Object.defineProperty(childField, \"push\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.push.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.unshift = childField.unshift;\n      Object.defineProperty(childField, \"unshift\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.unshift.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.shift = childField.shift;\n      Object.defineProperty(childField, \"shift\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.shift.call(childField);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.pop = childField.pop;\n      Object.defineProperty(childField, \"pop\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.pop.call(childField);\n          rebuildTree();\n          return result;\n        }\n      });\n      origFuncs.splice = childField.splice;\n      Object.defineProperty(childField, \"splice\", {\n        enumerable: false,\n        configurable: true,\n        value: () => {\n          var result = origFuncs.splice.apply(childField, arguments);\n          rebuildTree();\n          return result;\n        }\n      });\n    }\n  }\n  watchKey(row, data, key) {\n    var props = Object.getOwnPropertyDescriptor(data, key),\n      value = data[key],\n      version = this.currentVersion;\n    Object.defineProperty(data, key, {\n      set: newValue => {\n        value = newValue;\n        if (!this.blocked && version === this.currentVersion) {\n          var update = {};\n          update[key] = newValue;\n          row.updateData(update);\n        }\n        if (props.set) {\n          props.set(newValue);\n        }\n      },\n      get: () => {\n        if (props.get) {\n          props.get();\n        }\n        return value;\n      }\n    });\n  }\n  unwatchRow(row) {\n    var data = row.getData();\n    for (var key in data) {\n      Object.defineProperty(data, key, {\n        value: data[key]\n      });\n    }\n  }\n  block() {\n    this.blocked = true;\n  }\n  unblock() {\n    this.blocked = false;\n  }\n}\nReactiveData.moduleName = \"reactiveData\";\nclass ResizeColumns extends Module {\n  constructor(table) {\n    super(table);\n    this.startColumn = false;\n    this.startX = false;\n    this.startWidth = false;\n    this.handle = null;\n    this.prevHandle = null;\n    this.registerColumnOption(\"resizable\", true);\n  }\n  initialize() {\n    // if(this.table.options.resizableColumns){\n    this.subscribe(\"cell-layout\", this.layoutCellHandles.bind(this));\n    this.subscribe(\"column-init\", this.layoutColumnHeader.bind(this));\n    // }\n  }\n\n  layoutCellHandles(cell) {\n    if (cell.row.type === \"row\") {\n      this.initializeColumn(\"cell\", cell.column, cell.element);\n    }\n  }\n  layoutColumnHeader(column) {\n    this.initializeColumn(\"header\", column, column.element);\n  }\n  initializeColumn(type, column, element) {\n    var self = this,\n      variableHeight = false,\n      mode = column.definition.resizable;\n\n    //set column resize mode\n    if (type === \"header\") {\n      variableHeight = column.definition.formatter == \"textarea\" || column.definition.variableHeight;\n      column.modules.resize = {\n        variableHeight: variableHeight\n      };\n    }\n    if (mode === true || mode == type) {\n      var handle = document.createElement('div');\n      handle.className = \"tabulator-col-resize-handle\";\n      var prevHandle = document.createElement('div');\n      prevHandle.className = \"tabulator-col-resize-handle prev\";\n      handle.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n      });\n      var handleDown = function (e) {\n        var nearestColumn = column.getLastColumn();\n        if (nearestColumn && self._checkResizability(nearestColumn)) {\n          self.startColumn = column;\n          self._mouseDown(e, nearestColumn, handle);\n        }\n      };\n      handle.addEventListener(\"mousedown\", handleDown);\n      handle.addEventListener(\"touchstart\", handleDown, {\n        passive: true\n      });\n\n      //reszie column on  double click\n      handle.addEventListener(\"dblclick\", function (e) {\n        var col = column.getLastColumn();\n        if (col && self._checkResizability(col)) {\n          e.stopPropagation();\n          col.reinitializeWidth(true);\n        }\n      });\n      prevHandle.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n      });\n      var prevHandleDown = function (e) {\n        var nearestColumn, colIndex, prevColumn;\n        nearestColumn = column.getFirstColumn();\n        if (nearestColumn) {\n          colIndex = self.table.columnManager.findColumnIndex(nearestColumn);\n          prevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\n          if (prevColumn && self._checkResizability(prevColumn)) {\n            self.startColumn = column;\n            self._mouseDown(e, prevColumn, prevHandle);\n          }\n        }\n      };\n      prevHandle.addEventListener(\"mousedown\", prevHandleDown);\n      prevHandle.addEventListener(\"touchstart\", prevHandleDown, {\n        passive: true\n      });\n\n      //resize column on double click\n      prevHandle.addEventListener(\"dblclick\", function (e) {\n        var nearestColumn, colIndex, prevColumn;\n        nearestColumn = column.getFirstColumn();\n        if (nearestColumn) {\n          colIndex = self.table.columnManager.findColumnIndex(nearestColumn);\n          prevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\n          if (prevColumn && self._checkResizability(prevColumn)) {\n            e.stopPropagation();\n            prevColumn.reinitializeWidth(true);\n          }\n        }\n      });\n      element.appendChild(handle);\n      element.appendChild(prevHandle);\n    }\n  }\n  _checkResizability(column) {\n    return column.definition.resizable;\n  }\n  _mouseDown(e, column, handle) {\n    var self = this;\n    self.table.element.classList.add(\"tabulator-block-select\");\n    function mouseMove(e) {\n      // self.table.columnManager.tempScrollBlock();\n\n      if (self.table.rtl) {\n        column.setWidth(self.startWidth - ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\n      } else {\n        column.setWidth(self.startWidth + ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\n      }\n      self.table.columnManager.renderer.rerenderColumns(true);\n      if (!self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight) {\n        column.checkCellHeights();\n      }\n    }\n    function mouseUp(e) {\n      //block editor from taking action while resizing is taking place\n      if (self.startColumn.modules.edit) {\n        self.startColumn.modules.edit.blocked = false;\n      }\n      if (self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight) {\n        column.checkCellHeights();\n      }\n      document.body.removeEventListener(\"mouseup\", mouseUp);\n      document.body.removeEventListener(\"mousemove\", mouseMove);\n      handle.removeEventListener(\"touchmove\", mouseMove);\n      handle.removeEventListener(\"touchend\", mouseUp);\n      self.table.element.classList.remove(\"tabulator-block-select\");\n      self.dispatch(\"column-resized\", column);\n      self.table.externalEvents.dispatch(\"columnResized\", column.getComponent());\n    }\n    e.stopPropagation(); //prevent resize from interfereing with movable columns\n\n    //block editor from taking action while resizing is taking place\n    if (self.startColumn.modules.edit) {\n      self.startColumn.modules.edit.blocked = true;\n    }\n    self.startX = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX;\n    self.startWidth = column.getWidth();\n    document.body.addEventListener(\"mousemove\", mouseMove);\n    document.body.addEventListener(\"mouseup\", mouseUp);\n    handle.addEventListener(\"touchmove\", mouseMove, {\n      passive: true\n    });\n    handle.addEventListener(\"touchend\", mouseUp);\n  }\n}\nResizeColumns.moduleName = \"resizeColumns\";\nclass ResizeRows extends Module {\n  constructor(table) {\n    super(table);\n    this.startColumn = false;\n    this.startY = false;\n    this.startHeight = false;\n    this.handle = null;\n    this.prevHandle = null;\n    this.registerTableOption(\"resizableRows\", false); //resizable rows\n  }\n\n  initialize() {\n    if (this.table.options.resizableRows) {\n      this.subscribe(\"row-layout-after\", this.initializeRow.bind(this));\n    }\n  }\n  initializeRow(row) {\n    var self = this,\n      rowEl = row.getElement();\n    var handle = document.createElement('div');\n    handle.className = \"tabulator-row-resize-handle\";\n    var prevHandle = document.createElement('div');\n    prevHandle.className = \"tabulator-row-resize-handle prev\";\n    handle.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n    });\n    var handleDown = function (e) {\n      self.startRow = row;\n      self._mouseDown(e, row, handle);\n    };\n    handle.addEventListener(\"mousedown\", handleDown);\n    handle.addEventListener(\"touchstart\", handleDown, {\n      passive: true\n    });\n    prevHandle.addEventListener(\"click\", function (e) {\n      e.stopPropagation();\n    });\n    var prevHandleDown = function (e) {\n      var prevRow = self.table.rowManager.prevDisplayRow(row);\n      if (prevRow) {\n        self.startRow = prevRow;\n        self._mouseDown(e, prevRow, prevHandle);\n      }\n    };\n    prevHandle.addEventListener(\"mousedown\", prevHandleDown);\n    prevHandle.addEventListener(\"touchstart\", prevHandleDown, {\n      passive: true\n    });\n    rowEl.appendChild(handle);\n    rowEl.appendChild(prevHandle);\n  }\n  _mouseDown(e, row, handle) {\n    var self = this;\n    self.table.element.classList.add(\"tabulator-block-select\");\n    function mouseMove(e) {\n      row.setHeight(self.startHeight + ((typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY) - self.startY));\n    }\n    function mouseUp(e) {\n      // //block editor from taking action while resizing is taking place\n      // if(self.startColumn.modules.edit){\n      // \tself.startColumn.modules.edit.blocked = false;\n      // }\n\n      document.body.removeEventListener(\"mouseup\", mouseMove);\n      document.body.removeEventListener(\"mousemove\", mouseMove);\n      handle.removeEventListener(\"touchmove\", mouseMove);\n      handle.removeEventListener(\"touchend\", mouseUp);\n      self.table.element.classList.remove(\"tabulator-block-select\");\n      this.dispatchExternal(\"rowResized\", row.getComponent());\n    }\n    e.stopPropagation(); //prevent resize from interfereing with movable columns\n\n    //block editor from taking action while resizing is taking place\n    // if(self.startColumn.modules.edit){\n    // \tself.startColumn.modules.edit.blocked = true;\n    // }\n\n    self.startY = typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY;\n    self.startHeight = row.getHeight();\n    document.body.addEventListener(\"mousemove\", mouseMove);\n    document.body.addEventListener(\"mouseup\", mouseUp);\n    handle.addEventListener(\"touchmove\", mouseMove, {\n      passive: true\n    });\n    handle.addEventListener(\"touchend\", mouseUp);\n  }\n}\nResizeRows.moduleName = \"resizeRows\";\nclass ResizeTable extends Module {\n  constructor(table) {\n    super(table);\n    this.binding = false;\n    this.observer = false;\n    this.containerObserver = false;\n    this.tableHeight = 0;\n    this.tableWidth = 0;\n    this.containerHeight = 0;\n    this.containerWidth = 0;\n    this.autoResize = false;\n    this.registerTableOption(\"autoResize\", true); //auto resize table\n  }\n\n  initialize() {\n    if (this.table.options.autoResize) {\n      var table = this.table,\n        tableStyle;\n      this.tableHeight = table.element.clientHeight;\n      this.tableWidth = table.element.clientWidth;\n      if (table.element.parentNode) {\n        this.containerHeight = table.element.parentNode.clientHeight;\n        this.containerWidth = table.element.parentNode.clientWidth;\n      }\n      if (typeof ResizeObserver !== \"undefined\" && table.rowManager.getRenderMode() === \"virtual\") {\n        this.autoResize = true;\n        this.observer = new ResizeObserver(entry => {\n          if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n            var nodeHeight = Math.floor(entry[0].contentRect.height);\n            var nodeWidth = Math.floor(entry[0].contentRect.width);\n            if (this.tableHeight != nodeHeight || this.tableWidth != nodeWidth) {\n              this.tableHeight = nodeHeight;\n              this.tableWidth = nodeWidth;\n              if (table.element.parentNode) {\n                this.containerHeight = table.element.parentNode.clientHeight;\n                this.containerWidth = table.element.parentNode.clientWidth;\n              }\n              this.table.columnManager.renderer.rerenderColumns(true);\n              table.redraw();\n            }\n          }\n        });\n        this.observer.observe(table.element);\n        tableStyle = window.getComputedStyle(table.element);\n        if (this.table.element.parentNode && !this.table.rowManager.fixedHeight && (tableStyle.getPropertyValue(\"max-height\") || tableStyle.getPropertyValue(\"min-height\"))) {\n          this.containerObserver = new ResizeObserver(entry => {\n            if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n              var nodeHeight = Math.floor(entry[0].contentRect.height);\n              var nodeWidth = Math.floor(entry[0].contentRect.width);\n              if (this.containerHeight != nodeHeight || this.containerWidth != nodeWidth) {\n                this.containerHeight = nodeHeight;\n                this.containerWidth = nodeWidth;\n                this.tableHeight = table.element.clientHeight;\n                this.tableWidth = table.element.clientWidth;\n              }\n              table.columnManager.renderer.rerenderColumns(true);\n              table.redraw();\n            }\n          });\n          this.containerObserver.observe(this.table.element.parentNode);\n        }\n        this.subscribe(\"table-resize\", this.tableResized.bind(this));\n      } else {\n        this.binding = function () {\n          if (!table.browserMobile || table.browserMobile && !table.modules.edit.currentCell) {\n            table.columnManager.renderer.rerenderColumns(true);\n            table.redraw();\n          }\n        };\n        window.addEventListener(\"resize\", this.binding);\n      }\n      this.subscribe(\"table-destroy\", this.clearBindings.bind(this));\n    }\n  }\n  tableResized() {\n    this.table.rowManager.redraw();\n  }\n  clearBindings() {\n    if (this.binding) {\n      window.removeEventListener(\"resize\", this.binding);\n    }\n    if (this.observer) {\n      this.observer.unobserve(this.table.element);\n    }\n    if (this.containerObserver) {\n      this.containerObserver.unobserve(this.table.element.parentNode);\n    }\n  }\n}\nResizeTable.moduleName = \"resizeTable\";\nclass ResponsiveLayout extends Module {\n  constructor(table) {\n    super(table);\n    this.columns = [];\n    this.hiddenColumns = [];\n    this.mode = \"\";\n    this.index = 0;\n    this.collapseFormatter = [];\n    this.collapseStartOpen = true;\n    this.collapseHandleColumn = false;\n    this.registerTableOption(\"responsiveLayout\", false); //responsive layout flags\n    this.registerTableOption(\"responsiveLayoutCollapseStartOpen\", true); //start showing collapsed data\n    this.registerTableOption(\"responsiveLayoutCollapseUseFormatters\", true); //responsive layout collapse formatter\n    this.registerTableOption(\"responsiveLayoutCollapseFormatter\", false); //responsive layout collapse formatter\n\n    this.registerColumnOption(\"responsive\");\n  }\n\n  //generate responsive columns list\n  initialize() {\n    if (this.table.options.responsiveLayout) {\n      this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n      this.subscribe(\"column-show\", this.updateColumnVisibility.bind(this));\n      this.subscribe(\"column-hide\", this.updateColumnVisibility.bind(this));\n      this.subscribe(\"columns-loaded\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-moved\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-add\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"column-delete\", this.initializeResponsivity.bind(this));\n      this.subscribe(\"table-redrawing\", this.tableRedraw.bind(this));\n      if (this.table.options.responsiveLayout === \"collapse\") {\n        this.subscribe(\"row-init\", this.initializeRow.bind(this));\n        this.subscribe(\"row-layout\", this.layoutRow.bind(this));\n      }\n    }\n  }\n  tableRedraw(force) {\n    if ([\"fitColumns\", \"fitDataStretch\"].indexOf(this.layoutMode()) === -1) {\n      if (!force) {\n        this.update();\n      }\n    }\n  }\n  initializeResponsivity() {\n    var columns = [];\n    this.mode = this.table.options.responsiveLayout;\n    this.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData;\n    this.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen;\n    this.hiddenColumns = [];\n\n    //determine level of responsivity for each column\n    this.table.columnManager.columnsByIndex.forEach(function (column, i) {\n      if (column.modules.responsive) {\n        if (column.modules.responsive.order && column.modules.responsive.visible) {\n          column.modules.responsive.index = i;\n          columns.push(column);\n          if (!column.visible && self.mode === \"collapse\") {\n            self.hiddenColumns.push(column);\n          }\n        }\n      }\n    });\n\n    //sort list by responsivity\n    columns = columns.reverse();\n    columns = columns.sort(function (a, b) {\n      var diff = b.modules.responsive.order - a.modules.responsive.order;\n      return diff || b.modules.responsive.index - a.modules.responsive.index;\n    });\n    this.columns = columns;\n    if (this.mode === \"collapse\") {\n      this.generateCollapsedContent();\n    }\n\n    //assign collapse column\n    for (let col of this.table.columnManager.columnsByIndex) {\n      if (col.definition.formatter == \"responsiveCollapse\") {\n        this.collapseHandleColumn = col;\n        break;\n      }\n    }\n    if (this.collapseHandleColumn) {\n      if (this.hiddenColumns.length) {\n        this.collapseHandleColumn.show();\n      } else {\n        this.collapseHandleColumn.hide();\n      }\n    }\n  }\n\n  //define layout information\n  initializeColumn(column) {\n    var def = column.getDefinition();\n    column.modules.responsive = {\n      order: typeof def.responsive === \"undefined\" ? 1 : def.responsive,\n      visible: def.visible === false ? false : true\n    };\n  }\n  initializeRow(row) {\n    var el;\n    if (row.type !== \"calc\") {\n      el = document.createElement(\"div\");\n      el.classList.add(\"tabulator-responsive-collapse\");\n      row.modules.responsiveLayout = {\n        element: el,\n        open: this.collapseStartOpen\n      };\n      if (!this.collapseStartOpen) {\n        el.style.display = 'none';\n      }\n    }\n  }\n  layoutRow(row) {\n    var rowEl = row.getElement();\n    if (row.modules.responsiveLayout) {\n      rowEl.appendChild(row.modules.responsiveLayout.element);\n      this.generateCollapsedRowContent(row);\n    }\n  }\n\n  //update column visibility\n  updateColumnVisibility(column, responsiveToggle) {\n    if (!responsiveToggle && column.modules.responsive) {\n      column.modules.responsive.visible = column.visible;\n      this.initializeResponsivity();\n    }\n  }\n  hideColumn(column) {\n    var colCount = this.hiddenColumns.length;\n    column.hide(false, true);\n    if (this.mode === \"collapse\") {\n      this.hiddenColumns.unshift(column);\n      this.generateCollapsedContent();\n      if (this.collapseHandleColumn && !colCount) {\n        this.collapseHandleColumn.show();\n      }\n    }\n  }\n  showColumn(column) {\n    var index;\n    column.show(false, true);\n    //set column width to prevent calculation loops on uninitialized columns\n    column.setWidth(column.getWidth());\n    if (this.mode === \"collapse\") {\n      index = this.hiddenColumns.indexOf(column);\n      if (index > -1) {\n        this.hiddenColumns.splice(index, 1);\n      }\n      this.generateCollapsedContent();\n      if (this.collapseHandleColumn && !this.hiddenColumns.length) {\n        this.collapseHandleColumn.hide();\n      }\n    }\n  }\n\n  //redraw columns to fit space\n  update() {\n    var self = this,\n      working = true;\n    while (working) {\n      let width = self.table.modules.layout.getMode() == \"fitColumns\" ? self.table.columnManager.getFlexBaseWidth() : self.table.columnManager.getWidth();\n      let diff = (self.table.options.headerVisible ? self.table.columnManager.element.clientWidth : self.table.element.clientWidth) - width;\n      if (diff < 0) {\n        //table is too wide\n        let column = self.columns[self.index];\n        if (column) {\n          self.hideColumn(column);\n          self.index++;\n        } else {\n          working = false;\n        }\n      } else {\n        //table has spare space\n        let column = self.columns[self.index - 1];\n        if (column) {\n          if (diff > 0) {\n            if (diff >= column.getWidth()) {\n              self.showColumn(column);\n              self.index--;\n            } else {\n              working = false;\n            }\n          } else {\n            working = false;\n          }\n        } else {\n          working = false;\n        }\n      }\n      if (!self.table.rowManager.activeRowsCount) {\n        self.table.rowManager.renderEmptyScroll();\n      }\n    }\n  }\n  generateCollapsedContent() {\n    var self = this,\n      rows = this.table.rowManager.getDisplayRows();\n    rows.forEach(function (row) {\n      self.generateCollapsedRowContent(row);\n    });\n  }\n  generateCollapsedRowContent(row) {\n    var el, contents;\n    if (row.modules.responsiveLayout) {\n      el = row.modules.responsiveLayout.element;\n      while (el.firstChild) el.removeChild(el.firstChild);\n      contents = this.collapseFormatter(this.generateCollapsedRowData(row));\n      if (contents) {\n        el.appendChild(contents);\n      }\n    }\n  }\n  generateCollapsedRowData(row) {\n    var self = this,\n      data = row.getData(),\n      output = [],\n      mockCellComponent;\n    this.hiddenColumns.forEach(function (column) {\n      var value = column.getFieldValue(data);\n      if (column.definition.title && column.field) {\n        if (column.modules.format && self.table.options.responsiveLayoutCollapseUseFormatters) {\n          mockCellComponent = {\n            value: false,\n            data: {},\n            getValue: function () {\n              return value;\n            },\n            getData: function () {\n              return data;\n            },\n            getElement: function () {\n              return document.createElement(\"div\");\n            },\n            getRow: function () {\n              return row.getComponent();\n            },\n            getColumn: function () {\n              return column.getComponent();\n            }\n          };\n          function onRendered(callback) {\n            callback();\n          }\n          output.push({\n            field: column.field,\n            title: column.definition.title,\n            value: column.modules.format.formatter.call(self.table.modules.format, mockCellComponent, column.modules.format.params, onRendered)\n          });\n        } else {\n          output.push({\n            field: column.field,\n            title: column.definition.title,\n            value: value\n          });\n        }\n      }\n    });\n    return output;\n  }\n  formatCollapsedData(data) {\n    var list = document.createElement(\"table\");\n    data.forEach(function (item) {\n      var row = document.createElement(\"tr\");\n      var titleData = document.createElement(\"td\");\n      var valueData = document.createElement(\"td\");\n      var node_content;\n      var titleHighlight = document.createElement(\"strong\");\n      titleData.appendChild(titleHighlight);\n      this.langBind(\"columns|\" + item.field, function (text) {\n        titleHighlight.innerText = text || item.title;\n      });\n      if (item.value instanceof Node) {\n        node_content = document.createElement(\"div\");\n        node_content.appendChild(item.value);\n        valueData.appendChild(node_content);\n      } else {\n        valueData.innerHTML = item.value;\n      }\n      row.appendChild(titleData);\n      row.appendChild(valueData);\n      list.appendChild(row);\n    }, this);\n    return Object.keys(data).length ? list : \"\";\n  }\n}\nResponsiveLayout.moduleName = \"responsiveLayout\";\nclass SelectRow extends Module {\n  constructor(table) {\n    super(table);\n    this.selecting = false; //flag selecting in progress\n    this.lastClickedRow = false; //last clicked row\n    this.selectPrev = []; //hold previously selected element for drag drop selection\n    this.selectedRows = []; //hold selected rows\n    this.headerCheckboxElement = null; // hold header select element\n\n    this.registerTableOption(\"selectable\", \"highlight\"); //highlight rows on hover\n    this.registerTableOption(\"selectableRangeMode\", \"drag\"); //highlight rows on hover\n    this.registerTableOption(\"selectableRollingSelection\", true); //roll selection once maximum number of selectable rows is reached\n    this.registerTableOption(\"selectablePersistence\", true); // maintain selection when table view is updated\n    this.registerTableOption(\"selectableCheck\", function (data, row) {\n      return true;\n    }); //check wheather row is selectable\n\n    this.registerTableFunction(\"selectRow\", this.selectRows.bind(this));\n    this.registerTableFunction(\"deselectRow\", this.deselectRows.bind(this));\n    this.registerTableFunction(\"toggleSelectRow\", this.toggleRow.bind(this));\n    this.registerTableFunction(\"getSelectedRows\", this.getSelectedRows.bind(this));\n    this.registerTableFunction(\"getSelectedData\", this.getSelectedData.bind(this));\n\n    //register component functions\n    this.registerComponentFunction(\"row\", \"select\", this.selectRows.bind(this));\n    this.registerComponentFunction(\"row\", \"deselect\", this.deselectRows.bind(this));\n    this.registerComponentFunction(\"row\", \"toggleSelect\", this.toggleRow.bind(this));\n    this.registerComponentFunction(\"row\", \"isSelected\", this.isRowSelected.bind(this));\n  }\n  initialize() {\n    if (this.table.options.selectable !== false) {\n      this.subscribe(\"row-init\", this.initializeRow.bind(this));\n      this.subscribe(\"row-deleting\", this.rowDeleted.bind(this));\n      this.subscribe(\"rows-wipe\", this.clearSelectionData.bind(this));\n      this.subscribe(\"rows-retrieve\", this.rowRetrieve.bind(this));\n      if (this.table.options.selectable && !this.table.options.selectablePersistence) {\n        this.subscribe(\"data-refeshing\", this.deselectRows.bind(this));\n      }\n    }\n  }\n  rowRetrieve(type, prevValue) {\n    return type === \"selected\" ? this.selectedRows : prevValue;\n  }\n  rowDeleted(row) {\n    this._deselectRow(row, true);\n  }\n  clearSelectionData(silent) {\n    this.selecting = false;\n    this.lastClickedRow = false;\n    this.selectPrev = [];\n    this.selectedRows = [];\n    if (silent !== true) {\n      this._rowSelectionChanged();\n    }\n  }\n  initializeRow(row) {\n    var self = this,\n      element = row.getElement();\n\n    // trigger end of row selection\n    var endSelect = function () {\n      setTimeout(function () {\n        self.selecting = false;\n      }, 50);\n      document.body.removeEventListener(\"mouseup\", endSelect);\n    };\n    row.modules.select = {\n      selected: false\n    };\n\n    //set row selection class\n    if (self.table.options.selectableCheck.call(this.table, row.getComponent())) {\n      element.classList.add(\"tabulator-selectable\");\n      element.classList.remove(\"tabulator-unselectable\");\n      if (self.table.options.selectable && self.table.options.selectable != \"highlight\") {\n        if (self.table.options.selectableRangeMode === \"click\") {\n          element.addEventListener(\"click\", function (e) {\n            if (e.shiftKey) {\n              self.table._clearSelection();\n              self.lastClickedRow = self.lastClickedRow || row;\n              var lastClickedRowIdx = self.table.rowManager.getDisplayRowIndex(self.lastClickedRow);\n              var rowIdx = self.table.rowManager.getDisplayRowIndex(row);\n              var fromRowIdx = lastClickedRowIdx <= rowIdx ? lastClickedRowIdx : rowIdx;\n              var toRowIdx = lastClickedRowIdx >= rowIdx ? lastClickedRowIdx : rowIdx;\n              var rows = self.table.rowManager.getDisplayRows().slice(0);\n              var toggledRows = rows.splice(fromRowIdx, toRowIdx - fromRowIdx + 1);\n              if (e.ctrlKey || e.metaKey) {\n                toggledRows.forEach(function (toggledRow) {\n                  if (toggledRow !== self.lastClickedRow) {\n                    if (self.table.options.selectable !== true && !self.isRowSelected(row)) {\n                      if (self.selectedRows.length < self.table.options.selectable) {\n                        self.toggleRow(toggledRow);\n                      }\n                    } else {\n                      self.toggleRow(toggledRow);\n                    }\n                  }\n                });\n                self.lastClickedRow = row;\n              } else {\n                self.deselectRows(undefined, true);\n                if (self.table.options.selectable !== true) {\n                  if (toggledRows.length > self.table.options.selectable) {\n                    toggledRows = toggledRows.slice(0, self.table.options.selectable);\n                  }\n                }\n                self.selectRows(toggledRows);\n              }\n              self.table._clearSelection();\n            } else if (e.ctrlKey || e.metaKey) {\n              self.toggleRow(row);\n              self.lastClickedRow = row;\n            } else {\n              self.deselectRows(undefined, true);\n              self.selectRows(row);\n              self.lastClickedRow = row;\n            }\n          });\n        } else {\n          element.addEventListener(\"click\", function (e) {\n            if (!self.table.modExists(\"edit\") || !self.table.modules.edit.getCurrentCell()) {\n              self.table._clearSelection();\n            }\n            if (!self.selecting) {\n              self.toggleRow(row);\n            }\n          });\n          element.addEventListener(\"mousedown\", function (e) {\n            if (e.shiftKey) {\n              self.table._clearSelection();\n              self.selecting = true;\n              self.selectPrev = [];\n              document.body.addEventListener(\"mouseup\", endSelect);\n              document.body.addEventListener(\"keyup\", endSelect);\n              self.toggleRow(row);\n              return false;\n            }\n          });\n          element.addEventListener(\"mouseenter\", function (e) {\n            if (self.selecting) {\n              self.table._clearSelection();\n              self.toggleRow(row);\n              if (self.selectPrev[1] == row) {\n                self.toggleRow(self.selectPrev[0]);\n              }\n            }\n          });\n          element.addEventListener(\"mouseout\", function (e) {\n            if (self.selecting) {\n              self.table._clearSelection();\n              self.selectPrev.unshift(row);\n            }\n          });\n        }\n      }\n    } else {\n      element.classList.add(\"tabulator-unselectable\");\n      element.classList.remove(\"tabulator-selectable\");\n    }\n  }\n\n  //toggle row selection\n  toggleRow(row) {\n    if (this.table.options.selectableCheck.call(this.table, row.getComponent())) {\n      if (row.modules.select && row.modules.select.selected) {\n        this._deselectRow(row);\n      } else {\n        this._selectRow(row);\n      }\n    }\n  }\n\n  //select a number of rows\n  selectRows(rows) {\n    var rowMatch;\n    switch (typeof rows) {\n      case \"undefined\":\n        this.table.rowManager.rows.forEach(row => {\n          this._selectRow(row, true, true);\n        });\n        this._rowSelectionChanged();\n        break;\n      case \"string\":\n        rowMatch = this.table.rowManager.findRow(rows);\n        if (rowMatch) {\n          this._selectRow(rowMatch, true, true);\n        } else {\n          this.table.rowManager.getRows(rows).forEach(row => {\n            this._selectRow(row, true, true);\n          });\n        }\n        this._rowSelectionChanged();\n        break;\n      default:\n        if (Array.isArray(rows)) {\n          rows.forEach(row => {\n            this._selectRow(row, true, true);\n          });\n          this._rowSelectionChanged();\n        } else {\n          this._selectRow(rows, false, true);\n        }\n        break;\n    }\n  }\n\n  //select an individual row\n  _selectRow(rowInfo, silent, force) {\n    //handle max row count\n    if (!isNaN(this.table.options.selectable) && this.table.options.selectable !== true && !force) {\n      if (this.selectedRows.length >= this.table.options.selectable) {\n        if (this.table.options.selectableRollingSelection) {\n          this._deselectRow(this.selectedRows[0]);\n        } else {\n          return false;\n        }\n      }\n    }\n    var row = this.table.rowManager.findRow(rowInfo);\n    if (row) {\n      if (this.selectedRows.indexOf(row) == -1) {\n        row.getElement().classList.add(\"tabulator-selected\");\n        if (!row.modules.select) {\n          row.modules.select = {};\n        }\n        row.modules.select.selected = true;\n        if (row.modules.select.checkboxEl) {\n          row.modules.select.checkboxEl.checked = true;\n        }\n        this.selectedRows.push(row);\n        if (this.table.options.dataTreeSelectPropagate) {\n          this.childRowSelection(row, true);\n        }\n        this.dispatchExternal(\"rowSelected\", row.getComponent());\n        this._rowSelectionChanged(silent);\n      }\n    } else {\n      if (!silent) {\n        console.warn(\"Selection Error - No such row found, ignoring selection:\" + rowInfo);\n      }\n    }\n  }\n  isRowSelected(row) {\n    return this.selectedRows.indexOf(row) !== -1;\n  }\n\n  //deselect a number of rows\n  deselectRows(rows, silent) {\n    var self = this,\n      rowCount;\n    if (typeof rows == \"undefined\") {\n      rowCount = self.selectedRows.length;\n      for (let i = 0; i < rowCount; i++) {\n        self._deselectRow(self.selectedRows[0], true);\n      }\n      self._rowSelectionChanged(silent);\n    } else {\n      if (Array.isArray(rows)) {\n        rows.forEach(function (row) {\n          self._deselectRow(row, true);\n        });\n        self._rowSelectionChanged(silent);\n      } else {\n        self._deselectRow(rows, silent);\n      }\n    }\n  }\n\n  //deselect an individual row\n  _deselectRow(rowInfo, silent) {\n    var self = this,\n      row = self.table.rowManager.findRow(rowInfo),\n      index;\n    if (row) {\n      index = self.selectedRows.findIndex(function (selectedRow) {\n        return selectedRow == row;\n      });\n      if (index > -1) {\n        row.getElement().classList.remove(\"tabulator-selected\");\n        if (!row.modules.select) {\n          row.modules.select = {};\n        }\n        row.modules.select.selected = false;\n        if (row.modules.select.checkboxEl) {\n          row.modules.select.checkboxEl.checked = false;\n        }\n        self.selectedRows.splice(index, 1);\n        if (this.table.options.dataTreeSelectPropagate) {\n          this.childRowSelection(row, false);\n        }\n        this.dispatchExternal(\"rowDeselected\", row.getComponent());\n        self._rowSelectionChanged(silent);\n      }\n    } else {\n      if (!silent) {\n        console.warn(\"Deselection Error - No such row found, ignoring selection:\" + rowInfo);\n      }\n    }\n  }\n  getSelectedData() {\n    var data = [];\n    this.selectedRows.forEach(function (row) {\n      data.push(row.getData());\n    });\n    return data;\n  }\n  getSelectedRows() {\n    var rows = [];\n    this.selectedRows.forEach(function (row) {\n      rows.push(row.getComponent());\n    });\n    return rows;\n  }\n  _rowSelectionChanged(silent) {\n    if (this.headerCheckboxElement) {\n      if (this.selectedRows.length === 0) {\n        this.headerCheckboxElement.checked = false;\n        this.headerCheckboxElement.indeterminate = false;\n      } else if (this.table.rowManager.rows.length === this.selectedRows.length) {\n        this.headerCheckboxElement.checked = true;\n        this.headerCheckboxElement.indeterminate = false;\n      } else {\n        this.headerCheckboxElement.indeterminate = true;\n        this.headerCheckboxElement.checked = false;\n      }\n    }\n    if (!silent) {\n      this.dispatchExternal(\"rowSelectionChanged\", this.getSelectedData(), this.getSelectedRows());\n    }\n  }\n  registerRowSelectCheckbox(row, element) {\n    if (!row._row.modules.select) {\n      row._row.modules.select = {};\n    }\n    row._row.modules.select.checkboxEl = element;\n  }\n  registerHeaderSelectCheckbox(element) {\n    this.headerCheckboxElement = element;\n  }\n  childRowSelection(row, select) {\n    var children = this.table.modules.dataTree.getChildren(row, true);\n    if (select) {\n      for (let child of children) {\n        this._selectRow(child, true);\n      }\n    } else {\n      for (let child of children) {\n        this._deselectRow(child, true);\n      }\n    }\n  }\n}\nSelectRow.moduleName = \"selectRow\";\n\n//sort numbers\nfunction number$1(a, b, aRow, bRow, column, dir, params) {\n  var alignEmptyValues = params.alignEmptyValues;\n  var decimal = params.decimalSeparator;\n  var thousand = params.thousandSeparator;\n  var emptyAlign = 0;\n  a = String(a);\n  b = String(b);\n  if (thousand) {\n    a = a.split(thousand).join(\"\");\n    b = b.split(thousand).join(\"\");\n  }\n  if (decimal) {\n    a = a.split(decimal).join(\".\");\n    b = b.split(decimal).join(\".\");\n  }\n  a = parseFloat(a);\n  b = parseFloat(b);\n\n  //handle non numeric values\n  if (isNaN(a)) {\n    emptyAlign = isNaN(b) ? 0 : -1;\n  } else if (isNaN(b)) {\n    emptyAlign = 1;\n  } else {\n    //compare valid values\n    return a - b;\n  }\n\n  //fix empty values in position\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n  return emptyAlign;\n}\n\n//sort strings\nfunction string(a, b, aRow, bRow, column, dir, params) {\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n  var locale;\n\n  //handle empty values\n  if (!a) {\n    emptyAlign = !b ? 0 : -1;\n  } else if (!b) {\n    emptyAlign = 1;\n  } else {\n    //compare valid values\n    switch (typeof params.locale) {\n      case \"boolean\":\n        if (params.locale) {\n          locale = this.langLocale();\n        }\n        break;\n      case \"string\":\n        locale = params.locale;\n        break;\n    }\n    return String(a).toLowerCase().localeCompare(String(b).toLowerCase(), locale);\n  }\n\n  //fix empty values in position\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n  return emptyAlign;\n}\n\n//sort datetime\nfunction datetime$1(a, b, aRow, bRow, column, dir, params) {\n  var DT = window.DateTime || luxon.DateTime;\n  var format = params.format || \"dd/MM/yyyy HH:mm:ss\",\n    alignEmptyValues = params.alignEmptyValues,\n    emptyAlign = 0;\n  if (typeof DT != \"undefined\") {\n    a = DT.fromFormat(String(a), format);\n    b = DT.fromFormat(String(b), format);\n    if (!a.isValid) {\n      emptyAlign = !b.isValid ? 0 : -1;\n    } else if (!b.isValid) {\n      emptyAlign = 1;\n    } else {\n      //compare valid values\n      return a - b;\n    }\n\n    //fix empty values in position\n    if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n      emptyAlign *= -1;\n    }\n    return emptyAlign;\n  } else {\n    console.error(\"Sort Error - 'datetime' sorter is dependant on luxon.js\");\n  }\n}\n\n//sort date\nfunction date(a, b, aRow, bRow, column, dir, params) {\n  if (!params.format) {\n    params.format = \"dd/MM/yyyy\";\n  }\n  return datetime$1.call(this, a, b, aRow, bRow, column, dir, params);\n}\n\n//sort times\nfunction time(a, b, aRow, bRow, column, dir, params) {\n  if (!params.format) {\n    params.format = \"HH:mm\";\n  }\n  return datetime$1.call(this, a, b, aRow, bRow, column, dir, params);\n}\n\n//sort booleans\nfunction boolean(a, b, aRow, bRow, column, dir, params) {\n  var el1 = a === true || a === \"true\" || a === \"True\" || a === 1 ? 1 : 0;\n  var el2 = b === true || b === \"true\" || b === \"True\" || b === 1 ? 1 : 0;\n  return el1 - el2;\n}\n\n//sort if element contains any data\nfunction array(a, b, aRow, bRow, column, dir, params) {\n  var el1 = 0;\n  var el2 = 0;\n  var type = params.type || \"length\";\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n  function calc(value) {\n    switch (type) {\n      case \"length\":\n        return value.length;\n      case \"sum\":\n        return value.reduce(function (c, d) {\n          return c + d;\n        });\n      case \"max\":\n        return Math.max.apply(null, value);\n      case \"min\":\n        return Math.min.apply(null, value);\n      case \"avg\":\n        return value.reduce(function (c, d) {\n          return c + d;\n        }) / value.length;\n    }\n  }\n\n  //handle non array values\n  if (!Array.isArray(a)) {\n    alignEmptyValues = !Array.isArray(b) ? 0 : -1;\n  } else if (!Array.isArray(b)) {\n    alignEmptyValues = 1;\n  } else {\n    //compare valid values\n    el1 = a ? calc(a) : 0;\n    el2 = b ? calc(b) : 0;\n    return el1 - el2;\n  }\n\n  //fix empty values in position\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n  return emptyAlign;\n}\n\n//sort if element contains any data\nfunction exists(a, b, aRow, bRow, column, dir, params) {\n  var el1 = typeof a == \"undefined\" ? 0 : 1;\n  var el2 = typeof b == \"undefined\" ? 0 : 1;\n  return el1 - el2;\n}\n\n//sort alpha numeric strings\nfunction alphanum(as, bs, aRow, bRow, column, dir, params) {\n  var a,\n    b,\n    a1,\n    b1,\n    i = 0,\n    L,\n    rx = /(\\d+)|(\\D+)/g,\n    rd = /\\d/;\n  var alignEmptyValues = params.alignEmptyValues;\n  var emptyAlign = 0;\n\n  //handle empty values\n  if (!as && as !== 0) {\n    emptyAlign = !bs && bs !== 0 ? 0 : -1;\n  } else if (!bs && bs !== 0) {\n    emptyAlign = 1;\n  } else {\n    if (isFinite(as) && isFinite(bs)) return as - bs;\n    a = String(as).toLowerCase();\n    b = String(bs).toLowerCase();\n    if (a === b) return 0;\n    if (!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\n    a = a.match(rx);\n    b = b.match(rx);\n    L = a.length > b.length ? b.length : a.length;\n    while (i < L) {\n      a1 = a[i];\n      b1 = b[i++];\n      if (a1 !== b1) {\n        if (isFinite(a1) && isFinite(b1)) {\n          if (a1.charAt(0) === \"0\") a1 = \".\" + a1;\n          if (b1.charAt(0) === \"0\") b1 = \".\" + b1;\n          return a1 - b1;\n        } else return a1 > b1 ? 1 : -1;\n      }\n    }\n    return a.length > b.length;\n  }\n\n  //fix empty values in position\n  if (alignEmptyValues === \"top\" && dir === \"desc\" || alignEmptyValues === \"bottom\" && dir === \"asc\") {\n    emptyAlign *= -1;\n  }\n  return emptyAlign;\n}\nvar defaultSorters = {\n  number: number$1,\n  string: string,\n  date: date,\n  time: time,\n  datetime: datetime$1,\n  boolean: boolean,\n  array: array,\n  exists: exists,\n  alphanum: alphanum\n};\nclass Sort extends Module {\n  constructor(table) {\n    super(table);\n    this.sortList = []; //holder current sort\n    this.changed = false; //has the sort changed since last render\n\n    this.registerTableOption(\"sortMode\", \"local\"); //local or remote sorting\n\n    this.registerTableOption(\"initialSort\", false); //initial sorting criteria\n    this.registerTableOption(\"columnHeaderSortMulti\", true); //multiple or single column sorting\n    this.registerTableOption(\"sortOrderReverse\", false); //reverse internal sort ordering\n    this.registerTableOption(\"headerSortElement\", \"<div class='tabulator-arrow'></div>\"); //header sort element\n\n    this.registerColumnOption(\"sorter\");\n    this.registerColumnOption(\"sorterParams\");\n    this.registerColumnOption(\"headerSort\", true);\n    this.registerColumnOption(\"headerSortStartingDir\");\n    this.registerColumnOption(\"headerSortTristate\");\n  }\n  initialize() {\n    this.subscribe(\"column-layout\", this.initializeColumn.bind(this));\n    this.subscribe(\"table-built\", this.tableBuilt.bind(this));\n    this.registerDataHandler(this.sort.bind(this), 20);\n    this.registerTableFunction(\"setSort\", this.userSetSort.bind(this));\n    this.registerTableFunction(\"getSorters\", this.getSort.bind(this));\n    this.registerTableFunction(\"clearSort\", this.clearSort.bind(this));\n    if (this.table.options.sortMode === \"remote\") {\n      this.subscribe(\"data-params\", this.remoteSortParams.bind(this));\n    }\n  }\n  tableBuilt() {\n    if (this.table.options.initialSort) {\n      this.setSort(this.table.options.initialSort);\n    }\n  }\n  remoteSortParams(data, config, silent, params) {\n    var sorters = this.getSort();\n    sorters.forEach(item => {\n      delete item.column;\n    });\n    params.sort = sorters;\n    return params;\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  userSetSort(sortList, dir) {\n    this.setSort(sortList, dir);\n    // this.table.rowManager.sorterRefresh();\n    this.refreshSort();\n  }\n  clearSort() {\n    this.clear();\n    // this.table.rowManager.sorterRefresh();\n    this.refreshSort();\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  //initialize column header for sorting\n  initializeColumn(column) {\n    var sorter = false,\n      colEl,\n      arrowEl;\n    switch (typeof column.definition.sorter) {\n      case \"string\":\n        if (Sort.sorters[column.definition.sorter]) {\n          sorter = Sort.sorters[column.definition.sorter];\n        } else {\n          console.warn(\"Sort Error - No such sorter found: \", column.definition.sorter);\n        }\n        break;\n      case \"function\":\n        sorter = column.definition.sorter;\n        break;\n    }\n    column.modules.sort = {\n      sorter: sorter,\n      dir: \"none\",\n      params: column.definition.sorterParams || {},\n      startingDir: column.definition.headerSortStartingDir || \"asc\",\n      tristate: column.definition.headerSortTristate\n    };\n    if (column.definition.headerSort !== false) {\n      colEl = column.getElement();\n      colEl.classList.add(\"tabulator-sortable\");\n      arrowEl = document.createElement(\"div\");\n      arrowEl.classList.add(\"tabulator-col-sorter\");\n      if (typeof this.table.options.headerSortElement == \"object\") {\n        arrowEl.appendChild(this.table.options.headerSortElement);\n      } else {\n        arrowEl.innerHTML = this.table.options.headerSortElement;\n      }\n\n      //create sorter arrow\n      column.titleHolderElement.appendChild(arrowEl);\n      column.modules.sort.element = arrowEl;\n\n      //sort on click\n      colEl.addEventListener(\"click\", e => {\n        var dir = \"\",\n          sorters = [],\n          match = false;\n        if (column.modules.sort) {\n          if (column.modules.sort.tristate) {\n            if (column.modules.sort.dir == \"none\") {\n              dir = column.modules.sort.startingDir;\n            } else {\n              if (column.modules.sort.dir == column.modules.sort.startingDir) {\n                dir = column.modules.sort.dir == \"asc\" ? \"desc\" : \"asc\";\n              } else {\n                dir = \"none\";\n              }\n            }\n          } else {\n            switch (column.modules.sort.dir) {\n              case \"asc\":\n                dir = \"desc\";\n                break;\n              case \"desc\":\n                dir = \"asc\";\n                break;\n              default:\n                dir = column.modules.sort.startingDir;\n            }\n          }\n          if (this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)) {\n            sorters = this.getSort();\n            match = sorters.findIndex(sorter => {\n              return sorter.field === column.getField();\n            });\n            if (match > -1) {\n              sorters[match].dir = dir;\n              if (match != sorters.length - 1) {\n                match = sorters.splice(match, 1)[0];\n                if (dir != \"none\") {\n                  sorters.push(match);\n                }\n              }\n            } else {\n              if (dir != \"none\") {\n                sorters.push({\n                  column: column,\n                  dir: dir\n                });\n              }\n            }\n\n            //add to existing sort\n            this.setSort(sorters);\n          } else {\n            if (dir == \"none\") {\n              this.clear();\n            } else {\n              //sort by column only\n              this.setSort(column, dir);\n            }\n          }\n\n          // this.table.rowManager.sorterRefresh(!this.sortList.length);\n          this.refreshSort();\n        }\n      });\n    }\n  }\n  refreshSort() {\n    if (this.table.options.sortMode === \"remote\") {\n      this.reloadData();\n    } else {\n      this.refreshData(true);\n    }\n\n    //TODO - Persist left position of row manager\n    // left = this.scrollLeft;\n    // this.scrollHorizontal(left);\n  }\n\n  //check if the sorters have changed since last use\n  hasChanged() {\n    var changed = this.changed;\n    this.changed = false;\n    return changed;\n  }\n\n  //return current sorters\n  getSort() {\n    var self = this,\n      sorters = [];\n    self.sortList.forEach(function (item) {\n      if (item.column) {\n        sorters.push({\n          column: item.column.getComponent(),\n          field: item.column.getField(),\n          dir: item.dir\n        });\n      }\n    });\n    return sorters;\n  }\n\n  //change sort list and trigger sort\n  setSort(sortList, dir) {\n    var self = this,\n      newSortList = [];\n    if (!Array.isArray(sortList)) {\n      sortList = [{\n        column: sortList,\n        dir: dir\n      }];\n    }\n    sortList.forEach(function (item) {\n      var column;\n      column = self.table.columnManager.findColumn(item.column);\n      if (column) {\n        item.column = column;\n        newSortList.push(item);\n        self.changed = true;\n      } else {\n        console.warn(\"Sort Warning - Sort field does not exist and is being ignored: \", item.column);\n      }\n    });\n    self.sortList = newSortList;\n    this.dispatch(\"sort-changed\");\n  }\n\n  //clear sorters\n  clear() {\n    this.setSort([]);\n  }\n\n  //find appropriate sorter for column\n  findSorter(column) {\n    var row = this.table.rowManager.activeRows[0],\n      sorter = \"string\",\n      field,\n      value;\n    if (row) {\n      row = row.getData();\n      field = column.getField();\n      if (field) {\n        value = column.getFieldValue(row);\n        switch (typeof value) {\n          case \"undefined\":\n            sorter = \"string\";\n            break;\n          case \"boolean\":\n            sorter = \"boolean\";\n            break;\n          default:\n            if (!isNaN(value) && value !== \"\") {\n              sorter = \"number\";\n            } else {\n              if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)) {\n                sorter = \"alphanum\";\n              }\n            }\n            break;\n        }\n      }\n    }\n    return Sort.sorters[sorter];\n  }\n\n  //work through sort list sorting data\n  sort(data) {\n    var self = this,\n      sortList = this.table.options.sortOrderReverse ? self.sortList.slice().reverse() : self.sortList,\n      sortListActual = [],\n      rowComponents = [];\n    if (this.subscribedExternal(\"dataSorting\")) {\n      this.dispatchExternal(\"dataSorting\", self.getSort());\n    }\n    self.clearColumnHeaders();\n    if (this.table.options.sortMode !== \"remote\") {\n      //build list of valid sorters and trigger column specific callbacks before sort begins\n      sortList.forEach(function (item, i) {\n        var sortObj = item.column.modules.sort;\n        if (item.column && sortObj) {\n          //if no sorter has been defined, take a guess\n          if (!sortObj.sorter) {\n            sortObj.sorter = self.findSorter(item.column);\n          }\n          item.params = typeof sortObj.params === \"function\" ? sortObj.params(item.column.getComponent(), item.dir) : sortObj.params;\n          sortListActual.push(item);\n        }\n        self.setColumnHeader(item.column, item.dir);\n      });\n\n      //sort data\n      if (sortListActual.length) {\n        self._sortItems(data, sortListActual);\n      }\n    } else {\n      sortList.forEach(function (item, i) {\n        self.setColumnHeader(item.column, item.dir);\n      });\n    }\n    if (this.subscribedExternal(\"dataSorted\")) {\n      data.forEach(row => {\n        rowComponents.push(row.getComponent());\n      });\n      this.dispatchExternal(\"dataSorted\", self.getSort(), rowComponents);\n    }\n    return data;\n  }\n\n  //clear sort arrows on columns\n  clearColumnHeaders() {\n    this.table.columnManager.getRealColumns().forEach(function (column) {\n      if (column.modules.sort) {\n        column.modules.sort.dir = \"none\";\n        column.getElement().setAttribute(\"aria-sort\", \"none\");\n      }\n    });\n  }\n\n  //set the column header sort direction\n  setColumnHeader(column, dir) {\n    column.modules.sort.dir = dir;\n    column.getElement().setAttribute(\"aria-sort\", dir);\n  }\n\n  //sort each item in sort list\n  _sortItems(data, sortList) {\n    var sorterCount = sortList.length - 1;\n    data.sort((a, b) => {\n      var result;\n      for (var i = sorterCount; i >= 0; i--) {\n        let sortItem = sortList[i];\n        result = this._sortRow(a, b, sortItem.column, sortItem.dir, sortItem.params);\n        if (result !== 0) {\n          break;\n        }\n      }\n      return result;\n    });\n  }\n\n  //process individual rows for a sort function on active data\n  _sortRow(a, b, column, dir, params) {\n    var el1Comp, el2Comp;\n\n    //switch elements depending on search direction\n    var el1 = dir == \"asc\" ? a : b;\n    var el2 = dir == \"asc\" ? b : a;\n    a = column.getFieldValue(el1.getData());\n    b = column.getFieldValue(el2.getData());\n    a = typeof a !== \"undefined\" ? a : \"\";\n    b = typeof b !== \"undefined\" ? b : \"\";\n    el1Comp = el1.getComponent();\n    el2Comp = el2.getComponent();\n    return column.modules.sort.sorter.call(this, a, b, el1Comp, el2Comp, column.getComponent(), dir, params);\n  }\n}\nSort.moduleName = \"sort\";\n\n//load defaults\nSort.sorters = defaultSorters;\nvar defaultValidators = {\n  //is integer\n  integer: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    value = Number(value);\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n  },\n  //is float\n  float: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    value = Number(value);\n    return typeof value === 'number' && isFinite(value) && value % 1 !== 0;\n  },\n  //must be a number\n  numeric: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return !isNaN(value);\n  },\n  //must be a string\n  string: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return isNaN(value);\n  },\n  //maximum value\n  max: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return parseFloat(value) <= parameters;\n  },\n  //minimum value\n  min: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return parseFloat(value) >= parameters;\n  },\n  //starts with  value\n  starts: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return String(value).toLowerCase().startsWith(String(parameters).toLowerCase());\n  },\n  //ends with  value\n  ends: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return String(value).toLowerCase().endsWith(String(parameters).toLowerCase());\n  },\n  //minimum string length\n  minLength: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return String(value).length >= parameters;\n  },\n  //maximum string length\n  maxLength: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    return String(value).length <= parameters;\n  },\n  //in provided value list\n  in: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    if (typeof parameters == \"string\") {\n      parameters = parameters.split(\"|\");\n    }\n    return value === \"\" || parameters.indexOf(value) > -1;\n  },\n  //must match provided regex\n  regex: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    var reg = new RegExp(parameters);\n    return reg.test(value);\n  },\n  //value must be unique in this column\n  unique: function (cell, value, parameters) {\n    if (value === \"\" || value === null || typeof value === \"undefined\") {\n      return true;\n    }\n    var unique = true;\n    var cellData = cell.getData();\n    var column = cell.getColumn()._getSelf();\n    this.table.rowManager.rows.forEach(function (row) {\n      var data = row.getData();\n      if (data !== cellData) {\n        if (value == column.getFieldValue(data)) {\n          unique = false;\n        }\n      }\n    });\n    return unique;\n  },\n  //must have a value\n  required: function (cell, value, parameters) {\n    return value !== \"\" && value !== null && typeof value !== \"undefined\";\n  }\n};\nclass Validate extends Module {\n  constructor(table) {\n    super(table);\n    this.invalidCells = [];\n    this.registerTableOption(\"validationMode\", \"blocking\");\n    this.registerColumnOption(\"validator\");\n    this.registerTableFunction(\"getInvalidCells\", this.getInvalidCells.bind(this));\n    this.registerTableFunction(\"clearCellValidation\", this.userClearCellValidation.bind(this));\n    this.registerTableFunction(\"validate\", this.userValidate.bind(this));\n    this.registerComponentFunction(\"cell\", \"isValid\", this.cellIsValid.bind(this));\n    this.registerComponentFunction(\"cell\", \"clearValidation\", this.clearValidation.bind(this));\n    this.registerComponentFunction(\"cell\", \"validate\", this.cellValidate.bind(this));\n    this.registerComponentFunction(\"column\", \"validate\", this.columnValidate.bind(this));\n    this.registerComponentFunction(\"row\", \"validate\", this.rowValidate.bind(this));\n  }\n  initialize() {\n    this.subscribe(\"cell-delete\", this.clearValidation.bind(this));\n    this.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\n  }\n\n  ///////////////////////////////////\n  ////////// Cell Functions /////////\n  ///////////////////////////////////\n\n  cellIsValid(cell) {\n    return cell.modules.validate ? !cell.modules.validate.invalid : true;\n  }\n  cellValidate(cell) {\n    return this.validate(cell.column.modules.validate, cell, cell.getValue());\n  }\n\n  ///////////////////////////////////\n  ///////// Column Functions ////////\n  ///////////////////////////////////\n\n  columnValidate(column) {\n    var invalid = [];\n    column.cells.forEach(function (cell) {\n      if (!this.cellValidate(cell)) {\n        invalid.push(cell.getComponent());\n      }\n    });\n    return invalid.length ? invalid : true;\n  }\n\n  ///////////////////////////////////\n  ////////// Row Functions //////////\n  ///////////////////////////////////\n\n  rowValidate(row) {\n    var invalid = [];\n    row.cells.forEach(function (cell) {\n      if (!this.cellValidate(cell)) {\n        invalid.push(cell.getComponent());\n      }\n    });\n    return invalid.length ? invalid : true;\n  }\n\n  ///////////////////////////////////\n  ///////// Table Functions /////////\n  ///////////////////////////////////\n\n  userClearCellValidation(cells) {\n    if (!cells) {\n      cells = this.getInvalidCells();\n    }\n    if (!Array.isArray(cells)) {\n      cells = [cells];\n    }\n    cells.forEach(cell => {\n      this.clearValidation(cell._getSelf());\n    });\n  }\n  userValidate(cells) {\n    var output = [];\n\n    //clear row data\n    this.table.rowManager.rows.forEach(function (row) {\n      var valid = row.validate();\n      if (valid !== true) {\n        output = output.concat(valid);\n      }\n    });\n    return output.length ? output : true;\n  }\n\n  ///////////////////////////////////\n  ///////// Internal Logic //////////\n  ///////////////////////////////////\n\n  initializeColumnCheck(column) {\n    if (typeof column.definition.validator !== \"undefined\") {\n      this.initializeColumn(column);\n    }\n  }\n\n  //validate\n  initializeColumn(column) {\n    var self = this,\n      config = [],\n      validator;\n    if (column.definition.validator) {\n      if (Array.isArray(column.definition.validator)) {\n        column.definition.validator.forEach(function (item) {\n          validator = self._extractValidator(item);\n          if (validator) {\n            config.push(validator);\n          }\n        });\n      } else {\n        validator = this._extractValidator(column.definition.validator);\n        if (validator) {\n          config.push(validator);\n        }\n      }\n      column.modules.validate = config.length ? config : false;\n    }\n  }\n  _extractValidator(value) {\n    var type, params, pos;\n    switch (typeof value) {\n      case \"string\":\n        pos = value.indexOf(':');\n        if (pos > -1) {\n          type = value.substring(0, pos);\n          params = value.substring(pos + 1);\n        } else {\n          type = value;\n        }\n        return this._buildValidator(type, params);\n      case \"function\":\n        return this._buildValidator(value);\n      case \"object\":\n        return this._buildValidator(value.type, value.parameters);\n    }\n  }\n  _buildValidator(type, params) {\n    var func = typeof type == \"function\" ? type : Validate.validators[type];\n    if (!func) {\n      console.warn(\"Validator Setup Error - No matching validator found:\", type);\n      return false;\n    } else {\n      return {\n        type: typeof type == \"function\" ? \"function\" : type,\n        func: func,\n        params: params\n      };\n    }\n  }\n  validate(validators, cell, value) {\n    var self = this,\n      valid = [],\n      invalidIndex = this.invalidCells.indexOf(cell);\n    if (validators) {\n      validators.forEach(function (item) {\n        if (!item.func.call(self, cell.getComponent(), value, item.params)) {\n          valid.push({\n            type: item.type,\n            parameters: item.params\n          });\n        }\n      });\n    }\n    valid = valid.length ? valid : true;\n    if (!cell.modules.validate) {\n      cell.modules.validate = {};\n    }\n    if (valid === true) {\n      cell.modules.validate.invalid = false;\n      cell.getElement().classList.remove(\"tabulator-validation-fail\");\n      if (invalidIndex > -1) {\n        this.invalidCells.splice(invalidIndex, 1);\n      }\n    } else {\n      cell.modules.validate.invalid = true;\n      if (this.table.options.validationMode !== \"manual\") {\n        cell.getElement().classList.add(\"tabulator-validation-fail\");\n      }\n      if (invalidIndex == -1) {\n        this.invalidCells.push(cell);\n      }\n    }\n    return valid;\n  }\n  getInvalidCells() {\n    var output = [];\n    this.invalidCells.forEach(cell => {\n      output.push(cell.getComponent());\n    });\n    return output;\n  }\n  clearValidation(cell) {\n    var invalidIndex;\n    if (cell.modules.validate && cell.modules.validate.invalid) {\n      cell.getElement().classList.remove(\"tabulator-validation-fail\");\n      cell.modules.validate.invalid = false;\n      invalidIndex = this.invalidCells.indexOf(cell);\n      if (invalidIndex > -1) {\n        this.invalidCells.splice(invalidIndex, 1);\n      }\n    }\n  }\n}\nValidate.moduleName = \"validate\";\n\n//load defaults\nValidate.validators = defaultValidators;\nvar modules = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AccessorModule: Accessor,\n  AjaxModule: Ajax,\n  ClipboardModule: Clipboard,\n  ColumnCalcsModule: ColumnCalcs,\n  DataTreeModule: DataTree,\n  DownloadModule: Download,\n  EditModule: Edit,\n  ExportModule: Export,\n  FilterModule: Filter,\n  FormatModule: Format,\n  FrozenColumnsModule: FrozenColumns,\n  FrozenRowsModule: FrozenRows,\n  GroupRowsModule: GroupRows,\n  HistoryModule: History,\n  HtmlTableImportModule: HtmlTableImport,\n  InteractionModule: Interaction,\n  KeybindingsModule: Keybindings,\n  MenuModule: Menu,\n  MoveColumnsModule: MoveColumns,\n  MoveRowsModule: MoveRows,\n  MutatorModule: Mutator,\n  PageModule: Page,\n  PersistenceModule: Persistence,\n  PrintModule: Print,\n  ReactiveDataModule: ReactiveData,\n  ResizeColumnsModule: ResizeColumns,\n  ResizeRowsModule: ResizeRows,\n  ResizeTableModule: ResizeTable,\n  ResponsiveLayoutModule: ResponsiveLayout,\n  SelectRowModule: SelectRow,\n  SortModule: Sort,\n  ValidateModule: Validate\n});\nvar defaultOptions = {\n  debugEventsExternal: false,\n  //flag to console log events\n  debugEventsInternal: false,\n  //flag to console log events\n  debugInvalidOptions: true,\n  //allow toggling of invalid option warnings\n\n  height: false,\n  //height of tabulator\n  minHeight: false,\n  //minimum height of tabulator\n  maxHeight: false,\n  //maximum height of tabulator\n\n  columnMaxWidth: false,\n  //minimum global width for a column\n  columnHeaderVertAlign: \"top\",\n  //vertical alignment of column headers\n\n  columns: [],\n  //store for colum header info\n  columnDefaults: {},\n  //store column default props\n\n  data: false,\n  //default starting data\n\n  autoColumns: false,\n  //build columns from data row structure\n  autoColumnsDefinitions: false,\n  nestedFieldSeparator: \".\",\n  //separator for nested data\n\n  tooltipGenerationMode: \"load\",\n  //when to generate tooltips\n\n  footerElement: false,\n  //hold footer element\n\n  index: \"id\",\n  //filed for row index\n\n  textDirection: \"auto\",\n  addRowPos: \"bottom\",\n  //position to insert blank rows, top|bottom\n\n  headerVisible: true,\n  //hide header\n\n  renderVertical: \"virtual\",\n  renderHorizontal: \"basic\",\n  renderVerticalBuffer: 0,\n  // set virtual DOM buffer size\n\n  scrollToRowPosition: \"top\",\n  scrollToRowIfVisible: true,\n  scrollToColumnPosition: \"left\",\n  scrollToColumnIfVisible: true,\n  rowFormatter: false,\n  rowFormatterPrint: null,\n  rowFormatterClipboard: null,\n  rowFormatterHtmlOutput: null,\n  placeholder: false,\n  dataLoader: true,\n  dataLoaderLoading: false,\n  dataLoaderError: false,\n  dataSendParams: {},\n  dataReceiveParams: {}\n};\nclass OptionsList {\n  constructor(table, msgType) {\n    let defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.table = table;\n    this.msgType = msgType;\n    this.registeredDefaults = Object.assign({}, defaults);\n  }\n  register(option, value) {\n    this.registeredDefaults[option] = value;\n  }\n  generate(defaultOptions) {\n    let userOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var output = Object.assign({}, this.registeredDefaults);\n    Object.assign(output, defaultOptions);\n    if (userOptions.debugInvalidOptions !== false || this.table.options.debugInvalidOptions) {\n      for (var key in userOptions) {\n        if (!output.hasOwnProperty(key)) {\n          console.warn(\"Invalid \" + this.msgType + \" option:\", key);\n        }\n      }\n    }\n    for (var key in output) {\n      if (key in userOptions) {\n        output[key] = userOptions[key];\n      } else {\n        if (Array.isArray(output[key])) {\n          output[key] = Object.assign([], output[key]);\n        } else if (typeof output[key] === \"object\" && output[key] !== null) {\n          output[key] = Object.assign({}, output[key]);\n        } else if (typeof output[key] === \"undefined\") {\n          delete output[key];\n        }\n      }\n    }\n    return output;\n  }\n}\nclass Renderer extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.elementVertical = table.rowManager.element;\n    this.elementHorizontal = table.columnManager.element;\n    this.tableElement = table.rowManager.tableElement;\n    this.verticalFillMode = \"fit\"; // used by row manager to determin how to size the render area (\"fit\" - fits container to the contents, \"fill\" - fills the contianer without resizing it)\n  }\n\n  ///////////////////////////////////\n  /////// Internal Bindings /////////\n  ///////////////////////////////////\n\n  initialize() {\n    //initialize core functionality\n  }\n  clearRows() {\n    //clear down existing rows layout\n  }\n  clearColumns() {\n    //clear down existing columns layout\n  }\n  reinitializeColumnWidths(columns) {\n    //resize columns to fit data\n  }\n  renderRows() {\n    //render rows from a clean slate\n  }\n  renderColumns() {\n    //render columns from a clean slate\n  }\n  rerenderRows(callback) {\n    // rerender rows and keep position\n    if (callback) {\n      callback();\n    }\n  }\n  rerenderColumns(update, blockRedraw) {\n    //rerender columns\n  }\n  renderRowCells(row) {\n    //render the cells in a row\n  }\n  rerenderRowCells(row, force) {\n    //rerender the cells in a row\n  }\n  scrollColumns(left, dir) {\n    //handle horizontal scrolling\n  }\n  scrollRows(top, dir) {\n    //handle vertical scolling\n  }\n  resize() {\n    //container has rezied, carry out any needed recalculations (DO NOT RERENDER IN THIS FUNCTION)\n  }\n  scrollToRow(row) {\n    //scroll to a specific row\n  }\n  scrollToRowNearestTop(row) {\n    //determine weather the row is nearest the top or bottom of the table, retur true for top or false for bottom\n  }\n  visibleRows(includingBuffer) {\n    //return the visible rows\n    return [];\n  }\n\n  ///////////////////////////////////\n  //////// Helper Functions /////////\n  ///////////////////////////////////\n\n  rows() {\n    return this.table.rowManager.getDisplayRows();\n  }\n  styleRow(row, index) {\n    var rowEl = row.getElement();\n    if (index % 2) {\n      rowEl.classList.add(\"tabulator-row-even\");\n      rowEl.classList.remove(\"tabulator-row-odd\");\n    } else {\n      rowEl.classList.add(\"tabulator-row-odd\");\n      rowEl.classList.remove(\"tabulator-row-even\");\n    }\n  }\n\n  ///////////////////////////////////\n  /////// External Triggers /////////\n  /////// (DO NOT OVERRIDE) /////////\n  ///////////////////////////////////\n\n  clear() {\n    //clear down existing layout\n    this.clearRows();\n    this.clearColumns();\n  }\n  render() {\n    //render from a clean slate\n    this.renderRows();\n    this.renderColumns();\n  }\n  rerender(callback) {\n    // rerender and keep position\n    this.rerenderRows();\n    this.rerenderColumns();\n  }\n  scrollToRowPosition(row, position, ifVisible) {\n    var rowIndex = this.rows().indexOf(row),\n      rowEl = row.getElement(),\n      offset = 0;\n    return new Promise((resolve, reject) => {\n      if (rowIndex > -1) {\n        if (typeof ifVisible === \"undefined\") {\n          ifVisible = this.table.options.scrollToRowIfVisible;\n        }\n\n        //check row visibility\n        if (!ifVisible) {\n          if (Helpers.elVisible(rowEl)) {\n            offset = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top;\n            if (offset > 0 && offset < this.elementVertical.clientHeight - rowEl.offsetHeight) {\n              resolve();\n              return false;\n            }\n          }\n        }\n        if (typeof position === \"undefined\") {\n          position = this.table.options.scrollToRowPosition;\n        }\n        if (position === \"nearest\") {\n          position = this.scrollToRowNearestTop(row) ? \"top\" : \"bottom\";\n        }\n\n        //scroll to row\n        this.scrollToRow(row);\n\n        //align to correct position\n        switch (position) {\n          case \"middle\":\n          case \"center\":\n            if (this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight) {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop + (rowEl.offsetTop - this.elementVertical.scrollTop) - (this.elementVertical.scrollHeight - rowEl.offsetTop) / 2;\n            } else {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight / 2;\n            }\n            break;\n          case \"bottom\":\n            if (this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight) {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - rowEl.offsetTop) + rowEl.offsetHeight;\n            } else {\n              this.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + rowEl.offsetHeight;\n            }\n            break;\n        }\n        resolve();\n      } else {\n        console.warn(\"Scroll Error - Row not visible\");\n        reject(\"Scroll Error - Row not visible\");\n      }\n    });\n  }\n}\nclass BaiscHorizontal extends Renderer {\n  constructor(table) {\n    super(table);\n  }\n  renderRowCells(row) {\n    row.cells.forEach(cell => {\n      row.element.appendChild(cell.getElement());\n      cell.cellRendered();\n    });\n  }\n  reinitializeColumnWidths(columns) {\n    columns.forEach(function (column) {\n      column.reinitializeWidth();\n    });\n  }\n}\nclass VirtualDomHorizontal extends Renderer {\n  constructor(table) {\n    super(table);\n    this.leftCol = 0;\n    this.rightCol = 0;\n    this.scrollLeft = 0;\n    this.vDomScrollPosLeft = 0;\n    this.vDomScrollPosRight = 0;\n    this.vDomPadLeft = 0;\n    this.vDomPadRight = 0;\n    this.fitDataColAvg = 0;\n    this.window = 200; //pixel margin to make column visible before it is shown on screen\n\n    this.initialized = false;\n    this.columns = [];\n  }\n  initialize() {\n    this.compatabilityCheck();\n  }\n  compatabilityCheck() {\n    var columns = this.options(\"columns\"),\n      frozen = false,\n      ok = true;\n    if (this.options(\"layout\") == \"fitDataTable\") {\n      console.warn(\"Horizontal Virtual DOM is not compatible with fitDataTable layout mode\");\n      ok = false;\n    }\n    if (this.options(\"responsiveLayout\")) {\n      console.warn(\"Horizontal Virtual DOM is not compatible with responsive columns\");\n      ok = false;\n    }\n    if (this.options(\"rtl\")) {\n      console.warn(\"Horizontal Virtual DOM is not currently compatible with RTL text direction\");\n      ok = false;\n    }\n    if (columns) {\n      frozen = columns.find(col => {\n        return col.frozen;\n      });\n      if (frozen) {\n        console.warn(\"Horizontal Virtual DOM is not compatible with frozen columns\");\n        ok = false;\n      }\n    }\n\n    // if(!ok){\n    // \toptions.virtualDomHoz = false;\n    // }\n\n    return ok;\n  }\n\n  //////////////////////////////////////\n  ///////// Public Functions ///////////\n  //////////////////////////////////////\n\n  renderColumns(row, force) {\n    this.dataChange();\n  }\n  scrollColumns(left, dir) {\n    if (this.scrollLeft != left) {\n      this.scrollLeft = left;\n      this.scroll(left - (this.vDomScrollPosLeft + this.window));\n    }\n  }\n  rerenderColumns(update, blockRedraw) {\n    var old = {\n      cols: this.columns,\n      leftCol: this.leftCol,\n      rightCol: this.rightCol\n    };\n    if (update && !this.initialized) {\n      return;\n    }\n    this.clear();\n    this.scrollLeft = this.elementVertical.scrollLeft;\n    this.vDomScrollPosLeft = this.scrollLeft - this.window;\n    this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\n    var colPos = 0;\n    this.table.columnManager.columnsByIndex.forEach(column => {\n      var config = {};\n      if (column.visible) {\n        var width = column.getWidth();\n        config.leftPos = colPos;\n        config.rightPos = colPos + width;\n        config.width = width;\n        if (this.options(\"layout\") === \"fitData\") {\n          config.fitDataCheck = true;\n        }\n        if (colPos + width > this.vDomScrollPosLeft && colPos < this.vDomScrollPosRight) {\n          //column is visible\n\n          if (this.leftCol == -1) {\n            this.leftCol = this.columns.length;\n            this.vDomPadLeft = colPos;\n          }\n          this.rightCol = this.columns.length;\n        } else {\n          // column is hidden\n          if (this.leftCol !== -1) {\n            this.vDomPadRight += width;\n          }\n        }\n        this.columns.push(column);\n        column.modules.vdomHoz = config;\n        colPos += width;\n      }\n    });\n    this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n    this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n    this.initialized = true;\n    if (!blockRedraw) {\n      if (!update || this.reinitChanged(old)) {\n        this.reinitializeRows();\n      }\n    }\n    this.elementVertical.scrollLeft = this.scrollLeft;\n  }\n  renderRowCells(row) {\n    if (this.initialized) {\n      this.initializeRow(row);\n    } else {\n      row.cells.forEach(cell => {\n        row.element.appendChild(cell.getElement());\n        cell.cellRendered();\n      });\n    }\n  }\n  rerenderRowCells(row, force) {\n    this.reinitializeRow(row, force);\n  }\n  reinitializeColumnWidths(columns) {\n    for (let i = this.leftCol; i <= this.rightCol; i++) {\n      this.columns[i].reinitializeWidth();\n    }\n  }\n\n  //////////////////////////////////////\n  //////// Internal Rendering //////////\n  //////////////////////////////////////\n\n  deinitialize() {\n    this.initialized = false;\n  }\n  clear() {\n    this.columns = [];\n    this.leftCol = -1;\n    this.rightCol = 0;\n    this.vDomScrollPosLeft = 0;\n    this.vDomScrollPosRight = 0;\n    this.vDomPadLeft = 0;\n    this.vDomPadRight = 0;\n  }\n  dataChange() {\n    var change = false,\n      collsWidth = 0,\n      colEnd = 0,\n      row,\n      rowEl;\n    if (this.options(\"layout\") === \"fitData\") {\n      this.table.columnManager.columnsByIndex.forEach(column => {\n        if (!column.definition.width && column.visible) {\n          change = true;\n        }\n      });\n      if (change) {\n        if (change && this.table.rowManager.getDisplayRows().length) {\n          this.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\n          var row = this.chain(\"rows-sample\", [1], [], () => {\n            return this.table.rowManager.getDisplayRows()[0];\n          })[0];\n          if (row) {\n            rowEl = row.getElement();\n            row.generateCells();\n            this.tableElement.appendChild(rowEl);\n            for (var colEnd = 0; colEnd < row.cells.length; colEnd++) {\n              let cell = row.cells[colEnd];\n              rowEl.appendChild(cell.getElement());\n              cell.column.reinitializeWidth();\n              collsWidth += cell.column.getWidth();\n              if (collsWidth > this.vDomScrollPosRight) {\n                break;\n              }\n            }\n            rowEl.parentNode.removeChild(rowEl);\n            this.fitDataColAvg = Math.floor(collsWidth / (colEnd + 1));\n            for (colEnd; colEnd < this.table.columnManager.columnsByIndex.length; colEnd++) {\n              this.table.columnManager.columnsByIndex[colEnd].setWidth(this.fitDataColAvg);\n            }\n            this.rerenderColumns(false, true);\n          }\n        }\n      }\n    } else {\n      if (this.options(\"layout\") === \"fitColumns\") {\n        this.layoutRefresh();\n        this.rerenderColumns(false, true);\n      }\n    }\n  }\n  reinitChanged(old) {\n    var match = true;\n    if (old.cols.length !== this.columns.length || old.leftCol !== this.leftCol || old.rightCol !== this.rightCol) {\n      return true;\n    }\n    old.cols.forEach((col, i) => {\n      if (col !== this.columns[i]) {\n        match = false;\n      }\n    });\n    return !match;\n  }\n  reinitializeRows() {\n    var rows = this.table.rowManager.getVisibleRows();\n    rows.forEach(row => {\n      this.reinitializeRow(row, true);\n    });\n  }\n  scroll(diff) {\n    this.vDomScrollPosLeft += diff;\n    this.vDomScrollPosRight += diff;\n    if (diff > this.elementVertical.clientWidth * .8) {\n      this.rerenderColumns();\n    } else {\n      if (diff > 0) {\n        //scroll right\n        this.addColRight();\n        this.removeColLeft();\n      } else {\n        //scroll left\n        this.addColLeft();\n        this.removeColRight();\n      }\n    }\n  }\n  colPositionAdjust(start, end, diff) {\n    for (let i = start; i < end; i++) {\n      let column = this.columns[i];\n      column.modules.vdomHoz.leftPos += diff;\n      column.modules.vdomHoz.rightPos += diff;\n    }\n  }\n  addColRight() {\n    var column = this.columns[this.rightCol + 1],\n      rows;\n    if (column && column.modules.vdomHoz.leftPos <= this.vDomScrollPosRight) {\n      rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().appendChild(cell.getElement());\n          cell.cellRendered();\n        }\n      });\n      this.fitDataColActualWidthCheck(column);\n      this.rightCol++;\n      if (this.rightCol >= this.columns.length - 1) {\n        this.vDomPadRight = 0;\n      } else {\n        this.vDomPadRight -= column.getWidth();\n      }\n      this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n      this.addColRight();\n    }\n  }\n  addColLeft() {\n    var column = this.columns[this.leftCol - 1],\n      rows;\n    if (column && column.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft) {\n      var rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().prepend(cell.getElement());\n          cell.cellRendered();\n        }\n      });\n      this.fitDataColActualWidthCheck(column);\n      if (!this.leftCol) {\n        this.vDomPadLeft = 0;\n      } else {\n        this.vDomPadLeft -= column.getWidth();\n      }\n      this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n      this.leftCol--;\n      this.addColLeft();\n    }\n  }\n  removeColRight(column) {\n    var column = this.columns[this.rightCol],\n      rows;\n    if (column && column.modules.vdomHoz.leftPos > this.vDomScrollPosRight) {\n      rows = this.table.rowManager.getVisibleRows();\n      column.modules.vdomHoz.visible = false;\n      rows.forEach(row => {\n        if (row.type !== \"group\") {\n          var cell = row.getCell(column);\n          row.getElement().removeChild(cell.getElement());\n        }\n      });\n      this.vDomPadRight += column.getWidth();\n      this.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\n      this.rightCol--;\n      this.removeColRight();\n    }\n  }\n  removeColLeft() {\n    var column = this.columns[this.leftCol],\n      rows;\n    if (column && column.modules.vdomHoz.rightPos < this.vDomScrollPosLeft) {\n      rows = this.table.rowManager.getVisibleRows();\n      rows.forEach(row => {\n        var cell, el;\n        if (row.type !== \"group\") {\n          cell = row.getCell(column);\n          if (cell) {\n            el = cell.getElement();\n            if (el.parentNode) {\n              row.getElement().removeChild(el);\n            }\n          }\n        }\n      });\n      this.vDomPadLeft += column.getWidth();\n      this.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\n      this.leftCol++;\n      this.removeColLeft();\n    }\n  }\n  fitDataColActualWidthCheck(column) {\n    var newWidth, widthDiff;\n    if (column.modules.vdomHoz.fitDataCheck) {\n      column.reinitializeWidth();\n      newWidth = column.getWidth();\n      widthDiff = newWidth - column.modules.vdomHoz.width;\n      if (widthDiff) {\n        column.modules.vdomHoz.rightPos += widthDiff;\n        column.modules.vdomHoz.width = newWidth;\n        this.colPositionAdjust(this.rightCol + 2, this.columns.length, widthDiff);\n      }\n      column.modules.vdomHoz.fitDataCheck = false;\n    }\n  }\n  initializeRow(row) {\n    if (row.type !== \"group\") {\n      row.modules.vdomHoz = {\n        leftCol: this.leftCol,\n        rightCol: this.rightCol\n      };\n      for (let i = this.leftCol; i <= this.rightCol; i++) {\n        let column = this.columns[i];\n        if (column && column.visible) {\n          let cell = row.getCell(column);\n          row.getElement().appendChild(cell.getElement());\n          cell.cellRendered();\n        }\n      }\n    }\n  }\n  reinitializeRow(row, force) {\n    if (row.type !== \"group\") {\n      if (force || !row.modules.vdomHoz || row.modules.vdomHoz.leftCol !== this.leftCol || row.modules.vdomHoz.rightCol !== this.rightCol) {\n        var rowEl = row.getElement();\n        while (rowEl.firstChild) rowEl.removeChild(rowEl.firstChild);\n        this.initializeRow(row);\n      }\n    }\n  }\n}\nclass ColumnManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.blockHozScrollEvent = false;\n    this.headersElement = null;\n    this.element = null; //containing element\n    this.columns = []; // column definition object\n    this.columnsByIndex = []; //columns by index\n    this.columnsByField = {}; //columns by field\n    this.scrollLeft = 0;\n    this.optionsList = new OptionsList(this.table, \"column definition\", defaultColumnOptions);\n    this.renderer = null;\n  }\n\n  ////////////// Setup Functions /////////////////\n\n  initialize() {\n    this.initializeRenderer();\n    this.headersElement = this.createHeadersElement();\n    this.element = this.createHeaderElement();\n    this.element.insertBefore(this.headersElement, this.element.firstChild);\n    this.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\n  }\n  initializeRenderer() {\n    var renderClass;\n    var renderers = {\n      \"virtual\": VirtualDomHorizontal,\n      \"basic\": BaiscHorizontal\n    };\n    if (typeof this.table.options.renderHorizontal === \"string\") {\n      renderClass = renderers[this.table.options.renderHorizontal];\n    } else {\n      renderClass = this.table.options.renderHorizontal;\n    }\n    if (renderClass) {\n      this.renderer = new renderClass(this.table, this.element, this.tableElement);\n      this.renderer.initialize();\n    } else {\n      console.error(\"Unable to find matching renderer:\", table.options.renderHorizontal);\n    }\n  }\n  createHeadersElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-headers\");\n    el.setAttribute(\"role\", \"row\");\n    return el;\n  }\n  createHeaderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-header\");\n    el.setAttribute(\"role\", \"rowgroup\");\n    if (!this.table.options.headerVisible) {\n      el.classList.add(\"tabulator-header-hidden\");\n    }\n    return el;\n  }\n\n  //return containing element\n  getElement() {\n    return this.element;\n  }\n\n  //return header containing element\n  getHeadersElement() {\n    return this.headersElement;\n  }\n\n  //scroll horizontally to match table body\n  scrollHorizontal(left) {\n    var hozAdjust = 0,\n      scrollWidth = this.element.scrollWidth - this.table.element.clientWidth;\n\n    // this.tempScrollBlock();\n    this.element.scrollLeft = left;\n\n    //adjust for vertical scrollbar moving table when present\n    if (left > scrollWidth) {\n      hozAdjust = left - scrollWidth;\n      this.element.style.marginLeft = -hozAdjust + \"px\";\n    } else {\n      this.element.style.marginLeft = 0;\n    }\n    this.scrollLeft = left;\n    this.renderer.scrollColumns(left);\n  }\n\n  ///////////// Column Setup Functions /////////////\n  generateColumnsFromRowData(data) {\n    var cols = [],\n      definitions = this.table.options.autoColumnsDefinitions,\n      row,\n      sorter;\n    if (data && data.length) {\n      row = data[0];\n      for (var key in row) {\n        let col = {\n          field: key,\n          title: key\n        };\n        let value = row[key];\n        switch (typeof value) {\n          case \"undefined\":\n            sorter = \"string\";\n            break;\n          case \"boolean\":\n            sorter = \"boolean\";\n            break;\n          case \"object\":\n            if (Array.isArray(value)) {\n              sorter = \"array\";\n            } else {\n              sorter = \"string\";\n            }\n            break;\n          default:\n            if (!isNaN(value) && value !== \"\") {\n              sorter = \"number\";\n            } else {\n              if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)) {\n                sorter = \"alphanum\";\n              } else {\n                sorter = \"string\";\n              }\n            }\n            break;\n        }\n        col.sorter = sorter;\n        cols.push(col);\n      }\n      if (definitions) {\n        switch (typeof definitions) {\n          case \"function\":\n            this.table.options.columns = definitions.call(this.table, cols);\n            break;\n          case \"object\":\n            if (Array.isArray(definitions)) {\n              cols.forEach(col => {\n                var match = definitions.find(def => {\n                  return def.field === col.field;\n                });\n                if (match) {\n                  Object.assign(col, match);\n                }\n              });\n            } else {\n              cols.forEach(col => {\n                if (definitions[col.field]) {\n                  Object.assign(col, definitions[col.field]);\n                }\n              });\n            }\n            this.table.options.columns = cols;\n            break;\n        }\n      } else {\n        this.table.options.columns = cols;\n      }\n      this.setColumns(this.table.options.columns);\n    }\n  }\n  setColumns(cols, row) {\n    while (this.headersElement.firstChild) this.headersElement.removeChild(this.headersElement.firstChild);\n    this.columns = [];\n    this.columnsByIndex = [];\n    this.columnsByField = {};\n    this.dispatch(\"columns-loading\");\n    cols.forEach((def, i) => {\n      this._addColumn(def);\n    });\n    this._reIndexColumns();\n    this.dispatch(\"columns-loaded\");\n    this.renderer.rerenderColumns(false, true);\n    this.redraw(true);\n  }\n  _addColumn(definition, before, nextToColumn) {\n    var column = new Column$1(definition, this),\n      colEl = column.getElement(),\n      index = nextToColumn ? this.findColumnIndex(nextToColumn) : nextToColumn;\n    if (nextToColumn && index > -1) {\n      var topColumn = nextToColumn.getTopColumn();\n      var parentIndex = this.columns.indexOf(topColumn);\n      var nextEl = topColumn.getElement();\n      if (before) {\n        this.columns.splice(parentIndex, 0, column);\n        nextEl.parentNode.insertBefore(colEl, nextEl);\n      } else {\n        this.columns.splice(parentIndex + 1, 0, column);\n        nextEl.parentNode.insertBefore(colEl, nextEl.nextSibling);\n      }\n    } else {\n      if (before) {\n        this.columns.unshift(column);\n        this.headersElement.insertBefore(column.getElement(), this.headersElement.firstChild);\n      } else {\n        this.columns.push(column);\n        this.headersElement.appendChild(column.getElement());\n      }\n    }\n    column.columnRendered();\n    return column;\n  }\n  registerColumnField(col) {\n    if (col.definition.field) {\n      this.columnsByField[col.definition.field] = col;\n    }\n  }\n  registerColumnPosition(col) {\n    this.columnsByIndex.push(col);\n  }\n  _reIndexColumns() {\n    this.columnsByIndex = [];\n    this.columns.forEach(function (column) {\n      column.reRegisterPosition();\n    });\n  }\n\n  //ensure column headers take up the correct amount of space in column groups\n  verticalAlignHeaders() {\n    var minHeight = 0;\n    this.columns.forEach(column => {\n      var height;\n      column.clearVerticalAlign();\n      height = column.getHeight();\n      if (height > minHeight) {\n        minHeight = height;\n      }\n    });\n    this.columns.forEach(column => {\n      column.verticalAlign(this.table.options.columnHeaderVertAlign, minHeight);\n    });\n    this.table.rowManager.adjustTableSize();\n  }\n\n  //////////////// Column Details /////////////////\n  findColumn(subject) {\n    if (typeof subject == \"object\") {\n      if (subject instanceof Column$1) {\n        //subject is column element\n        return subject;\n      } else if (subject instanceof ColumnComponent) {\n        //subject is public column component\n        return subject._getSelf() || false;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        //subject is a HTML element of the column header\n        let match = this.columns.find(column => {\n          return column.element === subject;\n        });\n        return match || false;\n      }\n    } else {\n      //subject should be treated as the field name of the column\n      return this.columnsByField[subject] || false;\n    }\n\n    //catch all for any other type of input\n    return false;\n  }\n  getColumnByField(field) {\n    return this.columnsByField[field];\n  }\n  getColumnsByFieldRoot(root) {\n    var matches = [];\n    Object.keys(this.columnsByField).forEach(field => {\n      var fieldRoot = field.split(\".\")[0];\n      if (fieldRoot === root) {\n        matches.push(this.columnsByField[field]);\n      }\n    });\n    return matches;\n  }\n  getColumnByIndex(index) {\n    return this.columnsByIndex[index];\n  }\n  getFirstVisibleColumn(index) {\n    var index = this.columnsByIndex.findIndex(col => {\n      return col.visible;\n    });\n    return index > -1 ? this.columnsByIndex[index] : false;\n  }\n  getColumns() {\n    return this.columns;\n  }\n  findColumnIndex(column) {\n    return this.columnsByIndex.findIndex(col => {\n      return column === col;\n    });\n  }\n\n  //return all columns that are not groups\n  getRealColumns() {\n    return this.columnsByIndex;\n  }\n\n  //travers across columns and call action\n  traverse(callback) {\n    this.columnsByIndex.forEach((column, i) => {\n      callback(column, i);\n    });\n  }\n\n  //get defintions of actual columns\n  getDefinitions(active) {\n    var output = [];\n    this.columnsByIndex.forEach(column => {\n      if (!active || active && column.visible) {\n        output.push(column.getDefinition());\n      }\n    });\n    return output;\n  }\n\n  //get full nested definition tree\n  getDefinitionTree() {\n    var output = [];\n    this.columns.forEach(column => {\n      output.push(column.getDefinition(true));\n    });\n    return output;\n  }\n  getComponents(structured) {\n    var output = [],\n      columns = structured ? this.columns : this.columnsByIndex;\n    columns.forEach(column => {\n      output.push(column.getComponent());\n    });\n    return output;\n  }\n  getWidth() {\n    var width = 0;\n    this.columnsByIndex.forEach(column => {\n      if (column.visible) {\n        width += column.getWidth();\n      }\n    });\n    return width;\n  }\n  moveColumn(from, to, after) {\n    this.moveColumnActual(from, to, after);\n    to.element.parentNode.insertBefore(from.element, to.element);\n    if (after) {\n      to.element.parentNode.insertBefore(to.element, from.element);\n    }\n    this.verticalAlignHeaders();\n    this.table.rowManager.reinitialize();\n  }\n  moveColumnActual(from, to, after) {\n    if (from.parent.isGroup) {\n      this._moveColumnInArray(from.parent.columns, from, to, after);\n    } else {\n      this._moveColumnInArray(this.columns, from, to, after);\n    }\n    this._moveColumnInArray(this.columnsByIndex, from, to, after, true);\n    this.renderer.rerenderColumns(true);\n    this.dispatch(\"column-moved\", from, to, after);\n    if (this.subscribedExternal(\"columnMoved\")) {\n      this.dispatchExternal(\"columnMoved\", from.getComponent(), this.table.columnManager.getComponents());\n    }\n  }\n  _moveColumnInArray(columns, from, to, after, updateRows) {\n    var fromIndex = columns.indexOf(from),\n      toIndex,\n      rows = [];\n    if (fromIndex > -1) {\n      columns.splice(fromIndex, 1);\n      toIndex = columns.indexOf(to);\n      if (toIndex > -1) {\n        if (after) {\n          toIndex = toIndex + 1;\n        }\n      } else {\n        toIndex = fromIndex;\n      }\n      columns.splice(toIndex, 0, from);\n      if (updateRows) {\n        rows = this.chain(\"column-moving-rows\", [from, to, after], null, []) || [];\n        rows = rows.concat(this.table.rowManager.rows);\n        rows.forEach(function (row) {\n          if (row.cells.length) {\n            var cell = row.cells.splice(fromIndex, 1)[0];\n            row.cells.splice(toIndex, 0, cell);\n          }\n        });\n      }\n    }\n  }\n  scrollToColumn(column, position, ifVisible) {\n    var left = 0,\n      offset = 0,\n      adjust = 0,\n      colEl = column.getElement();\n    return new Promise((resolve, reject) => {\n      if (typeof position === \"undefined\") {\n        position = this.table.options.scrollToColumnPosition;\n      }\n      if (typeof ifVisible === \"undefined\") {\n        ifVisible = this.table.options.scrollToColumnIfVisible;\n      }\n      if (column.visible) {\n        //align to correct position\n        switch (position) {\n          case \"middle\":\n          case \"center\":\n            adjust = -this.element.clientWidth / 2;\n            break;\n          case \"right\":\n            adjust = colEl.clientWidth - this.headersElement.clientWidth;\n            break;\n        }\n\n        //check column visibility\n        if (!ifVisible) {\n          offset = colEl.offsetLeft;\n          if (offset > 0 && offset + colEl.offsetWidth < this.element.clientWidth) {\n            return false;\n          }\n        }\n\n        //calculate scroll position\n        left = colEl.offsetLeft + adjust;\n        left = Math.max(Math.min(left, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth), 0);\n        this.table.rowManager.scrollHorizontal(left);\n        this.scrollHorizontal(left);\n        resolve();\n      } else {\n        console.warn(\"Scroll Error - Column not visible\");\n        reject(\"Scroll Error - Column not visible\");\n      }\n    });\n  }\n\n  //////////////// Cell Management /////////////////\n  generateCells(row) {\n    var cells = [];\n    this.columnsByIndex.forEach(column => {\n      cells.push(column.generateCell(row));\n    });\n    return cells;\n  }\n\n  //////////////// Column Management /////////////////\n  getFlexBaseWidth() {\n    var totalWidth = this.table.element.clientWidth,\n      //table element width\n      fixedWidth = 0;\n\n    //adjust for vertical scrollbar if present\n    if (this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight) {\n      totalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\n    }\n    this.columnsByIndex.forEach(function (column) {\n      var width, minWidth, colWidth;\n      if (column.visible) {\n        width = column.definition.width || 0;\n        minWidth = parseInt(column.minWidth);\n        if (typeof width == \"string\") {\n          if (width.indexOf(\"%\") > -1) {\n            colWidth = totalWidth / 100 * parseInt(width);\n          } else {\n            colWidth = parseInt(width);\n          }\n        } else {\n          colWidth = width;\n        }\n        fixedWidth += colWidth > minWidth ? colWidth : minWidth;\n      }\n    });\n    return fixedWidth;\n  }\n  addColumn(definition, before, nextToColumn) {\n    return new Promise((resolve, reject) => {\n      var column = this._addColumn(definition, before, nextToColumn);\n      this._reIndexColumns();\n      this.dispatch(\"column-add\", definition, before, nextToColumn);\n      if (this.layoutMode() != \"fitColumns\") {\n        column.reinitializeWidth();\n      }\n      this.redraw(true);\n      this.table.rowManager.reinitialize();\n      this.renderer.rerenderColumns();\n      resolve(column);\n    });\n  }\n\n  //remove column from system\n  deregisterColumn(column) {\n    var field = column.getField(),\n      index;\n\n    //remove from field list\n    if (field) {\n      delete this.columnsByField[field];\n    }\n\n    //remove from index list\n    index = this.columnsByIndex.indexOf(column);\n    if (index > -1) {\n      this.columnsByIndex.splice(index, 1);\n    }\n\n    //remove from column list\n    index = this.columns.indexOf(column);\n    if (index > -1) {\n      this.columns.splice(index, 1);\n    }\n    this.verticalAlignHeaders();\n    this.redraw();\n  }\n\n  //redraw columns\n  redraw(force) {\n    if (Helpers.elVisible(this.element)) {\n      this.verticalAlignHeaders();\n    }\n    if (force) {\n      this.table.rowManager.resetScroll();\n      this.table.rowManager.reinitialize();\n    }\n    if (!this.confirm(\"table-redrawing\", force)) {\n      this.layoutRefresh();\n    }\n    this.dispatch(\"table-redraw\", force);\n    this.table.footerManager.redraw();\n  }\n}\nclass BaiscVertical extends Renderer {\n  constructor(table) {\n    super(table);\n    this.verticalFillMode = \"fill\";\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n  }\n  clearRows() {\n    var element = this.tableElement;\n\n    // element.children.detach();\n    while (element.firstChild) element.removeChild(element.firstChild);\n    element.scrollTop = 0;\n    element.scrollLeft = 0;\n    element.style.minWidth = \"\";\n    element.style.minHeight = \"\";\n    element.style.display = \"\";\n    element.style.visibility = \"\";\n  }\n  renderRows() {\n    var element = this.tableElement,\n      onlyGroupHeaders = true;\n    this.rows().forEach((row, index) => {\n      this.styleRow(row, index);\n      element.appendChild(row.getElement());\n      row.initialize(true);\n      if (row.type !== \"group\") {\n        onlyGroupHeaders = false;\n      }\n    });\n    if (onlyGroupHeaders) {\n      element.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n    } else {\n      element.style.minWidth = \"\";\n    }\n  }\n  rerenderRows(callback) {\n    this.render();\n    if (callback) {\n      callback();\n    }\n  }\n  scrollToRowNearestTop(row) {\n    var rowTop = Helpers.elOffset(row.getElement()).top;\n    return !(Math.abs(this.elementVertical.scrollTop - rowTop) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - rowTop));\n  }\n  scrollToRow(row) {\n    var rowEl = row.getElement();\n    this.elementVertical.scrollTop = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;\n  }\n  visibleRows(includingBuffer) {\n    return this.rows();\n  }\n}\nclass VirtualDomVertical extends Renderer {\n  constructor(table) {\n    super(table);\n    this.verticalFillMode = \"fill\";\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.vDomRowHeight = 20; //approximation of row heights for padding\n\n    this.vDomTop = 0; //hold position for first rendered row in the virtual DOM\n    this.vDomBottom = 0; //hold possition for last rendered row in the virtual DOM\n\n    this.vDomScrollPosTop = 0; //last scroll position of the vDom top;\n    this.vDomScrollPosBottom = 0; //last scroll position of the vDom bottom;\n\n    this.vDomTopPad = 0; //hold value of padding for top of virtual DOM\n    this.vDomBottomPad = 0; //hold value of padding for bottom of virtual DOM\n\n    this.vDomMaxRenderChain = 90; //the maximum number of dom elements that can be rendered in 1 go\n\n    this.vDomWindowBuffer = 0; //window row buffer before removing elements, to smooth scrolling\n\n    this.vDomWindowMinTotalRows = 20; //minimum number of rows to be generated in virtual dom (prevent buffering issues on tables with tall rows)\n    this.vDomWindowMinMarginRows = 5; //minimum number of rows to be generated in virtual dom margin\n\n    this.vDomTopNewRows = []; //rows to normalize after appending to optimize render speed\n    this.vDomBottomNewRows = []; //rows to normalize after appending to optimize render speed\n  }\n\n  //////////////////////////////////////\n  ///////// Public Functions ///////////\n  //////////////////////////////////////\n\n  clearRows() {\n    var element = this.tableElement;\n\n    // element.children.detach();\n    while (element.firstChild) element.removeChild(element.firstChild);\n    element.style.paddingTop = \"\";\n    element.style.paddingBottom = \"\";\n    // element.style.minWidth = \"\";\n    element.style.minHeight = \"\";\n    element.style.display = \"\";\n    element.style.visibility = \"\";\n    this.elementVertical.scrollTop = 0;\n    this.elementVertical.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.vDomTop = 0;\n    this.vDomBottom = 0;\n    this.vDomTopPad = 0;\n    this.vDomBottomPad = 0;\n    this.vDomScrollPosTop = 0;\n    this.vDomScrollPosBottom = 0;\n  }\n  renderRows() {\n    this._virtualRenderFill();\n  }\n  rerenderRows(callback) {\n    var scrollTop = this.elementVertical.scrollTop;\n    var topRow = false;\n    var topOffset = false;\n    var left = this.table.rowManager.scrollLeft;\n    var rows = this.rows();\n    for (var i = this.vDomTop; i <= this.vDomBottom; i++) {\n      if (rows[i]) {\n        var diff = scrollTop - rows[i].getElement().offsetTop;\n        if (topOffset === false || Math.abs(diff) < topOffset) {\n          topOffset = diff;\n          topRow = i;\n        } else {\n          break;\n        }\n      }\n    }\n    rows.forEach(row => {\n      row.deinitializeHeight();\n    });\n    if (callback) {\n      callback();\n    }\n    this._virtualRenderFill(topRow === false ? this.rows.length - 1 : topRow, true, topOffset || 0);\n    this.scrollColumns(left);\n  }\n  scrollColumns(left) {\n    this.table.rowManager.scrollHorizontal(left);\n  }\n  scrollRows(top, dir) {\n    var topDiff = top - this.vDomScrollPosTop;\n    var bottomDiff = top - this.vDomScrollPosBottom;\n    var margin = this.vDomWindowBuffer * 2;\n    var rows = this.rows();\n    this.scrollTop = top;\n    if (-topDiff > margin || bottomDiff > margin) {\n      //if big scroll redraw table;\n      var left = this.table.rowManager.scrollLeft;\n      this._virtualRenderFill(Math.floor(this.elementVertical.scrollTop / this.elementVertical.scrollHeight * rows.length));\n      this.scrollColumns(left);\n    } else {\n      if (dir) {\n        //scrolling up\n        if (topDiff < 0) {\n          this._addTopRow(rows, -topDiff);\n        }\n        if (bottomDiff < 0) {\n          //hide bottom row if needed\n          if (this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer) {\n            this._removeBottomRow(rows, -bottomDiff);\n          } else {\n            this.vDomScrollPosBottom = this.scrollTop;\n          }\n        }\n      } else {\n        if (bottomDiff >= 0) {\n          this._addBottomRow(rows, bottomDiff);\n        }\n\n        //scrolling down\n        if (topDiff >= 0) {\n          //hide top row if needed\n          if (this.scrollTop > this.vDomWindowBuffer) {\n            this._removeTopRow(rows, topDiff);\n          } else {\n            this.vDomScrollPosTop = this.scrollTop;\n          }\n        }\n      }\n    }\n  }\n  resize() {\n    this.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;\n  }\n  scrollToRowNearestTop(row) {\n    var rowIndex = this.rows().indexOf(row);\n    return !(Math.abs(this.vDomTop - rowIndex) > Math.abs(this.vDomBottom - rowIndex));\n  }\n  scrollToRow(row) {\n    var index = this.rows().indexOf(row);\n    if (index > -1) {\n      this._virtualRenderFill(index, true);\n    }\n  }\n  visibleRows(includingBuffer) {\n    var topEdge = this.elementVertical.scrollTop,\n      bottomEdge = this.elementVertical.clientHeight + topEdge,\n      topFound = false,\n      topRow = 0,\n      bottomRow = 0,\n      rows = this.rows();\n    if (includingBuffer) {\n      topRow = this.vDomTop;\n      bottomRow = this.vDomBottom;\n    } else {\n      for (var i = this.vDomTop; i <= this.vDomBottom; i++) {\n        if (rows[i]) {\n          if (!topFound) {\n            if (topEdge - rows[i].getElement().offsetTop >= 0) {\n              topRow = i;\n            } else {\n              topFound = true;\n              if (bottomEdge - rows[i].getElement().offsetTop >= 0) {\n                bottomRow = i;\n              } else {\n                break;\n              }\n            }\n          } else {\n            if (bottomEdge - rows[i].getElement().offsetTop >= 0) {\n              bottomRow = i;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n    return rows.slice(topRow, bottomRow + 1);\n  }\n\n  //////////////////////////////////////\n  //////// Internal Rendering //////////\n  //////////////////////////////////////\n\n  //full virtual render\n  _virtualRenderFill(position, forceMove, offset) {\n    var element = this.tableElement,\n      holder = this.elementVertical,\n      topPad = 0,\n      rowsHeight = 0,\n      heightOccupied = 0,\n      topPadHeight = 0,\n      i = 0,\n      rows = this.rows(),\n      rowsCount = rows.length,\n      containerHeight = this.elementVertical.clientHeight;\n    position = position || 0;\n    offset = offset || 0;\n    if (!position) {\n      this.clear();\n    } else {\n      while (element.firstChild) element.removeChild(element.firstChild);\n\n      //check if position is too close to bottom of table\n      heightOccupied = (rowsCount - position + 1) * this.vDomRowHeight;\n      if (heightOccupied < containerHeight) {\n        position -= Math.ceil((containerHeight - heightOccupied) / this.vDomRowHeight);\n        if (position < 0) {\n          position = 0;\n        }\n      }\n\n      //calculate initial pad\n      topPad = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight), this.vDomWindowMinMarginRows), position);\n      position -= topPad;\n    }\n    if (rowsCount && Helpers.elVisible(this.elementVertical)) {\n      this.vDomTop = position;\n      this.vDomBottom = position - 1;\n      while ((rowsHeight <= containerHeight + this.vDomWindowBuffer || i < this.vDomWindowMinTotalRows) && this.vDomBottom < rowsCount - 1) {\n        var index = this.vDomBottom + 1,\n          row = rows[index],\n          rowHeight = 0;\n        this.styleRow(row, index);\n        element.appendChild(row.getElement());\n        row.initialize();\n        if (!row.heightInitialized) {\n          row.normalizeHeight(true);\n        }\n        rowHeight = row.getHeight();\n        if (i < topPad) {\n          topPadHeight += rowHeight;\n        } else {\n          rowsHeight += rowHeight;\n        }\n        if (rowHeight > this.vDomWindowBuffer) {\n          this.vDomWindowBuffer = rowHeight * 2;\n        }\n        this.vDomBottom++;\n        i++;\n      }\n      if (!position) {\n        this.vDomTopPad = 0;\n        //adjust rowheight to match average of rendered elements\n        this.vDomRowHeight = Math.floor((rowsHeight + topPadHeight) / i);\n        this.vDomBottomPad = this.vDomRowHeight * (rowsCount - this.vDomBottom - 1);\n        this.vDomScrollHeight = topPadHeight + rowsHeight + this.vDomBottomPad - containerHeight;\n      } else {\n        this.vDomTopPad = !forceMove ? this.scrollTop - topPadHeight : this.vDomRowHeight * this.vDomTop + offset;\n        this.vDomBottomPad = this.vDomBottom == rowsCount - 1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - rowsHeight - topPadHeight, 0);\n      }\n      element.style.paddingTop = this.vDomTopPad + \"px\";\n      element.style.paddingBottom = this.vDomBottomPad + \"px\";\n      if (forceMove) {\n        this.scrollTop = this.vDomTopPad + topPadHeight + offset - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - containerHeight : 0);\n      }\n      this.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - containerHeight);\n\n      //adjust for horizontal scrollbar if present (and not at top of table)\n      if (this.elementVertical.scrollWidth > this.elementVertical.offsetWidth && forceMove) {\n        this.scrollTop += this.elementVertical.offsetHeight - containerHeight;\n      }\n      this.vDomScrollPosTop = this.scrollTop;\n      this.vDomScrollPosBottom = this.scrollTop;\n      holder.scrollTop = this.scrollTop;\n      this.dispatch(\"render-virtual-fill\");\n    }\n  }\n  _addTopRow(rows, fillableSpace) {\n    var table = this.tableElement,\n      addedRows = [],\n      paddingAdjust = 0,\n      index = this.vDomTop - 1,\n      i = 0;\n    while (true) {\n      if (this.vDomTop) {\n        let row = rows[index],\n          rowHeight,\n          initialized;\n        if (row && i < this.vDomMaxRenderChain) {\n          rowHeight = row.getHeight() || this.vDomRowHeight;\n          initialized = row.initialized;\n          if (fillableSpace >= rowHeight) {\n            this.styleRow(row, index);\n            table.insertBefore(row.getElement(), table.firstChild);\n            if (!row.initialized || !row.heightInitialized) {\n              addedRows.push(row);\n            }\n            row.initialize();\n            if (!initialized) {\n              rowHeight = row.getElement().offsetHeight;\n              if (rowHeight > this.vDomWindowBuffer) {\n                this.vDomWindowBuffer = rowHeight * 2;\n              }\n            }\n            fillableSpace -= rowHeight;\n            paddingAdjust += rowHeight;\n            this.vDomTop--;\n            index--;\n            i++;\n          } else {\n            break;\n          }\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    for (let row of addedRows) {\n      row.clearCellHeight();\n    }\n    this._quickNormalizeRowHeight(addedRows);\n    if (paddingAdjust) {\n      this.vDomTopPad -= paddingAdjust;\n      if (this.vDomTopPad < 0) {\n        this.vDomTopPad = index * this.vDomRowHeight;\n      }\n      if (index < 1) {\n        this.vDomTopPad = 0;\n      }\n      table.style.paddingTop = this.vDomTopPad + \"px\";\n      this.vDomScrollPosTop -= paddingAdjust;\n    }\n  }\n  _removeTopRow(rows, fillableSpace) {\n    var removableRows = [],\n      paddingAdjust = 0,\n      i = 0;\n    while (true) {\n      let row = rows[this.vDomTop],\n        rowHeight;\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n        if (fillableSpace >= rowHeight) {\n          this.vDomTop++;\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          removableRows.push(row);\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    for (let row of removableRows) {\n      let rowEl = row.getElement();\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n    }\n    if (paddingAdjust) {\n      this.vDomTopPad += paddingAdjust;\n      this.tableElement.style.paddingTop = this.vDomTopPad + \"px\";\n      this.vDomScrollPosTop += this.vDomTop ? paddingAdjust : paddingAdjust + this.vDomWindowBuffer;\n    }\n  }\n  _addBottomRow(rows, fillableSpace) {\n    var table = this.tableElement,\n      addedRows = [],\n      paddingAdjust = 0,\n      index = this.vDomBottom + 1,\n      i = 0;\n    while (true) {\n      let row = rows[index],\n        rowHeight,\n        initialized;\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n        initialized = row.initialized;\n        if (fillableSpace >= rowHeight) {\n          this.styleRow(row, index);\n          table.appendChild(row.getElement());\n          if (!row.initialized || !row.heightInitialized) {\n            addedRows.push(row);\n          }\n          row.initialize();\n          if (!initialized) {\n            rowHeight = row.getElement().offsetHeight;\n            if (rowHeight > this.vDomWindowBuffer) {\n              this.vDomWindowBuffer = rowHeight * 2;\n            }\n          }\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          this.vDomBottom++;\n          index++;\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    for (let row of addedRows) {\n      row.clearCellHeight();\n    }\n    this._quickNormalizeRowHeight(addedRows);\n    if (paddingAdjust) {\n      this.vDomBottomPad -= paddingAdjust;\n      if (this.vDomBottomPad < 0 || index == rows.length - 1) {\n        this.vDomBottomPad = 0;\n      }\n      table.style.paddingBottom = this.vDomBottomPad + \"px\";\n      this.vDomScrollPosBottom += paddingAdjust;\n    }\n  }\n  _removeBottomRow(rows, fillableSpace) {\n    var removableRows = [],\n      paddingAdjust = 0,\n      i = 0;\n    while (true) {\n      let row = rows[this.vDomBottom],\n        rowHeight;\n      if (row && i < this.vDomMaxRenderChain) {\n        rowHeight = row.getHeight() || this.vDomRowHeight;\n        if (fillableSpace >= rowHeight) {\n          this.vDomBottom--;\n          fillableSpace -= rowHeight;\n          paddingAdjust += rowHeight;\n          removableRows.push(row);\n          i++;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    for (let row of removableRows) {\n      let rowEl = row.getElement();\n      if (rowEl.parentNode) {\n        rowEl.parentNode.removeChild(rowEl);\n      }\n    }\n    if (paddingAdjust) {\n      this.vDomBottomPad += paddingAdjust;\n      if (this.vDomBottomPad < 0) {\n        this.vDomBottomPad = 0;\n      }\n      this.tableElement.style.paddingBottom = this.vDomBottomPad + \"px\";\n      this.vDomScrollPosBottom -= paddingAdjust;\n    }\n  }\n  _quickNormalizeRowHeight(rows) {\n    for (let row of rows) {\n      row.calcHeight();\n    }\n    for (let row of rows) {\n      row.setCellHeight();\n    }\n  }\n}\nclass RowManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.element = this.createHolderElement(); //containing element\n    this.tableElement = this.createTableElement(); //table element\n    this.heightFixer = this.createTableElement(); //table element\n\n    this.firstRender = false; //handle first render\n    this.renderMode = \"virtual\"; //current rendering mode\n    this.fixedHeight = false; //current rendering mode\n\n    this.rows = []; //hold row data objects\n    this.activeRowsPipeline = []; //hold caluclation of active rows\n    this.activeRows = []; //rows currently available to on display in the table\n    this.activeRowsCount = 0; //count of active rows\n\n    this.displayRows = []; //rows currently on display in the table\n    this.displayRowsCount = 0; //count of display rows\n\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.rowNumColumn = false; //hold column component for row number column\n\n    this.redrawBlock = false; //prevent redraws to allow multiple data manipulations becore continuing\n    this.redrawBlockRestoreConfig = false; //store latest redraw function calls for when redraw is needed\n    this.redrawBlockRederInPosition = false; //store latest redraw function calls for when redraw is needed\n\n    this.dataPipeline = []; //hold data pipeline tasks\n    this.displayPipeline = []; //hold data display pipeline tasks\n\n    this.renderer = null;\n  }\n\n  //////////////// Setup Functions /////////////////\n\n  createHolderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-tableholder\");\n    el.setAttribute(\"tabindex\", 0);\n    el.setAttribute(\"role\", \"rowgroup\");\n    return el;\n  }\n  createTableElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-table\");\n    el.setAttribute(\"role\", \"rowgroup\");\n    return el;\n  }\n\n  //return containing element\n  getElement() {\n    return this.element;\n  }\n\n  //return table element\n  getTableElement() {\n    return this.tableElement;\n  }\n\n  //return position of row in table\n  getRowPosition(row, active) {\n    if (active) {\n      return this.activeRows.indexOf(row);\n    } else {\n      return this.rows.indexOf(row);\n    }\n  }\n  initialize() {\n    this.initializeRenderer();\n\n    //initialize manager\n    this.element.appendChild(this.tableElement);\n    this.firstRender = true;\n\n    //scroll header along with table body\n    this.element.addEventListener(\"scroll\", () => {\n      var left = this.element.scrollLeft,\n        leftDir = this.scrollLeft > left,\n        top = this.element.scrollTop,\n        topDir = this.scrollTop > top;\n\n      //handle horizontal scrolling\n      if (this.scrollLeft != left) {\n        this.scrollLeft = left;\n        this.dispatch(\"scroll-horizontal\", left, leftDir);\n        this.dispatchExternal(\"scrollHorizontal\", left, leftDir);\n      }\n\n      //handle verical scrolling\n      if (this.scrollTop != top) {\n        this.scrollTop = top;\n        this.renderer.scrollRows(top, topDir);\n        this.dispatch(\"scroll-vertical\", top, topDir);\n        this.dispatchExternal(\"scrollVertical\", top, topDir);\n      }\n    });\n  }\n\n  ////////////////// Row Manipulation //////////////////\n  findRow(subject) {\n    if (typeof subject == \"object\") {\n      if (subject instanceof Row) {\n        //subject is row element\n        return subject;\n      } else if (subject instanceof RowComponent$1) {\n        //subject is public row component\n        return subject._getSelf() || false;\n      } else if (typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement) {\n        //subject is a HTML element of the row\n        let match = this.rows.find(row => {\n          return row.getElement() === subject;\n        });\n        return match || false;\n      }\n    } else if (typeof subject == \"undefined\" || subject === null) {\n      return false;\n    } else {\n      //subject should be treated as the index of the row\n      let match = this.rows.find(row => {\n        return row.data[this.table.options.index] == subject;\n      });\n      return match || false;\n    }\n\n    //catch all for any other type of input\n    return false;\n  }\n  getRowFromDataObject(data) {\n    var match = this.rows.find(row => {\n      return row.data === data;\n    });\n    return match || false;\n  }\n  getRowFromPosition(position, active) {\n    if (active) {\n      return this.activeRows[position];\n    } else {\n      return this.rows[position];\n    }\n  }\n  scrollToRow(row, position, ifVisible) {\n    return this.renderer.scrollToRowPosition(row, position, ifVisible);\n  }\n\n  ////////////////// Data Handling //////////////////\n  setData(data, renderInPosition, columnsChanged) {\n    return new Promise((resolve, reject) => {\n      if (renderInPosition && this.getDisplayRows().length) {\n        if (this.table.options.pagination) {\n          this._setDataActual(data, true);\n        } else {\n          this.reRenderInPosition(() => {\n            this._setDataActual(data);\n          });\n        }\n      } else {\n        if (this.table.options.autoColumns && columnsChanged && this.table.initialized) {\n          this.table.columnManager.generateColumnsFromRowData(data);\n        }\n        this.resetScroll();\n        this._setDataActual(data);\n      }\n      resolve();\n    });\n  }\n  _setDataActual(data, renderInPosition) {\n    this.dispatchExternal(\"dataProcessing\", data);\n    this._wipeElements();\n    if (Array.isArray(data)) {\n      this.dispatch(\"data-processing\", data);\n      data.forEach((def, i) => {\n        if (def && typeof def === \"object\") {\n          var row = new Row(def, this);\n          this.rows.push(row);\n        } else {\n          console.warn(\"Data Loading Warning - Invalid row data detected and ignored, expecting object but received:\", def);\n        }\n      });\n      this.refreshActiveData(false, false, renderInPosition);\n      this.dispatch(\"data-processed\", data);\n      this.dispatchExternal(\"dataProcessed\", data);\n    } else {\n      console.error(\"Data Loading Error - Unable to process data due to invalid data type \\nExpecting: array \\nReceived: \", typeof data, \"\\nData:     \", data);\n    }\n  }\n  _wipeElements() {\n    this.dispatch(\"rows-wipe\");\n    this.rows.forEach(row => {\n      row.wipe();\n    });\n    this.rows = [];\n    this.activeRows = [];\n    this.activeRowsPipeline = [];\n    this.activeRowsCount = 0;\n    this.displayRows = [];\n    this.displayRowsCount = 0;\n    this.adjustTableSize();\n  }\n  deleteRow(row, blockRedraw) {\n    var allIndex = this.rows.indexOf(row),\n      activeIndex = this.activeRows.indexOf(row);\n    if (activeIndex > -1) {\n      this.activeRows.splice(activeIndex, 1);\n    }\n    if (allIndex > -1) {\n      this.rows.splice(allIndex, 1);\n    }\n    this.setActiveRows(this.activeRows);\n    this.displayRowIterator(rows => {\n      var displayIndex = rows.indexOf(row);\n      if (displayIndex > -1) {\n        rows.splice(displayIndex, 1);\n      }\n    });\n    if (!blockRedraw) {\n      this.reRenderInPosition();\n    }\n    this.regenerateRowNumbers();\n    this.dispatchExternal(\"rowDeleted\", row.getComponent());\n    if (!this.displayRowsCount) {\n      this._showPlaceholder();\n    }\n    if (this.subscribedExternal(\"dataChanged\")) {\n      this.dispatchExternal(\"dataChanged\", this.getData());\n    }\n  }\n  addRow(data, pos, index, blockRedraw) {\n    var row = this.addRowActual(data, pos, index, blockRedraw);\n    this.dispatch(\"row-added\", row, data, pos, index);\n    return row;\n  }\n\n  //add multiple rows\n  addRows(data, pos, index) {\n    var rows = [];\n    return new Promise((resolve, reject) => {\n      pos = this.findAddRowPos(pos);\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n      data.length - 1;\n      if (typeof index == \"undefined\" && pos || typeof index !== \"undefined\" && !pos) {\n        data.reverse();\n      }\n      data.forEach((item, i) => {\n        var row = this.addRow(item, pos, index, true);\n        rows.push(row);\n        this.dispatch(\"row-added\", row, data, pos, index);\n      });\n      this.refreshActiveData(false, false, true);\n      this.regenerateRowNumbers();\n      if (rows.length) {\n        this._clearPlaceholder();\n      }\n      resolve(rows);\n    });\n  }\n  findAddRowPos(pos) {\n    if (typeof pos === \"undefined\") {\n      pos = this.table.options.addRowPos;\n    }\n    if (pos === \"pos\") {\n      pos = true;\n    }\n    if (pos === \"bottom\") {\n      pos = false;\n    }\n    return pos;\n  }\n  addRowActual(data, pos, index, blockRedraw) {\n    var row = data instanceof Row ? data : new Row(data || {}, this),\n      top = this.findAddRowPos(pos),\n      allIndex = -1,\n      activeIndex,\n      chainResult;\n    if (!index) {\n      chainResult = this.chain(\"row-adding-position\", [row, top], null, {\n        index,\n        top\n      });\n      index = chainResult.index;\n      top = chainResult.top;\n    }\n    if (typeof index !== \"undefined\") {\n      index = this.findRow(index);\n    }\n    index = this.chain(\"row-adding-index\", [row, index, top], null, index);\n    if (index) {\n      allIndex = this.rows.indexOf(index);\n    }\n    if (index && allIndex > -1) {\n      activeIndex = this.activeRows.indexOf(index);\n      this.displayRowIterator(function (rows) {\n        var displayIndex = rows.indexOf(index);\n        if (displayIndex > -1) {\n          rows.splice(top ? displayIndex : displayIndex + 1, 0, row);\n        }\n      });\n      if (activeIndex > -1) {\n        this.activeRows.splice(top ? activeIndex : activeIndex + 1, 0, row);\n      }\n      this.rows.splice(top ? allIndex : allIndex + 1, 0, row);\n    } else {\n      if (top) {\n        this.displayRowIterator(function (rows) {\n          rows.unshift(row);\n        });\n        this.activeRows.unshift(row);\n        this.rows.unshift(row);\n      } else {\n        this.displayRowIterator(function (rows) {\n          rows.push(row);\n        });\n        this.activeRows.push(row);\n        this.rows.push(row);\n      }\n    }\n    this.setActiveRows(this.activeRows);\n    this.dispatchExternal(\"rowAdded\", row.getComponent());\n    if (this.subscribedExternal(\"dataChanged\")) {\n      this.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\n    }\n    if (!blockRedraw) {\n      this.reRenderInPosition();\n    }\n    return row;\n  }\n  moveRow(from, to, after) {\n    this.dispatch(\"row-move\", from, to, after);\n    this.moveRowActual(from, to, after);\n    this.regenerateRowNumbers();\n    this.dispatch(\"row-moved\", from, to, after);\n    this.dispatchExternal(\"rowMoved\", from.getComponent());\n  }\n  moveRowActual(from, to, after) {\n    this.moveRowInArray(this.rows, from, to, after);\n    this.moveRowInArray(this.activeRows, from, to, after);\n    this.displayRowIterator(rows => {\n      this.moveRowInArray(rows, from, to, after);\n    });\n    this.dispatch(\"row-moving\", from, to, after);\n  }\n  moveRowInArray(rows, from, to, after) {\n    var fromIndex, toIndex, start, end;\n    if (from !== to) {\n      fromIndex = rows.indexOf(from);\n      if (fromIndex > -1) {\n        rows.splice(fromIndex, 1);\n        toIndex = rows.indexOf(to);\n        if (toIndex > -1) {\n          if (after) {\n            rows.splice(toIndex + 1, 0, from);\n          } else {\n            rows.splice(toIndex, 0, from);\n          }\n        } else {\n          rows.splice(fromIndex, 0, from);\n        }\n      }\n\n      //restyle rows\n      if (rows === this.getDisplayRows()) {\n        start = fromIndex < toIndex ? fromIndex : toIndex;\n        end = toIndex > fromIndex ? toIndex : fromIndex + 1;\n        for (let i = start; i <= end; i++) {\n          if (rows[i]) {\n            this.styleRow(rows[i], i);\n          }\n        }\n      }\n    }\n  }\n  clearData() {\n    this.setData([]);\n  }\n  getRowIndex(row) {\n    return this.findRowIndex(row, this.rows);\n  }\n  getDisplayRowIndex(row) {\n    var index = this.getDisplayRows().indexOf(row);\n    return index > -1 ? index : false;\n  }\n  nextDisplayRow(row, rowOnly) {\n    var index = this.getDisplayRowIndex(row),\n      nextRow = false;\n    if (index !== false && index < this.displayRowsCount - 1) {\n      nextRow = this.getDisplayRows()[index + 1];\n    }\n    if (nextRow && (!(nextRow instanceof Row) || nextRow.type != \"row\")) {\n      return this.nextDisplayRow(nextRow, rowOnly);\n    }\n    return nextRow;\n  }\n  prevDisplayRow(row, rowOnly) {\n    var index = this.getDisplayRowIndex(row),\n      prevRow = false;\n    if (index) {\n      prevRow = this.getDisplayRows()[index - 1];\n    }\n    if (rowOnly && prevRow && (!(prevRow instanceof Row) || prevRow.type != \"row\")) {\n      return this.prevDisplayRow(prevRow, rowOnly);\n    }\n    return prevRow;\n  }\n  findRowIndex(row, list) {\n    var rowIndex;\n    row = this.findRow(row);\n    if (row) {\n      rowIndex = list.indexOf(row);\n      if (rowIndex > -1) {\n        return rowIndex;\n      }\n    }\n    return false;\n  }\n  getData(active, transform) {\n    var output = [],\n      rows = this.getRows(active);\n    rows.forEach(function (row) {\n      if (row.type == \"row\") {\n        output.push(row.getData(transform || \"data\"));\n      }\n    });\n    return output;\n  }\n  getComponents(active) {\n    var output = [],\n      rows = this.getRows(active);\n    rows.forEach(function (row) {\n      output.push(row.getComponent());\n    });\n    return output;\n  }\n  getDataCount(active) {\n    var rows = this.getRows(active);\n    return rows.length;\n  }\n  scrollHorizontal(left) {\n    this.scrollLeft = left;\n    this.element.scrollLeft = left;\n    this.dispatch(\"scroll-horizontal\", left);\n  }\n  registerDataPipelineHandler(handler, priority) {\n    if (typeof priority !== \"undefined\") {\n      this.dataPipeline.push({\n        handler,\n        priority\n      });\n      this.dataPipeline.sort((a, b) => {\n        return a.priority - b.priority;\n      });\n    } else {\n      console.error(\"Data pipeline handlers must have a priority in order to be registered\");\n    }\n  }\n  registerDisplayPipelineHandler(handler, priority) {\n    if (typeof priority !== \"undefined\") {\n      this.displayPipeline.push({\n        handler,\n        priority\n      });\n      this.displayPipeline.sort((a, b) => {\n        return a.priority - b.priority;\n      });\n    } else {\n      console.error(\"Display pipeline handlers must have a priority in order to be registered\");\n    }\n  }\n\n  //set active data set\n  refreshActiveData(handler, skipStage, renderInPosition) {\n    var table = this.table,\n      stage = \"\",\n      index = 0,\n      cascadeOrder = [\"all\", \"dataPipeline\", \"display\", \"displayPipeline\", \"end\"];\n    if (typeof handler === \"function\") {\n      index = this.dataPipeline.findIndex(item => {\n        return item.handler === handler;\n      });\n      if (index > -1) {\n        stage = \"dataPipeline\";\n        if (skipStage) {\n          if (index == this.dataPipeline.length - 1) {\n            stage = \"display\";\n          } else {\n            index++;\n          }\n        }\n      } else {\n        index = this.displayPipeline.findIndex(item => {\n          return item.handler === handler;\n        });\n        if (index > -1) {\n          stage = \"displayPipeline\";\n          if (skipStage) {\n            if (index == this.displayPipeline.length - 1) {\n              stage = \"end\";\n            } else {\n              index++;\n            }\n          }\n        } else {\n          console.error(\"Unable to refresh data, invalid handler provided\", handler);\n          return;\n        }\n      }\n    } else {\n      stage = handler || \"all\";\n      index = 0;\n    }\n    if (this.redrawBlock) {\n      if (!this.redrawBlockRestoreConfig || this.redrawBlockRestoreConfig && (this.redrawBlockRestoreConfig.stage === stage && index < this.redrawBlockRestoreConfig.index || cascadeOrder.indexOf(stage) < cascadeOrder.indexOf(this.redrawBlockRestoreConfig.stage))) {\n        this.redrawBlockRestoreConfig = {\n          handler: handler,\n          skipStage: skipStage,\n          renderInPosition: renderInPosition,\n          stage: stage,\n          index: index\n        };\n      }\n      return;\n    } else {\n      this.dispatch(\"data-refeshing\");\n      if (!handler) {\n        this.activeRowsPipeline[0] = this.rows.slice(0);\n      }\n\n      //cascade through data refresh stages\n      switch (stage) {\n        case \"all\":\n        //handle case where alldata needs refreshing\n\n        case \"dataPipeline\":\n          for (let i = index; i < this.dataPipeline.length; i++) {\n            let result = this.dataPipeline[i].handler(this.activeRowsPipeline[i].slice(0));\n            this.activeRowsPipeline[i + 1] = result || this.activeRowsPipeline[i].slice(0);\n          }\n          this.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);\n          this.regenerateRowNumbers();\n        case \"display\":\n          index = 0;\n          this.resetDisplayRows();\n        case \"displayPipeline\":\n          for (let i = index; i < this.displayPipeline.length; i++) {\n            let result = this.displayPipeline[i].handler((i ? this.getDisplayRows(i - 1) : this.activeRows).slice(0), renderInPosition);\n            this.setDisplayRows(result || this.getDisplayRows(i - 1).slice(0), i);\n          }\n        //case to handle scenario when trying to skip past end stage\n      }\n\n      if (Helpers.elVisible(this.element)) {\n        if (renderInPosition) {\n          this.reRenderInPosition();\n        } else {\n          if (!handler) {\n            this.table.columnManager.renderer.renderColumns();\n          }\n          this.renderTable();\n          if (table.options.layoutColumnsOnNewData) {\n            this.table.columnManager.redraw(true);\n          }\n        }\n      }\n      this.dispatch(\"data-refeshed\");\n    }\n  }\n\n  //regenerate row numbers for row number formatter if in use\n  regenerateRowNumbers() {\n    if (this.rowNumColumn) {\n      this.activeRows.forEach(row => {\n        var cell = row.getCell(this.rowNumColumn);\n        if (cell) {\n          cell._generateContents();\n        }\n      });\n    }\n  }\n  setActiveRows(activeRows) {\n    this.activeRows = activeRows;\n    this.activeRowsCount = this.activeRows.length;\n  }\n\n  //reset display rows array\n  resetDisplayRows() {\n    this.displayRows = [];\n    this.displayRows.push(this.activeRows.slice(0));\n    this.displayRowsCount = this.displayRows[0].length;\n  }\n  getNextDisplayIndex() {\n    return this.displayRows.length;\n  }\n\n  //set display row pipeline data\n  setDisplayRows(displayRows, index) {\n    var output = true;\n    if (index && typeof this.displayRows[index] != \"undefined\") {\n      this.displayRows[index] = displayRows;\n      output = true;\n    } else {\n      this.displayRows.push(displayRows);\n      output = index = this.displayRows.length - 1;\n    }\n    if (index == this.displayRows.length - 1) {\n      this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;\n    }\n    return output;\n  }\n  getDisplayRows(index) {\n    if (typeof index == \"undefined\") {\n      return this.displayRows.length ? this.displayRows[this.displayRows.length - 1] : [];\n    } else {\n      return this.displayRows[index] || [];\n    }\n  }\n  getVisibleRows(chain, viewable) {\n    var rows = Object.assign([], this.renderer.visibleRows(!viewable));\n    if (chain) {\n      rows = this.chain(\"rows-visible\", [viewable], rows, rows);\n    }\n    return rows;\n  }\n\n  //repeat action accross display rows\n  displayRowIterator(callback) {\n    this.activeRowsPipeline.forEach(callback);\n    this.displayRows.forEach(callback);\n    this.displayRowsCount = this.displayRows[this.displayRows.length - 1].length;\n  }\n\n  //return only actual rows (not group headers etc)\n  getRows(type) {\n    var rows;\n    switch (type) {\n      case \"active\":\n        rows = this.activeRows;\n        break;\n      case \"display\":\n        rows = this.table.rowManager.getDisplayRows();\n        break;\n      case \"visible\":\n        rows = this.getVisibleRows(true);\n        break;\n      default:\n        rows = this.chain(\"rows-retrieve\", type, null, this.rows) || this.rows;\n    }\n    return rows;\n  }\n\n  ///////////////// Table Rendering /////////////////\n  //trigger rerender of table in current position\n  reRenderInPosition(callback) {\n    if (this.redrawBlock) {\n      if (callback) {\n        callback();\n      } else {\n        this.redrawBlockRederInPosition = true;\n      }\n    } else {\n      this.renderer.rerenderRows(callback);\n    }\n  }\n  initializeRenderer() {\n    var renderClass;\n    var renderers = {\n      \"virtual\": VirtualDomVertical,\n      \"basic\": BaiscVertical\n    };\n    if (typeof this.table.options.renderVertical === \"string\") {\n      renderClass = renderers[this.table.options.renderVertical];\n    } else {\n      renderClass = this.table.options.renderVertical;\n    }\n    if (renderClass) {\n      this.renderer = new renderClass(this.table, this.element, this.tableElement);\n      this.renderer.initialize();\n      if (this.table.element.clientHeight || this.table.options.height) {\n        this.fixedHeight = true;\n      } else {\n        this.fixedHeight = false;\n      }\n    } else {\n      console.error(\"Unable to find matching renderer:\", table.options.renderVertical);\n    }\n  }\n  getRenderMode() {\n    return this.renderMode;\n  }\n  renderTable() {\n    this.dispatchExternal(\"renderStarted\");\n    this.element.scrollTop = 0;\n    this._clearTable();\n    if (this.displayRowsCount) {\n      this.renderer.renderRows();\n      if (this.firstRender) {\n        this.firstRender = false;\n        this.layoutRefresh();\n      }\n    } else {\n      this.renderEmptyScroll();\n    }\n    if (!this.fixedHeight) {\n      this.adjustTableSize();\n    }\n    this.dispatch(\"table-layout\");\n    if (!this.displayRowsCount) {\n      this._showPlaceholder();\n    }\n    this.dispatchExternal(\"renderComplete\");\n  }\n\n  //show scrollbars on empty table div\n  renderEmptyScroll() {\n    if (this.table.options.placeholder) {\n      this.tableElement.style.display = \"none\";\n    } else {\n      this.tableElement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\n      // this.tableElement.style.minHeight = \"1px\";\n      // this.tableElement.style.visibility = \"hidden\";\n    }\n  }\n\n  _clearTable() {\n    var element = this.tableElement;\n    this._clearPlaceholder();\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n    this.renderer.clearRows();\n  }\n  _showPlaceholder() {\n    if (this.table.options.placeholder) {\n      this.table.options.placeholder.setAttribute(\"tabulator-render-mode\", this.renderMode);\n      this.getElement().appendChild(this.table.options.placeholder);\n      this.table.options.placeholder.style.width = this.table.columnManager.getWidth() + \"px\";\n    }\n  }\n  _clearPlaceholder() {\n    if (this.table.options.placeholder && this.table.options.placeholder.parentNode) {\n      this.table.options.placeholder.parentNode.removeChild(this.table.options.placeholder);\n    }\n  }\n  styleRow(row, index) {\n    var rowEl = row.getElement();\n    if (index % 2) {\n      rowEl.classList.add(\"tabulator-row-even\");\n      rowEl.classList.remove(\"tabulator-row-odd\");\n    } else {\n      rowEl.classList.add(\"tabulator-row-odd\");\n      rowEl.classList.remove(\"tabulator-row-even\");\n    }\n  }\n\n  //normalize height of active rows\n  normalizeHeight() {\n    this.activeRows.forEach(function (row) {\n      row.normalizeHeight();\n    });\n  }\n\n  //adjust the height of the table holder to fit in the Tabulator element\n  adjustTableSize() {\n    var initialHeight = this.element.clientHeight;\n    if (this.renderer.verticalFillMode === \"fill\") {\n      let otherHeight = Math.floor(this.table.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0));\n      if (this.fixedHeight) {\n        this.element.style.minHeight = \"calc(100% - \" + otherHeight + \"px)\";\n        this.element.style.height = \"calc(100% - \" + otherHeight + \"px)\";\n        this.element.style.maxHeight = \"calc(100% - \" + otherHeight + \"px)\";\n      } else {\n        this.element.style.height = \"\";\n        this.element.style.height = this.table.element.clientHeight - otherHeight + \"px\";\n        this.element.scrollTop = this.scrollTop;\n      }\n      this.renderer.resize();\n\n      //check if the table has changed size when dealing with variable height tables\n      if (!this.fixedHeight && initialHeight != this.element.clientHeight) {\n        if (this.subscribed(\"table-resize\")) {\n          this.dispatch(\"table-resize\");\n        } else {\n          this.redraw();\n        }\n      }\n    }\n  }\n\n  //renitialize all rows\n  reinitialize() {\n    this.rows.forEach(function (row) {\n      row.reinitialize(true);\n    });\n  }\n\n  //prevent table from being redrawn\n  blockRedraw() {\n    this.redrawBlock = true;\n    this.redrawBlockRestoreConfig = false;\n  }\n\n  //restore table redrawing\n  restoreRedraw() {\n    this.redrawBlock = false;\n    if (this.redrawBlockRestoreConfig) {\n      this.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition);\n      this.redrawBlockRestoreConfig = false;\n    } else {\n      if (this.redrawBlockRederInPosition) {\n        this.reRenderInPosition();\n      }\n    }\n    this.redrawBlockRederInPosition = false;\n  }\n\n  //redraw table\n  redraw(force) {\n    var left = this.scrollLeft;\n    this.adjustTableSize();\n    this.table.tableWidth = this.table.element.clientWidth;\n    if (!force) {\n      this.reRenderInPosition();\n      this.scrollHorizontal(left);\n      if (!this.displayRowsCount) {\n        if (this.table.options.placeholder) {\n          this.getElement().appendChild(this.table.options.placeholder);\n        }\n      }\n    } else {\n      this.renderTable();\n    }\n  }\n  resetScroll() {\n    this.element.scrollLeft = 0;\n    this.element.scrollTop = 0;\n    if (this.table.browser === \"ie\") {\n      var event = document.createEvent(\"Event\");\n      event.initEvent(\"scroll\", false, true);\n      this.element.dispatchEvent(event);\n    } else {\n      this.element.dispatchEvent(new Event('scroll'));\n    }\n  }\n}\nclass FooterManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.active = false;\n    this.element = this.createElement(); //containing element\n    this.external = false;\n    this.links = [];\n    this.initializeElement();\n  }\n  initialize() {\n    this.initializeElement();\n  }\n  createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-footer\");\n    return el;\n  }\n  initializeElement() {\n    if (this.table.options.footerElement) {\n      switch (typeof this.table.options.footerElement) {\n        case \"string\":\n          if (this.table.options.footerElement[0] === \"<\") {\n            this.element.innerHTML = this.table.options.footerElement;\n          } else {\n            this.external = true;\n            this.element = document.querySelector(this.table.options.footerElement);\n          }\n          break;\n        default:\n          this.element = this.table.options.footerElement;\n          break;\n      }\n    }\n  }\n  getElement() {\n    return this.element;\n  }\n  append(element, parent) {\n    this.activate(parent);\n    this.element.appendChild(element);\n    this.table.rowManager.adjustTableSize();\n  }\n  prepend(element, parent) {\n    this.activate(parent);\n    this.element.insertBefore(element, this.element.firstChild);\n    this.table.rowManager.adjustTableSize();\n  }\n  remove(element) {\n    element.parentNode.removeChild(element);\n    this.deactivate();\n  }\n  deactivate(force) {\n    if (!this.element.firstChild || force) {\n      if (!this.external) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.active = false;\n    }\n  }\n  activate(parent) {\n    if (!this.active) {\n      this.active = true;\n      if (!this.external) {\n        this.table.element.appendChild(this.getElement());\n        this.table.element.style.display = '';\n      }\n    }\n    if (parent) {\n      this.links.push(parent);\n    }\n  }\n  redraw() {\n    this.links.forEach(function (link) {\n      link.footerRedraw();\n    });\n  }\n}\nclass InteractionManager extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.el = null;\n    this.abortClasses = [\"tabulator-headers\", \"tabulator-table\"];\n    this.previousTargets = {};\n    this.listeners = [\"click\", \"dblclick\", \"contextmenu\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\", \"mousemove\", \"touchstart\", \"touchend\"];\n    this.componentMap = {\n      \"tabulator-cell\": \"cell\",\n      \"tabulator-row\": \"row\",\n      \"tabulator-group\": \"group\",\n      \"tabulator-col\": \"column\"\n    };\n    this.pseudoTrackers = {\n      \"row\": {\n        subscriber: null,\n        target: null\n      },\n      \"cell\": {\n        subscriber: null,\n        target: null\n      },\n      \"group\": {\n        subscriber: null,\n        target: null\n      },\n      \"column\": {\n        subscriber: null,\n        target: null\n      }\n    };\n    this.pseudoTracking = false;\n  }\n  initialize() {\n    this.el = this.table.element;\n    this.buildListenerMap();\n    this.bindSubscriptionWatchers();\n  }\n  buildListenerMap() {\n    var listenerMap = {};\n    this.listeners.forEach(listener => {\n      listenerMap[listener] = {\n        handler: null,\n        components: []\n      };\n    });\n    this.listeners = listenerMap;\n  }\n  bindPseudoEvents() {\n    Object.keys(this.pseudoTrackers).forEach(key => {\n      this.pseudoTrackers[key].subscriber = this.pseudoMouseEnter.bind(this, key);\n      this.subscribe(key + \"-mouseover\", this.pseudoTrackers[key].subscriber);\n    });\n    this.pseudoTracking = true;\n  }\n  pseudoMouseEnter(key, e, target) {\n    if (this.pseudoTrackers[key].target !== target) {\n      if (this.pseudoTrackers[key].target) {\n        this.dispatch(key + \"-mouseleave\", e, target);\n      }\n      this.pseudoMouseLeave(key, e);\n      this.pseudoTrackers[key].target = target;\n      this.dispatch(key + \"-mouseenter\", e, target);\n    }\n  }\n  pseudoMouseLeave(key, e) {\n    var leaveList = Object.keys(this.pseudoTrackers),\n      linkedKeys = {\n        \"row\": [\"cell\"],\n        \"cell\": [\"row\"]\n      };\n    leaveList = leaveList.filter(item => {\n      var links = linkedKeys[key];\n      return item !== key && (!links || links && !links.includes(item));\n    });\n    leaveList.forEach(key => {\n      var target = this.pseudoTrackers[key].target;\n      if (this.pseudoTrackers[key].target) {\n        this.dispatch(key + \"-mouseleave\", e, target);\n        this.pseudoTrackers[key].target = null;\n      }\n    });\n  }\n  bindSubscriptionWatchers() {\n    var listeners = Object.keys(this.listeners),\n      components = Object.values(this.componentMap);\n    for (let comp of components) {\n      for (let listener of listeners) {\n        let key = comp + \"-\" + listener;\n        this.subscriptionChange(key, this.subscriptionChanged.bind(this, comp, listener));\n      }\n    }\n    this.subscribe(\"table-destroy\", this.clearWatchers.bind(this));\n  }\n  subscriptionChanged(component, key, added) {\n    var listener = this.listeners[key].components,\n      index = listener.indexOf(component),\n      changed = false;\n    if (added) {\n      if (index === -1) {\n        listener.push(component);\n        changed = true;\n      }\n    } else {\n      if (!this.subscribed(component + \"-\" + key)) {\n        if (index > -1) {\n          listener.splice(index, 1);\n          changed = true;\n        }\n      }\n    }\n    if ((key === \"mouseenter\" || key === \"mouseleave\") && !this.pseudoTracking) {\n      this.bindPseudoEvents();\n    }\n    if (changed) {\n      this.updateEventListeners();\n    }\n  }\n  updateEventListeners() {\n    for (let key in this.listeners) {\n      let listener = this.listeners[key];\n      if (listener.components.length) {\n        if (!listener.handler) {\n          listener.handler = this.track.bind(this, key);\n          this.el.addEventListener(key, listener.handler);\n          // this.el.addEventListener(key, listener.handler, {passive: true})\n        }\n      } else {\n        if (listener.handler) {\n          this.el.removeEventListener(key, listener.handler);\n          listener.handler = null;\n        }\n      }\n    }\n  }\n  track(type, e) {\n    var path = e.composedPath && e.composedPath() || e.path;\n    var targets = this.findTargets(path);\n    targets = this.bindComponents(type, targets);\n    this.triggerEvents(type, e, targets);\n    if (this.pseudoTracking && (type == \"mouseover\" || type == \"mouseleave\") && !Object.keys(targets).length) {\n      this.pseudoMouseLeave(\"none\", e);\n    }\n  }\n  findTargets(path) {\n    var targets = {};\n    let componentMap = Object.keys(this.componentMap);\n    for (let el of path) {\n      let classList = el.classList ? [...el.classList] : [];\n      let abort = classList.filter(item => {\n        return this.abortClasses.includes(item);\n      });\n      if (abort.length) {\n        break;\n      }\n      let elTargets = classList.filter(item => {\n        return componentMap.includes(item);\n      });\n      for (let target of elTargets) {\n        targets[this.componentMap[target]] = el;\n      }\n    }\n    if (targets.group && targets.group === targets.row) {\n      delete targets.row;\n    }\n    return targets;\n  }\n  bindComponents(type, targets) {\n    //ensure row component is looked up before cell\n    var keys = Object.keys(targets).reverse(),\n      listener = this.listeners[type],\n      targetMatches = {};\n    for (let key of keys) {\n      let component;\n      let target = targets[key];\n      let previousTarget = this.previousTargets[key];\n      if (previousTarget && previousTarget.target === target) {\n        component = previousTarget.component;\n      } else {\n        switch (key) {\n          case \"row\":\n          case \"group\":\n            if (listener.components.includes(\"row\") || listener.components.includes(\"cell\")) {\n              let rows = this.table.rowManager.getVisibleRows(true);\n              component = rows.find(row => {\n                return row.getElement() === target;\n              });\n            }\n            break;\n          case \"column\":\n            if (listener.components.includes(\"column\")) {\n              component = this.table.columnManager.findColumn(target);\n            }\n            break;\n          case \"cell\":\n            if (listener.components.includes(\"cell\")) {\n              component = targets[\"row\"].findCell(target);\n            }\n            break;\n        }\n      }\n      if (component) {\n        targets[key] = component;\n        targetMatches[key] = {\n          target: target,\n          component: component\n        };\n      }\n    }\n    this.previousTargets = targetMatches;\n    return targets;\n  }\n  triggerEvents(type, e, targets) {\n    var listener = this.listeners[type];\n    for (let key in targets) {\n      if (targets[key] && listener.components.includes(key)) {\n        this.dispatch(key + \"-\" + type, e, targets[key]);\n      }\n    }\n  }\n  clearWatchers() {\n    for (let key in this.listeners) {\n      let listener = this.listeners[key];\n      if (listener.handler) {\n        this.el.removeEventListener(key, listener.handler);\n        listener.handler = null;\n      }\n    }\n  }\n}\nclass ComponentFunctionBinder {\n  constructor(table) {\n    this.table = table;\n    this.bindings = {};\n  }\n  bind(type, funcName, handler) {\n    if (!this.bindings[type]) {\n      this.bindings[type] = {};\n    }\n    if (this.bindings[type][funcName]) {\n      console.warn(\"Unable to bind component handler, a matching function name is already bound\", type, funcName, hanlder);\n    } else {\n      this.bindings[type][funcName] = handler;\n    }\n  }\n  handle(type, component, name) {\n    if (this.bindings[type] && this.bindings[type][name]) {\n      return this.bindings[type][name].bind(null, component);\n    } else {\n      if (name !== \"then\" && typeof name === \"string\" && !name.startsWith(\"_\")) {\n        console.error(\"The \" + type + \" component does not have a \" + name + \" function, have you checked that you have the correct Tabulator module installed?\");\n      }\n    }\n  }\n}\nclass DataLoader extends CoreFeature {\n  constructor(table) {\n    super(table);\n    this.loaderElement = this.createLoaderElement(); //loader message div\n    this.msgElement = this.createMsgElement(); //message element\n    this.loadingElement = null;\n    this.errorElement = null;\n    this.requestOrder = 0; //prevent requests comming out of sequence if overridden by another load request\n    this.loading = false;\n  }\n  initialize() {\n    var template;\n    this.loaderElement.appendChild(this.msgElement);\n    if (this.table.options.dataLoaderLoading) {\n      if (typeof this.table.options.dataLoaderLoading == \"string\") {\n        template = document.createElement('template');\n        template.innerHTML = this.table.options.dataLoaderLoading.trim();\n        this.loadingElement = template.firstElementChild;\n      } else {\n        this.loadingElement = this.table.options.dataLoaderLoading;\n      }\n    }\n    if (this.table.options.dataLoaderError) {\n      if (typeof this.table.options.dataLoaderError == \"string\") {\n        template = document.createElement('template');\n        template.innerHTML = this.table.options.dataLoaderError.trim();\n        this.errorElement = template.firstElementChild;\n      } else {\n        this.errorElement = this.table.options.dataLoaderError;\n      }\n    }\n  }\n  createLoaderElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-loader\");\n    return el;\n  }\n  createMsgElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-loader-msg\");\n    el.setAttribute(\"role\", \"alert\");\n    return el;\n  }\n  load(data, params, config, replace, silent) {\n    var requestNo = ++this.requestOrder;\n    this.dispatchExternal(\"dataLoading\", data);\n\n    //parse json data to array\n    if (data && (data.indexOf(\"{\") == 0 || data.indexOf(\"[\") == 0)) {\n      data = JSON.parse(data);\n    }\n    if (this.confirm(\"data-loading\", [data, params, config, silent])) {\n      this.loading = true;\n      if (!silent) {\n        this.showLoader();\n      }\n\n      //get params for request\n      params = this.chain(\"data-params\", [data, config, silent], params || {}, params || {});\n      params = this.mapParams(params, this.table.options.dataSendParams);\n      var result = this.chain(\"data-load\", [data, params, config, silent], Promise.resolve([]));\n      return result.then(response => {\n        if (!Array.isArray(response) && typeof response == \"object\") {\n          response = this.mapParams(response, this.objectInvert(this.table.options.dataReceiveParams));\n        }\n        var rowData = this.chain(\"data-loaded\", response, null, response);\n        if (requestNo == this.requestOrder) {\n          this.hideLoader();\n          if (rowData !== false) {\n            this.dispatchExternal(\"dataLoaded\", rowData);\n            this.table.rowManager.setData(rowData, replace, !replace);\n          }\n        } else {\n          console.warn(\"Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made\");\n        }\n      }).catch(error => {\n        console.error(\"Data Load Error: \", error);\n        this.dispatchExternal(\"dataLoadError\", error);\n        if (!silent) {\n          this.showError();\n        }\n        setTimeout(() => {\n          this.hideLoader();\n        }, 3000);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dispatchExternal(\"dataLoaded\", data);\n      if (!data) {\n        data = [];\n      }\n      this.table.rowManager.setData(data, replace, !replace);\n      return Promise.resolve();\n    }\n  }\n  mapParams(params, map) {\n    var output = {};\n    for (let key in params) {\n      output[map.hasOwnProperty(key) ? map[key] : key] = params[key];\n    }\n    return output;\n  }\n  objectInvert(obj) {\n    var output = {};\n    for (let key in obj) {\n      output[obj[key]] = key;\n    }\n    return output;\n  }\n  blockActiveLoad() {\n    this.requestOrder++;\n  }\n  showLoader() {\n    var shouldLoad = typeof this.table.options.dataLoader === \"function\" ? this.table.options.dataLoader() : this.table.options.dataLoader;\n    if (shouldLoad) {\n      this.hideLoader();\n      while (this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\n      this.msgElement.classList.remove(\"tabulator-error\");\n      this.msgElement.classList.add(\"tabulator-loading\");\n      if (this.loadingElement) {\n        this.msgElement.appendChild(this.loadingElement);\n      } else {\n        this.msgElement.innerHTML = this.langText(\"data|loading\");\n      }\n      this.table.element.appendChild(this.loaderElement);\n    }\n  }\n  showError() {\n    this.hideLoader();\n    while (this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\n    this.msgElement.classList.remove(\"tabulator-loading\");\n    this.msgElement.classList.add(\"tabulator-error\");\n    if (this.errorElement) {\n      this.msgElement.appendChild(this.errorElement);\n    } else {\n      this.msgElement.innerHTML = this.langText(\"data|error\");\n    }\n    this.table.element.appendChild(this.loaderElement);\n  }\n  hideLoader() {\n    if (this.loaderElement.parentNode) {\n      this.loaderElement.parentNode.removeChild(this.loaderElement);\n    }\n  }\n}\nclass ExternalEventBus {\n  constructor(table, optionsList, debug) {\n    this.table = table;\n    this.events = {};\n    this.optionsList = optionsList || {};\n    this.subscriptionNotifiers = {};\n    this.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\n    this.debug = debug;\n  }\n  subscriptionChange(key, callback) {\n    if (!this.subscriptionNotifiers[key]) {\n      this.subscriptionNotifiers[key] = [];\n    }\n    this.subscriptionNotifiers[key].push(callback);\n    if (this.subscribed(key)) {\n      this._notifiySubscriptionChange(key, true);\n    }\n  }\n  subscribe(key, callback) {\n    if (!this.events[key]) {\n      this.events[key] = [];\n    }\n    this.events[key].push(callback);\n    this._notifiySubscriptionChange(key, true);\n  }\n  unsubscribe(key, callback) {\n    var index;\n    if (this.events[key]) {\n      if (callback) {\n        index = this.events[key].findIndex(item => {\n          return item === callback;\n        });\n        if (index > -1) {\n          this.events[key].splice(index, 1);\n        } else {\n          console.warn(\"Cannot remove event, no matching event found:\", key, callback);\n          return;\n        }\n      } else {\n        delete this.events[key];\n      }\n    } else {\n      console.warn(\"Cannot remove event, no events set on:\", key);\n      return;\n    }\n    this._notifiySubscriptionChange(key, false);\n  }\n  subscribed(key) {\n    return this.events[key] && this.events[key].length;\n  }\n  _notifiySubscriptionChange(key, subscribed) {\n    var notifiers = this.subscriptionNotifiers[key];\n    if (notifiers) {\n      notifiers.forEach(callback => {\n        callback(subscribed);\n      });\n    }\n  }\n  _dispatch() {\n    var args = Array.from(arguments),\n      key = args.shift(),\n      result;\n    if (this.events[key]) {\n      this.events[key].forEach((callback, i) => {\n        let callResult = callback.apply(this.table, args);\n        if (!i) {\n          result = callResult;\n        }\n      });\n    }\n    return result;\n  }\n  _debugDispatch() {\n    var args = Array.from(arguments),\n      key = args[0];\n    args[0] = \"ExternalEvent:\" + args[0];\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n    return this._dispatch(...arguments);\n  }\n}\nclass InternalEventBus {\n  constructor(debug) {\n    this.events = {};\n    this.subscriptionNotifiers = {};\n    this.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\n    this.chain = debug ? this._debugChain.bind(this) : this._chain.bind(this);\n    this.confirm = debug ? this._debugConfirm.bind(this) : this._confirm.bind(this);\n    this.debug = debug;\n  }\n  subscriptionChange(key, callback) {\n    if (!this.subscriptionNotifiers[key]) {\n      this.subscriptionNotifiers[key] = [];\n    }\n    this.subscriptionNotifiers[key].push(callback);\n    if (this.subscribed(key)) {\n      this._notifiySubscriptionChange(key, true);\n    }\n  }\n  subscribe(key, callback) {\n    let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10000;\n    if (!this.events[key]) {\n      this.events[key] = [];\n    }\n    this.events[key].push({\n      callback,\n      priority\n    });\n    this.events[key].sort((a, b) => {\n      return a.priority - b.priority;\n    });\n    this._notifiySubscriptionChange(key, true);\n  }\n  unsubscribe(key, callback) {\n    var index;\n    if (this.events[key]) {\n      if (callback) {\n        index = this.events[key].findIndex(item => {\n          return item.callback === callback;\n        });\n        if (index > -1) {\n          this.events[key].splice(index, 1);\n        } else {\n          console.warn(\"Cannot remove event, no matching event found:\", key, callback);\n          return;\n        }\n      }\n    } else {\n      console.warn(\"Cannot remove event, no events set on:\", key);\n      return;\n    }\n    this._notifiySubscriptionChange(key, false);\n  }\n  subscribed(key) {\n    return this.events[key] && this.events[key].length;\n  }\n  _chain(key, args, initialValue, fallback) {\n    var value = initialValue;\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n    if (this.subscribed(key)) {\n      this.events[key].forEach((subscriber, i) => {\n        value = subscriber.callback.apply(this, args.concat([value]));\n      });\n      return value;\n    } else {\n      return typeof fallback === \"function\" ? fallback() : fallback;\n    }\n  }\n  _confirm(key, args) {\n    var confirmed = false;\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n    if (this.subscribed(key)) {\n      this.events[key].forEach((subscriber, i) => {\n        if (subscriber.callback.apply(this, args)) {\n          confirmed = true;\n        }\n      });\n    }\n    return confirmed;\n  }\n  _notifiySubscriptionChange(key, subscribed) {\n    var notifiers = this.subscriptionNotifiers[key];\n    if (notifiers) {\n      notifiers.forEach(callback => {\n        callback(subscribed);\n      });\n    }\n  }\n  _dispatch() {\n    var args = Array.from(arguments),\n      key = args.shift();\n    if (this.events[key]) {\n      this.events[key].forEach(subscriber => {\n        let callResult = subscriber.callback.apply(this, args);\n      });\n    }\n  }\n  _debugDispatch() {\n    var args = Array.from(arguments),\n      key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n    return this._dispatch(...arguments);\n  }\n  _debugChain() {\n    var args = Array.from(arguments),\n      key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n    return this._chain(...arguments);\n  }\n  _debugConfirm() {\n    var args = Array.from(arguments),\n      key = args[0];\n    args[0] = \"InternalEvent:\" + key;\n    if (this.debug === true || this.debug.includes(key)) {\n      console.log(...args);\n    }\n    return this._confirm(...arguments);\n  }\n}\nclass TableRegistry {\n  static register(table) {\n    TableRegistry.tables.push(table);\n  }\n  static deregister(table) {\n    var index = TableRegistry.tables.indexOf(table);\n    if (index > -1) {\n      TableRegistry.tables.splice(index, 1);\n    }\n  }\n  static lookupTable(query, silent) {\n    var results = [],\n      matches,\n      match;\n    if (typeof query === \"string\") {\n      matches = document.querySelectorAll(query);\n      if (matches.length) {\n        for (var i = 0; i < matches.length; i++) {\n          match = TableRegistry.matchElement(matches[i]);\n          if (match) {\n            results.push(match);\n          }\n        }\n      }\n    } else if (typeof HTMLElement !== \"undefined\" && query instanceof HTMLElement || query instanceof Tabulator) {\n      match = TableRegistry.matchElement(query);\n      if (match) {\n        results.push(match);\n      }\n    } else if (Array.isArray(query)) {\n      query.forEach(function (item) {\n        results = results.concat(TableRegistry.lookupTable(item));\n      });\n    } else {\n      if (!silent) {\n        console.warn(\"Table Connection Error - Invalid Selector\", query);\n      }\n    }\n    return results;\n  }\n  static matchElement(element) {\n    return TableRegistry.tables.find(function (table) {\n      return element instanceof Tabulator ? table === element : table.element === element;\n    });\n  }\n}\nTableRegistry.tables = [];\n\n//resize columns to fit data they contain\nfunction fitData(columns) {\n  this.table.columnManager.renderer.reinitializeColumnWidths(columns);\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n}\n\n//resize columns to fit data they contain and stretch row to fill table, also used for fitDataTable\nfunction fitDataGeneral(columns) {\n  columns.forEach(function (column) {\n    column.reinitializeWidth();\n  });\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n}\n\n//resize columns to fit data the contain and stretch last column to fill table\nfunction fitDataStretch(columns) {\n  var colsWidth = 0,\n    tableWidth = this.table.rowManager.element.clientWidth,\n    gap = 0,\n    lastCol = false;\n  columns.forEach((column, i) => {\n    if (!column.widthFixed) {\n      column.reinitializeWidth();\n    }\n    if (this.table.options.responsiveLayout ? column.modules.responsive.visible : column.visible) {\n      lastCol = column;\n    }\n    if (column.visible) {\n      colsWidth += column.getWidth();\n    }\n  });\n  if (lastCol) {\n    gap = tableWidth - colsWidth + lastCol.getWidth();\n    if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n      lastCol.setWidth(0);\n      this.table.modules.responsiveLayout.update();\n    }\n    if (gap > 0) {\n      lastCol.setWidth(gap);\n    } else {\n      lastCol.reinitializeWidth();\n    }\n  } else {\n    if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n      this.table.modules.responsiveLayout.update();\n    }\n  }\n}\n\n//resize columns to fit\nfunction fitColumns(columns) {\n  var totalWidth = this.table.element.clientWidth; //table element width\n  var fixedWidth = 0; //total width of columns with a defined width\n  var flexWidth = 0; //total width available to flexible columns\n  var flexGrowUnits = 0; //total number of widthGrow blocks accross all columns\n  var flexColWidth = 0; //desired width of flexible columns\n  var flexColumns = []; //array of flexible width columns\n  var fixedShrinkColumns = []; //array of fixed width columns that can shrink\n  var flexShrinkUnits = 0; //total number of widthShrink blocks accross all columns\n  var overflowWidth = 0; //horizontal overflow width\n  var gapFill = 0; //number of pixels to be added to final column to close and half pixel gaps\n\n  function calcWidth(width) {\n    var colWidth;\n    if (typeof width == \"string\") {\n      if (width.indexOf(\"%\") > -1) {\n        colWidth = totalWidth / 100 * parseInt(width);\n      } else {\n        colWidth = parseInt(width);\n      }\n    } else {\n      colWidth = width;\n    }\n    return colWidth;\n  }\n\n  //ensure columns resize to take up the correct amount of space\n  function scaleColumns(columns, freeSpace, colWidth, shrinkCols) {\n    var oversizeCols = [],\n      oversizeSpace = 0,\n      remainingSpace = 0,\n      nextColWidth = 0,\n      remainingFlexGrowUnits = flexGrowUnits,\n      gap = 0,\n      changeUnits = 0,\n      undersizeCols = [];\n    function calcGrow(col) {\n      return colWidth * (col.column.definition.widthGrow || 1);\n    }\n    function calcShrink(col) {\n      return calcWidth(col.width) - colWidth * (col.column.definition.widthShrink || 0);\n    }\n    columns.forEach(function (col, i) {\n      var width = shrinkCols ? calcShrink(col) : calcGrow(col);\n      if (col.column.minWidth >= width) {\n        oversizeCols.push(col);\n      } else {\n        if (col.column.maxWidth && col.column.maxWidth < width) {\n          col.width = col.column.maxWidth;\n          freeSpace -= col.column.maxWidth;\n          remainingFlexGrowUnits -= shrinkCols ? col.column.definition.widthShrink || 1 : col.column.definition.widthGrow || 1;\n          if (remainingFlexGrowUnits) {\n            colWidth = Math.floor(freeSpace / remainingFlexGrowUnits);\n          }\n        } else {\n          undersizeCols.push(col);\n          changeUnits += shrinkCols ? col.column.definition.widthShrink || 1 : col.column.definition.widthGrow || 1;\n        }\n      }\n    });\n    if (oversizeCols.length) {\n      oversizeCols.forEach(function (col) {\n        oversizeSpace += shrinkCols ? col.width - col.column.minWidth : col.column.minWidth;\n        col.width = col.column.minWidth;\n      });\n      remainingSpace = freeSpace - oversizeSpace;\n      nextColWidth = changeUnits ? Math.floor(remainingSpace / changeUnits) : remainingSpace;\n      gap = remainingSpace - nextColWidth * changeUnits;\n      gap += scaleColumns(undersizeCols, remainingSpace, nextColWidth, shrinkCols);\n    } else {\n      gap = changeUnits ? freeSpace - Math.floor(freeSpace / changeUnits) * changeUnits : freeSpace;\n      undersizeCols.forEach(function (column) {\n        column.width = shrinkCols ? calcShrink(column) : calcGrow(column);\n      });\n    }\n    return gap;\n  }\n  if (this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)) {\n    this.table.modules.responsiveLayout.update();\n  }\n\n  //adjust for vertical scrollbar if present\n  if (this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight) {\n    totalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\n  }\n  columns.forEach(function (column) {\n    var width, minWidth, colWidth;\n    if (column.visible) {\n      width = column.definition.width;\n      minWidth = parseInt(column.minWidth);\n      if (width) {\n        colWidth = calcWidth(width);\n        fixedWidth += colWidth > minWidth ? colWidth : minWidth;\n        if (column.definition.widthShrink) {\n          fixedShrinkColumns.push({\n            column: column,\n            width: colWidth > minWidth ? colWidth : minWidth\n          });\n          flexShrinkUnits += column.definition.widthShrink;\n        }\n      } else {\n        flexColumns.push({\n          column: column,\n          width: 0\n        });\n        flexGrowUnits += column.definition.widthGrow || 1;\n      }\n    }\n  });\n\n  //calculate available space\n  flexWidth = totalWidth - fixedWidth;\n\n  //calculate correct column size\n  flexColWidth = Math.floor(flexWidth / flexGrowUnits);\n\n  //generate column widths\n  var gapFill = scaleColumns(flexColumns, flexWidth, flexColWidth, false);\n\n  //increase width of last column to account for rounding errors\n  if (flexColumns.length && gapFill > 0) {\n    flexColumns[flexColumns.length - 1].width += +gapFill;\n  }\n\n  //caculate space for columns to be shrunk into\n  flexColumns.forEach(function (col) {\n    flexWidth -= col.width;\n  });\n  overflowWidth = Math.abs(gapFill) + flexWidth;\n\n  //shrink oversize columns if there is no available space\n  if (overflowWidth > 0 && flexShrinkUnits) {\n    gapFill = scaleColumns(fixedShrinkColumns, overflowWidth, Math.floor(overflowWidth / flexShrinkUnits), true);\n  }\n\n  //decrease width of last column to account for rounding errors\n  if (fixedShrinkColumns.length) {\n    fixedShrinkColumns[fixedShrinkColumns.length - 1].width -= gapFill;\n  }\n  flexColumns.forEach(function (col) {\n    col.column.setWidth(col.width);\n  });\n  fixedShrinkColumns.forEach(function (col) {\n    col.column.setWidth(col.width);\n  });\n}\nvar defaultModes = {\n  fitData: fitData,\n  fitDataFill: fitDataGeneral,\n  fitDataTable: fitDataGeneral,\n  fitDataStretch: fitDataStretch,\n  fitColumns: fitColumns\n};\nclass Layout extends Module {\n  constructor(table) {\n    super(table, \"layout\");\n    this.mode = null;\n    this.registerTableOption(\"layout\", \"fitData\"); //layout type\n    this.registerTableOption(\"layoutColumnsOnNewData\", false); //update column widths on setData\n\n    this.registerColumnOption(\"widthGrow\");\n    this.registerColumnOption(\"widthShrink\");\n  }\n\n  //initialize layout system\n  initialize() {\n    var layout = this.table.options.layout;\n    if (Layout.modes[layout]) {\n      this.mode = layout;\n    } else {\n      console.warn(\"Layout Error - invalid mode set, defaulting to 'fitData' : \" + layout);\n      this.mode = 'fitData';\n    }\n    this.table.element.setAttribute(\"tabulator-layout\", this.mode);\n  }\n  getMode() {\n    return this.mode;\n  }\n\n  //trigger table layout\n  layout() {\n    Layout.modes[this.mode].call(this, this.table.columnManager.columnsByIndex);\n    this.dispatch(\"layout-refreshed\");\n  }\n}\nLayout.moduleName = \"layout\";\n\n//load defaults\nLayout.modes = defaultModes;\nvar defaultLangs = {\n  \"default\": {\n    //hold default locale text\n    \"groups\": {\n      \"item\": \"item\",\n      \"items\": \"items\"\n    },\n    \"columns\": {},\n    \"data\": {\n      \"loading\": \"Loading\",\n      \"error\": \"Error\"\n    },\n    \"pagination\": {\n      \"page_size\": \"Page Size\",\n      \"page_title\": \"Show Page\",\n      \"first\": \"First\",\n      \"first_title\": \"First Page\",\n      \"last\": \"Last\",\n      \"last_title\": \"Last Page\",\n      \"prev\": \"Prev\",\n      \"prev_title\": \"Prev Page\",\n      \"next\": \"Next\",\n      \"next_title\": \"Next Page\",\n      \"all\": \"All\"\n    },\n    \"headerFilters\": {\n      \"default\": \"filter column...\",\n      \"columns\": {}\n    }\n  }\n};\nclass Localize extends Module {\n  constructor(table) {\n    super(table);\n    this.locale = \"default\"; //current locale\n    this.lang = false; //current language\n    this.bindings = {}; //update events to call when locale is changed\n    this.langList = {};\n    this.registerTableOption(\"locale\", false); //current system language\n    this.registerTableOption(\"langs\", {});\n  }\n  initialize() {\n    this.langList = Helpers.deepClone(Localize.langs);\n    if (this.table.options.columnDefaults.headerFilterPlaceholder !== false) {\n      this.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder);\n    }\n    for (let locale in this.table.options.langs) {\n      this.installLang(locale, this.table.options.langs[locale]);\n    }\n    this.setLocale(this.table.options.locale);\n    this.registerTableFunction(\"setLocale\", this.setLocale.bind(this));\n    this.registerTableFunction(\"getLocale\", this.getLocale.bind(this));\n    this.registerTableFunction(\"getLang\", this.getLang.bind(this));\n  }\n\n  //set header placehoder\n  setHeaderFilterPlaceholder(placeholder) {\n    this.langList.default.headerFilters.default = placeholder;\n  }\n\n  //set header filter placeholder by column\n  setHeaderFilterColumnPlaceholder(column, placeholder) {\n    this.langList.default.headerFilters.columns[column] = placeholder;\n    if (this.lang && !this.lang.headerFilters.columns[column]) {\n      this.lang.headerFilters.columns[column] = placeholder;\n    }\n  }\n\n  //setup a lang description object\n  installLang(locale, lang) {\n    if (this.langList[locale]) {\n      this._setLangProp(this.langList[locale], lang);\n    } else {\n      this.langList[locale] = lang;\n    }\n  }\n  _setLangProp(lang, values) {\n    for (let key in values) {\n      if (lang[key] && typeof lang[key] == \"object\") {\n        this._setLangProp(lang[key], values[key]);\n      } else {\n        lang[key] = values[key];\n      }\n    }\n  }\n\n  //set current locale\n  setLocale(desiredLocale) {\n    desiredLocale = desiredLocale || \"default\";\n\n    //fill in any matching languge values\n    function traverseLang(trans, path) {\n      for (var prop in trans) {\n        if (typeof trans[prop] == \"object\") {\n          if (!path[prop]) {\n            path[prop] = {};\n          }\n          traverseLang(trans[prop], path[prop]);\n        } else {\n          path[prop] = trans[prop];\n        }\n      }\n    }\n\n    //determing correct locale to load\n    if (desiredLocale === true && navigator.language) {\n      //get local from system\n      desiredLocale = navigator.language.toLowerCase();\n    }\n    if (desiredLocale) {\n      //if locale is not set, check for matching top level locale else use default\n      if (!this.langList[desiredLocale]) {\n        let prefix = desiredLocale.split(\"-\")[0];\n        if (this.langList[prefix]) {\n          console.warn(\"Localization Error - Exact matching locale not found, using closest match: \", desiredLocale, prefix);\n          desiredLocale = prefix;\n        } else {\n          console.warn(\"Localization Error - Matching locale not found, using default: \", desiredLocale);\n          desiredLocale = \"default\";\n        }\n      }\n    }\n    this.locale = desiredLocale;\n\n    //load default lang template\n    this.lang = Helpers.deepClone(this.langList.default || {});\n    if (desiredLocale != \"default\") {\n      traverseLang(this.langList[desiredLocale], this.lang);\n    }\n    this.dispatchExternal(\"localized\", this.locale, this.lang);\n    this._executeBindings();\n  }\n\n  //get current locale\n  getLocale(locale) {\n    return this.locale;\n  }\n\n  //get lang object for given local or current if none provided\n  getLang(locale) {\n    return locale ? this.langList[locale] : this.lang;\n  }\n\n  //get text for current locale\n  getText(path, value) {\n    var path = value ? path + \"|\" + value : path,\n      pathArray = path.split(\"|\"),\n      text = this._getLangElement(pathArray, this.locale);\n\n    // if(text === false){\n    // \tconsole.warn(\"Localization Error - Matching localized text not found for given path: \", path);\n    // }\n\n    return text || \"\";\n  }\n\n  //traverse langs object and find localized copy\n  _getLangElement(path, locale) {\n    var root = this.lang;\n    path.forEach(function (level) {\n      var rootPath;\n      if (root) {\n        rootPath = root[level];\n        if (typeof rootPath != \"undefined\") {\n          root = rootPath;\n        } else {\n          root = false;\n        }\n      }\n    });\n    return root;\n  }\n\n  //set update binding\n  bind(path, callback) {\n    if (!this.bindings[path]) {\n      this.bindings[path] = [];\n    }\n    this.bindings[path].push(callback);\n    callback(this.getText(path), this.lang);\n  }\n\n  //itterate through bindings and trigger updates\n  _executeBindings() {\n    for (let path in this.bindings) {\n      this.bindings[path].forEach(binding => {\n        binding(this.getText(path), this.lang);\n      });\n    }\n  }\n}\nLocalize.moduleName = \"localize\";\n\n//load defaults\nLocalize.langs = defaultLangs;\nclass Comms extends Module {\n  constructor(table) {\n    super(table);\n  }\n  initialize() {\n    this.registerTableFunction(\"tableComms\", this.receive.bind(this));\n  }\n  getConnections(selectors) {\n    var connections = [],\n      connection;\n    connection = TableRegistry.lookupTable(selectors);\n    connection.forEach(con => {\n      if (this.table !== con) {\n        connections.push(con);\n      }\n    });\n    return connections;\n  }\n  send(selectors, module, action, data) {\n    var connections = this.getConnections(selectors);\n    connections.forEach(connection => {\n      connection.tableComms(this.table.element, module, action, data);\n    });\n    if (!connections.length && selectors) {\n      console.warn(\"Table Connection Error - No tables matching selector found\", selectors);\n    }\n  }\n  receive(table, module, action, data) {\n    if (this.table.modExists(module)) {\n      return this.table.modules[module].commsReceived(table, action, data);\n    } else {\n      console.warn(\"Inter-table Comms Error - no such module:\", module);\n    }\n  }\n}\nComms.moduleName = \"comms\";\nvar coreModules = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LayoutModule: Layout,\n  LocalizeModule: Localize,\n  CommsModule: Comms\n});\nclass ModuleBinder {\n  constructor(tabulator, modules) {\n    this.bindStaticFuctionality(tabulator);\n    this.bindModules(tabulator, coreModules, true);\n    if (modules) {\n      this.bindModules(tabulator, modules);\n    }\n  }\n  bindStaticFuctionality(tabulator) {\n    tabulator.moduleBindings = {};\n    tabulator.extendModule = function (name, property, values) {\n      if (tabulator.moduleBindings[name]) {\n        var source = tabulator.moduleBindings[name][property];\n        if (source) {\n          if (typeof values == \"object\") {\n            for (let key in values) {\n              source[key] = values[key];\n            }\n          } else {\n            console.warn(\"Module Error - Invalid value type, it must be an object\");\n          }\n        } else {\n          console.warn(\"Module Error - property does not exist:\", property);\n        }\n      } else {\n        console.warn(\"Module Error - module does not exist:\", name);\n      }\n    };\n    tabulator.registerModule = function (modules) {\n      if (!Array.isArray(modules)) {\n        modules = [modules];\n      }\n      modules.forEach(mod => {\n        tabulator.registerModuleBinding(mod);\n      });\n    };\n    tabulator.registerModuleBinding = function (mod) {\n      tabulator.moduleBindings[mod.moduleName] = mod;\n    };\n    tabulator.findTable = function (query) {\n      var results = TableRegistry.lookupTable(query, true);\n      return Array.isArray(results) && !results.length ? false : results;\n    };\n\n    //ensure that module are bound to instantiated function\n    tabulator.prototype.bindModules = function () {\n      this.modules = {};\n      for (var name in tabulator.moduleBindings) {\n        let mod = tabulator.moduleBindings[name];\n        this.modules[name] = new mod(this);\n        if (mod.prototype.moduleCore) {\n          this.modulesCore[name] = this.modules[name];\n        } else {\n          this.modulesRegular[name] = this.modules[name];\n        }\n      }\n    };\n  }\n  bindModules(tabulator, modules, core) {\n    var mods = Object.values(modules);\n    if (core) {\n      mods.forEach(mod => {\n        mod.prototype.moduleCore = true;\n      });\n    }\n    tabulator.registerModule(mods);\n  }\n}\nclass Tabulator {\n  constructor(element, options) {\n    this.options = {};\n    this.columnManager = null; // hold Column Manager\n    this.rowManager = null; //hold Row Manager\n    this.footerManager = null; //holder Footer Manager\n    this.vdomHoz = null; //holder horizontal virtual dom\n    this.externalEvents = null; //handle external event messaging\n    this.eventBus = null; //handle internal event messaging\n    this.interactionMonitor = false; //track user interaction\n    this.browser = \"\"; //hold current browser type\n    this.browserSlow = false; //handle reduced functionality for slower browsers\n    this.browserMobile = false; //check if running on mobile, prevent resize cancelling edit on keyboard appearance\n    this.rtl = false; //check if the table is in RTL mode\n    this.originalElement = null; //hold original table element if it has been replaced\n\n    this.componentFunctionBinder = new ComponentFunctionBinder(this); //bind component functions\n    this.dataLoader = false; //bind component functions\n\n    this.modules = {}; //hold all modules bound to this table\n    this.modulesCore = {}; //hold core modules bound to this table (for initialization purposes)\n    this.modulesRegular = {}; //hold regular modules bound to this table (for initialization purposes)\n\n    this.optionsList = new OptionsList(this, \"table constructor\");\n    this.initialized = false;\n    if (this.initializeElement(element)) {\n      this.initialzeCoreSystems(options);\n\n      //delay table creation to allow event bindings immediately after the constructor\n      setTimeout(() => {\n        this._create();\n      });\n    }\n    TableRegistry.register(this); //register table for inter-device communication\n  }\n\n  initializeElement(element) {\n    if (typeof HTMLElement !== \"undefined\" && element instanceof HTMLElement) {\n      this.element = element;\n      return true;\n    } else if (typeof element === \"string\") {\n      this.element = document.querySelector(element);\n      if (this.element) {\n        return true;\n      } else {\n        console.error(\"Tabulator Creation Error - no element found matching selector: \", element);\n        return false;\n      }\n    } else {\n      console.error(\"Tabulator Creation Error - Invalid element provided:\", element);\n      return false;\n    }\n  }\n  initialzeCoreSystems(options) {\n    this.columnManager = new ColumnManager(this);\n    this.rowManager = new RowManager(this);\n    this.footerManager = new FooterManager(this);\n    this.dataLoader = new DataLoader(this);\n    this.bindModules();\n    this.options = this.optionsList.generate(Tabulator.defaultOptions, options);\n    this._clearObjectPointers();\n    this._mapDeprecatedFunctionality();\n    this.externalEvents = new ExternalEventBus(this, this.options, this.options.debugEventsExternal);\n    this.eventBus = new InternalEventBus(this.options.debugEventsInternal);\n    this.interactionMonitor = new InteractionManager(this);\n    this.dataLoader.initialize();\n    this.columnManager.initialize();\n    this.rowManager.initialize();\n    this.footerManager.initialize();\n  }\n\n  //convert deprecated functionality to new functions\n  _mapDeprecatedFunctionality() {\n    //all previously deprecated functionality removed in the 5.0 release\n  }\n  _clearSelection() {\n    this.element.classList.add(\"tabulator-block-select\");\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        // Chrome\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges) {\n        // Firefox\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document.selection) {\n      // IE?\n      document.selection.empty();\n    }\n    this.element.classList.remove(\"tabulator-block-select\");\n  }\n\n  //create table\n  _create() {\n    this.externalEvents.dispatch(\"tableBuilding\");\n    this.eventBus.dispatch(\"table-building\");\n    this._rtlCheck();\n    this._buildElement();\n    this._initializeTable();\n    this._loadInitialData();\n    this.initialized = true;\n    this.externalEvents.dispatch(\"tableBuilt\");\n  }\n  _rtlCheck() {\n    var style = window.getComputedStyle(this.element);\n    switch (this.options.textDirection) {\n      case \"auto\":\n        if (style.direction !== \"rtl\") {\n          break;\n        }\n      case \"rtl\":\n        this.element.classList.add(\"tabulator-rtl\");\n        this.rtl = true;\n        break;\n      case \"ltr\":\n        this.element.classList.add(\"tabulator-ltr\");\n      default:\n        this.rtl = false;\n    }\n  }\n\n  //clear pointers to objects in default config object\n  _clearObjectPointers() {\n    this.options.columns = this.options.columns.slice(0);\n    if (this.options.data && !this.options.reactiveData) {\n      this.options.data = this.options.data.slice(0);\n    }\n  }\n\n  //build tabulator element\n  _buildElement() {\n    var element = this.element,\n      options = this.options,\n      newElement;\n    if (element.tagName === \"TABLE\") {\n      this.originalElement = this.element;\n      newElement = document.createElement(\"div\");\n\n      //transfer attributes to new element\n      var attributes = element.attributes;\n\n      // loop through attributes and apply them on div\n      for (var i in attributes) {\n        if (typeof attributes[i] == \"object\") {\n          newElement.setAttribute(attributes[i].name, attributes[i].value);\n        }\n      }\n\n      // replace table with div element\n      element.parentNode.replaceChild(newElement, element);\n      this.element = element = newElement;\n    }\n    element.classList.add(\"tabulator\");\n    element.setAttribute(\"role\", \"grid\");\n\n    //empty element\n    while (element.firstChild) element.removeChild(element.firstChild);\n\n    //set table height\n    if (options.height) {\n      options.height = isNaN(options.height) ? options.height : options.height + \"px\";\n      element.style.height = options.height;\n    }\n\n    //set table min height\n    if (options.minHeight !== false) {\n      options.minHeight = isNaN(options.minHeight) ? options.minHeight : options.minHeight + \"px\";\n      element.style.minHeight = options.minHeight;\n    }\n\n    //set table maxHeight\n    if (options.maxHeight !== false) {\n      options.maxHeight = isNaN(options.maxHeight) ? options.maxHeight : options.maxHeight + \"px\";\n      element.style.maxHeight = options.maxHeight;\n    }\n  }\n\n  //initialize core systems and modules\n  _initializeTable() {\n    var element = this.element,\n      options = this.options;\n    this.interactionMonitor.initialize();\n    this.columnManager.initialize();\n    this.rowManager.initialize();\n    this._detectBrowser();\n\n    //initialize core modules\n    for (let key in this.modulesCore) {\n      let mod = this.modulesCore[key];\n      mod.initialize();\n    }\n\n    //configure placeholder element\n    if (typeof options.placeholder == \"string\") {\n      var el = document.createElement(\"div\");\n      el.classList.add(\"tabulator-placeholder\");\n      var span = document.createElement(\"span\");\n      span.innerHTML = options.placeholder;\n      el.appendChild(span);\n      options.placeholder = el;\n    }\n\n    //build table elements\n    element.appendChild(this.columnManager.getElement());\n    element.appendChild(this.rowManager.getElement());\n    if (options.footerElement) {\n      this.footerManager.activate();\n    }\n    if (options.autoColumns && options.data) {\n      this.columnManager.generateColumnsFromRowData(this.options.data);\n    }\n\n    //initialize regular modules\n    for (let key in this.modulesRegular) {\n      let mod = this.modulesRegular[key];\n      mod.initialize();\n    }\n    this.columnManager.setColumns(options.columns);\n    this.eventBus.dispatch(\"table-built\");\n  }\n  _loadInitialData() {\n    this.dataLoader.load(this.options.data);\n  }\n\n  //deconstructor\n  destroy() {\n    var element = this.element;\n    TableRegistry.deregister(this); //deregister table from inter-device communication\n\n    this.eventBus.dispatch(\"table-destroy\");\n\n    //clear row data\n    this.rowManager.rows.forEach(function (row) {\n      row.wipe();\n    });\n    this.rowManager.rows = [];\n    this.rowManager.activeRows = [];\n    this.rowManager.displayRows = [];\n\n    //clear DOM\n    while (element.firstChild) element.removeChild(element.firstChild);\n    element.classList.remove(\"tabulator\");\n  }\n  _detectBrowser() {\n    var ua = navigator.userAgent || navigator.vendor || window.opera;\n    if (ua.indexOf(\"Trident\") > -1) {\n      this.browser = \"ie\";\n      this.browserSlow = true;\n    } else if (ua.indexOf(\"Edge\") > -1) {\n      this.browser = \"edge\";\n      this.browserSlow = true;\n    } else if (ua.indexOf(\"Firefox\") > -1) {\n      this.browser = \"firefox\";\n      this.browserSlow = false;\n    } else {\n      this.browser = \"other\";\n      this.browserSlow = false;\n    }\n    this.browserMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(ua) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.substr(0, 4));\n  }\n\n  ////////////////// Data Handling //////////////////\n  //block table redrawing\n  blockRedraw() {\n    return this.rowManager.blockRedraw();\n  }\n\n  //restore table redrawing\n  restoreRedraw() {\n    return this.rowManager.restoreRedraw();\n  }\n\n  //local data from local file\n  setDataFromLocalFile(extensions) {\n    return new Promise((resolve, reject) => {\n      var input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = extensions || \".json,application/json\";\n      input.addEventListener(\"change\", e => {\n        var file = input.files[0],\n          reader = new FileReader(),\n          data;\n        reader.readAsText(file);\n        reader.onload = e => {\n          try {\n            data = JSON.parse(reader.result);\n          } catch (e) {\n            console.warn(\"File Load Error - File contents is invalid JSON\", e);\n            reject(e);\n            return;\n          }\n          this.setData(data).then(data => {\n            resolve(data);\n          }).catch(err => {\n            resolve(err);\n          });\n        };\n        reader.onerror = e => {\n          console.warn(\"File Load Error - Unable to read file\");\n          reject();\n        };\n      });\n      input.click();\n    });\n  }\n\n  //load data\n  setData(data, params, config) {\n    if (this.initialized) {\n      return this.dataLoader.load(data, params, config, false);\n    } else {\n      console.warn(\"setData failed - table not yet initialized. To set initial data please use the 'data' property in the table constructor.\");\n    }\n  }\n\n  //clear data\n  clearData() {\n    this.dataLoader.blockActiveLoad();\n    this.rowManager.clearData();\n  }\n\n  //get table data array\n  getData(active) {\n    return this.rowManager.getData(active);\n  }\n\n  //get table data array count\n  getDataCount(active) {\n    return this.rowManager.getDataCount(active);\n  }\n\n  //replace data, keeping table in position with same sort\n  replaceData(data, params, config) {\n    if (this.initialized) {\n      return this.dataLoader.load(data, params, config, true, true);\n    } else {\n      console.warn(\"replaceData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  //update table data\n  updateData(data) {\n    var responses = 0;\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n        if (data) {\n          data.forEach(item => {\n            var row = this.rowManager.findRow(item[this.options.index]);\n            if (row) {\n              responses++;\n              row.updateData(item).then(() => {\n                responses--;\n                if (!responses) {\n                  resolve();\n                }\n              });\n            }\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"updateData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n  addData(data, pos, index) {\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n        if (data) {\n          this.rowManager.addRows(data, pos, index).then(rows => {\n            var output = [];\n            rows.forEach(function (row) {\n              output.push(row.getComponent());\n            });\n            resolve(output);\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"addData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  //update table data\n  updateOrAddData(data) {\n    var rows = [],\n      responses = 0;\n    if (this.initialized) {\n      return new Promise((resolve, reject) => {\n        this.dataLoader.blockActiveLoad();\n        if (typeof data === \"string\") {\n          data = JSON.parse(data);\n        }\n        if (data) {\n          data.forEach(item => {\n            var row = this.rowManager.findRow(item[this.options.index]);\n            responses++;\n            if (row) {\n              row.updateData(item).then(() => {\n                responses--;\n                rows.push(row.getComponent());\n                if (!responses) {\n                  resolve(rows);\n                }\n              });\n            } else {\n              this.rowManager.addRows(item).then(newRows => {\n                responses--;\n                rows.push(newRows[0].getComponent());\n                if (!responses) {\n                  resolve(rows);\n                }\n              });\n            }\n          });\n        } else {\n          console.warn(\"Update Error - No data provided\");\n          reject(\"Update Error - No data provided\");\n        }\n      });\n    } else {\n      console.warn(\"updateOrAddData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  //get row object\n  getRow(index) {\n    var row = this.rowManager.findRow(index);\n    if (row) {\n      return row.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching row found:\", index);\n      return false;\n    }\n  }\n\n  //get row object\n  getRowFromPosition(position, active) {\n    var row = this.rowManager.getRowFromPosition(position, active);\n    if (row) {\n      return row.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching row found:\", position);\n      return false;\n    }\n  }\n\n  //delete row from table\n  deleteRow(index) {\n    var foundRows = [];\n    if (!Array.isArray(index)) {\n      index = [index];\n    }\n\n    //find matching rows\n    for (let item of index) {\n      let row = this.rowManager.findRow(item, true);\n      if (row) {\n        foundRows.push(row);\n      } else {\n        console.error(\"Delete Error - No matching row found:\", item);\n        return Promise.reject(\"Delete Error - No matching row found\");\n      }\n    }\n\n    //sort rows into correct order to ensure smooth delete from table\n    foundRows.sort((a, b) => {\n      return this.rowManager.rows.indexOf(a) > this.rowManager.rows.indexOf(b) ? 1 : -1;\n    });\n\n    //delete rows\n    foundRows.forEach(row => {\n      row.delete();\n    });\n    this.rowManager.reRenderInPosition();\n    return Promise.resolve();\n  }\n\n  //add row to table\n  addRow(data, pos, index) {\n    if (this.initialized) {\n      if (typeof data === \"string\") {\n        data = JSON.parse(data);\n      }\n      return this.rowManager.addRows(data, pos, index).then(rows => {\n        return rows[0].getComponent();\n      });\n    } else {\n      console.warn(\"addRow failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n\n  //update a row if it exitsts otherwise create it\n  updateOrAddRow(index, data) {\n    var row = this.rowManager.findRow(index);\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n    if (row) {\n      return row.updateData(data).then(() => {\n        return row.getComponent();\n      });\n    } else {\n      return this.rowManager.addRows(data).then(rows => {\n        return rows[0].getComponent();\n      });\n    }\n  }\n\n  //update row data\n  updateRow(index, data) {\n    var row = this.rowManager.findRow(index);\n    if (typeof data === \"string\") {\n      data = JSON.parse(data);\n    }\n    if (row) {\n      return row.updateData(data).then(() => {\n        return Promise.resolve(row.getComponent());\n      });\n    } else {\n      console.warn(\"Update Error - No matching row found:\", index);\n      return Promise.reject(\"Update Error - No matching row found\");\n    }\n  }\n\n  //scroll to row in DOM\n  scrollToRow(index, position, ifVisible) {\n    var row = this.rowManager.findRow(index);\n    if (row) {\n      return this.rowManager.scrollToRow(row, position, ifVisible);\n    } else {\n      console.warn(\"Scroll Error - No matching row found:\", index);\n      return Promise.reject(\"Scroll Error - No matching row found\");\n    }\n  }\n  moveRow(from, to, after) {\n    var fromRow = this.rowManager.findRow(from);\n    if (fromRow) {\n      fromRow.moveToRow(to, after);\n    } else {\n      console.warn(\"Move Error - No matching row found:\", from);\n    }\n  }\n  getRows(active) {\n    return this.rowManager.getComponents(active);\n  }\n\n  //get position of row in table\n  getRowPosition(index, active) {\n    var row = this.rowManager.findRow(index);\n    if (row) {\n      return this.rowManager.getRowPosition(row, active);\n    } else {\n      console.warn(\"Position Error - No matching row found:\", index);\n      return false;\n    }\n  }\n\n  /////////////// Column Functions  ///////////////\n  setColumns(definition) {\n    if (this.initialized) {\n      this.columnManager.setColumns(definition);\n    } else {\n      console.warn(\"setColumns failed - table not yet initialized. To set initial data please use the 'columns' property in the table constructor.\");\n    }\n  }\n  getColumns(structured) {\n    return this.columnManager.getComponents(structured);\n  }\n  getColumn(field) {\n    var col = this.columnManager.findColumn(field);\n    if (col) {\n      return col.getComponent();\n    } else {\n      console.warn(\"Find Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  getColumnDefinitions() {\n    return this.columnManager.getDefinitionTree();\n  }\n  showColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      column.show();\n    } else {\n      console.warn(\"Column Show Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  hideColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      column.hide();\n    } else {\n      console.warn(\"Column Hide Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  toggleColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      if (column.visible) {\n        column.hide();\n      } else {\n        column.show();\n      }\n    } else {\n      console.warn(\"Column Visibility Toggle Error - No matching column found:\", field);\n      return false;\n    }\n  }\n  addColumn(definition, before, field) {\n    var column = this.columnManager.findColumn(field);\n    return this.columnManager.addColumn(definition, before, column).then(column => {\n      return column.getComponent();\n    });\n  }\n  deleteColumn(field) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      return column.delete();\n    } else {\n      console.warn(\"Column Delete Error - No matching column found:\", field);\n      return Promise.reject();\n    }\n  }\n  updateColumnDefinition(field, definition) {\n    var column = this.columnManager.findColumn(field);\n    if (column) {\n      return column.updateDefinition(definition);\n    } else {\n      console.warn(\"Column Update Error - No matching column found:\", field);\n      return Promise.reject();\n    }\n  }\n  moveColumn(from, to, after) {\n    var fromColumn = this.columnManager.findColumn(from);\n    var toColumn = this.columnManager.findColumn(to);\n    if (fromColumn) {\n      if (toColumn) {\n        this.columnManager.moveColumn(fromColumn, toColumn, after);\n      } else {\n        console.warn(\"Move Error - No matching column found:\", toColumn);\n      }\n    } else {\n      console.warn(\"Move Error - No matching column found:\", from);\n    }\n  }\n\n  //scroll to column in DOM\n  scrollToColumn(field, position, ifVisible) {\n    return new Promise((resolve, reject) => {\n      var column = this.columnManager.findColumn(field);\n      if (column) {\n        return this.columnManager.scrollToColumn(column, position, ifVisible);\n      } else {\n        console.warn(\"Scroll Error - No matching column found:\", field);\n        return Promise.reject(\"Scroll Error - No matching column found\");\n      }\n    });\n  }\n\n  //////////// General Public Functions ////////////\n  //redraw list without updating data\n  redraw(force) {\n    if (this.initialized) {\n      this.columnManager.redraw(force);\n      this.rowManager.redraw(force);\n    } else {\n      console.warn(\"redraw failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\n    }\n  }\n  setHeight(height) {\n    this.options.height = isNaN(height) ? height : height + \"px\";\n    this.element.style.height = this.options.height;\n    this.rowManager.initializeRenderer();\n    this.rowManager.redraw();\n  }\n\n  //////////////////// Event Bus ///////////////////\n\n  on(key, callback) {\n    this.externalEvents.subscribe(key, callback);\n  }\n  off(key, callback) {\n    this.externalEvents.unsubscribe(key, callback);\n  }\n  dispatchEvent() {\n    var args = Array.from(arguments),\n      key = args.shift();\n    this.externalEvents.dispatch(...arguments);\n  }\n\n  ////////////// Extension Management //////////////\n  modExists(plugin, required) {\n    if (this.modules[plugin]) {\n      return true;\n    } else {\n      if (required) {\n        console.error(\"Tabulator Module Not Installed: \" + plugin);\n      }\n      return false;\n    }\n  }\n  module(key) {\n    var mod = this.modules[key];\n    if (!mod) {\n      console.error(\"Tabulator module not installed: \" + key);\n    }\n    return mod;\n  }\n}\n\n//default setup options\nTabulator.defaultOptions = defaultOptions;\n\n//bind modules and static functionality\nnew ModuleBinder(Tabulator);\n\n//tabulator with all modules installed\n\nclass TabulatorFull extends Tabulator {}\n//bind modules and static functionality\nnew ModuleBinder(TabulatorFull, modules);\nclass PseudoRow {\n  constructor(type) {\n    this.type = type;\n    this.element = this._createElement();\n  }\n  _createElement() {\n    var el = document.createElement(\"div\");\n    el.classList.add(\"tabulator-row\");\n    return el;\n  }\n  getElement() {\n    return this.element;\n  }\n  getComponent() {\n    return false;\n  }\n  getData() {\n    return {};\n  }\n  getHeight() {\n    return this.element.outerHeight;\n  }\n  initialize() {}\n  reinitialize() {}\n  normalizeHeight() {}\n  generateCells() {}\n  reinitializeHeight() {}\n  calcHeight() {}\n  setCellHeight() {}\n  clearCellHeight() {}\n}\nexport { Accessor as AccessorModule, Ajax as AjaxModule, CalcComponent, CellComponent, Clipboard as ClipboardModule, ColumnCalcs as ColumnCalcsModule, ColumnComponent, DataTree as DataTreeModule, Download as DownloadModule, Edit as EditModule, Export as ExportModule, Filter as FilterModule, Format as FormatModule, FrozenColumns as FrozenColumnsModule, FrozenRows as FrozenRowsModule, GroupComponent, GroupRows as GroupRowsModule, History as HistoryModule, HtmlTableImport as HtmlTableImportModule, Interaction as InteractionModule, Keybindings as KeybindingsModule, Menu as MenuModule, Module, MoveColumns as MoveColumnsModule, MoveRows as MoveRowsModule, Mutator as MutatorModule, Page as PageModule, Persistence as PersistenceModule, Print as PrintModule, PseudoRow, ReactiveData as ReactiveDataModule, Renderer, ResizeColumns as ResizeColumnsModule, ResizeRows as ResizeRowsModule, ResizeTable as ResizeTableModule, ResponsiveLayout as ResponsiveLayoutModule, RowComponent$1 as RowComponent, SelectRow as SelectRowModule, Sort as SortModule, Tabulator, TabulatorFull, Validate as ValidateModule };","map":{"version":3,"names":["CoreFeature","constructor","table","reloadData","data","silent","dataLoader","load","undefined","langText","modules","localize","getText","arguments","langBind","bind","langLocale","getLocale","commsConnections","comms","getConnections","commsSend","send","layoutMode","layout","getMode","layoutRefresh","subscribe","eventBus","unsubscribe","subscribed","key","subscriptionChange","dispatch","chain","confirm","dispatchExternal","externalEvents","subscribedExternal","subscriptionChangeExternal","options","setOption","value","module","Module","name","_handler","initialize","registerTableOption","optionsList","register","registerColumnOption","columnManager","registerTableFunction","func","console","warn","registerComponentFunction","component","handler","componentFunctionBinder","registerDataHandler","priority","rowManager","registerDataPipelineHandler","registerDisplayHandler","registerDisplayPipelineHandler","refreshData","renderInPosition","refreshActiveData","Helpers","elVisible","el","offsetWidth","offsetHeight","elOffset","box","getBoundingClientRect","top","window","pageYOffset","document","documentElement","clientTop","left","pageXOffset","clientLeft","deepClone","obj","clone","list","length","objectProto","__proto__","arrayProto","Object","assign","Array","isArray","i","subject","match","copy","findIndex","item","unshift","defautlAccessors","Accessor","allowedTypes","initializeColumn","transformRow","column","config","forEach","type","charAt","toUpperCase","slice","accessor","definition","lookupAccessor","params","accessors","row","rowComponent","getComponent","traverse","colCompnent","getFieldValue","setFieldValue","moduleName","defaultConfig","method","generateParamsList","prefix","output","concat","push","serializeParams","encoded","encodeURIComponent","join","defaultURLGenerator","url","keys","toLowerCase","includes","defaultLoaderPromise","contentType","Promise","resolve","reject","urlGenerator","call","ajaxContentType","contentTypeFormatters","headers","body","Accept","mode","location","origin","credentials","fetch","then","response","ok","json","catch","error","status","statusText","generateParamsList$1","defaultContentTypeFormatters","JSON","stringify","form","FormData","append","Ajax","loaderPromise","ajaxRequestFunc","ajaxURLGenerator","ajaxParams","setParams","ajaxConfig","setConfig","ajaxURL","setUrl","getUrl","requestDataCheck","requestData","previousData","sendRequest","update","getParams","_loadDefaultConfig","force","ajaxRequesting","ajaxResponse","defaultPasteActions","replace","rows","setData","updateOrAddData","insert","addData","defaultPasteParsers","clipboard","headerFindSuccess","columns","columnMap","split","find","title","trim","field","columnsByIndex","shift","Clipboard","pasteParser","pasteAction","customSelection","rowRange","blocked","clipboardCopyRowRange","element","addEventListener","e","plain","html","preventDefault","clipboardCopyFormatter","export","generateExportList","clipboardCopyConfig","clipboardCopyStyled","genereateHTMLTable","generatePlainContent","clipboardData","originalEvent","reset","paste","setPasteParser","clipboardPasteParser","setPasteAction","clipboardPasteAction","rowData","col","getKey","range","internal","sel","textRange","getSelection","createRange","selectNodeContents","toString","removeAllRanges","addRange","selection","createTextRange","moveToElementText","select","execCommand","action","pasteActions","parser","pasteParsers","checkPaseOrigin","getPasteData","modExists","mutateData","mutator","valid","target","tagName","edit","currentCell","getData","CalcComponent","_row","Proxy","get","receiver","handle","transform","getElement","getTable","getCells","cells","cell","getCell","_getSelf","CellComponent","_cell","getValue","getOldValue","getInitialValue","initialValue","getRow","getField","getColumn","setValue","mutate","restoreOldValue","setValueActual","restoreInitialValue","checkHeight","Cell","oldValue","height","width","minWidth","loaded","build","generateElement","setWidth","_configureCell","createElement","className","setAttribute","vertAligns","bottom","middle","hozAligns","right","center","style","textAlign","hozAlign","vertAlign","display","alignItems","justifyContent","cssClass","classNames","classList","add","tooltipGenerationMode","_generateTooltip","visible","hide","_generateContents","val","innerHTML","Node","firstChild","removeChild","appendChild","cellRendered","tooltip","containerOnly","layoutElement","changed","setValueProcessData","widthStyled","clearWidth","getWidth","setMinWidth","minWidthStyled","setMaxWidth","maxWidth","maxWidthStyled","reinitializeHeight","clearHeight","setHeight","heightStyled","getHeight","show","delete","redrawBlock","parentNode","deleteCell","calcs","getIndex","getCellIndex","ColumnComponent","_column","getDefinition","isVisible","isGroup","toggle","getSubColumns","getParentColumn","parent","Column","scrollTo","scrollToColumn","move","to","after","toColumn","findColumn","moveColumn","getNextColumn","nextCol","nextColumn","getPrevColumn","prevCol","prevColumn","updateDefinition","updates","result","reinitializeWidth","renderer","rerenderColumns","defaultColumnOptions","Column$1","def","contentElement","titleHolderElement","titleElement","groupElement","createGroupElement","fieldStructure","titleFormatterRendered","mapDefinitions","setField","widthFixed","newCol","attachColumn","checkColumnVisibility","registerColumnField","_initialize","bindModuleColumns","defaults","columnDefaults","generate","defaultOptionList","checkDefinition","indexOf","nestedFieldSeparator","_getNestedData","_getFlatData","_setNestedData","_setFlatData","registerColumnPosition","reRegisterPosition","_mapDepricatedFunctionality","setTooltip","headerTooltip","headerVertical","_bindEvents","_buildColumnHeaderContent","_buildGroupHeader","_buildColumnHeader","dblTap","tapHold","tap","headerClick","headerDblClick","headerContext","headerTap","passive","headerDblTap","clearTimeout","setTimeout","headerTapHold","classeNames","parseInt","headerHozAlign","_buildColumnHeaderTitle","editableTitle","stopPropagation","focus","text","_formatColumnHeaderTitle","contents","dataObj","structure","verticalAlign","alignment","parentHeight","getGroupElement","clientHeight","getHeadersElement","minHeight","paddingTop","clearVerticalAlign","formatter","rowNumColumn","getFirstColumn","getLastColumn","getColumns","getTopColumn","updateBranches","colDefs","responsiveToggle","verticalAlignHeaders","matchChildWidths","childWidth","child","index","splice","setWidthActual","isNaN","Math","floor","clientWidth","max","min","checkCellHeights","heightInitialized","offsetParent","clearCellHeight","calcHeight","setCellHeight","cellCount","deregisterColumn","columnRendered","generateCell","findColumnIndex","_nextVisibleColumn","getColumnByIndex","_prevVisibleColumn","fitToData","addColumn","RowComponent$1","getPosition","active","getRowPosition","scrollToRow","moveToRow","updateData","normalizeHeight","reformat","reinitialize","getNextRow","nextRow","getPrevRow","prevRow","Row","manualHeight","outerHeight","initialized","created","create","detachElement","generateCells","deleteCells","renderRowCells","rowFormatter","rerenderRowCells","deinitializeHeight","children","maxHeight","resizableRows","updatedData","tempData","newRowData","parse","attrname","getColumnsByFieldRoot","findCell","nextDisplayRow","prevDisplayRow","before","toRow","findRow","moveRowActual","deleteActual","blockRedraw","getRowIndex","detatchModules","deleteRow","wipe","getGroup","group","defaultCalculations","avg","values","calcParams","precision","reduce","sum","Number","toFixed","parseFloat","String","count","ColumnCalcs","topCalcs","botCalcs","genColumn","topElement","botElement","topRow","botRow","topInitialized","botInitialized","cellValueChanged","initializeColumnCheck","rowsUpdated","scrollHorizontal","recalcActiveRows","tableRedraw","visibleRows","getResults","userRecalc","recalc","activeRows","redraw","viewable","groupBy","recalcRowGroup","topCalc","bottomCalc","columnCalcs","topCalcParams","botCalcParams","bottomCalcParams","calculations","initializeTopRow","botCalc","initializeBottomRow","removeCalcs","footerManager","remove","adjustTableSize","insertBefore","headersElement","nextSibling","prepend","marginLeft","rowsToData","generateRow","frozenColumns","recalcGroup","groupRows","getRowGroup","recalcAll","groups","getChildGroups","generateRowData","generateTopRow","generateBottomRow","dataTree","dataTreeChildColumnCalcs","open","getFilteredTreeChildren","pos","disable","enable","format","getFormatter","paramKey","hasTopCalcs","hasBottomCalcs","results","getGroups","getGroupResults","groupObj","subGroups","getSubGroups","subGroupResults","subgroup","DataTree","indent","collapseEl","expandEl","branchEl","elementField","startOpen","displayIndex","collapseRow","expandRow","toggleRow","getTreeParent","getRowChildren","addTreeChildRow","dummyEl","dataTreeChildField","dataTreeChildIndent","dataTreeBranchElement","dataTreeCollapseElement","tabIndex","dataTreeExpandElement","dataTreeStartExpanded","initializeRow","layoutRow","rowDelete","rowDataChanged","columnMoving","initializeElementField","getRows","firstCol","getFirstVisibleColumn","dataTreeElementColumn","getTreeChildren","redrawNeeded","childArray","controlEl","reinitializeRowChildren","generateControlElement","cloneNode","rtl","marginRight","paddingRight","getComputedStyle","getPropertyValue","paddingLeft","oldControl","replaceChild","setDisplayIndex","getDisplayIndex","getChildren","allChildren","generateChildren","dataTreeFilter","filter","dataTreeSort","sort","subChildren","sub","childData","childRow","childIndex","findChildIndex","RowComponent","HTMLElement","recurse","getChildField","log","csv","setFileContents","delimiter","fileContents","depth","bom","pdf","header","autoTableParams","rowGroupStyles","fontStyle","fontSize","cellPadding","fillColor","rowCalcStyles","jsPDFParams","jsPDF","orientation","unit","parseRow","styles","content","colSpan","rowSpan","doc","jspdf","autoTable","didDrawPage","head","documentProcessing","xlsx","self","sheetName","workbook","XLSX","utils","book_new","tableFeatures","SheetNames","Sheets","generateSheet","merges","worksheet","s","c","r","a","b","j","Date","sheet_add_aoa","encode_range","sheetOnly","sheets","sheet","intercept","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","write","bookType","bookSST","defaultDownloaders","Download","blob","download","downloadToTab","filename","interceptCallback","downloadFunc","buildLink","mime","triggerDownload","downloaders","downloadConfig","downloadRowRange","groupHeader","groupHeaderDownload","_group","getRowCount","newTab","Blob","downloadReady","URL","createObjectURL","navigator","msSaveOrOpenBlob","click","commsReceived","maskInput","mask","maskLetter","maskLetterChar","maskNumber","maskNumberChar","maskWildcard","maskWildcardChar","fillSymbols","symbol","char","keyCode","maskAutoFill","placeholder","input","onRendered","success","cancel","editorParams","cellValue","search","padding","boxSizing","elementAttributes","getAttribute","preventScroll","onChange","textarea","vertNav","verticalNavigation","scrollHeight","whiteSpace","resize","heightNow","selectionStart","stopImmediatePropagation","number","step","blurFunc","removeEventListener","cellEl","initialDisplayValue","defaultValue","listEl","multiselect","dataItems","currentItem","displayItems","currentItems","blurable","blockListShow","searchWord","searchWordTimeout","getUniqueColumnValues","getColumnByField","parseItems","inputValues","curentValues","dataList","displayList","processComplexListItem","label","itemParams","setItem","sortValuesList","reverse","fillList","listItemFormatter","toggleItem","chooseItem","setCurrentItem","scrollIntoView","behavior","block","inline","fillInput","unsetItem","hideList","chooseItems","unsetItems","len","cancelItem","showList","offset","removeScrollListener","scrollTovalue","character","fromCharCode","event","startsWith","cursor","readOnly","autocomplete","uniqueColumnValues","genUniqueColumnValues","filterList","term","intialLoad","matches","items","searchFunc","addNotice","searchingPlaceholder","fillListIfNotEmpty","err","showListOnEmpty","notice","searchEl","clearList","itemList","emptyPlaceholder","current","freetext","allowEmpty","showInputValue","star","maxStars","getElementsByTagName","size","stars","starsHolder","createElementNS","starChange","browser","buildStar","starHolder","nextStar","blur","changeValue","overflow","textOverflow","progress","percent","bar","mouseDrag","mouseDragWidth","updateValue","calcVal","round","position","backgroundColor","screenX","tickCross","tristate","indetermValue","indeterminateValue","indetermState","marginTop","indeterminate","checked","defaultEditors","Edit","mouseClick","recursionBlock","invalidEdit","editedCells","editors","getEditedCells","clearCellEdited","navigatePrev","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","cellisEdited","clearEdited","editCell","cellCancelEdit","bindEditor","columnDeleteCheck","rowDeleteCheck","cancelEdit","keybindingNavigateNext","newRow","addRow","nav","next","edited","nextCell","findNextEditableCell","findPrevEditableCell","allowEdit","check","prevCell","editor","editable","getCurrentCell","clearEditor","validate","cellValidate","variableHeight","cellEditCancelled","contains","button","focusCellNoEvent","forceEdit","focusScrollAdjust","getRenderMode","topEdge","scrollTop","bottomEdge","rowEl","offsetTop","leftEdge","scrollLeft","rightEdge","offsetLeft","leftMargin","rightMargin","renderHorizontal","vDomPadLeft","rendered","cellEditor","validationMode","callback","cellClick","cellEditing","editIndex","invalid","ExportRow","ExportColumn","Export","cloneTableStyle","colVisProp","getHtml","columnHeaders","headersToExportRows","generateColumnGroupHeaders","bodyToExportRows","rowLookup","genereateTable","genereateTableElement","getVisibleRows","selectRow","selectedRows","pagination","getDisplayRows","displayRows","columnGroups","colData","processColumnGroup","maxDepth","groupData","subGroup","subGroupData","columnVisCheck","headerDepth","exportRows","parseColumnGroup","level","rowGroups","exportCols","headerEl","bodyEl","lookupTableStyles","setup","treeElementField","mapElementStyles","genereateHeaderElement","genereateGroupElement","genereateCalcElement","genereateRowElement","evenRow","oddRow","querySelector","calcRow","firstRow","firstGroup","getElementsByClassName","styleCells","firstCell","lastCell","generator","cellWrapper","formatCells","formatExportValue","align","renderedCallback","holder","htmlOutputConfig","from","props","lookup","fromStyle","prop","defaultFilters","=","filterVal","rowVal","filterParams","<","<=",">",">=","!=","regex","RegExp","test","like","keywords","separator","keyword","matchAll","starts","ends","endsWith","in","Filter","headerFilters","headerFilterColumns","prevHeaderFilterChangeCheck","tableInitialized","searchRows","searchData","userSetFilter","userRefreshFilter","userAddFilter","getFilters","userSetHeaderFilterFocus","userGetHeaderFilterValue","userSetHeaderFilterValue","getHeaderFilters","userRemoveFilter","userClearFilter","userClearHeaderFilter","setHeaderFilterFocus","reloadHeaderFilter","getHeaderFilterValue","setHeaderFilterValue","initializeColumnHeaderFilter","hideHeaderFilterElements","showHeaderFilterElements","tableBuilt","filterMode","remoteFilterParams","initialFilter","setFilter","initialHeaderFilter","refreshFilter","addFilter","removeFilter","all","clearFilter","clearHeaderFilter","headerFilter","headerFilterPlaceholder","setHeaderFilterColumnPlaceholder","filterType","tagType","attrType","filterChangeCheck","filterFunc","prevSuccess","emptyFunc","headerFilterFunc","filters","headerFilterFuncParams","fieldVal","colVal","trackChanges","generateHeaderFilterElement","filterElement","editorElement","typingTimer","searchTrigger","headerElement","headerFilterEmptyCheck","headerFilterParams","headerFilterLiveFilterDelay","hasAttribute","headerFilterLiveFilter","hasChanged","findFilter","findSubFilters","ajax","filtersToArray","searchType","filterRecurse","rowList","activeRowComponents","filterRow","subFilter","plaintext","formatterParams","emptyToSpace","sanitizeHTML","html$1","money","floatVal","sign","integer","decimal","rgx","decimalSym","thousandSym","thousand","negativeSign","symbolAfter","abs","link","urlPrefix","labelField","urlField","image","src","urlSuffix","tickCross$1","empty","truthy","allowTruthy","tick","tickElement","cross","crossElement","datetime","DT","DateTime","luxon","inputFormat","outputFormat","invalidPlaceholder","newDatetime","fromFormat","isValid","timezone","shiftTimezone","toFormat","datetimediff","suffix","humanize","date","now","diff","star$1","starActive","starInactive","traffic","colors","color","percentValue","progress$1","legendAlign","legend","legendColor","barEl","barContainer","legendEl","holderEl","buttonTick","buttonCross","rownum","responsiveCollapse","responsiveLayout","toggleList","isOpen","rowSelection","checkbox","toggleSelect","isSelected","registerRowSelectCheckbox","deselectRow","registerHeaderSelectCheckbox","defaultFormatters","textarea$1","Format","formatValue","formatHeader","lookupFormatter","formatterPrint","print","formatterClipboard","formatterHtmlOutput","htmlOutput","formatters","mockCell","titleFormatter","titleFormatterParams","entityMap","FrozenColumns","leftColumns","rightColumns","rightPadding","initializationMode","scrollEndTimer","layoutCell","margin","edge","frozenCheck","frozen","calcMargins","layoutColumnPosition","layoutCalcRows","tableElement","_calcSpace","layoutGroupCalcs","groupList","allCells","leftParents","parentEl","getColGroupParentElement","FrozenRows","freezeRow","unfreezeRow","isRowFrozen","detachRow","isFrozen","styleRows","styleRow","GroupComponent","getParentGroup","toggleVisibility","groupManager","Group","oldGroup","hasSubGroups","groupIDLookups","_addRowToGroup","_addRow","old","elementContents","arrowElement","createElements","addBindings","createValueGroups","arrow","movableRows","moveRow","initializeGroupHeader","allowedValues","_createGroup","toggleElement","groupContextMenu","groupClickMenu","menu","initializeGroup","groupTap","groupDblTap","groupTapHold","groupToggleElement","groupID","groupKey","headerGenerator","insertRow","conformRowData","toIndex","generateGroupHeaderContents","updateGroupRows","scrollHeader","removeRow","groupValues","removeGroup","getHeadersAndRows","noCalc","_visSet","groupClosedShowCalcs","setDisplayRows","checkClassicModeGroupHeaderWidth","prev","compoment","getPath","path","childNodes","GroupRows","displayHandler","setGroupBy","setGroupValues","setGroupStartOpen","setGroupHeader","userGetGroups","userGetGroupedData","rowGetGroup","configureGroupSetup","groupUpdateOnCellEdit","cellUpdated","reassignRowToGroup","rowDeleting","scrollHeaders","rowMoving","rowAddingIndex","rowSample","virtualRenderFill","groupStartOpen","langValue","lang","cols","getRealColumns","lookupFunc","prevValue","assignRowToGroup","moveRowInArray","getGroupedData","toGroup","fromGroup","generateGroups","groupComponents","pullGroupListData","groupListData","rowCount","headerContent","countGroups","oldGroups","createGroup","assignRowToExistingGroup","newGroupNeeded","oldRowGroup","oldGroupPath","newGroupPath","getExpectedPath","samePath","every","groupPath","groupId","defaultUndoers","cellEdit","rowAdd","addRowActual","_rebindRow","posFrom","defaultRedoers","newValue","posTo","History","history","clearComponentHistory","rowDeleted","clear","rowAdded","rowMoved","undo","redo","getHistoryUndoSize","getHistoryRedoSize","undoers","redoers","oldRow","HtmlTableImport","fieldIndex","hasIndex","tableElementCheck","originalElement","parseTable","_extractOptions","_extractHeaders","_generateBlankHeaders","defaultOptions","attributes","optionsArr","attrib","_attribValue","_findCol","exists","textContent","registeredDefaults","Interaction","eventMap","rowClick","rowDblClick","rowContext","rowMouseEnter","rowMouseLeave","rowMouseOver","rowMouseOut","rowMouseMove","rowTap","rowDblTap","rowTapHold","cellDblClick","cellContext","cellMouseEnter","cellMouseLeave","cellMouseOver","cellMouseOut","cellMouseMove","cellTap","cellDblTap","cellTapHold","headerMouseEnter","headerMouseLeave","headerMouseOver","headerMouseOut","headerMouseMove","groupClick","groupDblClick","groupContext","groupMouseEnter","groupMouseLeave","groupMouseOver","groupMouseOut","groupMouseMove","subscribers","touchSubscribers","columnSubscribers","touchWatchers","tapDbl","initializeExternalEvents","cellContentsSelectionFixer","selectNode","subscriptionChanged","added","subscribeTouchEvents","unsubscribeTouchEvents","handleTouch","notouch","dispatchEvent","watchers","componentObj","defaultBindings","navPrev","navNext","navUp","navDown","scrollPageUp","scrollPageDown","scrollToEnd","copyToClipboard","defaultActions","keyBlock","newPos","scrollMax","displayRowsCount","scrollToStart","navLeft","navRight","Keybindings","watchKeys","pressedKeys","keyupBinding","keydownBinding","bindings","keybindings","mergedBindings","mapBindings","bindEvents","clearBindings","actions","binding","mapBinding","symbolsList","ctrl","meta","symbols","code","checkBinding","ctrlKey","shiftKey","metaKey","Menu","menuElements","blurEvent","hideMenu","escEvent","escMenu","nestedMenuBlock","positionReversedX","contextMenu","clickMenu","initializeCell","headerContextMenu","headerClickMenu","headerMenu","initializeColumnHeader","headerMenuEl","LoadMenuEvent","loadMenu","rowContextMenu","rowClickMenu","touch","MouseEvent","menuEl","itemEl","disabled","hideOldSubMenus","positionMenu","pop","docHeight","innerHeight","x","y","parentOffset","touches","pageX","pageY","MoveColumns","placeholderElement","createPlaceholderElement","hoverElement","checkTimeout","checkPeriod","moving","toCol","toColAfter","startX","autoScrollMargin","autoScrollStep","autoScrollTimeout","touchMove","moveHover","endMove","movableColumns","colEl","mousemove","which","startMove","bindTouchEvents","startXMove","nextColWidth","prevColWidth","nextColWidthLast","prevColWidthLast","moveToCol","_bindMouseMove","_unbindMouseMove","movingCells","moveColumnActual","columnHolder","xPos","scrollPos","MoveRows","toRowAfter","hasHandle","startY","tableRowDropEvent","connection","connectionSelectorsTables","connectionSelectorsElements","connectionElements","connections","connectedTable","connectedRow","movableRowsConnectedTables","movableRowsConnectedElements","mouseup","tableRowDrop","previousSibling","rowHandle","startYMove","nextRowHeight","prevRowHeight","nextRowHeightLast","prevRowHeightLast","setStartPosition","connectToTables","pointerEvents","getTableElement","disconnectFromTables","moveHoverConnections","moveHoverTable","rowHolder","yPos","elementRowDrop","connectionTables","query","prototype","querySelectorAll","dropEvent","tabulatorElementDropEvent","connect","disconnect","dropComplete","sender","movableRowsSender","senders","movableRowsReceiver","receivers","fromRow","fromTable","defaultMutators","Mutator","enabled","transformCell","lookupMutator","mutators","mutatorEdit","Page","progressiveLoad","page","initialLoad","dataChanging","pageSizes","setMaxPage","setPage","userSetPageToRow","userSetPageSize","getPageSize","previousPage","nextPage","getPage","getPageMax","setPageToRow","rowAddingPosition","initialLoadComplete","calculatePageSizes","paginationMode","remotePageParams","_parseRemoteData","restOnRenderBefore","initializePaginator","initializeProgressive","scrollVertical","dispRows","testElRow","testElCell","paginationSize","visibility","generatePageSizeSelectList","setPageSize","dir","loading","progressiveLoadScrollMargin","pagesElement","firstBut","prevBut","nextBut","lastBut","paginationSizeSelector","pageSizeSelect","hidden","pageSelectLabel","paginationElement","paginationInitialPage","paginationButtonCount","setMaxRows","ceil","trigger","_setPageButtons","leftSize","rightSize","_generatePageButton","footerRedraw","start","end","finally","last_page","addRows","progressiveLoadDelay","footer","scrollWidth","defaultReaders","local","id","localStorage","getItem","cookie","cookiePos","substr","defaultWriters","expireDate","setDate","getDate","toUTCString","Persistence","defWatcherBlock","readFunc","writeFunc","localStorageTest","testKey","removeItem","persistence","persistenceMode","persistenceID","retreivedData","persistenceReaderFunc","readers","persistenceWriterFunc","writers","retreiveData","save","eventSave","getColumnLayout","setColumnLayout","sorters","initialSort","parseColumns","setColumns","mergeDefinition","getOwnPropertyDescriptor","defineProperty","set","oldCols","newCols","_findColumn","validateSorters","getSort","getGroupConfig","getPageConfig","definitions","excludedKeys","defStore","colDef","Print","manualBlock","printAsHtml","replaceTable","cleanup","printFullscreen","printConfig","printStyled","printRowRange","scrollX","scrollY","footerEl","tableEl","footerContent","printHeader","printFooter","printFormatter","ReactiveData","origFuncs","currentVersion","reactiveData","unblock","watchRow","watchData","unwatchData","version","enumerable","configurable","args","arg","apply","getRowFromDataObject","newRows","startRow","oldRows","reRenderInPosition","writable","watchKey","watchTreeChildren","childField","rebuildTree","unwatchRow","ResizeColumns","startColumn","startWidth","prevHandle","layoutCellHandles","layoutColumnHeader","resizable","handleDown","nearestColumn","_checkResizability","_mouseDown","prevHandleDown","colIndex","mouseMove","browserSlow","mouseUp","ResizeRows","startHeight","screenY","ResizeTable","observer","containerObserver","tableHeight","tableWidth","containerHeight","containerWidth","autoResize","tableStyle","ResizeObserver","entry","browserMobile","nodeHeight","contentRect","nodeWidth","observe","fixedHeight","tableResized","unobserve","ResponsiveLayout","hiddenColumns","collapseFormatter","collapseStartOpen","collapseHandleColumn","updateColumnVisibility","initializeResponsivity","responsiveLayoutCollapseFormatter","formatCollapsedData","responsiveLayoutCollapseStartOpen","responsive","order","generateCollapsedContent","generateCollapsedRowContent","hideColumn","colCount","showColumn","working","getFlexBaseWidth","headerVisible","activeRowsCount","renderEmptyScroll","generateCollapsedRowData","mockCellComponent","responsiveLayoutCollapseUseFormatters","titleData","valueData","node_content","titleHighlight","innerText","SelectRow","selecting","lastClickedRow","selectPrev","headerCheckboxElement","selectRows","deselectRows","getSelectedRows","getSelectedData","isRowSelected","selectable","clearSelectionData","rowRetrieve","selectablePersistence","_deselectRow","_rowSelectionChanged","endSelect","selected","selectableCheck","selectableRangeMode","_clearSelection","lastClickedRowIdx","getDisplayRowIndex","rowIdx","fromRowIdx","toRowIdx","toggledRows","toggledRow","_selectRow","rowMatch","rowInfo","selectableRollingSelection","checkboxEl","dataTreeSelectPropagate","childRowSelection","selectedRow","number$1","aRow","bRow","alignEmptyValues","decimalSeparator","thousandSeparator","emptyAlign","string","locale","localeCompare","datetime$1","time","boolean","el1","el2","array","calc","d","alphanum","as","bs","a1","b1","L","rx","rd","isFinite","defaultSorters","Sort","sortList","userSetSort","clearSort","sortMode","remoteSortParams","setSort","refreshSort","sorter","arrowEl","sorterParams","startingDir","headerSortStartingDir","headerSortTristate","headerSort","headerSortElement","columnHeaderSortMulti","newSortList","findSorter","sortOrderReverse","sortListActual","rowComponents","clearColumnHeaders","sortObj","setColumnHeader","_sortItems","sorterCount","sortItem","_sortRow","el1Comp","el2Comp","defaultValidators","parameters","float","numeric","minLength","maxLength","reg","unique","cellData","required","Validate","invalidCells","getInvalidCells","userClearCellValidation","userValidate","cellIsValid","clearValidation","columnValidate","rowValidate","validator","_extractValidator","substring","_buildValidator","validators","invalidIndex","ResizeColumnsModule","ResizeRowsModule","ResizeTableModule","ResponsiveLayoutModule","SelectRowModule","SortModule","ValidateModule","debugEventsExternal","debugEventsInternal","debugInvalidOptions","columnMaxWidth","columnHeaderVertAlign","autoColumns","autoColumnsDefinitions","footerElement","textDirection","addRowPos","renderVertical","renderVerticalBuffer","scrollToRowPosition","scrollToRowIfVisible","scrollToColumnPosition","scrollToColumnIfVisible","rowFormatterPrint","rowFormatterClipboard","rowFormatterHtmlOutput","dataLoaderLoading","dataLoaderError","dataSendParams","dataReceiveParams","OptionsList","msgType","option","userOptions","hasOwnProperty","Renderer","elementVertical","elementHorizontal","verticalFillMode","clearRows","clearColumns","reinitializeColumnWidths","renderRows","renderColumns","rerenderRows","scrollColumns","scrollRows","scrollToRowNearestTop","includingBuffer","render","rerender","ifVisible","rowIndex","BaiscHorizontal","VirtualDomHorizontal","leftCol","rightCol","vDomScrollPosLeft","vDomScrollPosRight","vDomPadRight","fitDataColAvg","compatabilityCheck","dataChange","scroll","colPos","leftPos","rightPos","fitDataCheck","vdomHoz","reinitChanged","reinitializeRows","reinitializeRow","deinitialize","change","collsWidth","colEnd","addColRight","removeColLeft","addColLeft","removeColRight","colPositionAdjust","fitDataColActualWidthCheck","newWidth","widthDiff","ColumnManager","blockHozScrollEvent","columnsByField","initializeRenderer","createHeadersElement","createHeaderElement","renderClass","renderers","hozAdjust","generateColumnsFromRowData","_addColumn","_reIndexColumns","nextToColumn","topColumn","parentIndex","nextEl","root","fieldRoot","getDefinitions","getDefinitionTree","getComponents","structured","_moveColumnInArray","updateRows","fromIndex","adjust","totalWidth","fixedWidth","colWidth","resetScroll","BaiscVertical","onlyGroupHeaders","rowTop","VirtualDomVertical","vDomRowHeight","vDomTop","vDomBottom","vDomScrollPosTop","vDomScrollPosBottom","vDomTopPad","vDomBottomPad","vDomMaxRenderChain","vDomWindowBuffer","vDomWindowMinTotalRows","vDomWindowMinMarginRows","vDomTopNewRows","vDomBottomNewRows","paddingBottom","_virtualRenderFill","topOffset","topDiff","bottomDiff","_addTopRow","vDomScrollHeight","_removeBottomRow","_addBottomRow","_removeTopRow","topFound","bottomRow","forceMove","topPad","rowsHeight","heightOccupied","topPadHeight","rowsCount","rowHeight","fillableSpace","addedRows","paddingAdjust","_quickNormalizeRowHeight","removableRows","RowManager","createHolderElement","createTableElement","heightFixer","firstRender","renderMode","activeRowsPipeline","redrawBlockRestoreConfig","redrawBlockRederInPosition","dataPipeline","displayPipeline","leftDir","topDir","getRowFromPosition","columnsChanged","_setDataActual","_wipeElements","allIndex","activeIndex","setActiveRows","displayRowIterator","regenerateRowNumbers","_showPlaceholder","findAddRowPos","_clearPlaceholder","chainResult","clearData","findRowIndex","rowOnly","getDataCount","skipStage","stage","cascadeOrder","resetDisplayRows","renderTable","layoutColumnsOnNewData","getNextDisplayIndex","_clearTable","initialHeight","otherHeight","external","restoreRedraw","createEvent","initEvent","Event","FooterManager","links","initializeElement","activate","deactivate","InteractionManager","abortClasses","previousTargets","listeners","componentMap","pseudoTrackers","subscriber","pseudoTracking","buildListenerMap","bindSubscriptionWatchers","listenerMap","listener","components","bindPseudoEvents","pseudoMouseEnter","pseudoMouseLeave","leaveList","linkedKeys","comp","clearWatchers","updateEventListeners","track","composedPath","targets","findTargets","bindComponents","triggerEvents","abort","elTargets","targetMatches","previousTarget","ComponentFunctionBinder","funcName","hanlder","DataLoader","loaderElement","createLoaderElement","msgElement","createMsgElement","loadingElement","errorElement","requestOrder","template","firstElementChild","requestNo","showLoader","mapParams","objectInvert","hideLoader","showError","map","blockActiveLoad","shouldLoad","ExternalEventBus","debug","events","subscriptionNotifiers","_debugDispatch","_dispatch","_notifiySubscriptionChange","notifiers","callResult","InternalEventBus","_debugChain","_chain","_debugConfirm","_confirm","fallback","confirmed","TableRegistry","tables","deregister","lookupTable","matchElement","Tabulator","fitData","fitDataGeneral","fitDataStretch","colsWidth","gap","lastCol","fitColumns","flexWidth","flexGrowUnits","flexColWidth","flexColumns","fixedShrinkColumns","flexShrinkUnits","overflowWidth","gapFill","calcWidth","scaleColumns","freeSpace","shrinkCols","oversizeCols","oversizeSpace","remainingSpace","remainingFlexGrowUnits","changeUnits","undersizeCols","calcGrow","widthGrow","calcShrink","widthShrink","defaultModes","fitDataFill","fitDataTable","Layout","modes","defaultLangs","Localize","langList","langs","setHeaderFilterPlaceholder","installLang","setLocale","getLang","default","_setLangProp","desiredLocale","traverseLang","trans","language","_executeBindings","pathArray","_getLangElement","rootPath","Comms","receive","selectors","con","tableComms","coreModules","freeze","LayoutModule","LocalizeModule","CommsModule","ModuleBinder","tabulator","bindStaticFuctionality","bindModules","moduleBindings","extendModule","property","source","registerModule","mod","registerModuleBinding","findTable","moduleCore","modulesCore","modulesRegular","core","mods","interactionMonitor","initialzeCoreSystems","_create","_clearObjectPointers","_mapDeprecatedFunctionality","_rtlCheck","_buildElement","_initializeTable","_loadInitialData","direction","newElement","_detectBrowser","span","destroy","ua","userAgent","vendor","opera","setDataFromLocalFile","extensions","accept","file","files","reader","FileReader","readAsText","onload","onerror","replaceData","responses","foundRows","updateOrAddRow","updateRow","getColumnDefinitions","toggleColumn","deleteColumn","updateColumnDefinition","fromColumn","on","off","plugin","TabulatorFull","PseudoRow","_createElement"],"sources":["C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\CoreFeature.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\Module.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\Helpers.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Accessor\\defaults\\accessors.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Accessor\\Accessor.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\config.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\urlGenerator.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\loaderPromise.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\defaults\\contentTypeFormatters.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Ajax\\Ajax.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\defaults\\pasteActions.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\defaults\\pasteParsers.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Clipboard\\Clipboard.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\CalcComponent.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\cell\\CellComponent.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\cell\\Cell.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\column\\ColumnComponent.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\column\\defaults\\options.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\column\\Column.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\row\\RowComponent.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\row\\Row.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\defaults\\calculations.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ColumnCalcs\\ColumnCalcs.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\DataTree\\DataTree.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\csv.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\json.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\pdf.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\xlsx.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders\\html.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\defaults\\downloaders.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Download\\Download.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\inputMask.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\input.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\textarea.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\number.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\range.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\select.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\autocomplete.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\star.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\progress.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors\\tickCross.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\defaults\\editors.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Edit\\Edit.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\ExportRow.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\ExportColumn.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Export\\Export.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Filter\\defaults\\filters.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Filter\\Filter.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\plaintext.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\html.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\textarea.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\money.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\link.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\image.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\tickCross.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\datetime.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\datetimediff.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\lookup.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\star.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\traffic.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\progress.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\color.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\buttonTick.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\buttonCross.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\rownum.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\handle.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\responsiveCollapse.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters\\rowSelection.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\defaults\\formatters.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Format\\Format.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\FrozenColumns\\FrozenColumns.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\FrozenRows\\FrozenRows.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\GroupComponent.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\Group.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\GroupRows\\GroupRows.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\defaults\\undoers.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\defaults\\redoers.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\History\\History.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\HtmlTableImport\\HtmlTableImport.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Interaction\\Interaction.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\defaults\\bindings.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\defaults\\actions.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Keybindings\\Keybindings.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Menu\\Menu.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\MoveColumns\\MoveColumns.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\MoveRows\\MoveRows.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Mutator\\defaults\\mutators.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Mutator\\Mutator.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Page\\Page.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\defaults\\readers.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\defaults\\writers.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Persistence\\Persistence.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Print\\Print.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ReactiveData\\ReactiveData.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeColumns\\ResizeColumns.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeRows\\ResizeRows.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ResizeTable\\ResizeTable.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\ResponsiveLayout\\ResponsiveLayout.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\SelectRow\\SelectRow.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\number.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\string.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\datetime.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\date.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\time.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\boolean.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\array.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\exists.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters\\alphanum.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\defaults\\sorters.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Sort\\Sort.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Validate\\defaults\\validators.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Validate\\Validate.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\defaults\\options.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\OptionsList.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\Renderer.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\BasicHorizontal.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\VirtualDomHorizontal.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\ColumnManager.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\BasicVertical.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\rendering\\renderers\\VirtualDomVertical.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\RowManager.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\FooterManager.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\InteractionMonitor.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ComponentFunctionBinder.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\DataLoader.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ExternalEventBus.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\InternalEventBus.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\TableRegistry.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitData.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitDataGeneral.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitDataStretch.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes\\fitColumns.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\defaults\\modes.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Layout\\Layout.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Localize\\defaults\\langs.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Localize\\Localize.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\modules\\Comms\\Comms.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\tools\\ModuleBinder.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\Tabulator.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\TabulatorFull.js","C:\\code-challenge-react\\frontend\\node_modules\\tabulator-tables\\src\\js\\core\\row\\PseudoRow.js"],"sourcesContent":["export default class CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tthis.table = table;\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t/////////////// DataLoad /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\treloadData(data, silent){\r\n\t\treturn this.table.dataLoader.load(data, undefined, undefined, undefined, silent);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t///////////// Localization ///////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tlangText(){\r\n\t\treturn this.table.modules.localize.getText(...arguments);\r\n\t}\r\n\r\n\tlangBind(){\r\n\t\treturn this.table.modules.localize.bind(...arguments);\r\n\t}\r\n\r\n\tlangLocale(){\r\n\t\treturn this.table.modules.localize.getLocale(...arguments);\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t////////// Inter Table Comms /////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tcommsConnections(){\r\n\t\treturn this.table.modules.comms.getConnections(...arguments);\r\n\t}\r\n\r\n\tcommsSend(){\r\n\t\treturn this.table.modules.comms.send(...arguments);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Layout  /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tlayoutMode(){\r\n\t\treturn this.table.modules.layout.getMode();\r\n\t}\r\n\r\n\tlayoutRefresh(){\r\n\t\treturn this.table.modules.layout.layout();\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t/////////////// Event Bus ////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tsubscribe(){\r\n\t\treturn this.table.eventBus.subscribe(...arguments);\r\n\t}\r\n\r\n\tunsubscribe(){\r\n\t\treturn this.table.eventBus.unsubscribe(...arguments);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.table.eventBus.subscribed(key);\r\n\t}\r\n\r\n\tsubscriptionChange(){\r\n\t\treturn this.table.eventBus.subscriptionChange(...arguments);\r\n\t}\r\n\r\n\tdispatch(){\r\n\t\treturn this.table.eventBus.dispatch(...arguments);\r\n\t}\r\n\r\n\tchain(){\r\n\t\treturn this.table.eventBus.chain(...arguments);\r\n\t}\r\n\r\n\tconfirm(){\r\n\t\treturn this.table.eventBus.confirm(...arguments);\r\n\t}\r\n\r\n\tdispatchExternal(){\r\n\t\treturn this.table.externalEvents.dispatch(...arguments);\r\n\t}\r\n\r\n\tsubscribedExternal(key){\r\n\t\treturn this.table.externalEvents.subscribed(key);\r\n\t}\r\n\r\n\tsubscriptionChangeExternal(){\r\n\t\treturn this.table.externalEvents.subscriptionChange(...arguments);\r\n\t}\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Options /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\toptions(key){\r\n\t\treturn this.table.options[key];\r\n\t}\r\n\r\n\tsetOption(key, value){\r\n\t\tif(typeof value !== \"undefined\"){\r\n\t\t\tthis.table.options[key] = value;\r\n\t\t}\r\n\r\n\t\treturn this.table.options[key];\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////\r\n\t//////////////// Modules /////////////////\r\n\t//////////////////////////////////////////\r\n\r\n\tmodule(key){\r\n\t\treturn this.table.module(key);\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\n\r\nclass Module extends CoreFeature{\r\n\r\n\tconstructor(table, name){\r\n\t\tsuper(table);\r\n\r\n\t\tthis._handler = null;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\t// setup module when table is initialized, to be overriden in module\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t////// Options Registration ///////\r\n\t///////////////////////////////////\r\n\r\n\tregisterTableOption(key, value){\r\n\t\tthis.table.optionsList.register(key, value);\r\n\t}\r\n\r\n\tregisterColumnOption(key, value){\r\n\t\tthis.table.columnManager.optionsList.register(key, value);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t/// Public Function Registation ///\r\n\t///////////////////////////////////\r\n\r\n\tregisterTableFunction(name, func){\r\n\t\tif(typeof this.table[name] === \"undefined\"){\r\n\t\t\tthis.table[name] = func;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Unable to bind table function, name already in use\", name)\r\n\t\t}\r\n\t}\r\n\r\n\tregisterComponentFunction(component, func, handler){\r\n\t\treturn this.table.componentFunctionBinder.bind(component, func, handler);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Data Pipeline //////////\r\n\t///////////////////////////////////\r\n\r\n\tregisterDataHandler(handler, priority){\r\n\t\tthis.table.rowManager.registerDataPipelineHandler(handler, priority)\r\n\t\tthis._handler = handler;\r\n\t}\r\n\r\n\tregisterDisplayHandler(handler, priority){\r\n\t\tthis.table.rowManager.registerDisplayPipelineHandler(handler, priority)\r\n\t\tthis._handler = handler;\r\n\t}\r\n\r\n\trefreshData(renderInPosition, handler){\r\n\t\tif(!handler){\r\n\t\t\thandler = this._handler;\r\n\t\t}\r\n\r\n\t\tif(handler){\r\n\t\t\tthis.table.rowManager.refreshActiveData(handler, false, renderInPosition);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Module;","export default class Helpers{\r\n\r\n\tstatic elVisible(el){\r\n\t\treturn !(el.offsetWidth <= 0 && el.offsetHeight <= 0);\r\n\t}\r\n\r\n\tstatic elOffset(el){\r\n\t\tvar box = el.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\ttop: box.top + window.pageYOffset - document.documentElement.clientTop,\r\n\t\t\tleft: box.left + window.pageXOffset - document.documentElement.clientLeft\r\n\t\t};\r\n\t}\r\n\r\n\tstatic deepClone(obj, clone, list = []){\r\n\t\tvar objectProto = {}.__proto__,\r\n\t\tarrayProto = [].__proto__;\r\n\r\n\t\tif (!clone){\r\n\t\t\tclone = Object.assign(Array.isArray(obj) ? [] : {}, obj);\r\n\t\t}\r\n\r\n\t\tfor(var i in obj) {\r\n\t\t\tlet subject = obj[i],\r\n\t\t\tmatch, copy;\r\n\r\n\t\t\tif(subject != null && typeof subject === \"object\" && (subject.__proto__ === objectProto || subject.__proto__ === arrayProto)){\r\n\t\t\t\tmatch = list.findIndex((item) => {\r\n\t\t\t\t\treturn item.subject === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(match > -1){\r\n\t\t\t\t\tclone[i] = list[match].copy;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcopy = Object.assign(Array.isArray(subject) ? [] : {}, subject);\r\n\r\n\t\t\t\t\tlist.unshift({subject, copy});\r\n\r\n\t\t\t\t\tclone[i] = this.deepClone(subject, copy, list);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn clone;\r\n\t}\r\n}","export default {}","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defautlAccessors from './defaults/accessors.js';\r\n\r\nclass Accessor extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.allowedTypes = [\"\", \"data\", \"download\", \"clipboard\", \"print\", \"htmlOutput\"] //list of accessor types\r\n\r\n\t\tthis.registerColumnOption(\"accessor\");\r\n\t\tthis.registerColumnOption(\"accessorParams\");\r\n\t\tthis.registerColumnOption(\"accessorData\");\r\n\t\tthis.registerColumnOption(\"accessorDataParams\");\r\n\t\tthis.registerColumnOption(\"accessorDownload\");\r\n\t\tthis.registerColumnOption(\"accessorDownloadParams\");\r\n\t\tthis.registerColumnOption(\"accessorClipboard\");\r\n\t\tthis.registerColumnOption(\"accessorClipboardParams\");\r\n\t\tthis.registerColumnOption(\"accessorPrint\");\r\n\t\tthis.registerColumnOption(\"accessorPrintParams\");\r\n\t\tthis.registerColumnOption(\"accessorHtmlOutput\");\r\n\t\tthis.registerColumnOption(\"accessorHtmlOutputParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-data-retrieve\", this.transformRow.bind(this));\r\n\t}\r\n\r\n\t//initialize column accessor\r\n\tinitializeColumn(column){\r\n\t\tvar match = false,\r\n\t\tconfig = {};\r\n\r\n\t\tthis.allowedTypes.forEach((type) => {\r\n\t\t\tvar key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\t\taccessor;\r\n\r\n\t\t\tif(column.definition[key]){\r\n\t\t\t\taccessor = this.lookupAccessor(column.definition[key]);\r\n\r\n\t\t\t\tif(accessor){\r\n\t\t\t\t\tmatch = true;\r\n\r\n\t\t\t\t\tconfig[key] = {\r\n\t\t\t\t\t\taccessor:accessor,\r\n\t\t\t\t\t\tparams: column.definition[key + \"Params\"] || {},\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tcolumn.modules.accessor = config;\r\n\t\t}\r\n\t}\r\n\r\n\tlookupAccessor(value){\r\n\t\tvar accessor = false;\r\n\r\n\t\t//set column accessor\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Accessor.accessors[value]){\r\n\t\t\t\taccessor = Accessor.accessors[value]\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Accessor Error - No such accessor found, ignoring: \", value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\taccessor = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn accessor;\r\n\t}\r\n\r\n\t//apply accessor to row\r\n\ttransformRow(row, type){\r\n\t\tvar key = \"accessor\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\trowComponent = row.getComponent();\r\n\r\n\t\t//clone data object with deep copy to isolate internal data from returned result\r\n\t\tvar data = Helpers.deepClone(row.data || {});\r\n\r\n\t\tthis.table.columnManager.traverse(function(column){\r\n\t\t\tvar value, accessor, params, colCompnent;\r\n\r\n\t\t\tif(column.modules.accessor){\r\n\r\n\t\t\t\taccessor = column.modules.accessor[key] || column.modules.accessor.accessor || false;\r\n\r\n\t\t\t\tif(accessor){\r\n\t\t\t\t\tvalue = column.getFieldValue(data);\r\n\r\n\t\t\t\t\tif(value != \"undefined\"){\r\n\t\t\t\t\t\tcolCompnent = column.getComponent();\r\n\t\t\t\t\t\tparams = typeof accessor.params === \"function\" ? accessor.params(value, data, type, colCompnent, rowComponent) : accessor.params;\r\n\t\t\t\t\t\tcolumn.setFieldValue(data, accessor.accessor(value, data, type, params, colCompnent, rowComponent));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\n//load defaults\r\nAccessor.moduleName = \"accessor\";\r\nAccessor.accessors = defautlAccessors;\r\n\r\nexport default Accessor;","export default {\r\n\tmethod: \"GET\",\r\n};","function generateParamsList(data, prefix){\r\n\tvar output = [];\r\n\r\n\tprefix = prefix || \"\";\r\n\r\n\tif(Array.isArray(data)){\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\toutput = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\r\n\t\t});\r\n\t}else if (typeof data === \"object\"){\r\n\t\tfor (var key in data){\r\n\t\t\toutput = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\r\n\t\t}\r\n\t}else{\r\n\t\toutput.push({key:prefix, value:data});\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nfunction serializeParams(params){\r\n\tvar output = generateParamsList(params),\r\n\tencoded = [];\r\n\r\n\toutput.forEach(function(item){\r\n\t\tencoded.push(encodeURIComponent(item.key) + \"=\" + encodeURIComponent(item.value));\r\n\t});\r\n\r\n\treturn encoded.join(\"&\");\r\n}\r\n\r\nexport default function(url, config, params){\r\n\tif(url){\r\n\t\tif(params && Object.keys(params).length){\r\n\t\t\tif(!config.method || config.method.toLowerCase() == \"get\"){\r\n\t\t\t\tconfig.method = \"get\";\r\n\r\n\t\t\t\turl += (url.includes(\"?\") ? \"&\" : \"?\") + serializeParams(params);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn url;\r\n};","export default function(url, config, params){\r\n\tvar contentType;\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t//set url\r\n\t\turl = this.urlGenerator.call(this.table, url, config, params);\r\n\r\n\t\t//set body content if not GET request\r\n\t\tif(config.method.toUpperCase() != \"GET\"){\r\n\t\t\tcontentType = typeof this.table.options.ajaxContentType === \"object\" ?  this.table.options.ajaxContentType : this.contentTypeFormatters[this.table.options.ajaxContentType];\r\n\t\t\tif(contentType){\r\n\r\n\t\t\t\tfor(var key in contentType.headers){\r\n\t\t\t\t\tif(!config.headers){\r\n\t\t\t\t\t\tconfig.headers = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof config.headers[key] === \"undefined\"){\r\n\t\t\t\t\t\tconfig.headers[key] = contentType.headers[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconfig.body = contentType.body.call(this, url, config, params);\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Ajax Error - Invalid ajaxContentType value:\", this.table.options.ajaxContentType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(url){\r\n\t\t\t//configure headers\r\n\t\t\tif(typeof config.headers === \"undefined\"){\r\n\t\t\t\tconfig.headers = {};\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.headers.Accept === \"undefined\"){\r\n\t\t\t\tconfig.headers.Accept = \"application/json\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.headers[\"X-Requested-With\"] === \"undefined\"){\r\n\t\t\t\tconfig.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof config.mode === \"undefined\"){\r\n\t\t\t\tconfig.mode = \"cors\";\r\n\t\t\t}\r\n\r\n\t\t\tif(config.mode == \"cors\"){\r\n\t\t\t\tif(typeof config.headers[\"Origin\"] === \"undefined\"){\r\n\t\t\t\t\tconfig.headers[\"Origin\"] = window.location.origin;\r\n\t\t\t\t}\r\n        \r\n\t\t\t\tif(typeof config.credentials === \"undefined\"){\r\n\t\t\t\t\tconfig.credentials = 'same-origin';\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(typeof config.credentials === \"undefined\"){\r\n\t\t\t\t\tconfig.credentials = 'include';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//send request\r\n\t\t\tfetch(url, config)\r\n\t\t\t.then((response)=>{\r\n\t\t\t\tif(response.ok) {\r\n\t\t\t\t\tresponse.json()\r\n\t\t\t\t\t.then((data)=>{\r\n\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t}).catch((error)=>{\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\tconsole.warn(\"Ajax Load Error - Invalid JSON returned\", error);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.error(\"Ajax Load Error - Connection Error: \" + response.status, response.statusText);\r\n\t\t\t\t\treject(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error)=>{\r\n\t\t\t\tconsole.error(\"Ajax Load Error - Connection Error: \", error);\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Ajax Load Error - No URL Set\");\r\n\t\t\tresolve([]);\r\n\t\t}\r\n\t});\r\n};","function generateParamsList(data, prefix){\r\n\tvar output = [];\r\n\r\n\tprefix = prefix || \"\";\r\n\r\n\tif(Array.isArray(data)){\r\n\t\tdata.forEach((item, i) => {\r\n\t\t\toutput = output.concat(generateParamsList(item, prefix ? prefix + \"[\" + i + \"]\" : i));\r\n\t\t});\r\n\t}else if (typeof data === \"object\"){\r\n\t\tfor (var key in data){\r\n\t\t\toutput = output.concat(generateParamsList(data[key], prefix ? prefix + \"[\" + key + \"]\" : key));\r\n\t\t}\r\n\t}else{\r\n\t\toutput.push({key:prefix, value:data});\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\nexport default {\r\n\t\"json\":{\r\n\t\theaders:{\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody:function(url, config, params){\r\n\t\t\treturn JSON.stringify(params);\r\n\t\t},\r\n\t},\r\n\t\"form\":{\r\n\t\theaders:{\r\n\t\t},\r\n\t\tbody:function(url, config, params){\r\n\r\n\t\t\tvar output = generateParamsList(params),\r\n\t\t\tform = new FormData();\r\n\r\n\t\t\toutput.forEach(function(item){\r\n\t\t\t\tform.append(item.key, item.value);\r\n\t\t\t});\r\n\r\n\t\t\treturn form;\r\n\t\t},\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultConfig from './defaults/config.js';\r\nimport defaultURLGenerator from './defaults/urlGenerator.js';\r\nimport defaultLoaderPromise from './defaults/loaderPromise.js';\r\nimport defaultContentTypeFormatters from './defaults/contentTypeFormatters.js';\r\n\r\nclass Ajax extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.config = false; //hold config object for ajax request\r\n\t\tthis.url = \"\"; //request URL\r\n\t\tthis.urlGenerator = false;\r\n\t\tthis.params = false; //request parameters\r\n\r\n\t\tthis.loaderPromise = false;\r\n\r\n\t\tthis.registerTableOption(\"ajaxURL\", false); //url for ajax loading\r\n\t\tthis.registerTableOption(\"ajaxURLGenerator\", false);\r\n\t\tthis.registerTableOption(\"ajaxParams\", {});  //params for ajax loading\r\n\t\tthis.registerTableOption(\"ajaxConfig\", \"get\"); //ajax request type\r\n\t\tthis.registerTableOption(\"ajaxContentType\", \"form\"); //ajax request type\r\n\t\tthis.registerTableOption(\"ajaxRequestFunc\", false); //promise function\r\n\r\n\t\tthis.registerTableOption(\"ajaxRequesting\", function(){});\r\n\t\tthis.registerTableOption(\"ajaxResponse\", false);\r\n\r\n\t\tthis.contentTypeFormatters = Ajax.contentTypeFormatters;\r\n\t}\r\n\r\n\t//initialize setup options\r\n\tinitialize(){\r\n\t\tthis.loaderPromise = this.table.options.ajaxRequestFunc || Ajax.defaultLoaderPromise;\r\n\t\tthis.urlGenerator = this.table.options.ajaxURLGenerator || Ajax.defaultURLGenerator;\r\n\r\n\t\tif(this.table.options.ajaxParams){\r\n\t\t\tthis.setParams(this.table.options.ajaxParams);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.ajaxConfig){\r\n\t\t\tthis.setConfig(this.table.options.ajaxConfig);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.ajaxURL){\r\n\t\t\tthis.setUrl(this.table.options.ajaxURL);\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"getAjaxUrl\", this.getUrl.bind(this));\r\n\r\n\t\tthis.subscribe(\"data-loading\", this.requestDataCheck.bind(this));\r\n\t\tthis.subscribe(\"data-load\", this.requestData.bind(this));\r\n\t}\r\n\r\n\r\n\trequestDataCheck(data, params, config, silent){\r\n\t\treturn !!((!data && this.url) || typeof data === \"string\");\r\n\t}\r\n\r\n\trequestData(data, params, config, silent, previousData){\r\n\t\tif(this.requestDataCheck(data)){\r\n\t\t\tif(data){\r\n\t\t\t\tthis.setUrl(data);\r\n\t\t\t}\r\n\r\n\t\t\tif(params){\r\n\t\t\t\tthis.setParams(params, true);\r\n\t\t\t}\r\n\r\n\t\t\tif(config){\r\n\t\t\t\tthis.setConfig(config);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.sendRequest();\r\n\t\t}else{\r\n\t\t\treturn previousData;\r\n\t\t}\r\n\t}\r\n\r\n\t//set ajax params\r\n\tsetParams(params, update){\r\n\t\tif(update){\r\n\t\t\tthis.params = this.params || {};\r\n\r\n\t\t\tfor(let key in params){\r\n\t\t\t\tthis.params[key] = params[key];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.params = params;\r\n\t\t}\r\n\t}\r\n\r\n\tgetParams(){\r\n\t\treturn this.params || {};\r\n\t}\r\n\r\n\t//load config object\r\n\tsetConfig(config){\r\n\t\tthis._loadDefaultConfig();\r\n\r\n\t\tif(typeof config == \"string\"){\r\n\t\t\tthis.config.method = config;\r\n\t\t}else{\r\n\t\t\tfor(let key in config){\r\n\t\t\t\tthis.config[key] = config[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//create config object from default\r\n\t_loadDefaultConfig(force){\r\n\t\tif(!this.config || force){\r\n\r\n\t\t\tthis.config = {};\r\n\r\n\t\t\t//load base config from defaults\r\n\t\t\tfor(let key in Ajax.defaultConfig){\r\n\t\t\t\tthis.config[key] = Ajax.defaultConfig[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set request url\r\n\tsetUrl(url){\r\n\t\tthis.url = url;\r\n\t}\r\n\r\n\t//get request url\r\n\tgetUrl(){\r\n\t\treturn this.url;\r\n\t}\r\n\r\n\t//send ajax request\r\n\tsendRequest(silent){\r\n\t\tvar url = this.url,\r\n\t\tesc, query;\r\n\r\n\t\tthis._loadDefaultConfig();\r\n\r\n\t\tif(this.table.options.ajaxRequesting.call(this.table, this.url, this.params) !== false){\r\n\t\t\treturn this.loaderPromise(url, this.config, this.params)\r\n\t\t\t.then((data)=>{\r\n\t\t\t\tif(this.table.options.ajaxResponse){\r\n\t\t\t\t\tdata = this.table.options.ajaxResponse.call(this.table, this.url, this.params, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nAjax.moduleName = \"ajax\";\r\n\r\n//load defaults\r\nAjax.defaultConfig = defaultConfig;\r\nAjax.defaultURLGenerator = defaultURLGenerator;\r\nAjax.defaultLoaderPromise = defaultLoaderPromise;\r\nAjax.contentTypeFormatters = defaultContentTypeFormatters;\r\n\r\nexport default Ajax;","export default {\r\n\treplace:function(rows){\r\n\t\treturn this.table.setData(rows);\r\n\t},\r\n\tupdate:function(rows){\r\n\t\treturn this.table.updateOrAddData(rows);\r\n\t},\r\n\tinsert:function(rows){\r\n\t\treturn this.table.addData(rows);\r\n\t},\r\n};","export default {\r\n\ttable:function(clipboard){\r\n\t\tvar data = [],\r\n\t\tsuccess = false,\r\n\t\theaderFindSuccess = true,\r\n\t\tcolumns = this.table.columnManager.columns,\r\n\t\tcolumnMap = [],\r\n\t\trows = [];\r\n\r\n\t\t//get data from clipboard into array of columns and rows.\r\n\t\tclipboard = clipboard.split(\"\\n\");\r\n\r\n\t\tclipboard.forEach(function(row){\r\n\t\t\tdata.push(row.split(\"\\t\"));\r\n\t\t});\r\n\r\n\t\tif(data.length && !(data.length === 1 && data[0].length < 2)){\r\n\t\t\tsuccess = true;\r\n\r\n\t\t\t//check if headers are present by title\r\n\t\t\tdata[0].forEach(function(value){\r\n\t\t\t\tvar column = columns.find(function(column){\r\n\t\t\t\t\treturn value && column.definition.title && value.trim() && column.definition.title.trim() === value.trim();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tcolumnMap.push(column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\theaderFindSuccess = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//check if column headers are present by field\r\n\t\t\tif(!headerFindSuccess){\r\n\t\t\t\theaderFindSuccess = true;\r\n\t\t\t\tcolumnMap = [];\r\n\r\n\t\t\t\tdata[0].forEach(function(value){\r\n\t\t\t\t\tvar column = columns.find(function(column){\r\n\t\t\t\t\t\treturn value && column.field && value.trim() && column.field.trim() === value.trim();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(column){\r\n\t\t\t\t\t\tcolumnMap.push(column);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\theaderFindSuccess = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(!headerFindSuccess){\r\n\t\t\t\t\tcolumnMap = this.table.columnManager.columnsByIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//remove header row if found\r\n\t\t\tif(headerFindSuccess){\r\n\t\t\t\tdata.shift();\r\n\t\t\t}\r\n\r\n\t\t\tdata.forEach(function(item){\r\n\t\t\t\tvar row = {};\r\n\r\n\t\t\t\titem.forEach(function(value, i){\r\n\t\t\t\t\tif(columnMap[i]){\r\n\t\t\t\t\t\trow[columnMap[i].field] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\trows.push(row);\r\n\t\t\t});\r\n\r\n\t\t\treturn rows;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultPasteActions from './defaults/pasteActions.js';\r\nimport defaultPasteParsers from './defaults/pasteParsers.js';\r\n\r\nclass Clipboard extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = true;\r\n\t\tthis.pasteParser = function(){};\r\n\t\tthis.pasteAction = function(){};\r\n\t\tthis.customSelection = false;\r\n\t\tthis.rowRange = false;\r\n\t\tthis.blocked = true; //block copy actions not originating from this command\r\n\r\n\t\tthis.registerTableOption(\"clipboard\", false); //enable clipboard\r\n\t\tthis.registerTableOption(\"clipboardCopyStyled\", true); //formatted table data\r\n\t\tthis.registerTableOption(\"clipboardCopyConfig\", false); //clipboard config\r\n\t\tthis.registerTableOption(\"clipboardCopyFormatter\", false); //DEPRICATED - REMOVE in 5.0\r\n\t\tthis.registerTableOption(\"clipboardCopyRowRange\", \"active\"); //restrict clipboard to visible rows only\r\n\t\tthis.registerTableOption(\"clipboardPasteParser\", \"table\"); //convert pasted clipboard data to rows\r\n\t\tthis.registerTableOption(\"clipboardPasteAction\", \"insert\"); //how to insert pasted data into the table\r\n\r\n\t\tthis.registerColumnOption(\"clipboard\");\r\n\t\tthis.registerColumnOption(\"titleClipboard\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.mode = this.table.options.clipboard;\r\n\r\n\t\tthis.rowRange = this.table.options.clipboardCopyRowRange;\r\n\r\n\t\tif(this.mode === true || this.mode === \"copy\"){\r\n\t\t\tthis.table.element.addEventListener(\"copy\", (e) => {\r\n\t\t\t\tvar plain, html, list;\r\n\r\n\t\t\t\tif(!this.blocked){\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\tif(this.customSelection){\r\n\t\t\t\t\t\tplain = this.customSelection;\r\n\r\n\t\t\t\t\t\tif(this.table.options.clipboardCopyFormatter){\r\n\t\t\t\t\t\t\tplain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\tvar list = this.table.modules.export.generateExportList(this.table.options.clipboardCopyConfig, this.table.options.clipboardCopyStyled, this.rowRange, \"clipboard\");\r\n\r\n\t\t\t\t\t\thtml = this.table.modules.export.genereateHTMLTable(list);\r\n\t\t\t\t\t\tplain = html ? this.generatePlainContent(list) : \"\";\r\n\r\n\t\t\t\t\t\tif(this.table.options.clipboardCopyFormatter){\r\n\t\t\t\t\t\t\tplain = this.table.options.clipboardCopyFormatter(\"plain\", plain);\r\n\t\t\t\t\t\t\thtml = this.table.options.clipboardCopyFormatter(\"html\", html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (window.clipboardData && window.clipboardData.setData) {\r\n\t\t\t\t\t\twindow.clipboardData.setData('Text', plain);\r\n\t\t\t\t\t} else if (e.clipboardData && e.clipboardData.setData) {\r\n\t\t\t\t\t\te.clipboardData.setData('text/plain', plain);\r\n\t\t\t\t\t\tif(html){\r\n\t\t\t\t\t\t\te.clipboardData.setData('text/html', html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (e.originalEvent && e.originalEvent.clipboardData.setData) {\r\n\t\t\t\t\t\te.originalEvent.clipboardData.setData('text/plain', plain);\r\n\t\t\t\t\t\tif(html){\r\n\t\t\t\t\t\t\te.originalEvent.clipboardData.setData('text/html', html);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dispatchExternal(\"clipboardCopied\", plain, html);\r\n\r\n\t\t\t\t\tthis.reset();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.mode === true || this.mode === \"paste\"){\r\n\t\t\tthis.table.element.addEventListener(\"paste\", (e) => {\r\n\t\t\t\tthis.paste(e);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.setPasteParser(this.table.options.clipboardPasteParser);\r\n\t\tthis.setPasteAction(this.table.options.clipboardPasteAction);\r\n\r\n\t\tthis.registerTableFunction(\"copyToClipboard\", this.copy.bind(this));\r\n\t}\r\n\r\n\treset(){\r\n\t\tthis.blocked = true;\r\n\t\tthis.customSelection = false;\r\n\t}\r\n\r\n\tgeneratePlainContent (list) {\r\n\t\tvar output = [];\r\n\r\n\t\tlist.forEach((row) => {\r\n\t\t\tvar rowData = [];\r\n\r\n\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\tvar value = \"\";\r\n\r\n\t\t\t\tif(col){\r\n\r\n\t\t\t\t\tif(row.type === \"group\"){\r\n\t\t\t\t\t\tcol.value = col.component.getKey();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(col.value === null){\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\t\tvalue = JSON.stringify(col.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tvalue = col.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowData.push(value);\r\n\t\t\t});\r\n\r\n\t\t\toutput.push(rowData.join(\"\\t\"));\r\n\t\t});\r\n\r\n\t\treturn output.join(\"\\n\");\r\n\t}\r\n\r\n\tcopy (range, internal) {\r\n\t\tvar range, sel, textRange;\r\n\t\tthis.blocked = false;\r\n\t\tthis.customSelection = false;\r\n\r\n\t\tif (this.mode === true || this.mode === \"copy\") {\r\n\r\n\t\t\tthis.rowRange = range || this.table.options.clipboardCopyRowRange;\r\n\r\n\t\t\tif (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\r\n\t\t\t\trange = document.createRange();\r\n\t\t\t\trange.selectNodeContents(this.table.element);\r\n\t\t\t\tsel = window.getSelection();\r\n\r\n\t\t\t\tif (sel.toString() && internal) {\r\n\t\t\t\t\tthis.customSelection = sel.toString();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\tsel.addRange(range);\r\n\t\t\t} else if (typeof document.selection != \"undefined\" && typeof document.body.createTextRange != \"undefined\") {\r\n\t\t\t\ttextRange = document.body.createTextRange();\r\n\t\t\t\ttextRange.moveToElementText(this.table.element);\r\n\t\t\t\ttextRange.select();\r\n\t\t\t}\r\n\r\n\t\t\tdocument.execCommand('copy');\r\n\r\n\t\t\tif (sel) {\r\n\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//PASTE EVENT HANDLING\r\n\tsetPasteAction(action){\r\n\r\n\t\tswitch(typeof action){\r\n\t\t\tcase \"string\":\r\n\t\t\tthis.pasteAction = Clipboard.pasteActions[action];\r\n\r\n\t\t\tif(!this.pasteAction){\r\n\t\t\t\tconsole.warn(\"Clipboard Error - No such paste action found:\", action);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tthis.pasteAction = action;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tsetPasteParser(parser){\r\n\t\tswitch(typeof parser){\r\n\t\t\tcase \"string\":\r\n\t\t\tthis.pasteParser = Clipboard.pasteParsers[parser];\r\n\r\n\t\t\tif(!this.pasteParser){\r\n\t\t\t\tconsole.warn(\"Clipboard Error - No such paste parser found:\", parser);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tthis.pasteParser = parser;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpaste(e){\r\n\t\tvar data, rowData, rows;\r\n\r\n\t\tif(this.checkPaseOrigin(e)){\r\n\r\n\t\t\tdata = this.getPasteData(e);\r\n\r\n\t\t\trowData = this.pasteParser.call(this, data);\r\n\r\n\t\t\tif(rowData){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\t\t\trowData = this.mutateData(rowData);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trows = this.pasteAction.call(this, rowData);\r\n\r\n\t\t\t\tthis.dispatchExternal(\"clipboardPasted\", data, rowData, rows);\r\n\t\t\t}else{\r\n\t\t\t\tthis.dispatchExternal(\"clipboardPasteError\", data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmutateData(data){\r\n\t\tvar output = [];\r\n\r\n\t\tif(Array.isArray(data)){\r\n\t\t\tdata.forEach((row) => {\r\n\t\t\t\toutput.push(this.table.modules.mutator.transformRow(row, \"clipboard\"));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\toutput = data;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tcheckPaseOrigin(e){\r\n\t\tvar valid = true;\r\n\r\n\t\tif(e.target.tagName != \"DIV\" || this.table.modules.edit.currentCell){\r\n\t\t\tvalid = false;\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tgetPasteData(e){\r\n\t\tvar data;\r\n\r\n\t\tif (window.clipboardData && window.clipboardData.getData) {\r\n\t\t\tdata = window.clipboardData.getData('Text');\r\n\t\t} else if (e.clipboardData && e.clipboardData.getData) {\r\n\t\t\tdata = e.clipboardData.getData('text/plain');\r\n\t\t} else if (e.originalEvent && e.originalEvent.clipboardData.getData) {\r\n\t\t\tdata = e.originalEvent.clipboardData.getData('text/plain');\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nClipboard.moduleName = \"clipboard\";\r\n\r\n//load defaults\r\nClipboard.pasteActions = defaultPasteActions;\r\nClipboard.pasteParsers = defaultPasteParsers;\r\n\r\nexport default Clipboard;","class CalcComponent{\r\n\tconstructor (row){\r\n\t\tthis._row = row;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._row.table.componentFunctionBinder.handle(\"row\", target._row, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\treturn this._row.getData(transform);\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._row.getElement();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._row.table;\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._row.getCells().forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar cell = this._row.getCell(column);\r\n\t\treturn cell ? cell.getComponent() : false;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._row;\r\n\t}\r\n}\r\n\r\nexport default CalcComponent;","//public cell object\r\nexport default class CellComponent {\r\n\r\n\tconstructor (cell){\r\n\t\tthis._cell = cell;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._cell.table.componentFunctionBinder.handle(\"cell\", target._cell, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetValue(){\r\n\t\treturn this._cell.getValue();\r\n\t}\r\n\r\n\tgetOldValue(){\r\n\t\treturn this._cell.getOldValue();\r\n\t}\r\n\r\n\tgetInitialValue(){\r\n\t\treturn this._cell.initialValue;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._cell.getElement();\r\n\t}\r\n\r\n\tgetRow(){\r\n\t\treturn this._cell.row.getComponent();\r\n\t}\r\n\r\n\tgetData(){\r\n\t\treturn this._cell.row.getData();\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._cell.column.getField();\r\n\t}\r\n\r\n\tgetColumn(){\r\n\t\treturn this._cell.column.getComponent();\r\n\t}\r\n\r\n\tsetValue(value, mutate){\r\n\t\tif(typeof mutate == \"undefined\"){\r\n\t\t\tmutate = true;\r\n\t\t}\r\n\r\n\t\tthis._cell.setValue(value, mutate);\r\n\t}\r\n\r\n\trestoreOldValue(){\r\n\t\tthis._cell.setValueActual(this._cell.getOldValue());\r\n\t}\r\n\r\n\trestoreInitialValue(){\r\n\t\tthis._cell.setValueActual(this._cell.initialValue);\r\n\t}\r\n\r\n\tcheckHeight(){\r\n\t\tthis._cell.checkHeight();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._cell.table;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._cell;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport CellComponent from './CellComponent.js';\r\n\r\nexport default class Cell extends CoreFeature{\r\n\tconstructor(column, row){\r\n\t\tsuper(column.table);\r\n\r\n\t\tthis.table = column.table;\r\n\t\tthis.column = column;\r\n\t\tthis.row = row;\r\n\t\tthis.element = null;\r\n\t\tthis.value = null;\r\n\t\tthis.initialValue;\r\n\t\tthis.oldValue = null;\r\n\t\tthis.modules = {};\r\n\r\n\t\tthis.height = null;\r\n\t\tthis.width = null;\r\n\t\tthis.minWidth = null;\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.loaded = false; //track if the cell has been added to the DOM yet\r\n\r\n\t\tthis.build();\r\n\t}\r\n\r\n\t//////////////// Setup Functions /////////////////\r\n\t//generate element\r\n\tbuild(){\r\n\t\tthis.generateElement();\r\n\r\n\t\tthis.setWidth();\r\n\r\n\t\tthis._configureCell();\r\n\r\n\t\tthis.setValueActual(this.column.getFieldValue(this.row.data));\r\n\r\n\t\tthis.initialValue = this.value;\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.element = document.createElement('div');\r\n\t\tthis.element.className = \"tabulator-cell\";\r\n\t\tthis.element.setAttribute(\"role\", \"gridcell\");\r\n\t\tthis.element = this.element;\r\n\t}\r\n\r\n\t_configureCell(){\r\n\t\tvar element = this.element,\r\n\t\tfield = this.column.getField(),\r\n\t\tvertAligns = {\r\n\t\t\ttop:\"flex-start\",\r\n\t\t\tbottom:\"flex-end\",\r\n\t\t\tmiddle:\"center\",\r\n\t\t},\r\n\t\thozAligns = {\r\n\t\t\tleft:\"flex-start\",\r\n\t\t\tright:\"flex-end\",\r\n\t\t\tcenter:\"center\",\r\n\t\t};\r\n\r\n\t\t//set text alignment\r\n\t\telement.style.textAlign = this.column.hozAlign;\r\n\r\n\t\tif(this.column.vertAlign){\r\n\t\t\telement.style.display = \"inline-flex\";\r\n\r\n\t\t\telement.style.alignItems = vertAligns[this.column.vertAlign] || \"\";\r\n\r\n\t\t\tif(this.column.hozAlign){\r\n\t\t\t\telement.style.justifyContent = hozAligns[this.column.hozAlign] || \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(field){\r\n\t\t\telement.setAttribute(\"tabulator-field\", field);\r\n\t\t}\r\n\r\n\t\t//add class to cell if needed\r\n\t\tif(this.column.definition.cssClass){\r\n\t\t\tvar classNames = this.column.definition.cssClass.split(\" \")\r\n\t\t\tclassNames.forEach((className) => {\r\n\t\t\t\telement.classList.add(className)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//update tooltip on mouse enter\r\n\t\tif (this.table.options.tooltipGenerationMode === \"hover\"){\r\n\t\t\telement.addEventListener(\"mouseenter\", (e) => {\r\n\t\t\t\tthis._generateTooltip();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"cell-init\", this);\r\n\r\n\t\t//hide cell if not visible\r\n\t\tif(!this.column.visible){\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t//generate cell contents\r\n\t_generateContents(){\r\n\t\tvar val;\r\n\r\n\t\tval = this.chain(\"cell-format\", this, null, () => {\r\n\t\t\treturn this.element.innerHTML = this.value;\r\n\t\t});\r\n\r\n\t\tswitch(typeof val){\r\n\t\t\tcase \"object\":\r\n\t\t\tif(val instanceof Node){\r\n\r\n\t\t\t\t//clear previous cell contents\r\n\t\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\t\tthis.element.appendChild(val);\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.innerHTML = \"\";\r\n\r\n\t\t\t\tif(val != null){\r\n\t\t\t\t\tconsole.warn(\"Format Error - Formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"undefined\":\r\n\t\t\tcase \"null\":\r\n\t\t\tthis.element.innerHTML = \"\";\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\tthis.element.innerHTML = val;\r\n\t\t}\r\n\t}\r\n\r\n\tcellRendered(){\r\n\t\tthis.dispatch(\"cell-rendered\", this);\r\n\t}\r\n\r\n\t//generate tooltip text\r\n\t_generateTooltip(){\r\n\t\tvar tooltip = this.column.tooltip;\r\n\r\n\t\tif(tooltip){\r\n\t\t\tif(tooltip === true){\r\n\t\t\t\ttooltip = this.value;\r\n\t\t\t}else if(typeof(tooltip) == \"function\"){\r\n\t\t\t\ttooltip = tooltip(this.getComponent());\r\n\r\n\t\t\t\tif(tooltip === false){\r\n\t\t\t\t\ttooltip = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof tooltip === \"undefined\"){\r\n\t\t\t\ttooltip = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.setAttribute(\"title\", tooltip);\r\n\t\t}else{\r\n\t\t\tthis.element.setAttribute(\"title\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////////// Getters ////////////////////\r\n\tgetElement(containerOnly){\r\n\t\tif(!this.loaded){\r\n\t\t\tthis.loaded = true;\r\n\t\t\tif(!containerOnly){\r\n\t\t\t\tthis.layoutElement();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tgetValue(){\r\n\t\treturn this.value;\r\n\t}\r\n\r\n\tgetOldValue(){\r\n\t\treturn this.oldValue;\r\n\t}\r\n\r\n\t//////////////////// Actions ////////////////////\r\n\tsetValue(value, mutate){\r\n\t\tvar changed = this.setValueProcessData(value, mutate);\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.dispatch(\"cell-value-updated\", this);\r\n\r\n\t\t\tthis.cellRendered();\r\n\r\n\t\t\tthis.dispatchExternal(\"cellEdited\", this.getComponent());\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetValueProcessData(value, mutate){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(this.value != value){\r\n\r\n\t\t\tchanged = true;\r\n\r\n\t\t\tif(mutate){\r\n\t\t\t\tvalue = this.chain(\"cell-value-changing\", [this, value], null, value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setValueActual(value);\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.dispatch(\"cell-value-changed\", this);\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\tsetValueActual(value){\r\n\t\tthis.oldValue = this.value;\r\n\r\n\t\tthis.value = value;\r\n\r\n\t\tthis.dispatch(\"cell-value-save-before\", this);\r\n\r\n\t\tthis.column.setFieldValue(this.row.data, value);\r\n\r\n\t\tthis.dispatch(\"cell-value-save-after\", this);\r\n\r\n\t\tif(this.loaded){\r\n\t\t\tthis.layoutElement();\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutElement(){\r\n\t\tthis._generateContents();\r\n\t\tthis._generateTooltip();\r\n\r\n\t\tthis.dispatch(\"cell-layout\", this);\r\n\t}\r\n\r\n\tsetWidth(){\r\n\t\tthis.width = this.column.width;\r\n\t\tthis.element.style.width = this.column.widthStyled;\r\n\t}\r\n\r\n\tclearWidth(){\r\n\t\tthis.width = \"\";\r\n\t\tthis.element.style.width = \"\";\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\treturn this.width || this.element.offsetWidth;\r\n\t}\r\n\r\n\tsetMinWidth(){\r\n\t\tthis.minWidth = this.column.minWidth;\r\n\t\tthis.element.style.minWidth = this.column.minWidthStyled;\r\n\t}\r\n\r\n\tsetMaxWidth(){\r\n\t\tthis.maxWidth = this.column.maxWidth;\r\n\t\tthis.element.style.maxWidth = this.column.maxWidthStyled;\r\n\t}\r\n\r\n\tcheckHeight(){\r\n\t\t// var height = this.element.css(\"height\");\r\n\t\tthis.row.reinitializeHeight();\r\n\t}\r\n\r\n\tclearHeight(){\r\n\t\tthis.element.style.height = \"\";\r\n\t\tthis.height = null;\r\n\t}\r\n\r\n\tsetHeight(){\r\n\t\tthis.height = this.row.height;\r\n\t\tthis.element.style.height =  this.row.heightStyled;\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.height || this.element.offsetHeight;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis.element.style.display = this.column.vertAlign ? \"inline-flex\" : \"\";\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis.element.style.display = \"none\";\r\n\t}\r\n\r\n\tdelete(){\r\n\t\tthis.dispatch(\"cell-delete\", this);\r\n\r\n\t\tif(!this.table.rowManager.redrawBlock && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.column.deleteCell(this);\r\n\t\tthis.row.deleteCell(this);\r\n\t\tthis.calcs = {};\r\n\t}\r\n\r\n\tgetIndex(){\r\n\t\treturn this.row.getCellIndex(this);\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new CellComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}","//public column object\r\nexport default class ColumnComponent {\r\n\tconstructor (column){\r\n\t\tthis._column = column;\r\n\t\tthis.type = \"ColumnComponent\";\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._column.table.componentFunctionBinder.handle(\"column\", target._column, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._column.getElement();\r\n\t}\r\n\r\n\tgetDefinition(){\r\n\t\treturn this._column.getDefinition();\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._column.getField();\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._column.cells.forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tisVisible(){\r\n\t\treturn this._column.visible;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tif(this._column.isGroup){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\tcolumn.show();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis._column.show();\r\n\t\t}\r\n\t}\r\n\r\n\thide(){\r\n\t\tif(this._column.isGroup){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\tcolumn.hide();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis._column.hide();\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tif(this._column.visible){\r\n\t\t\tthis.hide();\r\n\t\t}else{\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn this._column.delete();\r\n\t}\r\n\r\n\tgetSubColumns(){\r\n\t\tvar output = [];\r\n\r\n\t\tif(this._column.columns.length){\r\n\t\t\tthis._column.columns.forEach(function(column){\r\n\t\t\t\toutput.push(column.getComponent());\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetParentColumn(){\r\n\t\treturn this._column.parent instanceof Column ? this._column.parent.getComponent() : false;\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._column;\r\n\t}\r\n\r\n\tscrollTo(){\r\n\t\treturn this._column.table.columnManager.scrollToColumn(this._column);\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._column.table;\r\n\t}\r\n\r\n\tmove(to, after){\r\n\t\tvar toColumn = this._column.table.columnManager.findColumn(to);\r\n\r\n\t\tif(toColumn){\r\n\t\t\tthis._column.table.columnManager.moveColumn(this._column, toColumn, after)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching column found:\", toColumn);\r\n\t\t}\r\n\t}\r\n\r\n\tgetNextColumn(){\r\n\t\tvar nextCol = this._column.nextColumn();\r\n\r\n\t\treturn nextCol ? nextCol.getComponent() : false;\r\n\t}\r\n\r\n\tgetPrevColumn(){\r\n\t\tvar prevCol = this._column.prevColumn();\r\n\r\n\t\treturn prevCol ? prevCol.getComponent() : false;\r\n\t}\r\n\r\n\tupdateDefinition(updates){\r\n\t\treturn this._column.updateDefinition(updates);\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\treturn this._column.getWidth();\r\n\t}\r\n\r\n\tsetWidth(width){\r\n\t\tvar result;\r\n\r\n\t\tif(width === true){\r\n\t\t\tresult =  this._column.reinitializeWidth(true);\r\n\t\t}else{\r\n\t\t\tresult =  this._column.setWidth(width);\r\n\t\t}\r\n\r\n\t\tthis._column.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\treturn result;\r\n\t}\r\n}","export default {\r\n\t\"title\": undefined,\r\n\t\"field\": undefined,\r\n\t\"columns\": undefined,\r\n\t\"visible\": undefined,\r\n\t\"hozAlign\": undefined,\r\n\t\"vertAlign\": undefined,\r\n\t\"width\": undefined,\r\n\t\"minWidth\": 40,\r\n\t\"maxWidth\": undefined,\r\n\t\"tooltip\": undefined,\r\n\t\"cssClass\": undefined,\r\n\t\"variableHeight\": undefined,\r\n\t\"headerTooltip\": undefined,\r\n\t\"headerVertical\": undefined,\r\n\t\"headerHozAlign\": undefined,\r\n\t\"editableTitle\": undefined,\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport ColumnComponent from './ColumnComponent.js';\r\nimport defaultOptions from './defaults/options.js';\r\n\r\nimport Cell from '../cell/Cell.js';\r\n\r\nclass Column extends CoreFeature{\r\n\r\n\tconstructor(def, parent){\r\n\t\tsuper(parent.table);\r\n\r\n\t\tthis.definition = def; //column definition\r\n\t\tthis.parent = parent; //hold parent object\r\n\t\tthis.type = \"column\"; //type of element\r\n\t\tthis.columns = []; //child columns\r\n\t\tthis.cells = []; //cells bound to this column\r\n\t\tthis.element = this.createElement(); //column header element\r\n\t\tthis.contentElement = false;\r\n\t\tthis.titleHolderElement = false;\r\n\t\tthis.titleElement = false;\r\n\t\tthis.groupElement = this.createGroupElement(); //column group holder element\r\n\t\tthis.isGroup = false;\r\n\t\tthis.tooltip = false; //hold column tooltip\r\n\t\tthis.hozAlign = \"\"; //horizontal text alignment\r\n\t\tthis.vertAlign = \"\"; //vert text alignment\r\n\r\n\t\t//multi dimensional filed handling\r\n\t\tthis.field =\"\";\r\n\t\tthis.fieldStructure = \"\";\r\n\t\tthis.getFieldValue = \"\";\r\n\t\tthis.setFieldValue = \"\";\r\n\r\n\t\tthis.titleFormatterRendered = false;\r\n\r\n\t\tthis.mapDefinitions();\r\n\r\n\t\tthis.setField(this.definition.field);\r\n\r\n\t\tthis.modules = {}; //hold module variables;\r\n\r\n\t\tthis.width = null; //column width\r\n\t\tthis.widthStyled = \"\"; //column width prestyled to improve render efficiency\r\n\t\tthis.maxWidth = null; //column maximum width\r\n\t\tthis.maxWidthStyled = \"\"; //column maximum prestyled to improve render efficiency\r\n\t\tthis.minWidth = null; //column minimum width\r\n\t\tthis.minWidthStyled = \"\"; //column minimum prestyled to improve render efficiency\r\n\t\tthis.widthFixed = false; //user has specified a width for this column\r\n\r\n\t\tthis.visible = true; //default visible state\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\t//initialize column\r\n\t\tif(this.definition.columns){\r\n\r\n\t\t\tthis.isGroup = true;\r\n\r\n\t\t\tthis.definition.columns.forEach((def, i) => {\r\n\t\t\t\tvar newCol = new Column(def, this);\r\n\t\t\t\tthis.attachColumn(newCol);\r\n\t\t\t});\r\n\r\n\t\t\tthis.checkColumnVisibility();\r\n\t\t}else{\r\n\t\t\tparent.registerColumnField(this);\r\n\t\t}\r\n\r\n\t\tthis._initialize();\r\n\r\n\t\tthis.bindModuleColumns();\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-col\");\r\n\t\tel.setAttribute(\"role\", \"columnheader\");\r\n\t\tel.setAttribute(\"aria-sort\", \"none\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateGroupElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-col-group-cols\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tmapDefinitions(){\r\n\t\tvar defaults = this.table.options.columnDefaults;\r\n\r\n\t\t//map columnDefaults onto column definitions\r\n\t\tif(defaults){\r\n\t\t\tfor(let key in defaults){\r\n\t\t\t\tif(typeof this.definition[key] === \"undefined\"){\r\n\t\t\t\t\tthis.definition[key] = defaults[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.definition = this.table.columnManager.optionsList.generate(Column.defaultOptionList, this.definition)\r\n\t}\r\n\r\n\tcheckDefinition(){\r\n\t\tObject.keys(this.definition).forEach((key) => {\r\n\t\t\tif(Column.defaultOptionList.indexOf(key) === -1){\r\n\t\t\t\tconsole.warn(\"Invalid column definition option in '\" + (this.field || this.definition.title) + \"' column:\", key)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetField(field){\r\n\t\tthis.field = field;\r\n\t\tthis.fieldStructure = field ? (this.table.options.nestedFieldSeparator ? field.split(this.table.options.nestedFieldSeparator) : [field]) : [];\r\n\t\tthis.getFieldValue = this.fieldStructure.length > 1 ? this._getNestedData : this._getFlatData;\r\n\t\tthis.setFieldValue = this.fieldStructure.length > 1 ? this._setNestedData : this._setFlatData;\r\n\t}\r\n\r\n\t//register column position with column manager\r\n\tregisterColumnPosition(column){\r\n\t\tthis.parent.registerColumnPosition(column);\r\n\t}\r\n\r\n\t//register column position with column manager\r\n\tregisterColumnField(column){\r\n\t\tthis.parent.registerColumnField(column);\r\n\t}\r\n\r\n\t//trigger position registration\r\n\treRegisterPosition(){\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tcolumn.reRegisterPosition();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.registerColumnPosition(this);\r\n\t\t}\r\n\t}\r\n\r\n\t_mapDepricatedFunctionality(){\r\n\t\t//all previously deprecated functionality removed in the 5.0 release\r\n\t}\r\n\r\n\tsetTooltip(){\r\n\t\tvar def = this.definition;\r\n\r\n\t\t//set header tooltips\r\n\t\tvar tooltip = def.headerTooltip;\r\n\r\n\t\tif(tooltip){\r\n\t\t\tif(tooltip === true){\r\n\t\t\t\tif(def.field){\r\n\t\t\t\t\tthis.langBind(\"columns|\" + def.field, (value) => {\r\n\t\t\t\t\t\tthis.element.setAttribute(\"title\", value || def.title);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.element.setAttribute(\"title\", def.title);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tif(typeof(tooltip) == \"function\"){\r\n\t\t\t\t\ttooltip = tooltip(this.getComponent());\r\n\r\n\t\t\t\t\tif(tooltip === false){\r\n\t\t\t\t\t\ttooltip = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.element.setAttribute(\"title\", tooltip);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tthis.element.setAttribute(\"title\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element\r\n\t_initialize(){\r\n\t\tvar def = this.definition;\r\n\r\n\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\tif(def.headerVertical){\r\n\t\t\tthis.element.classList.add(\"tabulator-col-vertical\");\r\n\r\n\t\t\tif(def.headerVertical === \"flip\"){\r\n\t\t\t\tthis.element.classList.add(\"tabulator-col-vertical-flip\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.contentElement = this._bindEvents();\r\n\r\n\t\tthis.contentElement = this._buildColumnHeaderContent();\r\n\r\n\t\tthis.element.appendChild(this.contentElement);\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis._buildGroupHeader();\r\n\t\t}else{\r\n\t\t\tthis._buildColumnHeader();\r\n\t\t}\r\n\r\n\t\tthis.setTooltip();\r\n\r\n\t\tthis.dispatch(\"column-init\", this);\r\n\r\n\t\t//update header tooltip on mouse enter\r\n\t\tthis.element.addEventListener(\"mouseenter\", (e) => {\r\n\t\t\tthis.setTooltip();\r\n\t\t});\r\n\t}\r\n\r\n\t_bindEvents(){\r\n\t\tvar def = this.definition,\r\n\t\tdblTap,\ttapHold, tap;\r\n\r\n\t\t//setup header click event bindings\r\n\t\tif(typeof(def.headerClick) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"click\", (e) => {def.headerClick(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerDblClick) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"dblclick\", (e) => {def.headerDblClick(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerContext) == \"function\"){\r\n\t\t\tthis.element.addEventListener(\"contextmenu\", (e) => {def.headerContext(e, this.getComponent());});\r\n\t\t}\r\n\r\n\t\t//setup header tap event bindings\r\n\t\tif(typeof(def.headerTap) == \"function\"){\r\n\t\t\ttap = false;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\ttap = true;\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(tap){\r\n\t\t\t\t\tdef.headerTap(e, this.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttap = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerDblTap) == \"function\"){\r\n\t\t\tdblTap = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\r\n\t\t\t\tif(dblTap){\r\n\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\tdblTap = null;\r\n\r\n\t\t\t\t\tdef.headerDblTap(e, this.getComponent());\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tdblTap = setTimeout(() => {\r\n\t\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\t\tdblTap = null;\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(typeof(def.headerTapHold) == \"function\"){\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\r\n\t\t\t\ttapHold = setTimeout(function(){\r\n\t\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\t\ttapHold = null;\r\n\t\t\t\t\ttap = false;\r\n\t\t\t\t\tdef.headerTapHold(e, this.getComponent());\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element for header\r\n\t_buildColumnHeader(){\r\n\t\tvar def = this.definition,\r\n\t\ttable = this.table;\r\n\r\n\t\tthis.dispatch(\"column-layout\", this);\r\n\r\n\t\t//set column visibility\r\n\t\tif(typeof def.visible != \"undefined\"){\r\n\t\t\tif(def.visible){\r\n\t\t\t\tthis.show(true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.hide(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//asign additional css classes to column header\r\n\t\tif(def.cssClass){\r\n\t\t\tvar classeNames = def.cssClass.split(\" \");\r\n\t\t\tclasseNames.forEach((className) => {\r\n\t\t\t\tthis.element.classList.add(className);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(def.field){\r\n\t\t\tthis.element.setAttribute(\"tabulator-field\", def.field);\r\n\t\t}\r\n\r\n\t\t//set min width if present\r\n\t\tthis.setMinWidth(parseInt(def.minWidth));\r\n\r\n\t\tif(def.maxWidth){\r\n\t\t\tthis.setMaxWidth(parseInt(def.maxWidth));\r\n\t\t}\r\n\r\n\t\tthis.reinitializeWidth();\r\n\r\n\t\t//set tooltip if present\r\n\t\tthis.tooltip = this.definition.tooltip;\r\n\r\n\t\t//set orizontal text alignment\r\n\t\tthis.hozAlign = this.definition.hozAlign;\r\n\t\tthis.vertAlign = this.definition.vertAlign;\r\n\r\n\t\tthis.titleElement.style.textAlign = this.definition.headerHozAlign;\r\n\t}\r\n\r\n\t_buildColumnHeaderContent(){\r\n\t\tvar def = this.definition,\r\n\t\ttable = this.table;\r\n\r\n\t\tvar contentElement = document.createElement(\"div\");\r\n\t\tcontentElement.classList.add(\"tabulator-col-content\");\r\n\r\n\t\tthis.titleHolderElement = document.createElement(\"div\");\r\n\t\tthis.titleHolderElement.classList.add(\"tabulator-col-title-holder\");\r\n\r\n\t\tcontentElement.appendChild(this.titleHolderElement);\r\n\r\n\t\tthis.titleElement = this._buildColumnHeaderTitle();\r\n\r\n\t\tthis.titleHolderElement.appendChild(this.titleElement);\r\n\r\n\t\treturn contentElement;\r\n\t}\r\n\r\n\t//build title element of column\r\n\t_buildColumnHeaderTitle(){\r\n\t\tvar def = this.definition,\r\n\t\ttitle;\r\n\r\n\t\tvar titleHolderElement = document.createElement(\"div\");\r\n\t\ttitleHolderElement.classList.add(\"tabulator-col-title\");\r\n\r\n\t\tif(def.editableTitle){\r\n\t\t\tvar titleElement = document.createElement(\"input\");\r\n\t\t\ttitleElement.classList.add(\"tabulator-title-editor\");\r\n\r\n\t\t\ttitleElement.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\ttitleElement.focus();\r\n\t\t\t});\r\n\r\n\t\t\ttitleElement.addEventListener(\"change\", () => {\r\n\t\t\t\tdef.title = titleElement.value;\r\n\t\t\t\tthis.dispatchExternal(\"columnTitleChanged\", this.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\ttitleHolderElement.appendChild(titleElement);\r\n\r\n\t\t\tif(def.field){\r\n\t\t\t\tthis.langBind(\"columns|\" + def.field, (text) => {\r\n\t\t\t\t\ttitleElement.value = text || (def.title || \"&nbsp;\");\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\ttitleElement.value  = def.title || \"&nbsp;\";\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tif(def.field){\r\n\t\t\t\tthis.langBind(\"columns|\" + def.field, (text) => {\r\n\t\t\t\t\tthis._formatColumnHeaderTitle(titleHolderElement, text || (def.title || \"&nbsp;\"));\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tthis._formatColumnHeaderTitle(titleHolderElement, def.title || \"&nbsp;\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn titleHolderElement;\r\n\t}\r\n\r\n\t_formatColumnHeaderTitle(el, title){\r\n\t\tvar contents = this.chain(\"column-format\", [this, title, el], null, () => {\r\n\t\t\treturn title;\r\n\t\t});\r\n\r\n\t\tswitch(typeof contents){\r\n\t\t\tcase \"object\":\r\n\t\t\tif(contents instanceof Node){\r\n\t\t\t\tel.appendChild(contents);\r\n\t\t\t}else{\r\n\t\t\t\tel.innerHTML = \"\";\r\n\t\t\t\tconsole.warn(\"Format Error - Title formatter has returned a type of object, the only valid formatter object return is an instance of Node, the formatter returned:\", contents);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"undefined\":\r\n\t\t\tcase \"null\":\r\n\t\t\tel.innerHTML = \"\";\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\tel.innerHTML = contents;\r\n\t\t}\r\n\t}\r\n\r\n\t//build header element for column group\r\n\t_buildGroupHeader(){\r\n\t\tthis.element.classList.add(\"tabulator-col-group\");\r\n\t\tthis.element.setAttribute(\"role\", \"columngroup\");\r\n\t\tthis.element.setAttribute(\"aria-title\", this.definition.title);\r\n\r\n\t\t//asign additional css classes to column header\r\n\t\tif(this.definition.cssClass){\r\n\t\t\tvar classeNames = this.definition.cssClass.split(\" \");\r\n\t\t\tclasseNames.forEach((className) => {\r\n\t\t\t\tthis.element.classList.add(className);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.titleElement.style.textAlign = this.definition.headerHozAlign;\r\n\r\n\t\tthis.element.appendChild(this.groupElement);\r\n\t}\r\n\r\n\t//flat field lookup\r\n\t_getFlatData(data){\r\n\t\treturn data[this.field];\r\n\t}\r\n\r\n\t//nested field lookup\r\n\t_getNestedData(data){\r\n\t\tvar dataObj = data,\r\n\t\tstructure = this.fieldStructure,\r\n\t\tlength = structure.length,\r\n\t\toutput;\r\n\r\n\t\tfor(let i = 0; i < length; i++){\r\n\r\n\t\t\tdataObj = dataObj[structure[i]];\r\n\r\n\t\t\toutput = dataObj;\r\n\r\n\t\t\tif(!dataObj){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//flat field set\r\n\t_setFlatData(data, value){\r\n\t\tif(this.field){\r\n\t\t\tdata[this.field] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t//nested field set\r\n\t_setNestedData(data, value){\r\n\t\tvar dataObj = data,\r\n\t\tstructure = this.fieldStructure,\r\n\t\tlength = structure.length;\r\n\r\n\t\tfor(let i = 0; i < length; i++){\r\n\r\n\t\t\tif(i == length -1){\r\n\t\t\t\tdataObj[structure[i]] = value;\r\n\t\t\t}else{\r\n\t\t\t\tif(!dataObj[structure[i]]){\r\n\t\t\t\t\tif(typeof value !== \"undefined\"){\r\n\t\t\t\t\t\tdataObj[structure[i]] = {};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataObj = dataObj[structure[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//attach column to this group\r\n\tattachColumn(column){\r\n\t\tif(this.groupElement){\r\n\t\t\tthis.columns.push(column);\r\n\t\t\tthis.groupElement.appendChild(column.getElement());\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Warning - Column being attached to another column instead of column group\");\r\n\t\t}\r\n\t}\r\n\r\n\t//vertically align header in column\r\n\tverticalAlign(alignment, height){\r\n\r\n\t\t//calculate height of column header and group holder element\r\n\t\tvar parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : (height || this.parent.getHeadersElement().clientHeight);\r\n\t\t// var parentHeight = this.parent.isGroup ? this.parent.getGroupElement().clientHeight : this.parent.getHeadersElement().clientHeight;\r\n\r\n\t\tthis.element.style.height = parentHeight + \"px\";\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.groupElement.style.minHeight = (parentHeight - this.contentElement.offsetHeight) + \"px\";\r\n\t\t}\r\n\r\n\t\t//vertically align cell contents\r\n\t\tif(!this.isGroup && alignment !== \"top\"){\r\n\t\t\tif(alignment === \"bottom\"){\r\n\t\t\t\tthis.element.style.paddingTop = (this.element.clientHeight - this.contentElement.offsetHeight) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.style.paddingTop = ((this.element.clientHeight - this.contentElement.offsetHeight) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.verticalAlign(alignment);\r\n\t\t});\r\n\t}\r\n\r\n\t//clear vertical alignmenet\r\n\tclearVerticalAlign(){\r\n\t\tthis.element.style.paddingTop = \"\";\r\n\t\tthis.element.style.height = \"\";\r\n\t\tthis.element.style.minHeight = \"\";\r\n\t\tthis.groupElement.style.minHeight = \"\";\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.clearVerticalAlign();\r\n\t\t});\r\n\t}\r\n\r\n\tbindModuleColumns (){\r\n\t\t//check if rownum formatter is being used on a column\r\n\t\tif(this.definition.formatter == \"rownum\"){\r\n\t\t\tthis.table.rowManager.rowNumColumn = this;\r\n\t\t}\r\n\t}\r\n\r\n\t//// Retreive Column Information ////\r\n\t//return column header element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return colunm group element\r\n\tgetGroupElement(){\r\n\t\treturn this.groupElement;\r\n\t}\r\n\r\n\t//return field name\r\n\tgetField(){\r\n\t\treturn this.field;\r\n\t}\r\n\r\n\t//return the first column in a group\r\n\tgetFirstColumn(){\r\n\t\tif(!this.isGroup){\r\n\t\t\treturn this;\r\n\t\t}else{\r\n\t\t\tif(this.columns.length){\r\n\t\t\t\treturn this.columns[0].getFirstColumn();\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//return the last column in a group\r\n\tgetLastColumn(){\r\n\t\tif(!this.isGroup){\r\n\t\t\treturn this;\r\n\t\t}else{\r\n\t\t\tif(this.columns.length){\r\n\t\t\t\treturn this.columns[this.columns.length -1].getLastColumn();\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//return all columns in a group\r\n\tgetColumns(){\r\n\t\treturn this.columns;\r\n\t}\r\n\r\n\t//return all columns in a group\r\n\tgetCells(){\r\n\t\treturn this.cells;\r\n\t}\r\n\r\n\t//retreive the top column in a group of columns\r\n\tgetTopColumn(){\r\n\t\tif(this.parent.isGroup){\r\n\t\t\treturn this.parent.getTopColumn();\r\n\t\t}else{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\t//return column definition object\r\n\tgetDefinition(updateBranches){\r\n\t\tvar colDefs = [];\r\n\r\n\t\tif(this.isGroup && updateBranches){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tcolDefs.push(column.getDefinition(true));\r\n\t\t\t});\r\n\r\n\t\t\tthis.definition.columns = colDefs;\r\n\t\t}\r\n\r\n\t\treturn this.definition;\r\n\t}\r\n\r\n\t//////////////////// Actions ////////////////////\r\n\tcheckColumnVisibility(){\r\n\t\tvar visible = false;\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvisible = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(visible){\r\n\t\t\tthis.show();\r\n\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\r\n\t\t}else{\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t//show column\r\n\tshow(silent, responsiveToggle){\r\n\t\tif(!this.visible){\r\n\t\t\tthis.visible = true;\r\n\r\n\t\t\tthis.element.style.display = \"\";\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.checkColumnVisibility();\r\n\t\t\t}\r\n\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.show();\r\n\t\t\t});\r\n\r\n\t\t\tif(!this.isGroup && this.width === null){\r\n\t\t\t\tthis.reinitializeWidth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.columnManager.verticalAlignHeaders();\r\n\r\n\t\t\tthis.dispatch(\"column-show\", this, responsiveToggle);\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.silent){\r\n\t\t\t\tthis.table.columnManager.renderer.rerenderColumns();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//hide column\r\n\thide(silent, responsiveToggle){\r\n\t\tif(this.visible){\r\n\t\t\tthis.visible = false;\r\n\r\n\t\t\tthis.element.style.display = \"none\";\r\n\r\n\t\t\tthis.table.columnManager.verticalAlignHeaders();\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.checkColumnVisibility();\r\n\t\t\t}\r\n\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.hide();\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatch(\"column-hide\", this, responsiveToggle);\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.dispatchExternal(\"columnVisibilityChanged\", this.getComponent(), false);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.silent){\r\n\t\t\t\tthis.table.columnManager.renderer.rerenderColumns();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmatchChildWidths(){\r\n\t\tvar childWidth = 0;\r\n\r\n\t\tif(this.contentElement && this.columns.length){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tif(column.visible){\r\n\t\t\t\t\tchildWidth += column.getWidth();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.contentElement.style.maxWidth = (childWidth - 1) + \"px\";\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.matchChildWidths();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremoveChild(child){\r\n\t\tvar index = this.columns.indexOf(child);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columns.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif(!this.columns.length){\r\n\t\t\tthis.delete();\r\n\t\t}\r\n\t}\r\n\r\n\tsetWidth(width){\r\n\t\tthis.widthFixed = true;\r\n\t\tthis.setWidthActual(width);\r\n\t}\r\n\r\n\tsetWidthActual(width){\r\n\t\tif(isNaN(width)){\r\n\t\t\twidth = Math.floor((this.table.element.clientWidth/100) * parseInt(width));\r\n\t\t}\r\n\r\n\t\twidth = Math.max(this.minWidth, width);\r\n\r\n\t\tif(this.maxWidth){\r\n\t\t\twidth = Math.min(this.maxWidth, width);\r\n\t\t}\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.widthStyled = width ? width + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.width = this.widthStyled;\r\n\r\n\t\tif(!this.isGroup){\r\n\t\t\tthis.cells.forEach(function(cell){\r\n\t\t\t\tcell.setWidth();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.parent.isGroup){\r\n\t\t\tthis.parent.matchChildWidths();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-width\", this);\r\n\t}\r\n\r\n\tcheckCellHeights(){\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tif(cell.row.heightInitialized){\r\n\t\t\t\tif(cell.row.getElement().offsetParent !== null){\r\n\t\t\t\t\trows.push(cell.row);\r\n\t\t\t\t\tcell.row.clearCellHeight();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcell.row.heightInitialized = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\trow.calcHeight();\r\n\t\t});\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\trow.setCellHeight();\r\n\t\t});\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\tvar width = 0;\r\n\r\n\t\tif(this.isGroup){\r\n\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\tif(column.visible){\r\n\t\t\t\t\twidth += column.getWidth();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\twidth = this.width;\r\n\t\t}\r\n\r\n\t\treturn width;\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.element.offsetHeight;\r\n\t}\r\n\r\n\tsetMinWidth(minWidth){\r\n\t\tthis.minWidth = minWidth;\r\n\t\tthis.minWidthStyled = minWidth ? minWidth + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.minWidth = this.minWidthStyled;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setMinWidth();\r\n\t\t});\r\n\t}\r\n\r\n\tsetMaxWidth(maxWidth){\r\n\t\tthis.maxWidth = maxWidth;\r\n\t\tthis.maxWidthStyled = maxWidth ? maxWidth + \"px\" : \"\";\r\n\r\n\t\tthis.element.style.maxWidth = this.maxWidthStyled;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setMaxWidth();\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar index;\r\n\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tthis.columns.forEach(function(column){\r\n\t\t\t\t\tcolumn.delete();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"column-delete\", this);\r\n\r\n\t\t\tvar cellCount = this.cells.length;\r\n\r\n\t\t\tfor(let i = 0; i < cellCount; i++){\r\n\t\t\t\tthis.cells[0].delete();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.element.parentNode){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element = false;\r\n\t\t\tthis.contentElement = false;\r\n\t\t\tthis.titleElement = false;\r\n\t\t\tthis.groupElement = false;\r\n\r\n\t\t\tif(this.parent.isGroup){\r\n\t\t\t\tthis.parent.removeChild(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.columnManager.deregisterColumn(this);\r\n\r\n\t\t\tthis.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tcolumnRendered(){\r\n\t\tif(this.titleFormatterRendered){\r\n\t\t\tthis.titleFormatterRendered();\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\t//generate cell for this column\r\n\tgenerateCell(row){\r\n\t\tvar cell = new Cell(this, row);\r\n\r\n\t\tthis.cells.push(cell);\r\n\r\n\t\treturn cell;\r\n\t}\r\n\r\n\tnextColumn(){\r\n\t\tvar index = this.table.columnManager.findColumnIndex(this);\r\n\t\treturn index > -1 ? this._nextVisibleColumn(index + 1) : false;\r\n\t}\r\n\r\n\t_nextVisibleColumn(index){\r\n\t\tvar column = this.table.columnManager.getColumnByIndex(index);\r\n\t\treturn !column || column.visible ? column : this._nextVisibleColumn(index + 1);\r\n\t}\r\n\r\n\tprevColumn(){\r\n\t\tvar index = this.table.columnManager.findColumnIndex(this);\r\n\t\treturn index > -1 ? this._prevVisibleColumn(index - 1) : false;\r\n\t}\r\n\r\n\t_prevVisibleColumn(index){\r\n\t\tvar column = this.table.columnManager.getColumnByIndex(index);\r\n\t\treturn !column || column.visible ? column : this._prevVisibleColumn(index - 1);\r\n\t}\r\n\r\n\treinitializeWidth(force){\r\n\t\tthis.widthFixed = false;\r\n\r\n\t\t//set width if present\r\n\t\tif(typeof this.definition.width !== \"undefined\" && !force){\r\n\t\t\tthis.setWidth(this.definition.width);\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"column-width-fit-before\", this);\r\n\r\n\t\tthis.fitToData();\r\n\r\n\t\tthis.dispatch(\"column-width-fit-after\", this);\r\n\t}\r\n\r\n\t//set column width to maximum cell width for non group columns\r\n\tfitToData(){\r\n\t\tif(this.isGroup){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!this.widthFixed){\r\n\t\t\tthis.element.style.width = \"\";\r\n\r\n\t\t\tthis.cells.forEach((cell) => {\r\n\t\t\t\tcell.clearWidth();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar maxWidth = this.element.offsetWidth;\r\n\r\n\t\tif(!this.width || !this.widthFixed){\r\n\t\t\tthis.cells.forEach((cell) => {\r\n\t\t\t\tvar width = cell.getWidth();\r\n\r\n\t\t\t\tif(width > maxWidth){\r\n\t\t\t\t\tmaxWidth = width;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(maxWidth){\r\n\t\t\t\tthis.setWidthActual(maxWidth + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateDefinition(updates){\r\n\t\tvar definition;\r\n\r\n\t\tif(!this.isGroup){\r\n\t\t\tif(!this.parent.isGroup){\r\n\t\t\t\tdefinition = Object.assign({}, this.getDefinition());\r\n\t\t\t\tdefinition = Object.assign(definition, updates);\r\n\r\n\t\t\t\treturn this.table.columnManager.addColumn(definition, false, this)\r\n\t\t\t\t.then((column) => {\r\n\r\n\t\t\t\t\tif(definition.field == this.field){\r\n\t\t\t\t\t\tthis.field = false; //cleair field name to prevent deletion of duplicate column from arrays\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this.delete()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\r\n\t\t\t\treturn Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Column Update Error - The updateDefinition function is only available on ungrouped columns\");\r\n\t\t\treturn Promise.reject(\"Column Update Error - The updateDefinition function is only available on columns, not column groups\");\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteCell(cell){\r\n\t\tvar index = this.cells.indexOf(cell);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.cells.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new ColumnComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}\r\n\r\nColumn.defaultOptionList = defaultOptions;\r\n\r\nexport default Column;","//public row object\r\nexport default class RowComponent {\r\n\r\n\tconstructor (row){\r\n\t\tthis._row = row;\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._row.table.componentFunctionBinder.handle(\"row\", target._row, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\treturn this._row.getData(transform);\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._row.getElement();\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis._row.getCells().forEach(function(cell){\r\n\t\t\tcells.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar cell = this._row.getCell(column);\r\n\t\treturn cell ? cell.getComponent() : false;\r\n\t}\r\n\r\n\tgetIndex(){\r\n\t\treturn this._row.getData(\"data\")[this._row.table.options.index];\r\n\t}\r\n\r\n\tgetPosition(active){\r\n\t\treturn this._row.table.rowManager.getRowPosition(this._row, active);\r\n\t}\r\n\r\n\tdelete(){\r\n\t\treturn this._row.delete();\r\n\t}\r\n\r\n\tscrollTo(){\r\n\t\treturn this._row.table.rowManager.scrollToRow(this._row);\r\n\t}\r\n\r\n\tmove(to, after){\r\n\t\tthis._row.moveToRow(to, after);\r\n\t}\r\n\r\n\tupdate(data){\r\n\t\treturn this._row.updateData(data);\r\n\t}\r\n\r\n\tnormalizeHeight(){\r\n\t\tthis._row.normalizeHeight(true);\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._row;\r\n\t}\r\n\r\n\treformat(){\r\n\t\treturn this._row.reinitialize();\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._row.table;\r\n\t}\r\n\r\n\tgetNextRow(){\r\n\t\tvar row = this._row.nextRow();\r\n\t\treturn row ? row.getComponent() : row;\r\n\t}\r\n\r\n\tgetPrevRow(){\r\n\t\tvar row = this._row.prevRow();\r\n\t\treturn row ? row.getComponent() : row;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport RowComponent from './RowComponent.js';\r\nimport Helpers from '../tools/Helpers.js';\r\n\r\nexport default class Row extends CoreFeature{\r\n\tconstructor (data, parent, type = \"row\"){\r\n\t\tsuper(parent.table);\r\n\r\n\t\tthis.parent = parent;\r\n\t\tthis.data = {};\r\n\t\tthis.type = type; //type of element\r\n\t\tthis.element = false;\r\n\t\tthis.modules = {}; //hold module variables;\r\n\t\tthis.cells = [];\r\n\t\tthis.height = 0; //hold element height\r\n\t\tthis.heightStyled = \"\"; //hold element height prestyled to improve render efficiency\r\n\t\tthis.manualHeight = false; //user has manually set row height\r\n\t\tthis.outerHeight = 0; //holde lements outer height\r\n\t\tthis.initialized = false; //element has been rendered\r\n\t\tthis.heightInitialized = false; //element has resized cells to fit\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.created = false;\r\n\r\n\t\tthis.setData(data);\r\n\t}\r\n\r\n\tcreate(){\r\n\t\tif(!this.created){\r\n\t\t\tthis.created = true;\r\n\t\t\tthis.generateElement();\r\n\t\t}\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\tel.setAttribute(\"role\", \"row\");\r\n\r\n\t\tthis.element = el;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\tthis.create();\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tdetachElement(){\r\n\t\tif (this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.createElement();\r\n\t\tthis.dispatch(\"row-init\", this);\r\n\t}\r\n\r\n\tgenerateCells(){\r\n\t\tthis.cells = this.table.columnManager.generateCells(this);\r\n\t}\r\n\r\n\t//functions to setup on first render\r\n\tinitialize(force){\r\n\t\tthis.create();\r\n\r\n\t\tif(!this.initialized || force){\r\n\r\n\t\t\tthis.deleteCells();\r\n\r\n\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\tthis.dispatch(\"row-layout-before\", this);\r\n\r\n\t\t\tthis.generateCells();\r\n\r\n\t\t\tthis.table.columnManager.renderer.renderRowCells(this);\r\n\r\n\t\t\tif(force){\r\n\t\t\t\tthis.normalizeHeight();\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-layout\", this);\r\n\r\n\t\t\tif(this.table.options.rowFormatter){\r\n\t\t\t\tthis.table.options.rowFormatter(this.getComponent());\r\n\t\t\t}\r\n\r\n\t\t\tthis.initialized = true;\r\n\r\n\t\t\tthis.dispatch(\"row-layout-after\", this);\r\n\t\t}else{\r\n\t\t\tthis.table.columnManager.renderer.rerenderRowCells(this);\r\n\t\t}\r\n\t}\r\n\r\n\treinitializeHeight(){\r\n\t\tthis.heightInitialized = false;\r\n\r\n\t\tif(this.element && this.element.offsetParent !== null){\r\n\t\t\tthis.normalizeHeight(true);\r\n\t\t}\r\n\t}\r\n\r\n\tdeinitializeHeight(){\r\n\t\tthis.heightInitialized = false;\r\n\t}\r\n\r\n\treinitialize(children){\r\n\t\tthis.initialized = false;\r\n\t\tthis.heightInitialized = false;\r\n\r\n\t\tif(!this.manualHeight){\r\n\t\t\tthis.height = 0;\r\n\t\t\tthis.heightStyled = \"\";\r\n\t\t}\r\n\r\n\t\tif(this.element && this.element.offsetParent !== null){\r\n\t\t\tthis.initialize(true);\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"row-relayout\", this);\r\n\t}\r\n\r\n\t//get heights when doing bulk row style calcs in virtual DOM\r\n\tcalcHeight(force){\r\n\r\n\t\tvar maxHeight = 0,\r\n\t\tminHeight = this.table.options.resizableRows ? this.element.clientHeight : 0;\r\n\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tvar height = cell.getHeight();\r\n\t\t\tif(height > maxHeight){\r\n\t\t\t\tmaxHeight = height;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(force){\r\n\t\t\tthis.height = Math.max(maxHeight, minHeight);\r\n\t\t}else{\r\n\t\t\tthis.height = this.manualHeight ? this.height : Math.max(maxHeight, minHeight);\r\n\t\t}\r\n\r\n\t\tthis.heightStyled = this.height ? this.height + \"px\" : \"\";\r\n\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t}\r\n\r\n\t//set of cells\r\n\tsetCellHeight(){\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.setHeight();\r\n\t\t});\r\n\r\n\t\tthis.heightInitialized = true;\r\n\t}\r\n\r\n\tclearCellHeight(){\r\n\t\tthis.cells.forEach(function(cell){\r\n\t\t\tcell.clearHeight();\r\n\t\t});\r\n\t}\r\n\r\n\t//normalize the height of elements in the row\r\n\tnormalizeHeight(force){\r\n\t\tif(force){\r\n\t\t\tthis.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis.calcHeight(force);\r\n\r\n\t\tthis.setCellHeight();\r\n\t}\r\n\r\n\t//set height of rows\r\n\tsetHeight(height, force){\r\n\t\tif(this.height != height || force){\r\n\r\n\t\t\tthis.manualHeight = true;\r\n\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.heightStyled = height ? height + \"px\" : \"\";\r\n\r\n\t\t\tthis.setCellHeight();\r\n\r\n\t\t\t// this.outerHeight = this.element.outerHeight();\r\n\t\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//return rows outer height\r\n\tgetHeight(){\r\n\t\treturn this.outerHeight;\r\n\t}\r\n\r\n\t//return rows outer Width\r\n\tgetWidth(){\r\n\t\treturn this.element.offsetWidth;\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\tdeleteCell(cell){\r\n\t\tvar index = this.cells.indexOf(cell);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.cells.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////// Data Management /////////////////\r\n\tsetData(data){\r\n\t\tthis.data = this.chain(\"row-data-init-before\", [this, data], undefined, data);\r\n\r\n\t\tthis.dispatch(\"row-data-init-after\", this);\r\n\t}\r\n\r\n\t//update the rows data\r\n\tupdateData(updatedData){\r\n\t\tvar visible = this.element && Helpers.elVisible(this.element),\r\n\t\ttempData = {},\r\n\t\tnewRowData;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(typeof updatedData === \"string\"){\r\n\t\t\t\tupdatedData = JSON.parse(updatedData);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-save-before\", this);\r\n\r\n\t\t\tif(this.subscribed(\"row-data-changing\")){\r\n\t\t\t\ttempData = Object.assign(tempData, this.data);\r\n\t\t\t\ttempData = Object.assign(tempData, updatedData);\r\n\t\t\t}\r\n\r\n\t\t\tnewRowData = this.chain(\"row-data-changing\", [this, tempData, updatedData], null, updatedData);\r\n\r\n\t\t\t//set data\r\n\t\t\tfor (var attrname in newRowData) {\r\n\t\t\t\tthis.data[attrname] = newRowData[attrname];\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-save-after\", this);\r\n\r\n\t\t\t//update affected cells only\r\n\t\t\tfor (var attrname in updatedData) {\r\n\r\n\t\t\t\tlet columns = this.table.columnManager.getColumnsByFieldRoot(attrname);\r\n\r\n\t\t\t\tcolumns.forEach((column) => {\r\n\t\t\t\t\tlet cell = this.getCell(column.getField());\r\n\r\n\t\t\t\t\tif(cell){\r\n\t\t\t\t\t\tlet value = column.getFieldValue(newRowData);\r\n\t\t\t\t\t\tif(cell.getValue() != value){\r\n\t\t\t\t\t\t\tcell.setValueProcessData(value);\r\n\r\n\t\t\t\t\t\t\tif(visible){\r\n\t\t\t\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t//Partial reinitialization if visible\r\n\t\t\tif(visible){\r\n\t\t\t\tthis.normalizeHeight(true);\r\n\r\n\t\t\t\tif(this.table.options.rowFormatter){\r\n\t\t\t\t\tthis.table.options.rowFormatter(this.getComponent());\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.initialized = false;\r\n\t\t\t\tthis.height = 0;\r\n\t\t\t\tthis.heightStyled = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"row-data-changed\", this, visible, updatedData);\r\n\r\n\t\t\t//this.reinitialize();\r\n\r\n\t\t\tthis.dispatchExternal(\"rowUpdated\", this.getComponent());\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t\t}\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\tgetData(transform){\r\n\t\tif(transform){\r\n\t\t\treturn this.chain(\"row-data-retrieve\", [this, transform], null, this.data);\r\n\t\t}\r\n\r\n\t\treturn this.data;\r\n\t}\r\n\r\n\tgetCell(column){\r\n\t\tvar match = false;\r\n\r\n\t\tcolumn = this.table.columnManager.findColumn(column);\r\n\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.generateCells();\r\n\t\t}\r\n\r\n\t\tmatch = this.cells.find(function(cell){\r\n\t\t\treturn cell.column === column;\r\n\t\t});\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetCellIndex(findCell){\r\n\t\treturn this.cells.findIndex(function(cell){\r\n\t\t\treturn cell === findCell;\r\n\t\t});\r\n\t}\r\n\r\n\tfindCell(subject){\r\n\t\treturn this.cells.find((cell) => {\r\n\t\t\treturn cell.element === subject;\r\n\t\t});\r\n\t}\r\n\r\n\tgetCells(){\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.generateCells();\r\n\t\t}\r\n\r\n\t\treturn this.cells;\r\n\t}\r\n\r\n\tnextRow(){\r\n\t\tvar row = this.table.rowManager.nextDisplayRow(this, true);\r\n\t\treturn row || false;\r\n\t}\r\n\r\n\tprevRow(){\r\n\t\tvar row = this.table.rowManager.prevDisplayRow(this, true);\r\n\t\treturn row || false;\r\n\t}\r\n\r\n\tmoveToRow(to, before){\r\n\t\tvar toRow = this.table.rowManager.findRow(to);\r\n\r\n\t\tif(toRow){\r\n\t\t\tthis.table.rowManager.moveRowActual(this, toRow, !before);\r\n\t\t\tthis.table.rowManager.refreshActiveData(\"display\", false, true);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching row found:\", to);\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////// Actions  /////////////////////\r\n\tdelete(){\r\n\t\tthis.dispatch(\"row-delete\", this);\r\n\r\n\t\tthis.deleteActual();\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\tdeleteActual(blockRedraw){\r\n\t\tvar index = this.table.rowManager.getRowIndex(this);\r\n\r\n\t\tthis.detatchModules();\r\n\r\n\t\tthis.table.rowManager.deleteRow(this, blockRedraw);\r\n\r\n\t\tthis.deleteCells();\r\n\r\n\t\tthis.initialized = false;\r\n\t\tthis.heightInitialized = false;\r\n\t\tthis.element = false;\r\n\r\n\t\tthis.dispatch(\"row-deleted\", this);\r\n\t}\r\n\r\n\tdetatchModules(){\r\n\t\tthis.dispatch(\"row-deleting\", this);\r\n\t}\r\n\r\n\tdeleteCells(){\r\n\t\tvar cellCount = this.cells.length;\r\n\r\n\t\tfor(let i = 0; i < cellCount; i++){\r\n\t\t\tthis.cells[0].delete();\r\n\t\t}\r\n\t}\r\n\r\n\twipe(){\r\n\t\tthis.detatchModules();\r\n\t\tthis.deleteCells();\r\n\r\n\t\tif(this.element){\r\n\t\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\t\tif(this.element.parentNode){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.modules = {};\r\n\t}\r\n\r\n\tgetGroup(){\r\n\t\treturn this.modules.group || false;\r\n\t}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new RowComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}","export default {\r\n\t\"avg\":function(values, data, calcParams){\r\n\t\tvar output = 0,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : 2\r\n\r\n\t\tif(values.length){\r\n\t\t\toutput = values.reduce(function(sum, value){\r\n\t\t\t\treturn Number(sum) + Number(value);\r\n\t\t\t});\r\n\r\n\t\t\toutput = output / values.length;\r\n\r\n\t\t\toutput = precision !== false ? output.toFixed(precision) : output;\r\n\t\t}\r\n\r\n\t\treturn parseFloat(output).toString();\r\n\t},\r\n\t\"max\":function(values, data, calcParams){\r\n\t\tvar output = null,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tvalues.forEach(function(value){\r\n\r\n\t\t\tvalue = Number(value);\r\n\r\n\t\t\tif(value > output || output === null){\r\n\t\t\t\toutput = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output !== null ? (precision !== false ? output.toFixed(precision) : output) : \"\";\r\n\t},\r\n\t\"min\":function(values, data, calcParams){\r\n\t\tvar output = null,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tvalues.forEach(function(value){\r\n\r\n\t\t\tvalue = Number(value);\r\n\r\n\t\t\tif(value < output || output === null){\r\n\t\t\t\toutput = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output !== null ? (precision !== false ? output.toFixed(precision) : output) : \"\";\r\n\t},\r\n\t\"sum\":function(values, data, calcParams){\r\n\t\tvar output = 0,\r\n\t\tprecision = typeof calcParams.precision !== \"undefined\" ? calcParams.precision : false;\r\n\r\n\t\tif(values.length){\r\n\t\t\tvalues.forEach(function(value){\r\n\t\t\t\tvalue = Number(value);\r\n\r\n\t\t\t\toutput += !isNaN(value) ? Number(value) : 0;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn precision !== false ? output.toFixed(precision) : output;\r\n\t},\r\n\t\"concat\":function(values, data, calcParams){\r\n\t\tvar output = 0;\r\n\r\n\t\tif(values.length){\r\n\t\t\toutput = values.reduce(function(sum, value){\r\n\t\t\t\treturn String(sum) + String(value);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t},\r\n\t\"count\":function(values, data, calcParams){\r\n\t\tvar output = 0;\r\n\r\n\t\tif(values.length){\r\n\t\t\tvalues.forEach(function(value){\r\n\t\t\t\tif(value){\r\n\t\t\t\t\toutput ++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport CalcComponent from './CalcComponent.js';\r\n\r\nimport Cell from '../../core/cell/Cell.js';\r\nimport Column from '../../core/column/Column.js';\r\nimport Row from '../../core/row/Row.js';\r\n\r\nimport defaultCalculations from './defaults/calculations.js';\r\n\r\nclass ColumnCalcs extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.topCalcs = [];\r\n\t\tthis.botCalcs = [];\r\n\t\tthis.genColumn = false;\r\n\t\tthis.topElement = this.createElement();\r\n\t\tthis.botElement = this.createElement();\r\n\t\tthis.topRow = false;\r\n\t\tthis.botRow = false;\r\n\t\tthis.topInitialized = false;\r\n\t\tthis.botInitialized = false;\r\n\r\n\t\tthis.registerTableOption(\"columnCalcs\", true);\r\n\r\n\t\tthis.registerColumnOption(\"topCalc\");\r\n\t\tthis.registerColumnOption(\"topCalcParams\");\r\n\t\tthis.registerColumnOption(\"topCalcFormatter\");\r\n\t\tthis.registerColumnOption(\"topCalcFormatterParams\");\r\n\t\tthis.registerColumnOption(\"bottomCalc\");\r\n\t\tthis.registerColumnOption(\"bottomCalcParams\");\r\n\t\tthis.registerColumnOption(\"bottomCalcFormatter\");\r\n\t\tthis.registerColumnOption(\"bottomCalcFormatterParams\");\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-calcs-holder\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.genColumn = new Column({field:\"value\"}, this);\r\n\r\n\t\tthis.subscribe(\"cell-value-changed\", this.cellValueChanged.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumnCheck.bind(this));\r\n\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"row-added\", this.rowsUpdated.bind(this));\r\n\t\tthis.subscribe(\"column-moved\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"column-add\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"data-refeshed\", this.recalcActiveRows.bind(this));\r\n\t\tthis.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\r\n\t\tthis.subscribe(\"rows-visible\", this.visibleRows.bind(this));\r\n\r\n\t\tthis.registerTableFunction(\"getCalcResults\", this.getResults.bind(this));\r\n\t\tthis.registerTableFunction(\"recalc\", this.userRecalc.bind(this));\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\r\n\t\tif(force){\r\n\t\t\tthis.redraw();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\tuserRecalc(){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tvisibleRows(viewable, rows){\r\n\t\tif(this.topRow){\r\n\t\t\trows.unshift(this.topRow);\r\n\t\t}\r\n\r\n\t\tif(this.botRow){\r\n\t\t\trows.push(this.botRow);\r\n\t\t}\r\n\t\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowsUpdated(row){\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.recalcRowGroup(this);\r\n\t\t}else{\r\n\t\t\tthis.recalcActiveRows();\r\n\t\t}\r\n\t}\r\n\r\n\trecalcActiveRows(){\r\n\t\tthis.recalc(this.table.rowManager.activeRows);\r\n\t}\r\n\r\n\tcellValueChanged(cell){\r\n\t\tif(cell.column.definition.topCalc || cell.column.definition.bottomCalc){\r\n\t\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs == \"table\" || this.table.options.columnCalcs == \"both\"){\r\n\t\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"table\"){\r\n\t\t\t\t\tthis.recalcRowGroup(cell.row);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(column.definition.topCalc || column.definition.bottomCalc){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column calcs\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition\r\n\r\n\t\tvar config = {\r\n\t\t\ttopCalcParams:def.topCalcParams || {},\r\n\t\t\tbotCalcParams:def.bottomCalcParams || {},\r\n\t\t};\r\n\r\n\t\tif(def.topCalc){\r\n\r\n\t\t\tswitch(typeof def.topCalc){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(ColumnCalcs.calculations[def.topCalc]){\r\n\t\t\t\t\tconfig.topCalc = ColumnCalcs.calculations[def.topCalc]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.topCalc);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tconfig.topCalc = def.topCalc;\r\n\t\t\t\tbreak\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(config.topCalc){\r\n\t\t\t\tcolumn.modules.columnCalcs = config;\r\n\t\t\t\tthis.topCalcs.push(column);\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"group\"){\r\n\t\t\t\t\tthis.initializeTopRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(def.bottomCalc){\r\n\t\t\tswitch(typeof def.bottomCalc){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(ColumnCalcs.calculations[def.bottomCalc]){\r\n\t\t\t\t\tconfig.botCalc = ColumnCalcs.calculations[def.bottomCalc]\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Calc Error - No such calculation found, ignoring: \", def.bottomCalc);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tconfig.botCalc = def.bottomCalc;\r\n\t\t\t\tbreak\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(config.botCalc){\r\n\t\t\t\tcolumn.modules.columnCalcs = config;\r\n\t\t\t\tthis.botCalcs.push(column);\r\n\r\n\t\t\t\tif(this.table.options.columnCalcs != \"group\"){\r\n\t\t\t\t\tthis.initializeBottomRow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//dummy functions to handle being mock column manager\r\n\tregisterColumnField(){};\r\n\r\n\tremoveCalcs(){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(this.topInitialized){\r\n\t\t\tthis.topInitialized = false;\r\n\t\t\tthis.topElement.parentNode.removeChild(this.topElement);\r\n\t\t\tchanged = true;\r\n\t\t}\r\n\r\n\t\tif(this.botInitialized){\r\n\t\t\tthis.botInitialized = false;\r\n\t\t\tthis.table.footerManager.remove(this.botElement);\r\n\t\t\tchanged = true;\r\n\t\t}\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTopRow(){\r\n\t\tif(!this.topInitialized){\r\n\t\t\tthis.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\r\n\t\t\tthis.topInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeBottomRow(){\r\n\t\tif(!this.botInitialized){\r\n\t\t\tthis.table.footerManager.prepend(this.botElement);\r\n\t\t\tthis.botInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tscrollHorizontal(left){\r\n\t\tif(this.botInitialized && this.botRow){\r\n\t\t\tthis.botRow.getElement().style.marginLeft = (-left) + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\trecalc(rows){\r\n\t\tvar data, row;\r\n\r\n\t\tif(this.topInitialized || this.botInitialized){\r\n\t\t\tdata = this.rowsToData(rows);\r\n\r\n\t\t\tif(this.topInitialized){\r\n\t\t\t\tif(this.topRow){\r\n\t\t\t\t\tthis.topRow.deleteCells();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow = this.generateRow(\"top\", this.rowsToData(rows))\r\n\t\t\t\tthis.topRow = row;\r\n\t\t\t\twhile(this.topElement.firstChild) this.topElement.removeChild(this.topElement.firstChild);\r\n\t\t\t\tthis.topElement.appendChild(row.getElement());\r\n\t\t\t\trow.initialize(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.botInitialized){\r\n\t\t\t\tif(this.botRow){\r\n\t\t\t\t\tthis.botRow.deleteCells();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow = this.generateRow(\"bottom\", this.rowsToData(rows))\r\n\t\t\t\tthis.botRow = row;\r\n\t\t\t\twhile(this.botElement.firstChild) this.botElement.removeChild(this.botElement.firstChild);\r\n\t\t\t\tthis.botElement.appendChild(row.getElement());\r\n\t\t\t\trow.initialize(true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\t//set resizable handles\r\n\t\t\tif(this.table.modExists(\"frozenColumns\")){\r\n\t\t\t\tthis.table.modules.frozenColumns.layout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trecalcRowGroup(row){\r\n\t\tthis.recalcGroup(this.table.modules.groupRows.getRowGroup(row));\r\n\t}\r\n\r\n\trecalcAll(){\r\n\t\tif(this.topCalcs.length || this.botCalcs.length){\r\n\t\t\tif(this.table.options.columnCalcs !== \"group\"){\r\n\t\t\t\tthis.recalcActiveRows();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.groupBy && this.table.options.columnCalcs !== \"table\"){\r\n\r\n\r\n\t\t\t\tvar groups = this.table.modules.groupRows.getChildGroups();\r\n\r\n\t\t\t\tgroups.forEach((group) => {\r\n\t\t\t\t\tthis.recalcGroup(group);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trecalcGroup(group){\r\n\t\tvar data, rowData;\r\n\r\n\t\tif(group){\r\n\t\t\tif(group.calcs){\r\n\t\t\t\tif(group.calcs.bottom){\r\n\t\t\t\t\tdata = this.rowsToData(group.rows);\r\n\t\t\t\t\trowData = this.generateRowData(\"bottom\", data);\r\n\r\n\t\t\t\t\tgroup.calcs.bottom.updateData(rowData);\r\n\t\t\t\t\tgroup.calcs.bottom.reinitialize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(group.calcs.top){\r\n\t\t\t\t\tdata = this.rowsToData(group.rows);\r\n\t\t\t\t\trowData = this.generateRowData(\"top\", data);\r\n\r\n\t\t\t\t\tgroup.calcs.top.updateData(rowData);\r\n\t\t\t\t\tgroup.calcs.top.reinitialize();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//generate top stats row\r\n\tgenerateTopRow(rows){\r\n\t\treturn this.generateRow(\"top\", this.rowsToData(rows));\r\n\t}\r\n\t//generate bottom stats row\r\n\tgenerateBottomRow(rows){\r\n\t\treturn this.generateRow(\"bottom\", this.rowsToData(rows));\r\n\t}\r\n\r\n\trowsToData(rows){\r\n\t\tvar data = [];\r\n\r\n\t\trows.forEach((row) => {\r\n\t\t\tdata.push(row.getData());\r\n\r\n\t\t\tif(this.table.options.dataTree && this.table.options.dataTreeChildColumnCalcs){\r\n\t\t\t\tif(row.modules.dataTree.open){\r\n\t\t\t\t\tvar children = this.rowsToData(this.table.modules.dataTree.getFilteredTreeChildren(row));\r\n\t\t\t\t\tdata = data.concat(children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//generate stats row\r\n\tgenerateRow(pos, data){\r\n\t\tvar rowData = this.generateRowData(pos, data),\r\n\t\trow;\r\n\r\n\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\tthis.table.modules.mutator.disable();\r\n\t\t}\r\n\r\n\t\trow = new Row(rowData, this, \"calc\");\r\n\r\n\t\tif(this.table.modExists(\"mutator\")){\r\n\t\t\tthis.table.modules.mutator.enable();\r\n\t\t}\r\n\r\n\t\trow.getElement().classList.add(\"tabulator-calcs\", \"tabulator-calcs-\" + pos);\r\n\r\n\t\trow.component = false;\r\n\r\n\t\trow.getComponent = () => {\r\n\t\t\tif(!row.component){\r\n\t\t\t\trow.component = new CalcComponent(row);\r\n\t\t\t}\r\n\r\n\t\t\treturn row.component;\r\n\t\t};\r\n\r\n\t\trow.generateCells = () => {\r\n\r\n\t\t\tvar cells = [];\r\n\r\n\t\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\r\n\t\t\t\t\t//set field name of mock column\r\n\t\t\t\t\tthis.genColumn.setField(column.getField());\r\n\t\t\t\t\tthis.genColumn.hozAlign = column.hozAlign;\r\n\r\n\t\t\t\t\tif(column.definition[pos + \"CalcFormatter\"] && this.table.modExists(\"format\")){\r\n\t\t\t\t\t\tthis.genColumn.modules.format = {\r\n\t\t\t\t\t\t\tformatter: this.table.modules.format.getFormatter(column.definition[pos + \"CalcFormatter\"]),\r\n\t\t\t\t\t\t\tparams: column.definition[pos + \"CalcFormatterParams\"] || {},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.genColumn.modules.format = {\r\n\t\t\t\t\t\t\tformatter: this.table.modules.format.getFormatter(\"plaintext\"),\r\n\t\t\t\t\t\t\tparams:{}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//ensure css class defintion is replicated to calculation cell\r\n\t\t\t\t\tthis.genColumn.definition.cssClass = column.definition.cssClass;\r\n\r\n\t\t\t\t\t//generate cell and assign to correct column\r\n\t\t\t\t\tvar cell = new Cell(this.genColumn, row);\r\n\t\t\t\t\tcell.getElement();\r\n\t\t\t\t\tcell.column = column;\r\n\t\t\t\t\tcell.setWidth();\r\n\r\n\t\t\t\t\tcolumn.cells.push(cell);\r\n\t\t\t\t\tcells.push(cell);\r\n\r\n\t\t\t\t\tif(!column.visible){\r\n\t\t\t\t\t\tcell.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\trow.cells = cells;\r\n\t\t};\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\t//generate stats row\r\n\tgenerateRowData(pos, data){\r\n\t\tvar rowData = {},\r\n\t\tcalcs = pos == \"top\" ? this.topCalcs : this.botCalcs,\r\n\t\ttype = pos == \"top\" ? \"topCalc\" : \"botCalc\",\r\n\t\tparams, paramKey;\r\n\r\n\t\tcalcs.forEach(function(column){\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tif(column.modules.columnCalcs && column.modules.columnCalcs[type]){\r\n\t\t\t\tdata.forEach(function(item){\r\n\t\t\t\t\tvalues.push(column.getFieldValue(item));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tparamKey = type + \"Params\";\r\n\t\t\t\tparams = typeof column.modules.columnCalcs[paramKey] === \"function\" ? column.modules.columnCalcs[paramKey](values, data) : column.modules.columnCalcs[paramKey];\r\n\r\n\t\t\t\tcolumn.setFieldValue(rowData, column.modules.columnCalcs[type](values, data, params));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowData;\r\n\t}\r\n\r\n\thasTopCalcs(){\r\n\t\treturn\t!!(this.topCalcs.length);\r\n\t}\r\n\r\n\thasBottomCalcs(){\r\n\t\treturn\t!!(this.botCalcs.length);\r\n\t}\r\n\r\n\t//handle table redraw\r\n\tredraw(){\r\n\t\tif(this.topRow){\r\n\t\t\tthis.topRow.normalizeHeight(true);\r\n\t\t}\r\n\t\tif(this.botRow){\r\n\t\t\tthis.botRow.normalizeHeight(true);\r\n\t\t}\r\n\t}\r\n\r\n\t//return the calculated\r\n\tgetResults(){\r\n\t\tvar results = {},\r\n\t\tgroups;\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tgroups = this.table.modules.groupRows.getGroups(true);\r\n\r\n\t\t\tgroups.forEach((group) => {\r\n\t\t\t\tresults[group.getKey()] = this.getGroupResults(group);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tresults = {\r\n\t\t\t\ttop: this.topRow ? this.topRow.getData() : {},\r\n\t\t\t\tbottom: this.botRow ? this.botRow.getData() : {},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t//get results from a group\r\n\tgetGroupResults(group){\r\n\t\tvar groupObj = group._getSelf(),\r\n\t\tsubGroups = group.getSubGroups(),\r\n\t\tsubGroupResults = {},\r\n\t\tresults = {};\r\n\r\n\t\tsubGroups.forEach((subgroup) => {\r\n\t\t\tsubGroupResults[subgroup.getKey()] = this.getGroupResults(subgroup);\r\n\t\t});\r\n\r\n\t\tresults = {\r\n\t\t\ttop: groupObj.calcs.top ? groupObj.calcs.top.getData() : {},\r\n\t\t\tbottom: groupObj.calcs.bottom ? groupObj.calcs.bottom.getData() : {},\r\n\t\t\tgroups: subGroupResults,\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n}\r\n\r\nColumnCalcs.moduleName = \"columnCalcs\";\r\n\r\n//load defaults\r\nColumnCalcs.calculations = defaultCalculations;\r\n\r\nexport default ColumnCalcs;","import Module from '../../core/Module.js';\r\n\r\nimport Row from '../../core/row/Row.js';\r\n\r\nclass DataTree extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.indent = 10;\r\n\t\tthis.field = \"\";\r\n\t\tthis.collapseEl = null;\r\n\t\tthis.expandEl = null;\r\n\t\tthis.branchEl = null;\r\n\t\tthis.elementField = false;\r\n\r\n\t\tthis.startOpen = function(){};\r\n\r\n\t\tthis.displayIndex = 0;\r\n\r\n\t\tthis.registerTableOption(\"dataTree\", false); //enable data tree\r\n\t\tthis.registerTableOption(\"dataTreeFilter\", true); //filter child rows\r\n\t\tthis.registerTableOption(\"dataTreeSort\", true); //sort child rows\r\n\t\tthis.registerTableOption(\"dataTreeElementColumn\", false);\r\n\t\tthis.registerTableOption(\"dataTreeBranchElement\", true);//show data tree branch element\r\n\t\tthis.registerTableOption(\"dataTreeChildIndent\", 9); //data tree child indent in px\r\n\t\tthis.registerTableOption(\"dataTreeChildField\", \"_children\");//data tre column field to look for child rows\r\n\t\tthis.registerTableOption(\"dataTreeCollapseElement\", false);//data tree row collapse element\r\n\t\tthis.registerTableOption(\"dataTreeExpandElement\", false);//data tree row expand element\r\n\t\tthis.registerTableOption(\"dataTreeStartExpanded\", false);\r\n\t\tthis.registerTableOption(\"dataTreeChildColumnCalcs\", false);//include visible data tree rows in column calculations\r\n\t\tthis.registerTableOption(\"dataTreeSelectPropagate\", false);//seleccting a parent row selects its children\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"treeCollapse\", this.collapseRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"treeExpand\", this.expandRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"treeToggle\", this.toggleRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"getTreeParent\", this.getTreeParent.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"getTreeChildren\", this.getRowChildren.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"addTreeChild\", this.addTreeChildRow.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.dataTree){\r\n\t\t\tvar dummyEl = null,\r\n\t\t\toptions = this.table.options;\r\n\r\n\t\t\tthis.field = options.dataTreeChildField;\r\n\t\t\tthis.indent = options.dataTreeChildIndent;\r\n\r\n\t\t\tif(options.dataTreeBranchElement){\r\n\r\n\t\t\t\tif(options.dataTreeBranchElement === true){\r\n\t\t\t\t\tthis.branchEl = document.createElement(\"div\");\r\n\t\t\t\t\tthis.branchEl.classList.add(\"tabulator-data-tree-branch\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(typeof options.dataTreeBranchElement === \"string\"){\r\n\t\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\t\tdummyEl.innerHTML = options.dataTreeBranchElement;\r\n\t\t\t\t\t\tthis.branchEl = dummyEl.firstChild;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.branchEl = options.dataTreeBranchElement;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(options.dataTreeCollapseElement){\r\n\t\t\t\tif(typeof options.dataTreeCollapseElement === \"string\"){\r\n\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\tdummyEl.innerHTML = options.dataTreeCollapseElement;\r\n\t\t\t\t\tthis.collapseEl = dummyEl.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.collapseEl = options.dataTreeCollapseElement;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.collapseEl = document.createElement(\"div\");\r\n\t\t\t\tthis.collapseEl.classList.add(\"tabulator-data-tree-control\");\r\n\t\t\t\tthis.collapseEl.tabIndex = 0;\r\n\t\t\t\tthis.collapseEl.innerHTML = \"<div class='tabulator-data-tree-control-collapse'></div>\";\r\n\t\t\t}\r\n\r\n\t\t\tif(options.dataTreeExpandElement){\r\n\t\t\t\tif(typeof options.dataTreeExpandElement === \"string\"){\r\n\t\t\t\t\tdummyEl = document.createElement(\"div\");\r\n\t\t\t\t\tdummyEl.innerHTML = options.dataTreeExpandElement;\r\n\t\t\t\t\tthis.expandEl = dummyEl.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.expandEl = options.dataTreeExpandElement;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.expandEl = document.createElement(\"div\");\r\n\t\t\t\tthis.expandEl.classList.add(\"tabulator-data-tree-control\");\r\n\t\t\t\tthis.expandEl.tabIndex = 0;\r\n\t\t\t\tthis.expandEl.innerHTML = \"<div class='tabulator-data-tree-control-expand'></div>\";\r\n\t\t\t}\r\n\r\n\r\n\t\t\tswitch(typeof options.dataTreeStartExpanded){\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tthis.startOpen = function(row, index){\r\n\t\t\t\t\treturn options.dataTreeStartExpanded;\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tthis.startOpen = options.dataTreeStartExpanded;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.startOpen = function(row, index){\r\n\t\t\t\t\treturn options.dataTreeStartExpanded[index];\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowDelete.bind(this),0);\r\n\t\t\tthis.subscribe(\"row-data-changed\", this.rowDataChanged.bind(this), 10);\r\n\t\t\tthis.subscribe(\"cell-value-updated\", this.cellValueChanged.bind(this));\r\n\t\t\tthis.subscribe(\"edit-cancelled\", this.cellValueChanged.bind(this));\r\n\t\t\tthis.subscribe(\"column-moving-rows\", this.columnMoving.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.initializeElementField.bind(this));\r\n\r\n\t\t\tthis.registerDisplayHandler(this.getRows.bind(this), 30);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeElementField(){\r\n\t\tvar firstCol = this.table.columnManager.getFirstVisibleColumn();\r\n\r\n\t\tthis.elementField = this.table.options.dataTreeElementColumn || (firstCol ? firstCol.field : false);\r\n\t}\r\n\t\r\n\tgetRowChildren(row){\r\n\t\treturn this.getTreeChildren(row, true);\r\n\t}\r\n\r\n\tcolumnMoving(){\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\trows = rows.concat(this.getTreeChildren(row, false, true));\r\n\t\t});\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowDataChanged(row, visible, updatedData){\r\n\t\tif(this.redrawNeeded(updatedData)){\r\n\t\t\tthis.initializeRow(row);\r\n\r\n\t\t\tif(visible){\r\n\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcellValueChanged(cell){\r\n\t\tvar field = cell.column.getField();\r\n\r\n\t\tif(field === this.elementField){\r\n\t\t\tthis.layoutRow(cell.row);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar childArray = row.getData()[this.field];\r\n\t\tvar isArray = Array.isArray(childArray);\r\n\r\n\t\tvar children = isArray || (!isArray && typeof childArray === \"object\" && childArray !== null);\r\n\r\n\t\tif(!children && row.modules.dataTree && row.modules.dataTree.branchEl){\r\n\t\t\trow.modules.dataTree.branchEl.parentNode.removeChild(row.modules.dataTree.branchEl);\r\n\t\t}\r\n\r\n\t\tif(!children && row.modules.dataTree && row.modules.dataTree.controlEl){\r\n\t\t\trow.modules.dataTree.controlEl.parentNode.removeChild(row.modules.dataTree.controlEl);\r\n\t\t}\r\n\r\n\t\trow.modules.dataTree = {\r\n\t\t\tindex: row.modules.dataTree ? row.modules.dataTree.index : 0,\r\n\t\t\topen: children ? (row.modules.dataTree ? row.modules.dataTree.open : this.startOpen(row.getComponent(), 0)) : false,\r\n\t\t\tcontrolEl: row.modules.dataTree && children ? row.modules.dataTree.controlEl : false,\r\n\t\t\tbranchEl: row.modules.dataTree && children ? row.modules.dataTree.branchEl : false,\r\n\t\t\tparent: row.modules.dataTree ? row.modules.dataTree.parent : false,\r\n\t\t\tchildren:children,\r\n\t\t};\r\n\t}\r\n\r\n\treinitializeRowChildren(row){\r\n\t\tvar children = this.getTreeChildren(row, false, true);\r\n\r\n\t\tchildren.forEach(function(child){\r\n\t\t\tchild.reinitialize(true);\r\n\t\t});\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar cell = this.elementField ? row.getCell(this.elementField) : row.getCells()[0],\r\n\t\tel = cell.getElement(),\r\n\t\tconfig = row.modules.dataTree;\r\n\r\n\t\tif(config.branchEl){\r\n\t\t\tif(config.branchEl.parentNode){\r\n\t\t\t\tconfig.branchEl.parentNode.removeChild(config.branchEl);\r\n\t\t\t}\r\n\t\t\tconfig.branchEl = false;\r\n\t\t}\r\n\r\n\t\tif(config.controlEl){\r\n\t\t\tif(config.controlEl.parentNode){\r\n\t\t\t\tconfig.controlEl.parentNode.removeChild(config.controlEl);\r\n\t\t\t}\r\n\t\t\tconfig.controlEl = false;\r\n\t\t}\r\n\r\n\t\tthis.generateControlElement(row, el);\r\n\r\n\t\trow.getElement().classList.add(\"tabulator-tree-level-\" + config.index);\r\n\r\n\t\tif(config.index){\r\n\t\t\tif(this.branchEl){\r\n\t\t\t\tconfig.branchEl = this.branchEl.cloneNode(true);\r\n\t\t\t\tel.insertBefore(config.branchEl, el.firstChild);\r\n\r\n\t\t\t\tif(this.table.rtl){\r\n\t\t\t\t\tconfig.branchEl.style.marginRight = (((config.branchEl.offsetWidth + config.branchEl.style.marginLeft) * (config.index - 1)) + (config.index * this.indent)) + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconfig.branchEl.style.marginLeft = (((config.branchEl.offsetWidth + config.branchEl.style.marginRight) * (config.index - 1)) + (config.index * this.indent)) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(this.table.rtl){\r\n\t\t\t\t\tel.style.paddingRight = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-right')) + (config.index * this.indent) + \"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tel.style.paddingLeft = parseInt(window.getComputedStyle(el, null).getPropertyValue('padding-left')) + (config.index * this.indent) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateControlElement(row, el){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\tel = el || row.getCells()[0].getElement(),\r\n\t\toldControl = config.controlEl;\r\n\r\n\t\tif(config.children !== false){\r\n\r\n\t\t\tif(config.open){\r\n\t\t\t\tconfig.controlEl = this.collapseEl.cloneNode(true);\r\n\t\t\t\tconfig.controlEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.collapseRow(row);\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tconfig.controlEl = this.expandEl.cloneNode(true);\r\n\t\t\t\tconfig.controlEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.expandRow(row);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconfig.controlEl.addEventListener(\"mousedown\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tif(oldControl && oldControl.parentNode === el){\r\n\t\t\t\toldControl.parentNode.replaceChild(config.controlEl,oldControl);\r\n\t\t\t}else{\r\n\t\t\t\tel.insertBefore(config.controlEl, el.firstChild);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetDisplayIndex (index) {\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex () {\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\tgetRows(rows){\r\n\t\tvar output = [];\r\n\r\n\t\trows.forEach((row, i) => {\r\n\t\t\tvar config, children;\r\n\r\n\t\t\toutput.push(row);\r\n\r\n\t\t\tif(row instanceof Row){\r\n\r\n\t\t\t\trow.create();\r\n\r\n\t\t\t\tconfig = row.modules.dataTree.children;\r\n\r\n\t\t\t\tif(!config.index && config.children !== false){\r\n\t\t\t\t\tchildren = this.getChildren(row);\r\n\r\n\t\t\t\t\tchildren.forEach((child) => {\r\n\t\t\t\t\t\tchild.create();\r\n\t\t\t\t\t\toutput.push(child);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetChildren(row, allChildren){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\tchildren = [],\r\n\t\toutput = [];\r\n\r\n\t\tif(config.children !== false && (config.open || allChildren)){\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"filter\") && this.table.options.dataTreeFilter){\r\n\t\t\t\tchildren = this.table.modules.filter.filter(config.children);\r\n\t\t\t}else{\r\n\t\t\t\tchildren = config.children;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"sort\") && this.table.options.dataTreeSort){\r\n\t\t\t\tthis.table.modules.sort.sort(children);\r\n\t\t\t}\r\n\r\n\t\t\tchildren.forEach((child) => {\r\n\t\t\t\toutput.push(child);\r\n\r\n\t\t\t\tvar subChildren = this.getChildren(child);\r\n\r\n\t\t\t\tsubChildren.forEach((sub) => {\r\n\t\t\t\t\toutput.push(sub);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgenerateChildren(row){\r\n\t\tvar children = [];\r\n\r\n\t\tvar childArray = row.getData()[this.field];\r\n\r\n\t\tif(!Array.isArray(childArray)){\r\n\t\t\tchildArray = [childArray];\r\n\t\t}\r\n\r\n\t\tchildArray.forEach((childData) => {\r\n\t\t\tvar childRow = new Row(childData || {}, this.table.rowManager);\r\n\r\n\t\t\tchildRow.create();\r\n\r\n\t\t\tchildRow.modules.dataTree.index = row.modules.dataTree.index + 1;\r\n\t\t\tchildRow.modules.dataTree.parent = row;\r\n\r\n\t\t\tif(childRow.modules.dataTree.children){\r\n\t\t\t\tchildRow.modules.dataTree.open = this.startOpen(childRow.getComponent(), childRow.modules.dataTree.index);\r\n\t\t\t}\r\n\t\t\tchildren.push(childRow);\r\n\t\t});\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\texpandRow(row, silent){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tconfig.open = true;\r\n\r\n\t\t\trow.reinitialize();\r\n\r\n\t\t\tthis.refreshData(true);\r\n\r\n\t\t\tthis.dispatchExternal(\"dataTreeRowExpanded\", row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\t}\r\n\r\n\tcollapseRow(row){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tconfig.open = false;\r\n\r\n\t\t\trow.reinitialize();\r\n\r\n\t\t\tthis.refreshData(true);\r\n\r\n\t\t\tthis.dispatchExternal(\"dataTreeRowCollapsed\", row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleRow(row){\r\n\t\tvar config = row.modules.dataTree;\r\n\r\n\t\tif(config.children !== false){\r\n\t\t\tif(config.open){\r\n\t\t\t\tthis.collapseRow(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.expandRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetTreeParent(row){\r\n\t\treturn row.modules.dataTree.parent ? row.modules.dataTree.parent.getComponent() : false;\r\n\t}\r\n\r\n\tgetFilteredTreeChildren(row){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\toutput = [], children;\r\n\r\n\t\tif(config.children){\r\n\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"filter\") && this.table.options.dataTreeFilter){\r\n\t\t\t\tchildren = this.table.modules.filter.filter(config.children);\r\n\t\t\t}else{\r\n\t\t\t\tchildren = config.children;\r\n\t\t\t}\r\n\r\n\t\t\tchildren.forEach((childRow) => {\r\n\t\t\t\tif(childRow instanceof Row){\r\n\t\t\t\t\toutput.push(childRow);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\trowDelete(row){\r\n\t\tvar parent = row.modules.dataTree.parent,\r\n\t\tchildIndex;\r\n\r\n\t\tif(parent){\r\n\t\t\tchildIndex = this.findChildIndex(row, parent);\r\n\r\n\t\t\tif(childIndex !== false){\r\n\t\t\t\tparent.data[this.field].splice(childIndex, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif(!parent.data[this.field].length){\r\n\t\t\t\tdelete parent.data[this.field];\r\n\t\t\t}\r\n\r\n\t\t\tthis.initializeRow(parent);\r\n\t\t\tthis.layoutRow(parent);\r\n\t\t}\r\n\r\n\t\tthis.refreshData(true);\r\n\t}\r\n\r\n\taddTreeChildRow(row, data, top, index){\r\n\t\tvar childIndex = false;\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(row.data[this.field])){\r\n\t\t\trow.data[this.field] = [];\r\n\r\n\t\t\trow.modules.dataTree.open = this.startOpen(row.getComponent(), row.modules.dataTree.index);\r\n\t\t}\r\n\r\n\t\tif(typeof index !== \"undefined\"){\r\n\t\t\tchildIndex = this.findChildIndex(index, row);\r\n\r\n\t\t\tif(childIndex !== false){\r\n\t\t\t\trow.data[this.field].splice((top ? childIndex : childIndex + 1), 0, data);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndex === false){\r\n\t\t\tif(top){\r\n\t\t\t\trow.data[this.field].unshift(data);\r\n\t\t\t}else{\r\n\t\t\t\trow.data[this.field].push(data);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.initializeRow(row);\r\n\t\tthis.layoutRow(row);\r\n\r\n\t\tthis.refreshData(true);\r\n\t}\r\n\r\n\tfindChildIndex(subject, parent){\r\n\t\tvar match = false;\r\n\r\n\t\tif(typeof subject == \"object\"){\r\n\r\n\t\t\tif(subject instanceof Row){\r\n\t\t\t\t//subject is row element\r\n\t\t\t\tmatch = subject.data;\r\n\t\t\t}else if(subject instanceof RowComponent){\r\n\t\t\t\t//subject is public row component\r\n\t\t\t\tmatch = subject._getSelf().data;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\tif(parent.modules.dataTree){\r\n\t\t\t\t\tmatch = parent.modules.dataTree.children.find((childRow) => {\r\n\t\t\t\t\t\treturn childRow instanceof Row ? childRow.element === subject : false;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\tmatch = match.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else if(typeof subject == \"undefined\" || subject === null){\r\n\t\t\tmatch = false\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the index of the row\r\n\t\t\tmatch = parent.data[this.field].find((row) => {\r\n\t\t\t\treturn row.data[this.table.options.index] == subject;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(match){\r\n\r\n\t\t\tif(Array.isArray(parent.data[this.field])){\r\n\t\t\t\tmatch = parent.data[this.field].indexOf(match);\r\n\t\t\t}\r\n\r\n\t\t\tif(match == -1){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetTreeChildren(row, component, recurse){\r\n\t\tvar config = row.modules.dataTree,\r\n\t\toutput = [];\r\n\r\n\t\tif(config.children){\r\n\r\n\t\t\tif(!Array.isArray(config.children)){\r\n\t\t\t\tconfig.children = this.generateChildren(row);\r\n\t\t\t}\r\n\r\n\t\t\tconfig.children.forEach((childRow) => {\r\n\t\t\t\tif(childRow instanceof Row){\r\n\t\t\t\t\toutput.push(component ? childRow.getComponent() : childRow);\r\n\r\n\t\t\t\t\tif(recurse){\r\n\t\t\t\t\t\toutput = output.concat(this.getTreeChildren(childRow, component, recurse));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetChildField(){\r\n\t\treturn this.field;\r\n\t}\r\n\r\n\tredrawNeeded(data){\r\n\t\tconsole.log(\"needed?\", data)\r\n\t\treturn (this.field ? typeof data[this.field] !== \"undefined\" : false) || (this.elementField ? typeof data[this.elementField] !== \"undefined\" : false);\r\n\t}\r\n}\r\n\r\nDataTree.moduleName = \"dataTree\";\r\n\r\nexport default DataTree;","export default function(list, options, setFileContents){\r\n\tvar delimiter = options && options.delimiter ? options.delimiter : \",\",\r\n\tfileContents = [],\r\n\theaders = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tvar item = [];\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"group\":\r\n\t\t\tconsole.warn(\"Download Warning - CSV downloader cannot process row groups\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tconsole.warn(\"Download Warning - CSV downloader cannot process column calculations\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"header\":\r\n\t\t\trow.columns.forEach((col, i) => {\r\n\t\t\t\tif(col && col.depth === 1){\r\n\t\t\t\t\theaders[i] = typeof col.value == \"undefined\"  || col.value === null ? \"\" : ('\"' + String(col.value).split('\"').join('\"\"') + '\"');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\trow.columns.forEach((col) => {\r\n\r\n\t\t\t\tif(col){\r\n\r\n\t\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\tcol.value = JSON.stringify(col.value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\t\tcol.value = \"\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.push('\"' + String(col.value).split('\"').join('\"\"') + '\"');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfileContents.push(item.join(delimiter));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(headers.length){\r\n\t\tfileContents.unshift(headers.join(delimiter));\r\n\t}\r\n\r\n\tfileContents = fileContents.join(\"\\n\");\r\n\r\n\tif(options.bom){\r\n\t\tfileContents = \"\\ufeff\" + fileContents;\r\n\t}\r\n\r\n\tsetFileContents(fileContents, \"text/csv\");\r\n};","export default function(list, options, setFileContents){\r\n\tvar fileContents = [];\r\n\r\n\tlist.forEach((row) => {\r\n\t\tvar item = {};\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"header\":\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process row groups\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tconsole.warn(\"Download Warning - JSON downloader cannot process column calculations\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\trow.columns.forEach((col) => {\r\n\t\t\t\tif(col){\r\n\t\t\t\t\titem[col.component.getField()] = col.value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfileContents.push(item);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tfileContents = JSON.stringify(fileContents, null, '\\t');\r\n\r\n\tsetFileContents(fileContents, \"application/json\");\r\n};","export default function(list, options, setFileContents){\r\n\tvar header = [],\r\n\tbody = [],\r\n\tautoTableParams = {},\r\n\trowGroupStyles = options.rowGroupStyles || {\r\n\t\tfontStyle: \"bold\",\r\n\t\tfontSize: 12,\r\n\t\tcellPadding: 6,\r\n\t\tfillColor: 220,\r\n\t},\r\n\trowCalcStyles = options.rowCalcStyles || {\r\n\t\tfontStyle: \"bold\",\r\n\t\tfontSize: 10,\r\n\t\tcellPadding: 4,\r\n\t\tfillColor: 232,\r\n\t},\r\n\tjsPDFParams = options.jsPDF || {},\r\n\ttitle = options && options.title ? options.title : \"\";\r\n\r\n\tif(!jsPDFParams.orientation){\r\n\t\tjsPDFParams.orientation = options.orientation || \"landscape\";\r\n\t}\r\n\r\n\tif(!jsPDFParams.unit){\r\n\t\tjsPDFParams.unit = \"pt\";\r\n\t}\r\n\r\n\t//parse row list\r\n\tlist.forEach((row) => {\r\n\t\tvar item = {};\r\n\r\n\t\tswitch(row.type){\r\n\t\t\tcase \"header\":\r\n\t\t\theader.push(parseRow(row));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tbody.push(parseRow(row, rowGroupStyles));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"calc\":\r\n\t\t\tbody.push(parseRow(row, rowCalcStyles));\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"row\":\r\n\t\t\tbody.push(parseRow(row));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction parseRow(row, styles){\r\n\t\tvar rowData = [];\r\n\r\n\t\trow.columns.forEach((col) =>{\r\n\t\t\tvar cell;\r\n\r\n\t\t\tif(col){\r\n\t\t\t\tswitch(typeof col.value){\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tcol.value = JSON.stringify(col.value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\tcol.value = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell = {\r\n\t\t\t\t\tcontent:col.value,\r\n\t\t\t\t\tcolSpan:col.width,\r\n\t\t\t\t\trowSpan:col.height,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif(styles){\r\n\t\t\t\t\tcell.styles = styles;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowData.push(cell);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowData;\r\n\t}\r\n\r\n\r\n\t//configure PDF\r\n\tvar doc = new jspdf.jsPDF(jsPDFParams); //set document to landscape, better for most tables\r\n\r\n\tif(options && options.autoTable){\r\n\t\tif(typeof options.autoTable === \"function\"){\r\n\t\t\tautoTableParams = options.autoTable(doc) || {};\r\n\t\t}else{\r\n\t\t\tautoTableParams = options.autoTable;\r\n\t\t}\r\n\t}\r\n\r\n\tif(title){\r\n\t\tautoTableParams.didDrawPage = function(data) {\r\n\t\t\tdoc.text(title, 40, 30);\r\n\t\t};\r\n\t}\r\n\r\n\tautoTableParams.head = header;\r\n\tautoTableParams.body = body;\r\n\r\n\tdoc.autoTable(autoTableParams);\r\n\r\n\tif(options && options.documentProcessing){\r\n\t\toptions.documentProcessing(doc);\r\n\t}\r\n\r\n\tsetFileContents(doc.output(\"arraybuffer\"), \"application/pdf\");\r\n};","import CoreFeature from '../../../../core/CoreFeature.js';\r\n\r\nexport default function(list, options, setFileContents){\r\n\tvar self = this,\r\n\tsheetName = options.sheetName || \"Sheet1\",\r\n\tworkbook = XLSX.utils.book_new(),\r\n\ttableFeatures = new CoreFeature(this),\r\n\toutput;\r\n\r\n\tworkbook.SheetNames = [];\r\n\tworkbook.Sheets = {};\r\n\r\n\tfunction generateSheet(){\r\n\t\tvar rows = [],\r\n\t\tmerges = [],\r\n\t\tworksheet = {},\r\n\t\trange = {s: {c:0, r:0}, e: {c:(list[0] ? list[0].columns.reduce((a, b) => a + (b && b.width ? b.width : 1), 0) : 0), r:list.length }};\r\n\r\n\t\t//parse row list\r\n\t\tlist.forEach((row, i) => {\r\n\t\t\tvar rowData = [];\r\n\r\n\t\t\trow.columns.forEach(function(col, j){\r\n\r\n\t\t\t\tif(col){\r\n\t\t\t\t\trowData.push(!(col.value instanceof Date) && typeof col.value === \"object\" ? JSON.stringify(col.value) : col.value);\r\n\r\n\t\t\t\t\tif(col.width > 1 || col.height > -1){\r\n\t\t\t\t\t\tif(col.height > 1 || col.width > 1){\r\n\t\t\t\t\t\t\tmerges.push({s:{r:i,c:j},e:{r:i + col.height - 1,c:j + col.width - 1}});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\trowData.push(\"\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trows.push(rowData);\r\n\t\t});\r\n\r\n\t\t//convert rows to worksheet\r\n\t\tXLSX.utils.sheet_add_aoa(worksheet, rows);\r\n\r\n\t\tworksheet['!ref'] = XLSX.utils.encode_range(range);\r\n\r\n\t\tif(merges.length){\r\n\t\t\tworksheet[\"!merges\"] = merges;\r\n\t\t}\r\n\r\n\t\treturn worksheet;\r\n\t}\r\n\r\n\tif(options.sheetOnly){\r\n\t\tsetFileContents(generateSheet());\r\n\t\treturn;\r\n\t}\r\n\r\n\tif(options.sheets){\r\n\t\tfor(var sheet in options.sheets){\r\n\r\n\t\t\tif(options.sheets[sheet] === true){\r\n\t\t\t\tworkbook.SheetNames.push(sheet);\r\n\t\t\t\tworkbook.Sheets[sheet] = generateSheet();\r\n\t\t\t}else{\r\n\r\n\t\t\t\tworkbook.SheetNames.push(sheet);\r\n\r\n\t\t\t\ttableFeatures.commsSend(options.sheets[sheet], \"download\", \"intercept\",{\r\n\t\t\t\t\ttype:\"xlsx\",\r\n\t\t\t\t\toptions:{sheetOnly:true},\r\n\t\t\t\t\tactive:self.active,\r\n\t\t\t\t\tintercept:function(data){\r\n\t\t\t\t\t\tworkbook.Sheets[sheet] = data;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tworkbook.SheetNames.push(sheetName);\r\n\t\tworkbook.Sheets[sheetName] = generateSheet();\r\n\t}\r\n\r\n\tif(options.documentProcessing){\r\n\t\tworkbook = options.documentProcessing(workbook);\r\n\t}\r\n\r\n\t//convert workbook to binary array\r\n\tfunction s2ab(s) {\r\n\t\tvar buf = new ArrayBuffer(s.length);\r\n\t\tvar view = new Uint8Array(buf);\r\n\t\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n\t\t\treturn buf;\r\n\t}\r\n\r\n\toutput = XLSX.write(workbook, {bookType:'xlsx', bookSST:true, type: 'binary'});\r\n\r\n\tsetFileContents(s2ab(output), \"application/octet-stream\");\r\n};","export default function(list, options, setFileContents){\r\n\tif(this.modExists(\"export\", true)){\r\n\t\tsetFileContents(this.modules.export.genereateHTMLTable(list), \"text/html\");\r\n\t}\r\n};","import csv from './downloaders/csv.js';\r\nimport json from './downloaders/json.js';\r\nimport pdf from './downloaders/pdf.js';\r\nimport xlsx from './downloaders/xlsx.js';\r\nimport html from './downloaders/html.js';\r\n\r\nexport default {\r\n\tcsv:csv,\r\n\tjson:json,\r\n\tpdf:pdf,\r\n\txlsx:xlsx,\r\n\thtml:html,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultDownloaders from './defaults/downloaders.js';\r\n\r\nclass Download extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.registerTableOption(\"downloadReady\", function(data, blob){return blob;}); //function to manipulate download data\r\n\t\tthis.registerTableOption(\"downloadConfig\", {}); //download config\r\n\t\tthis.registerTableOption(\"downloadRowRange\", \"active\"); //restrict download to active rows only\r\n\r\n\t\tthis.registerColumnOption(\"download\");\r\n\t\tthis.registerColumnOption(\"titleDownload\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"download\", this.download.bind(this));\r\n\t\tthis.registerTableFunction(\"downloadToTab\", this.downloadToTab.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tdownloadToTab(type, filename, options, active){\r\n\t\tthis.download(type, filename, options, active, true);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\t//trigger file download\r\n\tdownload(type, filename, options, range, interceptCallback){\r\n\t\tvar downloadFunc = false;\r\n\r\n\t\tfunction buildLink(data, mime){\r\n\t\t\tif(interceptCallback){\r\n\t\t\t\tif(interceptCallback === true){\r\n\t\t\t\t\tthis.triggerDownload(data, mime, type, filename, true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tinterceptCallback(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.triggerDownload(data, mime, type, filename);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(typeof type == \"function\"){\r\n\t\t\tdownloadFunc = type;\r\n\t\t}else{\r\n\t\t\tif(Download.downloaders[type]){\r\n\t\t\t\tdownloadFunc = Download.downloaders[type];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Download Error - No such download type found: \", type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(downloadFunc){\r\n\t\t\tvar list = this.generateExportList(range);\r\n\r\n\t\t\tdownloadFunc.call(this.table, list , options || {}, buildLink.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateExportList(range){\r\n\t\tvar list = this.table.modules.export.generateExportList(this.table.options.downloadConfig, false, range || this.table.options.downloadRowRange, \"download\");\r\n\r\n\t\t//assign group header formatter\r\n\t\tvar groupHeader = this.table.options.groupHeaderDownload;\r\n\r\n\t\tif(groupHeader && !Array.isArray(groupHeader)){\r\n\t\t\tgroupHeader = [groupHeader];\r\n\t\t}\r\n\r\n\t\tlist.forEach((row) => {\r\n\t\t\tvar group;\r\n\r\n\t\t\tif(row.type === \"group\"){\r\n\t\t\t\tgroup = row.columns[0];\r\n\r\n\t\t\t\tif(groupHeader && groupHeader[row.indent]){\r\n\t\t\t\t\tgroup.value = groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn list;\r\n\t}\r\n\r\n\ttriggerDownload(data, mime, type, filename, newTab){\r\n\t\tvar element = document.createElement('a'),\r\n\t\tblob = new Blob([data],{type:mime}),\r\n\t\tfilename = filename || \"Tabulator.\" + (typeof type === \"function\" ? \"txt\" : type);\r\n\r\n\t\tblob = this.table.options.downloadReady(data, blob);\r\n\r\n\t\tif(blob){\r\n\r\n\t\t\tif(newTab){\r\n\t\t\t\twindow.open(window.URL.createObjectURL(blob));\r\n\t\t\t}else{\r\n\t\t\t\tif(navigator.msSaveOrOpenBlob){\r\n\t\t\t\t\tnavigator.msSaveOrOpenBlob(blob, filename);\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.setAttribute('href', window.URL.createObjectURL(blob));\r\n\r\n\t\t\t\t\t//set file title\r\n\t\t\t\t\telement.setAttribute('download', filename);\r\n\r\n\t\t\t\t\t//trigger download\r\n\t\t\t\t\telement.style.display = 'none';\r\n\t\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\t\telement.click();\r\n\r\n\t\t\t\t\t//remove temporary link element\r\n\t\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"downloadComplete\");\r\n\t\t}\r\n\t}\r\n\r\n\tcommsReceived(table, action, data){\r\n\t\tswitch(action){\r\n\t\t\tcase \"intercept\":\r\n\t\t\tthis.download(data.type, \"\", data.options, data.active, data.intercept);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nDownload.moduleName = \"download\";\r\n\r\n//load defaults\r\nDownload.downloaders = defaultDownloaders;\r\n\r\nexport default Download;","export default function maskInput(el, options){\r\n\tvar mask = options.mask,\r\n\tmaskLetter = typeof options.maskLetterChar !== \"undefined\" ? options.maskLetterChar : \"A\",\r\n\tmaskNumber = typeof options.maskNumberChar !== \"undefined\" ? options.maskNumberChar : \"9\",\r\n\tmaskWildcard = typeof options.maskWildcardChar !== \"undefined\" ? options.maskWildcardChar : \"*\",\r\n\tsuccess = false;\r\n\r\n\tfunction fillSymbols(index){\r\n\t\tvar symbol = mask[index];\r\n\t\tif(typeof symbol !== \"undefined\" && symbol !== maskWildcard && symbol !== maskLetter && symbol !== maskNumber){\r\n\t\t\tel.value = el.value + \"\" + symbol;\r\n\t\t\tfillSymbols(index+1);\r\n\t\t}\r\n\t}\r\n\r\n\tel.addEventListener(\"keydown\", (e) => {\r\n\t\tvar index = el.value.length,\r\n\t\tchar = e.key;\r\n\r\n\t\tif(e.keyCode > 46){\r\n\t\t\tif(index >= mask.length){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tsuccess = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(mask[index]){\r\n\t\t\t\t\tcase maskLetter:\r\n\t\t\t\t\tif(char.toUpperCase() == char.toLowerCase()){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase maskNumber:\r\n\t\t\t\t\tif(isNaN(char)){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase maskWildcard:\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(char !== mask[index]){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuccess = true;\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t});\r\n\r\n\tel.addEventListener(\"keyup\", (e) => {\r\n\t\tif(e.keyCode > 46){\r\n\t\t\tif(options.maskAutoFill){\r\n\t\t\t\tfillSymbols(el.value.length);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tif(!el.placeholder){\r\n\t\tel.placeholder = mask;\r\n\t}\r\n\r\n\tif(options.maskAutoFill){\r\n\t\tfillSymbols(el.value.length);\r\n\t}\r\n}","import maskInput from '../../inputMask.js';\r\n\r\n//input element\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\t//create and style input\r\n\tvar cellValue = cell.getValue(),\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", editorParams.search ? \"search\" : \"text\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = typeof cellValue !== \"undefined\" ? cellValue : \"\";\r\n\r\n\tonRendered(function(){\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\t});\r\n\r\n\tfunction onChange(e){\r\n\t\tif(((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\") || input.value !== cellValue){\r\n\t\t\tif(success(input.value)){\r\n\t\t\t\tcellValue = input.value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur or change\r\n\tinput.addEventListener(\"change\", onChange);\r\n\tinput.addEventListener(\"blur\", onChange);\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\t// case 9:\r\n\t\t\tcase 13:\r\n\t\t\tonChange(e);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 35:\r\n\t\t\tcase 36:\r\n\t\t\te.stopPropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\treturn input;\r\n};","import maskInput from '../../inputMask.js';\r\n\r\n//resizable text area element\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n    var self = this,\r\n    cellValue = cell.getValue(),\r\n    vertNav = editorParams.verticalNavigation || \"hybrid\",\r\n    value = String(cellValue !== null && typeof cellValue !== \"undefined\"  ? cellValue : \"\"),\r\n    count = (value.match(/(?:\\r\\n|\\r|\\n)/g) || []).length + 1,\r\n    input = document.createElement(\"textarea\"),\r\n    scrollHeight = 0;\r\n\r\n    //create and style input\r\n    input.style.display = \"block\";\r\n    input.style.padding = \"2px\";\r\n    input.style.height = \"100%\";\r\n    input.style.width = \"100%\";\r\n    input.style.boxSizing = \"border-box\";\r\n    input.style.whiteSpace = \"pre-wrap\";\r\n    input.style.resize = \"none\";\r\n\r\n    if(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n        for (let key in editorParams.elementAttributes){\r\n            if(key.charAt(0) == \"+\"){\r\n                key = key.slice(1);\r\n                input.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n            }else{\r\n                input.setAttribute(key, editorParams.elementAttributes[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    input.value = value;\r\n\r\n    onRendered(function(){\r\n        input.focus({preventScroll: true});\r\n        input.style.height = \"100%\";\r\n\r\n        input.scrollHeight;\r\n        input.style.height = input.scrollHeight + \"px\";\r\n        cell.getRow().normalizeHeight();\r\n    });\r\n\r\n    function onChange(e){\r\n\r\n        if(((cellValue === null || typeof cellValue === \"undefined\") && input.value !== \"\") || input.value !== cellValue){\r\n\r\n            if(success(input.value)){\r\n                cellValue = input.value; //persist value if successfully validated incase editor is used as header filter\r\n            }\r\n\r\n            setTimeout(function(){\r\n                cell.getRow().normalizeHeight();\r\n            },300)\r\n        }else{\r\n            cancel();\r\n        }\r\n    }\r\n\r\n    //submit new value on blur or change\r\n    input.addEventListener(\"change\", onChange);\r\n    input.addEventListener(\"blur\", onChange);\r\n\r\n    input.addEventListener(\"keyup\", function(){\r\n\r\n        input.style.height = \"\";\r\n\r\n        var heightNow = input.scrollHeight;\r\n\r\n        input.style.height = heightNow + \"px\";\r\n\r\n        if(heightNow != scrollHeight){\r\n            scrollHeight = heightNow;\r\n            cell.getRow().normalizeHeight();\r\n        }\r\n    });\r\n\r\n    input.addEventListener(\"keydown\", function(e){\r\n\r\n        switch(e.keyCode){\r\n            case 27:\r\n            cancel();\r\n            break;\r\n\r\n            case 38: //up arrow\r\n            if(vertNav == \"editor\" || (vertNav == \"hybrid\" && input.selectionStart)){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n\r\n            break;\r\n\r\n            case 40: //down arrow\r\n            if(vertNav == \"editor\" || (vertNav == \"hybrid\" && input.selectionStart !== input.value.length)){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n            break;\r\n\r\n            case 35:\r\n            case 36:\r\n            e.stopPropagation();\r\n            break;\r\n        }\r\n    });\r\n\r\n    if(editorParams.mask){\r\n        maskInput(input, editorParams);\r\n    }\r\n\r\n    return input;\r\n};","import maskInput from '../../inputMask.js';\r\n\r\n//input element with type of number\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar cellValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", \"number\");\r\n\r\n\tif(typeof editorParams.max != \"undefined\"){\r\n\t\tinput.setAttribute(\"max\", editorParams.max);\r\n\t}\r\n\r\n\tif(typeof editorParams.min != \"undefined\"){\r\n\t\tinput.setAttribute(\"min\", editorParams.min);\r\n\t}\r\n\r\n\tif(typeof editorParams.step != \"undefined\"){\r\n\t\tinput.setAttribute(\"step\", editorParams.step);\r\n\t}\r\n\r\n\t//create and style input\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = cellValue;\r\n\r\n\tvar blurFunc = function(e){\r\n\t\tonChange();\r\n\t};\r\n\r\n\tonRendered(function () {\r\n\t\t//submit new value on blur\r\n\t\tinput.removeEventListener(\"blur\", blurFunc);\r\n\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\r\n\t\t//submit new value on blur\r\n\t\tinput.addEventListener(\"blur\", blurFunc);\r\n\t});\r\n\r\n\tfunction onChange(){\r\n\t\tvar value = input.value;\r\n\r\n\t\tif(!isNaN(value) && value !==\"\"){\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\r\n\t\tif(value !== cellValue){\r\n\t\t\tif(success(value)){\r\n\t\t\t\tcellValue = value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 13:\r\n\t\t\t// case 9:\r\n\t\t\tonChange();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tcase 40: //down arrow\r\n\t\t\tif(vertNav == \"editor\"){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 35:\r\n\t\t\tcase 36:\r\n\t\t\te.stopPropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\treturn input;\r\n};","//input element with type of number\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar cellValue = cell.getValue(),\r\n\tinput = document.createElement(\"input\");\r\n\r\n\tinput.setAttribute(\"type\", \"range\");\r\n\r\n\tif (typeof editorParams.max != \"undefined\") {\r\n\t\tinput.setAttribute(\"max\", editorParams.max);\r\n\t}\r\n\r\n\tif (typeof editorParams.min != \"undefined\") {\r\n\t\tinput.setAttribute(\"min\", editorParams.min);\r\n\t}\r\n\r\n\tif (typeof editorParams.step != \"undefined\") {\r\n\t\tinput.setAttribute(\"step\", editorParams.step);\r\n\t}\r\n\r\n\t//create and style input\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = cellValue;\r\n\r\n\tonRendered(function () {\r\n\t\tinput.focus({preventScroll: true});\r\n\t\tinput.style.height = \"100%\";\r\n\t});\r\n\r\n\tfunction onChange(){\r\n\t\tvar value = input.value;\r\n\r\n\t\tif(!isNaN(value) && value !==\"\"){\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\r\n\t\tif(value != cellValue){\r\n\t\t\tif(success(value)){\r\n\t\t\t\tcellValue = value; //persist value if successfully validated incase editor is used as header filter\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcancel();\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tonChange();\r\n\t});\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 13:\r\n\t\t\t// case 9:\r\n\t\t\tonChange();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27:\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\treturn input;\r\n};","import Helpers from '../../../../core/tools/Helpers.js';\r\n\r\n//dropdown select editor\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\tcellEl = cell.getElement(),\r\n\tinitialValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinitialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? (Array.isArray(initialValue) ? initialValue : [initialValue]) : (typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : []),\r\n\tinput = document.createElement(\"input\"),\r\n\tlistEl = document.createElement(\"div\"),\r\n\tmultiselect = editorParams.multiselect,\r\n\tdataItems = [],\r\n\tcurrentItem = {},\r\n\tdisplayItems = [],\r\n\tcurrentItems = [],\r\n\tblurable = true,\r\n\tblockListShow = false,\r\n\tsearchWord = \"\",\r\n\tsearchWordTimeout = null;\r\n\r\n\tif(Array.isArray(editorParams) || (!Array.isArray(editorParams) && typeof editorParams === \"object\" && !editorParams.values)){\r\n\t\tconsole.warn(\"DEPRECATION WARNING - values for the select editor must now be passed into the values property of the editorParams object, not as the editorParams object\");\r\n\t\teditorParams = {values:editorParams};\r\n\t}\r\n\r\n\tfunction getUniqueColumnValues(field){\r\n\t\tvar output = {},\r\n\t\tdata = self.table.getData(),\r\n\t\tcolumn;\r\n\r\n\t\tif(field){\r\n\t\t\tcolumn = self.table.columnManager.getColumnByField(field);\r\n\t\t}else{\r\n\t\t\tcolumn = cell.getColumn()._getSelf();\r\n\t\t}\r\n\r\n\t\tif(column){\r\n\t\t\tdata.forEach(function(row){\r\n\t\t\t\tvar val = column.getFieldValue(row);\r\n\r\n\t\t\t\tif(val !== null && typeof val !== \"undefined\" && val !== \"\"){\r\n\t\t\t\t\toutput[val] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"unable to find matching column to create select lookup list:\", field);\r\n\t\t}\r\n\r\n\t\treturn Object.keys(output);\r\n\t}\r\n\r\n\tfunction parseItems(inputValues, curentValues){\r\n\t\tvar dataList = [];\r\n\t\tvar displayList = [];\r\n\r\n\t\tfunction processComplexListItem(item){\r\n\t\t\tvar item = {\r\n\t\t\t\tlabel:item.label,\r\n\t\t\t\tvalue:item.value,\r\n\t\t\t\titemParams:item.itemParams,\r\n\t\t\t\telementAttributes: item.elementAttributes,\r\n\t\t\t\telement:false,\r\n\t\t\t};\r\n\r\n\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t// }\r\n\r\n\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\tsetItem(item);\r\n\t\t\t}\r\n\r\n\t\t\tdataList.push(item);\r\n\t\t\tdisplayList.push(item);\r\n\r\n\t\t\treturn item;\r\n\t\t}\r\n\r\n\t\tif(typeof inputValues == \"function\"){\r\n\t\t\tinputValues = inputValues(cell);\r\n\t\t}\r\n\r\n\t\tif(Array.isArray(inputValues)){\r\n\t\t\tinputValues.forEach(function(value){\r\n\t\t\t\tvar item;\r\n\r\n\t\t\t\tif(typeof value === \"object\"){\r\n\r\n\t\t\t\t\tif(value.options){\r\n\t\t\t\t\t\titem = {\r\n\t\t\t\t\t\t\tlabel:value.label,\r\n\t\t\t\t\t\t\tgroup:true,\r\n\t\t\t\t\t\t\titemParams:value.itemParams,\r\n\t\t\t\t\t\t\telementAttributes:value.elementAttributes,\r\n\t\t\t\t\t\t\telement:false,\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tdisplayList.push(item);\r\n\r\n\t\t\t\t\t\tvalue.options.forEach(function(item){\r\n\t\t\t\t\t\t\tprocessComplexListItem(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tprocessComplexListItem(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\titem = {\r\n\t\t\t\t\t\tlabel:value,\r\n\t\t\t\t\t\tvalue:value,\r\n\t\t\t\t\t\telement:false,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\t\t\tsetItem(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataList.push(item);\r\n\t\t\t\t\tdisplayList.push(item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tfor(var key in inputValues){\r\n\t\t\t\tvar item = {\r\n\t\t\t\t\tlabel:inputValues[key],\r\n\t\t\t\t\tvalue:key,\r\n\t\t\t\t\telement:false,\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// if(item.value === curentValue || (!isNaN(parseFloat(item.value)) && !isNaN(parseFloat(item.value)) && parseFloat(item.value) === parseFloat(curentValue))){\r\n\t\t\t\t// \tsetCurrentItem(item);\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tif(curentValues.indexOf(item.value) > -1){\r\n\t\t\t\t\tsetItem(item);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataList.push(item);\r\n\t\t\t\tdisplayList.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(editorParams.sortValuesList){\r\n\t\t\tdataList.sort((a, b) => {\r\n\t\t\t\treturn a.label < b.label ? -1 : (a.label > b.label ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\tdisplayList.sort((a, b) => {\r\n\t\t\t\treturn a.label < b.label ? -1 : (a.label > b.label ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\tif(editorParams.sortValuesList !== \"asc\"){\r\n\t\t\t\tdataList.reverse();\r\n\t\t\t\tdisplayList.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdataItems = dataList;\r\n\t\tdisplayItems = displayList;\r\n\r\n\t\tfillList();\r\n\t}\r\n\r\n\tfunction fillList(){\r\n\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\r\n\t\tdisplayItems.forEach(function(item){\r\n\r\n\t\t\tvar el = item.element;\r\n\r\n\t\t\tif(!el){\r\n\t\t\t\tel = document.createElement(\"div\");\r\n\t\t\t\titem.label = editorParams.listItemFormatter ? editorParams.listItemFormatter(item.value, item.label, cell, el, item.itemParams) : item.label;\r\n\t\t\t\tif(item.group){\r\n\t\t\t\t\tel.classList.add(\"tabulator-edit-select-list-group\");\r\n\t\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\t\tel.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tel.classList.add(\"tabulator-edit-select-list-item\");\r\n\t\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\t\tel.innerHTML = item.label === \"\" ? \"&nbsp;\" : item.label;\r\n\r\n\t\t\t\t\tel.addEventListener(\"click\", function(){\r\n\t\t\t\t\t\tblockListShow = true;\r\n\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tblockListShow = false;\r\n\t\t\t\t\t\t}, 10);\r\n\r\n\t\t\t\t\t\t// setCurrentItem(item);\r\n\t\t\t\t\t\t// chooseItem();\r\n\t\t\t\t\t\tif(multiselect){\r\n\t\t\t\t\t\t\ttoggleItem(item);\r\n\t\t\t\t\t\t\tinput.focus();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tchooseItem(item);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// if(item === currentItem){\r\n\t\t\t\t\t// \tel.classList.add(\"active\");\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tif(currentItems.indexOf(item) > -1){\r\n\t\t\t\t\t\tel.classList.add(\"active\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item.elementAttributes && typeof item.elementAttributes == \"object\"){\r\n\t\t\t\t\tfor (let key in item.elementAttributes){\r\n\t\t\t\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\t\t\t\tkey = key.slice(1);\r\n\t\t\t\t\t\t\tel.setAttribute(key, input.getAttribute(key) + item.elementAttributes[\"+\" + key]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tel.setAttribute(key, item.elementAttributes[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tel.addEventListener(\"mousedown\", function(){\r\n\t\t\t\t\tblurable = false;\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tblurable = true;\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t});\r\n\r\n\t\t\t\titem.element = el;\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(el);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tfunction setCurrentItem(item, active){\r\n\r\n\t\tif(!multiselect && currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"active\");\r\n\t\t}\r\n\r\n\t\tif(currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"focused\");\r\n\t\t}\r\n\r\n\t\tcurrentItem = item;\r\n\r\n\t\tif(item.element){\r\n\t\t\titem.element.classList.add(\"focused\");\r\n\t\t\tif(active){\r\n\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(item && item.element && item.element.scrollIntoView){\r\n\t\t\titem.element.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'start'});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// function chooseItem(){\r\n\t// \thideList();\r\n\r\n\t// \tif(initialValue !== currentItem.value){\r\n\t// \t\tinitialValue = currentItem.value;\r\n\t// \t\tsuccess(currentItem.value);\r\n\t// \t}else{\r\n\t// \t\tcancel();\r\n\t// \t}\r\n\t// }\r\n\r\n\tfunction setItem(item) {\r\n\t\tvar index = currentItems.indexOf(item);\r\n\r\n\t\tif(index == -1){\r\n\t\t\tcurrentItems.push(item);\r\n\t\t\tsetCurrentItem(item, true);\r\n\t\t}\r\n\r\n\t\tfillInput();\r\n\t}\r\n\r\n\tfunction unsetItem(index) {\r\n\t\tvar item = currentItems[index];\r\n\r\n\t\tif(index > -1){\r\n\t\t\tcurrentItems.splice(index, 1);\r\n\t\t\tif(item.element){\r\n\t\t\t\titem.element.classList.remove(\"active\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction toggleItem(item) {\r\n\t\tif(!item){\r\n\t\t\titem = currentItem;\r\n\t\t}\r\n\r\n\t\tvar index = currentItems.indexOf(item);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tunsetItem(index);\r\n\t\t}else{\r\n\t\t\tif(multiselect !== true && currentItems.length >= multiselect){\r\n\t\t\t\tunsetItem(0);\r\n\t\t\t}\r\n\r\n\t\t\tsetItem(item);\r\n\t\t}\r\n\r\n\t\tfillInput();\r\n\r\n\t}\r\n\r\n\tfunction chooseItem(item){\r\n\t\thideList();\r\n\r\n\t\tif(!item){\r\n\t\t\titem = currentItem;\r\n\t\t}\r\n\r\n\t\tif(item){\r\n\t\t\tinput.value = item.label;\r\n\t\t\tsuccess(item.value);\r\n\t\t}\r\n\r\n\t\tinitialDisplayValue = [item.value];\r\n\t}\r\n\r\n\r\n\tfunction chooseItems(silent){\r\n\t\tif(!silent){\r\n\t\t\thideList();\r\n\t\t}\r\n\r\n\t\tvar output = [];\r\n\r\n\t\tcurrentItems.forEach((item) => {\r\n\t\t\toutput.push(item.value);\r\n\t\t});\r\n\r\n\t\tinitialDisplayValue = output;\r\n\r\n\t\tsuccess(output);\r\n\t}\r\n\r\n\tfunction fillInput(){\r\n\t\tvar output = [];\r\n\r\n\t\tcurrentItems.forEach((item) => {\r\n\t\t\toutput.push(item.label);\r\n\t\t});\r\n\r\n\t\tinput.value = output.join(\", \");\r\n\r\n\t\tif(self.currentCell === false){\r\n\t\t\tchooseItems(true);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction unsetItems() {\r\n\r\n\t\tvar len = currentItems.length;\r\n\r\n\t\tfor(let i = 0; i < len; i++){\r\n\t\t\tunsetItem(0);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction cancelItem(){\r\n\t\thideList();\r\n\t\tcancel();\r\n\t}\r\n\r\n\tfunction showList(){\r\n\t\tcurrentItems = [];\r\n\r\n\t\tif(!listEl.parentNode){\r\n\t\t\tif(editorParams.values === true){\r\n\t\t\t\tparseItems(getUniqueColumnValues(), initialDisplayValue);\r\n\t\t\t}else if(typeof editorParams.values === \"string\"){\r\n\t\t\t\tparseItems(getUniqueColumnValues(editorParams.values), initialDisplayValue);\r\n\t\t\t}else{\r\n\t\t\t\tparseItems(editorParams.values || [], initialDisplayValue);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar offset = Helpers.elOffset(cellEl);\r\n\r\n\t\t\tlistEl.style.minWidth = cellEl.offsetWidth + \"px\";\r\n\r\n\t\t\tlistEl.style.top = (offset.top + cellEl.offsetHeight) + \"px\";\r\n\t\t\tlistEl.style.left = offset.left + \"px\";\r\n\r\n\r\n\t\t\tlistEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tblurable = false;\r\n\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tblurable = true;\r\n\t\t\t\t}, 10);\r\n\t\t\t});\r\n\r\n\t\t\tdocument.body.appendChild(listEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hideList(){\r\n\t\tif(listEl.parentNode){\r\n\t\t\tlistEl.parentNode.removeChild(listEl);\r\n\t\t}\r\n\r\n\t\tremoveScrollListener();\r\n\t}\r\n\r\n\tfunction removeScrollListener() {\r\n\t\tself.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\r\n\t}\r\n\r\n\tfunction scrollTovalue(char){\r\n\r\n\t\tclearTimeout(searchWordTimeout);\r\n\r\n\t\tvar character = String.fromCharCode(event.keyCode).toLowerCase();\r\n\t\tsearchWord += character.toLowerCase();\r\n\r\n\t\tvar match = dataItems.find((item) => {\r\n\t\t\treturn typeof item.label !== \"undefined\" && item.label.toLowerCase().startsWith(searchWord);\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tsetCurrentItem(match, !multiselect);\r\n\t\t}\r\n\r\n\t\tsearchWordTimeout = setTimeout(() => {\r\n\t\t\tsearchWord = \"\";\r\n\t\t}, 800)\r\n\t}\r\n\r\n\t//style input\r\n\tinput.setAttribute(\"type\", \"text\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\tinput.style.cursor = \"default\";\r\n\tinput.readOnly = (this.currentCell != false);\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : \"\";\r\n\r\n\t// if(editorParams.values === true){\r\n\t// \tparseItems(getUniqueColumnValues(), initialValue);\r\n\t// }else if(typeof editorParams.values === \"string\"){\r\n\t// \tparseItems(getUniqueColumnValues(editorParams.values), initialValue);\r\n\t// }else{\r\n\t// \tparseItems(editorParams.values || [], initialValue);\r\n\t// }\r\n\r\n\tinput.addEventListener(\"search\", function(e){\r\n\t\tif(!input.value){\r\n\t\t\tunsetItems();\r\n\t\t\tchooseItems();\r\n\t\t}\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tvar index;\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tindex = dataItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index > 0){\r\n\t\t\t\t\tsetCurrentItem(dataItems[index - 1], !multiselect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 40: //down arrow\r\n\t\t\tindex = dataItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index < dataItems.length - 1)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index < dataItems.length - 1){\r\n\t\t\t\t\tif(index == -1){\r\n\t\t\t\t\t\tsetCurrentItem(dataItems[0], !multiselect);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetCurrentItem(dataItems[index + 1], !multiselect);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\t// chooseItem();\r\n\r\n\t\t\tif(multiselect){\r\n\t\t\t\ttoggleItem();\r\n\t\t\t}else{\r\n\t\t\t\tchooseItem();\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancelItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 9: //tab\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tif(self.currentCell === false){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tif(e.keyCode >= 38 && e.keyCode <= 90){\r\n\t\t\t\tscrollTovalue(e.keyCode);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tif(blurable){\r\n\t\t\tif(multiselect){\r\n\t\t\t\tchooseItems();\r\n\t\t\t}else{\r\n\t\t\t\tcancelItem();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"focus\", function(e){\r\n\t\tif(!blockListShow){\r\n\t\t\tshowList();\r\n\t\t}\r\n\t});\r\n\r\n\t//style list element\r\n\tlistEl = document.createElement(\"div\");\r\n\tlistEl.classList.add(\"tabulator-edit-select-list\");\r\n\r\n\tonRendered(function(){\r\n\t\tinput.style.height = \"100%\";\r\n\t\tinput.focus({preventScroll: true});\r\n\t});\r\n\r\n\tsetTimeout(() => {\r\n\t\tthis.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\r\n\t}, 10);\r\n\r\n\treturn input;\r\n};","import Helpers from '../../../../core/tools/Helpers.js';\r\nimport maskInput from '../../inputMask.js';\r\n\r\n//autocomplete\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\tcellEl = cell.getElement(),\r\n\tinitialValue = cell.getValue(),\r\n\tvertNav = editorParams.verticalNavigation || \"editor\",\r\n\tinitialDisplayValue = typeof initialValue !== \"undefined\" || initialValue === null ? initialValue : (typeof editorParams.defaultValue !== \"undefined\" ? editorParams.defaultValue : \"\"),\r\n\tinput = document.createElement(\"input\"),\r\n\tlistEl = document.createElement(\"div\"),\r\n\tallItems = [],\r\n\tdisplayItems = [],\r\n\tvalues = [],\r\n\tcurrentItem = false,\r\n\tblurable = true,\r\n\tuniqueColumnValues = false;\r\n\r\n\t//style input\r\n\tinput.setAttribute(\"type\", \"search\");\r\n\r\n\tinput.style.padding = \"4px\";\r\n\tinput.style.width = \"100%\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//style list element\r\n\tlistEl.classList.add(\"tabulator-edit-select-list\");\r\n\r\n\tlistEl.addEventListener(\"mousedown\", function(e){\r\n\t\tblurable = false;\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tblurable = true;\r\n\t\t}, 10);\r\n\t});\r\n\r\n\r\n\tfunction genUniqueColumnValues(){\r\n\t\tif(editorParams.values === true){\r\n\t\t\tuniqueColumnValues = getUniqueColumnValues();\r\n\t\t}else if(typeof editorParams.values === \"string\"){\r\n\t\t\tuniqueColumnValues = getUniqueColumnValues(editorParams.values);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getUniqueColumnValues(field){\r\n\t\tvar output = {},\r\n\t\tdata = self.table.getData(),\r\n\t\tcolumn;\r\n\r\n\t\tif(field){\r\n\t\t\tcolumn = self.table.columnManager.getColumnByField(field);\r\n\t\t}else{\r\n\t\t\tcolumn = cell.getColumn()._getSelf();\r\n\t\t}\r\n\r\n\t\tif(column){\r\n\t\t\tdata.forEach(function(row){\r\n\t\t\t\tvar val = column.getFieldValue(row);\r\n\r\n\t\t\t\tif(val !== null && typeof val !== \"undefined\" && val !== \"\"){\r\n\t\t\t\t\toutput[val] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(editorParams.sortValuesList){\r\n\t\t\t\tif(editorParams.sortValuesList == \"asc\"){\r\n\t\t\t\t\toutput = Object.keys(output).sort();\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput = Object.keys(output).sort().reverse();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\toutput = Object.keys(output);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"unable to find matching column to create autocomplete lookup list:\", field);\r\n\t\t}\r\n\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfunction filterList(term, intialLoad){\r\n\t\tvar matches = [],\r\n\t\tvalues, items, searchEl;\r\n\r\n\t\t//lookup base values list\r\n\t\tif(uniqueColumnValues){\r\n\t\t\tvalues = uniqueColumnValues;\r\n\t\t}else{\r\n\t\t\tvalues = editorParams.values || [];\r\n\t\t}\r\n\r\n\t\tif(editorParams.searchFunc){\r\n\t\t\tmatches = editorParams.searchFunc(term, values);\r\n\r\n\t\t\tif(matches instanceof Promise){\r\n\r\n\t\t\t\taddNotice(typeof editorParams.searchingPlaceholder !== \"undefined\" ? editorParams.searchingPlaceholder : \"Searching...\");\r\n\r\n\t\t\t\tmatches.then((result) => {\r\n\t\t\t\t\tfillListIfNotEmpty(parseItems(result), intialLoad);\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tconsole.err(\"error in autocomplete search promise:\", err);\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tfillListIfNotEmpty(parseItems(matches), intialLoad);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\titems = parseItems(values);\r\n\r\n\t\t\tif(term === \"\"){\r\n\t\t\t\tif(editorParams.showListOnEmpty){\r\n\t\t\t\t\tmatches = items;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\titems.forEach(function(item){\r\n\t\t\t\t\tif(item.value !== null || typeof item.value !== \"undefined\"){\r\n\t\t\t\t\t\tif(String(item.value).toLowerCase().indexOf(String(term).toLowerCase()) > -1 || String(item.title).toLowerCase().indexOf(String(term).toLowerCase()) > -1){\r\n\t\t\t\t\t\t\tmatches.push(item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfillListIfNotEmpty(matches, intialLoad);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addNotice(notice){\r\n\t\tvar searchEl = document.createElement(\"div\");\r\n\r\n\t\tclearList();\r\n\r\n\t\tif(notice !== false){\r\n\t\t\tsearchEl.classList.add(\"tabulator-edit-select-list-notice\");\r\n\t\t\tsearchEl.tabIndex = 0;\r\n\r\n\t\t\tif(notice instanceof Node){\r\n\t\t\t\tsearchEl.appendChild(notice);\r\n\t\t\t}else{\r\n\t\t\t\tsearchEl.innerHTML = notice;\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(searchEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction parseItems(inputValues){\r\n\t\tvar itemList = [];\r\n\r\n\t\tif(Array.isArray(inputValues)){\r\n\t\t\tinputValues.forEach(function(value){\r\n\r\n\t\t\t\tvar item = {};\r\n\r\n\t\t\t\tif(typeof value === \"object\"){\r\n\t\t\t\t\titem.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value.value, value.label) : value.label;\r\n\t\t\t\t\titem.value = value.value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\titem.title = editorParams.listItemFormatter ? editorParams.listItemFormatter(value, value) : value;\r\n\t\t\t\t\titem.value = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titemList.push(item);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tfor(var key in inputValues){\r\n\t\t\t\tvar item = {\r\n\t\t\t\t\ttitle:editorParams.listItemFormatter ? editorParams.listItemFormatter(key, inputValues[key]) : inputValues[key],\r\n\t\t\t\t\tvalue:key,\r\n\t\t\t\t};\r\n\r\n\t\t\t\titemList.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn itemList;\r\n\t}\r\n\r\n\tfunction clearList(){\r\n\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\t}\r\n\r\n\tfunction fillListIfNotEmpty(items, intialLoad){\r\n\t\tif(items.length){\r\n\t\t\tfillList(items, intialLoad);\r\n\t\t}else{\r\n\t\t\tif(editorParams.emptyPlaceholder){\r\n\t\t\t\taddNotice(editorParams.emptyPlaceholder);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction fillList(items, intialLoad){\r\n\t\tvar current = false;\r\n\r\n\t\tclearList();\r\n\r\n\t\tdisplayItems = items;\r\n\r\n\t\tdisplayItems.forEach(function(item){\r\n\t\t\tvar el = item.element;\r\n\r\n\t\t\tif(!el){\r\n\t\t\t\tel = document.createElement(\"div\");\r\n\t\t\t\tel.classList.add(\"tabulator-edit-select-list-item\");\r\n\t\t\t\tel.tabIndex = 0;\r\n\t\t\t\tel.innerHTML = item.title;\r\n\r\n\t\t\t\tel.addEventListener(\"click\", function(e){\r\n\t\t\t\t\tsetCurrentItem(item);\r\n\t\t\t\t\tchooseItem();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tel.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\t\tblurable = false;\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tblurable = true;\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t});\r\n\r\n\t\t\t\titem.element = el;\r\n\r\n\t\t\t\tif(intialLoad && item.value == initialValue){\r\n\t\t\t\t\tinput.value = item.title;\r\n\t\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t\t\tcurrent = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item === currentItem){\r\n\t\t\t\t\titem.element.classList.add(\"active\");\r\n\t\t\t\t\tcurrent = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlistEl.appendChild(el);\r\n\t\t});\r\n\r\n\t\tif(!current){\r\n\t\t\tsetCurrentItem(false);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction chooseItem(){\r\n\t\thideList();\r\n\r\n\t\tif(currentItem){\r\n\t\t\tif(initialValue !== currentItem.value){\r\n\t\t\t\tinitialValue = currentItem.value;\r\n\t\t\t\tinput.value = currentItem.title;\r\n\t\t\t\tsuccess(currentItem.value);\r\n\t\t\t}else{\r\n\t\t\t\tcancel();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(editorParams.freetext){\r\n\t\t\t\tinitialValue = input.value;\r\n\t\t\t\tsuccess(input.value);\r\n\t\t\t}else{\r\n\t\t\t\tif(editorParams.allowEmpty && input.value === \"\"){\r\n\t\t\t\t\tinitialValue = input.value;\r\n\t\t\t\t\tsuccess(input.value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcancel();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction showList(){\r\n\t\tif(!listEl.parentNode){\r\n\t\t\twhile(listEl.firstChild) listEl.removeChild(listEl.firstChild);\r\n\r\n\t\t\tvar offset = Helpers.elOffset(cellEl);\r\n\r\n\t\t\tlistEl.style.minWidth = cellEl.offsetWidth + \"px\";\r\n\r\n\t\t\tlistEl.style.top = (offset.top + cellEl.offsetHeight) + \"px\";\r\n\t\t\tlistEl.style.left = offset.left + \"px\";\r\n\t\t\tdocument.body.appendChild(listEl);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setCurrentItem(item, showInputValue){\r\n\t\tif(currentItem && currentItem.element){\r\n\t\t\tcurrentItem.element.classList.remove(\"active\");\r\n\t\t}\r\n\r\n\t\tcurrentItem = item;\r\n\r\n\t\tif(item && item.element){\r\n\t\t\titem.element.classList.add(\"active\");\r\n\t\t}\r\n\r\n\t\tif(item && item.element && item.element.scrollIntoView){\r\n\t\t\titem.element.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'start'});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hideList(){\r\n\t\tif(listEl.parentNode){\r\n\t\t\tlistEl.parentNode.removeChild(listEl);\r\n\t\t}\r\n\r\n\t\tremoveScrollListener();\r\n\t}\r\n\r\n\r\n\tfunction cancelItem(){\r\n\t\thideList();\r\n\t\tcancel();\r\n\t}\r\n\r\n\tfunction removeScrollListener() {\r\n\t\tself.table.rowManager.element.removeEventListener(\"scroll\", cancelItem);\r\n\t}\r\n\r\n\t//allow key based navigation\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tvar index;\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tindex = displayItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index)){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index > 0){\r\n\t\t\t\t\tsetCurrentItem(displayItems[index - 1]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetCurrentItem(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 40: //down arrow\r\n\r\n\t\t\tindex = displayItems.indexOf(currentItem);\r\n\r\n\t\t\tif(vertNav == \"editor\" || (vertNav == \"hybrid\" && index < displayItems.length - 1)){\r\n\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif(index < displayItems.length - 1){\r\n\t\t\t\t\tif(index == -1){\r\n\t\t\t\t\t\tsetCurrentItem(displayItems[0]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsetCurrentItem(displayItems[index + 1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\te.stopPropagation();\r\n\t\t\t// e.preventDefault();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\tchooseItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancelItem();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 36: //home\r\n\t\t\tcase 35: //end\r\n\t\t\t//prevent table navigation while using input element\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"keyup\", function(e){\r\n\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 38: //up arrow\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tcase 39: //up arrow\r\n\t\t\tcase 40: //right arrow\r\n\t\t\tcase 13: //enter\r\n\t\t\tcase 27: //escape\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tfilterList(input.value);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tinput.addEventListener(\"search\", function(e){\r\n\t\tfilterList(input.value);\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tif(blurable){\r\n\t\t\tchooseItem();\r\n\t\t}\r\n\t});\r\n\r\n\tinput.addEventListener(\"focus\", function(e){\r\n\t\tvar value = initialDisplayValue;\r\n\t\tgenUniqueColumnValues();\r\n\t\tshowList();\r\n\t\tinput.value = value;\r\n\t\tfilterList(value, true);\r\n\t});\r\n\r\n\r\n\tonRendered(function(){\r\n\t\tinput.style.height = \"100%\";\r\n\t\tinput.focus({preventScroll: true});\r\n\t});\r\n\r\n\tif(editorParams.mask){\r\n\t\tmaskInput(input, editorParams);\r\n\t}\r\n\r\n\tsetTimeout(() => {\r\n\t\tthis.table.rowManager.element.addEventListener(\"scroll\", cancelItem);\r\n\t}, 10);\r\n\r\n\tgenUniqueColumnValues();\r\n\tinput.value = initialDisplayValue;\r\n\tfilterList(initialDisplayValue, true);\r\n\r\n\treturn input;\r\n};","//star rating\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar self = this,\r\n\telement = cell.getElement(),\r\n\tvalue = cell.getValue(),\r\n\tmaxStars = element.getElementsByTagName(\"svg\").length || 5,\r\n\tsize = element.getElementsByTagName(\"svg\")[0] ? element.getElementsByTagName(\"svg\")[0].getAttribute(\"width\") : 14,\r\n\tstars = [],\r\n\tstarsHolder = document.createElement(\"div\"),\r\n\tstar = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n\r\n\r\n\t//change star type\r\n\tfunction starChange(val){\r\n\t\tstars.forEach(function(star, i){\r\n\t\t\tif(i < val){\r\n\t\t\t\tif(self.table.browser == \"ie\"){\r\n\t\t\t\t\tstar.setAttribute(\"class\", \"tabulator-star-active\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstar.classList.replace(\"tabulator-star-inactive\", \"tabulator-star-active\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstar.innerHTML = '<polygon fill=\"#488CE9\" stroke=\"#014AAE\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\t\t\t}else{\r\n\t\t\t\tif(self.table.browser == \"ie\"){\r\n\t\t\t\t\tstar.setAttribute(\"class\", \"tabulator-star-inactive\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstar.classList.replace(\"tabulator-star-active\", \"tabulator-star-inactive\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstar.innerHTML = '<polygon fill=\"#010155\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//build stars\r\n\tfunction buildStar(i){\r\n\r\n\t\tvar starHolder =  document.createElement(\"span\");\r\n\t\tvar nextStar = star.cloneNode(true);\r\n\r\n\t\tstars.push(nextStar);\r\n\r\n\t\tstarHolder.addEventListener(\"mouseenter\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tstarChange(i);\r\n\t\t});\r\n\r\n\t\tstarHolder.addEventListener(\"mousemove\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t});\r\n\r\n\t\tstarHolder.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tsuccess(i);\r\n\t\t\telement.blur();\r\n\t\t});\r\n\r\n\t\tstarHolder.appendChild(nextStar);\r\n\t\tstarsHolder.appendChild(starHolder);\r\n\r\n\t}\r\n\r\n\t//handle keyboard navigation value change\r\n\tfunction changeValue(val){\r\n\t\tvalue = val;\r\n\t\tstarChange(val);\r\n\t}\r\n\r\n\t//style cell\r\n\telement.style.whiteSpace = \"nowrap\";\r\n\telement.style.overflow = \"hidden\";\r\n\telement.style.textOverflow = \"ellipsis\";\r\n\r\n\t//style holding element\r\n\tstarsHolder.style.verticalAlign = \"middle\";\r\n\tstarsHolder.style.display = \"inline-block\";\r\n\tstarsHolder.style.padding = \"4px\";\r\n\r\n\t//style star\r\n\tstar.setAttribute(\"width\", size);\r\n\tstar.setAttribute(\"height\", size);\r\n\tstar.setAttribute(\"viewBox\", \"0 0 512 512\");\r\n\tstar.setAttribute(\"xml:space\", \"preserve\");\r\n\tstar.style.padding = \"0 1px\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tstarsHolder.setAttribute(key, starsHolder.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tstarsHolder.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//create correct number of stars\r\n\tfor(var i=1;i<= maxStars;i++){\r\n\t\tbuildStar(i);\r\n\t}\r\n\r\n\t//ensure value does not exceed number of stars\r\n\tvalue = Math.min(parseInt(value), maxStars);\r\n\r\n\t// set initial styling of stars\r\n\tstarChange(value);\r\n\r\n\tstarsHolder.addEventListener(\"mousemove\", function(e){\r\n\t\tstarChange(0);\r\n\t});\r\n\r\n\tstarsHolder.addEventListener(\"click\", function(e){\r\n\t\tsuccess(0);\r\n\t});\r\n\r\n\telement.addEventListener(\"blur\", function(e){\r\n\t\tcancel();\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\telement.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 39: //right arrow\r\n\t\t\tchangeValue(value + 1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\tchangeValue(value - 1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 13: //enter\r\n\t\t\tsuccess(value);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\treturn starsHolder;\r\n};","//draggable progress bar\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar element = cell.getElement(),\r\n\tmax = typeof editorParams.max === \"undefined\" ? ((element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"max\")) || 100) : editorParams.max,\r\n\tmin = typeof editorParams.min === \"undefined\" ? ((element.getElementsByTagName(\"div\")[0] && element.getElementsByTagName(\"div\")[0].getAttribute(\"min\")) || 0) : editorParams.min,\r\n\tpercent = (max - min) / 100,\r\n\tvalue = cell.getValue() || 0,\r\n\thandle = document.createElement(\"div\"),\r\n\tbar = document.createElement(\"div\"),\r\n\tmouseDrag, mouseDragWidth;\r\n\r\n\t//set new value\r\n\tfunction updateValue(){\r\n\t\tvar style = window.getComputedStyle(element, null);\r\n\r\n\t\tvar calcVal = (percent * Math.round(bar.offsetWidth / ((element.clientWidth - parseInt(style.getPropertyValue(\"padding-left\")) - parseInt(style.getPropertyValue(\"padding-right\")))/100))) + min;\r\n\t\tsuccess(calcVal);\r\n\t\telement.setAttribute(\"aria-valuenow\", calcVal);\r\n\t\telement.setAttribute(\"aria-label\", value);\r\n\t}\r\n\r\n\t//style handle\r\n\thandle.style.position = \"absolute\";\r\n\thandle.style.right = \"0\";\r\n\thandle.style.top = \"0\";\r\n\thandle.style.bottom = \"0\";\r\n\thandle.style.width = \"5px\";\r\n\thandle.classList.add(\"tabulator-progress-handle\");\r\n\r\n\t//style bar\r\n\tbar.style.display = \"inline-block\";\r\n\tbar.style.position = \"relative\";\r\n\t// bar.style.top = \"8px\";\r\n\t// bar.style.bottom = \"8px\";\r\n\t// bar.style.left = \"4px\";\r\n\t// bar.style.marginRight = \"4px\";\r\n\tbar.style.height = \"100%\";\r\n\tbar.style.backgroundColor = \"#488CE9\";\r\n\tbar.style.maxWidth = \"100%\";\r\n\tbar.style.minWidth = \"0%\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tbar.setAttribute(key, bar.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tbar.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//style cell\r\n\telement.style.padding = \"4px 4px\";\r\n\r\n\t//make sure value is in range\r\n\tvalue = Math.min(parseFloat(value), max);\r\n\tvalue = Math.max(parseFloat(value), min);\r\n\r\n\t//workout percentage\r\n\tvalue = Math.round((value - min) / percent);\r\n\t// bar.style.right = value + \"%\";\r\n\tbar.style.width = value + \"%\";\r\n\r\n\telement.setAttribute(\"aria-valuemin\", min);\r\n\telement.setAttribute(\"aria-valuemax\", max);\r\n\r\n\tbar.appendChild(handle);\r\n\r\n\thandle.addEventListener(\"mousedown\", function(e){\r\n\t\tmouseDrag = e.screenX;\r\n\t\tmouseDragWidth = bar.offsetWidth;\r\n\t});\r\n\r\n\thandle.addEventListener(\"mouseover\", function(){\r\n\t\thandle.style.cursor = \"ew-resize\";\r\n\t});\r\n\r\n\telement.addEventListener(\"mousemove\", function(e){\r\n\t\tif(mouseDrag){\r\n\t\t\tbar.style.width = (mouseDragWidth + e.screenX - mouseDrag) + \"px\";\r\n\t\t}\r\n\t});\r\n\r\n\telement.addEventListener(\"mouseup\", function(e){\r\n\t\tif(mouseDrag){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\tmouseDrag = false;\r\n\t\t\tmouseDragWidth = false;\r\n\r\n\t\t\tupdateValue();\r\n\t\t}\r\n\t});\r\n\r\n\t//allow key based navigation\r\n\telement.addEventListener(\"keydown\", function(e){\r\n\t\tswitch(e.keyCode){\r\n\t\t\tcase 39: //right arrow\r\n\t\t\te.preventDefault();\r\n\t\t\tbar.style.width = (bar.clientWidth + element.clientWidth/100) + \"px\";\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 37: //left arrow\r\n\t\t\te.preventDefault();\r\n\t\t\tbar.style.width = (bar.clientWidth - element.clientWidth/100) + \"px\";\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 9: //tab\r\n\t\t\tcase 13: //enter\r\n\t\t\tupdateValue();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 27: //escape\r\n\t\t\tcancel();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t});\r\n\r\n\telement.addEventListener(\"blur\", function(){\r\n\t\tcancel();\r\n\t});\r\n\r\n\treturn bar;\r\n};","//checkbox\r\nexport default function(cell, onRendered, success, cancel, editorParams){\r\n\tvar value = cell.getValue(),\r\n\tinput = document.createElement(\"input\"),\r\n\ttristate = editorParams.tristate,\r\n\tindetermValue = typeof editorParams.indeterminateValue === \"undefined\" ? null : editorParams.indeterminateValue,\r\n\tindetermState = false;\r\n\r\n\tinput.setAttribute(\"type\", \"checkbox\");\r\n\tinput.style.marginTop = \"5px\";\r\n\tinput.style.boxSizing = \"border-box\";\r\n\r\n\tif(editorParams.elementAttributes && typeof editorParams.elementAttributes == \"object\"){\r\n\t\tfor (let key in editorParams.elementAttributes){\r\n\t\t\tif(key.charAt(0) == \"+\"){\r\n\t\t\t\tkey = key.slice(1);\r\n\t\t\t\tinput.setAttribute(key, input.getAttribute(key) + editorParams.elementAttributes[\"+\" + key]);\r\n\t\t\t}else{\r\n\t\t\t\tinput.setAttribute(key, editorParams.elementAttributes[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinput.value = value;\r\n\r\n\tif(tristate && (typeof value === \"undefined\" || value === indetermValue || value === \"\")){\r\n\t\tindetermState = true;\r\n\t\tinput.indeterminate = true;\r\n\t}\r\n\r\n\tif(this.table.browser != \"firefox\"){ //prevent blur issue on mac firefox\r\n\t\tonRendered(function(){\r\n\t\t\tinput.focus({preventScroll: true});\r\n\t\t});\r\n\t}\r\n\r\n\tinput.checked = value === true || value === \"true\" || value === \"True\" || value === 1;\r\n\r\n\tonRendered(function(){\r\n\t\tinput.focus();\r\n\t});\r\n\r\n\tfunction setValue(blur){\r\n\t\tif(tristate){\r\n\t\t\tif(!blur){\r\n\t\t\t\tif(input.checked && !indetermState){\r\n\t\t\t\t\tinput.checked = false;\r\n\t\t\t\t\tinput.indeterminate = true;\r\n\t\t\t\t\tindetermState = true;\r\n\t\t\t\t\treturn indetermValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tindetermState = false;\r\n\t\t\t\t\treturn input.checked;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(indetermState){\r\n\t\t\t\t\treturn indetermValue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn input.checked;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\treturn input.checked;\r\n\t\t}\r\n\t}\r\n\r\n\t//submit new value on blur\r\n\tinput.addEventListener(\"change\", function(e){\r\n\t\tsuccess(setValue());\r\n\t});\r\n\r\n\tinput.addEventListener(\"blur\", function(e){\r\n\t\tsuccess(setValue(true));\r\n\t});\r\n\r\n\t//submit new value on enter\r\n\tinput.addEventListener(\"keydown\", function(e){\r\n\t\tif(e.keyCode == 13){\r\n\t\t\tsuccess(setValue());\r\n\t\t}\r\n\t\tif(e.keyCode == 27){\r\n\t\t\tcancel();\r\n\t\t}\r\n\t});\r\n\r\n\treturn input;\r\n};","import input from './editors/input.js';\r\nimport textarea from './editors/textarea.js';\r\nimport number from './editors/number.js';\r\nimport range from './editors/range.js';\r\nimport select from './editors/select.js';\r\nimport autocomplete from './editors/autocomplete.js';\r\nimport star from './editors/star.js';\r\nimport progress from './editors/progress.js';\r\nimport tickCross from './editors/tickCross.js';\r\n\r\nexport default {\r\n\tinput:input,\r\n\ttextarea:textarea,\r\n    number:number,\r\n    range:range,\r\n\tselect:select,\r\n\tautocomplete:autocomplete,\r\n\tstar:star,\r\n\tprogress:progress,\r\n\ttickCross:tickCross,\r\n};","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defaultEditors from './defaults/editors.js';\r\n\r\nclass Edit extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.currentCell = false; //hold currently editing cell\r\n\t\tthis.mouseClick = false; //hold mousedown state to prevent click binding being overriden by editor opening\r\n\t\tthis.recursionBlock = false; //prevent focus recursion\r\n\t\tthis.invalidEdit = false;\r\n\t\tthis.editedCells = [];\r\n\r\n\t\tthis.editors = Edit.editors;\r\n\r\n\t\tthis.registerColumnOption(\"editable\");\r\n\t\tthis.registerColumnOption(\"editor\");\r\n\t\tthis.registerColumnOption(\"editorParams\");\r\n\r\n\t\tthis.registerColumnOption(\"cellEditing\");\r\n\t\tthis.registerColumnOption(\"cellEdited\");\r\n\t\tthis.registerColumnOption(\"cellEditCancelled\");\r\n\r\n\t\tthis.registerTableFunction(\"getEditedCells\", this.getEditedCells.bind(this));\r\n\t\tthis.registerTableFunction(\"clearCellEdited\", this.clearCellEdited.bind(this));\r\n\t\tthis.registerTableFunction(\"navigatePrev\", this.navigatePrev.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateNext\", this.navigateNext.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateLeft\", this.navigateLeft.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateRight\", this.navigateRight.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateUp\", this.navigateUp.bind(this));\r\n\t\tthis.registerTableFunction(\"navigateDown\", this.navigateDown.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"isEdited\", this.cellisEdited.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"clearEdited\", this.clearEdited.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"edit\", this.editCell.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"cancelEdit\", this.cellCancelEdit.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigatePrev\", this.navigatePrev.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateNext\", this.navigateNext.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateLeft\", this.navigateLeft.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateRight\", this.navigateRight.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateUp\", this.navigateUp.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"navigateDown\", this.navigateDown.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-init\", this.bindEditor.bind(this));\r\n\t\tthis.subscribe(\"cell-delete\", this.clearEdited.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\r\n\t\tthis.subscribe(\"column-delete\", this.columnDeleteCheck.bind(this));\r\n\t\tthis.subscribe(\"row-deleting\", this.rowDeleteCheck.bind(this));\r\n\t\tthis.subscribe(\"data-refeshing\", this.cancelEdit.bind(this));\r\n\r\n\t\tthis.subscribe(\"keybinding-nav-prev\", this.navigatePrev.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-next\", this.keybindingNavigateNext.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-left\", this.navigateLeft.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-right\", this.navigateRight.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-up\", this.navigateUp.bind(this));\r\n\t\tthis.subscribe(\"keybinding-nav-down\", this.navigateDown.bind(this));\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t////// Keybinding Functions ///////\r\n\t///////////////////////////////////\r\n\r\n\tkeybindingNavigateNext(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnewRow = this.options(\"tabEndNewRow\");\r\n\r\n\t\tif(cell){\r\n\t\t\tif(!this.navigateNext(e)){\r\n\t\t\t\tif(newRow){\r\n\t\t\t\t\tcell.getElement().firstChild.blur();\r\n\r\n\t\t\t\t\tif(newRow === true){\r\n\t\t\t\t\t\tnewRow = this.table.addRow({})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(typeof newRow == \"function\"){\r\n\t\t\t\t\t\t\tnewRow = this.table.addRow(newRow(cell.row.getComponent()))\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnewRow = this.table.addRow(Object.assign({}, newRow));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewRow.then(() => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tnav.next();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Cell Functions //////////\r\n\t///////////////////////////////////\r\n\r\n\tcellisEdited(cell){\r\n\t\treturn !! cell.modules.edit && cell.modules.edit.edited;\r\n\t}\r\n\r\n\tcellCancelEdit(cell){\r\n\t\tif(cell === this.currentCell){\r\n\t\t\tthis.table.modules.edit.cancelEdit();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cancel Editor Error - This cell is not currently being edited \");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\tclearCellEdited(cells){\r\n\t\tif(!cells){\r\n\t\t\tcells = this.modules.edit.getEditedCells();\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(cells)){\r\n\t\t\tcells = [cells];\r\n\t\t}\r\n\r\n\t\tcells.forEach((cell) => {\r\n\t\t\tthis.modules.edit.clearEdited(cell._getSelf());\r\n\t\t});\r\n\t}\r\n\r\n\tnavigatePrev(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnextCell, prevRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnextCell = this.navigateLeft();\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tprevRow = this.table.rowManager.prevDisplayRow(cell.row, true);\r\n\r\n\t\t\t\tif(prevRow){\r\n\t\t\t\t\tnextCell = this.findNextEditableCell(prevRow, prevRow.cells.length);\r\n\r\n\t\t\t\t\tif(nextCell){\r\n\t\t\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateNext(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tnextCell, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnextCell = this.navigateRight();\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tnextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\r\n\r\n\t\t\t\tif(nextRow){\r\n\t\t\t\t\tnextCell = this.findNextEditableCell(nextRow, -1);\r\n\r\n\t\t\t\t\tif(nextCell){\r\n\t\t\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateLeft(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextCell;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextCell = this.findPrevEditableCell(cell.row, index);\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateRight(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextCell;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextCell = this.findNextEditableCell(cell.row, index);\r\n\r\n\t\t\tif(nextCell){\r\n\t\t\t\tnextCell.getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateUp(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextRow = this.table.rowManager.prevDisplayRow(cell.row, true);\r\n\r\n\t\t\tif(nextRow){\r\n\t\t\t\tnextRow.cells[index].getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnavigateDown(e){\r\n\t\tvar cell = this.currentCell,\r\n\t\tindex, nextRow;\r\n\r\n\t\tif(cell){\r\n\r\n\t\t\tif(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tindex = cell.getIndex();\r\n\t\t\tnextRow = this.table.rowManager.nextDisplayRow(cell.row, true);\r\n\r\n\t\t\tif(nextRow){\r\n\t\t\t\tnextRow.cells[index].getComponent().edit();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfindNextEditableCell(row, index){\r\n\t\tvar nextCell = false;\r\n\r\n\t\tif(index < row.cells.length-1){\r\n\t\t\tfor(var i = index+1; i < row.cells.length; i++){\r\n\t\t\t\tlet cell = row.cells[i];\r\n\r\n\t\t\t\tif(cell.column.modules.edit && Helpers.elVisible(cell.getElement())){\r\n\t\t\t\t\tlet allowEdit = true;\r\n\r\n\t\t\t\t\tif(typeof cell.column.modules.edit.check == \"function\"){\r\n\t\t\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(allowEdit){\r\n\t\t\t\t\t\tnextCell = cell;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn nextCell;\r\n\t}\r\n\r\n\tfindPrevEditableCell(row, index){\r\n\t\tvar prevCell = false;\r\n\r\n\t\tif(index > 0){\r\n\t\t\tfor(var i = index-1; i >= 0; i--){\r\n\t\t\t\tlet cell = row.cells[i],\r\n\t\t\t\tallowEdit = true;\r\n\r\n\t\t\t\tif(cell.column.modules.edit && Helpers.elVisible(cell.getElement())){\r\n\t\t\t\t\tif(typeof cell.column.modules.edit.check == \"function\"){\r\n\t\t\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(allowEdit){\r\n\t\t\t\t\t\tprevCell = cell;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn prevCell;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(typeof column.definition.editor !== \"undefined\"){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\tcolumnDeleteCheck(column){\r\n\t\tif(this.currentCell && this.currentCell.column === column){\r\n\t\t\tthis.cancelEdit();\r\n\t\t}\r\n\t}\r\n\r\n\trowDeleteCheck(row){\r\n\t\tif(this.currentCell && this.currentCell.row === row){\r\n\t\t\tthis.cancelEdit();\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column editor\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = {\r\n\t\t\teditor:false,\r\n\t\t\tblocked:false,\r\n\t\t\tcheck:column.definition.editable,\r\n\t\t\tparams:column.definition.editorParams || {}\r\n\t\t};\r\n\r\n\t\t//set column editor\r\n\t\tswitch(typeof column.definition.editor){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(this.editors[column.definition.editor]){\r\n\t\t\t\tconfig.editor = this.editors[column.definition.editor];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Editor Error - No such editor found: \", column.definition.editor);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tconfig.editor = column.definition.editor;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"boolean\":\r\n\t\t\tif(column.definition.editor === true){\r\n\t\t\t\tif(typeof column.definition.formatter !== \"function\"){\r\n\t\t\t\t\tif(this.editors[column.definition.formatter]){\r\n\t\t\t\t\t\tconfig.editor = this.editors[column.definition.formatter];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconfig.editor = this.editors[\"input\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Editor Error - Cannot auto lookup editor for a custom formatter: \", column.definition.formatter);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(config.editor){\r\n\t\t\tcolumn.modules.edit = config;\r\n\t\t}\r\n\t}\r\n\r\n\tgetCurrentCell(){\r\n\t\treturn this.currentCell ? this.currentCell.getComponent() : false;\r\n\t}\r\n\r\n\tclearEditor(cancel){\r\n\t\tvar cell = this.currentCell,\r\n\t\tcellEl;\r\n\r\n\t\tthis.invalidEdit = false;\r\n\r\n\t\tconsole.log(\"clear\", cancel, cell, cell.validate)\r\n\r\n\t\tif(cell){\r\n\t\t\tthis.currentCell = false;\r\n\r\n\t\t\tcellEl = cell.getElement();\r\n\r\n\t\t\tif(cancel){\r\n\t\t\t\tif(cell.column.modules.validate && this.table.modExists(\"validate\")){\r\n\t\t\t\t\tthis.table.modules.validate.cellValidate(cell);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tcellEl.classList.remove(\"tabulator-validation-fail\");\r\n\t\t\t}\r\n\r\n\t\t\tcellEl.classList.remove(\"tabulator-editing\");\r\n\r\n\t\t\twhile(cellEl.firstChild) cellEl.removeChild(cellEl.firstChild);\r\n\r\n\t\t\tcell.row.getElement().classList.remove(\"tabulator-row-editing\");\r\n\t\t}\r\n\t}\r\n\r\n\tcancelEdit(){\r\n\t\tif(this.currentCell){\r\n\t\t\tvar cell = this.currentCell;\r\n\t\t\tvar component = this.currentCell.getComponent();\r\n\r\n\t\t\tthis.clearEditor(true);\r\n\t\t\tcell.setValueActual(cell.getValue());\r\n\t\t\tcell.cellRendered();\r\n\r\n\t\t\tif(cell.column.definition.editor == \"textarea\" || cell.column.definition.variableHeight){\r\n\t\t\t\tcell.row.normalizeHeight(true);\r\n\t\t\t}\r\n\r\n\t\t\tif(cell.column.definition.cellEditCancelled){\r\n\t\t\t\tcell.column.definition.cellEditCancelled.call(this.table, component);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"edit-cancelled\", cell);\r\n\t\t\tthis.dispatchExternal(\"cellEditCancelled\", component);\r\n\t\t}\r\n\t}\r\n\r\n\t//return a formatted value for a cell\r\n\tbindEditor(cell){\r\n\t\tif(cell.column.modules.edit){\r\n\t\t\tvar self = this,\r\n\t\t\telement = cell.getElement(true);\r\n\r\n\t\t\telement.setAttribute(\"tabindex\", 0);\r\n\r\n\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\tif(!element.classList.contains(\"tabulator-editing\")){\r\n\t\t\t\t\telement.focus({preventScroll: true});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif (e.button === 2) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.mouseClick = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"focus\", function(e){\r\n\t\t\t\tif(!self.recursionBlock){\r\n\t\t\t\t\tself.edit(cell, e, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfocusCellNoEvent(cell, block){\r\n\t\tthis.recursionBlock = true;\r\n\r\n\t\tif(!(block && this.table.browser === \"ie\")){\r\n\t\t\tcell.getElement().focus({preventScroll: true});\r\n\t\t}\r\n\r\n\t\tthis.recursionBlock = false;\r\n\t}\r\n\r\n\teditCell(cell, forceEdit){\r\n\t\tthis.focusCellNoEvent(cell);\r\n\t\tthis.edit(cell, false, forceEdit);\r\n\t}\r\n\r\n\tfocusScrollAdjust(cell){\r\n\t\tif(this.table.rowManager.getRenderMode() == \"virtual\"){\r\n\t\t\tvar topEdge = this.table.rowManager.element.scrollTop,\r\n\t\t\tbottomEdge = this.table.rowManager.element.clientHeight + this.table.rowManager.element.scrollTop,\r\n\t\t\trowEl = cell.row.getElement(),\r\n\t\t\toffset = rowEl.offsetTop;\r\n\r\n\t\t\tif(rowEl.offsetTop < topEdge){\r\n\t\t\t\tthis.table.rowManager.element.scrollTop -= (topEdge - rowEl.offsetTop);\r\n\t\t\t}else{\r\n\t\t\t\tif(rowEl.offsetTop + rowEl.offsetHeight  > bottomEdge){\r\n\t\t\t\t\tthis.table.rowManager.element.scrollTop += (rowEl.offsetTop + rowEl.offsetHeight - bottomEdge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar leftEdge = this.table.rowManager.element.scrollLeft,\r\n\t\t\trightEdge = this.table.rowManager.element.clientWidth + this.table.rowManager.element.scrollLeft,\r\n\t\t\tcellEl = cell.getElement(),\r\n\t\t\toffset = cellEl.offsetLeft;\r\n\r\n\t\t\tif(this.table.modExists(\"frozenColumns\")){\r\n\t\t\t\tleftEdge += parseInt(this.table.modules.frozenColumns.leftMargin);\r\n\t\t\t\trightEdge -= parseInt(this.table.modules.frozenColumns.rightMargin);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.renderHorizontal === \"virtual\"){\r\n\t\t\t\tleftEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\r\n\t\t\t\trightEdge -= parseInt(this.table.columnManager.renderer.vDomPadLeft);\r\n\t\t\t}\r\n\r\n\t\t\tif(cellEl.offsetLeft < leftEdge){\r\n\r\n\t\t\t\tthis.table.rowManager.element.scrollLeft -= (leftEdge - cellEl.offsetLeft);\r\n\t\t\t}else{\r\n\t\t\t\tif(cellEl.offsetLeft + cellEl.offsetWidth  > rightEdge){\r\n\t\t\t\t\tthis.table.rowManager.element.scrollLeft += (cellEl.offsetLeft + cellEl.offsetWidth - rightEdge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tedit(cell, e, forceEdit){\r\n\t\tvar self = this,\r\n\t\tallowEdit = true,\r\n\t\trendered = function(){},\r\n\t\telement = cell.getElement(),\r\n\t\tcellEditor, component, params;\r\n\r\n\t\t//prevent editing if another cell is refusing to leave focus (eg. validation fail)\r\n\t\tif(this.currentCell){\r\n\t\t\tif(!this.invalidEdit){\r\n\t\t\t\tthis.cancelEdit();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//handle successfull value change\r\n\t\tfunction success(value){\r\n\t\t\tif(self.currentCell === cell){\r\n\t\t\t\tvar valid = true;\r\n\r\n\t\t\t\tif(cell.column.modules.validate && self.table.modExists(\"validate\") && self.table.options.validationMode != \"manual\"){\r\n\t\t\t\t\tvalid = self.table.modules.validate.validate(cell.column.modules.validate, cell, value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(valid === true || self.table.options.validationMode === \"highlight\"){\r\n\t\t\t\t\tself.clearEditor();\r\n\r\n\r\n\t\t\t\t\tif(!cell.modules.edit){\r\n\t\t\t\t\t\tcell.modules.edit = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcell.modules.edit.edited = true;\r\n\r\n\t\t\t\t\tif(self.editedCells.indexOf(cell) == -1){\r\n\t\t\t\t\t\tself.editedCells.push(cell);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcell.setValue(value, true);\r\n\r\n\t\t\t\t\tif(valid !== true){\r\n\t\t\t\t\t\telement.classList.add(\"tabulator-validation-fail\");\r\n\t\t\t\t\t\tself.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.invalidEdit = true;\r\n\t\t\t\t\telement.classList.add(\"tabulator-validation-fail\");\r\n\t\t\t\t\tself.focusCellNoEvent(cell, true);\r\n\t\t\t\t\trendered();\r\n\t\t\t\t\tself.table.externalEvents.dispatch(\"validationFailed\", cell.getComponent(), value, valid);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// console.warn(\"Edit Success Error - cannot call success on a cell that is no longer being edited\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//handle aborted edit\r\n\t\tfunction cancel(){\r\n\t\t\tif(self.currentCell === cell){\r\n\t\t\t\tself.cancelEdit();\r\n\t\t\t}else{\r\n\t\t\t\t// console.warn(\"Edit Success Error - cannot call cancel on a cell that is no longer being edited\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\trendered = callback;\r\n\t\t}\r\n\r\n\t\tif(!cell.column.modules.edit.blocked){\r\n\t\t\tif(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\r\n\t\t\tswitch(typeof cell.column.modules.edit.check){\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tallowEdit = cell.column.modules.edit.check(cell.getComponent());\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tallowEdit = cell.column.modules.edit.check;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(allowEdit || forceEdit){\r\n\r\n\t\t\t\tself.cancelEdit();\r\n\r\n\t\t\t\tself.currentCell = cell;\r\n\r\n\t\t\t\tthis.focusScrollAdjust(cell);\r\n\r\n\t\t\t\tcomponent = cell.getComponent();\r\n\r\n\t\t\t\tif(this.mouseClick){\r\n\t\t\t\t\tthis.mouseClick = false;\r\n\r\n\t\t\t\t\tif(cell.column.definition.cellClick){\r\n\t\t\t\t\t\tcell.column.definition.cellClick.call(this.table, e, component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(cell.column.definition.cellEditing){\r\n\t\t\t\t\tcell.column.definition.cellEditing.call(this.table, component);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"cellEditing\", component);\r\n\r\n\t\t\t\tparams = typeof cell.column.modules.edit.params === \"function\" ? cell.column.modules.edit.params(component) : cell.column.modules.edit.params;\r\n\r\n\t\t\t\tcellEditor = cell.column.modules.edit.editor.call(self, component, onRendered, success, cancel, params);\r\n\r\n\t\t\t\t//if editor returned, add to DOM, if false, abort edit\r\n\t\t\t\tif(cellEditor !== false){\r\n\r\n\t\t\t\t\tif(cellEditor instanceof Node){\r\n\t\t\t\t\t\telement.classList.add(\"tabulator-editing\");\r\n\t\t\t\t\t\tcell.row.getElement().classList.add(\"tabulator-row-editing\");\r\n\t\t\t\t\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\t\t\t\t\telement.appendChild(cellEditor);\r\n\r\n\t\t\t\t\t\t//trigger onRendered Callback\r\n\t\t\t\t\t\trendered();\r\n\r\n\t\t\t\t\t\t//prevent editing from triggering rowClick event\r\n\t\t\t\t\t\tvar children = element.children;\r\n\r\n\t\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\t\t\tchildren[i].addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Edit Error - Editor should return an instance of Node, the editor returned:\", cellEditor);\r\n\t\t\t\t\t\telement.blur();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.mouseClick = false;\r\n\t\t\t\telement.blur();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.mouseClick = false;\r\n\t\t\telement.blur();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetEditedCells(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.editedCells.forEach((cell) => {\r\n\t\t\toutput.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tclearEdited(cell){\r\n\t\tvar editIndex;\r\n\r\n\t\tif(cell.modules.edit && cell.modules.edit.edited){\r\n\t\t\tcell.modules.edit.edited = false;\r\n\r\n\t\t\tif(cell.modules.validate){\r\n\t\t\t\tcell.modules.validate.invalid = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\teditIndex = this.editedCells.indexOf(cell);\r\n\r\n\t\tif(editIndex > -1){\r\n\t\t\tthis.editedCells.splice(editIndex, 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nEdit.moduleName = \"edit\";\r\n\r\n//load defaults\r\nEdit.editors = defaultEditors;\r\n\r\n\r\nexport default Edit;","class ExportRow{\r\n\tconstructor(type, columns, component, indent){\r\n\t\tthis.type = type;\r\n\t\tthis.columns = columns;\r\n\t\tthis.component = component || false;\r\n\t\tthis.indent = indent || 0;\r\n\t}\r\n}\r\n\r\nexport default ExportRow;","class ExportColumn{\r\n\tconstructor(value, component, width, height, depth){\r\n\t\tthis.value = value;\r\n\t\tthis.component = component || false;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = depth;\r\n\t}\r\n}\r\n\r\nexport default ExportColumn;","import Module from '../../core/Module.js';\r\n\r\nimport ExportRow from './ExportRow.js';\r\nimport ExportColumn from './ExportColumn.js';\r\n\r\nclass Export extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.config = {};\r\n\t\tthis.cloneTableStyle = true;\r\n\t\tthis.colVisProp = \"\";\r\n\r\n\t\tthis.registerTableOption(\"htmlOutputConfig\", false); //html outypu config\r\n\r\n\t\tthis.registerColumnOption(\"htmlOutput\");\r\n\t\tthis.registerColumnOption(\"titleHtmlOutput\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"getHtml\", this.getHtml.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tgenerateExportList(config, style, range, colVisProp){\r\n\t\tthis.cloneTableStyle = style;\r\n\t\tthis.config = config || {};\r\n\t\tthis.colVisProp = colVisProp;\r\n\r\n\t\tvar headers = this.config.columnHeaders !== false ? this.headersToExportRows(this.generateColumnGroupHeaders()) : [];\r\n\t\tvar body = this.bodyToExportRows(this.rowLookup(range));\r\n\r\n\t\treturn headers.concat(body);\r\n\t}\r\n\r\n\tgenereateTable(config, style, range, colVisProp){\r\n\t\tvar list = this.generateExportList(config, style, range, colVisProp);\r\n\r\n\t\treturn this.genereateTableElement(list);\r\n\t}\r\n\r\n\trowLookup(range){\r\n\t\tvar rows = [];\r\n\r\n\t\tif(typeof range == \"function\"){\r\n\t\t\trange.call(this.table).forEach((row) =>{\r\n\t\t\t\trow = this.table.rowManager.findRow(row);\r\n\r\n\t\t\t\tif(row){\r\n\t\t\t\t\trows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tswitch(range){\r\n\t\t\t\tcase true:\r\n\t\t\t\tcase \"visible\":\r\n\t\t\t\trows = this.table.rowManager.getVisibleRows(false, true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\trows = this.table.rowManager.rows;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"selected\":\r\n\t\t\t\trows = this.table.modules.selectRow.selectedRows;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"active\":\r\n\t\t\t\tdefault:\r\n\t\t\t\tif(this.table.options.pagination){\r\n\t\t\t\t\trows = this.table.rowManager.getDisplayRows(this.table.rowManager.displayRows.length - 2);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trows = this.table.rowManager.getDisplayRows();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Object.assign([], rows);\r\n\t}\r\n\r\n\tgenerateColumnGroupHeaders(){\r\n\t\tvar output = [];\r\n\r\n\t\tvar columns = this.config.columnGroups !== false ? this.table.columnManager.columns : this.table.columnManager.columnsByIndex;\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tvar colData = this.processColumnGroup(column);\r\n\r\n\t\t\tif(colData){\r\n\t\t\t\toutput.push(colData);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tprocessColumnGroup(column){\r\n\t\tvar subGroups = column.columns,\r\n\t\tmaxDepth = 0,\r\n\t\ttitle = column.definition[\"title\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))] || column.definition.title;\r\n\r\n\t\tvar groupData = {\r\n\t\t\ttitle:title,\r\n\t\t\tcolumn:column,\r\n\t\t\tdepth:1,\r\n\t\t};\r\n\r\n\t\tif(subGroups.length){\r\n\t\t\tgroupData.subGroups = [];\r\n\t\t\tgroupData.width = 0;\r\n\r\n\t\t\tsubGroups.forEach((subGroup) => {\r\n\t\t\t\tvar subGroupData = this.processColumnGroup(subGroup);\r\n\r\n\t\t\t\tif(subGroupData){\r\n\t\t\t\t\tgroupData.width += subGroupData.width;\r\n\t\t\t\t\tgroupData.subGroups.push(subGroupData);\r\n\r\n\t\t\t\t\tif(subGroupData.depth > maxDepth){\r\n\t\t\t\t\t\tmaxDepth = subGroupData.depth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgroupData.depth += maxDepth;\r\n\r\n\t\t\tif(!groupData.width){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.columnVisCheck(column)){\r\n\t\t\t\tgroupData.width = 1;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn groupData;\r\n\t}\r\n\r\n\tcolumnVisCheck(column){\r\n\t\treturn column.definition[this.colVisProp] !== false && (column.visible || (!column.visible && column.definition[this.colVisProp]));\r\n\t}\r\n\r\n\theadersToExportRows(columns){\r\n\t\tvar headers = [],\r\n\t\theaderDepth = 0,\r\n\t\texportRows = [];\r\n\r\n\t\tfunction parseColumnGroup(column, level){\r\n\r\n\t\t\tvar depth = headerDepth - level;\r\n\r\n\t\t\tif(typeof headers[level] === \"undefined\"){\r\n\t\t\t\theaders[level] = [];\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.height = column.subGroups ? 1 : (depth - column.depth) + 1;\r\n\r\n\t\t\theaders[level].push(column);\r\n\r\n\t\t\tif(column.height > 1){\r\n\t\t\t\tfor(let i = 1; i < column.height; i ++){\r\n\r\n\t\t\t\t\tif(typeof headers[level + i] === \"undefined\"){\r\n\t\t\t\t\t\theaders[level + i] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\theaders[level + i].push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(column.width > 1){\r\n\t\t\t\tfor(let i = 1; i < column.width; i ++){\r\n\t\t\t\t\theaders[level].push(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(column.subGroups){\r\n\t\t\t\tcolumn.subGroups.forEach(function(subGroup){\r\n\t\t\t\t\tparseColumnGroup(subGroup, level+1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//calculate maximum header debth\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tif(column.depth > headerDepth){\r\n\t\t\t\theaderDepth = column.depth;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tparseColumnGroup(column,0);\r\n\t\t});\r\n\r\n\t\theaders.forEach((header) => {\r\n\t\t\tvar columns = [];\r\n\r\n\t\t\theader.forEach((col) => {\r\n\t\t\t\tif(col){\r\n\t\t\t\t\tcolumns.push(new ExportColumn(col.title, col.column.getComponent(), col.width, col.height, col.depth));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolumns.push(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\texportRows.push(new ExportRow(\"header\", columns));\r\n\t\t});\r\n\r\n\t\treturn exportRows;\r\n\t}\r\n\r\n\tbodyToExportRows(rows){\r\n\r\n\t\tvar columns = [];\r\n\t\tvar exportRows = [];\r\n\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tif (this.columnVisCheck(column)) {\r\n\t\t\t\tcolumns.push(column.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(this.config.columnCalcs !== false && this.table.modExists(\"columnCalcs\")){\r\n\t\t\tif(this.table.modules.columnCalcs.topInitialized){\r\n\t\t\t\trows.unshift(this.table.modules.columnCalcs.topRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modules.columnCalcs.botInitialized){\r\n\t\t\t\trows.push(this.table.modules.columnCalcs.botRow);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trows = rows.filter((row) => {\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\treturn this.config.rowGroups !== false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\":\r\n\t\t\t\treturn this.config.columnCalcs !== false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"row\":\r\n\t\t\t\treturn !(this.table.options.dataTree && this.config.dataTree === false && row.modules.dataTree.parent);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\trows.forEach((row, i) => {\r\n\t\t\tvar rowData = row.getData(this.colVisProp);\r\n\t\t\tvar exportCols = [];\r\n\t\t\tvar indent = 0;\r\n\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\tindent = row.level;\r\n\t\t\t\texportCols.push(new ExportColumn(row.key, row.getComponent(), columns.length, 1));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\" :\r\n\t\t\t\tcase \"row\" :\r\n\t\t\t\tcolumns.forEach((col) => {\r\n\t\t\t\t\texportCols.push(new ExportColumn(col._column.getFieldValue(rowData), col, 1, 1));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.options.dataTree && this.config.dataTree !== false){\r\n\t\t\t\t\tindent = row.modules.dataTree.index;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\texportRows.push(new ExportRow(row.type, exportCols, row.getComponent(), indent));\r\n\t\t});\r\n\r\n\t\treturn exportRows;\r\n\t}\r\n\r\n\tgenereateTableElement(list){\r\n\t\tvar table = document.createElement(\"table\"),\r\n\t\theaderEl = document.createElement(\"thead\"),\r\n\t\tbodyEl = document.createElement(\"tbody\"),\r\n\t\tstyles = this.lookupTableStyles(),\r\n\t\trowFormatter = this.table.options[\"rowFormatter\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))],\r\n\t\tsetup = {};\r\n\r\n\t\tsetup.rowFormatter = rowFormatter !== null ? rowFormatter : this.table.options.rowFormatter;\r\n\r\n\t\tif(this.table.options.dataTree &&this.config.dataTree !== false && this.table.modExists(\"columnCalcs\")){\r\n\t\t\tsetup.treeElementField = this.table.modules.dataTree.elementField;\r\n\t\t}\r\n\r\n\t\t//assign group header formatter\r\n\t\tsetup.groupHeader = this.table.options[\"groupHeader\" + (this.colVisProp.charAt(0).toUpperCase() + this.colVisProp.slice(1))];\r\n\r\n\t\tif(setup.groupHeader && !Array.isArray(setup.groupHeader)){\r\n\t\t\tsetup.groupHeader = [setup.groupHeader];\r\n\t\t}\r\n\r\n\t\ttable.classList.add(\"tabulator-print-table\");\r\n\r\n\t\tthis.mapElementStyles(this.table.columnManager.getHeadersElement(), headerEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\r\n\r\n\t\tif(list.length > 1000){\r\n\t\t\tconsole.warn(\"It may take a long time to render an HTML table with more than 1000 rows\");\r\n\t\t}\r\n\r\n\t\tlist.forEach((row, i) => {\r\n\t\t\tswitch(row.type){\r\n\t\t\t\tcase \"header\":\r\n\t\t\t\theaderEl.appendChild(this.genereateHeaderElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\tbodyEl.appendChild(this.genereateGroupElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"calc\":\r\n\t\t\t\tbodyEl.appendChild(this.genereateCalcElement(row, setup, styles));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"row\":\r\n\t\t\t\tlet rowEl = this.genereateRowElement(row, setup, styles);\r\n\t\t\t\tthis.mapElementStyles(((i % 2) && styles.evenRow) ? styles.evenRow : styles.oddRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\t\t\t\tbodyEl.appendChild(rowEl);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(headerEl.innerHTML){\r\n\t\t\ttable.appendChild(headerEl);\r\n\t\t}\r\n\r\n\t\ttable.appendChild(bodyEl);\r\n\r\n\r\n\t\tthis.mapElementStyles(this.table.element, table, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\"]);\r\n\t\treturn table;\r\n\t}\r\n\r\n\tlookupTableStyles(){\r\n\t\tvar styles = {};\r\n\r\n\t\t//lookup row styles\r\n\t\tif(this.cloneTableStyle && window.getComputedStyle){\r\n\t\t\tstyles.oddRow = this.table.element.querySelector(\".tabulator-row-odd:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.evenRow = this.table.element.querySelector(\".tabulator-row-even:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.calcRow = this.table.element.querySelector(\".tabulator-row.tabulator-calcs\");\r\n\t\t\tstyles.firstRow = this.table.element.querySelector(\".tabulator-row:not(.tabulator-group):not(.tabulator-calcs)\");\r\n\t\t\tstyles.firstGroup = this.table.element.getElementsByClassName(\"tabulator-group\")[0];\r\n\r\n\t\t\tif(styles.firstRow){\r\n\t\t\t\tstyles.styleCells = styles.firstRow.getElementsByClassName(\"tabulator-cell\");\r\n\t\t\t\tstyles.firstCell = styles.styleCells[0];\r\n\t\t\t\tstyles.lastCell = styles.styleCells[styles.styleCells.length - 1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn styles;\r\n\t}\r\n\r\n\tgenereateHeaderElement(row, setup, styles){\r\n\t\tvar rowEl = document.createElement(\"tr\");\r\n\r\n\t\trow.columns.forEach((column) => {\r\n\t\t\tif(column){\r\n\t\t\t\tvar cellEl = document.createElement(\"th\");\r\n\t\t\t\tvar classNames = column.component._column.definition.cssClass ? column.component._column.definition.cssClass.split(\" \") : [];\r\n\r\n\t\t\t\tcellEl.colSpan = column.width;\r\n\t\t\t\tcellEl.rowSpan = column.height;\r\n\r\n\t\t\t\tcellEl.innerHTML = column.value;\r\n\r\n\t\t\t\tif(this.cloneTableStyle){\r\n\t\t\t\t\tcellEl.style.boxSizing = \"border-box\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclassNames.forEach(function(className) {\r\n\t\t\t\t\tcellEl.classList.add(className);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.mapElementStyles(column.component.getElement(), cellEl, [\"text-align\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"background-color\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\t\t\t\tthis.mapElementStyles(column.component._column.contentElement, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\r\n\r\n\t\t\t\tif(column.component._column.visible){\r\n\t\t\t\t\tthis.mapElementStyles(column.component.getElement(), cellEl, [\"width\"]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.component._column.definition.width){\r\n\t\t\t\t\t\tcellEl.style.width = column.component._column.definition.width + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(column.component._column.parent){\r\n\t\t\t\t\tthis.mapElementStyles(column.component._column.parent.groupElement, cellEl, [\"border-top\"]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowEl.appendChild(cellEl);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateGroupElement(row, setup, styles){\r\n\r\n\t\tvar rowEl = document.createElement(\"tr\"),\r\n\t\tcellEl = document.createElement(\"td\"),\r\n\t\tgroup = row.columns[0];\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-row\");\r\n\r\n\t\tif(setup.groupHeader && setup.groupHeader[row.indent]){\r\n\t\t\tgroup.value = setup.groupHeader[row.indent](group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t}else{\r\n\t\t\tif(setup.groupHeader === false){\r\n\t\t\t\tgroup.value = group.value;\r\n\t\t\t}else{\r\n\t\t\t\tgroup.value = row.component._group.generator(group.value, row.component._group.getRowCount(), row.component._group.getData(), row.component);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcellEl.colSpan = group.width;\r\n\t\tcellEl.innerHTML = group.value;\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-group\");\r\n\t\trowEl.classList.add(\"tabulator-group-level-\" + row.indent);\r\n\r\n\t\tif(group.component.isVisible()){\r\n\t\t\trowEl.classList.add(\"tabulator-group-visible\");\r\n\t\t}\r\n\r\n\t\tthis.mapElementStyles(styles.firstGroup, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\t\tthis.mapElementStyles(styles.firstGroup, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\"]);\r\n\r\n\t\trowEl.appendChild(cellEl);\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateCalcElement(row, setup, styles){\r\n\t\tvar rowEl = this.genereateRowElement(row, setup, styles);\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-calcs\");\r\n\t\tthis.mapElementStyles(styles.calcRow, rowEl, [\"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\", \"background-color\"]);\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateRowElement(row, setup, styles){\r\n\t\tvar rowEl = document.createElement(\"tr\");\r\n\r\n\t\trowEl.classList.add(\"tabulator-print-table-row\");\r\n\r\n\t\trow.columns.forEach((col) => {\r\n\r\n\t\t\tif(col){\r\n\t\t\t\tvar cellEl = document.createElement(\"td\"),\r\n\t\t\t\tcolumn = col.component._column,\r\n\t\t\t\tvalue = col.value;\r\n\r\n\t\t\t\tvar cellWrapper = {\r\n\t\t\t\t\tmodules:{},\r\n\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetField:function(){\r\n\t\t\t\t\t\treturn column.definition.field;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\treturn cellEl;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetData:function(){\r\n\t\t\t\t\t\treturn row.component.getData();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\treturn row.component;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetComponent:function(){\r\n\t\t\t\t\t\treturn cellWrapper;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcolumn:column,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar classNames = column.definition.cssClass ? column.definition.cssClass.split(\" \") : [];\r\n\r\n\t\t\t\tclassNames.forEach(function(className) {\r\n\t\t\t\t\tcellEl.classList.add(className);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(this.table.modExists(\"format\") && this.config.formatCells !== false){\r\n\t\t\t\t\tvalue = this.table.modules.format.formatExportValue(cellWrapper, this.colVisProp);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\t\tvalue = JSON.stringify(value);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\t\tcase \"null\":\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tvalue = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(value instanceof Node){\r\n\t\t\t\t\tcellEl.appendChild(value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcellEl.innerHTML = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(styles.firstCell){\r\n\t\t\t\t\tthis.mapElementStyles(styles.firstCell, cellEl, [\"padding-top\", \"padding-left\", \"padding-right\", \"padding-bottom\", \"border-top\", \"border-left\", \"border-right\", \"border-bottom\", \"color\", \"font-weight\", \"font-family\", \"font-size\"]);\r\n\r\n\t\t\t\t\tif(column.definition.align){\r\n\t\t\t\t\t\tcellEl.style.textAlign = column.definition.align;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.table.options.dataTree && this.config.dataTree !== false){\r\n\t\t\t\t\tif((setup.treeElementField && setup.treeElementField == column.field) || (!setup.treeElementField && i == 0)){\r\n\t\t\t\t\t\tif(row.component._row.modules.dataTree.controlEl){\r\n\t\t\t\t\t\t\tcellEl.insertBefore(row.component._row.modules.dataTree.controlEl.cloneNode(true), cellEl.firstChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(row.component._row.modules.dataTree.branchEl){\r\n\t\t\t\t\t\t\tcellEl.insertBefore(row.component._row.modules.dataTree.branchEl.cloneNode(true), cellEl.firstChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowEl.appendChild(cellEl);\r\n\r\n\t\t\t\tif(cellWrapper.modules.format && cellWrapper.modules.format.renderedCallback){\r\n\t\t\t\t\tcellWrapper.modules.format.renderedCallback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(setup.rowFormatter && this.config.formatCells !== false){\r\n\t\t\t\t\tsetup.rowFormatter(row.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn rowEl;\r\n\t}\r\n\r\n\tgenereateHTMLTable(list){\r\n\t\tvar holder = document.createElement(\"div\");\r\n\r\n\t\tholder.appendChild(this.genereateTableElement(list));\r\n\r\n\t\treturn holder.innerHTML;\r\n\t}\r\n\r\n\tgetHtml(visible, style, config, colVisProp){\r\n\t\tvar list = this.generateExportList(config || this.table.options.htmlOutputConfig, style, visible, colVisProp || \"htmlOutput\");\r\n\r\n\t\treturn this.genereateHTMLTable(list);\r\n\t}\r\n\r\n\tmapElementStyles(from, to, props){\r\n\t\tif(this.cloneTableStyle && from && to){\r\n\r\n\t\t\tvar lookup = {\r\n\t\t\t\t\"background-color\" : \"backgroundColor\",\r\n\t\t\t\t\"color\" : \"fontColor\",\r\n\t\t\t\t\"width\" : \"width\",\r\n\t\t\t\t\"font-weight\" : \"fontWeight\",\r\n\t\t\t\t\"font-family\" : \"fontFamily\",\r\n\t\t\t\t\"font-size\" : \"fontSize\",\r\n\t\t\t\t\"text-align\" : \"textAlign\",\r\n\t\t\t\t\"border-top\" : \"borderTop\",\r\n\t\t\t\t\"border-left\" : \"borderLeft\",\r\n\t\t\t\t\"border-right\" : \"borderRight\",\r\n\t\t\t\t\"border-bottom\" : \"borderBottom\",\r\n\t\t\t\t\"padding-top\" : \"paddingTop\",\r\n\t\t\t\t\"padding-left\" : \"paddingLeft\",\r\n\t\t\t\t\"padding-right\" : \"paddingRight\",\r\n\t\t\t\t\"padding-bottom\" : \"paddingBottom\",\r\n\t\t\t};\r\n\r\n\t\t\tif(window.getComputedStyle){\r\n\t\t\t\tvar fromStyle = window.getComputedStyle(from);\r\n\r\n\t\t\t\tprops.forEach(function(prop){\r\n\t\t\t\t\tto.style[lookup[prop]] = fromStyle.getPropertyValue(prop);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nExport.moduleName = \"export\";\r\n\r\nexport default Export;\r\n","export default {\r\n\r\n\t//equal to\r\n\t\"=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal == filterVal ? true : false;\r\n\t},\r\n\r\n\t//less than\r\n\t\"<\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal < filterVal ? true : false;\r\n\t},\r\n\r\n\t//less than or equal to\r\n\t\"<=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal <= filterVal ? true : false;\r\n\t},\r\n\r\n\t//greater than\r\n\t\">\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal > filterVal ? true : false;\r\n\t},\r\n\r\n\t//greater than or equal to\r\n\t\">=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal >= filterVal ? true : false;\r\n\t},\r\n\r\n\t//not equal to\r\n\t\"!=\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\treturn rowVal != filterVal ? true : false;\r\n\t},\r\n\r\n\t\"regex\":function(filterVal, rowVal, rowData, filterParams){\r\n\r\n\t\tif(typeof filterVal == \"string\"){\r\n\t\t\tfilterVal = new RegExp(filterVal);\r\n\t\t}\r\n\r\n\t\treturn filterVal.test(rowVal);\r\n\t},\r\n\r\n\t//contains the string\r\n\t\"like\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().indexOf(filterVal.toLowerCase()) > -1;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//contains the keywords\r\n\t\"keywords\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tvar keywords = filterVal.toLowerCase().split(typeof filterParams.separator === \"undefined\" ? \" \" : filterParams.separator),\r\n\t\tvalue = String(rowVal === null || typeof rowVal === \"undefined\" ? \"\" : rowVal).toLowerCase(),\r\n\t\tmatches = [];\r\n\r\n\t\tkeywords.forEach((keyword) =>{\r\n\t\t\tif(value.includes(keyword)){\r\n\t\t\t\tmatches.push(true);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn filterParams.matchAll ? matches.length === keywords.length : !!matches.length;\r\n\t},\r\n\r\n\t//starts with the string\r\n\t\"starts\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().startsWith(filterVal.toLowerCase());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//ends with the string\r\n\t\"ends\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(filterVal === null || typeof filterVal === \"undefined\"){\r\n\t\t\treturn rowVal === filterVal ? true : false;\r\n\t\t}else{\r\n\t\t\tif(typeof rowVal !== 'undefined' && rowVal !== null){\r\n\t\t\t\treturn String(rowVal).toLowerCase().endsWith(filterVal.toLowerCase());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//in array\r\n\t\"in\":function(filterVal, rowVal, rowData, filterParams){\r\n\t\tif(Array.isArray(filterVal)){\r\n\t\t\treturn filterVal.length ? filterVal.indexOf(rowVal) > -1 : true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Filter Error - filter value is not an array:\", filterVal);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultFilters from './defaults/filters.js';\r\n\r\nclass Filter extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.filterList = []; //hold filter list\r\n\t\tthis.headerFilters = {}; //hold column filters\r\n\t\tthis.headerFilterColumns = []; //hold columns that use header filters\r\n\r\n\t\tthis.prevHeaderFilterChangeCheck = \"\";\r\n\t\tthis.prevHeaderFilterChangeCheck = \"{}\";\r\n\r\n\t\tthis.changed = false; //has filtering changed since last render\r\n\t\tthis.tableInitialized = false;\r\n\r\n\t\tthis.registerTableOption(\"filterMode\", \"local\"); //local or remote filtering\r\n\r\n\t\tthis.registerTableOption(\"initialFilter\", false); //initial filtering criteria\r\n\t\tthis.registerTableOption(\"initialHeaderFilter\", false); //initial header filtering criteria\r\n\t\tthis.registerTableOption(\"headerFilterLiveFilterDelay\", 300); //delay before updating column after user types in header filter\r\n\r\n\t\tthis.registerColumnOption(\"headerFilter\");\r\n\t\tthis.registerColumnOption(\"headerFilterPlaceholder\");\r\n\t\tthis.registerColumnOption(\"headerFilterParams\");\r\n\t\tthis.registerColumnOption(\"headerFilterEmptyCheck\");\r\n\t\tthis.registerColumnOption(\"headerFilterFunc\");\r\n\t\tthis.registerColumnOption(\"headerFilterFuncParams\");\r\n\t\tthis.registerColumnOption(\"headerFilterLiveFilter\");\r\n\r\n\t\tthis.registerTableFunction(\"searchRows\", this.searchRows.bind(this));\r\n\t\tthis.registerTableFunction(\"searchData\", this.searchData.bind(this));\r\n\r\n\t\tthis.registerTableFunction(\"setFilter\", this.userSetFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"refreshFilter\", this.userRefreshFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"addFilter\", this.userAddFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"getFilters\", this.getFilters.bind(this));\r\n\t\tthis.registerTableFunction(\"setHeaderFilterFocus\", this.userSetHeaderFilterFocus.bind(this));\r\n\t\tthis.registerTableFunction(\"getHeaderFilterValue\", this.userGetHeaderFilterValue.bind(this));\r\n\t\tthis.registerTableFunction(\"setHeaderFilterValue\", this.userSetHeaderFilterValue.bind(this));\r\n\t\tthis.registerTableFunction(\"getHeaderFilters\", this.getHeaderFilters.bind(this));\r\n\t\tthis.registerTableFunction(\"removeFilter\", this.userRemoveFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"clearFilter\", this.userClearFilter.bind(this));\r\n\t\tthis.registerTableFunction(\"clearHeaderFilter\", this.userClearHeaderFilter.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"column\", \"headerFilterFocus\", this.setHeaderFilterFocus.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"reloadHeaderFilter\", this.reloadHeaderFilter.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"getHeaderFilterValue\", this.getHeaderFilterValue.bind(this));\r\n\t\tthis.registerComponentFunction(\"column\", \"setHeaderFilterValue\", this.setHeaderFilterValue.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumnHeaderFilter.bind(this));\r\n\t\tthis.subscribe(\"column-width-fit-before\", this.hideHeaderFilterElements.bind(this));\r\n\t\tthis.subscribe(\"column-width-fit-after\", this.showHeaderFilterElements.bind(this));\r\n\t\tthis.subscribe(\"table-built\", this.tableBuilt.bind(this));\r\n\r\n\t\tif(this.table.options.filterMode === \"remote\"){\r\n\t\t\tthis.subscribe(\"data-params\", this.remoteFilterParams.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerDataHandler(this.filter.bind(this), 10);\r\n\t}\r\n\r\n\ttableBuilt(){\r\n\t\tif(this.table.options.initialFilter){\r\n\t\t\tthis.setFilter(this.table.options.initialFilter);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.initialHeaderFilter){\r\n\t\t\tthis.table.options.initialHeaderFilter.forEach((item) => {\r\n\r\n\t\t\t\tvar column = this.table.columnManager.findColumn(item.field);\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tthis.setHeaderFilterValue(column, item.value);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", item.field);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.tableInitialized = true;\r\n\t}\r\n\r\n\tremoteFilterParams(data, config, silent, params){\r\n\t\tparams.filter = this.getFilters(true, true);\r\n\t\treturn params;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\t//set standard filters\r\n\tuserSetFilter(field, type, value, params){\r\n\t\tthis.setFilter(field, type, value, params);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//set standard filters\r\n\tuserRefreshFilter(){\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//add filter to array\r\n\tuserAddFilter(field, type, value, params){\r\n\t\tthis.addFilter(field, type, value, params);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\tuserSetHeaderFilterFocus(field){\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tthis.setHeaderFilterFocus(column);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Focus Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tuserGetHeaderFilterValue(field) {\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn this.getHeaderFilterValue(column);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", field);\r\n\t\t}\r\n\t}\r\n\r\n\tuserSetHeaderFilterValue(field, value){\r\n\t\tvar column = this.table.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tthis.setHeaderFilterValue(column, value);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//remove filter from array\r\n\tuserRemoveFilter(field, type, value){\r\n\t\tthis.removeFilter(field, type, value);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//clear filters\r\n\tuserClearFilter(all){\r\n\t\tthis.clearFilter(all);\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\t//clear header filters\r\n\tuserClearHeaderFilter(){\r\n\t\tthis.clearHeaderFilter();\r\n\t\tthis.refreshFilter();\r\n\t}\r\n\r\n\r\n\t//search for specific row components\r\n\tsearchRows(field, type, value){\r\n\t\treturn this.search(\"rows\", field, type, value);\r\n\t}\r\n\r\n\t//search for specific data\r\n\tsearchData(field, type, value){\r\n\t\treturn this.search(\"data\", field, type, value);\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnHeaderFilter(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tif(def.headerFilter){\r\n\r\n\t\t\tif(typeof def.headerFilterPlaceholder !== \"undefined\" && def.field){\r\n\t\t\t\tthis.module(\"localize\").setHeaderFilterColumnPlaceholder(def.field, def.headerFilterPlaceholder);\r\n\t\t\t}\r\n\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize column header filter\r\n\tinitializeColumn(column, value){\r\n\t\tvar self = this,\r\n\t\tfield = column.getField(),\r\n\t\tparams;\r\n\r\n\t\t//handle successfull value change\r\n\t\tfunction success(value){\r\n\t\t\tvar filterType = (column.modules.filter.tagType == \"input\" && column.modules.filter.attrType == \"text\") || column.modules.filter.tagType == \"textarea\" ? \"partial\" : \"match\",\r\n\t\t\ttype = \"\",\r\n\t\t\tfilterChangeCheck = \"\",\r\n\t\t\tfilterFunc;\r\n\r\n\t\t\tif(typeof column.modules.filter.prevSuccess === \"undefined\" || column.modules.filter.prevSuccess !== value){\r\n\r\n\t\t\t\tcolumn.modules.filter.prevSuccess = value;\r\n\r\n\t\t\t\tif(!column.modules.filter.emptyFunc(value)){\r\n\t\t\t\t\tcolumn.modules.filter.value = value;\r\n\r\n\t\t\t\t\tswitch(typeof column.definition.headerFilterFunc){\r\n\t\t\t\t\t\tcase \"string\":\r\n\t\t\t\t\t\tif(Filter.filters[column.definition.headerFilterFunc]){\r\n\t\t\t\t\t\t\ttype = column.definition.headerFilterFunc;\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\tvar params = column.definition.headerFilterFuncParams || {};\r\n\t\t\t\t\t\t\t\tvar fieldVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\t\tparams = typeof params === \"function\" ? params(value, fieldVal, data) : params;\r\n\r\n\t\t\t\t\t\t\t\treturn Filter.filters[column.definition.headerFilterFunc](value, fieldVal, data, params);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tconsole.warn(\"Header Filter Error - Matching filter function not found: \", column.definition.headerFilterFunc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\tvar params = column.definition.headerFilterFuncParams || {};\r\n\t\t\t\t\t\t\tvar fieldVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\tparams = typeof params === \"function\" ? params(value, fieldVal, data) : params;\r\n\r\n\t\t\t\t\t\t\treturn column.definition.headerFilterFunc(value, fieldVal, data, params);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\ttype = filterFunc;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!filterFunc){\r\n\t\t\t\t\t\tswitch(filterType){\r\n\t\t\t\t\t\t\tcase \"partial\":\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\tvar colVal = column.getFieldValue(data);\r\n\r\n\t\t\t\t\t\t\t\tif(typeof colVal !== 'undefined' && colVal !== null){\r\n\t\t\t\t\t\t\t\t\treturn String(colVal).toLowerCase().indexOf(String(value).toLowerCase()) > -1;\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\ttype = \"like\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\t\t\treturn column.getFieldValue(data) == value;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\ttype = \"=\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.headerFilters[field] = {value:value, func:filterFunc, type:type, params:params || {}};\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelete self.headerFilters[field];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterChangeCheck = JSON.stringify(self.headerFilters);\r\n\r\n\t\t\t\tif(self.prevHeaderFilterChangeCheck !== filterChangeCheck){\r\n\t\t\t\t\tself.prevHeaderFilterChangeCheck = filterChangeCheck;\r\n\r\n\t\t\t\t\tself.trackChanges();\r\n\t\t\t\t\tself.refreshFilter();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tcolumn.modules.filter = {\r\n\t\t\tsuccess:success,\r\n\t\t\tattrType:false,\r\n\t\t\ttagType:false,\r\n\t\t\temptyFunc:false,\r\n\t\t};\r\n\r\n\t\tthis.generateHeaderFilterElement(column);\r\n\t}\r\n\r\n\tgenerateHeaderFilterElement(column, initialValue, reinitialize){\r\n\t\tvar self = this,\r\n\t\tsuccess = column.modules.filter.success,\r\n\t\tfield = column.getField(),\r\n\t\tfilterElement, editor, editorElement, cellWrapper, typingTimer, searchTrigger, params;\r\n\r\n\t\t//handle aborted edit\r\n\t\tfunction cancel(){}\r\n\r\n\t\tif(column.modules.filter.headerElement && column.modules.filter.headerElement.parentNode){\r\n\t\t\tcolumn.contentElement.removeChild(column.modules.filter.headerElement.parentNode);\r\n\t\t}\r\n\r\n\t\tif(field){\r\n\r\n\t\t\t//set empty value function\r\n\t\t\tcolumn.modules.filter.emptyFunc = column.definition.headerFilterEmptyCheck || function(value){\r\n\t\t\t\treturn !value && value !== \"0\" && value !== 0;\r\n\t\t\t};\r\n\r\n\t\t\tfilterElement = document.createElement(\"div\");\r\n\t\t\tfilterElement.classList.add(\"tabulator-header-filter\");\r\n\r\n\t\t\t//set column editor\r\n\t\t\tswitch(typeof column.definition.headerFilter){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(self.table.modules.edit.editors[column.definition.headerFilter]){\r\n\t\t\t\t\teditor = self.table.modules.edit.editors[column.definition.headerFilter];\r\n\r\n\t\t\t\t\tif((column.definition.headerFilter === \"tick\" || column.definition.headerFilter === \"tickCross\") && !column.definition.headerFilterEmptyCheck){\r\n\t\t\t\t\t\tcolumn.modules.filter.emptyFunc = function(value){\r\n\t\t\t\t\t\t\treturn value !== true && value !== false;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot build header filter, No such editor found: \", column.definition.editor);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\teditor = column.definition.headerFilter;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\tif(column.modules.edit && column.modules.edit.editor){\r\n\t\t\t\t\teditor = column.modules.edit.editor;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.definition.formatter && self.table.modules.edit.editors[column.definition.formatter]){\r\n\t\t\t\t\t\teditor = self.table.modules.edit.editors[column.definition.formatter];\r\n\r\n\t\t\t\t\t\tif((column.definition.formatter === \"tick\" || column.definition.formatter === \"tickCross\") && !column.definition.headerFilterEmptyCheck){\r\n\t\t\t\t\t\t\tcolumn.modules.filter.emptyFunc = function(value){\r\n\t\t\t\t\t\t\t\treturn value !== true && value !== false;\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\teditor = self.table.modules.edit.editors[\"input\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(editor){\r\n\r\n\t\t\t\tcellWrapper = {\r\n\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\treturn typeof initialValue !== \"undefined\" ? initialValue : \"\";\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetField:function(){\r\n\t\t\t\t\t\treturn column.definition.field;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\treturn filterElement;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tnormalizeHeight:function(){\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tparams = column.definition.headerFilterParams || {};\r\n\r\n\t\t\t\tparams = typeof params === \"function\" ? params.call(self.table) : params;\r\n\r\n\t\t\t\teditorElement = editor.call(this.table.modules.edit, cellWrapper, function(){}, success, cancel, params);\r\n\r\n\t\t\t\tif(!editorElement){\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor returned a value of false\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!(editorElement instanceof Node)){\r\n\t\t\t\t\tconsole.warn(\"Filter Error - Cannot add filter to \" + field + \" column, editor should return an instance of Node, the editor returned:\", editorElement);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set Placeholder Text\r\n\t\t\t\tif(field){\r\n\t\t\t\t\tself.langBind(\"headerFilters|columns|\" + column.definition.field, function(value){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"placeholder\", typeof value !== \"undefined\" && value ? value : self.langText(\"headerFilters|default\"));\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tself.langBind(\"headerFilters|default\", function(value){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"placeholder\", value);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//focus on element on click\r\n\t\t\t\teditorElement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\teditorElement.focus();\r\n\t\t\t\t});\r\n\r\n\t\t\t\teditorElement.addEventListener(\"focus\", (e) => {\r\n\t\t\t\t\tvar left = this.table.columnManager.element.scrollLeft;\r\n\r\n\t\t\t\t\tif(left !== this.table.rowManager.element.scrollLeft){\r\n\t\t\t\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\t\t\tthis.table.columnManager.scrollHorizontal(left);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//live update filters as user types\r\n\t\t\t\ttypingTimer = false;\r\n\r\n\t\t\t\tsearchTrigger = function(e){\r\n\t\t\t\t\tif(typingTimer){\r\n\t\t\t\t\t\tclearTimeout(typingTimer);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttypingTimer = setTimeout(function(){\r\n\t\t\t\t\t\tsuccess(editorElement.value);\r\n\t\t\t\t\t},self.table.options.headerFilterLiveFilterDelay);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcolumn.modules.filter.headerElement = editorElement;\r\n\t\t\t\tcolumn.modules.filter.attrType = editorElement.hasAttribute(\"type\") ? editorElement.getAttribute(\"type\").toLowerCase() : \"\" ;\r\n\t\t\t\tcolumn.modules.filter.tagType = editorElement.tagName.toLowerCase();\r\n\r\n\t\t\t\tif(column.definition.headerFilterLiveFilter !== false){\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!(\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === 'autocomplete' ||\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === 'tickCross' ||\r\n\t\t\t\t\t\t\t((column.definition.editor === 'autocomplete' ||\r\n\t\t\t\t\t\t\t\tcolumn.definition.editor === 'tickCross') &&\r\n\t\t\t\t\t\t\tcolumn.definition.headerFilter === true)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\teditorElement.addEventListener(\"keyup\", searchTrigger);\r\n\t\t\t\t\teditorElement.addEventListener(\"search\", searchTrigger);\r\n\r\n\r\n\t\t\t\t\t//update number filtered columns on change\r\n\t\t\t\t\tif(column.modules.filter.attrType == \"number\"){\r\n\t\t\t\t\t\teditorElement.addEventListener(\"change\", function(e){\r\n\t\t\t\t\t\t\tsuccess(editorElement.value);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//change text inputs to search inputs to allow for clearing of field\r\n\t\t\t\t\tif(column.modules.filter.attrType == \"text\" && this.table.browser !== \"ie\"){\r\n\t\t\t\t\t\teditorElement.setAttribute(\"type\", \"search\");\r\n\t\t\t\t\t\t// editorElement.off(\"change blur\"); //prevent blur from triggering filter and preventing selection click\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\t//prevent input and select elements from propegating click to column sorters etc\r\n\t\t\t\t\tif(column.modules.filter.tagType == \"input\" || column.modules.filter.tagType == \"select\" || column.modules.filter.tagType == \"textarea\"){\r\n\t\t\t\t\t\teditorElement.addEventListener(\"mousedown\",function(e){\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterElement.appendChild(editorElement);\r\n\r\n\t\t\t\tcolumn.contentElement.appendChild(filterElement);\r\n\r\n\t\t\t\tif(!reinitialize){\r\n\t\t\t\t\tself.headerFilterColumns.push(column);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Filter Error - Cannot add header filter, column has no field set:\", column.definition.title);\r\n\t\t}\r\n\t}\r\n\r\n\t//hide all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\r\n\thideHeaderFilterElements(){\r\n\t\tthis.headerFilterColumns.forEach(function(column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tcolumn.modules.filter.headerElement.style.display = 'none';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//show all header filter elements (used to ensure correct column widths in \"fitData\" layout mode)\r\n\tshowHeaderFilterElements(){\r\n\t\tthis.headerFilterColumns.forEach(function(column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tcolumn.modules.filter.headerElement.style.display = '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//programatically set focus of header filter\r\n\tsetHeaderFilterFocus(column){\r\n\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\tcolumn.modules.filter.headerElement.focus();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Filter Focus Error - No header filter set on column:\", column.getField());\r\n\t\t}\r\n\t}\r\n\r\n\t//programmatically get value of header filter\r\n\tgetHeaderFilterValue(column){\r\n\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\treturn column.modules.filter.headerElement.value;\r\n\t\t} else {\r\n\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t}\r\n\t}\r\n\r\n\t//programatically set value of header filter\r\n\tsetHeaderFilterValue(column, value){\r\n\t\tif (column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tthis.generateHeaderFilterElement(column, value, true);\r\n\t\t\t\tcolumn.modules.filter.success(value);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treloadHeaderFilter(column){\r\n\t\tif (column){\r\n\t\t\tif(column.modules.filter && column.modules.filter.headerElement){\r\n\t\t\t\tthis.generateHeaderFilterElement(column, column.modules.filter.value, true);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Column Filter Error - No header filter set on column:\", column.getField());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trefreshFilter(){\r\n\t\tif(this.tableInitialized){\r\n\t\t\tif(this.table.options.filterMode === \"remote\"){\r\n\t\t\t\tthis.reloadData();\r\n\t\t\t}else{\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//TODO - Persist left position of row manager\r\n\t\t// left = this.scrollLeft;\r\n\t\t// this.scrollHorizontal(left);\r\n\t}\r\n\r\n\t//check if the filters has changed since last use\r\n\ttrackChanges(){\r\n\t\tthis.changed = true;\r\n\t\tthis.dispatch(\"filter-changed\");\r\n\t}\r\n\r\n\t//check if the filters has changed since last use\r\n\thasChanged(){\r\n\t\tvar changed = this.changed;\r\n\t\tthis.changed = false;\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t//set standard filters\r\n\tsetFilter(field, type, value, params){\r\n\t\tthis.filterList = [];\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value, params:params}];\r\n\t\t}\r\n\r\n\t\tthis.addFilter(field);\r\n\t}\r\n\r\n\t//add filter to array\r\n\taddFilter(field, type, value, params){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value, params:params}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\tthis.filterList.push(filter);\r\n\t\t\t\tthis.changed = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(changed){\r\n\t\t\tthis.trackChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tfindFilter(filter){\r\n\t\tvar column;\r\n\r\n\t\tif(Array.isArray(filter)){\r\n\t\t\treturn this.findSubFilters(filter);\r\n\t\t}\r\n\r\n\t\tvar filterFunc = false;\r\n\r\n\t\tif(typeof filter.field == \"function\"){\r\n\t\t\tfilterFunc = function(data){\r\n\t\t\t\treturn filter.field(data, filter.type || {})// pass params to custom filter function\r\n\t\t\t};\r\n\t\t}else{\r\n\r\n\t\t\tif(Filter.filters[filter.type]){\r\n\r\n\t\t\t\tcolumn = this.table.columnManager.getColumnByField(filter.field);\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\treturn Filter.filters[filter.type](filter.value, column.getFieldValue(data), data, filter.params || {});\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfilterFunc = function(data){\r\n\t\t\t\t\t\treturn Filter.filters[filter.type](filter.value, data[filter.field], data, filter.params || {});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Filter Error - No such filter type found, ignoring: \", filter.type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfilter.func = filterFunc;\r\n\r\n\t\treturn filter.func ? filter : false;\r\n\t}\r\n\r\n\tfindSubFilters(filters){\r\n\t\tvar output = [];\r\n\r\n\t\tfilters.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\toutput.push(filter);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output.length ? output : false;\r\n\t}\r\n\r\n\t//get all filters\r\n\tgetFilters(all, ajax){\r\n\t\tvar output = [];\r\n\r\n\t\tif(all){\r\n\t\t\toutput = this.getHeaderFilters();\r\n\t\t}\r\n\r\n\t\tif(ajax){\r\n\t\t\toutput.forEach(function(item){\r\n\t\t\t\tif(typeof item.type == \"function\"){\r\n\t\t\t\t\titem.type = \"function\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\toutput = output.concat(this.filtersToArray(this.filterList, ajax));\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//filter to Object\r\n\tfiltersToArray(filterList, ajax){\r\n\t\tvar output = [];\r\n\r\n\t\tfilterList.forEach((filter) => {\r\n\t\t\tvar item;\r\n\r\n\t\t\tif(Array.isArray(filter)){\r\n\t\t\t\toutput.push(this.filtersToArray(filter, ajax));\r\n\t\t\t}else{\r\n\t\t\t\titem = {field:filter.field, type:filter.type, value:filter.value}\r\n\r\n\t\t\t\tif(ajax){\r\n\t\t\t\t\tif(typeof item.type == \"function\"){\r\n\t\t\t\t\t\titem.type = \"function\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//get all filters\r\n\tgetHeaderFilters(){\r\n\t\tvar output = [];\r\n\r\n\t\tfor(var key in this.headerFilters){\r\n\t\t\toutput.push({field:key, type:this.headerFilters[key].type, value:this.headerFilters[key].value});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//remove filter from array\r\n\tremoveFilter(field, type, value){\r\n\t\tvar changed = false;\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tvar index = -1;\r\n\r\n\t\t\tif(typeof filter.field == \"object\"){\r\n\t\t\t\tindex = this.filterList.findIndex((element) => {\r\n\t\t\t\t\treturn filter === element;\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tindex = this.filterList.findIndex((element) => {\r\n\t\t\t\t\treturn filter.field === element.field && filter.type === element.type  && filter.value === element.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.filterList.splice(index, 1);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Filter Error - No matching filter type found, ignoring: \", filter.type);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//clear filters\r\n\tclearFilter(all){\r\n\t\tthis.filterList = [];\r\n\r\n\t\tif(all){\r\n\t\t\tthis.clearHeaderFilter();\r\n\t\t}\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//clear header filters\r\n\tclearHeaderFilter(){\r\n\t\tthis.headerFilters = {};\r\n\t\tthis.prevHeaderFilterChangeCheck = \"{}\";\r\n\r\n\t\tthis.headerFilterColumns.forEach((column) => {\r\n\t\t\tif(typeof column.modules.filter.value !== \"undefined\"){\r\n\t\t\t\tdelete column.modules.filter.value;\r\n\t\t\t}\r\n\t\t\tcolumn.modules.filter.prevSuccess = undefined;\r\n\t\t\tthis.reloadHeaderFilter(column);\r\n\t\t});\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//search data and return matching rows\r\n\tsearch (searchType, field, type, value){\r\n\t\tvar activeRows = [],\r\n\t\tfilterList = [];\r\n\r\n\t\tif(!Array.isArray(field)){\r\n\t\t\tfield = [{field:field, type:type, value:value}];\r\n\t\t}\r\n\r\n\t\tfield.forEach((filter) => {\r\n\t\t\tfilter = this.findFilter(filter);\r\n\r\n\t\t\tif(filter){\r\n\t\t\t\tfilterList.push(filter);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\tvar match = true;\r\n\r\n\t\t\tfilterList.forEach((filter) => {\r\n\t\t\t\tif(!this.filterRecurse(filter, row.getData())){\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tactiveRows.push(searchType === \"data\" ? row.getData(\"data\") : row.getComponent());\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn activeRows;\r\n\t}\r\n\r\n\t//filter row array\r\n\tfilter(rowList, filters){\r\n\t\tvar activeRows = [],\r\n\t\tactiveRowComponents = [];\r\n\r\n\t\tif(this.subscribedExternal(\"dataFiltering\")){\r\n\t\t\tthis.dispatchExternal(\"dataFiltering\", this.getFilters());\r\n\t\t}\r\n\r\n\t\tif(this.table.options.filterMode !== \"remote\" && (this.filterList.length || Object.keys(this.headerFilters).length)){\r\n\r\n\t\t\trowList.forEach((row) => {\r\n\t\t\t\tif(this.filterRow(row)){\r\n\t\t\t\t\tactiveRows.push(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}else{\r\n\t\t\tactiveRows = rowList.slice(0);\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataFiltered\")){\r\n\r\n\t\t\tactiveRows.forEach((row) => {\r\n\t\t\t\tactiveRowComponents.push(row.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchExternal(\"dataFiltered\", this.getFilters(), activeRowComponents);\r\n\t\t}\r\n\r\n\t\treturn activeRows;\r\n\t}\r\n\r\n\t//filter individual row\r\n\tfilterRow(row, filters){\r\n\t\tvar match = true,\r\n\t\tdata = row.getData();\r\n\r\n\t\tthis.filterList.forEach((filter) => {\r\n\t\t\tif(!this.filterRecurse(filter, data)){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tfor(var field in this.headerFilters){\r\n\t\t\tif(!this.headerFilters[field].func(data)){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tfilterRecurse(filter, data){\r\n\t\tvar match = false;\r\n\r\n\t\tif(Array.isArray(filter)){\r\n\t\t\tfilter.forEach((subFilter) => {\r\n\t\t\t\tif(this.filterRecurse(subFilter, data)){\r\n\t\t\t\t\tmatch = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tmatch = filter.func(data);\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n}\r\n\r\nFilter.moduleName = \"filter\";\r\n\r\n//load defaults\r\nFilter.filters = defaultFilters;\r\n\r\nexport default Filter;","export default function(cell, formatterParams, onRendered){\r\n\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn cell.getValue();\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().style.whiteSpace = \"pre-wrap\";\r\n\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar floatVal = parseFloat(cell.getValue()),\r\n\tsign = \"\",\r\n\tnumber, integer, decimal, rgx;\r\n\r\n\tvar decimalSym = formatterParams.decimal || \".\";\r\n\tvar thousandSym = formatterParams.thousand || \",\";\r\n\tvar negativeSign = formatterParams.negativeSign || \"-\";\r\n\tvar symbol = formatterParams.symbol || \"\";\r\n\tvar after = !!formatterParams.symbolAfter;\r\n\tvar precision = typeof formatterParams.precision !== \"undefined\" ? formatterParams.precision : 2;\r\n\r\n\tif(isNaN(floatVal)){\r\n\t\treturn this.emptyToSpace(this.sanitizeHTML(cell.getValue()));\r\n\t}\r\n\r\n\tif(floatVal < 0){\r\n\t\tfloatVal = Math.abs(floatVal);\r\n\t\tsign = negativeSign;\r\n\t}\r\n\r\n\tnumber = precision !== false ? floatVal.toFixed(precision) : floatVal;\r\n\tnumber = String(number).split(\".\");\r\n\r\n\tinteger = number[0];\r\n\tdecimal = number.length > 1 ? decimalSym + number[1] : \"\";\r\n\r\n\trgx = /(\\d+)(\\d{3})/;\r\n\r\n\twhile (rgx.test(integer)){\r\n\t\tinteger = integer.replace(rgx, \"$1\" + thousandSym + \"$2\");\r\n\t}\r\n\r\n\treturn after ? sign + integer + decimal + symbol : sign + symbol + integer + decimal;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\turlPrefix = formatterParams.urlPrefix || \"\",\r\n\tdownload = formatterParams.download,\r\n\tlabel = value,\r\n\tel = document.createElement(\"a\"),\r\n\tdata;\r\n\r\n\tif(formatterParams.labelField){\r\n\t\tdata = cell.getData();\r\n\t\tlabel = data[formatterParams.labelField];\r\n\t}\r\n\r\n\tif(formatterParams.label){\r\n\t\tswitch(typeof formatterParams.label){\r\n\t\t\tcase \"string\":\r\n\t\t\tlabel = formatterParams.label;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tlabel = formatterParams.label(cell);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif(label){\r\n\t\tif(formatterParams.urlField){\r\n\t\t\tdata = cell.getData();\r\n\t\t\tvalue = data[formatterParams.urlField];\r\n\t\t}\r\n\r\n\t\tif(formatterParams.url){\r\n\t\t\tswitch(typeof formatterParams.url){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tvalue = formatterParams.url;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tvalue = formatterParams.url(cell);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tel.setAttribute(\"href\", urlPrefix + value);\r\n\r\n\t\tif(formatterParams.target){\r\n\t\t\tel.setAttribute(\"target\", formatterParams.target);\r\n\t\t}\r\n\r\n\t\tif(formatterParams.download){\r\n\r\n\t\t\tif(typeof download == \"function\"){\r\n\t\t\t\tdownload = download(cell);\r\n\t\t\t}else{\r\n\t\t\t\tdownload = download === true ? \"\" : download;\r\n\t\t\t}\r\n\r\n\t\t\tel.setAttribute(\"download\", download);\r\n\t\t}\r\n\r\n\t\tel.innerHTML = this.emptyToSpace(this.sanitizeHTML(label));\r\n\r\n\t\treturn el;\r\n\t}else{\r\n\t\treturn \"&nbsp;\";\r\n\t}\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar el = document.createElement(\"img\"),\r\n\tsrc = cell.getValue();\r\n\r\n\tif(formatterParams.urlPrefix){\r\n\t\tsrc = formatterParams.urlPrefix + cell.getValue();\r\n\t}\r\n\r\n\tif(formatterParams.urlSuffix){\r\n\t\tsrc = src + formatterParams.urlSuffix;\r\n\t}\r\n\r\n\tel.setAttribute(\"src\", src);\r\n\r\n\tswitch(typeof formatterParams.height){\r\n\t\tcase \"number\":\r\n\t\tel.style.height = formatterParams.height + \"px\";\r\n\t\tbreak;\r\n\r\n\t\tcase \"string\":\r\n\t\tel.style.height = formatterParams.height;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tswitch(typeof formatterParams.width){\r\n\t\tcase \"number\":\r\n\t\tel.style.width = formatterParams.width + \"px\";\r\n\t\tbreak;\r\n\r\n\t\tcase \"string\":\r\n\t\tel.style.width = formatterParams.width;\r\n\t\tbreak;\r\n\t}\r\n\r\n\tel.addEventListener(\"load\", function(){\r\n\t\tcell.getRow().normalizeHeight();\r\n\t});\r\n\r\n\treturn el;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\telement = cell.getElement(),\r\n\tempty = formatterParams.allowEmpty,\r\n\ttruthy = formatterParams.allowTruthy,\r\n\ttick = typeof formatterParams.tickElement !== \"undefined\" ? formatterParams.tickElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>',\r\n\tcross = typeof formatterParams.crossElement !== \"undefined\" ? formatterParams.crossElement : '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\"  viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\r\n\r\n\tif((truthy && value) || (value === true || value === \"true\" || value === \"True\" || value === 1 || value === \"1\")){\r\n\t\telement.setAttribute(\"aria-checked\", true);\r\n\t\treturn tick || \"\";\r\n\t}else{\r\n\t\tif(empty && (value === \"null\" || value === \"\" || value === null || typeof value === \"undefined\")){\r\n\t\t\telement.setAttribute(\"aria-checked\", \"mixed\");\r\n\t\t\treturn \"\";\r\n\t\t}else{\r\n\t\t\telement.setAttribute(\"aria-checked\", false);\r\n\t\t\treturn cross || \"\";\r\n\t\t}\r\n\t}\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar\toutputFormat = formatterParams.outputFormat || \"dd/MM/yyyy HH:mm:ss\";\r\n\tvar\tinvalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\r\n\tvar value = cell.getValue();\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tvar newDatetime = DT.fromFormat(String(value), inputFormat);\r\n\r\n\t\tif(newDatetime.isValid){\r\n\r\n\t\t\tif(formatterParams.timezone){\r\n\t\t\t\tnewDatetime = newDatetime.shiftTimezone(formatterParams.timezone);\r\n\t\t\t}\r\n\r\n\t\t\treturn newDatetime.toFormat(outputFormat);\r\n\t\t}else{\r\n\r\n\t\t\tif(invalid === true || !value){\r\n\t\t\t\treturn value;\r\n\t\t\t}else if(typeof invalid === \"function\"){\r\n\t\t\t\treturn invalid(value);\r\n\t\t\t}else{\r\n\t\t\t\treturn invalid;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.error(\"Format Error - 'datetime' formatter is dependant on luxon.js\");\r\n\t}\r\n};","export default function (cell, formatterParams, onRendered) {\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar inputFormat = formatterParams.inputFormat || \"yyyy-MM-dd HH:mm:ss\";\r\n\tvar invalid = typeof formatterParams.invalidPlaceholder !== \"undefined\" ? formatterParams.invalidPlaceholder : \"\";\r\n\tvar suffix = typeof formatterParams.suffix !== \"undefined\" ? formatterParams.suffix : false;\r\n\tvar unit = typeof formatterParams.unit !== \"undefined\" ? formatterParams.unit : \"days\";\r\n\tvar humanize = typeof formatterParams.humanize !== \"undefined\" ? formatterParams.humanize : false;\r\n\tvar date = typeof formatterParams.date !== \"undefined\" ? formatterParams.date : DT.now();\r\n\tvar value = cell.getValue();\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\tvar newDatetime = DT.fromFormat(String(value), inputFormat);\r\n\r\n\t\tif (newDatetime.isValid){\r\n\t\t\tif(humanize){\r\n\t\t\t\t// return moment.duration(newDatetime.diff(date)).humanize(suffix);\r\n\t\t\t}else{\r\n\t\t\t\treturn parseInt(newDatetime.diff(date, unit)[unit]) + (suffix ? \" \" + suffix : \"\");\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tif (invalid === true) {\r\n\t\t\t\treturn value;\r\n\t\t\t} else if (typeof invalid === \"function\") {\r\n\t\t\t\treturn invalid(value);\r\n\t\t\t} else {\r\n\t\t\t\treturn invalid;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.error(\"Format Error - 'datetimediff' formatter is dependant on luxon.js\");\r\n\t}\r\n};","export default function (cell, formatterParams, onRendered) {\r\n\tvar value = cell.getValue();\r\n\r\n\tif (typeof formatterParams[value] === \"undefined\") {\r\n\t\tconsole.warn('Missing display value for ' + value);\r\n\t\treturn value;\r\n\t}\r\n\r\n\treturn formatterParams[value];\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = cell.getValue(),\r\n\telement = cell.getElement(),\r\n\tmaxStars = formatterParams && formatterParams.stars ? formatterParams.stars : 5,\r\n\tstars = document.createElement(\"span\"),\r\n\tstar = document.createElementNS('http://www.w3.org/2000/svg', \"svg\"),\r\n\tstarActive = '<polygon fill=\"#FFEA00\" stroke=\"#C1AB60\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>',\r\n\tstarInactive = '<polygon fill=\"#D2D2D2\" stroke=\"#686868\" stroke-width=\"37.6152\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919 \"/>';\r\n\r\n\t//style stars holder\r\n\tstars.style.verticalAlign = \"middle\";\r\n\r\n\t//style star\r\n\tstar.setAttribute(\"width\", \"14\");\r\n\tstar.setAttribute(\"height\", \"14\");\r\n\tstar.setAttribute(\"viewBox\", \"0 0 512 512\");\r\n\tstar.setAttribute(\"xml:space\", \"preserve\");\r\n\tstar.style.padding = \"0 1px\";\r\n\r\n\tvalue = value && !isNaN(value) ? parseInt(value) : 0;\r\n\r\n\tvalue = Math.max(0, Math.min(value, maxStars));\r\n\r\n\tfor(var i=1;i<= maxStars;i++){\r\n\t\tvar nextStar = star.cloneNode(true);\r\n\t\tnextStar.innerHTML = i <= value ? starActive : starInactive;\r\n\r\n\t\tstars.appendChild(nextStar);\r\n\t}\r\n\r\n\telement.style.whiteSpace = \"nowrap\";\r\n\telement.style.overflow = \"hidden\";\r\n\telement.style.textOverflow = \"ellipsis\";\r\n\r\n\telement.setAttribute(\"aria-label\", value);\r\n\r\n\treturn stars;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar value = this.sanitizeHTML(cell.getValue()) || 0,\r\n\tel = document.createElement(\"span\"),\r\n\tmax = formatterParams && formatterParams.max ? formatterParams.max : 100,\r\n\tmin = formatterParams && formatterParams.min ? formatterParams.min : 0,\r\n\tcolors = formatterParams && typeof formatterParams.color !== \"undefined\" ? formatterParams.color : [\"red\", \"orange\", \"green\"],\r\n\tcolor = \"#666666\",\r\n\tpercent, percentValue;\r\n\r\n\tif(isNaN(value) || typeof cell.getValue() === \"undefined\"){\r\n\t\treturn;\r\n\t}\r\n\r\n\tel.classList.add(\"tabulator-traffic-light\");\r\n\r\n\t//make sure value is in range\r\n\tpercentValue = parseFloat(value) <= max ? parseFloat(value) : max;\r\n\tpercentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\r\n\r\n\t//workout percentage\r\n\tpercent = (max - min) / 100;\r\n\tpercentValue = Math.round((percentValue - min) / percent);\r\n\r\n\t//set color\r\n\tswitch(typeof colors){\r\n\t\tcase \"string\":\r\n\t\tcolor = colors;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tcolor = colors(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(colors)){\r\n\t\t\tvar unit = 100 / colors.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, colors.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tcolor = colors[index];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tel.style.backgroundColor = color;\r\n\r\n\treturn el;\r\n};","import CellComponent from '../../../../core/cell/CellComponent.js';\r\n\r\nexport default function(cell, formatterParams, onRendered){ //progress bar\r\n\tvar value = this.sanitizeHTML(cell.getValue()) || 0,\r\n\telement = cell.getElement(),\r\n\tmax = formatterParams && formatterParams.max ? formatterParams.max : 100,\r\n\tmin = formatterParams && formatterParams.min ? formatterParams.min : 0,\r\n\tlegendAlign = formatterParams && formatterParams.legendAlign ? formatterParams.legendAlign : \"center\",\r\n\tpercent, percentValue, color, legend, legendColor, top, left, right, bottom;\r\n\r\n\t//make sure value is in range\r\n\tpercentValue = parseFloat(value) <= max ? parseFloat(value) : max;\r\n\tpercentValue = parseFloat(percentValue) >= min ? parseFloat(percentValue) : min;\r\n\r\n\t//workout percentage\r\n\tpercent = (max - min) / 100;\r\n\tpercentValue = Math.round((percentValue - min) / percent);\r\n\r\n\t//set bar color\r\n\tswitch(typeof formatterParams.color){\r\n\t\tcase \"string\":\r\n\t\tcolor = formatterParams.color;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tcolor = formatterParams.color(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(formatterParams.color)){\r\n\t\t\tvar unit = 100 / formatterParams.color.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, formatterParams.color.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tcolor = formatterParams.color[index];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:\r\n\t\tcolor = \"#2DC214\";\r\n\t}\r\n\r\n\t//generate legend\r\n\tswitch(typeof formatterParams.legend){\r\n\t\tcase \"string\":\r\n\t\tlegend = formatterParams.legend;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tlegend = formatterParams.legend(value);\r\n\t\tbreak;\r\n\t\tcase \"boolean\":\r\n\t\tlegend = value;\r\n\t\tbreak;\r\n\t\tdefault:\r\n\t\tlegend = false;\r\n\t}\r\n\r\n\t//set legend color\r\n\tswitch(typeof formatterParams.legendColor){\r\n\t\tcase \"string\":\r\n\t\tlegendColor = formatterParams.legendColor;\r\n\t\tbreak;\r\n\t\tcase \"function\":\r\n\t\tlegendColor = formatterParams.legendColor(value);\r\n\t\tbreak;\r\n\t\tcase \"object\":\r\n\t\tif(Array.isArray(formatterParams.legendColor)){\r\n\t\t\tvar unit = 100 / formatterParams.legendColor.length;\r\n\t\t\tvar index = Math.floor(percentValue / unit);\r\n\r\n\t\t\tindex = Math.min(index, formatterParams.legendColor.length - 1);\r\n\t\t\tindex = Math.max(index, 0);\r\n\t\t\tlegendColor = formatterParams.legendColor[index];\r\n\t\t}\r\n\t\tbreak;\r\n\t\tdefault:\r\n\t\tlegendColor = \"#000\";\r\n\t}\r\n\r\n\telement.style.minWidth = \"30px\";\r\n\telement.style.position = \"relative\";\r\n\r\n\telement.setAttribute(\"aria-label\", percentValue);\r\n\r\n\tvar barEl = document.createElement(\"div\");\r\n\tbarEl.style.display = \"inline-block\";\r\n\tbarEl.style.position = \"absolute\";\r\n\tbarEl.style.width = percentValue + \"%\";\r\n\tbarEl.style.backgroundColor = color;\r\n\tbarEl.style.height = \"100%\";\r\n\r\n\tbarEl.setAttribute('data-max', max);\r\n\tbarEl.setAttribute('data-min', min);\r\n\r\n\tvar barContainer = document.createElement(\"div\");\r\n\tbarContainer.style.position = \"relative\";\r\n\tbarContainer.style.width = \"100%\";\r\n\tbarContainer.style.height = \"100%\";\r\n\r\n\tif(legend){\r\n\t\tvar legendEl = document.createElement(\"div\");\r\n\t\tlegendEl.style.position = \"absolute\";\r\n\t\tlegendEl.style.top = 0;\r\n\t\tlegendEl.style.left = 0;\r\n\t\tlegendEl.style.textAlign = legendAlign;\r\n\t\tlegendEl.style.width = \"100%\";\r\n\t\tlegendEl.style.color = legendColor;\r\n\t\tlegendEl.innerHTML = legend;\r\n\t}\r\n\r\n\tonRendered(function(){\r\n\r\n\t\t//handle custom element needed if formatter is to be included in printed/downloaded output\r\n\t\tif(!(cell instanceof CellComponent)){\r\n\t\t\tvar holderEl = document.createElement(\"div\");\r\n\t\t\tholderEl.style.position = \"absolute\";\r\n\t\t\tholderEl.style.top = \"4px\";\r\n\t\t\tholderEl.style.bottom = \"4px\";\r\n\t\t\tholderEl.style.left = \"4px\";\r\n\t\t\tholderEl.style.right = \"4px\";\r\n\r\n\t\t\telement.appendChild(holderEl);\r\n\r\n\t\t\telement = holderEl;\r\n\t\t}\r\n\r\n\t\telement.appendChild(barContainer);\r\n\t\tbarContainer.appendChild(barEl);\r\n\r\n\t\tif(legend){\r\n\t\t\tbarContainer.appendChild(legendEl);\r\n\t\t}\r\n\t});\r\n\r\n\treturn \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().style.backgroundColor = this.sanitizeHTML(cell.getValue());\r\n\treturn \"\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#2DC214\" clip-rule=\"evenodd\" d=\"M21.652,3.211c-0.293-0.295-0.77-0.295-1.061,0L9.41,14.34  c-0.293,0.297-0.771,0.297-1.062,0L3.449,9.351C3.304,9.203,3.114,9.13,2.923,9.129C2.73,9.128,2.534,9.201,2.387,9.351  l-2.165,1.946C0.078,11.445,0,11.63,0,11.823c0,0.194,0.078,0.397,0.223,0.544l4.94,5.184c0.292,0.296,0.771,0.776,1.062,1.07  l2.124,2.141c0.292,0.293,0.769,0.293,1.062,0l14.366-14.34c0.293-0.294,0.293-0.777,0-1.071L21.652,3.211z\" fill-rule=\"evenodd\"/></svg>';\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn '<svg enable-background=\"new 0 0 24 24\" height=\"14\" width=\"14\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" ><path fill=\"#CE1515\" d=\"M22.245,4.015c0.313,0.313,0.313,0.826,0,1.139l-6.276,6.27c-0.313,0.312-0.313,0.826,0,1.14l6.273,6.272  c0.313,0.313,0.313,0.826,0,1.14l-2.285,2.277c-0.314,0.312-0.828,0.312-1.142,0l-6.271-6.271c-0.313-0.313-0.828-0.313-1.141,0  l-6.276,6.267c-0.313,0.313-0.828,0.313-1.141,0l-2.282-2.28c-0.313-0.313-0.313-0.826,0-1.14l6.278-6.269  c0.313-0.312,0.313-0.826,0-1.14L1.709,5.147c-0.314-0.313-0.314-0.827,0-1.14l2.284-2.278C4.308,1.417,4.821,1.417,5.135,1.73  L11.405,8c0.314,0.314,0.828,0.314,1.141,0.001l6.276-6.267c0.312-0.312,0.826-0.312,1.141,0L22.245,4.015z\"/></svg>';\r\n};","export default function(cell, formatterParams, onRendered){\r\n\treturn this.table.rowManager.activeRows.indexOf(cell.getRow()._getSelf()) + 1;\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tcell.getElement().classList.add(\"tabulator-row-handle\");\r\n\treturn \"<div class='tabulator-row-handle-box'><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div><div class='tabulator-row-handle-bar'></div></div>\";\r\n};","export default function(cell, formatterParams, onRendered){\r\n\tvar open = false,\r\n\tel = document.createElement(\"div\"),\r\n\tconfig = cell.getRow()._row.modules.responsiveLayout;\r\n\r\n\tel.classList.add(\"tabulator-responsive-collapse-toggle\");\r\n\tel.innerHTML = \"<span class='tabulator-responsive-collapse-toggle-open'>+</span><span class='tabulator-responsive-collapse-toggle-close'>-</span>\";\r\n\r\n\tcell.getElement().classList.add(\"tabulator-row-handle\");\r\n\r\n\tfunction toggleList(isOpen){\r\n\t\tvar collapseEl = config.element;\r\n\r\n\t\tconfig.open = isOpen;\r\n\r\n\t\tif(collapseEl){\r\n\r\n\t\t\tif(config.open){\r\n\t\t\t\tel.classList.add(\"open\");\r\n\t\t\t\tcollapseEl.style.display = '';\r\n\t\t\t}else{\r\n\t\t\t\tel.classList.remove(\"open\");\r\n\t\t\t\tcollapseEl.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tel.addEventListener(\"click\", function(e){\r\n\t\te.stopImmediatePropagation();\r\n\t\ttoggleList(!config.open);\r\n\t});\r\n\r\n\ttoggleList(config.open);\r\n\r\n\treturn el;\r\n};","import RowComponent from '../../../../core/row/RowComponent.js';\r\n\r\nexport default function(cell, formatterParams, onRendered){\r\n\tvar checkbox = document.createElement(\"input\");\r\n\r\n\tcheckbox.type = 'checkbox';\r\n\r\n\tif(this.table.modExists(\"selectRow\", true)){\r\n\r\n\t\tcheckbox.addEventListener(\"click\", (e) => {\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tif(typeof cell.getRow == 'function'){\r\n\t\t\tvar row = cell.getRow();\r\n\r\n\t\t\tif(row instanceof RowComponent){\r\n\r\n\t\t\t\tcheckbox.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\trow.toggleSelect();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckbox.checked = row.isSelected && row.isSelected();\r\n\t\t\t\tthis.table.modules.selectRow.registerRowSelectCheckbox(row, checkbox);\r\n\t\t\t}else{\r\n\t\t\t\tcheckbox = \"\";\r\n\t\t\t}\r\n\t\t}else {\r\n\t\t\tcheckbox.addEventListener(\"change\", (e) => {\r\n\t\t\t\tif(this.table.modules.selectRow.selectedRows.length){\r\n\t\t\t\t\tthis.table.deselectRow();\r\n\t\t\t\t}else {\r\n\t\t\t\t\tthis.table.selectRow(formatterParams.rowRange);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.modules.selectRow.registerHeaderSelectCheckbox(checkbox);\r\n\t\t}\r\n\t}\r\n\r\n\treturn checkbox;\r\n};","import plaintext from './formatters/plaintext.js';\r\nimport html from './formatters/html.js';\r\nimport textarea from './formatters/textarea.js';\r\nimport money from './formatters/money.js';\r\nimport link from './formatters/link.js';\r\nimport image from './formatters/image.js';\r\nimport tickCross from './formatters/tickCross.js';\r\nimport datetime from './formatters/datetime.js';\r\nimport datetimediff from './formatters/datetimediff.js';\r\nimport lookup from './formatters/lookup.js';\r\nimport star from './formatters/star.js';\r\nimport traffic from './formatters/traffic.js';\r\nimport progress from './formatters/progress.js';\r\nimport color from './formatters/color.js';\r\nimport buttonTick from './formatters/buttonTick.js';\r\nimport buttonCross from './formatters/buttonCross.js';\r\nimport rownum from './formatters/rownum.js';\r\nimport handle from './formatters/handle.js';\r\nimport responsiveCollapse from './formatters/responsiveCollapse.js';\r\nimport rowSelection from './formatters/rowSelection.js';\r\n\r\nexport default {\r\n\tplaintext:plaintext,\r\n\thtml:html,\r\n\ttextarea:textarea,\r\n\tmoney:money,\r\n\tlink:link,\r\n\timage:image,\r\n\ttickCross:tickCross,\r\n\tdatetime:datetime,\r\n\tdatetimediff:datetimediff,\r\n\tlookup:lookup,\r\n\tstar:star,\r\n\ttraffic:traffic,\r\n\tprogress:progress,\r\n\tcolor:color,\r\n\tbuttonTick:buttonTick,\r\n\tbuttonCross:buttonCross,\r\n\trownum:rownum,\r\n\thandle:handle,\r\n\tresponsiveCollapse:responsiveCollapse,\r\n\trowSelection:rowSelection,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultFormatters from './defaults/formatters.js';\r\n\r\nclass Format extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.registerColumnOption(\"formatter\");\r\n\t\tthis.registerColumnOption(\"formatterParams\");\r\n\r\n\t\tthis.registerColumnOption(\"formatterPrint\");\r\n\t\tthis.registerColumnOption(\"formatterPrintParams\");\r\n\t\tthis.registerColumnOption(\"formatterClipboard\");\r\n\t\tthis.registerColumnOption(\"formatterClipboardParams\");\r\n\t\tthis.registerColumnOption(\"formatterHtmlOutput\");\r\n\t\tthis.registerColumnOption(\"formatterHtmlOutputParams\");\r\n\t\tthis.registerColumnOption(\"titleFormatter\");\r\n\t\tthis.registerColumnOption(\"titleFormatterParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-format\", this.formatValue.bind(this));\r\n\t\tthis.subscribe(\"cell-rendered\", this.cellRendered.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"column-format\", this.formatHeader.bind(this));\r\n\t}\r\n\r\n\t//initialize column formatter\r\n\tinitializeColumn(column){\r\n\t\tcolumn.modules.format = this.lookupFormatter(column, \"\");\r\n\r\n\t\tif(typeof column.definition.formatterPrint !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.print = this.lookupFormatter(column, \"Print\");\r\n\t\t}\r\n\r\n\t\tif(typeof column.definition.formatterClipboard !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.clipboard = this.lookupFormatter(column, \"Clipboard\");\r\n\t\t}\r\n\r\n\t\tif(typeof column.definition.formatterHtmlOutput !== \"undefined\"){\r\n\t\t\tcolumn.modules.format.htmlOutput = this.lookupFormatter(column, \"HtmlOutput\");\r\n\t\t}\r\n\t}\r\n\r\n\tlookupFormatter(column, type){\r\n\t\tvar config = {params:column.definition[\"formatter\" + type + \"Params\"] || {}},\r\n\t\tformatter = column.definition[\"formatter\" + type];\r\n\r\n\t\t//set column formatter\r\n\t\tswitch(typeof formatter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Format.formatters[formatter]){\r\n\t\t\t\tconfig.formatter = Format.formatters[formatter];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Formatter Error - No such formatter found: \", formatter);\r\n\t\t\t\tconfig.formatter = Format.formatters.plaintext;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tconfig.formatter = formatter;\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tconfig.formatter = Format.formatters.plaintext;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n\tcellRendered(cell){\r\n\t\tif(cell.modules.format && cell.modules.format.renderedCallback && !cell.modules.format.rendered){\r\n\t\t\tcell.modules.format.renderedCallback();\r\n\t\t\tcell.modules.format.rendered = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//return a formatted value for a column header\r\n\tformatHeader(column, title, el){\r\n\t\tvar formatter, params, onRendered, mockCell;\r\n\r\n\t\tif(column.definition.titleFormatter){\r\n\t\t\tformatter = this.getFormatter(column.definition.titleFormatter);\r\n\r\n\t\t\tonRendered = (callback) => {\r\n\t\t\t\tcolumn.titleFormatterRendered = callback;\r\n\t\t\t};\r\n\r\n\t\t\tmockCell = {\r\n\t\t\t\tgetValue:function(){\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tgetElement:function(){\r\n\t\t\t\t\treturn el;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tparams = column.definition.titleFormatterParams || {};\r\n\r\n\t\t\tparams = typeof params === \"function\" ? params() : params;\r\n\r\n\t\t\treturn formatter.call(this, mockCell, params, onRendered);\r\n\t\t}else{\r\n\t\t\treturn title;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//return a formatted value for a cell\r\n\tformatValue(cell){\r\n\t\tvar component = cell.getComponent(),\r\n\t\tparams = typeof cell.column.modules.format.params === \"function\" ? cell.column.modules.format.params(component) : cell.column.modules.format.params;\r\n\r\n\t\tfunction onRendered(callback){\r\n\t\t\tif(!cell.modules.format){\r\n\t\t\t\tcell.modules.format = {};\r\n\t\t\t}\r\n\r\n\t\t\tcell.modules.format.renderedCallback = callback;\r\n\t\t\tcell.modules.format.rendered = false;\r\n\t\t}\r\n\r\n\t\treturn cell.column.modules.format.formatter.call(this, component, params, onRendered);\r\n\t}\r\n\r\n\tformatExportValue(cell, type){\r\n\t\tvar formatter = cell.column.modules.format[type],\r\n\t\tparams;\r\n\r\n\t\tif(formatter){\r\n\t\t\tparams = typeof formatter.params === \"function\" ? formatter.params(component) : formatter.params;\r\n\r\n\t\t\tfunction onRendered(callback){\r\n\t\t\t\tif(!cell.modules.format){\r\n\t\t\t\t\tcell.modules.format = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell.modules.format.renderedCallback = callback;\r\n\t\t\t\tcell.modules.format.rendered = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn formatter.formatter.call(this, cell.getComponent(), params, onRendered);\r\n\r\n\t\t}else{\r\n\t\t\treturn this.formatValue(cell);\r\n\t\t}\r\n\t}\r\n\r\n\tsanitizeHTML(value){\r\n\t\tif(value){\r\n\t\t\tvar entityMap = {\r\n\t\t\t\t'&': '&amp;',\r\n\t\t\t\t'<': '&lt;',\r\n\t\t\t\t'>': '&gt;',\r\n\t\t\t\t'\"': '&quot;',\r\n\t\t\t\t\"'\": '&#39;',\r\n\t\t\t\t'/': '&#x2F;',\r\n\t\t\t\t'`': '&#x60;',\r\n\t\t\t\t'=': '&#x3D;'\r\n\t\t\t};\r\n\r\n\t\t\treturn String(value).replace(/[&<>\"'`=\\/]/g, function (s) {\r\n\t\t\t\treturn entityMap[s];\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\temptyToSpace(value){\r\n\t\treturn value === null || typeof value === \"undefined\" || value === \"\" ? \"&nbsp;\" : value;\r\n\t}\r\n\r\n\t//get formatter for cell\r\n\tgetFormatter(formatter){\r\n\t\tvar formatter;\r\n\r\n\t\tswitch(typeof formatter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Format.formatters[formatter]){\r\n\t\t\t\tformatter = Format.formatters[formatter]\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Formatter Error - No such formatter found: \", formatter);\r\n\t\t\t\tformatter = Format.formatters.plaintext;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tformatter = formatter;\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tformatter = Format.formatters.plaintext;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn formatter;\r\n\t}\r\n}\r\n\r\nFormat.moduleName = \"format\";\r\n\r\n//load defaults\r\nFormat.formatters = defaultFormatters;\r\n\r\nexport default Format;","import Module from '../../core/Module.js';\r\n\r\nclass FrozenColumns extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.leftColumns = [];\r\n\t\tthis.rightColumns = [];\r\n\t\tthis.leftMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.rightPadding = 0;\r\n\t\tthis.initializationMode = \"left\";\r\n\t\tthis.active = false;\r\n\t\tthis.scrollEndTimer = false;\r\n\r\n\t\tthis.registerColumnOption(\"frozen\");\r\n\t}\r\n\r\n\t//reset initial state\r\n\treset(){\r\n\t\tthis.initializationMode = \"left\";\r\n\t\tthis.leftColumns = [];\r\n\t\tthis.rightColumns = [];\r\n\t\tthis.leftMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.rightMargin = 0;\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.table.columnManager.headersElement.style.marginLeft = 0;\r\n\t\tthis.table.columnManager.element.style.paddingRight = 0;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-layout\", this.layoutCell.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"column-width\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"row-layout-after\", this.layoutRow.bind(this));\r\n\t\tthis.subscribe(\"table-layout\", this.layout.bind(this));\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t\tthis.subscribe(\"columns-loading\", this.reset.bind(this));\r\n\t\tthis.subscribe(\"table-redraw\", this.layout.bind(this));\r\n\t}\r\n\r\n\tlayoutCell(cell){\r\n\t\tthis.layoutElement(cell.element, cell.column)\r\n\t}\r\n\r\n\t//initialize specific column\r\n\tinitializeColumn(column){\r\n\t\tvar config = {margin:0, edge:false};\r\n\r\n\t\tif(!column.isGroup){\r\n\r\n\t\t\tif(this.frozenCheck(column)){\r\n\r\n\t\t\t\tconfig.position = this.initializationMode;\r\n\r\n\t\t\t\tif(this.initializationMode == \"left\"){\r\n\t\t\t\t\tthis.leftColumns.push(column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.rightColumns.unshift(column);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.active = true;\r\n\r\n\t\t\t\tcolumn.modules.frozen = config;\r\n\t\t\t}else{\r\n\t\t\t\tthis.initializationMode = \"right\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfrozenCheck(column){\r\n\t\tvar frozen = false;\r\n\r\n\t\tif(column.parent.isGroup && column.definition.frozen){\r\n\t\t\tconsole.warn(\"Frozen Column Error - Parent column group must be frozen, not individual columns or sub column groups\");\r\n\t\t}\r\n\r\n\t\tif(column.parent.isGroup){\r\n\t\t\treturn this.frozenCheck(column.parent);\r\n\t\t}else{\r\n\t\t\treturn column.definition.frozen;\r\n\t\t}\r\n\r\n\t\treturn frozen;\r\n\t}\r\n\r\n\t//quick layout to smooth horizontal scrolling\r\n\tscrollHorizontal(){\r\n\t\tvar rows;\r\n\r\n\t\tif(this.active){\r\n\t\t\tclearTimeout(this.scrollEndTimer);\r\n\r\n\t\t\t//layout all rows after scroll is complete\r\n\t\t\tthis.scrollEndTimer = setTimeout(() => {\r\n\t\t\t\tthis.layout();\r\n\t\t\t}, 100);\r\n\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\r\n\t\t\tthis.calcMargins();\r\n\r\n\t\t\tthis.layoutColumnPosition();\r\n\r\n\t\t\tthis.layoutCalcRows();\r\n\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.rowManager.tableElement.style.marginRight = this.rightMargin;\r\n\t\t}\r\n\t}\r\n\r\n\t//calculate margins for rows\r\n\tcalcMargins(){\r\n\t\tthis.leftMargin = this._calcSpace(this.leftColumns, this.leftColumns.length) + \"px\";\r\n\t\tthis.table.columnManager.headersElement.style.marginLeft = this.leftMargin;\r\n\r\n\t\tthis.rightMargin = this._calcSpace(this.rightColumns, this.rightColumns.length) + \"px\";\r\n\t\tthis.table.columnManager.element.style.paddingRight = this.rightMargin;\r\n\r\n\t\t//calculate right frozen columns\r\n\t\tthis.rightPadding = this.table.rowManager.element.clientWidth + this.table.columnManager.scrollLeft;\r\n\t}\r\n\r\n\t//layout calculation rows\r\n\tlayoutCalcRows(){\r\n\t\tif(this.table.modExists(\"columnCalcs\")){\r\n\t\t\tif(this.table.modules.columnCalcs.topInitialized && this.table.modules.columnCalcs.topRow){\r\n\t\t\t\tthis.layoutRow(this.table.modules.columnCalcs.topRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modules.columnCalcs.botInitialized && this.table.modules.columnCalcs.botRow){\r\n\t\t\t\tthis.layoutRow(this.table.modules.columnCalcs.botRow);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.modExists(\"groupRows\")){\r\n\t\t\t\tthis.layoutGroupCalcs(this.table.modules.groupRows.getGroups())\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutGroupCalcs(groups){\r\n\t\tgroups.forEach((group) => {\r\n\t\t\tif(group.calcs.top){\r\n\t\t\t\tthis.layoutRow(group.calcs.top);\r\n\t\t\t}\r\n\r\n\t\t\tif(group.calcs.bottom){\r\n\t\t\t\tthis.layoutRow(group.calcs.bottom);\r\n\t\t\t}\r\n\r\n\t\t\tif(group.groupList && group.groupList.length){\r\n\t\t\t\tthis.layoutGroupCalcs(group.groupList && group.groupList);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//calculate column positions and layout headers\r\n\tlayoutColumnPosition(allCells){\r\n\r\n\t\tvar leftParents = [];\r\n\r\n\t\tthis.leftColumns.forEach((column, i) => {\r\n\t\t\tcolumn.modules.frozen.margin = (this._calcSpace(this.leftColumns, i) + this.table.columnManager.scrollLeft) + \"px\";\r\n\r\n\t\t\tif(i == this.leftColumns.length - 1){\r\n\t\t\t\tcolumn.modules.frozen.edge = true;\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.modules.frozen.edge = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(column.parent.isGroup){\r\n\t\t\t\tvar parentEl = this.getColGroupParentElement(column);\r\n\t\t\t\tif(!leftParents.includes(parentEl)){\r\n\t\t\t\t\tthis.layoutElement(parentEl, column);\r\n\t\t\t\t\tleftParents.push(parentEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(column.modules.frozen.edge){\r\n\t\t\t\t\tparentEl.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.layoutElement(column.getElement(), column);\r\n\t\t\t}\r\n\r\n\t\t\tif(allCells){\r\n\t\t\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.rightColumns.forEach((column, i) => {\r\n\t\t\tcolumn.modules.frozen.margin = (this.rightPadding - this._calcSpace(this.rightColumns, i + 1)) + \"px\";\r\n\r\n\t\t\tif(i == this.rightColumns.length - 1){\r\n\t\t\t\tcolumn.modules.frozen.edge = true;\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.modules.frozen.edge = false;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(column.parent.isGroup){\r\n\t\t\t\tthis.layoutElement(this.getColGroupParentElement(column), column);\r\n\t\t\t}else{\r\n\t\t\t\tthis.layoutElement(column.getElement(), column);\r\n\t\t\t}\r\n\r\n\t\t\tif(allCells){\r\n\t\t\t\tcolumn.cells.forEach((cell) => {\r\n\t\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetColGroupParentElement(column){\r\n\t\treturn column.parent.isGroup ? this.getColGroupParentElement(column.parent) : column.getElement();\r\n\t}\r\n\r\n\t//layout columns appropropriatly\r\n\tlayout(){\r\n\t\tvar rightMargin = 0;\r\n\r\n\t\tif(this.active){\r\n\r\n\t\t\t//calculate row padding\r\n\t\t\tthis.calcMargins();\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) =>{\r\n\t\t\t\tif(row.type === \"row\"){\r\n\t\t\t\t\tthis.layoutRow(row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.layoutCalcRows();\r\n\r\n\t\t\t//calculate left columns\r\n\t\t\tthis.layoutColumnPosition(true);\r\n\r\n\t\t\tthis.table.rowManager.tableElement.style.marginRight = this.rightMargin;\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\trowEl.style.paddingLeft = this.leftMargin;\r\n\r\n\t\tthis.leftColumns.forEach((column) => {\r\n\t\t\tvar cell = row.getCell(column);\r\n\r\n\t\t\tif(cell){\r\n\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.rightColumns.forEach((column) => {\r\n\t\t\tvar cell = row.getCell(column);\r\n\r\n\t\t\tif(cell){\r\n\t\t\t\tthis.layoutElement(cell.getElement(true), column);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tlayoutElement(element, column){\r\n\r\n\t\tif(column.modules.frozen){\r\n\t\t\telement.style.position = \"absolute\";\r\n\t\t\telement.style.left = column.modules.frozen.margin;\r\n\r\n\t\t\telement.classList.add(\"tabulator-frozen\");\r\n\r\n\t\t\tif(column.modules.frozen.edge){\r\n\t\t\t\telement.classList.add(\"tabulator-frozen-\" + column.modules.frozen.position);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_calcSpace(columns, index){\r\n\t\tvar width = 0;\r\n\r\n\t\tfor (let i = 0; i < index; i++){\r\n\t\t\tif(columns[i].visible){\r\n\t\t\t\twidth += columns[i].getWidth();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn width;\r\n\t}\r\n}\r\n\r\nFrozenColumns.moduleName = \"frozenColumns\";\r\n\r\nexport default FrozenColumns;","import Module from '../../core/Module.js';\r\n\r\nclass FrozenRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.topElement = document.createElement(\"div\");\r\n\t\tthis.rows = [];\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"freeze\", this.freezeRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"unfreeze\", this.unfreezeRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isFrozen\", this.isRowFrozen.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.rows = [];\r\n\r\n\t\tthis.topElement.classList.add(\"tabulator-frozen-rows-holder\");\r\n\r\n\t\t// this.table.columnManager.element.append(this.topElement);\r\n\t\tthis.table.columnManager.getElement().insertBefore(this.topElement, this.table.columnManager.headersElement.nextSibling);\r\n\r\n\t\tthis.subscribe(\"row-deleting\", this.detachRow.bind(this));\r\n\r\n\t\tthis.registerDisplayHandler(this.getRows.bind(this), 10);\r\n\t}\r\n\r\n\tisRowFrozen(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\t\treturn index > -1;\r\n\t}\r\n\r\n\tisFrozen(){\r\n\t\treturn !!this.rows.length;\r\n\t}\r\n\r\n\t//filter frozen rows out of display data\r\n\tgetRows(rows){\r\n\t\tvar self = this,\r\n\t\tfrozen = [],\r\n\t\toutput = rows.slice(0);\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\tvar index = output.indexOf(row);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\toutput.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tfreezeRow(row){\r\n\t\tif(!row.modules.frozen){\r\n\t\t\trow.modules.frozen = true;\r\n\t\t\tthis.topElement.appendChild(row.getElement());\r\n\t\t\trow.initialize();\r\n\t\t\trow.normalizeHeight();\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\tthis.rows.push(row);\r\n\r\n\t\t\tthis.refreshData(false, \"display\")\r\n\r\n\t\t\tthis.styleRows();\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Freeze Error - Row is already frozen\");\r\n\t\t}\r\n\t}\r\n\r\n\tunfreezeRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\r\n\t\tif(row.modules.frozen){\r\n\r\n\t\t\trow.modules.frozen = false;\r\n\r\n\t\t\tthis.detachRow(row);\r\n\r\n\t\t\tthis.table.rowManager.adjustTableSize();\r\n\r\n\t\t\tthis.refreshData(false, \"display\")\r\n\r\n\t\t\tif(this.rows.length){\r\n\t\t\t\tthis.styleRows();\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Freeze Error - Row is already unfrozen\");\r\n\t\t}\r\n\t}\r\n\r\n\tdetachRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tvar rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\r\n\t\t\tthis.rows.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tstyleRows(row){\r\n\t\tthis.rows.forEach((row, i) => {\r\n\t\t\tthis.table.rowManager.styleRow(row, i);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nFrozenRows.moduleName = \"frozenRows\";\r\n\r\nexport default FrozenRows;","//public group object\r\nclass GroupComponent {\r\n\tconstructor (group){\r\n\t\tthis._group = group;\r\n\t\tthis.type = \"GroupComponent\";\r\n\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget: function(target, name, receiver) {\r\n\t\t\t\tif (typeof target[name] !== \"undefined\") {\r\n\t\t\t\t\treturn target[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn target._group.table.componentFunctionBinder.handle(\"row\", target._group, name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tgetKey(){\r\n\t\treturn this._group.key;\r\n\t}\r\n\r\n\tgetField(){\r\n\t\treturn this._group.field;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this._group.element;\r\n\t}\r\n\r\n\tgetRows(){\r\n\t\treturn this._group.getRows(true);\r\n\t}\r\n\r\n\tgetSubGroups(){\r\n\t\treturn this._group.getSubGroups(true);\r\n\t}\r\n\r\n\tgetParentGroup(){\r\n\t\treturn this._group.parent ? this._group.parent.getComponent() : false;\r\n\t}\r\n\r\n\tisVisible(){\r\n\t\treturn this._group.visible;\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis._group.show();\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis._group.hide();\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tthis._group.toggleVisibility();\r\n\t}\r\n\r\n\t_getSelf(){\r\n\t\treturn this._group;\r\n\t}\r\n\r\n\tgetTable(){\r\n\t\treturn this._group.groupManager.table;\r\n\t}\r\n}\r\n\r\nexport default GroupComponent;","import Helpers from '../../core/tools/Helpers.js';\r\nimport GroupComponent from './GroupComponent.js';\r\n\r\n//Group functions\r\nclass Group{\r\n\r\n\tconstructor(groupManager, parent, level, key, field, generator, oldGroup){\r\n\t\tthis.groupManager = groupManager;\r\n\t\tthis.parent = parent;\r\n\t\tthis.key = key;\r\n\t\tthis.level = level;\r\n\t\tthis.field = field;\r\n\t\tthis.hasSubGroups = level < (groupManager.groupIDLookups.length - 1);\r\n\t\tthis.addRow = this.hasSubGroups ? this._addRowToGroup : this._addRow;\r\n\t\tthis.type = \"group\"; //type of element\r\n\t\tthis.old = oldGroup;\r\n\t\tthis.rows = [];\r\n\t\tthis.groups = [];\r\n\t\tthis.groupList = [];\r\n\t\tthis.generator = generator;\r\n\t\tthis.elementContents = false;\r\n\t\tthis.height = 0;\r\n\t\tthis.outerHeight = 0;\r\n\t\tthis.initialized = false;\r\n\t\tthis.calcs = {};\r\n\t\tthis.initialized = false;\r\n\t\tthis.modules = {};\r\n\t\tthis.arrowElement = false;\r\n\r\n\t\tthis.visible = oldGroup ? oldGroup.visible : (typeof groupManager.startOpen[level] !== \"undefined\" ? groupManager.startOpen[level] : groupManager.startOpen[0]);\r\n\r\n\t\tthis.component = null;\r\n\r\n\t\tthis.createElements();\r\n\t\tthis.addBindings();\r\n\r\n\t\tthis.createValueGroups();\r\n\t}\r\n\r\n\twipe(){\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\tgroup.wipe();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\tif(row.modules){\r\n\t\t\t\t\tdelete row.modules.group;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.arrowElement = false;\r\n\t\tthis.elementContents = false;\r\n\t}\r\n\r\n\tcreateElements(){\r\n\t\tvar arrow = document.createElement(\"div\");\r\n\t\tarrow.classList.add(\"tabulator-arrow\");\r\n\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.classList.add(\"tabulator-row\");\r\n\t\tthis.element.classList.add(\"tabulator-group\");\r\n\t\tthis.element.classList.add(\"tabulator-group-level-\" + this.level);\r\n\t\tthis.element.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\tthis.arrowElement = document.createElement(\"div\");\r\n\t\tthis.arrowElement.classList.add(\"tabulator-group-toggle\");\r\n\t\tthis.arrowElement.appendChild(arrow);\r\n\r\n\t\t//setup movable rows\r\n\t\tif(this.groupManager.table.options.movableRows !== false && this.groupManager.table.modExists(\"moveRow\")){\r\n\t\t\tthis.groupManager.table.modules.moveRow.initializeGroupHeader(this);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateValueGroups(){\r\n\t\tvar level = this.level + 1;\r\n\t\tif(this.groupManager.allowedValues && this.groupManager.allowedValues[level]){\r\n\t\t\tthis.groupManager.allowedValues[level].forEach((value) => {\r\n\t\t\t\tthis._createGroup(value, level);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\taddBindings(){\r\n\t\tvar dblTap,\ttapHold, tap, toggleElement;\r\n\r\n\t\tif ((this.groupManager.table.options.groupContextMenu || this.groupManager.table.options.groupClickMenu) && this.groupManager.table.modExists(\"menu\")){\r\n\t\t\tthis.groupManager.table.modules.menu.initializeGroup.call(this.groupManager.table.modules.menu, this);\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupTap){\r\n\t\t\ttap = false;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\ttap = true;\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(tap){\r\n\t\t\t\t\tthis.groupManager.table.options.groupTap(e, this.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttap = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupDblTap){\r\n\t\t\tdblTap = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tif(dblTap){\r\n\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\tdblTap = null;\r\n\r\n\t\t\t\t\tthis.groupManager.table.options.groupDblTap(e, this.getComponent());\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tdblTap = setTimeout(() => {\r\n\t\t\t\t\t\tclearTimeout(dblTap);\r\n\t\t\t\t\t\tdblTap = null;\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.groupManager.table.options.groupTapHold){\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tthis.element.addEventListener(\"touchstart\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\r\n\t\t\t\ttapHold = setTimeout(() => {\r\n\t\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\t\ttapHold = null;\r\n\t\t\t\t\ttap = false;\r\n\t\t\t\t\tthis.groupManager.table.options.groupTapHold(e, this.getComponent());\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t}, {passive: true});\r\n\r\n\t\t\tthis.element.addEventListener(\"touchend\", (e) => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.groupManager.table.options.groupToggleElement){\r\n\t\t\ttoggleElement = this.groupManager.table.options.groupToggleElement == \"arrow\" ? this.arrowElement : this.element;\r\n\r\n\t\t\ttoggleElement.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\tthis.toggleVisibility();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_createGroup(groupID, level){\r\n\t\tvar groupKey = level + \"_\" + groupID;\r\n\t\tvar group = new Group(this.groupManager, this, level, groupID,  this.groupManager.groupIDLookups[level].field, this.groupManager.headerGenerator[level] || this.groupManager.headerGenerator[0], this.old ? this.old.groups[groupKey] : false);\r\n\r\n\t\tthis.groups[groupKey] = group;\r\n\t\tthis.groupList.push(group);\r\n\t}\r\n\r\n\t_addRowToGroup(row){\r\n\r\n\t\tvar level = this.level + 1;\r\n\r\n\t\tif(this.hasSubGroups){\r\n\t\t\tvar groupID = this.groupManager.groupIDLookups[level].func(row.getData()),\r\n\t\t\tgroupKey = level + \"_\" + groupID;\r\n\r\n\t\t\tif(this.groupManager.allowedValues && this.groupManager.allowedValues[level]){\r\n\t\t\t\tif(this.groups[groupKey]){\r\n\t\t\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(!this.groups[groupKey]){\r\n\t\t\t\t\tthis._createGroup(groupID, level);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_addRow(row){\r\n\t\tthis.rows.push(row);\r\n\t\trow.modules.group = this;\r\n\t}\r\n\r\n\tinsertRow(row, to, after){\r\n\t\tvar data = this.conformRowData({});\r\n\r\n\t\trow.updateData(data);\r\n\r\n\t\tvar toIndex = this.rows.indexOf(to);\r\n\r\n\t\tif(toIndex > -1){\r\n\t\t\tif(after){\r\n\t\t\t\tthis.rows.splice(toIndex+1, 0, row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.splice(toIndex, 0, row);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(after){\r\n\t\t\t\tthis.rows.push(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.unshift(row);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trow.modules.group = this;\r\n\r\n\t\tthis.generateGroupHeaderContents();\r\n\r\n\t\tif(this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\tthis.groupManager.table.modules.columnCalcs.recalcGroup(this);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.updateGroupRows(true);\r\n\t}\r\n\r\n\tscrollHeader(left){\r\n\t\tthis.arrowElement.style.marginLeft = left;\r\n\r\n\t\tthis.groupList.forEach(function(child){\r\n\t\t\tchild.scrollHeader(left);\r\n\t\t});\r\n\t}\r\n\r\n\tgetRowIndex(row){}\r\n\r\n\t//update row data to match grouping contraints\r\n\tconformRowData(data){\r\n\t\tif(this.field){\r\n\t\t\tdata[this.field] = this.key;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Data Conforming Error - Cannot conform row data to match new group as groupBy is a function\");\r\n\t\t}\r\n\r\n\t\tif(this.parent){\r\n\t\t\tdata = this.parent.conformRowData(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tremoveRow(row){\r\n\t\tvar index = this.rows.indexOf(row);\r\n\t\tvar el = row.getElement();\r\n\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.rows.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif(!this.groupManager.table.options.groupValues && !this.rows.length){\r\n\t\t\tif(this.parent){\r\n\t\t\t\tthis.parent.removeGroup(this);\r\n\t\t\t}else{\r\n\t\t\t\tthis.groupManager.removeGroup(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}else{\r\n\r\n\t\t\tif(el.parentNode){\r\n\t\t\t\tel.parentNode.removeChild(el);\r\n\t\t\t}\r\n\r\n\t\t\tthis.generateGroupHeaderContents();\r\n\t\t\t\r\n\t\t\tif(this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\t\t\t\tthis.groupManager.table.modules.columnCalcs.recalcGroup(this);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tremoveGroup(group){\r\n\t\tvar groupKey = group.level + \"_\" + group.key,\r\n\t\tindex;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tdelete this.groups[groupKey];\r\n\r\n\t\t\tindex = this.groupList.indexOf(group);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.groupList.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.groupList.length){\r\n\t\t\t\tif(this.parent){\r\n\t\t\t\t\tthis.parent.removeGroup(this);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.groupManager.removeGroup(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetHeadersAndRows(noCalc){\r\n\t\tvar output = [];\r\n\r\n\t\toutput.push(this);\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(this.visible){\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\t\toutput = output.concat(group.getHeadersAndRows(noCalc));\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tif(!noCalc && this.groupManager.table.options.columnCalcs != \"table\" && this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasTopCalcs()){\r\n\t\t\t\t\tif(this.calcs.top){\r\n\t\t\t\t\t\tthis.calcs.top.detachElement();\r\n\t\t\t\t\t\tthis.calcs.top.deleteCells();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\r\n\t\t\t\t\toutput.push(this.calcs.top);\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput = output.concat(this.rows);\r\n\r\n\t\t\t\tif(!noCalc && this.groupManager.table.options.columnCalcs != \"table\" &&  this.groupManager.table.modExists(\"columnCalcs\") && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()){\r\n\t\t\t\t\tif(this.calcs.bottom){\r\n\t\t\t\t\t\tthis.calcs.bottom.detachElement();\r\n\t\t\t\t\t\tthis.calcs.bottom.deleteCells();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\r\n\t\t\t\t\toutput.push(this.calcs.bottom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!this.groupList.length && this.groupManager.table.options.columnCalcs != \"table\"){\r\n\r\n\t\t\t\tif(this.groupManager.table.modExists(\"columnCalcs\")){\r\n\r\n\t\t\t\t\tif(!noCalc && this.groupManager.table.modules.columnCalcs.hasTopCalcs()){\r\n\t\t\t\t\t\tif(this.calcs.top){\r\n\t\t\t\t\t\t\tthis.calcs.top.detachElement();\r\n\t\t\t\t\t\t\tthis.calcs.top.deleteCells();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.groupManager.table.options.groupClosedShowCalcs){\r\n\t\t\t\t\t\t\tthis.calcs.top = this.groupManager.table.modules.columnCalcs.generateTopRow(this.rows);\r\n\t\t\t\t\t\t\toutput.push(this.calcs.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!noCalc && this.groupManager.table.modules.columnCalcs.hasBottomCalcs()){\r\n\t\t\t\t\t\tif(this.calcs.bottom){\r\n\t\t\t\t\t\t\tthis.calcs.bottom.detachElement();\r\n\t\t\t\t\t\t\tthis.calcs.bottom.deleteCells();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.groupManager.table.options.groupClosedShowCalcs){\r\n\t\t\t\t\t\t\tthis.calcs.bottom = this.groupManager.table.modules.columnCalcs.generateBottomRow(this.rows);\r\n\t\t\t\t\t\t\toutput.push(this.calcs.bottom);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetData(visible, transform){\r\n\t\tvar output = [];\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(!visible || (visible && this.visible)){\r\n\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\toutput.push(row.getData(transform || \"data\"));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetRowCount(){\r\n\t\tvar count = 0;\r\n\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\tcount += group.getRowCount();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcount = this.rows.length;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\ttoggleVisibility(){\r\n\t\tif(this.visible){\r\n\t\t\tthis.hide();\r\n\t\t}else{\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t}\r\n\r\n\thide(){\r\n\t\tthis.visible = false;\r\n\r\n\t\tif(this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination){\r\n\r\n\t\t\tthis.element.classList.remove(\"tabulator-group-visible\");\r\n\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach((group) => {\r\n\r\n\t\t\t\t\tvar rows = group.getHeadersAndRows();\r\n\r\n\t\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\t\trow.detachElement();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\r\n\r\n\t\t\tthis.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\r\n\r\n\t\t}else{\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), false);\r\n\t}\r\n\r\n\tshow(){\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this.groupManager.table.rowManager.getRenderMode() == \"classic\" && !this.groupManager.table.options.pagination){\r\n\r\n\t\t\tthis.element.classList.add(\"tabulator-group-visible\");\r\n\r\n\t\t\tvar prev = this.generateElement();\r\n\r\n\t\t\tif(this.groupList.length){\r\n\t\t\t\tthis.groupList.forEach((group) => {\r\n\t\t\t\t\tvar rows = group.getHeadersAndRows();\r\n\r\n\t\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\t\tprev.parentNode.insertBefore(rowEl, prev.nextSibling);\r\n\t\t\t\t\t\trow.initialize();\r\n\t\t\t\t\t\tprev = rowEl;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.rows.forEach((row) => {\r\n\t\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\t\tprev.parentNode.insertBefore(rowEl, prev.nextSibling);\r\n\t\t\t\t\trow.initialize();\r\n\t\t\t\t\tprev = rowEl;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.groupManager.table.rowManager.setDisplayRows(this.groupManager.updateGroupRows(), this.groupManager.getDisplayIndex());\r\n\r\n\t\t\tthis.groupManager.table.rowManager.checkClassicModeGroupHeaderWidth();\r\n\t\t}else{\r\n\t\t\tthis.groupManager.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis.groupManager.table.externalEvents.dispatch(\"groupVisibilityChanged\", this.getComponent(), true);\r\n\t}\r\n\r\n\t_visSet(){\r\n\t\tvar data = [];\r\n\r\n\t\tif(typeof this.visible == \"function\"){\r\n\r\n\t\t\tthis.rows.forEach(function(row){\r\n\t\t\t\tdata.push(row.getData());\r\n\t\t\t});\r\n\r\n\t\t\tthis.visible = this.visible(this.key, this.getRowCount(), data, this.getComponent());\r\n\t\t}\r\n\t}\r\n\r\n\tgetRowGroup(row){\r\n\t\tvar match = false;\r\n\t\tif(this.groupList.length){\r\n\t\t\tthis.groupList.forEach(function(group){\r\n\t\t\t\tvar result = group.getRowGroup(row);\r\n\r\n\t\t\t\tif(result){\r\n\t\t\t\t\tmatch = result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(this.rows.find(function(item){\r\n\t\t\t\treturn item === row;\r\n\t\t\t})){\r\n\t\t\t\tmatch = this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tgetSubGroups(component){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.groupList.forEach(function(child){\r\n\t\t\toutput.push(component ? child.getComponent() : child);\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetRows(compoment){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\toutput.push(compoment ? row.getComponent() : row);\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgenerateGroupHeaderContents(){\r\n\t\tvar data = [];\r\n\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\tdata.push(row.getData());\r\n\t\t});\r\n\r\n\t\tthis.elementContents = this.generator(this.key, this.getRowCount(), data, this.getComponent());\r\n\r\n\t\twhile(this.element.firstChild) this.element.removeChild(this.element.firstChild);\r\n\r\n\t\tif(typeof this.elementContents === \"string\"){\r\n\t\t\tthis.element.innerHTML = this.elementContents;\r\n\t\t}else{\r\n\t\t\tthis.element.appendChild(this.elementContents);\r\n\t\t}\r\n\r\n\t\tthis.element.insertBefore(this.arrowElement, this.element.firstChild);\r\n\t}\r\n\r\n\tgetPath(path = []) {\r\n\t\tpath.unshift(this.key);\r\n\t\tif(this.parent) {\r\n\t\t\tthis.parent.getPath(path);\r\n\t\t}\r\n\t\treturn path;\r\n\t}\r\n\r\n\t////////////// Standard Row Functions //////////////\r\n\r\n\tgetElement(){\r\n\t\treturn this.elementContents ? this.element : this.generateElement();\r\n\t}\r\n\r\n\tgenerateElement(){\r\n\t\tthis.addBindings = false;\r\n\r\n\t\tthis._visSet();\r\n\r\n\t\tif(this.visible){\r\n\t\t\tthis.element.classList.add(\"tabulator-group-visible\");\r\n\t\t}else{\r\n\t\t\tthis.element.classList.remove(\"tabulator-group-visible\");\r\n\t\t}\r\n\r\n\t\tfor(var i = 0; i < this.element.childNodes.length; ++i){\r\n\t\t\tthis.element.childNodes[i].parentNode.removeChild(this.element.childNodes[i]);\r\n\t\t}\r\n\r\n\t\tthis.generateGroupHeaderContents();\r\n\r\n\t\t// this.addBindings();\r\n\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tdetachElement(){\r\n\t\tif (this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t//normalize the height of elements in the row\r\n\tnormalizeHeight(){\r\n\t\tthis.setHeight(this.element.clientHeight);\r\n\t}\r\n\r\n\tinitialize(force){\r\n\t\tif(!this.initialized || force){\r\n\t\t\tthis.normalizeHeight();\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\treinitialize(){\r\n\t\tthis.initialized = false;\r\n\t\tthis.height = 0;\r\n\r\n\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\tthis.initialize(true);\r\n\t\t}\r\n\t}\r\n\r\n\tsetHeight(height){\r\n\t\tif(this.height != height){\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.outerHeight = this.element.offsetHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//return rows outer height\r\n\tgetHeight(){\r\n\t\treturn this.outerHeight;\r\n\t}\r\n\r\n\tgetGroup(){\r\n\t\treturn this;\r\n\t}\r\n\r\n\treinitializeHeight(){}\r\n\r\n\tcalcHeight(){}\r\n\r\n\tsetCellHeight(){}\r\n\r\n\tclearCellHeight(){}\r\n\r\n\tdeinitializeHeight(){}\r\n\r\n\t//////////////// Object Generation /////////////////\r\n\tgetComponent(){\r\n\t\tif(!this.component){\r\n\t\t\tthis.component = new GroupComponent(this);\r\n\t\t}\r\n\r\n\t\treturn this.component;\r\n\t}\r\n}\r\n\r\nexport default Group;","import Module from '../../core/Module.js';\r\n\r\nimport GroupComponent from './GroupComponent.js';\r\nimport Group from './Group.js';\r\n\r\nclass GroupRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.groupIDLookups = false; //enable table grouping and set field to group by\r\n\t\tthis.startOpen = [function(){return false;}]; //starting state of group\r\n\t\tthis.headerGenerator = [function(){return \"\";}];\r\n\t\tthis.groupList = []; //ordered list of groups\r\n\t\tthis.allowedValues = false;\r\n\t\tthis.groups = {}; //hold row groups\r\n\t\tthis.displayIndex = 0; //index in display pipeline\r\n\r\n\t\tthis.displayHandler = this.getRows.bind(this);\r\n\r\n\t\t//register table options\r\n\t\tthis.registerTableOption(\"groupBy\", false); //enable table grouping and set field to group by\r\n\t\tthis.registerTableOption(\"groupStartOpen\", true); //starting state of group\r\n\t\tthis.registerTableOption(\"groupValues\", false);\r\n\t\tthis.registerTableOption(\"groupUpdateOnCellEdit\", false);\r\n\t\tthis.registerTableOption(\"groupHeader\", false); //header generation function\r\n\t\tthis.registerTableOption(\"groupHeaderPrint\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderClipboard\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderHtmlOutput\", null);\r\n\t\tthis.registerTableOption(\"groupHeaderDownload\", null);\r\n\t\tthis.registerTableOption(\"groupToggleElement\", \"arrow\");\r\n\t\tthis.registerTableOption(\"groupClosedShowCalcs\", false);\r\n\r\n\t\t//register table functions\r\n\t\tthis.registerTableFunction(\"setGroupBy\", this.setGroupBy.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupValues\", this.setGroupValues.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupStartOpen\", this.setGroupStartOpen.bind(this));\r\n\t\tthis.registerTableFunction(\"setGroupHeader\", this.setGroupHeader.bind(this));\r\n\t\tthis.registerTableFunction(\"getGroups\", this.userGetGroups.bind(this));\r\n\t\tthis.registerTableFunction(\"getGroupedData\", this.userGetGroupedData.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"getGroup\", this.rowGetGroup.bind(this));\r\n\t}\r\n\r\n\t//initialize group configuration\r\n\tinitialize(){\r\n\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\tthis.configureGroupSetup();\r\n\r\n\t\t\tif(this.table.options.groupUpdateOnCellEdit){\r\n\t\t\t\tthis.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\r\n\t\t\t\tthis.subscribe(\"row-data-changed\", this.reassignRowToGroup.bind(this), 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"row-deleting\", this.rowDeleting.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHeaders.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.wipe.bind(this));\r\n\t\t\tthis.subscribe(\"rows-added\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"row-moving\", this.rowMoving.bind(this));\r\n\t\t\tthis.subscribe(\"row-adding-index\", this.rowAddingIndex.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"rows-sample\", this.rowSample.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"render-virtual-fill\", this.virtualRenderFill.bind(this));\r\n\r\n\t\t\tthis.registerDisplayHandler(this.displayHandler, 20);\r\n\r\n\t\t\tthis.initialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tconfigureGroupSetup(){\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tvar groupBy = this.table.options.groupBy,\r\n\t\t\tstartOpen = this.table.options.groupStartOpen,\r\n\t\t\tgroupHeader = this.table.options.groupHeader;\r\n\r\n\t\t\tthis.allowedValues = this.table.options.groupValues;\r\n\r\n\t\t\tif(Array.isArray(groupBy) && Array.isArray(groupHeader) && groupBy.length > groupHeader.length){\r\n\t\t\t\tconsole.warn(\"Error creating group headers, groupHeader array is shorter than groupBy array\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.headerGenerator = [function(){return \"\";}];\r\n\t\t\tthis.startOpen = [function(){return false;}]; //starting state of group\r\n\r\n\t\t\tthis.langBind(\"groups|item\", (langValue, lang) => {\r\n\t\t\t\tthis.headerGenerator[0] = (value, count, data) => { //header layout function\r\n\t\t\t\t\treturn (typeof value === \"undefined\" ? \"\" : value) + \"<span>(\" + count + \" \" + ((count === 1) ? langValue : lang.groups.items) + \")</span>\";\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tthis.groupIDLookups = [];\r\n\r\n\t\t\tif(Array.isArray(groupBy) || groupBy){\r\n\t\t\t\tif(this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"table\" && this.table.options.columnCalcs != \"both\"){\r\n\t\t\t\t\tthis.table.modules.columnCalcs.removeCalcs();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.modExists(\"columnCalcs\") && this.table.options.columnCalcs != \"group\"){\r\n\r\n\t\t\t\t\tvar cols = this.table.columnManager.getRealColumns();\r\n\r\n\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\tif(col.definition.topCalc){\r\n\t\t\t\t\t\t\tthis.table.modules.columnCalcs.initializeTopRow();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(col.definition.bottomCalc){\r\n\t\t\t\t\t\t\tthis.table.modules.columnCalcs.initializeBottomRow();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!Array.isArray(groupBy)){\r\n\t\t\t\tgroupBy = [groupBy];\r\n\t\t\t}\r\n\r\n\t\t\tgroupBy.forEach((group, i) => {\r\n\t\t\t\tvar lookupFunc, column;\r\n\r\n\t\t\t\tif(typeof group == \"function\"){\r\n\t\t\t\t\tlookupFunc = group;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolumn = this.table.columnManager.getColumnByField(group);\r\n\r\n\t\t\t\t\tif(column){\r\n\t\t\t\t\t\tlookupFunc = function(data){\r\n\t\t\t\t\t\t\treturn column.getFieldValue(data);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlookupFunc = function(data){\r\n\t\t\t\t\t\t\treturn data[group];\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.groupIDLookups.push({\r\n\t\t\t\t\tfield: typeof group === \"function\" ? false : group,\r\n\t\t\t\t\tfunc:lookupFunc,\r\n\t\t\t\t\tvalues:this.allowedValues ? this.allowedValues[i] : false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif(startOpen){\r\n\t\t\t\tif(!Array.isArray(startOpen)){\r\n\t\t\t\t\tstartOpen = [startOpen];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstartOpen.forEach((level) => {\r\n\t\t\t\t\tlevel = typeof level == \"function\" ? level : function(){return true;};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.startOpen = startOpen;\r\n\t\t\t}\r\n\r\n\t\t\tif(groupHeader){\r\n\t\t\t\tthis.headerGenerator = Array.isArray(groupHeader) ? groupHeader : [groupHeader];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowSample(rows, prevValue){\r\n\t\tvar group = this.getGroups(false)[0];\r\n\r\n\t\tprevValue.push(group.getRows(false)[0]);\r\n\r\n\t\treturn prevValue;\r\n\t}\r\n\r\n\tvirtualRenderFill(){\r\n\t\tvar el = this.table.rowManager.tableElement;\r\n\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\r\n\t\trows = rows.filter((row) => {\r\n\t\t\treturn row.type !== \"group\";\r\n\t\t});\r\n\r\n\t\tel.style.minWidth = !rows.length ? this.table.columnManager.getWidth() + \"px\" : \"\";\r\n\r\n\t\t// if(this.table.options.groupBy){\r\n\t\t// \tif(this.layoutMode() != \"fitDataFill\" && rowsCount == this.table.modules.groupRows.countGroups()){\r\n\t\t// \t\tel.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\trowAddingIndex(row, index, top){\r\n\t\tthis.assignRowToGroup(row);\r\n\r\n\t\tvar groupRows = row.modules.group.rows;\r\n\r\n\t\tif(groupRows.length > 1){\r\n\t\t\tif(!index || (index && groupRows.indexOf(index) == -1)){\r\n\t\t\t\tif(top){\r\n\t\t\t\t\tif(groupRows[0] !== row){\r\n\t\t\t\t\t\tindex = groupRows[0];\r\n\t\t\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(groupRows[groupRows.length -1] !== row){\r\n\t\t\t\t\t\tindex = groupRows[groupRows.length -1];\r\n\t\t\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.rowManager.moveRowInArray(row.modules.group.rows, row, index, !top);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\ttrackChanges(){\r\n\t\tthis.dispatch(\"group-changed\");\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tsetGroupBy(groups){\r\n\t\tthis.table.options.groupBy = groups;\r\n\t\tif(!this.initialized){\r\n\t\t\tthis.initialize();\r\n\t\t}else{\r\n\t\t\tthis.configureGroupSetup();\r\n\t\t}\r\n\r\n\t\tthis.refreshData();\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\tsetGroupValues(groupValues){\r\n\t\tthis.table.options.groupValues = groupValues;\r\n\t\tthis.configureGroupSetup();\r\n\t\tthis.refreshData();\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\tsetGroupStartOpen(values){\r\n\t\tthis.table.options.groupStartOpen = values;\r\n\t\tthis.configureGroupSetup();\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.refreshData();\r\n\r\n\t\t\tthis.trackChanges();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Grouping Update - cant refresh view, no groups have been set\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetGroupHeader(values){\r\n\t\tthis.table.options.groupHeader = values;\r\n\t\tthis.configureGroupSetup();\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\t\t\tthis.refreshData();\r\n\r\n\t\t\tthis.trackChanges();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Grouping Update - cant refresh view, no groups have been set\");\r\n\t\t}\r\n\t}\r\n\r\n\tuserGetGroups(values){\r\n\t\treturn this.getGroups(true);\r\n\t}\r\n\r\n\t// get grouped table data in the same format as getData()\r\n\tuserGetGroupedData(){\r\n\t\treturn this.table.options.groupBy ?\r\n\t\tthis.getGroupedData() : this.getData()\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////////\r\n\t///////// Component Functions /////////\r\n\t///////////////////////////////////////\r\n\r\n\trowGetGroup(row){\r\n\t\treturn row.modules.group ? row.modules.group.getComponent() : false;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\trowMoving(from, to, after){\r\n\t\tif(!after && to instanceof Group){\r\n\t\t\tto = this.table.rowManager.prevDisplayRow(from) || to;\r\n\t\t}\r\n\r\n\t\tvar toGroup = to instanceof Group ? to : to.modules.group;\r\n\t\tvar fromGroup = from instanceof Group ? from : from.modules.group;\r\n\r\n\t\tif(toGroup === fromGroup){\r\n\t\t\tthis.table.rowManager.moveRowInArray(toGroup.rows, from, to, after);\r\n\t\t}else{\r\n\t\t\tif(fromGroup){\r\n\t\t\t\tfromGroup.removeRow(from);\r\n\t\t\t}\r\n\r\n\t\t\ttoGroup.insertRow(from, to, after);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trowDeleting(row){\r\n\t\t//remove from group\r\n\t\tif(row.modules.group){\r\n\t\t\trow.modules.group.removeRow(row);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trowsUpdated(row){\r\n\t\tthis.updateGroupRows(true);\r\n\t}\r\n\r\n\tcellUpdated(cell){\r\n\t\tthis.reassignRowToGroup(cell.row);\r\n\t}\r\n\r\n\r\n\tsetDisplayIndex(index){\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex(){\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\t//return appropriate rows with group headers\r\n\tgetRows(rows){\r\n\t\tif(this.table.options.groupBy && this.groupIDLookups.length){\r\n\r\n\t\t\tthis.dispatchExternal(\"dataGrouping\");\r\n\r\n\t\t\tthis.generateGroups(rows);\r\n\r\n\t\t\tif(this.subscribedExternal(\"dataGrouped\")){\r\n\t\t\t\tthis.dispatchExternal(\"dataGrouped\", this.getGroups(true));\r\n\t\t\t}\r\n\r\n\t\t\treturn this.updateGroupRows();\r\n\r\n\t\t}else{\r\n\t\t\treturn rows.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\tgetGroups(component){\r\n\t\tvar groupComponents = [];\r\n\r\n\t\tthis.groupList.forEach(function(group){\r\n\t\t\tgroupComponents.push(component ? group.getComponent() : group);\r\n\t\t});\r\n\r\n\t\treturn groupComponents;\r\n\t}\r\n\r\n\tgetChildGroups(group){\r\n\t\tvar groupComponents = [];\r\n\r\n\t\tif(!group){\r\n\t\t\tgroup = this;\r\n\t\t}\r\n\r\n\t\tgroup.groupList.forEach((child) => {\r\n\t\t\tif(child.groupList.length){\r\n\t\t\t\tgroupComponents = groupComponents.concat(this.getChildGroups(child));\r\n\t\t\t}else{\r\n\t\t\t\tgroupComponents.push(child);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groupComponents;\r\n\t}\r\n\r\n\twipe(){\r\n\t\tthis.groupList.forEach(function(group){\r\n\t\t\tgroup.wipe();\r\n\t\t});\r\n\t}\r\n\r\n\tpullGroupListData(groupList) {\r\n\t\tvar groupListData = [];\r\n\r\n\t\tgroupList.forEach((group) => {\r\n\t\t\tvar groupHeader = {};\r\n\t\t\tgroupHeader.level = 0;\r\n\t\t\tgroupHeader.rowCount = 0;\r\n\t\t\tgroupHeader.headerContent = \"\";\r\n\t\t\tvar childData = [];\r\n\r\n\t\t\tif (group.hasSubGroups) {\r\n\t\t\t\tchildData = this.pullGroupListData(group.groupList);\r\n\r\n\t\t\t\tgroupHeader.level = group.level;\r\n\t\t\t\tgroupHeader.rowCount = childData.length - group.groupList.length; // data length minus number of sub-headers\r\n\t\t\t\tgroupHeader.headerContent = group.generator(group.key, groupHeader.rowCount, group.rows, group);\r\n\r\n\t\t\t\tgroupListData.push(groupHeader);\r\n\t\t\t\tgroupListData = groupListData.concat(childData);\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tgroupHeader.level = group.level;\r\n\t\t\t\tgroupHeader.headerContent = group.generator(group.key, group.rows.length, group.rows, group);\r\n\t\t\t\tgroupHeader.rowCount = group.getRows().length;\r\n\r\n\t\t\t\tgroupListData.push(groupHeader);\r\n\r\n\t\t\t\tgroup.getRows().forEach((row) => {\r\n\t\t\t\t\tgroupListData.push(row.getData(\"data\"));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groupListData\r\n\t}\r\n\r\n\tgetGroupedData(){\r\n\r\n\t\treturn this.pullGroupListData(this.groupList);\r\n\t}\r\n\r\n\tgetRowGroup(row){\r\n\t\tvar match = false;\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\tvar result = group.getRowGroup(row);\r\n\r\n\t\t\tif(result){\r\n\t\t\t\tmatch = result;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn match;\r\n\t}\r\n\r\n\tcountGroups(){\r\n\t\treturn this.groupList.length;\r\n\t}\r\n\r\n\tgenerateGroups(rows){\r\n\t\tvar oldGroups = this.groups;\r\n\r\n\t\tthis.groups = {};\r\n\t\tthis.groupList = [];\r\n\r\n\t\tif(this.allowedValues && this.allowedValues[0]){\r\n\t\t\tthis.allowedValues[0].forEach((value) => {\r\n\t\t\t\tthis.createGroup(value, 0, oldGroups);\r\n\t\t\t});\r\n\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tthis.assignRowToExistingGroup(row, oldGroups);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tthis.assignRowToGroup(row, oldGroups);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcreateGroup(groupID, level, oldGroups){\r\n\t\tvar groupKey = level + \"_\" + groupID,\r\n\t\tgroup;\r\n\r\n\t\toldGroups = oldGroups || [];\r\n\r\n\t\tgroup = new Group(this, false, level, groupID, this.groupIDLookups[0].field, this.headerGenerator[0], oldGroups[groupKey]);\r\n\r\n\t\tthis.groups[groupKey] = group;\r\n\t\tthis.groupList.push(group);\r\n\t}\r\n\r\n\tassignRowToExistingGroup(row, oldGroups){\r\n\t\tvar groupID = this.groupIDLookups[0].func(row.getData()),\r\n\t\tgroupKey = \"0_\" + groupID;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tthis.groups[groupKey].addRow(row);\r\n\t\t}\r\n\t}\r\n\r\n\tassignRowToGroup(row, oldGroups){\r\n\t\tvar groupID = this.groupIDLookups[0].func(row.getData()),\r\n\t\tnewGroupNeeded = !this.groups[\"0_\" + groupID];\r\n\r\n\t\tif(newGroupNeeded){\r\n\t\t\tthis.createGroup(groupID, 0, oldGroups);\r\n\t\t}\r\n\r\n\t\tthis.groups[\"0_\" + groupID].addRow(row);\r\n\r\n\t\treturn !newGroupNeeded;\r\n\t}\r\n\r\n\treassignRowToGroup(row){\r\n\t\tif(row.type === \"row\"){\r\n\t\t\tvar oldRowGroup = row.modules.group,\r\n\t\t\toldGroupPath = oldRowGroup.getPath(),\r\n\t\t\tnewGroupPath = this.getExpectedPath(row),\r\n\t\t\tsamePath = true;\r\n\r\n\t\t\t// figure out if new group path is the same as old group path\r\n\t\t\tvar samePath = (oldGroupPath.length == newGroupPath.length) && oldGroupPath.every((element, index) => {\r\n\t\t\t\treturn element === newGroupPath[index];\r\n\t\t\t});\r\n\r\n\t\t\t// refresh if they new path and old path aren't the same (aka the row's groupings have changed)\r\n\t\t\tif(!samePath) {\r\n\t\t\t\toldRowGroup.removeRow(row);\r\n\t\t\t\tthis.assignRowToGroup(row, this.groups);\r\n\t\t\t\tthis.refreshData(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetExpectedPath(row) {\r\n\t\tvar groupPath = [], rowData = row.getData();\r\n\r\n\t\tthis.groupIDLookups.forEach((groupId) => {\r\n\t\t\tgroupPath.push(groupId.func(rowData));\r\n\t\t});\r\n\r\n\t\treturn groupPath;\r\n\t}\r\n\r\n\tupdateGroupRows(force){\r\n\t\tvar output = [],\r\n\t\toldRowCount;\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\toutput = output.concat(group.getHeadersAndRows());\r\n\t\t});\r\n\r\n\t\tif(force){\r\n\t\t\tthis.refreshData(true, this.displayHandler);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tscrollHeaders(left){\r\n\t\tif(this.table.options.renderHorizontal === \"virtual\"){\r\n\t\t\tleft -= this.table.columnManager.renderer.vDomPadLeft;\r\n\t\t}\r\n\r\n\t\tleft = left + \"px\";\r\n\r\n\t\tthis.groupList.forEach((group) => {\r\n\t\t\tgroup.scrollHeader(left);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveGroup(group){\r\n\t\tvar groupKey = group.level + \"_\" + group.key,\r\n\t\tindex;\r\n\r\n\t\tif(this.groups[groupKey]){\r\n\t\t\tdelete this.groups[groupKey];\r\n\r\n\t\t\tindex = this.groupList.indexOf(group);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.groupList.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nGroupRows.moduleName = \"groupRows\";\r\n\r\nexport default GroupRows;","export default {\r\n\tcellEdit: function(action){\r\n\t\taction.component.setValueProcessData(action.data.oldValue);\r\n\t\taction.component.cellRendered();\r\n\t},\r\n\r\n\trowAdd: function(action){\r\n\t\taction.component.deleteActual();\r\n\t},\r\n\r\n\trowDelete: function(action){\r\n\t\tvar newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tthis.table.modules.groupRows.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis._rebindRow(action.component, newRow);\r\n\t},\r\n\r\n\trowMove: function(action){\r\n\t\tthis.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posFrom], !action.data.after);\r\n\t\tthis.table.rowManager.redraw();\r\n\t},\r\n};","export default {\r\n\tcellEdit: function(action){\r\n\t\taction.component.setValueProcessData(action.data.newValue);\r\n\t\taction.component.cellRendered();\r\n\t},\r\n\r\n\trowAdd: function(action){\r\n\t\tvar newRow = this.table.rowManager.addRowActual(action.data.data, action.data.pos, action.data.index);\r\n\r\n\t\tif(this.table.options.groupBy && this.table.modExists(\"groupRows\")){\r\n\t\t\tthis.table.modules.groupRows.updateGroupRows(true);\r\n\t\t}\r\n\r\n\t\tthis._rebindRow(action.component, newRow);\r\n\t},\r\n\r\n\trowDelete:function(action){\r\n\t\taction.component.deleteActual();\r\n\t},\r\n\r\n\trowMove: function(action){\r\n\t\tthis.table.rowManager.moveRowActual(action.component, this.table.rowManager.rows[action.data.posTo], action.data.after);\r\n\t\tthis.table.rowManager.redraw();\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\nimport Row from '../../core/row/Row.js';\r\nimport Cell from '../../core/cell/Cell.js';\r\n\r\nimport defaultUndoers from './defaults/undoers.js';\r\nimport defaultRedoers from './defaults/redoers.js';\r\n\r\nclass History extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.history = [];\r\n\t\tthis.index = -1;\r\n\r\n\t\tthis.registerTableOption(\"history\", false); //enable edit history\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.history){\r\n\t\t\tthis.subscribe(\"cell-value-updated\", this.cellUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"cell-delete\", this.clearComponentHistory.bind(this));\r\n\t\t\tthis.subscribe(\"row-delete\", this.rowDeleted.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.clear.bind(this));\r\n\t\t\tthis.subscribe(\"row-added\", this.rowAdded.bind(this));\r\n\t\t\tthis.subscribe(\"row-move\", this.rowMoved.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"undo\", this.undo.bind(this));\r\n\t\tthis.registerTableFunction(\"redo\", this.redo.bind(this));\r\n\t\tthis.registerTableFunction(\"getHistoryUndoSize\", this.getHistoryUndoSize.bind(this));\r\n\t\tthis.registerTableFunction(\"getHistoryRedoSize\", this.getHistoryRedoSize.bind(this));\r\n\t\tthis.registerTableFunction(\"clearHistory\", this.clear.bind(this));\r\n\t}\r\n\r\n\trowMoved(from, to, after){\r\n\t\tthis.action(\"rowMove\", from, {posFrom:this.table.rowManager.getRowPosition(from), posTo:this.table.rowManager.getRowPosition(to), to:to, after:after});\r\n\t}\r\n\r\n\trowAdded(row, data, pos, index){\r\n\t\tthis.action(\"rowAdd\", row, {data:data, pos:pos, index:index});\r\n\t}\r\n\r\n\trowDeleted(row){\r\n\t\tvar index, rows;\r\n\r\n\t\tif(this.table.options.groupBy){\r\n\r\n\t\t\trows = row.getComponent().getGroup().rows\r\n\t\t\tindex = rows.indexOf(row);\r\n\r\n\t\t\tif(index){\r\n\t\t\t\tindex = rows[index-1];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tindex = row.table.rowManager.getRowIndex(row);\r\n\r\n\t\t\tif(index){\r\n\t\t\t\tindex = row.table.rowManager.rows[index-1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.action(\"rowDelete\", row, {data:row.getData(), pos:!index, index:index});\r\n\t}\r\n\r\n\tcellUpdated(cell){\r\n\t\tthis.action(\"cellEdit\", cell, {oldValue:cell.oldValue, newValue:cell.value});\r\n\t}\r\n\r\n\tclear(){\r\n\t\tthis.history = [];\r\n\t\tthis.index = -1;\r\n\t}\r\n\r\n\taction(type, component, data){\r\n\t\tthis.history = this.history.slice(0, this.index + 1);\r\n\r\n\t\tthis.history.push({\r\n\t\t\ttype:type,\r\n\t\t\tcomponent:component,\r\n\t\t\tdata:data,\r\n\t\t});\r\n\r\n\t\tthis.index ++;\r\n\t}\r\n\r\n\tgetHistoryUndoSize(){\r\n\t\treturn this.index + 1;\r\n\t}\r\n\r\n\tgetHistoryRedoSize(){\r\n\t\treturn this.history.length - (this.index + 1);\r\n\t}\r\n\r\n\tclearComponentHistory(component){\r\n\t\tvar index = this.history.findIndex(function(item){\r\n\t\t\treturn item.component === component;\r\n\t\t});\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.history.splice(index, 1);\r\n\t\t\tif(index <= this.index){\r\n\t\t\t\tthis.index--;\r\n\t\t\t}\r\n\r\n\t\t\tthis.clearComponentHistory(component);\r\n\t\t}\r\n\t}\r\n\r\n\tundo(){\r\n\t\tif(this.index > -1){\r\n\t\t\tlet action = this.history[this.index];\r\n\r\n\t\t\tHistory.undoers[action.type].call(this, action);\r\n\r\n\t\t\tthis.index--;\r\n\r\n\t\t\tthis.dispatchExternal(\"historyUndo\", action.type, action.component.getComponent(), action.data);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"History Undo Error - No more history to undo\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tredo(){\r\n\t\tif(this.history.length-1 > this.index){\r\n\r\n\t\t\tthis.index++;\r\n\r\n\t\t\tlet action = this.history[this.index];\r\n\r\n\t\t\tHistory.redoers[action.type].call(this, action);\r\n\r\n\t\t\tthis.dispatchExternal(\"historyRedo\", action.type, action.component.getComponent(), action.data);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"History Redo Error - No more history to redo\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//rebind rows to new element after deletion\r\n\t_rebindRow(oldRow, newRow){\r\n\t\tthis.history.forEach(function(action){\r\n\t\t\tif(action.component instanceof Row){\r\n\t\t\t\tif(action.component === oldRow){\r\n\t\t\t\t\taction.component = newRow;\r\n\t\t\t\t}\r\n\t\t\t}else if(action.component instanceof Cell){\r\n\t\t\t\tif(action.component.row === oldRow){\r\n\t\t\t\t\tvar field = action.component.column.getField();\r\n\r\n\t\t\t\t\tif(field){\r\n\t\t\t\t\t\taction.component = newRow.getCell(field);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nHistory.moduleName = \"history\";\r\n\r\n//load defaults\r\nHistory.undoers = defaultUndoers;\r\nHistory.redoers = defaultRedoers;\r\n\r\nexport default History;","import Module from '../../core/Module.js';\r\nimport Column from '../../core/column/Column.js';\r\n\r\nclass HtmlTableImport extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.fieldIndex = [];\r\n\t\tthis.hasIndex = false;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.tableElementCheck();\r\n\t}\r\n\r\n\ttableElementCheck(){\r\n\t\tif(this.table.originalElement && this.table.originalElement.tagName === \"TABLE\"){\r\n\t\t\tthis.parseTable();\r\n\t\t}\r\n\t}\r\n\r\n\tparseTable(){\r\n\t\tvar element = this.table.originalElement,\r\n\t\toptions = this.table.options,\r\n\t\tcolumns = options.columns,\r\n\t\theaders = element.getElementsByTagName(\"th\"),\r\n\t\trows = element.getElementsByTagName(\"tbody\")[0],\r\n\t\tdata = [],\r\n\t\tnewTable;\r\n\r\n\t\tthis.hasIndex = false;\r\n\r\n\t\tthis.dispatchExternal(\"htmlImporting\");\r\n\r\n\t\trows = rows ? rows.getElementsByTagName(\"tr\") : [];\r\n\r\n\t\t//check for Tabulator inline options\r\n\t\tthis._extractOptions(element, options);\r\n\r\n\t\tif(headers.length){\r\n\t\t\tthis._extractHeaders(headers, rows);\r\n\t\t}else{\r\n\t\t\tthis._generateBlankHeaders(headers, rows);\r\n\t\t}\r\n\r\n\t\t//iterate through table rows and build data set\r\n\t\tfor(var index = 0; index < rows.length; index++){\r\n\t\t\tvar row = rows[index],\r\n\t\t\tcells = row.getElementsByTagName(\"td\"),\r\n\t\t\titem = {};\r\n\r\n\t\t\t//create index if the dont exist in table\r\n\t\t\tif(!this.hasIndex){\r\n\t\t\t\titem[options.index] = index;\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < cells.length; i++){\r\n\t\t\t\tvar cell = cells[i];\r\n\t\t\t\tif(typeof this.fieldIndex[i] !== \"undefined\"){\r\n\t\t\t\t\titem[this.fieldIndex[i]] = cell.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//add row data to item\r\n\t\t\tdata.push(item);\r\n\t\t}\r\n\r\n\t\toptions.data = data;\r\n\r\n\t\tthis.dispatchExternal(\"htmlImported\");\r\n\t}\r\n\r\n\t//extract tabulator attribute options\r\n\t_extractOptions(element, options, defaultOptions){\r\n\t\tvar attributes = element.attributes;\r\n\t\tvar optionsArr = defaultOptions ? Object.keys(defaultOptions) : Object.keys(options);\r\n\t\tvar optionsList = {};\r\n\r\n\t\toptionsArr.forEach((item) => {\r\n\t\t\toptionsList[item.toLowerCase()] = item;\r\n\t\t});\r\n\r\n\t\tfor(var index in attributes){\r\n\t\t\tvar attrib = attributes[index];\r\n\t\t\tvar name;\r\n\r\n\t\t\tif(attrib && typeof attrib == \"object\" && attrib.name && attrib.name.indexOf(\"tabulator-\") === 0){\r\n\t\t\t\tname = attrib.name.replace(\"tabulator-\", \"\");\r\n\r\n\t\t\t\tif(typeof optionsList[name] !== \"undefined\"){\r\n\t\t\t\t\toptions[optionsList[name]] = this._attribValue(attrib.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//get value of attribute\r\n\t_attribValue(value){\r\n\t\tif(value === \"true\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(value === \"false\"){\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t//find column if it has already been defined\r\n\t_findCol(title){\r\n\t\tvar match = this.table.options.columns.find((column) => {\r\n\t\t\treturn column.title === title;\r\n\t\t});\r\n\r\n\t\treturn match || false;\r\n\t}\r\n\r\n\t//extract column from headers\r\n\t_extractHeaders(headers, rows){\r\n\t\tfor(var index = 0; index < headers.length; index++){\r\n\t\t\tvar header = headers[index],\r\n\t\t\texists = false,\r\n\t\t\tcol = this._findCol(header.textContent),\r\n\t\t\twidth, attributes;\r\n\r\n\t\t\tif(col){\r\n\t\t\t\texists = true;\r\n\t\t\t}else{\r\n\t\t\t\tcol = {title:header.textContent.trim()};\r\n\t\t\t}\r\n\r\n\t\t\tif(!col.field) {\r\n\t\t\t\tcol.field = header.textContent.trim().toLowerCase().replace(\" \", \"_\");\r\n\t\t\t}\r\n\r\n\t\t\twidth = header.getAttribute(\"width\");\r\n\r\n\t\t\tif(width && !col.width)\t{\r\n\t\t\t\tcol.width = width;\r\n\t\t\t}\r\n\r\n\t\t\t//check for Tabulator inline options\r\n\t\t\tthis._extractOptions(header, col, this.table.columnManager.optionsList.registeredDefaults);\r\n\r\n\t\t\tthis.fieldIndex[index] = col.field;\r\n\r\n\t\t\tif(col.field == this.table.options.index){\r\n\t\t\t\tthis.hasIndex = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(!exists){\r\n\t\t\t\tthis.table.options.columns.push(col);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//generate blank headers\r\n\t_generateBlankHeaders(headers, rows){\r\n\t\tfor(var index = 0; index < headers.length; index++){\r\n\t\t\tvar header = headers[index],\r\n\t\t\tcol = {title:\"\", field:\"col\" + index};\r\n\r\n\t\t\tthis.fieldIndex[index] = col.field;\r\n\r\n\t\t\tvar width = header.getAttribute(\"width\");\r\n\r\n\t\t\tif(width){\r\n\t\t\t\tcol.width = width;\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.options.columns.push(col);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nHtmlTableImport.moduleName = \"htmlTableImport\";\r\n\r\nexport default HtmlTableImport;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport Cell from '../../core/cell/Cell';\r\nimport Column from '../../core/column/Column';\r\n\r\nclass Interaction extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.eventMap = {\r\n\t\t\t//row events\r\n\t\t\trowClick:\"row-click\",\r\n\t\t\trowDblClick:\"row-dblclick\",\r\n\t\t\trowContext:\"row-contextmenu\",\r\n\t\t\trowMouseEnter:\"row-mouseenter\",\r\n\t\t\trowMouseLeave:\"row-mouseleave\",\r\n\t\t\trowMouseOver:\"row-mouseover\",\r\n\t\t\trowMouseOut:\"row-mouseout\",\r\n\t\t\trowMouseMove:\"row-mousemove\",\r\n\t\t\trowTap:\"row\",\r\n\t\t\trowDblTap:\"row\",\r\n\t\t\trowTapHold:\"row\",\r\n\r\n\t\t\t//cell events\r\n\t\t\tcellClick:\"cell-click\",\r\n\t\t\tcellDblClick:\"cell-dblclick\",\r\n\t\t\tcellContext:\"cell-contextmenu\",\r\n\t\t\tcellMouseEnter:\"cell-mouseenter\",\r\n\t\t\tcellMouseLeave:\"cell-mouseleave\",\r\n\t\t\tcellMouseOver:\"cell-mouseover\",\r\n\t\t\tcellMouseOut:\"cell-mouseout\",\r\n\t\t\tcellMouseMove:\"cell-mousemove\",\r\n\t\t\tcellTap:\"cell\",\r\n\t\t\tcellDblTap:\"cell\",\r\n\t\t\tcellTapHold:\"cell\",\r\n\r\n\t\t\t//column header events\r\n\t\t\theaderClick:\"column-click\",\r\n\t\t\theaderDblClick:\"column-dblclick\",\r\n\t\t\theaderContext:\"column-contextmenu\",\r\n\t\t\theaderMouseEnter:\"column-mouseenter\",\r\n\t\t\theaderMouseLeave:\"column-mouseleave\",\r\n\t\t\theaderMouseOver:\"column-mouseover\",\r\n\t\t\theaderMouseOut:\"column-mouseout\",\r\n\t\t\theaderMouseMove:\"column-mousemove\",\r\n\t\t\theaderTap:\"column\",\r\n\t\t\theaderDblTap:\"column\",\r\n\t\t\theaderTapHold:\"column\",\r\n\r\n\t\t\t//group header\r\n\t\t\tgroupClick:\"group-click\",\r\n\t\t\tgroupDblClick:\"group-dblclick\",\r\n\t\t\tgroupContext:\"group-contextmenu\",\r\n\t\t\tgroupMouseEnter:\"group-mouseenter\",\r\n\t\t\tgroupMouseLeave:\"group-mouseleave\",\r\n\t\t\tgroupMouseOver:\"group-mouseover\",\r\n\t\t\tgroupMouseOut:\"group-mouseout\",\r\n\t\t\tgroupMouseMove:\"group-mousemove\",\r\n\t\t\tgroupTap:\"group\",\r\n\t\t\tgroupDblTap:\"group\",\r\n\t\t\tgroupTapHold:\"group\",\r\n\t\t}\r\n\r\n\t\tthis.subscribers = {};\r\n\r\n\t\tthis.touchSubscribers = {};\r\n\r\n\t\tthis.columnSubscribers = {};\r\n\r\n\t\tthis.touchWatchers = {\r\n\t\t\trow:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tcell:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t},\r\n\t\t\tcolumn:{\r\n\t\t\t\ttap:null,\r\n\t\t\t\ttapDbl:null,\r\n\t\t\t\ttapHold:null,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.registerColumnOption(\"headerClick\");\r\n\t\tthis.registerColumnOption(\"headerDblClick\");\r\n\t\tthis.registerColumnOption(\"headerContext\");\r\n\t\tthis.registerColumnOption(\"headerMouseEnter\");\r\n\t\tthis.registerColumnOption(\"headerMouseLeave\");\r\n\t\tthis.registerColumnOption(\"headerMouseOver\");\r\n\t\tthis.registerColumnOption(\"headerMouseOut\");\r\n\t\tthis.registerColumnOption(\"headerMouseMove\");\r\n\t\tthis.registerColumnOption(\"headerTap\");\r\n\t\tthis.registerColumnOption(\"headerDblTap\");\r\n\t\tthis.registerColumnOption(\"headerTapHold\");\r\n\r\n\t\tthis.registerColumnOption(\"cellClick\");\r\n\t\tthis.registerColumnOption(\"cellDblClick\");\r\n\t\tthis.registerColumnOption(\"cellContext\");\r\n\t\tthis.registerColumnOption(\"cellMouseEnter\");\r\n\t\tthis.registerColumnOption(\"cellMouseLeave\");\r\n\t\tthis.registerColumnOption(\"cellMouseOver\");\r\n\t\tthis.registerColumnOption(\"cellMouseOut\");\r\n\t\tthis.registerColumnOption(\"cellMouseMove\");\r\n\t\tthis.registerColumnOption(\"cellTap\");\r\n\t\tthis.registerColumnOption(\"cellDblTap\");\r\n\t\tthis.registerColumnOption(\"cellTapHold\");\r\n\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeExternalEvents();\r\n\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this))\r\n\t\tthis.subscribe(\"cell-dblclick\", this.cellContentsSelectionFixer.bind(this))\r\n\t}\r\n\r\n\tcellContentsSelectionFixer(e, cell){\r\n\t\tif(this.table.modExists(\"edit\")){\r\n\t\t\tif (this.table.modules.edit.currentCell === this){\r\n\t\t\t\treturn; //prevent instant selection of editor content\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\ttry{\r\n\t\t\tif (document.selection) { // IE\r\n\t\t\t\tvar range = document.body.createTextRange();\r\n\t\t\t\trange.moveToElementText(this.element);\r\n\t\t\t\trange.select();\r\n\t\t\t} else if (window.getSelection) {\r\n\t\t\t\tvar range = document.createRange();\r\n\t\t\t\trange.selectNode(this.element);\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\twindow.getSelection().addRange(range);\r\n\t\t\t}\r\n\t\t}catch(e){}\r\n\t}\r\n\r\n\tinitializeExternalEvents(){\r\n\t\tfor(let key in this.eventMap){\r\n\t\t\tthis.subscriptionChangeExternal(key, this.subscriptionChanged.bind(this, key))\r\n\t\t}\r\n\t}\r\n\r\n\tsubscriptionChanged(key, added){\r\n\t\tvar index;\r\n\r\n\t\tif(added){\r\n\t\t\tif(!this.subscribers[key]){\r\n\t\t\t\tif(this.eventMap[key].includes(\"-\")){\r\n\t\t\t\t\tthis.subscribers[key] = this.handle.bind(this, key);\r\n\t\t\t\t\tthis.subscribe(this.eventMap[key], this.subscribers[key]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.subscribeTouchEvents(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.eventMap[key].includes(\"-\")){\r\n\t\t\t\tif(this.subscribers[key] && !this.columnSubscribers[key]  && !this.subscribedExternal(key)){\r\n\t\t\t\t\tthis.unsubscribe(this.eventMap[key], this.subscribers[key]);\r\n\t\t\t\t\tdelete this.subscribers[key];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.unsubscribeTouchEvents(key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsubscribeTouchEvents(key){\r\n\t\tvar type = this.eventMap[key];\r\n\r\n\t\tif(!this.touchSubscribers[type + \"-touchstart\"]){\r\n\t\t\tthis.touchSubscribers[type + \"-touchstart\"] = this.handleTouch.bind(this, type, \"start\");\r\n\t\t\tthis.touchSubscribers[type + \"-touchend\"] = this.handleTouch.bind(this, type, \"end\");\r\n\r\n\t\t\tthis.subscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\r\n\t\t\tthis.subscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\r\n\t\t}\r\n\r\n\t\tthis.subscribers[key] = true;\r\n\t}\r\n\r\n\tunsubscribeTouchEvents(key){\r\n\t\tvar notouch = true,\r\n\t\ttype = this.eventMap[key];\r\n\r\n\t\tif(this.subscribers[key] && !this.subscribedExternal(key)){\r\n\t\t\tdelete this.subscribers[key];\r\n\r\n\t\t\tfor(let i in this.eventMap){\r\n\t\t\t\tif(this.eventMap[i] === type){\r\n\t\t\t\t\tif(this.subscribers[i]){\r\n\t\t\t\t\t\tnotouch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(notouch){\r\n\t\t\t\tthis.unsubscribe(type + \"-touchstart\", this.touchSubscribers[type + \"-touchstart\"]);\r\n\t\t\t\tthis.unsubscribe(type + \"-touchend\", this.touchSubscribers[type + \"-touchend\"]);\r\n\r\n\t\t\t\tdelete this.touchSubscribers[type + \"-touchstart\"];\r\n\t\t\t\tdelete this.touchSubscribers[type + \"-touchend\"];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tfor(let key in this.eventMap){\r\n\t\t\tif(def[key]){\r\n\t\t\t\tthis.subscriptionChanged(key, true);\r\n\r\n\t\t\t\tif(!this.columnSubscribers[key]){\r\n\t\t\t\t\tthis.columnSubscribers[key] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.columnSubscribers[key].push(column);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandle(action, e, component){\r\n\t\tthis.dispatchEvent(action, e, component);\r\n\t}\r\n\r\n\thandleTouch(type, action, e, component){\r\n\t\tvar watchers = this.touchWatchers[type];\r\n\r\n\t\tif(type === \"column\"){\r\n\t\t\ttype = \"header\";\r\n\t\t}\r\n\r\n\t\tswitch(action){\r\n\t\t\tcase \"start\":\r\n\t\t\twatchers.tap = true;\r\n\r\n\t\t\tclearTimeout(watchers.tapHold);\r\n\r\n\t\t\twatchers.tapHold = setTimeout(() => {\r\n\t\t\t\tclearTimeout(watchers.tapHold);\r\n\t\t\t\twatchers.tapHold = null;\r\n\r\n\t\t\t\twatchers.tap = null;\r\n\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\twatchers.tapDbl = null;\r\n\r\n\t\t\t\tthis.dispatchEvent(type + \"TapHold\", e,  component);\r\n\t\t\t}, 1000);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"end\":\r\n\t\t\tif(watchers.tap){\r\n\r\n\t\t\t\twatchers.tap = null;\r\n\t\t\t\tthis.dispatchEvent(type + \"Tap\", e,  component);\r\n\t\t\t}\r\n\r\n\t\t\tif(watchers.tapDbl){\r\n\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\twatchers.tapDbl = null;\r\n\r\n\t\t\t\tthis.dispatchEvent(type + \"DblTap\", e,  component);\r\n\t\t\t}else{\r\n\t\t\t\twatchers.tapDbl = setTimeout(() => {\r\n\t\t\t\t\tclearTimeout(watchers.tapDbl);\r\n\t\t\t\t\twatchers.tapDbl = null;\r\n\t\t\t\t}, 300);\r\n\t\t\t}\r\n\r\n\t\t\tclearTimeout(watchers.tapHold);\r\n\t\t\twatchers.tapHold = null;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tdispatchEvent(action, e, component){\r\n\t\tvar componentObj = component.getComponent(),\r\n\t\tcallback;\r\n\r\n\t\tif(this.columnSubscribers[action]){\r\n\r\n\t\t\tif(component instanceof Cell){\r\n\t\t\t\tcallback = component.column.definition[action];\r\n\t\t\t}else if(component instanceof Column){\r\n\t\t\t\tcallback = component.definition[action];\r\n\t\t\t}\r\n\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback(e, componentObj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(action, e, componentObj);\r\n\t}\r\n}\r\n\r\nInteraction.moduleName = \"interaction\";\r\n\r\nexport default Interaction;","export default {\r\n\tnavPrev:\"shift + 9\",\r\n\tnavNext:9,\r\n\tnavUp:38,\r\n\tnavDown:40,\r\n\tscrollPageUp:33,\r\n\tscrollPageDown:34,\r\n\tscrollToStart:36,\r\n\tscrollToEnd:35,\r\n\tundo:\"ctrl + 90\",\r\n\tredo:\"ctrl + 89\",\r\n\tcopyToClipboard:\"ctrl + 67\",\r\n};","export default {\r\n\tkeyBlock:function(e){\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t},\r\n\tscrollPageUp:function(e){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tnewPos = rowManager.scrollTop - rowManager.element.clientHeight,\r\n\t\tscrollMax = rowManager.element.scrollHeight;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\tif(newPos >= 0){\r\n\t\t\t\trowManager.element.scrollTop = newPos;\r\n\t\t\t}else{\r\n\t\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tscrollPageDown:function(e){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tnewPos = rowManager.scrollTop + rowManager.element.clientHeight,\r\n\t\tscrollMax = rowManager.element.scrollHeight;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\tif(newPos <= scrollMax){\r\n\t\t\t\trowManager.element.scrollTop = newPos;\r\n\t\t\t}else{\r\n\t\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\r\n\t},\r\n\tscrollToStart:function(e){\r\n\t\tvar rowManager = this.table.rowManager;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[0]);\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tscrollToEnd:function(e){\r\n\t\tvar rowManager = this.table.rowManager;\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tif(rowManager.displayRowsCount){\r\n\t\t\trowManager.scrollToRow(rowManager.getDisplayRows()[rowManager.displayRowsCount - 1]);\r\n\t\t}\r\n\r\n\t\tthis.table.element.focus();\r\n\t},\r\n\tnavPrev:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-prev\", e);\r\n\t},\r\n\r\n\tnavNext:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-next\", e);\r\n\t},\r\n\r\n\tnavLeft:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-left\", e);\r\n\t},\r\n\r\n\tnavRight:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-right\", e);\r\n\t},\r\n\r\n\tnavUp:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-up\", e);\r\n\t},\r\n\r\n\tnavDown:function(e){\r\n\t\tthis.dispatch(\"keybinding-nav-down\", e);\r\n\t},\r\n\r\n\tundo:function(e){\r\n\t\tvar cell = false;\r\n\t\tif(this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")){\r\n\r\n\t\t\tcell = this.table.modules.edit.currentCell;\r\n\r\n\t\t\tif(!cell){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.table.modules.history.undo();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tredo:function(e){\r\n\t\tvar cell = false;\r\n\t\tif(this.table.options.history && this.table.modExists(\"history\") && this.table.modExists(\"edit\")){\r\n\r\n\t\t\tcell = this.table.modules.edit.currentCell;\r\n\r\n\t\t\tif(!cell){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.table.modules.history.redo();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tcopyToClipboard:function(e){\r\n\t\tif(!this.table.modules.edit.currentCell){\r\n\t\t\tif(this.table.modExists(\"clipboard\", true)){\r\n\t\t\t\tthis.table.modules.clipboard.copy(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultBindings from './defaults/bindings.js';\r\nimport defaultActions from './defaults/actions.js';\r\n\r\nclass Keybindings extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.watchKeys = null;\r\n\t\tthis.pressedKeys = null;\r\n\t\tthis.keyupBinding = false;\r\n\t\tthis.keydownBinding = false;\r\n\r\n\t\tthis.registerTableOption(\"keybindings\", []); //array for keybindings\r\n\t\tthis.registerTableOption(\"tabEndNewRow\", false); //create new row when tab to end of table\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tvar bindings = this.table.options.keybindings,\r\n\t\tmergedBindings = {};\r\n\r\n\t\tthis.watchKeys = {};\r\n\t\tthis.pressedKeys = [];\r\n\r\n\t\tif(bindings !== false){\r\n\r\n\t\t\tfor(let key in Keybindings.bindings){\r\n\t\t\t\tmergedBindings[key] = Keybindings.bindings[key];\r\n\t\t\t}\r\n\r\n\t\t\tif(Object.keys(bindings).length){\r\n\r\n\t\t\t\tfor(let key in bindings){\r\n\t\t\t\t\tmergedBindings[key] = bindings[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.mapBindings(mergedBindings);\r\n\t\t\tthis.bindEvents();\r\n\t\t}\r\n\r\n\t\tthis.subscribe(\"table-destroy\", this.clearBindings.bind(this));\r\n\t}\r\n\r\n\tmapBindings(bindings){\r\n\t\tfor(let key in bindings){\r\n\t\t\tif(Keybindings.actions[key]){\r\n\t\t\t\tif(bindings[key]){\r\n\t\t\t\t\tif(typeof bindings[key] !== \"object\"){\r\n\t\t\t\t\t\tbindings[key] = [bindings[key]];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindings[key].forEach((binding) => {\r\n\t\t\t\t\t\tthis.mapBinding(key, binding);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Key Binding Error - no such action:\", key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmapBinding(action, symbolsList){\r\n\t\tvar binding = {\r\n\t\t\taction: Keybindings.actions[action],\r\n\t\t\tkeys: [],\r\n\t\t\tctrl: false,\r\n\t\t\tshift: false,\r\n\t\t\tmeta: false,\r\n\t\t};\r\n\r\n\t\tvar symbols = symbolsList.toString().toLowerCase().split(\" \").join(\"\").split(\"+\");\r\n\r\n\t\tsymbols.forEach((symbol) => {\r\n\t\t\tswitch(symbol){\r\n\t\t\t\tcase \"ctrl\":\r\n\t\t\t\tbinding.ctrl = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shift\":\r\n\t\t\t\tbinding.shift = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"meta\":\r\n\t\t\t\tbinding.meta = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tsymbol = parseInt(symbol);\r\n\t\t\t\tbinding.keys.push(symbol);\r\n\r\n\t\t\t\tif(!this.watchKeys[symbol]){\r\n\t\t\t\t\tthis.watchKeys[symbol] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.watchKeys[symbol].push(binding);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tbindEvents(){\r\n\t\tvar self = this;\r\n\r\n\t\tthis.keyupBinding = function(e){\r\n\t\t\tvar code = e.keyCode;\r\n\t\t\tvar bindings = self.watchKeys[code];\r\n\r\n\t\t\tif(bindings){\r\n\r\n\t\t\t\tself.pressedKeys.push(code);\r\n\r\n\t\t\t\tbindings.forEach(function(binding){\r\n\t\t\t\t\tself.checkBinding(e, binding);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.keydownBinding = function(e){\r\n\t\t\tvar code = e.keyCode;\r\n\t\t\tvar bindings = self.watchKeys[code];\r\n\r\n\t\t\tif(bindings){\r\n\r\n\t\t\t\tvar index = self.pressedKeys.indexOf(code);\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tself.pressedKeys.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.table.element.addEventListener(\"keydown\", this.keyupBinding);\r\n\r\n\t\tthis.table.element.addEventListener(\"keyup\", this.keydownBinding);\r\n\t}\r\n\r\n\tclearBindings(){\r\n\t\tif(this.keyupBinding){\r\n\t\t\tthis.table.element.removeEventListener(\"keydown\", this.keyupBinding);\r\n\t\t}\r\n\r\n\t\tif(this.keydownBinding){\r\n\t\t\tthis.table.element.removeEventListener(\"keyup\", this.keydownBinding);\r\n\t\t}\r\n\t}\r\n\r\n\tcheckBinding(e, binding){\r\n\t\tvar match = true;\r\n\r\n\t\tif(e.ctrlKey == binding.ctrl && e.shiftKey == binding.shift && e.metaKey == binding.meta){\r\n\t\t\tbinding.keys.forEach((key) => {\r\n\t\t\t\tvar index = this.pressedKeys.indexOf(key);\r\n\r\n\t\t\t\tif(index == -1){\r\n\t\t\t\t\tmatch = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tbinding.action.call(this, e);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nKeybindings.moduleName = \"keybindings\";\r\n\r\n//load defaults\r\nKeybindings.bindings = defaultBindings;\r\nKeybindings.actions = defaultActions;\r\n\r\nexport default Keybindings;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass Menu extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.menuElements = [];\r\n\t\tthis.blurEvent = this.hideMenu.bind(this);\r\n\t\tthis.escEvent = this.escMenu.bind(this);\r\n\t\tthis.nestedMenuBlock = false;\r\n\t\tthis.positionReversedX = false;\r\n\r\n\t\tthis.registerTableOption(\"rowContextMenu\", false);\r\n\t\tthis.registerTableOption(\"rowClickMenu\", false);\r\n\t\tthis.registerTableOption(\"groupContextMenu\", false);\r\n\t\tthis.registerTableOption(\"groupClickMenu\", false);\r\n\r\n\t\tthis.registerColumnOption(\"headerContextMenu\");\r\n\t\tthis.registerColumnOption(\"headerMenu\");\r\n\t\tthis.registerColumnOption(\"contextMenu\");\r\n\t\tthis.registerColumnOption(\"clickMenu\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-layout\", this.layoutCell.bind(this));\r\n\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t}\r\n\r\n\tlayoutCell(cell){\r\n\t\tif(cell.column.definition.contextMenu || cell.column.definition.clickMenu){\r\n\t\t\tthis.initializeCell(cell);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.definition;\r\n\r\n\t\tif(def.headerContextMenu || def.headerClickMenu || def.headerMenu){\r\n\t\t\tthis.initializeColumnHeader(column);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeColumnHeader(column){\r\n\t\tvar headerMenuEl;\r\n\r\n\t\tif(column.definition.headerContextMenu){\r\n\t\t\tcolumn.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, column, column.definition.headerContextMenu));\r\n\t\t\tthis.tapHold(column, column.definition.headerContextMenu);\r\n\t\t}\r\n\r\n\t\t// if(column.definition.headerClickMenu){\r\n\t\t// \tcolumn.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, column, column.definition.headerClickMenu));\r\n\t\t// }\r\n\r\n\t\tif(column.definition.headerMenu){\r\n\r\n\t\t\theaderMenuEl = document.createElement(\"span\");\r\n\t\t\theaderMenuEl.classList.add(\"tabulator-header-menu-button\");\r\n\t\t\theaderMenuEl.innerHTML = \"&vellip;\";\r\n\r\n\t\t\theaderMenuEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tthis.LoadMenuEvent(column, column.definition.headerMenu, e);\r\n\t\t\t});\r\n\r\n\t\t\tcolumn.titleElement.insertBefore(headerMenuEl, column.titleElement.firstChild);\r\n\t\t}\r\n\t}\r\n\r\n\tLoadMenuEvent(component, menu, e){\r\n\t\tmenu = typeof menu == \"function\" ? menu.call(this.table, component.getComponent(), e) : menu;\r\n\r\n\t\t// if(component instanceof Cell){\r\n\t\t// \te.stopImmediatePropagation();\r\n\t\t// }\r\n\r\n\t\tthis.loadMenu(e, component, menu);\r\n\t}\r\n\r\n\ttapHold(component, menu){\r\n\t\tvar element = component.getElement(),\r\n\t\ttapHold = null,\r\n\t\tloaded = false;\r\n\r\n\t\telement.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tclearTimeout(tapHold);\r\n\t\t\tloaded = false;\r\n\r\n\t\t\ttapHold = setTimeout(() => {\r\n\t\t\t\tclearTimeout(tapHold);\r\n\t\t\t\ttapHold = null;\r\n\t\t\t\tloaded = true;\r\n\r\n\t\t\t\tthis.LoadMenuEvent(component, menu, e);\r\n\t\t\t}, 1000);\r\n\r\n\t\t}, {passive: true});\r\n\r\n\t\telement.addEventListener(\"touchend\", (e) => {\r\n\t\t\tclearTimeout(tapHold);\r\n\t\t\ttapHold = null;\r\n\r\n\t\t\tif(loaded){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tinitializeCell(cell){\r\n\t\tif(cell.column.definition.contextMenu){\r\n\t\t\tcell.getElement(true).addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.contextMenu));\r\n\t\t\tthis.tapHold(cell, cell.column.definition.contextMenu);\r\n\t\t}\r\n\r\n\t\tif(cell.column.definition.clickMenu){\r\n\t\t\tcell.getElement(true).addEventListener(\"click\", this.LoadMenuEvent.bind(this, cell, cell.column.definition.clickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tif(this.table.options.rowContextMenu){\r\n\t\t\trow.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, row, this.table.options.rowContextMenu));\r\n\t\t\tthis.tapHold(row, this.table.options.rowContextMenu);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.rowClickMenu){\r\n\t\t\trow.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, row, this.table.options.rowClickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeGroup (group){\r\n\t\tif(this.table.options.groupContextMenu){\r\n\t\t\tgroup.getElement().addEventListener(\"contextmenu\", this.LoadMenuEvent.bind(this, group, this.table.options.groupContextMenu));\r\n\t\t\tthis.tapHold(group, this.table.options.groupContextMenu);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.groupClickMenu){\r\n\t\t\tgroup.getElement().addEventListener(\"click\", this.LoadMenuEvent.bind(this, group, this.table.options.groupClickMenu));\r\n\t\t}\r\n\t}\r\n\r\n\tloadMenu(e, component, menu, parentEl){\r\n\r\n\t\tvar touch = !(e instanceof MouseEvent);\r\n\r\n\t\tvar menuEl = document.createElement(\"div\");\r\n\t\tmenuEl.classList.add(\"tabulator-menu\");\r\n\r\n\t\tif(!touch){\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\t//abort if no menu set\r\n\t\tif(!menu || !menu.length){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!parentEl){\r\n\t\t\tif(this.nestedMenuBlock){\r\n\t\t\t\t//abort if child menu already open\r\n\t\t\t\tif(this.isOpen()){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.nestedMenuBlock = setTimeout(() => {\r\n\t\t\t\t\tthis.nestedMenuBlock = false;\r\n\t\t\t\t}, 100)\r\n\t\t\t}\r\n\r\n\t\t\tthis.hideMenu();\r\n\t\t\tthis.menuElements = [];\r\n\t\t}\r\n\r\n\t\tmenu.forEach((item) => {\r\n\t\t\tvar itemEl = document.createElement(\"div\"),\r\n\t\t\tlabel = item.label,\r\n\t\t\tdisabled = item.disabled;\r\n\r\n\t\t\tif(item.separator){\r\n\t\t\t\titemEl.classList.add(\"tabulator-menu-separator\");\r\n\t\t\t}else{\r\n\t\t\t\titemEl.classList.add(\"tabulator-menu-item\");\r\n\r\n\t\t\t\tif(typeof label == \"function\"){\r\n\t\t\t\t\tlabel = label.call(this.table, component.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(label instanceof Node){\r\n\t\t\t\t\titemEl.appendChild(label);\r\n\t\t\t\t}else{\r\n\t\t\t\t\titemEl.innerHTML = label;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof disabled == \"function\"){\r\n\t\t\t\t\tdisabled = disabled.call(this.table, component.getComponent());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(disabled){\r\n\t\t\t\t\titemEl.classList.add(\"tabulator-menu-item-disabled\");\r\n\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(item.menu && item.menu.length){\r\n\t\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\tthis.hideOldSubMenus(menuEl);\r\n\t\t\t\t\t\t\tthis.loadMenu(e, component, item.menu, itemEl);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(item.action){\r\n\t\t\t\t\t\t\titemEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\t\t\t\t\titem.action(e, component.getComponent());\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item.menu && item.menu.length){\r\n\t\t\t\t\titemEl.classList.add(\"tabulator-menu-item-submenu\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmenuEl.appendChild(itemEl);\r\n\t\t});\r\n\r\n\t\tmenuEl.addEventListener(\"click\", (e) => {\r\n\t\t\tthis.hideMenu();\r\n\t\t});\r\n\r\n\t\tthis.menuElements.push(menuEl);\r\n\t\tthis.positionMenu(menuEl, parentEl, touch, e);\r\n\t}\r\n\r\n\thideOldSubMenus(menuEl){\r\n\t\tvar index = this.menuElements.indexOf(menuEl);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tfor(let i = this.menuElements.length - 1; i > index; i--){\r\n\t\t\t\tvar el = this.menuElements[i];\r\n\r\n\t\t\t\tif(el.parentNode){\r\n\t\t\t\t\tel.parentNode.removeChild(el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.menuElements.pop();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpositionMenu(element, parentEl, touch, e){\r\n\t\tvar docHeight = Math.max(document.body.offsetHeight, window.innerHeight),\r\n\t\tx, y, parentOffset;\r\n\r\n\t\tif(!parentEl){\r\n\t\t\tx = touch ? e.touches[0].pageX : e.pageX;\r\n\t\t\ty = touch ? e.touches[0].pageY : e.pageY;\r\n\r\n\t\t\tthis.positionReversedX = false;\r\n\t\t}else{\r\n\t\t\tparentOffset = Helpers.elOffset(parentEl);\r\n\t\t\tx = parentOffset.left + parentEl.offsetWidth;\r\n\t\t\ty = parentOffset.top - 1;\r\n\t\t}\r\n\r\n\t\telement.style.top = y + \"px\";\r\n\t\telement.style.left = x + \"px\";\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.table.rowManager.element.addEventListener(\"scroll\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"click\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"contextmenu\", this.blurEvent);\r\n\t\t\twindow.addEventListener(\"resize\", this.blurEvent);\r\n\t\t\tdocument.body.addEventListener(\"keydown\", this.escEvent);\r\n\t\t}, 100);\r\n\r\n\t\tdocument.body.appendChild(element);\r\n\r\n\t\t//move menu to start on bottom edge if it is too close to the edge of the screen\r\n\t\tif((y + element.offsetHeight) >= docHeight){\r\n\t\t\telement.style.top = \"\";\r\n\r\n\t\t\tif(parentEl){\r\n\t\t\t\telement.style.bottom = (docHeight - parentOffset.top - parentEl.offsetHeight - 1) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\telement.style.bottom = (docHeight - y) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//move menu to start on right edge if it is too close to the edge of the screen\r\n\t\tif((x + element.offsetWidth) >= document.body.offsetWidth || this.positionReversedX){\r\n\t\t\telement.style.left = \"\";\r\n\r\n\t\t\tif(parentEl){\r\n\t\t\t\telement.style.right = (document.documentElement.offsetWidth - parentOffset.left) + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\telement.style.right = (document.documentElement.offsetWidth - x) + \"px\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.positionReversedX = true;\r\n\t\t}\r\n\t}\r\n\r\n\tisOpen(){\r\n\t\treturn !!this.menuElements.length;\r\n\t}\r\n\r\n\tescMenu(e){\r\n\t\tif(e.keyCode == 27){\r\n\t\t\tthis.hideMenu();\r\n\t\t}\r\n\t}\r\n\r\n\thideMenu(){\r\n\t\tthis.menuElements.forEach((menuEl) => {\r\n\t\t\tif(menuEl.parentNode){\r\n\t\t\t\tmenuEl.parentNode.removeChild(menuEl);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdocument.body.removeEventListener(\"keydown\", this.escEvent);\r\n\t\tdocument.body.removeEventListener(\"click\", this.blurEvent);\r\n\t\tdocument.body.removeEventListener(\"contextmenu\", this.blurEvent);\r\n\t\twindow.removeEventListener(\"resize\", this.blurEvent);\r\n\t\tthis.table.rowManager.element.removeEventListener(\"scroll\", this.blurEvent);\r\n\t}\r\n}\r\n\r\nMenu.moduleName = \"menu\";\r\n\r\nexport default Menu;","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass MoveColumns extends Module{\r\n\t\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.placeholderElement = this.createPlaceholderElement();\r\n\t\tthis.hoverElement = false; //floating column header element\r\n\t\tthis.checkTimeout = false; //click check timeout holder\r\n\t\tthis.checkPeriod = 250; //period to wait on mousedown to consider this a move and not a click\r\n\t\tthis.moving = false; //currently moving column\r\n\t\tthis.toCol = false; //destination column\r\n\t\tthis.toColAfter = false; //position of moving column relative to the desitnation column\r\n\t\tthis.startX = 0; //starting position within header element\r\n\t\tthis.autoScrollMargin = 40; //auto scroll on edge when within margin\r\n\t\tthis.autoScrollStep = 5; //auto scroll distance in pixels\r\n\t\tthis.autoScrollTimeout = false; //auto scroll timeout\r\n\t\tthis.touchMove = false;\r\n\t\t\r\n\t\tthis.moveHover = this.moveHover.bind(this);\r\n\t\tthis.endMove = this.endMove.bind(this);\r\n\t\t\r\n\t\tthis.registerTableOption(\"movableColumns\", false); //enable movable columns\r\n\t}\r\n\t\r\n\tcreatePlaceholderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\t\r\n\t\tel.classList.add(\"tabulator-col\");\r\n\t\tel.classList.add(\"tabulator-col-placeholder\");\r\n\t\t\r\n\t\treturn el;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tif(this.table.options.movableColumns){\r\n\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\tcolEl;\r\n\t\t\r\n\t\tif(!column.modules.frozen){\r\n\t\t\tcolEl = column.getElement();\r\n\t\t\t\r\n\t\t\tconfig.mousemove = function(e){\r\n\t\t\t\tif(column.parent === self.moving.parent){\r\n\t\t\t\t\tif((((self.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(colEl).left) + self.table.columnManager.element.scrollLeft) > (column.getWidth() / 2)){\r\n\t\t\t\t\t\tif(self.toCol !== column || !self.toColAfter){\r\n\t\t\t\t\t\t\tcolEl.parentNode.insertBefore(self.placeholderElement, colEl.nextSibling);\r\n\t\t\t\t\t\t\tself.moveColumn(column, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(self.toCol !== column || self.toColAfter){\r\n\t\t\t\t\t\t\tcolEl.parentNode.insertBefore(self.placeholderElement, colEl);\r\n\t\t\t\t\t\t\tself.moveColumn(column, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}.bind(self);\r\n\t\t\t\r\n\t\t\tcolEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tself.touchMove = false;\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, column);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tcolEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.bindTouchEvents(column);\r\n\t\t}\r\n\t\t\r\n\t\tcolumn.modules.moveColumn = config;\r\n\t}\r\n\t\r\n\tbindTouchEvents(column){\r\n\t\tvar colEl = column.getElement(),\r\n\t\tstartXMove = false, //shifting center position of the cell\r\n\t\tdir = false,\r\n\t\tcurrentCol, nextCol, prevCol, nextColWidth, prevColWidth, nextColWidthLast, prevColWidthLast;\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tthis.checkTimeout = setTimeout(() => {\r\n\t\t\t\tthis.touchMove = true;\r\n\t\t\t\tcurrentCol = column;\r\n\t\t\t\tnextCol = column.nextColumn();\r\n\t\t\t\tnextColWidth = nextCol ? nextCol.getWidth()/2 : 0;\r\n\t\t\t\tprevCol = column.prevColumn();\r\n\t\t\t\tprevColWidth = prevCol ? prevCol.getWidth()/2 : 0;\r\n\t\t\t\tnextColWidthLast = 0;\r\n\t\t\t\tprevColWidthLast = 0;\r\n\t\t\t\tstartXMove = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.startMove(e, column);\r\n\t\t\t}, this.checkPeriod);\r\n\t\t}, {passive: true});\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchmove\", (e) => {\r\n\t\t\tvar halfCol, diff, moveToCol;\r\n\t\t\t\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.moveHover(e);\r\n\t\t\t\t\r\n\t\t\t\tif(!startXMove){\r\n\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdiff = e.touches[0].pageX - startXMove;\r\n\t\t\t\t\r\n\t\t\t\tif(diff > 0){\r\n\t\t\t\t\tif(nextCol && diff - nextColWidthLast > nextColWidth){\r\n\t\t\t\t\t\tmoveToCol = nextCol;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(moveToCol !== column){\r\n\t\t\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t\t\t\tmoveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement().nextSibling);\r\n\t\t\t\t\t\t\tthis.moveColumn(moveToCol, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(prevCol && -diff - prevColWidthLast >  prevColWidth){\r\n\t\t\t\t\t\tmoveToCol = prevCol;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(moveToCol !== column){\r\n\t\t\t\t\t\t\tstartXMove = e.touches[0].pageX;\r\n\t\t\t\t\t\t\tmoveToCol.getElement().parentNode.insertBefore(this.placeholderElement, moveToCol.getElement());\r\n\t\t\t\t\t\t\tthis.moveColumn(moveToCol, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(moveToCol){\r\n\t\t\t\t\tcurrentCol = moveToCol;\r\n\t\t\t\t\tnextCol = moveToCol.nextColumn();\r\n\t\t\t\t\tnextColWidthLast = nextColWidth;\r\n\t\t\t\t\tnextColWidth = nextCol ? nextCol.getWidth() / 2 : 0;\r\n\t\t\t\t\tprevCol = moveToCol.prevColumn();\r\n\t\t\t\t\tprevColWidthLast = prevColWidth;\r\n\t\t\t\t\tprevColWidth = prevCol ? prevCol.getWidth() / 2 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {passive: true});\r\n\t\t\r\n\t\tcolEl.addEventListener(\"touchend\", (e) => {\r\n\t\t\tif(this.checkTimeout){\r\n\t\t\t\tclearTimeout(this.checkTimeout);\r\n\t\t\t}\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.endMove(e);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tstartMove(e, column){\r\n\t\tvar element = column.getElement(),\r\n\t\theaderElement = this.table.columnManager.getElement(),\r\n\t\theadersElement = this.table.columnManager.getHeadersElement();\r\n\t\t\r\n\t\tthis.moving = column;\r\n\t\tthis.startX = (this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(element).left;\r\n\t\t\r\n\t\tthis.table.element.classList.add(\"tabulator-block-select\");\r\n\t\t\r\n\t\t//create placeholder\r\n\t\tthis.placeholderElement.style.width = column.getWidth() + \"px\";\r\n\t\tthis.placeholderElement.style.height = column.getHeight() + \"px\";\r\n\t\t\r\n\t\telement.parentNode.insertBefore(this.placeholderElement, element);\r\n\t\telement.parentNode.removeChild(element);\r\n\t\t\r\n\t\t//create hover element\r\n\t\tthis.hoverElement = element.cloneNode(true);\r\n\t\tthis.hoverElement.classList.add(\"tabulator-moving\");\r\n\t\t\r\n\t\tthis.table.columnManager.getElement().appendChild(this.hoverElement);\r\n\t\t\r\n\t\tthis.hoverElement.style.left = \"0\";\r\n\t\tthis.hoverElement.style.bottom = (headerElement.clientHeight - headersElement.offsetHeight) + \"px\";\r\n\t\t\r\n\t\tif(!this.touchMove){\r\n\t\t\tthis._bindMouseMove();\r\n\t\t\t\r\n\t\t\tdocument.body.addEventListener(\"mousemove\", this.moveHover);\r\n\t\t\tdocument.body.addEventListener(\"mouseup\", this.endMove);\r\n\t\t}\r\n\t\t\r\n\t\tthis.moveHover(e);\r\n\t}\r\n\t\r\n\t_bindMouseMove(){\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column){\r\n\t\t\tif(column.modules.moveColumn.mousemove){\r\n\t\t\t\tcolumn.getElement().addEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t_unbindMouseMove(){\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column){\r\n\t\t\tif(column.modules.moveColumn.mousemove){\r\n\t\t\t\tcolumn.getElement().removeEventListener(\"mousemove\", column.modules.moveColumn.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tmoveColumn(column, after){\r\n\t\tvar movingCells = this.moving.getCells();\r\n\t\t\r\n\t\tthis.toCol = column;\r\n\t\tthis.toColAfter = after;\r\n\t\t\r\n\t\tif(after){\r\n\t\t\tcolumn.getCells().forEach(function(cell, i){\r\n\t\t\t\tvar cellEl = cell.getElement(true);\r\n\t\t\t\t\r\n\t\t\t\tif(cellEl.parentNode && movingCells[i]){\r\n\t\t\t\t\tcellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tcolumn.getCells().forEach(function(cell, i){\r\n\t\t\t\tvar cellEl = cell.getElement(true);\r\n\t\t\t\t\r\n\t\t\t\tif(cellEl.parentNode && movingCells[i]){\r\n\t\t\t\t\tcellEl.parentNode.insertBefore(movingCells[i].getElement(), cellEl);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tendMove(e){\r\n\t\tif(e.which === 1 || this.touchMove){\r\n\t\t\tthis._unbindMouseMove();\r\n\t\t\t\r\n\t\t\tthis.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\r\n\t\t\tthis.placeholderElement.parentNode.removeChild(this.placeholderElement);\r\n\t\t\tthis.hoverElement.parentNode.removeChild(this.hoverElement);\r\n\t\t\t\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-block-select\");\r\n\t\t\t\r\n\t\t\tif(this.toCol){\r\n\t\t\t\tthis.table.columnManager.moveColumnActual(this.moving, this.toCol, this.toColAfter);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.moving = false;\r\n\t\t\tthis.toCol = false;\r\n\t\t\tthis.toColAfter = false;\r\n\t\t\t\r\n\t\t\tif(!this.touchMove){\r\n\t\t\t\tdocument.body.removeEventListener(\"mousemove\", this.moveHover);\r\n\t\t\t\tdocument.body.removeEventListener(\"mouseup\", this.endMove);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tmoveHover(e){\r\n\t\tvar columnHolder = this.table.columnManager.getElement(),\r\n\t\tscrollLeft = columnHolder.scrollLeft,\r\n\t\txPos = ((this.touchMove ? e.touches[0].pageX : e.pageX) - Helpers.elOffset(columnHolder).left) + scrollLeft,\r\n\t\tscrollPos;\r\n\t\t\r\n\t\tthis.hoverElement.style.left = (xPos - this.startX) + \"px\";\r\n\t\t\r\n\t\tif(xPos - scrollLeft < this.autoScrollMargin){\r\n\t\t\tif(!this.autoScrollTimeout){\r\n\t\t\t\tthis.autoScrollTimeout = setTimeout(() => {\r\n\t\t\t\t\tscrollPos = Math.max(0,scrollLeft-5);\r\n\t\t\t\t\tthis.table.rowManager.getElement().scrollLeft = scrollPos;\r\n\t\t\t\t\tthis.autoScrollTimeout = false;\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(scrollLeft + columnHolder.clientWidth - xPos < this.autoScrollMargin){\r\n\t\t\tif(!this.autoScrollTimeout){\r\n\t\t\t\tthis.autoScrollTimeout = setTimeout(() => {\r\n\t\t\t\t\tscrollPos = Math.min(columnHolder.clientWidth, scrollLeft+5);\r\n\t\t\t\t\tthis.table.rowManager.getElement().scrollLeft = scrollPos;\r\n\t\t\t\t\tthis.autoScrollTimeout = false;\r\n\t\t\t\t}, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMoveColumns.moduleName = \"moveColumn\";\r\n\r\nexport default MoveColumns;\r\n","import Module from '../../core/Module.js';\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass MoveRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.placeholderElement = this.createPlaceholderElement();\r\n\t\tthis.hoverElement = false; //floating row header element\r\n\t\tthis.checkTimeout = false; //click check timeout holder\r\n\t\tthis.checkPeriod = 150; //period to wait on mousedown to consider this a move and not a click\r\n\t\tthis.moving = false; //currently moving row\r\n\t\tthis.toRow = false; //destination row\r\n\t\tthis.toRowAfter = false; //position of moving row relative to the desitnation row\r\n\t\tthis.hasHandle = false; //row has handle instead of fully movable row\r\n\t\tthis.startY = 0; //starting Y position within header element\r\n\t\tthis.startX = 0; //starting X position within header element\r\n\r\n\t\tthis.moveHover = this.moveHover.bind(this);\r\n\t\tthis.endMove = this.endMove.bind(this);\r\n\t\tthis.tableRowDropEvent = false;\r\n\r\n\t\tthis.touchMove = false;\r\n\r\n\t\tthis.connection = false;\r\n\t\tthis.connectionSelectorsTables = false;\r\n\t\tthis.connectionSelectorsElements = false;\r\n\t\tthis.connectionElements = [];\r\n\t\tthis.connections = [];\r\n\r\n\t\tthis.connectedTable = false;\r\n\t\tthis.connectedRow = false;\r\n\r\n\t\tthis.registerTableOption(\"movableRows\", false); //enable movable rows\r\n\t\tthis.registerTableOption(\"movableRowsConnectedTables\", false); //tables for movable rows to be connected to\r\n\t\tthis.registerTableOption(\"movableRowsConnectedElements\", false); //other elements for movable rows to be connected to\r\n\t\tthis.registerTableOption(\"movableRowsSender\", false);\r\n\t\tthis.registerTableOption(\"movableRowsReceiver\", \"insert\");\r\n\r\n\t\tthis.registerColumnOption(\"rowHandle\");\r\n\t}\r\n\r\n\tcreatePlaceholderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\tel.classList.add(\"tabulator-row-placeholder\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.movableRows){\r\n\t\t\tthis.connectionSelectorsTables = this.table.options.movableRowsConnectedTables;\r\n\t\t\tthis.connectionSelectorsElements = this.table.options.movableRowsConnectedElements;\r\n\r\n\t\t\tthis.connection = this.connectionSelectorsTables || this.connectionSelectorsElements;\r\n\r\n\t\t\tthis.subscribe(\"cell-init\", this.initializeCell.bind(this));\r\n\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeGroupHeader(group){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\trowEl;\r\n\r\n\t\t//inter table drag drop\r\n\t\tconfig.mouseup = function(e){\r\n\t\t\tself.tableRowDrop(e, row);\r\n\t\t}.bind(self);\r\n\r\n\t\t//same table drag drop\r\n\t\tconfig.mousemove = function(e){\r\n\t\t\tif(((e.pageY - Helpers.elOffset(group.element).top) + self.table.rowManager.element.scrollTop) > (group.getHeight() / 2)){\r\n\t\t\t\tif(self.toRow !== group || !self.toRowAfter){\r\n\t\t\t\t\tvar rowEl = group.getElement();\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\r\n\t\t\t\t\tself.moveRow(group, true);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(self.toRow !== group || self.toRowAfter){\r\n\t\t\t\t\tvar rowEl = group.getElement();\r\n\t\t\t\t\tif(rowEl.previousSibling){\r\n\t\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\r\n\t\t\t\t\t\tself.moveRow(group, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.bind(self);\r\n\r\n\t\tgroup.modules.moveRow = config;\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\tconfig = {},\r\n\t\trowEl;\r\n\r\n\t\t//inter table drag drop\r\n\t\tconfig.mouseup = function(e){\r\n\t\t\tself.tableRowDrop(e, row);\r\n\t\t}.bind(self);\r\n\r\n\t\t//same table drag drop\r\n\t\tconfig.mousemove = function(e){\r\n\t\t\tvar rowEl = row.getElement();\r\n\r\n\t\t\tif(((e.pageY - Helpers.elOffset(rowEl).top) + self.table.rowManager.element.scrollTop) > (row.getHeight() / 2)){\r\n\t\t\t\tif(self.toRow !== row || !self.toRowAfter){\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl.nextSibling);\r\n\t\t\t\t\tself.moveRow(row, true);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(self.toRow !== row || self.toRowAfter){\r\n\t\t\t\t\trowEl.parentNode.insertBefore(self.placeholderElement, rowEl);\r\n\t\t\t\t\tself.moveRow(row, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.bind(self);\r\n\r\n\r\n\t\tif(!this.hasHandle){\r\n\r\n\t\t\trowEl = row.getElement();\r\n\r\n\t\t\trowEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, row);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trowEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.bindTouchEvents(row, row.getElement());\r\n\t\t}\r\n\r\n\t\trow.modules.moveRow = config;\r\n\t}\r\n\r\n\tinitializeColumn(column){\r\n\t\tif(column.definition.rowHandle && this.table.options.movableRows !== false){\r\n\t\t\tthis.hasHandle = true;\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeCell(cell){\r\n\t\tif(cell.column.definition.rowHandle && this.table.options.movableRows !== false){\r\n\t\t\tvar self = this,\r\n\t\t\tcellEl = cell.getElement(true);\r\n\r\n\t\t\tcellEl.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tself.checkTimeout = setTimeout(function(){\r\n\t\t\t\t\t\tself.startMove(e, cell.row);\r\n\t\t\t\t\t}, self.checkPeriod);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcellEl.addEventListener(\"mouseup\", function(e){\r\n\t\t\t\tif(e.which === 1){\r\n\t\t\t\t\tif(self.checkTimeout){\r\n\t\t\t\t\t\tclearTimeout(self.checkTimeout);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.bindTouchEvents(cell.row, cellEl);\r\n\t\t}\r\n\t}\r\n\r\n\tbindTouchEvents(row, element){\r\n\t\tvar startYMove = false, //shifting center position of the cell\r\n\t\tdir = false,\r\n\t\tcurrentRow, nextRow, prevRow, nextRowHeight, prevRowHeight, nextRowHeightLast, prevRowHeightLast;\r\n\r\n\t\telement.addEventListener(\"touchstart\", (e) => {\r\n\t\t\tthis.checkTimeout = setTimeout(() => {\r\n\t\t\t\tthis.touchMove = true;\r\n\t\t\t\tcurrentRow = row;\r\n\t\t\t\tnextRow = row.nextRow();\r\n\t\t\t\tnextRowHeight = nextRow ? nextRow.getHeight()/2 : 0;\r\n\t\t\t\tprevRow = row.prevRow();\r\n\t\t\t\tprevRowHeight = prevRow ? prevRow.getHeight()/2 : 0;\r\n\t\t\t\tnextRowHeightLast = 0;\r\n\t\t\t\tprevRowHeightLast = 0;\r\n\t\t\t\tstartYMove = false;\r\n\r\n\t\t\t\tthis.startMove(e, row);\r\n\t\t\t}, this.checkPeriod);\r\n\t\t}, {passive: true});\r\n\t\tthis.moving, this.toRow, this.toRowAfter\r\n\t\telement.addEventListener(\"touchmove\", (e) => {\r\n\r\n\t\t\tvar halfCol, diff, moveToRow;\r\n\r\n\t\t\tif(this.moving){\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tthis.moveHover(e);\r\n\r\n\t\t\t\tif(!startYMove){\r\n\t\t\t\t\tstartYMove = e.touches[0].pageY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff = e.touches[0].pageY - startYMove;\r\n\r\n\t\t\t\tif(diff > 0){\r\n\t\t\t\t\tif(nextRow && diff - nextRowHeightLast > nextRowHeight){\r\n\t\t\t\t\t\tmoveToRow = nextRow;\r\n\r\n\t\t\t\t\t\tif(moveToRow !== row){\r\n\t\t\t\t\t\t\tstartYMove = e.touches[0].pageY\r\n\t\t\t\t\t\t\tmoveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement().nextSibling);\r\n\t\t\t\t\t\t\tthis.moveRow(moveToRow, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(prevRow && -diff - prevRowHeightLast >  prevRowHeight){\r\n\t\t\t\t\t\tmoveToRow = prevRow;\r\n\r\n\t\t\t\t\t\tif(moveToRow !== row){\r\n\t\t\t\t\t\t\tstartYMove = e.touches[0].pageY;\r\n\t\t\t\t\t\t\tmoveToRow.getElement().parentNode.insertBefore(this.placeholderElement, moveToRow.getElement());\r\n\t\t\t\t\t\t\tthis.moveRow(moveToRow, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(moveToRow){\r\n\t\t\t\t\tcurrentRow = moveToRow;\r\n\t\t\t\t\tnextRow = moveToRow.nextRow();\r\n\t\t\t\t\tnextRowHeightLast = nextRowHeight;\r\n\t\t\t\t\tnextRowHeight = nextRow ? nextRow.getHeight() / 2 : 0;\r\n\t\t\t\t\tprevRow = moveToRow.prevRow();\r\n\t\t\t\t\tprevRowHeightLast = prevRowHeight;\r\n\t\t\t\t\tprevRowHeight = prevRow ? prevRow.getHeight() / 2 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\telement.addEventListener(\"touchend\", (e) => {\r\n\t\t\tif(this.checkTimeout){\r\n\t\t\t\tclearTimeout(this.checkTimeout);\r\n\t\t\t}\r\n\t\t\tif(this.moving){\r\n\t\t\t\tthis.endMove(e);\r\n\t\t\t\tthis.touchMove = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_bindMouseMove(){\r\n\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\tif((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove){\r\n\t\t\t\trow.getElement().addEventListener(\"mousemove\", row.modules.moveRow.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_unbindMouseMove(){\r\n\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\tif((row.type === \"row\" || row.type === \"group\") && row.modules.moveRow && row.modules.moveRow.mousemove){\r\n\t\t\t\trow.getElement().removeEventListener(\"mousemove\", row.modules.moveRow.mousemove);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstartMove(e, row){\r\n\t\tvar element = row.getElement();\r\n\r\n\t\tthis.setStartPosition(e, row);\r\n\r\n\t\tthis.moving = row;\r\n\r\n\t\tthis.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\t//create placeholder\r\n\t\tthis.placeholderElement.style.width = row.getWidth() + \"px\";\r\n\t\tthis.placeholderElement.style.height = row.getHeight() + \"px\";\r\n\r\n\t\tif(!this.connection){\r\n\t\t\telement.parentNode.insertBefore(this.placeholderElement, element);\r\n\t\t\telement.parentNode.removeChild(element);\r\n\t\t}else{\r\n\t\t\tthis.table.element.classList.add(\"tabulator-movingrow-sending\");\r\n\t\t\tthis.connectToTables(row);\r\n\t\t}\r\n\r\n\t\t//create hover element\r\n\t\tthis.hoverElement = element.cloneNode(true);\r\n\t\tthis.hoverElement.classList.add(\"tabulator-moving\");\r\n\r\n\t\tif(this.connection){\r\n\t\t\tdocument.body.appendChild(this.hoverElement);\r\n\t\t\tthis.hoverElement.style.left = \"0\";\r\n\t\t\tthis.hoverElement.style.top = \"0\";\r\n\t\t\tthis.hoverElement.style.width = this.table.element.clientWidth + \"px\";\r\n\t\t\tthis.hoverElement.style.whiteSpace = \"nowrap\";\r\n\t\t\tthis.hoverElement.style.overflow = \"hidden\";\r\n\t\t\tthis.hoverElement.style.pointerEvents = \"none\";\r\n\t\t}else{\r\n\t\t\tthis.table.rowManager.getTableElement().appendChild(this.hoverElement);\r\n\r\n\t\t\tthis.hoverElement.style.left = \"0\";\r\n\t\t\tthis.hoverElement.style.top = \"0\";\r\n\r\n\t\t\tthis._bindMouseMove();\r\n\t\t}\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", this.moveHover);\r\n\t\tdocument.body.addEventListener(\"mouseup\", this.endMove);\r\n\r\n\t\tthis.moveHover(e);\r\n\t}\r\n\r\n\tsetStartPosition(e, row){\r\n\t\tvar pageX = this.touchMove ? e.touches[0].pageX : e.pageX,\r\n\t\tpageY = this.touchMove ? e.touches[0].pageY : e.pageY,\r\n\t\telement, position;\r\n\r\n\t\telement = row.getElement();\r\n\t\tif(this.connection){\r\n\t\t\tposition = element.getBoundingClientRect();\r\n\r\n\t\t\tthis.startX = position.left - pageX + window.pageXOffset;\r\n\t\t\tthis.startY = position.top - pageY + window.pageYOffset;\r\n\t\t}else{\r\n\t\t\tthis.startY = (pageY - element.getBoundingClientRect().top);\r\n\t\t}\r\n\t}\r\n\r\n\tendMove(e){\r\n\t\tif(!e || e.which === 1 || this.touchMove){\r\n\t\t\tthis._unbindMouseMove();\r\n\r\n\t\t\tif(!this.connection){\r\n\t\t\t\tthis.placeholderElement.parentNode.insertBefore(this.moving.getElement(), this.placeholderElement.nextSibling);\r\n\t\t\t\tthis.placeholderElement.parentNode.removeChild(this.placeholderElement);\r\n\t\t\t}\r\n\r\n\t\t\tthis.hoverElement.parentNode.removeChild(this.hoverElement);\r\n\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tif(this.toRow){\r\n\t\t\t\tthis.table.rowManager.moveRow(this.moving, this.toRow, this.toRowAfter);\r\n\t\t\t}\r\n\r\n\t\t\tthis.moving = false;\r\n\t\t\tthis.toRow = false;\r\n\t\t\tthis.toRowAfter = false;\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", this.moveHover);\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", this.endMove);\r\n\r\n\t\t\tif(this.connection){\r\n\t\t\t\tthis.table.element.classList.remove(\"tabulator-movingrow-sending\");\r\n\t\t\t\tthis.disconnectFromTables();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmoveRow(row, after){\r\n\t\tthis.toRow = row;\r\n\t\tthis.toRowAfter = after;\r\n\t}\r\n\r\n\tmoveHover(e){\r\n\t\tif(this.connection){\r\n\t\t\tthis.moveHoverConnections.call(this, e);\r\n\t\t}else{\r\n\t\t\tthis.moveHoverTable.call(this, e);\r\n\t\t}\r\n\t}\r\n\r\n\tmoveHoverTable(e){\r\n\t\tvar rowHolder = this.table.rowManager.getElement(),\r\n\t\tscrollTop = rowHolder.scrollTop,\r\n\t\tyPos = ((this.touchMove ? e.touches[0].pageY : e.pageY) - rowHolder.getBoundingClientRect().top) + scrollTop,\r\n\t\tscrollPos;\r\n\r\n\t\tthis.hoverElement.style.top = (yPos - this.startY) + \"px\";\r\n\t}\r\n\r\n\tmoveHoverConnections(e){\r\n\t\tthis.hoverElement.style.left = (this.startX + (this.touchMove ? e.touches[0].pageX : e.pageX)) + \"px\";\r\n\t\tthis.hoverElement.style.top = (this.startY + (this.touchMove ? e.touches[0].pageY : e.pageY)) + \"px\";\r\n\t}\r\n\r\n\telementRowDrop(e, element, row){\r\n\t\tthis.dispatchExternal(\"movableRowsElementDrop\", e, element, row ? row.getComponent() : false);\r\n\t}\r\n\r\n\t//establish connection with other tables\r\n\tconnectToTables(row){\r\n\t\tvar connectionTables;\r\n\r\n\t\tif(this.connectionSelectorsTables){\r\n\t\t\tconnectionTables = this.commsConnections(this.connectionSelectorsTables);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSendingStart\", connectionTables);\r\n\r\n\t\t\tthis.commsSend(this.connectionSelectorsTables, \"moveRow\", \"connect\", {\r\n\t\t\t\trow:row,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.connectionSelectorsElements){\r\n\r\n\t\t\tthis.connectionElements = [];\r\n\r\n\t\t\tif(!Array.isArray(this.connectionSelectorsElements)){\r\n\t\t\t\tthis.connectionSelectorsElements = [this.connectionSelectorsElements];\r\n\t\t\t}\r\n\r\n\t\t\tthis.connectionSelectorsElements.forEach((query) => {\r\n\t\t\t\tif(typeof query === \"string\"){\r\n\t\t\t\t\tthis.connectionElements = this.connectionElements.concat(Array.prototype.slice.call(document.querySelectorAll(query)));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.connectionElements.push(query);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.connectionElements.forEach((element) => {\r\n\t\t\t\tvar dropEvent = (e) => {\r\n\t\t\t\t\tthis.elementRowDrop(e, element, this.moving);\r\n\t\t\t\t};\r\n\r\n\t\t\t\telement.addEventListener(\"mouseup\", dropEvent);\r\n\t\t\t\telement.tabulatorElementDropEvent = dropEvent;\r\n\r\n\t\t\t\telement.classList.add(\"tabulator-movingrow-receiving\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//disconnect from other tables\r\n\tdisconnectFromTables(){\r\n\t\tvar connectionTables;\r\n\r\n\t\tif(this.connectionSelectorsTables){\r\n\t\t\tconnectionTables = this.commsConnections(this.connectionSelectorsTables);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSendingStop\", connectionTables);\r\n\r\n\t\t\tthis.commsSend(this.connectionSelectorsTables, \"moveRow\", \"disconnect\");\r\n\t\t}\r\n\r\n\t\tthis.connectionElements.forEach((element) => {\r\n\t\t\telement.classList.remove(\"tabulator-movingrow-receiving\");\r\n\t\t\telement.removeEventListener(\"mouseup\", element.tabulatorElementDropEvent);\r\n\t\t\tdelete element.tabulatorElementDropEvent;\r\n\t\t});\r\n\t}\r\n\r\n\t//accept incomming connection\r\n\tconnect(table, row){\r\n\t\tif(!this.connectedTable){\r\n\t\t\tthis.connectedTable = table;\r\n\t\t\tthis.connectedRow = row;\r\n\r\n\t\t\tthis.table.element.classList.add(\"tabulator-movingrow-receiving\");\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) => {\r\n\t\t\t\tif(row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup){\r\n\t\t\t\t\trow.getElement().addEventListener(\"mouseup\", row.modules.moveRow.mouseup);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.tableRowDropEvent = this.tableRowDrop.bind(this);\r\n\r\n\t\t\tthis.table.element.addEventListener(\"mouseup\", this.tableRowDropEvent);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivingStart\", row, table);\r\n\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Row Error - Table cannot accept connection, already connected to table:\", this.connectedTable);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//close incomming connection\r\n\tdisconnect(table){\r\n\t\tif(table === this.connectedTable){\r\n\t\t\tthis.connectedTable = false;\r\n\t\t\tthis.connectedRow = false;\r\n\r\n\t\t\tthis.table.element.classList.remove(\"tabulator-movingrow-receiving\");\r\n\r\n\t\t\tthis.table.rowManager.getDisplayRows().forEach((row) =>{\r\n\t\t\t\tif(row.type === \"row\" && row.modules.moveRow && row.modules.moveRow.mouseup){\r\n\t\t\t\t\trow.getElement().removeEventListener(\"mouseup\", row.modules.moveRow.mouseup);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.table.element.removeEventListener(\"mouseup\", this.tableRowDropEvent);\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivingStop\", table);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Row Error - trying to disconnect from non connected table\")\r\n\t\t}\r\n\t}\r\n\r\n\tdropComplete(table, row, success){\r\n\t\tvar sender = false;\r\n\r\n\t\tif(success){\r\n\r\n\t\t\tswitch(typeof this.table.options.movableRowsSender){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tsender = this.senders[this.table.options.movableRowsSender];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\tsender = this.table.options.movableRowsSender;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif(sender){\r\n\t\t\t\tsender.call(this, this.moving.getComponent(), row ? row.getComponent() : undefined, table)\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.options.movableRowsSender){\r\n\t\t\t\t\tconsole.warn(\"Mover Row Error - no matching sender found:\", this.table.options.movableRowsSender);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchExternal(\"movableRowsSent\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"movableRowsSentFailed\", this.moving.getComponent(), row ? row.getComponent() : undefined, table);\r\n\t\t}\r\n\r\n\t\tthis.endMove();\r\n\t}\r\n\r\n\ttableRowDrop(e, row){\r\n\t\tvar receiver = false,\r\n\t\tsuccess = false;\r\n\r\n\t\te.stopImmediatePropagation();\r\n\r\n\t\tswitch(typeof this.table.options.movableRowsReceiver){\r\n\t\t\tcase \"string\":\r\n\t\t\treceiver = this.receivers[this.table.options.movableRowsReceiver];\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\treceiver = this.table.options.movableRowsReceiver;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(receiver){\r\n\t\t\tsuccess = receiver.call(this, this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Mover Row Error - no matching receiver found:\", this.table.options.movableRowsReceiver)\r\n\t\t}\r\n\r\n\t\tif(success){\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceived\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"movableRowsReceivedFailed\", this.connectedRow.getComponent(), row ? row.getComponent() : undefined, this.connectedTable);\r\n\t\t}\r\n\r\n\t\tthis.commsSend(this.connectedTable, \"moveRow\", \"dropcomplete\", {\r\n\t\t\trow:row,\r\n\t\t\tsuccess:success,\r\n\t\t});\r\n\t}\r\n\r\n\tcommsReceived(table, action, data){\r\n\t\tswitch(action){\r\n\t\t\tcase \"connect\":\r\n\t\t\treturn this.connect(table, data.row);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"disconnect\":\r\n\t\t\treturn this.disconnect(table);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"dropcomplete\":\r\n\t\t\treturn this.dropComplete(table, data.row, data.success);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMoveRows.prototype.receivers = {\r\n\tinsert:function(fromRow, toRow, fromTable){\r\n\t\tthis.table.addRow(fromRow.getData(), undefined, toRow);\r\n\t\treturn true;\r\n\t},\r\n\r\n\tadd:function(fromRow, toRow, fromTable){\r\n\t\tthis.table.addRow(fromRow.getData());\r\n\t\treturn true;\r\n\t},\r\n\r\n\tupdate:function(fromRow, toRow, fromTable){\r\n\t\tif(toRow){\r\n\t\t\ttoRow.update(fromRow.getData());\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\treplace:function(fromRow, toRow, fromTable){\r\n\t\tif(toRow){\r\n\t\t\tthis.table.addRow(fromRow.getData(), undefined, toRow);\r\n\t\t\ttoRow.delete();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n};\r\n\r\nMoveRows.prototype.senders = {\r\n\tdelete:function(fromRow, toRow, toTable){\r\n\t\tfromRow.delete();\r\n\t}\r\n};\r\n\r\nMoveRows.moduleName = \"moveRow\";\r\n\r\nexport default MoveRows;","export default {};","import Module from '../../core/Module.js';\r\n\r\nimport defaultMutators from './defaults/mutators.js';\r\n\r\nclass Mutator extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.allowedTypes = [\"\", \"data\", \"edit\", \"clipboard\"]; //list of muatation types\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.registerColumnOption(\"mutator\");\r\n\t\tthis.registerColumnOption(\"mutatorParams\");\r\n\t\tthis.registerColumnOption(\"mutatorData\");\r\n\t\tthis.registerColumnOption(\"mutatorDataParams\");\r\n\t\tthis.registerColumnOption(\"mutatorEdit\");\r\n\t\tthis.registerColumnOption(\"mutatorEditParams\");\r\n\t\tthis.registerColumnOption(\"mutatorClipboard\");\r\n\t\tthis.registerColumnOption(\"mutatorClipboardParams\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-value-changing\", this.transformCell.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\tthis.subscribe(\"row-data-init-before\", this.rowDataChanged.bind(this));\r\n\t\tthis.subscribe(\"row-data-changing\", this.rowDataChanged.bind(this));\r\n\t}\r\n\r\n\trowDataChanged(row, tempData, updatedData){\r\n\t\treturn this.transformRow(tempData, \"data\", updatedData);\r\n\t}\r\n\r\n\t//initialize column mutator\r\n\tinitializeColumn(column){\r\n\t\tvar match = false,\r\n\t\tconfig = {};\r\n\r\n\t\tthis.allowedTypes.forEach((type) => {\r\n\t\t\tvar key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\t\tmutator;\r\n\r\n\t\t\tif(column.definition[key]){\r\n\t\t\t\tmutator = this.lookupMutator(column.definition[key]);\r\n\r\n\t\t\t\tif(mutator){\r\n\t\t\t\t\tmatch = true;\r\n\r\n\t\t\t\t\tconfig[key] = {\r\n\t\t\t\t\t\tmutator:mutator,\r\n\t\t\t\t\t\tparams: column.definition[key + \"Params\"] || {},\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(match){\r\n\t\t\tcolumn.modules.mutate = config;\r\n\t\t}\r\n\t}\r\n\r\n\tlookupMutator(value){\r\n\t\tvar mutator = false;\r\n\r\n\t\t//set column mutator\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Mutator.mutators[value]){\r\n\t\t\t\tmutator = Mutator.mutators[value];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Mutator Error - No such mutator found, ignoring: \", value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tmutator = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn mutator;\r\n\t}\r\n\r\n\t//apply mutator to row\r\n\ttransformRow(data, type, updatedData){\r\n\t\tvar key = \"mutator\" + (type.charAt(0).toUpperCase() + type.slice(1)),\r\n\t\tvalue;\r\n\r\n\t\tif(this.enabled){\r\n\r\n\t\t\tthis.table.columnManager.traverse((column) => {\r\n\t\t\t\tvar mutator, params, component;\r\n\r\n\t\t\t\tif(column.modules.mutate){\r\n\t\t\t\t\tmutator = column.modules.mutate[key] || column.modules.mutate.mutator || false;\r\n\r\n\t\t\t\t\tif(mutator){\r\n\t\t\t\t\t\tvalue = column.getFieldValue(typeof updatedData !== \"undefined\" ? updatedData : data);\r\n\r\n\t\t\t\t\t\tif(type == \"data\" || typeof value !== \"undefined\"){\r\n\t\t\t\t\t\t\tcomponent = column.getComponent();\r\n\t\t\t\t\t\t\tparams = typeof mutator.params === \"function\" ? mutator.params(value, data, type, component) : mutator.params;\r\n\t\t\t\t\t\t\tcolumn.setFieldValue(data, mutator.mutator(value, data, type, params, component));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//apply mutator to new cell value\r\n\ttransformCell(cell, value){\r\n\t\tif(cell.column.modules.mutate){\r\n\t\t\tvar mutator = cell.column.modules.mutate.mutatorEdit || cell.column.modules.mutate.mutator || false,\r\n\t\t\ttempData = {};\r\n\r\n\t\t\tif(mutator){\r\n\t\t\t\ttempData = Object.assign(tempData, cell.row.getData());\r\n\t\t\t\tcell.column.setFieldValue(tempData, value);\r\n\t\t\t\treturn mutator.mutator(value, tempData, \"edit\", mutator.params, cell.getComponent());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tenable(){\r\n\t\tthis.enabled = true;\r\n\t}\r\n\r\n\tdisable(){\r\n\t\tthis.enabled = false;\r\n\t}\r\n}\r\n\r\nMutator.moduleName = \"mutator\";\r\n\r\n//load defaults\r\nMutator.mutators = defaultMutators;\r\n\r\nexport default Mutator;","import Module from '../../core/Module.js';\r\n\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nclass Page extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = \"local\";\r\n\t\tthis.progressiveLoad = false;\r\n\r\n\t\tthis.size = 0;\r\n\t\tthis.page = 1;\r\n\t\tthis.count = 5;\r\n\t\tthis.max = 1;\r\n\r\n\t\tthis.displayIndex = 0; //index in display pipeline\r\n\r\n\t\tthis.initialLoad = true;\r\n\t\tthis.dataChanging = false; //flag to check if data is being changed by this module\r\n\r\n\t\tthis.pageSizes = [];\r\n\r\n\t\tthis.registerTableOption(\"pagination\", false); //set pagination type\r\n\t\tthis.registerTableOption(\"paginationMode\", \"local\"); //local or remote pagination\r\n\t\tthis.registerTableOption(\"paginationSize\", false); //set number of rows to a page\r\n\t\tthis.registerTableOption(\"paginationInitialPage\", 1); //initial page to show on load\r\n\t\tthis.registerTableOption(\"paginationButtonCount\", 5);  // set count of page button\r\n\t\tthis.registerTableOption(\"paginationSizeSelector\", false); //add pagination size selector element\r\n\t\tthis.registerTableOption(\"paginationElement\", false); //element to hold pagination numbers\r\n\t\t// this.registerTableOption(\"paginationDataSent\", {}); //pagination data sent to the server\r\n\t\t// this.registerTableOption(\"paginationDataReceived\", {}); //pagination data received from the server\r\n\t\tthis.registerTableOption(\"paginationAddRow\", \"page\"); //add rows on table or page\r\n\r\n\t\tthis.registerTableOption(\"progressiveLoad\", false); //progressive loading\r\n\t\tthis.registerTableOption(\"progressiveLoadDelay\", 0); //delay between requests\r\n\t\tthis.registerTableOption(\"progressiveLoadScrollMargin\", 0); //margin before scroll begins\r\n\r\n\t\tthis.registerTableFunction(\"setMaxPage\", this.setMaxPage.bind(this));\r\n\t\tthis.registerTableFunction(\"setPage\", this.setPage.bind(this));\r\n\t\tthis.registerTableFunction(\"setPageToRow\", this.userSetPageToRow.bind(this));\r\n\t\tthis.registerTableFunction(\"setPageSize\", this.userSetPageSize.bind(this));\r\n\t\tthis.registerTableFunction(\"getPageSize\", this.getPageSize.bind(this));\r\n\t\tthis.registerTableFunction(\"previousPage\", this.previousPage.bind(this));\r\n\t\tthis.registerTableFunction(\"nextPage\", this.nextPage.bind(this));\r\n\t\tthis.registerTableFunction(\"getPage\", this.getPage.bind(this));\r\n\t\tthis.registerTableFunction(\"getPageMax\", this.getPageMax.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"pageTo\", this.setPageToRow.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\tthis.subscribe(\"row-deleted\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"row-adding-position\", this.rowAddingPosition.bind(this));\r\n\t\t\tthis.subscribe(\"row-added\", this.rowsUpdated.bind(this));\r\n\t\t\tthis.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\r\n\r\n\t\t\tif(this.table.options.paginationMode === \"remote\"){\r\n\t\t\t\tthis.subscribe(\"data-params\", this.remotePageParams.bind(this));\r\n\t\t\t\tthis.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.progressiveLoad){\r\n\t\t\t\tconsole.error(\"Progressive Load Error - Pagination and progressive load cannot be used at the same time\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.registerDisplayHandler(this.restOnRenderBefore.bind(this), 40);\r\n\t\t\tthis.registerDisplayHandler(this.getRows.bind(this), 50);\r\n\r\n\t\t\tthis.createElements();\r\n\t\t\tthis.initializePaginator();\r\n\t\t}else if(this.table.options.progressiveLoad){\r\n\t\t\tthis.subscribe(\"data-params\", this.remotePageParams.bind(this));\r\n\t\t\tthis.subscribe(\"data-loaded\", this._parseRemoteData.bind(this));\r\n\t\t\tthis.subscribe(\"table-built\", this.calculatePageSizes.bind(this));\r\n\t\t\tthis.subscribe(\"data-processed\", this.initialLoadComplete.bind(this));\r\n\r\n\t\t\tthis.initializeProgressive(this.table.options.progressiveLoad)\r\n\r\n\t\t\tif(this.table.options.progressiveLoad === \"scroll\"){\r\n\t\t\t\tthis.subscribe(\"scroll-vertical\", this.scrollVertical.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowAddingPosition(row, top){\r\n\t\tvar rowManager = this.table.rowManager,\r\n\t\tdispRows = rowManager.getDisplayRows(),\r\n\t\tindex;\r\n\r\n\t\tif(top){\r\n\t\t\tif(dispRows.length){\r\n\t\t\t\tindex = dispRows[0];\r\n\t\t\t}else{\r\n\t\t\t\tif(rowManager.activeRows.length){\r\n\t\t\t\t\tindex = rowManager.activeRows[rowManager.activeRows.length-1];\r\n\t\t\t\t\ttop = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(dispRows.length){\r\n\t\t\t\tindex = dispRows[dispRows.length - 1];\r\n\t\t\t\ttop = dispRows.length < this.size ? false : true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {index, top}\r\n\t}\r\n\r\n\tcalculatePageSizes(){\r\n\t\tvar testElRow, testElCell;\r\n\r\n\t\tif(this.table.options.paginationSize){\r\n\t\t\tthis.size = this.table.options.paginationSize;\r\n\t\t}else{\r\n\t\t\ttestElRow = document.createElement(\"div\");\r\n\t\t\ttestElRow.classList.add(\"tabulator-row\");\r\n\t\t\ttestElRow.style.visibility = \"hidden\";\r\n\r\n\t\t\ttestElCell = document.createElement(\"div\");\r\n\t\t\ttestElCell.classList.add(\"tabulator-cell\");\r\n\t\t\ttestElCell.innerHTML = \"Page Row Test\";\r\n\r\n\t\t\ttestElRow.appendChild(testElCell);\r\n\r\n\t\t\tthis.table.rowManager.getTableElement().appendChild(testElRow);\r\n\r\n\t\t\tthis.size = Math.floor(this.table.rowManager.getElement().clientHeight / testElRow.offsetHeight);\r\n\r\n\t\t\tthis.table.rowManager.getTableElement().removeChild(testElRow);\r\n\t\t}\r\n\r\n\t\tthis.generatePageSizeSelectList();\r\n\t}\r\n\r\n\tinitialLoadComplete(){\r\n\t\tthis.initialLoad = false;\r\n\t}\r\n\r\n\tremotePageParams(data, config, silent, params){\r\n\t\tif(!this.initialLoad){\r\n\t\t\tif((this.progressiveLoad && !silent) || (!this.progressiveLoad && !this.dataChanging)){\r\n\t\t\t\tthis.reset(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//configure request params\r\n\t\tparams.page = this.page;\r\n\r\n\t\t//set page size if defined\r\n\t\tif(this.size){\r\n\t\t\tparams.size = this.size;\r\n\t\t}\r\n\r\n\t\treturn params;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tuserSetPageToRow(row){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\trow = this.rowManager.findRow(row);\r\n\r\n\t\t\tif(row){\r\n\t\t\t\treturn this.setPageToRow(row)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Promise.reject();\r\n\t}\r\n\r\n\tuserSetPageSize(size){\r\n\t\tif(this.table.options.pagination){\r\n\t\t\tthis.setPageSize(size);\r\n\t\t\treturn this.setPage(1);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tscrollVertical(top, dir){\r\n\t\tvar element, diff, margin;\r\n\t\tif(!dir && !this.table.dataLoader.loading){\r\n\t\t\telement = this.table.rowManager.getElement();\r\n\t\t\tdiff = element.scrollHeight - element.clientHeight - top;\r\n\t\t\tmargin = this.table.options.progressiveLoadScrollMargin || (element.clientHeight * 2);\r\n\r\n\t\t\tif(diff < margin){\r\n\t\t\t\tthis.nextPage()\r\n\t\t\t\t.catch(() => {}); //consume the exception thrown when on the last page\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trestOnRenderBefore(rows, renderInPosition){\r\n\t\tif(!renderInPosition){\r\n\t\t\tif(this.mode === \"local\"){\r\n\t\t\t\tthis.reset();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\trowsUpdated(){\r\n\t\tthis.refreshData(true, \"all\");\r\n\t}\r\n\r\n\tcreateElements(){\r\n\t\tvar button;\r\n\r\n\t\tthis.element = document.createElement(\"span\");\r\n\t\tthis.element.classList.add(\"tabulator-paginator\");\r\n\r\n\t\tthis.pagesElement = document.createElement(\"span\");\r\n\t\tthis.pagesElement.classList.add(\"tabulator-pages\");\r\n\r\n\t\tbutton = document.createElement(\"button\");\r\n\t\tbutton.classList.add(\"tabulator-page\");\r\n\t\tbutton.setAttribute(\"type\", \"button\");\r\n\t\tbutton.setAttribute(\"role\", \"button\");\r\n\t\tbutton.setAttribute(\"aria-label\", \"\");\r\n\t\tbutton.setAttribute(\"title\", \"\");\r\n\r\n\t\tthis.firstBut = button.cloneNode(true);\r\n\t\tthis.firstBut.setAttribute(\"data-page\", \"first\");\r\n\r\n\t\tthis.prevBut = button.cloneNode(true);\r\n\t\tthis.prevBut.setAttribute(\"data-page\", \"prev\");\r\n\r\n\t\tthis.nextBut = button.cloneNode(true);\r\n\t\tthis.nextBut.setAttribute(\"data-page\", \"next\");\r\n\r\n\t\tthis.lastBut = button.cloneNode(true);\r\n\t\tthis.lastBut.setAttribute(\"data-page\", \"last\");\r\n\r\n\t\tif(this.table.options.paginationSizeSelector){\r\n\t\t\tthis.pageSizeSelect = document.createElement(\"select\");\r\n\t\t\tthis.pageSizeSelect.classList.add(\"tabulator-page-size\");\r\n\t\t}\r\n\t}\r\n\r\n\tgeneratePageSizeSelectList(){\r\n\t\tvar pageSizes = [];\r\n\r\n\t\tif(this.pageSizeSelect){\r\n\r\n\t\t\tif(Array.isArray(this.table.options.paginationSizeSelector)){\r\n\t\t\t\tpageSizes = this.table.options.paginationSizeSelector;\r\n\t\t\t\tthis.pageSizes = pageSizes;\r\n\r\n\t\t\t\tif(this.pageSizes.indexOf(this.size) == -1){\r\n\t\t\t\t\tpageSizes.unshift(this.size);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(this.pageSizes.indexOf(this.size) == -1){\r\n\t\t\t\t\tpageSizes = [];\r\n\r\n\t\t\t\t\tfor (let i = 1; i < 5; i++){\r\n\t\t\t\t\t\tpageSizes.push(this.size * i);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.pageSizes = pageSizes;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpageSizes = this.pageSizes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.pageSizeSelect.firstChild) this.pageSizeSelect.removeChild(this.pageSizeSelect.firstChild);\r\n\r\n\t\t\tpageSizes.forEach((item) => {\r\n\t\t\t\tvar itemEl = document.createElement(\"option\");\r\n\t\t\t\titemEl.value = item;\r\n\r\n\t\t\t\tif(item === true){\r\n\t\t\t\t\tthis.langBind(\"pagination|all\", function(value){\r\n\t\t\t\t\t\titemEl.innerHTML = value;\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\titemEl.innerHTML = item;\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\tthis.pageSizeSelect.appendChild(itemEl);\r\n\t\t\t});\r\n\r\n\t\t\tthis.pageSizeSelect.value = this.size;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup pageination\r\n\tinitializePaginator(hidden){\r\n\t\tvar pageSelectLabel;\r\n\r\n\t\tif(!hidden){\r\n\t\t\t//build pagination element\r\n\r\n\t\t\t//bind localizations\r\n\t\t\tthis.langBind(\"pagination|first\", (value) => {\r\n\t\t\t\tthis.firstBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|first_title\", (value) => {\r\n\t\t\t\tthis.firstBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.firstBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|prev\", (value) => {\r\n\t\t\t\tthis.prevBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|prev_title\", (value) => {\r\n\t\t\t\tthis.prevBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.prevBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|next\", (value) => {\r\n\t\t\t\tthis.nextBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|next_title\", (value) => {\r\n\t\t\t\tthis.nextBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.nextBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|last\", (value) => {\r\n\t\t\t\tthis.lastBut.innerHTML = value;\r\n\t\t\t});\r\n\r\n\t\t\tthis.langBind(\"pagination|last_title\", (value) => {\r\n\t\t\t\tthis.lastBut.setAttribute(\"aria-label\", value);\r\n\t\t\t\tthis.lastBut.setAttribute(\"title\", value);\r\n\t\t\t});\r\n\r\n\t\t\t//click bindings\r\n\t\t\tthis.firstBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.setPage(1)\r\n\t\t\t});\r\n\r\n\t\t\tthis.prevBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.previousPage()\r\n\t\t\t});\r\n\r\n\t\t\tthis.nextBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.nextPage()\r\n\t\t\t});\r\n\r\n\t\t\tthis.lastBut.addEventListener(\"click\", () => {\r\n\t\t\t\tthis.setPage(this.max)\r\n\t\t\t});\r\n\r\n\t\t\tif(this.table.options.paginationElement){\r\n\t\t\t\tthis.element = this.table.options.paginationElement;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.pageSizeSelect){\r\n\t\t\t\tpageSelectLabel = document.createElement(\"label\");\r\n\r\n\t\t\t\tthis.langBind(\"pagination|page_size\", (value) => {\r\n\t\t\t\t\tthis.pageSizeSelect.setAttribute(\"aria-label\", value);\r\n\t\t\t\t\tthis.pageSizeSelect.setAttribute(\"title\", value);\r\n\t\t\t\t\tpageSelectLabel.innerHTML = value;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.element.appendChild(pageSelectLabel);\r\n\t\t\t\tthis.element.appendChild(this.pageSizeSelect);\r\n\r\n\t\t\t\tthis.pageSizeSelect.addEventListener(\"change\", (e) => {\r\n\t\t\t\t\tthis.setPageSize(this.pageSizeSelect.value == \"true\" ? true : this.pageSizeSelect.value);\r\n\t\t\t\t\tthis.setPage(1)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t//append to DOM\r\n\t\t\tthis.element.appendChild(this.firstBut);\r\n\t\t\tthis.element.appendChild(this.prevBut);\r\n\t\t\tthis.element.appendChild(this.pagesElement);\r\n\t\t\tthis.element.appendChild(this.nextBut);\r\n\t\t\tthis.element.appendChild(this.lastBut);\r\n\r\n\t\t\tif(!this.table.options.paginationElement && !hidden){\r\n\t\t\t\tthis.table.footerManager.append(this.element, this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.page = this.table.options.paginationInitialPage;\r\n\t\t\tthis.count = this.table.options.paginationButtonCount;\r\n\t\t}\r\n\r\n\t\t//set default values\r\n\t\tthis.mode = this.table.options.paginationMode;\r\n\t}\r\n\r\n\tinitializeProgressive(mode){\r\n\t\tthis.initializePaginator(true);\r\n\t\tthis.mode = \"progressive_\" + mode;\r\n\t\tthis.progressiveLoad = true;\r\n\t}\r\n\r\n\ttrackChanges(){\r\n\t\tthis.dispatch(\"page-changed\");\r\n\t}\r\n\r\n\tsetDisplayIndex(index){\r\n\t\tthis.displayIndex = index;\r\n\t}\r\n\r\n\tgetDisplayIndex(){\r\n\t\treturn this.displayIndex;\r\n\t}\r\n\r\n\t//calculate maximum page from number of rows\r\n\tsetMaxRows(rowCount){\r\n\t\tif(!rowCount){\r\n\t\t\tthis.max = 1;\r\n\t\t}else{\r\n\t\t\tthis.max = this.size === true ?  1 : Math.ceil(rowCount/this.size);\r\n\t\t}\r\n\r\n\t\tif(this.page > this.max){\r\n\t\t\tthis.page = this.max;\r\n\t\t}\r\n\t}\r\n\r\n\t//reset to first page without triggering action\r\n\treset(force){\r\n\t\tif(!this.initialLoad){\r\n\t\t\tif(this.mode == \"local\" || force){\r\n\t\t\t\tthis.page = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set the maximum page\r\n\tsetMaxPage(max){\r\n\r\n\t\tmax = parseInt(max);\r\n\r\n\t\tthis.max = max || 1;\r\n\r\n\t\tif(this.page > this.max){\r\n\t\t\tthis.page = this.max;\r\n\t\t\tthis.trigger();\r\n\t\t}\r\n\t}\r\n\r\n\t//set current page number\r\n\tsetPage(page){\r\n\t\tswitch(page){\r\n\t\t\tcase \"first\":\r\n\t\t\treturn this.setPage(1);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"prev\":\r\n\t\t\treturn this.previousPage();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"next\":\r\n\t\t\treturn this.nextPage();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"last\":\r\n\t\t\treturn this.setPage(this.max);\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\r\n\t\tpage = parseInt(page);\r\n\r\n\t\tif((page > 0 && page <= this.max) || this.mode !== \"local\"){\r\n\t\t\tthis.page = page;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Requested page is out of range of 1 - \" + this.max + \":\", page);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tsetPageToRow(row){\r\n\t\tvar rows = this.table.rowManager.getDisplayRows(this.displayIndex - 1);\r\n\t\tvar index = rows.indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tvar page = this.size === true ? 1 : Math.ceil((index + 1) / this.size);\r\n\r\n\t\t\treturn this.setPage(page)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Requested row is not visible\");\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tsetPageSize(size){\r\n\t\tif(size !== true){\r\n\t\t\tsize = parseInt(size);\r\n\t\t}\r\n\r\n\t\tif(size > 0){\r\n\t\t\tthis.size = size;\r\n\t\t}\r\n\r\n\t\tif(this.pageSizeSelect){\r\n\t\t\t// this.pageSizeSelect.value = size;\r\n\t\t\tthis.generatePageSizeSelectList();\r\n\t\t}\r\n\r\n\t\tthis.trackChanges();\r\n\t}\r\n\r\n\t//setup the pagination buttons\r\n\t_setPageButtons(){\r\n\t\tlet leftSize = Math.floor((this.count-1) / 2);\r\n\t\tlet rightSize = Math.ceil((this.count-1) / 2);\r\n\t\tlet min = this.max - this.page + leftSize + 1 < this.count ? this.max-this.count+1: Math.max(this.page-leftSize,1);\r\n\t\tlet max = this.page <= rightSize? Math.min(this.count, this.max) :Math.min(this.page+rightSize, this.max);\r\n\r\n\t\twhile(this.pagesElement.firstChild) this.pagesElement.removeChild(this.pagesElement.firstChild);\r\n\r\n\t\tif(this.page == 1){\r\n\t\t\tthis.firstBut.disabled = true;\r\n\t\t\tthis.prevBut.disabled = true;\r\n\t\t}else{\r\n\t\t\tthis.firstBut.disabled = false;\r\n\t\t\tthis.prevBut.disabled = false;\r\n\t\t}\r\n\r\n\t\tif(this.page == this.max){\r\n\t\t\tthis.lastBut.disabled = true;\r\n\t\t\tthis.nextBut.disabled = true;\r\n\t\t}else{\r\n\t\t\tthis.lastBut.disabled = false;\r\n\t\t\tthis.nextBut.disabled = false;\r\n\t\t}\r\n\r\n\t\tfor(let i = min; i <= max; i++){\r\n\t\t\tif(i>0 && i <= this.max){\r\n\t\t\t\tthis.pagesElement.appendChild(this._generatePageButton(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.footerRedraw();\r\n\t}\r\n\r\n\t_generatePageButton(page){\r\n\t\tvar button = document.createElement(\"button\");\r\n\r\n\t\tbutton.classList.add(\"tabulator-page\");\r\n\t\tif(page == this.page){\r\n\t\t\tbutton.classList.add(\"active\");\r\n\t\t}\r\n\r\n\t\tbutton.setAttribute(\"type\", \"button\");\r\n\t\tbutton.setAttribute(\"role\", \"button\");\r\n\r\n\t\tthis.langBind(\"pagination|page_title\", (value) => {\r\n\t\t\tbutton.setAttribute(\"aria-label\", value + \" \" + page);\r\n\t\t\tbutton.setAttribute(\"title\", value + \" \" + page);\r\n\t\t});\r\n\r\n\t\tbutton.setAttribute(\"data-page\", page);\r\n\t\tbutton.textContent = page;\r\n\r\n\t\tbutton.addEventListener(\"click\", (e) => {\r\n\t\t\tthis.setPage(page)\r\n\t\t});\r\n\r\n\t\treturn button;\r\n\t}\r\n\r\n\t//previous page\r\n\tpreviousPage(){\r\n\t\tif(this.page > 1){\r\n\t\t\tthis.page--;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger()\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Pagination Error - Previous page would be less than page 1:\", 0);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t//next page\r\n\tnextPage(){\r\n\t\tif(this.page < this.max){\r\n\t\t\tthis.page++;\r\n\r\n\t\t\tthis.trackChanges();\r\n\r\n\t\t\treturn this.trigger();\r\n\r\n\t\t}else{\r\n\t\t\tif(!this.progressiveLoad){\r\n\t\t\t\tconsole.warn(\"Pagination Error - Next page would be greater than maximum page of \" + this.max + \":\", this.max + 1);\r\n\t\t\t}\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t//return current page number\r\n\tgetPage(){\r\n\t\treturn this.page;\r\n\t}\r\n\r\n\t//return max page number\r\n\tgetPageMax(){\r\n\t\treturn this.max;\r\n\t}\r\n\r\n\tgetPageSize(size){\r\n\t\treturn this.size;\r\n\t}\r\n\r\n\tgetMode(){\r\n\t\treturn this.mode;\r\n\t}\r\n\r\n\t//return appropriate rows for current page\r\n\tgetRows(data){\r\n\t\tvar output, start, end;\r\n\r\n\t\tif(this.mode == \"local\"){\r\n\t\t\toutput = [];\r\n\r\n\t\t\tthis.setMaxRows(data.length);\r\n\r\n\t\t\tif(this.size === true){\r\n\t\t\t\tstart = 0;\r\n\t\t\t\tend = data.length;\r\n\t\t\t}else{\r\n\t\t\t\tstart = this.size * (this.page - 1);\r\n\t\t\t\tend = start + parseInt(this.size);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._setPageButtons();\r\n\r\n\t\t\tfor(let i = start; i < end; i++){\r\n\t\t\t\tif(data[i]){\r\n\t\t\t\t\toutput.push(data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\t\t}else{\r\n\t\t\tthis._setPageButtons();\r\n\r\n\t\t\treturn data.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\ttrigger(){\r\n\t\tvar left;\r\n\r\n\t\tswitch(this.mode){\r\n\t\t\tcase \"local\":\r\n\t\t\tleft = this.table.rowManager.scrollLeft;\r\n\r\n\t\t\tthis.refreshData();\r\n\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\r\n\t\t\tthis.dispatchExternal(\"pageLoaded\", this.getPage());\r\n\r\n\t\t\treturn Promise.resolve();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"remote\":\r\n\t\t\tthis.dataChanging = true;\r\n\t\t\treturn this.reloadData(null)\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.dataChanging = false;\r\n\t\t\t})\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"progressive_load\":\r\n\t\t\tcase \"progressive_scroll\":\r\n\t\t\treturn this.reloadData(null, true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tconsole.warn(\"Pagination Error - no such pagination mode:\", this.mode);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\t_parseRemoteData(data){\r\n\t\tvar left, data, margin;\r\n\r\n\t\tif(typeof data.last_page === \"undefined\"){\r\n\t\t\tconsole.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").last_page || \"last_page\") + \"' property\");\r\n\t\t}\r\n\r\n\t\tif(data.data){\r\n\t\t\tthis.max = parseInt(data.last_page) || 1;\r\n\r\n\t\t\tif(this.progressiveLoad){\r\n\t\t\t\tswitch(this.mode){\r\n\t\t\t\t\tcase \"progressive_load\":\r\n\r\n\t\t\t\t\tif(this.page == 1){\r\n\t\t\t\t\t\tthis.table.rowManager.setData(data.data, false, this.page == 1)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.table.rowManager.addRows(data.data);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(this.page < this.max){\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.nextPage();\r\n\t\t\t\t\t\t}, this.table.options.progressiveLoadDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"progressive_scroll\":\r\n\t\t\t\t\tdata = this.page === 1 ? data.data : this.table.rowManager.getData().concat(data.data);\r\n\r\n\t\t\t\t\tthis.table.rowManager.setData(data, this.page !== 1, this.page == 1);\r\n\r\n\t\t\t\t\tmargin = this.table.options.progressiveLoadScrollMargin || (this.table.rowManager.element.clientHeight * 2);\r\n\r\n\t\t\t\t\tif(this.table.rowManager.element.scrollHeight <= (this.table.rowManager.element.clientHeight + margin)){\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.nextPage();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\t// left = this.table.rowManager.scrollLeft;\r\n\t\t\t\tthis.dispatchExternal(\"pageLoaded\",  this.getPage());\r\n\t\t\t\t// this.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\t// this.table.columnManager.scrollHorizontal(left);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Remote Pagination Error - Server response missing '\" + (this.options(\"dataReceiveParams\").data || \"data\") + \"' property\");\r\n\t\t}\r\n\r\n\t\treturn data.data;\r\n\t}\r\n\r\n\t//handle the footer element being redrawn\r\n\tfooterRedraw(){\r\n\t\tvar footer = this.table.footerManager.element;\r\n\r\n\t\tif((Math.ceil(footer.clientWidth) - footer.scrollWidth) < 0){\r\n\t\t\tthis.pagesElement.style.display = 'none';\r\n\t\t}else{\r\n\t\t\tthis.pagesElement.style.display = '';\r\n\r\n\t\t\tif((Math.ceil(footer.clientWidth) - footer.scrollWidth) < 0){\r\n\t\t\t\tthis.pagesElement.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nPage.moduleName = \"page\";\r\n\r\nexport default Page;","// read peristence information from storage\r\nexport default {\r\n\tlocal:function(id, type){\r\n\t\tvar data = localStorage.getItem(id + \"-\" + type);\r\n\r\n\t\treturn data ? JSON.parse(data) : false;\r\n\t},\r\n\tcookie:function(id, type){\r\n\t\tvar cookie = document.cookie,\r\n\t\tkey = id + \"-\" + type,\r\n\t\tcookiePos = cookie.indexOf(key + \"=\"),\r\n\t\tend, data;\r\n\r\n\t\t//if cookie exists, decode and load column data into tabulator\r\n\t\tif(cookiePos > -1){\r\n\t\t\tcookie = cookie.substr(cookiePos);\r\n\r\n\t\t\tend = cookie.indexOf(\";\");\r\n\r\n\t\t\tif(end > -1){\r\n\t\t\t\tcookie = cookie.substr(0, end);\r\n\t\t\t}\r\n\r\n\t\t\tdata = cookie.replace(key + \"=\", \"\");\r\n\t\t}\r\n\r\n\t\treturn data ? JSON.parse(data) : false;\r\n\t}\r\n};","//write persistence information to storage\r\nexport default {\r\n\tlocal:function(id, type, data){\r\n\t\tlocalStorage.setItem(id + \"-\" + type, JSON.stringify(data));\r\n\t},\r\n\tcookie:function(id, type, data){\r\n\t\tvar expireDate = new Date();\r\n\r\n\t\texpireDate.setDate(expireDate.getDate() + 10000);\r\n\r\n\t\tdocument.cookie = id + \"-\" + type + \"=\" + JSON.stringify(data) + \"; expires=\" + expireDate.toUTCString();\r\n\t}\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultReaders from './defaults/readers.js';\r\nimport defaultWriters from './defaults/writers.js';\r\n\r\nclass Persistence extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.mode = \"\";\r\n\t\tthis.id = \"\";\r\n\t\t// this.persistProps = [\"field\", \"width\", \"visible\"];\r\n\t\tthis.defWatcherBlock = false;\r\n\t\tthis.config = {};\r\n\t\tthis.readFunc = false;\r\n\t\tthis.writeFunc = false;\r\n\r\n\t\tthis.registerTableOption(\"persistence\", false);\r\n\t\tthis.registerTableOption(\"persistenceID\", \"\"); //key for persistent storage\r\n\t\tthis.registerTableOption(\"persistenceMode\", true); //mode for storing persistence information\r\n\t\tthis.registerTableOption(\"persistenceReaderFunc\", false); //function for handling persistence data reading\r\n\t\tthis.registerTableOption(\"persistenceWriterFunc\", false); //function for handling persistence data writing\r\n\t}\r\n\r\n\t// Test for whether localStorage is available for use.\r\n\tlocalStorageTest() {\r\n\t\tvar  testKey =  \"_tabulator_test\";\r\n\r\n\t\ttry {\r\n\t\t\twindow.localStorage.setItem( testKey, testKey);\r\n\t\t\twindow.localStorage.removeItem( testKey );\r\n\t\t\treturn true;\r\n\t\t} catch(e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup parameters\r\n\tinitialize(){\r\n\t\tif(this.table.options.persistence){\r\n\t\t\t//determine persistent layout storage type\r\n\t\t\tvar mode = this.table.options.persistenceMode,\r\n\t\t\tid = this.table.options.persistenceID,\r\n\t\t\tretreivedData;\r\n\r\n\t\t\tthis.mode = mode !== true ?  mode : (this.localStorageTest() ? \"local\" : \"cookie\");\r\n\r\n\t\t\tif(this.table.options.persistenceReaderFunc){\r\n\t\t\t\tif(typeof this.table.options.persistenceReaderFunc === \"function\"){\r\n\t\t\t\t\tthis.readFunc = this.table.options.persistenceReaderFunc;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Persistence.readers[this.table.options.persistenceReaderFunc]){\r\n\t\t\t\t\t\tthis.readFunc = Persistence.readers[this.table.options.persistenceReaderFunc];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Persistence Read Error - invalid reader set\", this.table.options.persistenceReaderFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(Persistence.readers[this.mode]){\r\n\t\t\t\t\tthis.readFunc = Persistence.readers[this.mode];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Persistence Read Error - invalid reader set\", this.mode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.table.options.persistenceWriterFunc){\r\n\t\t\t\tif(typeof this.table.options.persistenceWriterFunc === \"function\"){\r\n\t\t\t\t\tthis.writeFunc = this.table.options.persistenceWriterFunc;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Persistence.writers[this.table.options.persistenceWriterFunc]){\r\n\t\t\t\t\t\tthis.writeFunc = Persistence.writers[this.table.options.persistenceWriterFunc];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Persistence Write Error - invalid reader set\", this.table.options.persistenceWriterFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(Persistence.writers[this.mode]){\r\n\t\t\t\t\tthis.writeFunc = Persistence.writers[this.mode];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Persistence Write Error - invalid writer set\", this.mode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//set storage tag\r\n\t\t\tthis.id = \"tabulator-\" + (id || (this.table.element.getAttribute(\"id\") || \"\"));\r\n\r\n\t\t\tthis.config = {\r\n\t\t\t\tsort:this.table.options.persistence === true || this.table.options.persistence.sort,\r\n\t\t\t\tfilter:this.table.options.persistence === true || this.table.options.persistence.filter,\r\n\t\t\t\tgroup:this.table.options.persistence === true || this.table.options.persistence.group,\r\n\t\t\t\tpage:this.table.options.persistence === true || this.table.options.persistence.page,\r\n\t\t\t\tcolumns:this.table.options.persistence === true ? [\"title\", \"width\", \"visible\"] : this.table.options.persistence.columns,\r\n\t\t\t};\r\n\r\n\t\t\t//load pagination data if needed\r\n\t\t\tif(this.config.page){\r\n\t\t\t\tretreivedData = this.retreiveData(\"page\");\r\n\r\n\t\t\t\tif(retreivedData){\r\n\t\t\t\t\tif(typeof retreivedData.paginationSize !== \"undefined\" && (this.config.page === true || this.config.page.size)){\r\n\t\t\t\t\t\tthis.table.options.paginationSize = retreivedData.paginationSize;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof retreivedData.paginationInitialPage !== \"undefined\" && (this.config.page === true || this.config.page.page)){\r\n\t\t\t\t\t\tthis.table.options.paginationInitialPage = retreivedData.paginationInitialPage;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//load group data if needed\r\n\t\t\tif(this.config.group){\r\n\t\t\t\tretreivedData = this.retreiveData(\"group\");\r\n\r\n\t\t\t\tif(retreivedData){\r\n\t\t\t\t\tif(typeof retreivedData.groupBy !== \"undefined\" && (this.config.group === true || this.config.group.groupBy)){\r\n\t\t\t\t\t\tthis.table.options.groupBy = retreivedData.groupBy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof retreivedData.groupStartOpen !== \"undefined\" && (this.config.group === true || this.config.group.groupStartOpen)){\r\n\t\t\t\t\t\tthis.table.options.groupStartOpen = retreivedData.groupStartOpen;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof retreivedData.groupHeader !== \"undefined\" && (this.config.group === true || this.config.group.groupHeader)){\r\n\t\t\t\t\t\tthis.table.options.groupHeader = retreivedData.groupHeader;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.columns){\r\n\t\t\t\tthis.table.options.columns = this.load(\"columns\", this.table.options.columns);\r\n\t\t\t\tthis.subscribe(\"column-init\", this.initializeColumn.bind(this));\r\n\t\t\t\tthis.subscribe(\"column-show\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"column-hide\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"column-moved\", this.save.bind(this, \"columns\"));\r\n\t\t\t\tthis.subscribe(\"table-built\", this.tableBuilt.bind(this), 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-redraw\", this.tableRedraw.bind(this));\r\n\r\n\r\n\t\t\tthis.subscribe(\"filter-changed\", this.eventSave.bind(this, \"filter\"));\r\n\t\t\tthis.subscribe(\"sort-changed\", this.eventSave.bind(this, \"sort\"));\r\n\t\t\tthis.subscribe(\"group-changed\", this.eventSave.bind(this, \"group\"));\r\n\t\t\tthis.subscribe(\"page-changed\", this.eventSave.bind(this, \"page\"));\r\n\t\t\tthis.subscribe(\"column-resized\", this.eventSave.bind(this, \"columns\"));\r\n\t\t\tthis.subscribe(\"layout-refreshed\", this.eventSave.bind(this, \"columns\"));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"getColumnLayout\", this.getColumnLayout.bind(this));\r\n\t\tthis.registerTableFunction(\"setColumnLayout\", this.setColumnLayout.bind(this));\r\n\t}\r\n\r\n\teventSave(type){\r\n\t\tif(this.config[type]){\r\n\t\t\tthis.save(type);\r\n\t\t}\r\n\t}\r\n\r\n\ttableBuilt(){\r\n\t\tvar options = this.table.options,\r\n\t\tsorters, filters;\r\n\r\n\t\tif(this.config.sort){\r\n\t\t\tsorters = this.load(\"sort\");\r\n\r\n\t\t\tif(!sorters === false){\r\n\t\t\t\tthis.table.initialSort = sorters;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.config.filter){\r\n\t\t\tfilters = this.load(\"filter\");\r\n\r\n\t\t\tif(!filters === false){\r\n\t\t\t\tthis.table.initialFilter = filters;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tif(force && this.config.columns){\r\n\t\t\tthis.save(\"columns\");\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tgetColumnLayout(){\r\n\t\treturn this.parseColumns(this.table.columnManager.getColumns());\r\n\t}\r\n\r\n\tsetColumnLayout(layout){\r\n\t\tthis.table.columnManager.setColumns(this.mergeDefinition(this.table.options.columns, layout))\r\n\t\treturn true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumn(column){\r\n\t\tvar def, keys;\r\n\r\n\t\tif(this.config.columns){\r\n\t\t\tthis.defWatcherBlock = true;\r\n\r\n\t\t\tdef = column.getDefinition();\r\n\r\n\t\t\tkeys = this.config.columns === true ? Object.keys(def) : this.config.columns;\r\n\r\n\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\tvar props = Object.getOwnPropertyDescriptor(def, key);\r\n\t\t\t\tvar value = def[key];\r\n\t\t\t\tif(props){\r\n\t\t\t\t\tObject.defineProperty(def, key, {\r\n\t\t\t\t\t\tset: function(newValue){\r\n\t\t\t\t\t\t\tvalue = newValue;\r\n\r\n\t\t\t\t\t\t\tif(!this.defWatcherBlock){\r\n\t\t\t\t\t\t\t\tthis.save(\"columns\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(props.set){\r\n\t\t\t\t\t\t\t\tprops.set(newValue);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tget:function(){\r\n\t\t\t\t\t\t\tif(props.get){\r\n\t\t\t\t\t\t\t\tprops.get();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.defWatcherBlock = false;\r\n\t\t}\r\n\t}\r\n\r\n\t//load saved definitions\r\n\tload(type, current){\r\n\t\tvar data = this.retreiveData(type);\r\n\r\n\t\tif(current){\r\n\t\t\tdata = data ? this.mergeDefinition(current, data) : current;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//retreive data from memory\r\n\tretreiveData(type){\r\n\t\treturn this.readFunc ? this.readFunc(this.id, type) : false;\r\n\t}\r\n\r\n\t//merge old and new column definitions\r\n\tmergeDefinition(oldCols, newCols){\r\n\t\tvar output = [];\r\n\r\n\t\tnewCols = newCols || [];\r\n\r\n\t\tnewCols.forEach((column, to) => {\r\n\t\t\tvar from = this._findColumn(oldCols, column),\r\n\t\t\tkeys;\r\n\r\n\t\t\tif(from){\r\n\t\t\t\tif(this.config.columns === true || this.config.columns == undefined){\r\n\t\t\t\t\tkeys =  Object.keys(from);\r\n\t\t\t\t\tkeys.push(\"width\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tkeys = this.config.columns;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\t\tif(key !== \"columns\" && typeof column[key] !== \"undefined\"){\r\n\t\t\t\t\t\tfrom[key] = column[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(from.columns){\r\n\t\t\t\t\tfrom.columns = this.mergeDefinition(from.columns, column.columns);\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.push(from);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\toldCols.forEach((column, i) => {\r\n\t\t\tvar from = this._findColumn(newCols, column);\r\n\r\n\t\t\tif (!from) {\r\n\t\t\t\tif(output.length>i){\r\n\t\t\t\t\toutput.splice(i, 0, column);\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput.push(column);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//find matching columns\r\n\t_findColumn(columns, subject){\r\n\t\tvar type = subject.columns ? \"group\" : (subject.field ? \"field\" : \"object\");\r\n\r\n\t\treturn columns.find(function(col){\r\n\t\t\tswitch(type){\r\n\t\t\t\tcase \"group\":\r\n\t\t\t\treturn col.title === subject.title && col.columns.length === subject.columns.length;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"field\":\r\n\t\t\t\treturn col.field === subject.field;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\treturn col === subject;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//save data\r\n\tsave(type){\r\n\t\tvar data = {};\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"columns\":\r\n\t\t\tdata = this.parseColumns(this.table.columnManager.getColumns())\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"filter\":\r\n\t\t\tdata = this.table.modules.filter.getFilters();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"sort\":\r\n\t\t\tdata = this.validateSorters(this.table.modules.sort.getSort());\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"group\":\r\n\t\t\tdata = this.getGroupConfig();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"page\":\r\n\t\t\tdata = this.getPageConfig();\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(this.writeFunc){\r\n\t\t\tthis.writeFunc(this.id, type, data);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//ensure sorters contain no function data\r\n\tvalidateSorters(data){\r\n\t\tdata.forEach(function(item){\r\n\t\t\titem.column = item.field;\r\n\t\t\tdelete item.field;\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetGroupConfig(){\r\n\t\tvar data = {};\r\n\r\n\t\tif(this.config.group){\r\n\t\t\tif(this.config.group === true || this.config.group.groupBy){\r\n\t\t\t\tdata.groupBy = this.table.options.groupBy;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.group === true || this.config.group.groupStartOpen){\r\n\t\t\t\tdata.groupStartOpen = this.table.options.groupStartOpen;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.group === true || this.config.group.groupHeader){\r\n\t\t\t\tdata.groupHeader = this.table.options.groupHeader;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetPageConfig(){\r\n\t\tvar data = {};\r\n\r\n\t\tif(this.config.page){\r\n\t\t\tif(this.config.page === true || this.config.page.size){\r\n\t\t\t\tdata.paginationSize = this.table.modules.page.getPageSize();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.config.page === true || this.config.page.page){\r\n\t\t\t\tdata.paginationInitialPage = this.table.modules.page.getPage();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t//parse columns for data to store\r\n\tparseColumns(columns){\r\n\t\tvar definitions = [],\r\n\t\texcludedKeys = [\"headerContextMenu\", \"headerMenu\", \"contextMenu\", \"clickMenu\"];\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tvar defStore = {},\r\n\t\t\tcolDef = column.getDefinition(),\r\n\t\t\tkeys;\r\n\r\n\t\t\tif(column.isGroup){\r\n\t\t\t\tdefStore.title = colDef.title;\r\n\t\t\t\tdefStore.columns = this.parseColumns(column.getColumns());\r\n\t\t\t}else{\r\n\t\t\t\tdefStore.field = column.getField();\r\n\r\n\t\t\t\tif(this.config.columns === true || this.config.columns == undefined){\r\n\t\t\t\t\tkeys =  Object.keys(colDef);\r\n\t\t\t\t\tkeys.push(\"width\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tkeys = this.config.columns;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkeys.forEach((key)=>{\r\n\t\t\t\t\tswitch(key){\r\n\t\t\t\t\t\tcase \"width\":\r\n\t\t\t\t\t\tdefStore.width = column.getWidth();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"visible\":\r\n\t\t\t\t\t\tdefStore.visible = column.visible;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(typeof colDef[key] !== \"function\" && excludedKeys.indexOf(key) === -1){\r\n\t\t\t\t\t\t\tdefStore[key] = colDef[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdefinitions.push(defStore);\r\n\t\t});\r\n\r\n\t\treturn definitions;\r\n\t}\r\n}\r\n\r\nPersistence.moduleName = \"persistence\";\r\n\r\n//load defaults\r\nPersistence.readers = defaultReaders;\r\nPersistence.writers = defaultWriters;\r\n\r\nexport default Persistence;","import Module from '../../core/Module.js';\r\n\r\nclass Print extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.element = false;\r\n\t\tthis.manualBlock = false;\r\n\r\n\t\tthis.registerTableOption(\"printAsHtml\", false); //enable print as html\r\n\t\tthis.registerTableOption(\"printFormatter\", false); //printing page formatter\r\n\t\tthis.registerTableOption(\"printHeader\", false); //page header contents\r\n\t\tthis.registerTableOption(\"printFooter\", false); //page footer contents\r\n\t\tthis.registerTableOption(\"printStyled\", true); //enable print as html styling\r\n\t\tthis.registerTableOption(\"printRowRange\", \"visible\"); //restrict print to visible rows only\r\n\t\tthis.registerTableOption(\"printConfig\", {}); //print config options\r\n\r\n\t\tthis.registerColumnOption(\"print\");\r\n\t\tthis.registerColumnOption(\"titlePrint\");\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.printAsHtml){\r\n\t\t\twindow.addEventListener(\"beforeprint\", this.replaceTable.bind(this));\r\n\t\t\twindow.addEventListener(\"afterprint\", this.cleanup.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.registerTableFunction(\"print\", this.printFullscreen.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\treplaceTable(){\r\n\t\tif(!this.manualBlock){\r\n\t\t\tthis.element = document.createElement(\"div\");\r\n\t\t\tthis.element.classList.add(\"tabulator-print-table\");\r\n\r\n\t\t\tthis.element.appendChild(this.table.modules.export.genereateTable(this.table.options.printConfig, this.table.options.printStyled, this.table.options.printRowRange, \"print\"));\r\n\r\n\t\t\tthis.table.element.style.display = \"none\";\r\n\r\n\t\t\tthis.table.element.parentNode.insertBefore(this.element, this.table.element);\r\n\t\t}\r\n\t}\r\n\r\n\tcleanup(){\r\n\t\tdocument.body.classList.remove(\"tabulator-print-fullscreen-hide\");\r\n\r\n\t\tif(this.element && this.element.parentNode){\r\n\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\tthis.table.element.style.display = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tprintFullscreen(visible, style, config){\r\n\t\tvar scrollX = window.scrollX,\r\n\t\tscrollY = window.scrollY,\r\n\t\theaderEl = document.createElement(\"div\"),\r\n\t\tfooterEl = document.createElement(\"div\"),\r\n\t\ttableEl = this.table.modules.export.genereateTable(typeof config != \"undefined\" ? config : this.table.options.printConfig, typeof style != \"undefined\" ? style : this.table.options.printStyled, visible || this.table.options.printRowRange, \"print\"),\r\n\t\theaderContent, footerContent;\r\n\r\n\t\tthis.manualBlock = true;\r\n\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.classList.add(\"tabulator-print-fullscreen\");\r\n\r\n\t\tif(this.table.options.printHeader){\r\n\t\t\theaderEl.classList.add(\"tabulator-print-header\");\r\n\r\n\t\t\theaderContent = typeof this.table.options.printHeader == \"function\" ? this.table.options.printHeader.call(this.table) : this.table.options.printHeader;\r\n\r\n\t\t\tif(typeof headerContent == \"string\"){\r\n\t\t\t\theaderEl.innerHTML = headerContent;\r\n\t\t\t}else{\r\n\t\t\t\theaderEl.appendChild(headerContent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.appendChild(headerEl);\r\n\t\t}\r\n\r\n\t\tthis.element.appendChild(tableEl);\r\n\r\n\t\tif(this.table.options.printFooter){\r\n\t\t\tfooterEl.classList.add(\"tabulator-print-footer\");\r\n\r\n\t\t\tfooterContent = typeof this.table.options.printFooter == \"function\" ? this.table.options.printFooter.call(this.table) : this.table.options.printFooter;\r\n\r\n\r\n\t\t\tif(typeof footerContent == \"string\"){\r\n\t\t\t\tfooterEl.innerHTML = footerContent;\r\n\t\t\t}else{\r\n\t\t\t\tfooterEl.appendChild(footerContent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.appendChild(footerEl);\r\n\t\t}\r\n\r\n\t\tdocument.body.classList.add(\"tabulator-print-fullscreen-hide\");\r\n\t\tdocument.body.appendChild(this.element);\r\n\r\n\t\tif(this.table.options.printFormatter){\r\n\t\t\tthis.table.options.printFormatter(this.element, tableEl);\r\n\t\t}\r\n\r\n\t\twindow.print();\r\n\r\n\t\tthis.cleanup();\r\n\r\n\t\twindow.scrollTo(scrollX, scrollY);\r\n\r\n\t\tthis.manualBlock = false;\r\n\t}\r\n}\r\n\r\nPrint.moduleName = \"print\";\r\n\r\nexport default Print;","import Module from '../../core/Module.js';\r\n\r\nclass ReactiveData extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.data = false;\r\n\t\tthis.blocked = false; //block reactivity while performing update\r\n\t\tthis.origFuncs = {}; // hold original data array functions to allow replacement after data is done with\r\n\t\tthis.currentVersion = 0;\r\n\r\n\t\tthis.registerTableOption(\"reactiveData\", false); //enable data reactivity\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.reactiveData){\r\n\t\t\tthis.subscribe(\"cell-value-save-before\", this.block.bind(this));\r\n\t\t\tthis.subscribe(\"cell-value-save-after\", this.unblock.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-save-before\", this.block.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-save-after\", this.unblock.bind(this));\r\n\t\t\tthis.subscribe(\"row-data-init-after\", this.watchRow.bind(this));\r\n\t\t\tthis.subscribe(\"data-processing\", this.watchData.bind(this));\r\n\t\t\tthis.subscribe(\"table-destroy\", this.unwatchData.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\twatchData(data){\r\n\t\tvar self = this,\r\n\t\tpushFunc, version;\r\n\r\n\t\tthis.currentVersion ++;\r\n\r\n\t\tversion = this.currentVersion;\r\n\r\n\t\tthis.unwatchData();\r\n\r\n\t\tthis.data = data;\r\n\r\n\t\t//override array push function\r\n\t\tthis.origFuncs.push = data.push;\r\n\r\n\t\tObject.defineProperty(this.data, \"push\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments);\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\targs.forEach((arg) => {\r\n\t\t\t\t\t\tself.table.rowManager.addRowActual(arg, false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.push.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//override array unshift function\r\n\t\tthis.origFuncs.unshift = data.unshift;\r\n\r\n\t\tObject.defineProperty(this.data, \"unshift\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments);\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\targs.forEach((arg) => {\r\n\t\t\t\t\t\tself.table.rowManager.addRowActual(arg, true);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.unshift.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t//override array shift function\r\n\t\tthis.origFuncs.shift = data.shift;\r\n\r\n\t\tObject.defineProperty(this.data, \"shift\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar row;\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\tif(self.data.length){\r\n\t\t\t\t\t\trow = self.table.rowManager.getRowFromDataObject(self.data[0]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.deleteActual();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.shift.call(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//override array pop function\r\n\t\tthis.origFuncs.pop = data.pop;\r\n\r\n\t\tObject.defineProperty(this.data, \"pop\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar row;\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\t\t\t\t\tif(self.data.length){\r\n\t\t\t\t\t\trow = self.table.rowManager.getRowFromDataObject(self.data[self.data.length - 1]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.deleteActual();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn self.origFuncs.pop.call(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t//override array splice function\r\n\t\tthis.origFuncs.splice = data.splice;\r\n\r\n\t\tObject.defineProperty(this.data, \"splice\", {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(){\r\n\t\t\t\tvar args = Array.from(arguments),\r\n\t\t\t\tstart = args[0] < 0 ? data.length + args[0] : args[0],\r\n\t\t\t\tend = args[1],\r\n\t\t\t\tnewRows = args[2] ? args.slice(2) : false,\r\n\t\t\t\tstartRow;\r\n\r\n\t\t\t\tif(!self.blocked && version === self.currentVersion){\r\n\r\n\t\t\t\t\t//add new rows\r\n\t\t\t\t\tif(newRows){\r\n\t\t\t\t\t\tstartRow = data[start] ? self.table.rowManager.getRowFromDataObject(data[start]) : false;\r\n\r\n\t\t\t\t\t\tif(startRow){\r\n\t\t\t\t\t\t\tnewRows.forEach((rowData) => {\r\n\t\t\t\t\t\t\t\tself.table.rowManager.addRowActual(rowData, true, startRow, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tnewRows = newRows.slice().reverse();\r\n\r\n\t\t\t\t\t\t\tnewRows.forEach((rowData) => {\r\n\t\t\t\t\t\t\t\tself.table.rowManager.addRowActual(rowData, true, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//delete removed rows\r\n\t\t\t\t\tif(end !== 0){\r\n\t\t\t\t\t\tvar oldRows = data.slice(start, typeof args[1] === \"undefined\" ? args[1] : start + end);\r\n\r\n\t\t\t\t\t\toldRows.forEach((rowData, i) => {\r\n\t\t\t\t\t\t\tvar row = self.table.rowManager.getRowFromDataObject(rowData);\r\n\r\n\t\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\t\trow.deleteActual(i !== oldRows.length - 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(newRows || end !== 0){\r\n\t\t\t\t\t\tself.table.rowManager.reRenderInPosition();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn self.origFuncs.splice.apply(data, arguments);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tunwatchData(){\r\n\t\tif(this.data !== false){\r\n\t\t\tfor(var key in this.origFuncs){\r\n\t\t\t\tObject.defineProperty(this.data, key, {\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable:true,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tvalue: this.origFuncs.key,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twatchRow(row){\r\n\t\tvar data = row.getData();\r\n\r\n\t\tthis.blocked = true;\r\n\r\n\t\tfor(var key in data){\r\n\t\t\tthis.watchKey(row, data, key);\r\n\t\t}\r\n\r\n\t\tif(this.table.options.dataTree){\r\n\t\t\tthis.watchTreeChildren(row);\r\n\t\t}\r\n\r\n\t\tthis.blocked = false;\r\n\t}\r\n\r\n\twatchTreeChildren (row){\r\n\t\tvar childField = row.getData()[this.table.options.dataTreeChildField],\r\n\t\torigFuncs = {};\r\n\r\n\t\tfunction rebuildTree(){\r\n\t\t\tthis.table.modules.dataTree.initializeRow(row);\r\n\t\t\tthis.table.modules.dataTree.layoutRow(row);\r\n\t\t\tthis.table.rowManager.refreshActiveData(\"tree\", false, true);\r\n\t\t}\r\n\r\n\t\tif(childField){\r\n\r\n\t\t\torigFuncs.push = childField.push;\r\n\r\n\t\t\tObject.defineProperty(childField, \"push\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result = origFuncs.push.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.unshift = childField.unshift;\r\n\r\n\t\t\tObject.defineProperty(childField, \"unshift\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.unshift.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.shift = childField.shift;\r\n\r\n\t\t\tObject.defineProperty(childField, \"shift\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.shift.call(childField);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.pop = childField.pop;\r\n\r\n\t\t\tObject.defineProperty(childField, \"pop\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.pop.call(childField);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\torigFuncs.splice = childField.splice;\r\n\r\n\t\t\tObject.defineProperty(childField, \"splice\", {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: () => {\r\n\t\t\t\t\tvar result =  origFuncs.splice.apply(childField, arguments);\r\n\r\n\t\t\t\t\trebuildTree();\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\twatchKey(row, data, key){\r\n\t\tvar props = Object.getOwnPropertyDescriptor(data, key),\r\n\t\tvalue = data[key],\r\n\t\tversion = this.currentVersion;\r\n\r\n\t\tObject.defineProperty(data, key, {\r\n\t\t\tset: (newValue) => {\r\n\t\t\t\tvalue = newValue;\r\n\t\t\t\tif(!this.blocked && version === this.currentVersion){\r\n\t\t\t\t\tvar update = {};\r\n\t\t\t\t\tupdate[key] = newValue;\r\n\t\t\t\t\trow.updateData(update);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(props.set){\r\n\t\t\t\t\tprops.set(newValue);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget:() => {\r\n\r\n\t\t\t\tif(props.get){\r\n\t\t\t\t\tprops.get();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tunwatchRow(row){\r\n\t\tvar data = row.getData();\r\n\r\n\t\tfor(var key in data){\r\n\t\t\tObject.defineProperty(data, key, {\r\n\t\t\t\tvalue:data[key],\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tblock(){\r\n\t\tthis.blocked = true;\r\n\t}\r\n\r\n\tunblock(){\r\n\t\tthis.blocked = false;\r\n\t}\r\n}\r\n\r\nReactiveData.moduleName = \"reactiveData\";\r\n\r\nexport default ReactiveData;\r\n\r\n\r\n\r\n","import Module from '../../core/Module.js';\r\n\r\nclass ResizeColumns extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.startColumn = false;\r\n\t\tthis.startX = false;\r\n\t\tthis.startWidth = false;\r\n\t\tthis.handle = null;\r\n\t\tthis.prevHandle = null;\r\n\r\n\t\tthis.registerColumnOption(\"resizable\", true);\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\t// if(this.table.options.resizableColumns){\r\n\t\t\tthis.subscribe(\"cell-layout\", this.layoutCellHandles.bind(this));\r\n\t\t\tthis.subscribe(\"column-init\", this.layoutColumnHeader.bind(this));\r\n\t\t// }\r\n\t}\r\n\r\n\tlayoutCellHandles(cell){\r\n\t\tif(cell.row.type === \"row\"){\r\n\t\t\tthis.initializeColumn(\"cell\", cell.column, cell.element);\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutColumnHeader(column){\r\n\t\tthis.initializeColumn(\"header\", column, column.element);\r\n\t}\r\n\r\n\tinitializeColumn(type, column, element){\r\n\t\tvar self = this,\r\n\t\tvariableHeight = false,\r\n\t\tmode = column.definition.resizable;\r\n\r\n\t\t//set column resize mode\r\n\t\tif(type === \"header\"){\r\n\t\t\tvariableHeight = column.definition.formatter == \"textarea\" || column.definition.variableHeight;\r\n\t\t\tcolumn.modules.resize = {variableHeight:variableHeight};\r\n\t\t}\r\n\r\n\t\tif(mode === true || mode == type){\r\n\r\n\t\t\tvar handle = document.createElement('div');\r\n\t\t\thandle.className = \"tabulator-col-resize-handle\";\r\n\r\n\r\n\t\t\tvar prevHandle = document.createElement('div');\r\n\t\t\tprevHandle.className = \"tabulator-col-resize-handle prev\";\r\n\r\n\t\t\thandle.addEventListener(\"click\", function(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tvar handleDown = function(e){\r\n\t\t\t\tvar nearestColumn = column.getLastColumn();\r\n\r\n\t\t\t\tif(nearestColumn && self._checkResizability(nearestColumn)){\r\n\t\t\t\t\tself.startColumn = column;\r\n\t\t\t\t\tself._mouseDown(e, nearestColumn, handle);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\thandle.addEventListener(\"mousedown\", handleDown);\r\n\t\t\thandle.addEventListener(\"touchstart\", handleDown, {passive: true});\r\n\r\n\t\t\t//reszie column on  double click\r\n\t\t\thandle.addEventListener(\"dblclick\", function(e){\r\n\t\t\t\tvar col = column.getLastColumn();\r\n\r\n\t\t\t\tif(col && self._checkResizability(col)){\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tcol.reinitializeWidth(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\tprevHandle.addEventListener(\"click\", function(e){\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\tvar prevHandleDown = function(e){\r\n\t\t\t\tvar nearestColumn, colIndex, prevColumn;\r\n\r\n\t\t\t\tnearestColumn = column.getFirstColumn();\r\n\r\n\t\t\t\tif(nearestColumn){\r\n\t\t\t\t\tcolIndex = self.table.columnManager.findColumnIndex(nearestColumn);\r\n\t\t\t\t\tprevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\r\n\r\n\t\t\t\t\tif(prevColumn && self._checkResizability(prevColumn)){\r\n\t\t\t\t\t\tself.startColumn = column;\r\n\t\t\t\t\t\tself._mouseDown(e, prevColumn, prevHandle);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tprevHandle.addEventListener(\"mousedown\", prevHandleDown);\r\n\t\t\tprevHandle.addEventListener(\"touchstart\", prevHandleDown, {passive: true});\r\n\r\n\t\t\t//resize column on double click\r\n\t\t\tprevHandle.addEventListener(\"dblclick\", function(e){\r\n\t\t\t\tvar nearestColumn, colIndex, prevColumn;\r\n\r\n\t\t\t\tnearestColumn = column.getFirstColumn();\r\n\r\n\t\t\t\tif(nearestColumn){\r\n\t\t\t\t\tcolIndex = self.table.columnManager.findColumnIndex(nearestColumn);\r\n\t\t\t\t\tprevColumn = colIndex > 0 ? self.table.columnManager.getColumnByIndex(colIndex - 1) : false;\r\n\r\n\t\t\t\t\tif(prevColumn && self._checkResizability(prevColumn)){\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tprevColumn.reinitializeWidth(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.appendChild(handle);\r\n\t\t\telement.appendChild(prevHandle);\r\n\t\t}\r\n\t}\r\n\r\n\t_checkResizability(column){\r\n\t\treturn column.definition.resizable;\r\n\t}\r\n\r\n\t_mouseDown(e, column, handle){\r\n\t\tvar self = this;\r\n\r\n\t\tself.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tfunction mouseMove(e){\r\n\t\t\t// self.table.columnManager.tempScrollBlock();\r\n\r\n\t\t\tif(self.table.rtl){\r\n\t\t\t\tcolumn.setWidth(self.startWidth - ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.setWidth(self.startWidth + ((typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX) - self.startX));\r\n\t\t\t}\r\n\r\n\t\t\tself.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\tif(!self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight){\r\n\t\t\t\tcolumn.checkCellHeights();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction mouseUp(e){\r\n\r\n\t\t\t//block editor from taking action while resizing is taking place\r\n\t\t\tif(self.startColumn.modules.edit){\r\n\t\t\t\tself.startColumn.modules.edit.blocked = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(self.table.browserSlow && column.modules.resize && column.modules.resize.variableHeight){\r\n\t\t\t\tcolumn.checkCellHeights();\r\n\t\t\t}\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", mouseUp);\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n\t\t\thandle.removeEventListener(\"touchmove\", mouseMove);\r\n\t\t\thandle.removeEventListener(\"touchend\", mouseUp);\r\n\r\n\t\t\tself.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tself.dispatch(\"column-resized\", column);\r\n\t\t\tself.table.externalEvents.dispatch(\"columnResized\", column.getComponent());\r\n\t\t}\r\n\r\n\t\te.stopPropagation(); //prevent resize from interfereing with movable columns\r\n\r\n\t\t//block editor from taking action while resizing is taking place\r\n\t\tif(self.startColumn.modules.edit){\r\n\t\t\tself.startColumn.modules.edit.blocked = true;\r\n\t\t}\r\n\r\n\t\tself.startX = typeof e.screenX === \"undefined\" ? e.touches[0].screenX : e.screenX;\r\n\t\tself.startWidth = column.getWidth();\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", mouseMove);\r\n\t\tdocument.body.addEventListener(\"mouseup\", mouseUp);\r\n\t\thandle.addEventListener(\"touchmove\", mouseMove, {passive: true});\r\n\t\thandle.addEventListener(\"touchend\", mouseUp);\r\n\t}\r\n}\r\n\r\nResizeColumns.moduleName = \"resizeColumns\";\r\n\r\nexport default ResizeColumns;","import Module from '../../core/Module.js';\r\n\r\nclass ResizeRows extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.startColumn = false;\r\n\t\tthis.startY = false;\r\n\t\tthis.startHeight = false;\r\n\t\tthis.handle = null;\r\n\t\tthis.prevHandle = null;\r\n\r\n\t\tthis.registerTableOption(\"resizableRows\", false); //resizable rows\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.resizableRows){\r\n\t\t\tthis.subscribe(\"row-layout-after\", this.initializeRow.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\trowEl = row.getElement();\r\n\r\n\t\tvar handle = document.createElement('div');\r\n\t\thandle.className = \"tabulator-row-resize-handle\";\r\n\r\n\t\tvar prevHandle = document.createElement('div');\r\n\t\tprevHandle.className = \"tabulator-row-resize-handle prev\";\r\n\r\n\t\thandle.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tvar handleDown = function(e){\r\n\t\t\tself.startRow = row;\r\n\t\t\tself._mouseDown(e, row, handle);\r\n\t\t};\r\n\r\n\t\thandle.addEventListener(\"mousedown\", handleDown);\r\n\t\thandle.addEventListener(\"touchstart\", handleDown, {passive: true});\r\n\r\n\t\tprevHandle.addEventListener(\"click\", function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tvar prevHandleDown =  function(e){\r\n\t\t\tvar prevRow = self.table.rowManager.prevDisplayRow(row);\r\n\r\n\t\t\tif(prevRow){\r\n\t\t\t\tself.startRow = prevRow;\r\n\t\t\t\tself._mouseDown(e, prevRow, prevHandle);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tprevHandle.addEventListener(\"mousedown\",prevHandleDown);\r\n\t\tprevHandle.addEventListener(\"touchstart\",prevHandleDown, {passive: true});\r\n\r\n\t\trowEl.appendChild(handle);\r\n\t\trowEl.appendChild(prevHandle);\r\n\t}\r\n\r\n\t_mouseDown(e, row, handle){\r\n\t\tvar self = this;\r\n\r\n\t\tself.table.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tfunction mouseMove(e){\r\n\t\t\trow.setHeight(self.startHeight + ((typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY) - self.startY));\r\n\t\t}\r\n\r\n\t\tfunction mouseUp(e){\r\n\r\n\t\t\t// //block editor from taking action while resizing is taking place\r\n\t\t\t// if(self.startColumn.modules.edit){\r\n\t\t\t// \tself.startColumn.modules.edit.blocked = false;\r\n\t\t\t// }\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", mouseMove);\r\n\t\t\tdocument.body.removeEventListener(\"mousemove\", mouseMove);\r\n\r\n\t\t\thandle.removeEventListener(\"touchmove\", mouseMove);\r\n\t\t\thandle.removeEventListener(\"touchend\", mouseUp);\r\n\r\n\t\t\tself.table.element.classList.remove(\"tabulator-block-select\");\r\n\r\n\t\t\tthis.dispatchExternal(\"rowResized\", row.getComponent());\r\n\t\t}\r\n\r\n\t\te.stopPropagation(); //prevent resize from interfereing with movable columns\r\n\r\n\t\t//block editor from taking action while resizing is taking place\r\n\t\t// if(self.startColumn.modules.edit){\r\n\t\t// \tself.startColumn.modules.edit.blocked = true;\r\n\t\t// }\r\n\r\n\t\tself.startY = typeof e.screenY === \"undefined\" ? e.touches[0].screenY : e.screenY;\r\n\t\tself.startHeight = row.getHeight();\r\n\r\n\t\tdocument.body.addEventListener(\"mousemove\", mouseMove);\r\n\t\tdocument.body.addEventListener(\"mouseup\", mouseUp);\r\n\r\n\t\thandle.addEventListener(\"touchmove\", mouseMove, {passive: true});\r\n\t\thandle.addEventListener(\"touchend\", mouseUp);\r\n\t}\r\n}\r\n\r\nResizeRows.moduleName = \"resizeRows\";\r\n\r\nexport default ResizeRows;","import Module from '../../core/Module.js';\r\n\r\nclass ResizeTable extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.binding = false;\r\n\t\tthis.observer = false;\r\n\t\tthis.containerObserver = false;\r\n\r\n\t\tthis.tableHeight = 0;\r\n\t\tthis.tableWidth = 0;\r\n\t\tthis.containerHeight = 0;\r\n\t\tthis.containerWidth = 0;\r\n\r\n\t\tthis.autoResize = false;\r\n\r\n\t\tthis.registerTableOption(\"autoResize\", true); //auto resize table\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.autoResize){\r\n\t\t\tvar table = this.table,\r\n\t\t\ttableStyle;\r\n\r\n\t\t\tthis.tableHeight = table.element.clientHeight;\r\n\t\t\tthis.tableWidth = table.element.clientWidth;\r\n\r\n\t\t\tif(table.element.parentNode){\r\n\t\t\t\tthis.containerHeight = table.element.parentNode.clientHeight;\r\n\t\t\t\tthis.containerWidth = table.element.parentNode.clientWidth;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof ResizeObserver !== \"undefined\" && table.rowManager.getRenderMode() === \"virtual\"){\r\n\r\n\t\t\t\tthis.autoResize = true;\r\n\r\n\t\t\t\tthis.observer = new ResizeObserver((entry) => {\r\n\t\t\t\t\tif(!table.browserMobile || (table.browserMobile &&!table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\tvar nodeHeight = Math.floor(entry[0].contentRect.height);\r\n\t\t\t\t\t\tvar nodeWidth = Math.floor(entry[0].contentRect.width);\r\n\r\n\t\t\t\t\t\tif(this.tableHeight != nodeHeight || this.tableWidth != nodeWidth){\r\n\t\t\t\t\t\t\tthis.tableHeight = nodeHeight;\r\n\t\t\t\t\t\t\tthis.tableWidth = nodeWidth;\r\n\r\n\t\t\t\t\t\t\tif(table.element.parentNode){\r\n\t\t\t\t\t\t\t\tthis.containerHeight = table.element.parentNode.clientHeight;\r\n\t\t\t\t\t\t\t\tthis.containerWidth = table.element.parentNode.clientWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.table.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.observer.observe(table.element);\r\n\r\n\t\t\t\ttableStyle = window.getComputedStyle(table.element);\r\n\r\n\t\t\t\tif(this.table.element.parentNode && !this.table.rowManager.fixedHeight && (tableStyle.getPropertyValue(\"max-height\") || tableStyle.getPropertyValue(\"min-height\"))){\r\n\r\n\t\t\t\t\tthis.containerObserver = new ResizeObserver((entry) => {\r\n\t\t\t\t\t\tif(!table.browserMobile || (table.browserMobile &&!table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\t\tvar nodeHeight = Math.floor(entry[0].contentRect.height);\r\n\t\t\t\t\t\t\tvar nodeWidth = Math.floor(entry[0].contentRect.width);\r\n\r\n\t\t\t\t\t\t\tif(this.containerHeight != nodeHeight || this.containerWidth != nodeWidth){\r\n\t\t\t\t\t\t\t\tthis.containerHeight = nodeHeight;\r\n\t\t\t\t\t\t\t\tthis.containerWidth = nodeWidth;\r\n\t\t\t\t\t\t\t\tthis.tableHeight = table.element.clientHeight;\r\n\t\t\t\t\t\t\t\tthis.tableWidth = table.element.clientWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttable.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.containerObserver.observe(this.table.element.parentNode);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.subscribe(\"table-resize\", this.tableResized.bind(this));\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthis.binding = function(){\r\n\t\t\t\t\tif(!table.browserMobile || (table.browserMobile && !table.modules.edit.currentCell)){\r\n\r\n\t\t\t\t\t\ttable.columnManager.renderer.rerenderColumns(true);\r\n\r\n\t\t\t\t\t\ttable.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\twindow.addEventListener(\"resize\", this.binding);\r\n\t\t\t}\r\n\r\n\t\t\tthis.subscribe(\"table-destroy\", this.clearBindings.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\ttableResized(){\r\n\t\tthis.table.rowManager.redraw();\r\n\t}\r\n\r\n\tclearBindings(){\r\n\t\tif(this.binding){\r\n\t\t\twindow.removeEventListener(\"resize\", this.binding);\r\n\t\t}\r\n\r\n\t\tif(this.observer){\r\n\t\t\tthis.observer.unobserve(this.table.element);\r\n\t\t}\r\n\r\n\t\tif(this.containerObserver){\r\n\t\t\tthis.containerObserver.unobserve(this.table.element.parentNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nResizeTable.moduleName = \"resizeTable\";\r\n\r\nexport default ResizeTable;","import Module from '../../core/Module.js';\r\n\r\nclass ResponsiveLayout extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.hiddenColumns = [];\r\n\t\tthis.mode = \"\";\r\n\t\tthis.index = 0;\r\n\t\tthis.collapseFormatter = [];\r\n\t\tthis.collapseStartOpen = true;\r\n\t\tthis.collapseHandleColumn = false;\r\n\r\n\t\tthis.registerTableOption(\"responsiveLayout\", false); //responsive layout flags\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseStartOpen\", true); //start showing collapsed data\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseUseFormatters\", true); //responsive layout collapse formatter\r\n\t\tthis.registerTableOption(\"responsiveLayoutCollapseFormatter\", false); //responsive layout collapse formatter\r\n\r\n\t\tthis.registerColumnOption(\"responsive\");\r\n\t}\r\n\r\n\t//generate responsive columns list\r\n\tinitialize(){\r\n\t\tvar self = this,\r\n\t\tcolumns = [];\r\n\r\n\t\tif(this.table.options.responsiveLayout){\r\n\t\t\tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t\t\tthis.subscribe(\"column-show\", this.updateColumnVisibility.bind(this));\r\n\t\t\tthis.subscribe(\"column-hide\", this.updateColumnVisibility.bind(this));\r\n\t\t\tthis.subscribe(\"columns-loaded\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-moved\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-add\", this.initializeResponsivity.bind(this));\r\n\t\t\tthis.subscribe(\"column-delete\", this.initializeResponsivity.bind(this));\r\n\r\n\t\t\tthis.subscribe(\"table-redrawing\", this.tableRedraw.bind(this));\r\n\r\n\t\t\tif(this.table.options.responsiveLayout === \"collapse\"){\r\n\t\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\t\tthis.subscribe(\"row-layout\", this.layoutRow.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttableRedraw(force){\r\n\t\tif([\"fitColumns\", \"fitDataStretch\"].indexOf(this.layoutMode()) === -1){\r\n\t\t\tif(!force){\r\n\t\t\t\tthis.update();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeResponsivity(){\r\n\t\tvar columns = [];\r\n\r\n\t\tthis.mode = this.table.options.responsiveLayout;\r\n\t\tthis.collapseFormatter = this.table.options.responsiveLayoutCollapseFormatter || this.formatCollapsedData;\r\n\t\tthis.collapseStartOpen = this.table.options.responsiveLayoutCollapseStartOpen;\r\n\t\tthis.hiddenColumns = [];\r\n\r\n\t\t//determine level of responsivity for each column\r\n\t\tthis.table.columnManager.columnsByIndex.forEach(function(column, i){\r\n\t\t\tif(column.modules.responsive){\r\n\t\t\t\tif(column.modules.responsive.order && column.modules.responsive.visible){\r\n\t\t\t\t\tcolumn.modules.responsive.index = i;\r\n\t\t\t\t\tcolumns.push(column);\r\n\r\n\t\t\t\t\tif(!column.visible && self.mode === \"collapse\"){\r\n\t\t\t\t\t\tself.hiddenColumns.push(column);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//sort list by responsivity\r\n\t\tcolumns = columns.reverse();\r\n\t\tcolumns = columns.sort(function(a, b){\r\n\t\t\tvar diff = b.modules.responsive.order - a.modules.responsive.order;\r\n\t\t\treturn diff || (b.modules.responsive.index - a.modules.responsive.index);\r\n\t\t});\r\n\r\n\t\tthis.columns = columns;\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tthis.generateCollapsedContent();\r\n\t\t}\r\n\r\n\t\t//assign collapse column\r\n\t\tfor (let col of this.table.columnManager.columnsByIndex){\r\n\t\t\tif(col.definition.formatter == \"responsiveCollapse\"){\r\n\t\t\t\tthis.collapseHandleColumn = col;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.collapseHandleColumn){\r\n\t\t\tif(this.hiddenColumns.length){\r\n\t\t\t\tthis.collapseHandleColumn.show();\r\n\t\t\t}else{\r\n\t\t\t\tthis.collapseHandleColumn.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//define layout information\r\n\tinitializeColumn(column){\r\n\t\tvar def = column.getDefinition();\r\n\r\n\t\tcolumn.modules.responsive = {order: typeof def.responsive === \"undefined\" ? 1 : def.responsive, visible:def.visible === false ? false : true};\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar el;\r\n\r\n\t\tif(row.type !== \"calc\"){\r\n\t\t\tel = document.createElement(\"div\");\r\n\t\t\tel.classList.add(\"tabulator-responsive-collapse\");\r\n\r\n\t\t\trow.modules.responsiveLayout = {\r\n\t\t\t\telement:el,\r\n\t\t\t\topen:this.collapseStartOpen,\r\n\t\t\t};\r\n\r\n\t\t\tif(!this.collapseStartOpen){\r\n\t\t\t\tel.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(row.modules.responsiveLayout){\r\n\t\t\trowEl.appendChild(row.modules.responsiveLayout.element);\r\n\t\t\tthis.generateCollapsedRowContent(row);\r\n\t\t}\r\n\t}\r\n\r\n\t//update column visibility\r\n\tupdateColumnVisibility(column, responsiveToggle){\r\n\t\tif(!responsiveToggle && column.modules.responsive){\r\n\t\t\tcolumn.modules.responsive.visible = column.visible;\r\n\t\t\tthis.initializeResponsivity();\r\n\t\t}\r\n\t}\r\n\r\n\thideColumn(column){\r\n\t\tvar colCount = this.hiddenColumns.length;\r\n\r\n\t\tcolumn.hide(false, true);\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tthis.hiddenColumns.unshift(column);\r\n\t\t\tthis.generateCollapsedContent();\r\n\r\n\t\t\tif(this.collapseHandleColumn && !colCount){\r\n\t\t\t\tthis.collapseHandleColumn.show();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tshowColumn(column){\r\n\t\tvar index;\r\n\r\n\t\tcolumn.show(false, true);\r\n\t\t//set column width to prevent calculation loops on uninitialized columns\r\n\t\tcolumn.setWidth(column.getWidth());\r\n\r\n\t\tif(this.mode === \"collapse\"){\r\n\t\t\tindex = this.hiddenColumns.indexOf(column);\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tthis.hiddenColumns.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\tthis.generateCollapsedContent();\r\n\r\n\t\t\tif(this.collapseHandleColumn && !this.hiddenColumns.length){\r\n\t\t\t\tthis.collapseHandleColumn.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//redraw columns to fit space\r\n\tupdate(){\r\n\t\tvar self = this,\r\n\t\tworking = true;\r\n\r\n\t\twhile(working){\r\n\r\n\t\t\tlet width = self.table.modules.layout.getMode() == \"fitColumns\" ? self.table.columnManager.getFlexBaseWidth() : self.table.columnManager.getWidth();\r\n\r\n\t\t\tlet diff = (self.table.options.headerVisible ? self.table.columnManager.element.clientWidth : self.table.element.clientWidth) - width;\r\n\r\n\t\t\tif(diff < 0){\r\n\t\t\t\t//table is too wide\r\n\t\t\t\tlet column = self.columns[self.index];\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tself.hideColumn(column);\r\n\t\t\t\t\tself.index ++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tworking = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\t//table has spare space\r\n\t\t\t\tlet column = self.columns[self.index -1];\r\n\r\n\t\t\t\tif(column){\r\n\t\t\t\t\tif(diff > 0){\r\n\t\t\t\t\t\tif(diff >= column.getWidth()){\r\n\t\t\t\t\t\t\tself.showColumn(column);\r\n\t\t\t\t\t\t\tself.index --;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tworking = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tworking = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tworking = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!self.table.rowManager.activeRowsCount){\r\n\t\t\t\tself.table.rowManager.renderEmptyScroll();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateCollapsedContent(){\r\n\t\tvar self = this,\r\n\t\trows = this.table.rowManager.getDisplayRows();\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\tself.generateCollapsedRowContent(row);\r\n\t\t});\r\n\t}\r\n\r\n\tgenerateCollapsedRowContent(row){\r\n\t\tvar el, contents;\r\n\r\n\t\tif(row.modules.responsiveLayout){\r\n\t\t\tel = row.modules.responsiveLayout.element;\r\n\r\n\t\t\twhile(el.firstChild) el.removeChild(el.firstChild);\r\n\r\n\t\t\tcontents = this.collapseFormatter(this.generateCollapsedRowData(row));\r\n\t\t\tif(contents){\r\n\t\t\t\tel.appendChild(contents);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateCollapsedRowData(row){\r\n\t\tvar self = this,\r\n\t\tdata = row.getData(),\r\n\t\toutput = [],\r\n\t\tmockCellComponent;\r\n\r\n\t\tthis.hiddenColumns.forEach(function(column){\r\n\t\t\tvar value = column.getFieldValue(data);\r\n\r\n\t\t\tif(column.definition.title && column.field){\r\n\t\t\t\tif(column.modules.format && self.table.options.responsiveLayoutCollapseUseFormatters){\r\n\r\n\t\t\t\t\tmockCellComponent = {\r\n\t\t\t\t\t\tvalue:false,\r\n\t\t\t\t\t\tdata:{},\r\n\t\t\t\t\t\tgetValue:function(){\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetData:function(){\r\n\t\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetElement:function(){\r\n\t\t\t\t\t\t\treturn document.createElement(\"div\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetRow:function(){\r\n\t\t\t\t\t\t\treturn row.getComponent();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgetColumn:function(){\r\n\t\t\t\t\t\t\treturn column.getComponent();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tfunction onRendered(callback){\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toutput.push({\r\n\t\t\t\t\t\tfield: column.field,\r\n\t\t\t\t\t\ttitle: column.definition.title,\r\n\t\t\t\t\t\tvalue: column.modules.format.formatter.call(self.table.modules.format, mockCellComponent, column.modules.format.params, onRendered)\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\toutput.push({\r\n\t\t\t\t\t\tfield: column.field,\r\n\t\t\t\t\t\ttitle: column.definition.title,\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tformatCollapsedData(data){\r\n\t\tvar list = document.createElement(\"table\");\r\n\r\n\t\tdata.forEach(function(item){\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tvar titleData = document.createElement(\"td\");\r\n\t\t\tvar valueData = document.createElement(\"td\");\r\n\t\t\tvar node_content;\r\n\r\n\t\t\tvar titleHighlight = document.createElement(\"strong\");\r\n\t\t\ttitleData.appendChild(titleHighlight);\r\n\t\t\tthis.langBind(\"columns|\" + item.field, function(text){\r\n\t\t\t\ttitleHighlight.innerText = text || item.title;\r\n\t\t\t});\r\n\r\n\t\t\tif(item.value instanceof Node){\r\n\t\t\t\tnode_content = document.createElement(\"div\");\r\n\t\t\t\tnode_content.appendChild(item.value);\r\n\t\t\t\tvalueData.appendChild(node_content);\r\n\t\t\t}else{\r\n\t\t\t\tvalueData.innerHTML = item.value;\r\n\t\t\t}\r\n\r\n\t\t\trow.appendChild(titleData);\r\n\t\t\trow.appendChild(valueData);\r\n\t\t\tlist.appendChild(row);\r\n\t\t}, this);\r\n\r\n\t\treturn Object.keys(data).length ? list : \"\";\r\n\t}\r\n}\r\n\r\nResponsiveLayout.moduleName = \"responsiveLayout\";\r\n\r\nexport default ResponsiveLayout;","import Module from '../../core/Module.js';\r\n\r\nclass SelectRow extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.selecting = false; //flag selecting in progress\r\n\t\tthis.lastClickedRow = false; //last clicked row\r\n\t\tthis.selectPrev = []; //hold previously selected element for drag drop selection\r\n\t\tthis.selectedRows = []; //hold selected rows\r\n\t\tthis.headerCheckboxElement = null; // hold header select element\r\n\r\n\t\tthis.registerTableOption(\"selectable\", \"highlight\"); //highlight rows on hover\r\n\t\tthis.registerTableOption(\"selectableRangeMode\", \"drag\");  //highlight rows on hover\r\n\t\tthis.registerTableOption(\"selectableRollingSelection\", true); //roll selection once maximum number of selectable rows is reached\r\n\t\tthis.registerTableOption(\"selectablePersistence\", true); // maintain selection when table view is updated\r\n\t\tthis.registerTableOption(\"selectableCheck\", function(data, row){return true;}); //check wheather row is selectable\r\n\r\n\t\tthis.registerTableFunction(\"selectRow\", this.selectRows.bind(this));\r\n\t\tthis.registerTableFunction(\"deselectRow\", this.deselectRows.bind(this));\r\n\t\tthis.registerTableFunction(\"toggleSelectRow\", this.toggleRow.bind(this));\r\n\t\tthis.registerTableFunction(\"getSelectedRows\", this.getSelectedRows.bind(this));\r\n\t\tthis.registerTableFunction(\"getSelectedData\", this.getSelectedData.bind(this));\r\n\r\n\t\t//register component functions\r\n\t\tthis.registerComponentFunction(\"row\", \"select\", this.selectRows.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"deselect\", this.deselectRows.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"toggleSelect\", this.toggleRow.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"isSelected\", this.isRowSelected.bind(this));\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tif(this.table.options.selectable !== false){\r\n\t\t\tthis.subscribe(\"row-init\", this.initializeRow.bind(this));\r\n\t\t\tthis.subscribe(\"row-deleting\", this.rowDeleted.bind(this));\r\n\t\t\tthis.subscribe(\"rows-wipe\", this.clearSelectionData.bind(this));\r\n\t\t\tthis.subscribe(\"rows-retrieve\", this.rowRetrieve.bind(this));\r\n\r\n\t\t\tif(this.table.options.selectable && !this.table.options.selectablePersistence){\r\n\t\t\t\tthis.subscribe(\"data-refeshing\", this.deselectRows.bind(this));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trowRetrieve(type, prevValue){\r\n\t\treturn type === \"selected\" ? this.selectedRows : prevValue;\r\n\t}\r\n\r\n\trowDeleted(row){\r\n\t\tthis._deselectRow(row, true);\r\n\t}\r\n\r\n\tclearSelectionData(silent){\r\n\t\tthis.selecting = false;\r\n\t\tthis.lastClickedRow = false;\r\n\t\tthis.selectPrev = [];\r\n\t\tthis.selectedRows = [];\r\n\r\n\t\tif(silent !== true){\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRow(row){\r\n\t\tvar self = this,\r\n\t\telement = row.getElement();\r\n\r\n\t\t// trigger end of row selection\r\n\t\tvar endSelect = function(){\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tself.selecting = false;\r\n\t\t\t}, 50);\r\n\r\n\t\t\tdocument.body.removeEventListener(\"mouseup\", endSelect);\r\n\t\t};\r\n\r\n\t\trow.modules.select = {selected:false};\r\n\r\n\t\t//set row selection class\r\n\t\tif(self.table.options.selectableCheck.call(this.table, row.getComponent())){\r\n\t\t\telement.classList.add(\"tabulator-selectable\");\r\n\t\t\telement.classList.remove(\"tabulator-unselectable\");\r\n\r\n\t\t\tif(self.table.options.selectable && self.table.options.selectable != \"highlight\"){\r\n\t\t\t\tif(self.table.options.selectableRangeMode === \"click\"){\r\n\t\t\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\tif(e.shiftKey){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.lastClickedRow = self.lastClickedRow || row;\r\n\r\n\t\t\t\t\t\t\tvar lastClickedRowIdx = self.table.rowManager.getDisplayRowIndex(self.lastClickedRow);\r\n\t\t\t\t\t\t\tvar rowIdx = self.table.rowManager.getDisplayRowIndex(row);\r\n\r\n\t\t\t\t\t\t\tvar fromRowIdx = lastClickedRowIdx <= rowIdx ? lastClickedRowIdx : rowIdx;\r\n\t\t\t\t\t\t\tvar toRowIdx = lastClickedRowIdx >= rowIdx ? lastClickedRowIdx : rowIdx;\r\n\r\n\t\t\t\t\t\t\tvar rows = self.table.rowManager.getDisplayRows().slice(0);\r\n\t\t\t\t\t\t\tvar toggledRows = rows.splice(fromRowIdx, toRowIdx - fromRowIdx + 1);\r\n\r\n\t\t\t\t\t\t\tif(e.ctrlKey || e.metaKey){\r\n\t\t\t\t\t\t\t\ttoggledRows.forEach(function(toggledRow){\r\n\t\t\t\t\t\t\t\t\tif(toggledRow !== self.lastClickedRow){\r\n\r\n\t\t\t\t\t\t\t\t\t\tif(self.table.options.selectable !== true && !self.isRowSelected(row)){\r\n\t\t\t\t\t\t\t\t\t\t\tif(self.selectedRows.length < self.table.options.selectable){\r\n\t\t\t\t\t\t\t\t\t\t\t\tself.toggleRow(toggledRow);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\tself.toggleRow(toggledRow);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tself.deselectRows(undefined, true);\r\n\r\n\t\t\t\t\t\t\t\tif(self.table.options.selectable !== true){\r\n\t\t\t\t\t\t\t\t\tif(toggledRows.length > self.table.options.selectable){\r\n\t\t\t\t\t\t\t\t\t\ttoggledRows = toggledRows.slice(0, self.table.options.selectable)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tself.selectRows(toggledRows);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(e.ctrlKey || e.metaKey){\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tself.deselectRows(undefined, true);\r\n\t\t\t\t\t\t\tself.selectRows(row);\r\n\t\t\t\t\t\t\tself.lastClickedRow = row;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.addEventListener(\"click\", function(e){\r\n\t\t\t\t\t\tif(!self.table.modExists(\"edit\") || !self.table.modules.edit.getCurrentCell()){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(!self.selecting){\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mousedown\", function(e){\r\n\t\t\t\t\t\tif(e.shiftKey){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\r\n\t\t\t\t\t\t\tself.selecting = true;\r\n\r\n\t\t\t\t\t\t\tself.selectPrev = [];\r\n\r\n\t\t\t\t\t\t\tdocument.body.addEventListener(\"mouseup\", endSelect);\r\n\t\t\t\t\t\t\tdocument.body.addEventListener(\"keyup\", endSelect);\r\n\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mouseenter\", function(e){\r\n\t\t\t\t\t\tif(self.selecting){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.toggleRow(row);\r\n\r\n\t\t\t\t\t\t\tif(self.selectPrev[1] == row){\r\n\t\t\t\t\t\t\t\tself.toggleRow(self.selectPrev[0]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\telement.addEventListener(\"mouseout\", function(e){\r\n\t\t\t\t\t\tif(self.selecting){\r\n\t\t\t\t\t\t\tself.table._clearSelection();\r\n\t\t\t\t\t\t\tself.selectPrev.unshift(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\telement.classList.add(\"tabulator-unselectable\");\r\n\t\t\telement.classList.remove(\"tabulator-selectable\");\r\n\t\t}\r\n\t}\r\n\r\n\t//toggle row selection\r\n\ttoggleRow(row){\r\n\t\tif(this.table.options.selectableCheck.call(this.table, row.getComponent())){\r\n\t\t\tif(row.modules.select && row.modules.select.selected){\r\n\t\t\t\tthis._deselectRow(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis._selectRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//select a number of rows\r\n\tselectRows(rows){\r\n\t\tvar rowMatch;\r\n\r\n\t\tswitch(typeof rows){\r\n\t\t\tcase \"undefined\":\r\n\t\t\tthis.table.rowManager.rows.forEach((row) => {\r\n\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t});\r\n\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"string\":\r\n\r\n\t\t\trowMatch = this.table.rowManager.findRow(rows);\r\n\r\n\t\t\tif(rowMatch){\r\n\t\t\t\tthis._selectRow(rowMatch, true, true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.rowManager.getRows(rows).forEach((row) => {\r\n\t\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._rowSelectionChanged();\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\tif(Array.isArray(rows)){\r\n\t\t\t\trows.forEach((row) => {\r\n\t\t\t\t\tthis._selectRow(row, true, true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._rowSelectionChanged();\r\n\t\t\t}else{\r\n\t\t\t\tthis._selectRow(rows, false, true);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//select an individual row\r\n\t_selectRow(rowInfo, silent, force){\r\n\t\tvar index;\r\n\r\n\t\t//handle max row count\r\n\t\tif(!isNaN(this.table.options.selectable) && this.table.options.selectable !== true && !force){\r\n\t\t\tif(this.selectedRows.length >= this.table.options.selectable){\r\n\t\t\t\tif(this.table.options.selectableRollingSelection){\r\n\t\t\t\t\tthis._deselectRow(this.selectedRows[0]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar row = this.table.rowManager.findRow(rowInfo);\r\n\r\n\t\tif(row){\r\n\t\t\tif(this.selectedRows.indexOf(row) == -1){\r\n\t\t\t\trow.getElement().classList.add(\"tabulator-selected\");\r\n\t\t\t\tif(!row.modules.select){\r\n\t\t\t\t\trow.modules.select = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow.modules.select.selected = true;\r\n\t\t\t\tif(row.modules.select.checkboxEl){\r\n\t\t\t\t\trow.modules.select.checkboxEl.checked = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.selectedRows.push(row);\r\n\r\n\t\t\t\tif(this.table.options.dataTreeSelectPropagate){\r\n\t\t\t\t\tthis.childRowSelection(row, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"rowSelected\", row.getComponent());\r\n\r\n\t\t\t\tthis._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Selection Error - No such row found, ignoring selection:\" + rowInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisRowSelected(row){\r\n\t\treturn this.selectedRows.indexOf(row) !== -1;\r\n\t}\r\n\r\n\t//deselect a number of rows\r\n\tdeselectRows(rows, silent){\r\n\t\tvar self = this,\r\n\t\trowCount;\r\n\t\t\r\n\t\tif(typeof rows == \"undefined\"){\r\n\r\n\t\t\trowCount = self.selectedRows.length;\r\n\r\n\t\t\tfor(let i = 0; i < rowCount; i++){\r\n\t\t\t\tself._deselectRow(self.selectedRows[0], true);\r\n\t\t\t}\r\n\r\n\t\t\tself._rowSelectionChanged(silent);\r\n\r\n\t\t}else{\r\n\t\t\tif(Array.isArray(rows)){\r\n\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\tself._deselectRow(row, true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}else{\r\n\t\t\t\tself._deselectRow(rows, silent);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//deselect an individual row\r\n\t_deselectRow(rowInfo, silent){\r\n\t\tvar self = this,\r\n\t\trow = self.table.rowManager.findRow(rowInfo),\r\n\t\tindex;\r\n\r\n\t\tif(row){\r\n\t\t\tindex = self.selectedRows.findIndex(function(selectedRow){\r\n\t\t\t\treturn selectedRow == row;\r\n\t\t\t});\r\n\r\n\t\t\tif(index > -1){\r\n\r\n\t\t\t\trow.getElement().classList.remove(\"tabulator-selected\");\r\n\t\t\t\tif(!row.modules.select){\r\n\t\t\t\t\trow.modules.select = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow.modules.select.selected = false;\r\n\t\t\t\tif(row.modules.select.checkboxEl){\r\n\t\t\t\t\trow.modules.select.checkboxEl.checked = false;\r\n\t\t\t\t}\r\n\t\t\t\tself.selectedRows.splice(index, 1);\r\n\r\n\t\t\t\tif(this.table.options.dataTreeSelectPropagate){\r\n\t\t\t\t\tthis.childRowSelection(row, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchExternal(\"rowDeselected\", row.getComponent());\r\n\r\n\t\t\t\tself._rowSelectionChanged(silent);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Deselection Error - No such row found, ignoring selection:\" + rowInfo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetSelectedData(){\r\n\t\tvar data = [];\r\n\r\n\t\tthis.selectedRows.forEach(function(row){\r\n\t\t\tdata.push(row.getData());\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tgetSelectedRows(){\r\n\r\n\t\tvar rows = [];\r\n\r\n\t\tthis.selectedRows.forEach(function(row){\r\n\t\t\trows.push(row.getComponent());\r\n\t\t});\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t_rowSelectionChanged(silent){\r\n\t\tif(this.headerCheckboxElement){\r\n\t\t\tif(this.selectedRows.length === 0){\r\n\t\t\t\tthis.headerCheckboxElement.checked = false;\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = false;\r\n\t\t\t} else if(this.table.rowManager.rows.length === this.selectedRows.length){\r\n\t\t\t\tthis.headerCheckboxElement.checked = true;\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.headerCheckboxElement.indeterminate = true;\r\n\t\t\t\tthis.headerCheckboxElement.checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!silent){\r\n\t\t\tthis.dispatchExternal(\"rowSelectionChanged\", this.getSelectedData(), this.getSelectedRows());\r\n\t\t}\r\n\t}\r\n\r\n\tregisterRowSelectCheckbox (row, element) {\r\n\t\tif(!row._row.modules.select){\r\n\t\t\trow._row.modules.select = {};\r\n\t\t}\r\n\r\n\t\trow._row.modules.select.checkboxEl = element;\r\n\t}\r\n\r\n\tregisterHeaderSelectCheckbox (element) {\r\n\t\tthis.headerCheckboxElement = element;\r\n\t}\r\n\r\n\tchildRowSelection(row, select){\r\n\t\tvar children = this.table.modules.dataTree.getChildren(row, true);\r\n\r\n\t\tif(select){\r\n\t\t\tfor(let child of children){\r\n\t\t\t\tthis._selectRow(child, true);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(let child of children){\r\n\t\t\t\tthis._deselectRow(child, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nSelectRow.moduleName = \"selectRow\";\r\n\r\nexport default SelectRow;","//sort numbers\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar decimal = params.decimalSeparator;\r\n\tvar thousand = params.thousandSeparator;\r\n\tvar emptyAlign = 0;\r\n\r\n\ta = String(a);\r\n\tb = String(b);\r\n\r\n\tif(thousand){\r\n\t\ta = a.split(thousand).join(\"\");\r\n\t\tb = b.split(thousand).join(\"\");\r\n\t}\r\n\r\n\tif(decimal){\r\n\t\ta = a.split(decimal).join(\".\");\r\n\t\tb = b.split(decimal).join(\".\");\r\n\t}\r\n\r\n\ta = parseFloat(a);\r\n\tb = parseFloat(b);\r\n\r\n\t//handle non numeric values\r\n\tif(isNaN(a)){\r\n\t\temptyAlign =  isNaN(b) ? 0 : -1;\r\n\t}else if(isNaN(b)){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\t\t//compare valid values\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort strings\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\tvar locale;\r\n\r\n\t//handle empty values\r\n\tif(!a){\r\n\t\temptyAlign =  !b ? 0 : -1;\r\n\t}else if(!b){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\t\t//compare valid values\r\n\t\tswitch(typeof params.locale){\r\n\t\t\tcase \"boolean\":\r\n\t\t\tif(params.locale){\r\n\t\t\t\tlocale = this.langLocale();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"string\":\r\n\t\t\tlocale = params.locale;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn String(a).toLowerCase().localeCompare(String(b).toLowerCase(), locale);\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort datetime\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar DT = window.DateTime || luxon.DateTime;\r\n\tvar format = params.format || \"dd/MM/yyyy HH:mm:ss\",\r\n\talignEmptyValues = params.alignEmptyValues,\r\n\temptyAlign = 0;\r\n\r\n\tif(typeof DT != \"undefined\"){\r\n\t\ta = DT.fromFormat(String(a), format);\r\n\t\tb = DT.fromFormat(String(b), format);\r\n\r\n\t\tif(!a.isValid){\r\n\t\t\temptyAlign = !b.isValid ? 0 : -1;\r\n\t\t}else if(!b.isValid){\r\n\t\t\temptyAlign =  1;\r\n\t\t}else{\r\n\t\t\t//compare valid values\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\r\n\t\t//fix empty values in position\r\n\t\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\t\temptyAlign *= -1;\r\n\t\t}\r\n\r\n\t\treturn emptyAlign;\r\n\r\n\t}else{\r\n\t\tconsole.error(\"Sort Error - 'datetime' sorter is dependant on luxon.js\");\r\n\t}\r\n};","import datetime from './datetime.js';\r\n\r\n//sort date\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tif(!params.format){\r\n\t\tparams.format = \"dd/MM/yyyy\";\r\n\t}\r\n\r\n\treturn datetime.call(this, a, b, aRow, bRow, column, dir, params);\r\n};","import datetime from './datetime.js';\r\n\r\n//sort times\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tif(!params.format){\r\n\t\tparams.format = \"HH:mm\";\r\n\t}\r\n\r\n\treturn datetime.call(this, a, b, aRow, bRow, column, dir, params);\r\n};","//sort booleans\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = a === true || a === \"true\" || a === \"True\" || a === 1 ? 1 : 0;\r\n\tvar el2 = b === true || b === \"true\" || b === \"True\" || b === 1 ? 1 : 0;\r\n\r\n\treturn el1 - el2;\r\n};","//sort if element contains any data\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = 0;\r\n\tvar el2 = 0;\r\n\tvar type = params.type || \"length\";\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\r\n\tfunction calc(value){\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"length\":\r\n\t\t\treturn value.length;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"sum\":\r\n\t\t\treturn value.reduce(function(c, d){\r\n\t\t\t\treturn c + d;\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"max\":\r\n\t\t\treturn Math.max.apply(null, value) ;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"min\":\r\n\t\t\treturn Math.min.apply(null, value) ;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"avg\":\r\n\t\t\treturn value.reduce(function(c, d){\r\n\t\t\t\treturn c + d;\r\n\t\t\t}) / value.length;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t//handle non array values\r\n\tif(!Array.isArray(a)){\r\n\t\talignEmptyValues = !Array.isArray(b) ? 0 : -1;\r\n\t}else if(!Array.isArray(b)){\r\n\t\talignEmptyValues = 1;\r\n\t}else{\r\n\r\n\t\t//compare valid values\r\n\t\tel1 = a ? calc(a) : 0;\r\n\t\tel2 = b ? calc(b) : 0;\r\n\r\n\t\treturn el1 - el2;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","//sort if element contains any data\r\nexport default function(a, b, aRow, bRow, column, dir, params){\r\n\tvar el1 = typeof a == \"undefined\" ? 0 : 1;\r\n\tvar el2 = typeof b == \"undefined\" ? 0 : 1;\r\n\r\n\treturn el1 - el2;\r\n};","//sort alpha numeric strings\r\nexport default function(as, bs, aRow, bRow, column, dir, params){\r\n\tvar a, b, a1, b1, i= 0, L, rx = /(\\d+)|(\\D+)/g, rd = /\\d/;\r\n\tvar alignEmptyValues = params.alignEmptyValues;\r\n\tvar emptyAlign = 0;\r\n\r\n\t//handle empty values\r\n\tif(!as && as!== 0){\r\n\t\temptyAlign =  !bs && bs!== 0 ? 0 : -1;\r\n\t}else if(!bs && bs!== 0){\r\n\t\temptyAlign =  1;\r\n\t}else{\r\n\r\n\t\tif(isFinite(as) && isFinite(bs)) return as - bs;\r\n\t\ta = String(as).toLowerCase();\r\n\t\tb = String(bs).toLowerCase();\r\n\t\tif(a === b) return 0;\r\n\t\tif(!(rd.test(a) && rd.test(b))) return a > b ? 1 : -1;\r\n\t\ta = a.match(rx);\r\n\t\tb = b.match(rx);\r\n\t\tL = a.length > b.length ? b.length : a.length;\r\n\t\twhile(i < L){\r\n\t\t\ta1= a[i];\r\n\t\t\tb1= b[i++];\r\n\t\t\tif(a1 !== b1){\r\n\t\t\t\tif(isFinite(a1) && isFinite(b1)){\r\n\t\t\t\t\tif(a1.charAt(0) === \"0\") a1 = \".\" + a1;\r\n\t\t\t\t\tif(b1.charAt(0) === \"0\") b1 = \".\" + b1;\r\n\t\t\t\t\treturn a1 - b1;\r\n\t\t\t\t}\r\n\t\t\t\telse return a1 > b1 ? 1 : -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a.length > b.length;\r\n\t}\r\n\r\n\t//fix empty values in position\r\n\tif((alignEmptyValues === \"top\" && dir === \"desc\") || (alignEmptyValues === \"bottom\" && dir === \"asc\")){\r\n\t\temptyAlign *= -1;\r\n\t}\r\n\r\n\treturn emptyAlign;\r\n};","import number from './sorters/number.js';\r\nimport string from './sorters/string.js';\r\nimport date from './sorters/date.js';\r\nimport time from './sorters/time.js';\r\nimport datetime from './sorters/datetime.js';\r\nimport boolean from './sorters/boolean.js';\r\nimport array from './sorters/array.js';\r\nimport exists from './sorters/exists.js';\r\nimport alphanum from './sorters/alphanum.js';\r\n\r\nexport default {\r\n\tnumber:number,\r\n\tstring:string,\r\n\tdate:date,\r\n\ttime:time,\r\n\tdatetime:datetime,\r\n\tboolean:boolean,\r\n\tarray:array,\r\n\texists:exists,\r\n\talphanum:alphanum\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultSorters from './defaults/sorters.js';\r\n\r\nclass Sort extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t \tthis.sortList = []; //holder current sort\r\n\t \tthis.changed = false; //has the sort changed since last render\r\n\r\n\t \tthis.registerTableOption(\"sortMode\", \"local\"); //local or remote sorting\r\n\r\n\t \tthis.registerTableOption(\"initialSort\", false); //initial sorting criteria\r\n\t \tthis.registerTableOption(\"columnHeaderSortMulti\", true); //multiple or single column sorting\r\n\t \tthis.registerTableOption(\"sortOrderReverse\", false); //reverse internal sort ordering\r\n\t \tthis.registerTableOption(\"headerSortElement\", \"<div class='tabulator-arrow'></div>\"); //header sort element\r\n\r\n\t \tthis.registerColumnOption(\"sorter\");\r\n\t \tthis.registerColumnOption(\"sorterParams\");\r\n\r\n\t \tthis.registerColumnOption(\"headerSort\", true);\r\n\t \tthis.registerColumnOption(\"headerSortStartingDir\");\r\n\t \tthis.registerColumnOption(\"headerSortTristate\");\r\n\r\n\t }\r\n\r\n\t initialize(){\r\n\t \tthis.subscribe(\"column-layout\", this.initializeColumn.bind(this));\r\n\t \tthis.subscribe(\"table-built\", this.tableBuilt.bind(this));\r\n\t \tthis.registerDataHandler(this.sort.bind(this), 20);\r\n\r\n\t \tthis.registerTableFunction(\"setSort\", this.userSetSort.bind(this));\r\n\t \tthis.registerTableFunction(\"getSorters\", this.getSort.bind(this));\r\n\t \tthis.registerTableFunction(\"clearSort\", this.clearSort.bind(this));\r\n\r\n\t \tif(this.table.options.sortMode === \"remote\"){\r\n\t \t\tthis.subscribe(\"data-params\", this.remoteSortParams.bind(this));\r\n\t \t}\r\n\t }\r\n\r\n\t tableBuilt(){\r\n\t \tif(this.table.options.initialSort){\r\n\t \t\tthis.setSort(this.table.options.initialSort);\r\n\t \t}\r\n\t }\r\n\r\n\t remoteSortParams(data, config, silent, params){\r\n\t \tvar sorters = this.getSort();\r\n\r\n\t \tsorters.forEach((item) => {\r\n\t \t\tdelete item.column;\r\n\t \t});\r\n\r\n\t \tparams.sort = sorters;\r\n\r\n\t \treturn params;\r\n\t }\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tuserSetSort(sortList, dir){\r\n\t\tthis.setSort(sortList, dir);\r\n\t\t// this.table.rowManager.sorterRefresh();\r\n\t\tthis.refreshSort();\r\n\t}\r\n\r\n\tclearSort(){\r\n\t\tthis.clear();\r\n\t\t// this.table.rowManager.sorterRefresh();\r\n\t\tthis.refreshSort();\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\t//initialize column header for sorting\r\n\tinitializeColumn(column){\r\n\t\tvar sorter = false,\r\n\t\tcolEl,\r\n\t\tarrowEl;\r\n\r\n\t\tswitch(typeof column.definition.sorter){\r\n\t\t\tcase \"string\":\r\n\t\t\tif(Sort.sorters[column.definition.sorter]){\r\n\t\t\t\tsorter = Sort.sorters[column.definition.sorter];\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Sort Error - No such sorter found: \", column.definition.sorter);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\tsorter = column.definition.sorter;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcolumn.modules.sort = {\r\n\t\t\tsorter:sorter, dir:\"none\",\r\n\t\t\tparams:column.definition.sorterParams || {},\r\n\t\t\tstartingDir:column.definition.headerSortStartingDir || \"asc\",\r\n\t\t\ttristate: column.definition.headerSortTristate,\r\n\t\t};\r\n\r\n\t\tif(column.definition.headerSort !== false){\r\n\r\n\t\t\tcolEl = column.getElement();\r\n\r\n\t\t\tcolEl.classList.add(\"tabulator-sortable\");\r\n\r\n\r\n\t\t\tarrowEl = document.createElement(\"div\");\r\n\t\t\tarrowEl.classList.add(\"tabulator-col-sorter\");\r\n\r\n\t\t\tif(typeof this.table.options.headerSortElement == \"object\"){\r\n\t\t\t\tarrowEl.appendChild(this.table.options.headerSortElement);\r\n\t\t\t}else{\r\n\t\t\t\tarrowEl.innerHTML = this.table.options.headerSortElement;\r\n\t\t\t}\r\n\r\n\t\t\t//create sorter arrow\r\n\t\t\tcolumn.titleHolderElement.appendChild(arrowEl);\r\n\r\n\t\t\tcolumn.modules.sort.element = arrowEl;\r\n\r\n\t\t\t//sort on click\r\n\t\t\tcolEl.addEventListener(\"click\", (e) => {\r\n\t\t\t\tvar dir = \"\",\r\n\t\t\t\tsorters=[],\r\n\t\t\t\tmatch = false;\r\n\r\n\t\t\t\tif(column.modules.sort){\r\n\t\t\t\t\tif(column.modules.sort.tristate){\r\n\t\t\t\t\t\tif(column.modules.sort.dir == \"none\"){\r\n\t\t\t\t\t\t\tdir = column.modules.sort.startingDir;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(column.modules.sort.dir == column.modules.sort.startingDir){\r\n\t\t\t\t\t\t\t\tdir = column.modules.sort.dir == \"asc\" ? \"desc\" : \"asc\";\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tdir = \"none\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tswitch(column.modules.sort.dir){\r\n\t\t\t\t\t\t\tcase \"asc\":\r\n\t\t\t\t\t\t\tdir = \"desc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"desc\":\r\n\t\t\t\t\t\t\tdir = \"asc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tdir = column.modules.sort.startingDir;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (this.table.options.columnHeaderSortMulti && (e.shiftKey || e.ctrlKey)) {\r\n\t\t\t\t\t\tsorters = this.getSort();\r\n\r\n\t\t\t\t\t\tmatch = sorters.findIndex((sorter) => {\r\n\t\t\t\t\t\t\treturn sorter.field === column.getField();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(match > -1){\r\n\t\t\t\t\t\t\tsorters[match].dir = dir;\r\n\r\n\t\t\t\t\t\t\tif(match != sorters.length -1){\r\n\t\t\t\t\t\t\t\tmatch = sorters.splice(match, 1)[0];\r\n\t\t\t\t\t\t\t\tif(dir != \"none\"){\r\n\t\t\t\t\t\t\t\t\tsorters.push(match);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(dir != \"none\"){\r\n\t\t\t\t\t\t\t\tsorters.push({column:column, dir:dir});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//add to existing sort\r\n\t\t\t\t\t\tthis.setSort(sorters);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(dir == \"none\"){\r\n\t\t\t\t\t\t\tthis.clear();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t//sort by column only\r\n\t\t\t\t\t\t\tthis.setSort(column, dir);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this.table.rowManager.sorterRefresh(!this.sortList.length);\r\n\t\t\t\t\tthis.refreshSort();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trefreshSort(){\r\n\t\tif(this.table.options.sortMode === \"remote\"){\r\n\t\t\tthis.reloadData();\r\n\t\t}else{\r\n\t\t\tthis.refreshData(true);\r\n\t\t}\r\n\r\n\t\t//TODO - Persist left position of row manager\r\n\t\t// left = this.scrollLeft;\r\n\t\t// this.scrollHorizontal(left);\r\n\t}\r\n\r\n\t//check if the sorters have changed since last use\r\n\thasChanged(){\r\n\t\tvar changed = this.changed;\r\n\t\tthis.changed = false;\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t//return current sorters\r\n\tgetSort(){\r\n\t\tvar self = this,\r\n\t\tsorters = [];\r\n\r\n\t\tself.sortList.forEach(function(item){\r\n\t\t\tif(item.column){\r\n\t\t\t\tsorters.push({column:item.column.getComponent(), field:item.column.getField(), dir:item.dir});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn sorters;\r\n\t}\r\n\r\n\t//change sort list and trigger sort\r\n\tsetSort(sortList, dir){\r\n\t\tvar self = this,\r\n\t\tnewSortList = [];\r\n\r\n\t\tif(!Array.isArray(sortList)){\r\n\t\t\tsortList = [{column: sortList, dir:dir}];\r\n\t\t}\r\n\r\n\t\tsortList.forEach(function(item){\r\n\t\t\tvar column;\r\n\r\n\t\t\tcolumn = self.table.columnManager.findColumn(item.column);\r\n\r\n\t\t\tif(column){\r\n\t\t\t\titem.column = column;\r\n\t\t\t\tnewSortList.push(item);\r\n\t\t\t\tself.changed = true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Sort Warning - Sort field does not exist and is being ignored: \", item.column);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tself.sortList = newSortList;\r\n\r\n\t\tthis.dispatch(\"sort-changed\");\r\n\t}\r\n\r\n\t//clear sorters\r\n\tclear(){\r\n\t\tthis.setSort([]);\r\n\t}\r\n\r\n\t//find appropriate sorter for column\r\n\tfindSorter(column){\r\n\t\tvar row = this.table.rowManager.activeRows[0],\r\n\t\tsorter = \"string\",\r\n\t\tfield, value;\r\n\r\n\t\tif(row){\r\n\t\t\trow = row.getData();\r\n\t\t\tfield = column.getField();\r\n\r\n\t\t\tif(field){\r\n\r\n\t\t\t\tvalue = column.getFieldValue(row);\r\n\r\n\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tsorter = \"boolean\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(value) && value !== \"\"){\r\n\t\t\t\t\t\tsorter = \"number\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)){\r\n\t\t\t\t\t\t\tsorter = \"alphanum\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Sort.sorters[sorter];\r\n\t}\r\n\r\n\t//work through sort list sorting data\r\n\tsort(data){\r\n\t\tvar self = this,\r\n\t\tsortList = this.table.options.sortOrderReverse ? self.sortList.slice().reverse() : self.sortList,\r\n\t\tsortListActual = [],\r\n\t\trowComponents = [],\r\n\t\tlastSort;\r\n\r\n\t\tif(this.subscribedExternal(\"dataSorting\")){\r\n\t\t\tthis.dispatchExternal(\"dataSorting\", self.getSort());\r\n\t\t}\r\n\r\n\t\tself.clearColumnHeaders();\r\n\r\n\t\tif(this.table.options.sortMode !== \"remote\"){\r\n\r\n\t\t\t//build list of valid sorters and trigger column specific callbacks before sort begins\r\n\t\t\tsortList.forEach(function(item, i){\r\n\t\t\t\tvar sortObj = item.column.modules.sort;\r\n\r\n\t\t\t\tif(item.column && sortObj){\r\n\r\n\t\t\t\t\t//if no sorter has been defined, take a guess\r\n\t\t\t\t\tif(!sortObj.sorter){\r\n\t\t\t\t\t\tsortObj.sorter = self.findSorter(item.column);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titem.params = typeof sortObj.params === \"function\" ? sortObj.params(item.column.getComponent(), item.dir) : sortObj.params;\r\n\r\n\t\t\t\t\tsortListActual.push(item);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.setColumnHeader(item.column, item.dir);\r\n\t\t\t});\r\n\r\n\t\t\t//sort data\r\n\t\t\tif (sortListActual.length) {\r\n\t\t\t\tself._sortItems(data, sortListActual);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\tsortList.forEach(function(item, i){\r\n\t\t\t\tself.setColumnHeader(item.column, item.dir);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataSorted\")){\r\n\t\t\tdata.forEach((row) => {\r\n\t\t\t\trowComponents.push(row.getComponent());\r\n\t\t\t});\r\n\r\n\t\t\tthis.dispatchExternal(\"dataSorted\", self.getSort(), rowComponents);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//clear sort arrows on columns\r\n\tclearColumnHeaders(){\r\n\t\tthis.table.columnManager.getRealColumns().forEach(function(column){\r\n\t\t\tif(column.modules.sort){\r\n\t\t\t\tcolumn.modules.sort.dir = \"none\";\r\n\t\t\t\tcolumn.getElement().setAttribute(\"aria-sort\", \"none\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//set the column header sort direction\r\n\tsetColumnHeader(column, dir){\r\n\t\tcolumn.modules.sort.dir = dir;\r\n\t\tcolumn.getElement().setAttribute(\"aria-sort\", dir);\r\n\t}\r\n\r\n\t//sort each item in sort list\r\n\t_sortItems(data, sortList){\r\n\t\tvar sorterCount = sortList.length - 1;\r\n\r\n\t\tdata.sort((a, b) => {\r\n\t\t\tvar result;\r\n\r\n\t\t\tfor(var i = sorterCount; i>= 0; i--){\r\n\t\t\t\tlet sortItem = sortList[i];\r\n\r\n\t\t\t\tresult = this._sortRow(a, b, sortItem.column, sortItem.dir, sortItem.params);\r\n\r\n\t\t\t\tif(result !== 0){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\r\n\t//process individual rows for a sort function on active data\r\n\t_sortRow(a, b, column, dir, params){\r\n\t\tvar el1Comp, el2Comp, colComp;\r\n\r\n\t\t//switch elements depending on search direction\r\n\t\tvar el1 = dir == \"asc\" ? a : b;\r\n\t\tvar el2 = dir == \"asc\" ? b : a;\r\n\r\n\t\ta = column.getFieldValue(el1.getData());\r\n\t\tb = column.getFieldValue(el2.getData());\r\n\r\n\t\ta = typeof a !== \"undefined\" ? a : \"\";\r\n\t\tb = typeof b !== \"undefined\" ? b : \"\";\r\n\r\n\t\tel1Comp = el1.getComponent();\r\n\t\tel2Comp = el2.getComponent();\r\n\r\n\t\treturn column.modules.sort.sorter.call(this, a, b, el1Comp, el2Comp, column.getComponent(), dir, params);\r\n\t}\r\n}\r\n\r\nSort.moduleName = \"sort\";\r\n\r\n//load defaults\r\nSort.sorters = defaultSorters;\r\n\r\nexport default Sort;","export default {\r\n\t//is integer\r\n\tinteger: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvalue = Number(value);\r\n\t\treturn typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n\t},\r\n\r\n\t//is float\r\n\tfloat: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvalue = Number(value);\r\n\t\treturn typeof value === 'number' && isFinite(value) && value % 1 !== 0;\r\n\t},\r\n\r\n\t//must be a number\r\n\tnumeric: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn !isNaN(value);\r\n\t},\r\n\r\n\t//must be a string\r\n\tstring: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn isNaN(value);\r\n\t},\r\n\r\n\t//maximum value\r\n\tmax: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn parseFloat(value) <= parameters;\r\n\t},\r\n\r\n\t//minimum value\r\n\tmin: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn parseFloat(value) >= parameters;\r\n\t},\r\n\r\n\t//starts with  value\r\n\tstarts: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).toLowerCase().startsWith(String(parameters).toLowerCase());\r\n\t},\r\n\r\n\t//ends with  value\r\n\tends: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).toLowerCase().endsWith(String(parameters).toLowerCase());\r\n\t},\r\n\r\n\r\n\t//minimum string length\r\n\tminLength: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).length >= parameters;\r\n\t},\r\n\r\n\t//maximum string length\r\n\tmaxLength: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn String(value).length <= parameters;\r\n\t},\r\n\r\n\t//in provided value list\r\n\tin: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif(typeof parameters == \"string\"){\r\n\t\t\tparameters = parameters.split(\"|\");\r\n\t\t}\r\n\r\n\t\treturn value === \"\" || parameters.indexOf(value) > -1;\r\n\t},\r\n\r\n\t//must match provided regex\r\n\tregex: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar reg = new RegExp(parameters);\r\n\r\n\t\treturn reg.test(value);\r\n\t},\r\n\r\n\t//value must be unique in this column\r\n\tunique: function(cell, value, parameters){\r\n\t\tif(value === \"\" || value === null || typeof value === \"undefined\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar unique = true;\r\n\r\n\t\tvar cellData = cell.getData();\r\n\t\tvar column = cell.getColumn()._getSelf();\r\n\r\n\t\tthis.table.rowManager.rows.forEach(function(row){\r\n\t\t\tvar data = row.getData();\r\n\r\n\t\t\tif(data !== cellData){\r\n\t\t\t\tif(value == column.getFieldValue(data)){\r\n\t\t\t\t\tunique = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn unique;\r\n\t},\r\n\r\n\t//must have a value\r\n\trequired:function(cell, value, parameters){\r\n\t\treturn value !== \"\" && value !== null && typeof value !== \"undefined\";\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultValidators from './defaults/validators.js';\r\n\r\nclass Validate extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.invalidCells = [];\r\n\r\n\t\tthis.registerTableOption(\"validationMode\", \"blocking\");\r\n\r\n\t\tthis.registerColumnOption(\"validator\");\r\n\r\n\t\tthis.registerTableFunction(\"getInvalidCells\", this.getInvalidCells.bind(this));\r\n\t\tthis.registerTableFunction(\"clearCellValidation\", this.userClearCellValidation.bind(this));\r\n\t\tthis.registerTableFunction(\"validate\", this.userValidate.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"cell\", \"isValid\", this.cellIsValid.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"clearValidation\", this.clearValidation.bind(this));\r\n\t\tthis.registerComponentFunction(\"cell\", \"validate\", this.cellValidate.bind(this));\r\n\r\n\t\tthis.registerComponentFunction(\"column\", \"validate\", this.columnValidate.bind(this));\r\n\t\tthis.registerComponentFunction(\"row\", \"validate\", this.rowValidate.bind(this));\r\n\t}\r\n\r\n\r\n\tinitialize(){\r\n\t\tthis.subscribe(\"cell-delete\", this.clearValidation.bind(this));\r\n\t\tthis.subscribe(\"column-layout\", this.initializeColumnCheck.bind(this));\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Cell Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\tcellIsValid(cell){\r\n\t\treturn cell.modules.validate ? !cell.modules.validate.invalid : true;\r\n\t}\r\n\r\n\tcellValidate(cell){\r\n\t\treturn this.validate(cell.column.modules.validate, cell, cell.getValue());\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Column Functions ////////\r\n\t///////////////////////////////////\r\n\r\n\tcolumnValidate(column){\r\n\t\tvar invalid = [];\r\n\r\n\t\tcolumn.cells.forEach(function(cell){\r\n\t\t\tif(!this.cellValidate(cell)){\r\n\t\t\t\tinvalid.push(cell.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn invalid.length ? invalid : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t////////// Row Functions //////////\r\n\t///////////////////////////////////\r\n\r\n\trowValidate(row){\r\n\t\tvar invalid = [];\r\n\r\n\t\trow.cells.forEach(function(cell){\r\n\t\t\tif(!this.cellValidate(cell)){\r\n\t\t\t\tinvalid.push(cell.getComponent());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn invalid.length ? invalid : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Table Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\r\n\tuserClearCellValidation(cells){\r\n\t\tif(!cells){\r\n\t\t\tcells = this.getInvalidCells();\r\n\t\t}\r\n\r\n\t\tif(!Array.isArray(cells)){\r\n\t\t\tcells = [cells];\r\n\t\t}\r\n\r\n\t\tcells.forEach((cell) => {\r\n\t\t\tthis.clearValidation(cell._getSelf());\r\n\t\t});\r\n\t}\r\n\r\n\tuserValidate(cells){\r\n\t\tvar output = [];\r\n\r\n\t\t//clear row data\r\n\t\tthis.table.rowManager.rows.forEach(function(row){\r\n\t\t\tvar valid = row.validate();\r\n\r\n\t\t\tif(valid !== true){\r\n\t\t\t\toutput = output.concat(valid);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output.length ? output : true;\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t///////// Internal Logic //////////\r\n\t///////////////////////////////////\r\n\r\n\tinitializeColumnCheck(column){\r\n\t\tif(typeof column.definition.validator !== \"undefined\"){\r\n\t\t\tthis.initializeColumn(column);\r\n\t\t}\r\n\t}\r\n\r\n\t//validate\r\n\tinitializeColumn(column){\r\n\t\tvar self = this,\r\n\t\tconfig = [],\r\n\t\tvalidator;\r\n\r\n\t\tif(column.definition.validator){\r\n\r\n\t\t\tif(Array.isArray(column.definition.validator)){\r\n\t\t\t\tcolumn.definition.validator.forEach(function(item){\r\n\t\t\t\t\tvalidator = self._extractValidator(item);\r\n\r\n\t\t\t\t\tif(validator){\r\n\t\t\t\t\t\tconfig.push(validator);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}else{\r\n\t\t\t\tvalidator = this._extractValidator(column.definition.validator);\r\n\r\n\t\t\t\tif(validator){\r\n\t\t\t\t\tconfig.push(validator);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.modules.validate = config.length ? config : false;\r\n\t\t}\r\n\t}\r\n\r\n\t_extractValidator(value){\r\n\t\tvar type, params, pos;\r\n\r\n\t\tswitch(typeof value){\r\n\t\t\tcase \"string\":\r\n\t\t\tpos = value.indexOf(':');\r\n\r\n\t\t\tif(pos > -1){\r\n\t\t\t\ttype = value.substring(0,pos);\r\n\t\t\t\tparams = value.substring(pos+1);\r\n\t\t\t}else{\r\n\t\t\t\ttype = value;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._buildValidator(type, params);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"function\":\r\n\t\t\treturn this._buildValidator(value);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"object\":\r\n\t\t\treturn this._buildValidator(value.type, value.parameters);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t_buildValidator(type, params){\r\n\r\n\t\tvar func = typeof type == \"function\" ? type : Validate.validators[type];\r\n\r\n\t\tif(!func){\r\n\t\t\tconsole.warn(\"Validator Setup Error - No matching validator found:\", type);\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\treturn {\r\n\t\t\t\ttype:typeof type == \"function\" ? \"function\" : type,\r\n\t\t\t\tfunc:func,\r\n\t\t\t\tparams:params,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate(validators, cell, value){\r\n\t\tvar self = this,\r\n\t\tvalid = [],\r\n\t\tinvalidIndex = this.invalidCells.indexOf(cell);\r\n\r\n\t\tif(validators){\r\n\t\t\tvalidators.forEach(function(item){\r\n\t\t\t\tif(!item.func.call(self, cell.getComponent(), value, item.params)){\r\n\t\t\t\t\tvalid.push({\r\n\t\t\t\t\t\ttype:item.type,\r\n\t\t\t\t\t\tparameters:item.params\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvalid = valid.length ? valid : true;\r\n\r\n\t\tif(!cell.modules.validate){\r\n\t\t\tcell.modules.validate = {};\r\n\t\t}\r\n\r\n\t\tif(valid === true){\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\t\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\r\n\t\t\tif(invalidIndex > -1){\r\n\t\t\t\tthis.invalidCells.splice(invalidIndex, 1);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcell.modules.validate.invalid = true;\r\n\r\n\t\t\tif(this.table.options.validationMode !== \"manual\"){\r\n\t\t\t\tcell.getElement().classList.add(\"tabulator-validation-fail\");\r\n\t\t\t}\r\n\r\n\t\t\tif(invalidIndex == -1){\r\n\t\t\t\tthis.invalidCells.push(cell);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tgetInvalidCells(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.invalidCells.forEach((cell) => {\r\n\t\t\toutput.push(cell.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tclearValidation(cell){\r\n\t\tvar invalidIndex;\r\n\r\n\t\tif(cell.modules.validate && cell.modules.validate.invalid){\r\n\r\n\t\t\tcell.getElement().classList.remove(\"tabulator-validation-fail\");\r\n\t\t\tcell.modules.validate.invalid = false;\r\n\r\n\t\t\tinvalidIndex = this.invalidCells.indexOf(cell);\r\n\r\n\t\t\tif(invalidIndex > -1){\r\n\t\t\t\tthis.invalidCells.splice(invalidIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nValidate.moduleName = \"validate\";\r\n\r\n//load defaults\r\nValidate.validators = defaultValidators;\r\n\r\nexport default Validate;","export default {\r\n\r\n\tdebugEventsExternal:false, //flag to console log events\r\n\tdebugEventsInternal:false, //flag to console log events\r\n\tdebugInvalidOptions:true, //allow toggling of invalid option warnings\r\n\r\n\theight:false, //height of tabulator\r\n\tminHeight:false, //minimum height of tabulator\r\n\tmaxHeight:false, //maximum height of tabulator\r\n\r\n\tcolumnMaxWidth:false, //minimum global width for a column\r\n\tcolumnHeaderVertAlign:\"top\", //vertical alignment of column headers\r\n\r\n\tcolumns:[],//store for colum header info\r\n\tcolumnDefaults:{}, //store column default props\r\n\r\n\tdata:false, //default starting data\r\n\r\n\tautoColumns:false, //build columns from data row structure\r\n\tautoColumnsDefinitions:false,\r\n\r\n\tnestedFieldSeparator:\".\", //separator for nested data\r\n\r\n\ttooltipGenerationMode:\"load\", //when to generate tooltips\r\n\r\n\tfooterElement:false, //hold footer element\r\n\r\n\tindex:\"id\", //filed for row index\r\n\r\n\ttextDirection:\"auto\",\r\n\r\n\taddRowPos:\"bottom\", //position to insert blank rows, top|bottom\r\n\r\n\theaderVisible:true, //hide header\r\n\r\n\trenderVertical:\"virtual\",\r\n\trenderHorizontal:\"basic\",\r\n\trenderVerticalBuffer:0, // set virtual DOM buffer size\r\n\r\n\tscrollToRowPosition:\"top\",\r\n\tscrollToRowIfVisible:true,\r\n\r\n\tscrollToColumnPosition:\"left\",\r\n\tscrollToColumnIfVisible:true,\r\n\r\n\trowFormatter:false,\r\n\trowFormatterPrint:null,\r\n\trowFormatterClipboard:null,\r\n\trowFormatterHtmlOutput:null,\r\n\r\n\tplaceholder:false,\r\n\r\n\tdataLoader:true,\r\n\tdataLoaderLoading:false,\r\n\tdataLoaderError:false,\r\n\r\n\tdataSendParams:{},\r\n\r\n\tdataReceiveParams:{},\r\n}","export default class OptionsList {\r\n\tconstructor(table, msgType, defaults = {}){\r\n\t\tthis.table = table;\r\n\t\tthis.msgType = msgType;\r\n\t\tthis.registeredDefaults = Object.assign({}, defaults)\r\n\t}\r\n\r\n\tregister(option, value){\r\n\t\tthis.registeredDefaults[option] = value;\r\n\t}\r\n\r\n\tgenerate(defaultOptions, userOptions = {}){\r\n\t\tvar output = Object.assign({}, this.registeredDefaults);\r\n\r\n\t\tObject.assign(output, defaultOptions);\r\n\r\n\t\tif(userOptions.debugInvalidOptions !== false || this.table.options.debugInvalidOptions){\r\n\t\t\tfor (var key in userOptions){\r\n\t\t\t\tif(!output.hasOwnProperty(key)){\r\n\t\t\t\t\tconsole.warn(\"Invalid \" + this.msgType + \" option:\", key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var key in output){\r\n\t\t\tif(key in userOptions){\r\n\t\t\t\toutput[key] = userOptions[key];\r\n\t\t\t}else{\r\n\t\t\t\tif(Array.isArray(output[key])){\r\n\t\t\t\t\toutput[key] = Object.assign([], output[key]);\r\n\t\t\t\t}else if(typeof output[key] === \"object\" && output[key] !== null){\r\n\t\t\t\t\toutput[key] = Object.assign({}, output[key]);\r\n\t\t\t\t}else if (typeof output[key] === \"undefined\"){\r\n\t\t\t\t\tdelete output[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from '../tools/Helpers.js';\r\n\r\nexport default class Renderer extends CoreFeature{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.elementVertical = table.rowManager.element;\r\n\t\tthis.elementHorizontal = table.columnManager.element;\r\n\t\tthis.tableElement =  table.rowManager.tableElement;\r\n\r\n\t\tthis.verticalFillMode = \"fit\"; // used by row manager to determin how to size the render area (\"fit\" - fits container to the contents, \"fill\" - fills the contianer without resizing it)\r\n\t}\r\n\r\n\r\n\t///////////////////////////////////\r\n\t/////// Internal Bindings /////////\r\n\t///////////////////////////////////\r\n\r\n\tinitialize(){\r\n\t\t//initialize core functionality\r\n\t}\r\n\r\n\tclearRows(){\r\n\t\t//clear down existing rows layout\r\n\t}\r\n\r\n\tclearColumns(){\r\n\t\t//clear down existing columns layout\r\n\t}\r\n\r\n\r\n\treinitializeColumnWidths(columns){\r\n\t\t//resize columns to fit data\r\n\t}\r\n\r\n\r\n\trenderRows(){\r\n\t\t//render rows from a clean slate\r\n\t}\r\n\r\n\trenderColumns(){\r\n\t\t//render columns from a clean slate\r\n\t}\r\n\r\n\trerenderRows(callback){\r\n\t\t// rerender rows and keep position\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\trerenderColumns(update, blockRedraw){\r\n\t\t//rerender columns\r\n\t}\r\n\r\n\trenderRowCells(row){\r\n\t\t//render the cells in a row\r\n\t}\r\n\r\n\trerenderRowCells(row, force){\r\n\t\t//rerender the cells in a row\r\n\t}\r\n\r\n\tscrollColumns(left, dir){\r\n\t\t//handle horizontal scrolling\r\n\t}\r\n\r\n\tscrollRows(top, dir){\r\n\t\t//handle vertical scolling\r\n\t}\r\n\r\n\tresize(){\r\n\t\t//container has rezied, carry out any needed recalculations (DO NOT RERENDER IN THIS FUNCTION)\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\t//scroll to a specific row\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\t//determine weather the row is nearest the top or bottom of the table, retur true for top or false for bottom\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\t//return the visible rows\r\n\t\treturn [];\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t//////// Helper Functions /////////\r\n\t///////////////////////////////////\r\n\r\n\trows(){\r\n\t\treturn this.table.rowManager.getDisplayRows();\r\n\t}\r\n\r\n\tstyleRow(row, index){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(index % 2){\r\n\t\t\trowEl.classList.add(\"tabulator-row-even\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-odd\");\r\n\t\t}else{\r\n\t\t\trowEl.classList.add(\"tabulator-row-odd\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-even\");\r\n\t\t}\r\n\t}\r\n\r\n\t///////////////////////////////////\r\n\t/////// External Triggers /////////\r\n\t/////// (DO NOT OVERRIDE) /////////\r\n\t///////////////////////////////////\r\n\r\n\tclear(){\r\n\t\t//clear down existing layout\r\n\t\tthis.clearRows();\r\n\t\tthis.clearColumns();\r\n\t}\r\n\r\n\trender(){\r\n\t\t//render from a clean slate\r\n\t\tthis.renderRows();\r\n\t\tthis.renderColumns();\r\n\t}\r\n\r\n\trerender(callback){\r\n\t\t// rerender and keep position\r\n\t\tthis.rerenderRows();\r\n\t\tthis.rerenderColumns();\r\n\t}\r\n\r\n\tscrollToRowPosition(row, position, ifVisible){\r\n\t\tvar rowIndex = this.rows().indexOf(row),\r\n\t\trowEl = row.getElement(),\r\n\t\toffset = 0;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif(rowIndex > -1){\r\n\r\n\t\t\t\tif(typeof ifVisible === \"undefined\"){\r\n\t\t\t\t\tifVisible = this.table.options.scrollToRowIfVisible;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check row visibility\r\n\t\t\t\tif(!ifVisible){\r\n\t\t\t\t\tif(Helpers.elVisible(rowEl)){\r\n\t\t\t\t\t\toffset = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(offset > 0 && offset < this.elementVertical.clientHeight - rowEl.offsetHeight){\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof position === \"undefined\"){\r\n\t\t\t\t\tposition = this.table.options.scrollToRowPosition;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(position === \"nearest\"){\r\n\t\t\t\t\tposition = this.scrollToRowNearestTop(row) ? \"top\" : \"bottom\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//scroll to row\r\n\t\t\t\tthis.scrollToRow(row);\r\n\r\n\t\t\t\t//align to correct position\r\n\t\t\t\tswitch(position){\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tcase \"center\":\r\n\r\n\t\t\t\t\tif(this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight){\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop + (rowEl.offsetTop - this.elementVertical.scrollTop) - ((this.elementVertical.scrollHeight - rowEl.offsetTop) / 2);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.clientHeight / 2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"bottom\":\r\n\r\n\t\t\t\t\tif(this.elementVertical.scrollHeight - this.elementVertical.scrollTop == this.elementVertical.clientHeight){\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - (this.elementVertical.scrollHeight - rowEl.offsetTop) + rowEl.offsetHeight;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.elementVertical.scrollTop = this.elementVertical.scrollTop - this.elementVertical.clientHeight + rowEl.offsetHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresolve();\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - Row not visible\");\r\n\t\t\t\treject(\"Scroll Error - Row not visible\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class BaiscHorizontal extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t}\r\n\r\n\trenderRowCells(row){\r\n\t\trow.cells.forEach((cell) => {\r\n\t\t\trow.element.appendChild(cell.getElement());\r\n\t\t\tcell.cellRendered();\r\n\t\t});\r\n\t}\r\n\r\n\treinitializeColumnWidths(columns){\r\n\t\tcolumns.forEach(function(column){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t});\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class VirtualDomHorizontal extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.leftCol = 0;\r\n\t\tthis.rightCol = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = 0;\r\n\t\tthis.vDomScrollPosRight = 0;\r\n\t\t\r\n\t\tthis.vDomPadLeft = 0;\r\n\t\tthis.vDomPadRight = 0;\r\n\t\t\r\n\t\tthis.fitDataColAvg = 0;\r\n\t\t\r\n\t\tthis.window = 200; //pixel margin to make column visible before it is shown on screen\r\n\t\t\r\n\t\tthis.initialized = false;\r\n\t\t\r\n\t\tthis.columns = [];\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.compatabilityCheck();\r\n\t}\r\n\t\r\n\tcompatabilityCheck(){\r\n\t\tvar columns = this.options(\"columns\"),\r\n\t\tfrozen = false,\r\n\t\tok = true;\r\n\t\t\r\n\t\tif(this.options(\"layout\") == \"fitDataTable\"){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with fitDataTable layout mode\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.options(\"responsiveLayout\")){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with responsive columns\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.options(\"rtl\")){\r\n\t\t\tconsole.warn(\"Horizontal Virtual DOM is not currently compatible with RTL text direction\");\r\n\t\t\tok = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(columns){\r\n\t\t\tfrozen = columns.find((col) => {\r\n\t\t\t\treturn col.frozen;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(frozen){\r\n\t\t\t\tconsole.warn(\"Horizontal Virtual DOM is not compatible with frozen columns\");\r\n\t\t\t\tok = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// if(!ok){\r\n\t\t// \toptions.virtualDomHoz = false;\r\n\t\t// }\r\n\t\t\r\n\t\treturn ok;\r\n\t}\r\n\t\r\n\t//////////////////////////////////////\r\n\t///////// Public Functions ///////////\r\n\t//////////////////////////////////////\r\n\t\r\n\trenderColumns(row, force){\r\n\t\tthis.dataChange();\r\n\t}\r\n\t\r\n\tscrollColumns(left, dir){\r\n\t\tif(this.scrollLeft != left){\r\n\t\t\tthis.scrollLeft = left;\r\n\t\t\t\r\n\t\t\tthis.scroll(left - (this.vDomScrollPosLeft + this.window));\r\n\t\t}\r\n\t}\r\n\t\r\n\trerenderColumns(update, blockRedraw){\t\t\r\n\t\tvar old = {\r\n\t\t\tcols:this.columns,\r\n\t\t\tleftCol:this.leftCol,\r\n\t\t\trightCol:this.rightCol,\r\n\t\t};\r\n\t\t\r\n\t\tif(update && !this.initialized){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.clear();\r\n\t\t\r\n\t\tthis.scrollLeft = this.elementVertical.scrollLeft;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = this.scrollLeft - this.window;\r\n\t\tthis.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\r\n\t\t\r\n\t\tvar colPos = 0;\r\n\t\t\r\n\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\tvar config = {};\r\n\t\t\t\r\n\t\t\tif(column.visible){\r\n\t\t\t\tvar width = column.getWidth();\r\n\t\t\t\t\r\n\t\t\t\tconfig.leftPos = colPos;\r\n\t\t\t\tconfig.rightPos = colPos + width;\r\n\t\t\t\t\r\n\t\t\t\tconfig.width = width;\r\n\t\t\t\t\r\n\t\t\t\tif (this.options(\"layout\") === \"fitData\") {\r\n\t\t\t\t\tconfig.fitDataCheck = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif((colPos + width > this.vDomScrollPosLeft) && (colPos < this.vDomScrollPosRight)){\r\n\t\t\t\t\t//column is visible\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(this.leftCol == -1){\r\n\t\t\t\t\t\tthis.leftCol = this.columns.length;\r\n\t\t\t\t\t\tthis.vDomPadLeft = colPos;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.rightCol = this.columns.length;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// column is hidden\r\n\t\t\t\t\tif(this.leftCol !== -1){\r\n\t\t\t\t\t\tthis.vDomPadRight += width;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.columns.push(column);\r\n\t\t\t\t\r\n\t\t\t\tcolumn.modules.vdomHoz = config;\r\n\t\t\t\t\r\n\t\t\t\tcolPos += width;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\r\n\t\tthis.initialized = true;\r\n\t\t\r\n\t\tif(!blockRedraw){\r\n\t\t\tif(!update || this.reinitChanged(old)){\r\n\t\t\t\tthis.reinitializeRows();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.elementVertical.scrollLeft = this.scrollLeft;\r\n\t}\r\n\t\r\n\trenderRowCells(row){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.initializeRow(row);\r\n\t\t}else{\r\n\t\t\trow.cells.forEach((cell) => {\r\n\t\t\t\trow.element.appendChild(cell.getElement());\r\n\t\t\t\tcell.cellRendered();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\trerenderRowCells(row, force){\r\n\t\tthis.reinitializeRow(row, force);\r\n\t}\r\n\t\r\n\treinitializeColumnWidths(columns){\r\n\t\tfor(let i = this.leftCol; i <= this.rightCol; i++){\r\n\t\t\tthis.columns[i].reinitializeWidth();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//////////////////////////////////////\r\n\t//////// Internal Rendering //////////\r\n\t//////////////////////////////////////\r\n\t\r\n\tdeinitialize(){\r\n\t\tthis.initialized = false;\r\n\t}\r\n\t\r\n\tclear(){\r\n\t\tthis.columns = [];\r\n\t\t\r\n\t\tthis.leftCol = -1;\r\n\t\tthis.rightCol = 0;\r\n\t\t\r\n\t\tthis.vDomScrollPosLeft = 0;\r\n\t\tthis.vDomScrollPosRight = 0;\r\n\t\tthis.vDomPadLeft = 0;\r\n\t\tthis.vDomPadRight = 0;\r\n\t}\r\n\t\r\n\tdataChange(){\r\n\t\tvar change = false,\r\n\t\tcollsWidth = 0,\r\n\t\tcolEnd = 0,\r\n\t\tgroup, row, rowEl;\r\n\t\t\r\n\t\tif(this.options(\"layout\") === \"fitData\"){\r\n\t\t\tthis.table.columnManager.columnsByIndex.forEach((column) => {\r\n\t\t\t\tif(!column.definition.width && column.visible){\r\n\t\t\t\t\tchange = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(change){\r\n\t\t\t\tif(change && this.table.rowManager.getDisplayRows().length){\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.vDomScrollPosRight = this.scrollLeft + this.elementVertical.clientWidth + this.window;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar row = this.chain(\"rows-sample\", [1], [], () => {\r\n\t\t\t\t\t\treturn this.table.rowManager.getDisplayRows()[0];\r\n\t\t\t\t\t})[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowEl = row.getElement();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trow.generateCells();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.tableElement.appendChild(rowEl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(var colEnd = 0; colEnd < row.cells.length; colEnd++){\r\n\t\t\t\t\t\t\tlet cell = row.cells[colEnd];\r\n\t\t\t\t\t\t\trowEl.appendChild(cell.getElement());\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcell.column.reinitializeWidth();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcollsWidth += cell.column.getWidth();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(collsWidth > this.vDomScrollPosRight){\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.fitDataColAvg = Math.floor(collsWidth / (colEnd + 1));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(colEnd; colEnd < this.table.columnManager.columnsByIndex.length; colEnd++){\r\n\t\t\t\t\t\t\tthis.table.columnManager.columnsByIndex[colEnd].setWidth(this.fitDataColAvg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.rerenderColumns(false, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(this.options(\"layout\") === \"fitColumns\"){\r\n\t\t\t\tthis.layoutRefresh();\r\n\t\t\t\tthis.rerenderColumns(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitChanged(old){\r\n\t\tvar match = true;\r\n\t\t\r\n\t\tif(old.cols.length !== this.columns.length || old.leftCol !== this.leftCol || old.rightCol !== this.rightCol){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\told.cols.forEach((col, i) => {\r\n\t\t\tif(col !== this.columns[i]){\r\n\t\t\t\tmatch = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn !match;\r\n\t}\r\n\t\r\n\treinitializeRows(){\r\n\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\t\trows.forEach((row) => {\r\n\t\t\tthis.reinitializeRow(row, true);\r\n\t\t});\r\n\t}\r\n\t\r\n\tscroll(diff){\r\n\t\tthis.vDomScrollPosLeft += diff;\r\n\t\tthis.vDomScrollPosRight += diff;\r\n\t\t\r\n\t\tif(diff > (this.elementVertical.clientWidth * .8)){\r\n\t\t\tthis.rerenderColumns();\r\n\t\t}else{\r\n\t\t\tif(diff > 0){\r\n\t\t\t\t//scroll right\r\n\t\t\t\tthis.addColRight();\r\n\t\t\t\tthis.removeColLeft();\r\n\t\t\t}else{\r\n\t\t\t\t//scroll left\r\n\t\t\t\tthis.addColLeft();\r\n\t\t\t\tthis.removeColRight();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tcolPositionAdjust (start, end, diff){\r\n\t\tfor(let i = start; i < end; i++){\r\n\t\t\tlet column = this.columns[i];\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.leftPos += diff;\r\n\t\t\tcolumn.modules.vdomHoz.rightPos += diff;\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColRight(){\r\n\t\tvar column = this.columns[this.rightCol + 1],\r\n\t\trows, newWidth, widthDiff;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.leftPos <= this.vDomScrollPosRight){\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().appendChild(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.fitDataColActualWidthCheck(column);\r\n\t\t\t\r\n\t\t\tthis.rightCol++;\r\n\t\t\t\r\n\t\t\tif(this.rightCol >= (this.columns.length - 1)){\r\n\t\t\t\tthis.vDomPadRight = 0;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomPadRight -= column.getWidth();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\t\r\n\t\t\tthis.addColRight();\r\n\t\t}\r\n\t}\r\n\t\r\n\taddColLeft(){\r\n\t\tvar column = this.columns[this.leftCol - 1],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.rightPos >= this.vDomScrollPosLeft){\r\n\t\t\tvar rows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().prepend(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.fitDataColActualWidthCheck(column);\r\n\t\t\t\r\n\t\t\tif(!this.leftCol){\r\n\t\t\t\tthis.vDomPadLeft = 0;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomPadLeft -= column.getWidth();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\t\t\r\n\t\t\tthis.leftCol--;\r\n\t\t\t\r\n\t\t\tthis.addColLeft();\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColRight(column){\r\n\t\tvar column = this.columns[this.rightCol],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.leftPos > this.vDomScrollPosRight){\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.visible = false;\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tvar cell = row.getCell(column);\r\n\t\t\t\t\trow.getElement().removeChild(cell.getElement());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.vDomPadRight += column.getWidth();\r\n\t\t\tthis.tableElement.style.paddingRight = this.vDomPadRight + \"px\";\r\n\t\t\t\r\n\t\t\tthis.rightCol --;\r\n\t\t\t\r\n\t\t\tthis.removeColRight();\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveColLeft(){\r\n\t\tvar column = this.columns[this.leftCol],\r\n\t\trows;\r\n\t\t\r\n\t\tif(column && column.modules.vdomHoz.rightPos < this.vDomScrollPosLeft){\t\r\n\t\t\trows = this.table.rowManager.getVisibleRows();\r\n\t\t\t\r\n\t\t\trows.forEach((row) => {\r\n\t\t\t\tvar cell, el;\r\n\r\n\t\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\t\tcell = row.getCell(column);\r\n\r\n\t\t\t\t\tif(cell){\r\n\t\t\t\t\t\tel = cell.getElement();\r\n\r\n\t\t\t\t\t\tif(el.parentNode){\r\n\t\t\t\t\t\t\trow.getElement().removeChild(el);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.vDomPadLeft += column.getWidth();\r\n\t\t\tthis.tableElement.style.paddingLeft = this.vDomPadLeft + \"px\";\r\n\t\t\t\r\n\t\t\tthis.leftCol ++;\r\n\t\t\t\r\n\t\t\tthis.removeColLeft();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfitDataColActualWidthCheck(column){\r\n\t\tvar newWidth, widthDiff;\r\n\t\t\r\n\t\tif(column.modules.vdomHoz.fitDataCheck){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t\t\r\n\t\t\tnewWidth = column.getWidth();\r\n\t\t\twidthDiff = newWidth - column.modules.vdomHoz.width;\r\n\t\t\t\r\n\t\t\tif(widthDiff){\r\n\t\t\t\tcolumn.modules.vdomHoz.rightPos += widthDiff;\r\n\t\t\t\tcolumn.modules.vdomHoz.width = newWidth;\r\n\t\t\t\tthis.colPositionAdjust(this.rightCol + 2, this.columns.length, widthDiff);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcolumn.modules.vdomHoz.fitDataCheck = false;\r\n\t\t}\r\n\t};\r\n\t\r\n\tinitializeRow(row){\r\n\t\tif(row.type !== \"group\"){\r\n\t\t\trow.modules.vdomHoz = {\r\n\t\t\t\tleftCol:this.leftCol,\r\n\t\t\t\trightCol:this.rightCol,\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tfor(let i = this.leftCol; i <= this.rightCol; i++){\r\n\t\t\t\tlet column = this.columns[i];\r\n\t\t\t\t\r\n\t\t\t\tif(column && column.visible){\r\n\t\t\t\t\tlet cell = row.getCell(column);\r\n\t\t\t\t\t\r\n\t\t\t\t\trow.getElement().appendChild(cell.getElement());\r\n\t\t\t\t\tcell.cellRendered();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treinitializeRow(row, force){\r\n\t\tif(row.type !== \"group\"){\r\n\t\t\tif(force || !row.modules.vdomHoz || row.modules.vdomHoz.leftCol !== this.leftCol || row.modules.vdomHoz.rightCol !== this.rightCol){\r\n\t\t\t\tvar rowEl = row.getElement();\r\n\t\t\t\twhile(rowEl.firstChild) rowEl.removeChild(rowEl.firstChild);\r\n\t\t\t\t\r\n\t\t\t\tthis.initializeRow(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Column from './column/Column.js';\r\nimport ColumnComponent from './column/ColumnComponent.js';\r\nimport Helpers from './tools/Helpers.js';\r\nimport OptionsList from './tools/OptionsList.js';\r\n\r\nimport RendererBasicHorizontal from './rendering/renderers/BasicHorizontal.js';\r\nimport RendererVirtualDomHorizontal from './rendering/renderers/VirtualDomHorizontal.js';\r\n\r\nimport defaultColumnOptions from './column/defaults/options.js';\r\n\r\nexport default class ColumnManager extends CoreFeature {\r\n\r\n\tconstructor (table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.blockHozScrollEvent = false;\r\n\t\tthis.headersElement = null;\r\n\t\tthis.element = null ; //containing element\r\n\t\tthis.columns = []; // column definition object\r\n\t\tthis.columnsByIndex = []; //columns by index\r\n\t\tthis.columnsByField = {}; //columns by field\r\n\t\tthis.scrollLeft = 0;\r\n\t\tthis.optionsList = new OptionsList(this.table, \"column definition\", defaultColumnOptions);\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t////////////// Setup Functions /////////////////\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeRenderer();\r\n\r\n\t\tthis.headersElement = this.createHeadersElement();\r\n\t\tthis.element = this.createHeaderElement();\r\n\r\n\t\tthis.element.insertBefore(this.headersElement, this.element.firstChild);\r\n\r\n\t\tthis.subscribe(\"scroll-horizontal\", this.scrollHorizontal.bind(this));\r\n\t}\r\n\r\n\tinitializeRenderer(){\r\n\t\tvar renderClass;\r\n\r\n\t\tvar renderers = {\r\n\t\t\t\"virtual\": RendererVirtualDomHorizontal,\r\n\t\t\t\"basic\": RendererBasicHorizontal,\r\n\t\t};\r\n\r\n\t\tif(typeof this.table.options.renderHorizontal === \"string\"){\r\n\t\t\trenderClass = renderers[this.table.options.renderHorizontal];\r\n\t\t}else{\r\n\t\t\trenderClass = this.table.options.renderHorizontal;\r\n\t\t}\r\n\r\n\t\tif(renderClass){\r\n\t\t\tthis.renderer = new renderClass(this.table, this.element, this.tableElement);\r\n\t\t\tthis.renderer.initialize();\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Unable to find matching renderer:\", table.options.renderHorizontal);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcreateHeadersElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-headers\");\r\n\t\tel.setAttribute(\"role\", \"row\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateHeaderElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-header\");\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\tif(!this.table.options.headerVisible){\r\n\t\t\tel.classList.add(\"tabulator-header-hidden\");\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t//return containing element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return header containing element\r\n\tgetHeadersElement(){\r\n\t\treturn this.headersElement;\r\n\t}\r\n\r\n\t//scroll horizontally to match table body\r\n\tscrollHorizontal(left){\r\n\t\tvar hozAdjust = 0,\r\n\t\tscrollWidth = this.element.scrollWidth - this.table.element.clientWidth;\r\n\r\n\t\t// this.tempScrollBlock();\r\n\t\tthis.element.scrollLeft = left;\r\n\r\n\t\t//adjust for vertical scrollbar moving table when present\r\n\t\tif(left > scrollWidth){\r\n\t\t\thozAdjust = left - scrollWidth;\r\n\t\t\tthis.element.style.marginLeft = (-(hozAdjust)) + \"px\";\r\n\t\t}else{\r\n\t\t\tthis.element.style.marginLeft = 0;\r\n\t\t}\r\n\r\n\t\tthis.scrollLeft = left;\r\n\r\n\t\tthis.renderer.scrollColumns(left);\r\n\t}\r\n\r\n\t///////////// Column Setup Functions /////////////\r\n\tgenerateColumnsFromRowData(data){\r\n\t\tvar cols = [],\r\n\t\tdefinitions = this.table.options.autoColumnsDefinitions,\r\n\t\trow, sorter;\r\n\r\n\t\tif(data && data.length){\r\n\r\n\t\t\trow = data[0];\r\n\r\n\t\t\tfor(var key in row){\r\n\t\t\t\tlet col = {\r\n\t\t\t\t\tfield:key,\r\n\t\t\t\t\ttitle:key,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet value = row[key];\r\n\r\n\t\t\t\tswitch(typeof value){\r\n\t\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tsorter = \"boolean\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif(Array.isArray(value)){\r\n\t\t\t\t\t\tsorter = \"array\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tif(!isNaN(value) && value !== \"\"){\r\n\t\t\t\t\t\tsorter = \"number\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+$/i)){\r\n\t\t\t\t\t\t\tsorter = \"alphanum\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsorter = \"string\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcol.sorter = sorter;\r\n\r\n\t\t\t\tcols.push(col);\r\n\t\t\t}\r\n\r\n\t\t\tif(definitions){\r\n\r\n\t\t\t\tswitch(typeof definitions){\r\n\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\tthis.table.options.columns = definitions.call(this.table, cols);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif(Array.isArray(definitions)){\r\n\t\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\t\tvar match = definitions.find((def) => {\r\n\t\t\t\t\t\t\t\treturn def.field === col.field;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif(match){\r\n\t\t\t\t\t\t\t\tObject.assign(col, match);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcols.forEach((col) => {\r\n\t\t\t\t\t\t\tif(definitions[col.field]){\r\n\t\t\t\t\t\t\t\tObject.assign(col, definitions[col.field]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.table.options.columns = cols;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.table.options.columns = cols;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setColumns(this.table.options.columns);\r\n\t\t}\r\n\t}\r\n\r\n\tsetColumns(cols, row){\r\n\t\twhile(this.headersElement.firstChild) this.headersElement.removeChild(this.headersElement.firstChild);\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.columnsByIndex = [];\r\n\t\tthis.columnsByField = {};\r\n\r\n\t\tthis.dispatch(\"columns-loading\");\r\n\r\n\t\tcols.forEach((def, i) => {\r\n\t\t\tthis._addColumn(def);\r\n\t\t});\r\n\r\n\t\tthis._reIndexColumns();\r\n\r\n\t\tthis.dispatch(\"columns-loaded\");\r\n\r\n\t\tthis.renderer.rerenderColumns(false, true);\r\n\r\n\t\tthis.redraw(true);\r\n\t}\r\n\r\n\t_addColumn(definition, before, nextToColumn){\r\n\t\tvar column = new Column(definition, this),\r\n\t\tcolEl = column.getElement(),\r\n\t\tindex = nextToColumn ? this.findColumnIndex(nextToColumn) : nextToColumn;\r\n\r\n\t\tif(nextToColumn && index > -1){\r\n\t\t\tvar topColumn = nextToColumn.getTopColumn()\r\n\t\t\tvar parentIndex = this.columns.indexOf(topColumn);\r\n\t\t\tvar nextEl = topColumn.getElement();\r\n\r\n\t\t\tif(before){\r\n\t\t\t\tthis.columns.splice(parentIndex, 0, column);\r\n\t\t\t\tnextEl.parentNode.insertBefore(colEl, nextEl);\r\n\t\t\t}else{\r\n\t\t\t\tthis.columns.splice(parentIndex + 1, 0, column);\r\n\t\t\t\tnextEl.parentNode.insertBefore(colEl, nextEl.nextSibling);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(before){\r\n\t\t\t\tthis.columns.unshift(column);\r\n\t\t\t\tthis.headersElement.insertBefore(column.getElement(), this.headersElement.firstChild);\r\n\t\t\t}else{\r\n\t\t\t\tthis.columns.push(column);\r\n\t\t\t\tthis.headersElement.appendChild(column.getElement());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcolumn.columnRendered();\r\n\r\n\t\treturn column;\r\n\t}\r\n\r\n\tregisterColumnField(col){\r\n\t\tif(col.definition.field){\r\n\t\t\tthis.columnsByField[col.definition.field] = col;\r\n\t\t}\r\n\t}\r\n\r\n\tregisterColumnPosition(col){\r\n\t\tthis.columnsByIndex.push(col);\r\n\t}\r\n\r\n\t_reIndexColumns(){\r\n\t\tthis.columnsByIndex = [];\r\n\r\n\t\tthis.columns.forEach(function(column){\r\n\t\t\tcolumn.reRegisterPosition();\r\n\t\t});\r\n\t}\r\n\r\n\t//ensure column headers take up the correct amount of space in column groups\r\n\tverticalAlignHeaders(){\r\n\t\tvar minHeight = 0;\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\tvar height;\r\n\r\n\t\t\tcolumn.clearVerticalAlign();\r\n\r\n\t\t\theight = column.getHeight();\r\n\r\n\t\t\tif(height > minHeight){\r\n\t\t\t\tminHeight = height;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\tcolumn.verticalAlign(this.table.options.columnHeaderVertAlign, minHeight);\r\n\t\t});\r\n\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\t//////////////// Column Details /////////////////\r\n\tfindColumn(subject){\r\n\t\tif(typeof subject == \"object\"){\r\n\r\n\t\t\tif(subject instanceof Column){\r\n\t\t\t\t//subject is column element\r\n\t\t\t\treturn subject;\r\n\t\t\t}else if(subject instanceof ColumnComponent){\r\n\t\t\t\t//subject is public column component\r\n\t\t\t\treturn subject._getSelf() || false;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\t//subject is a HTML element of the column header\r\n\t\t\t\tlet match = this.columns.find((column) => {\r\n\t\t\t\t\treturn column.element === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn match || false;\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the field name of the column\r\n\t\t\treturn this.columnsByField[subject] || false;\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetColumnByField(field){\r\n\t\treturn this.columnsByField[field];\r\n\t}\r\n\r\n\tgetColumnsByFieldRoot(root){\r\n\t\tvar matches = [];\r\n\r\n\t\tObject.keys(this.columnsByField).forEach((field) => {\r\n\t\t\tvar fieldRoot = field.split(\".\")[0];\r\n\t\t\tif(fieldRoot === root){\r\n\t\t\t\tmatches.push(this.columnsByField[field]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn matches;\r\n\t}\r\n\r\n\tgetColumnByIndex(index){\r\n\t\treturn this.columnsByIndex[index];\r\n\t}\r\n\r\n\tgetFirstVisibleColumn(index){\r\n\t\tvar index = this.columnsByIndex.findIndex((col) => {\r\n\t\t\treturn col.visible;\r\n\t\t});\r\n\r\n\t\treturn index > -1 ? this.columnsByIndex[index] : false;\r\n\t}\r\n\r\n\tgetColumns(){\r\n\t\treturn this.columns;\r\n\t}\r\n\r\n\tfindColumnIndex(column){\r\n\t\treturn this.columnsByIndex.findIndex((col) => {\r\n\t\t\treturn column === col;\r\n\t\t});\r\n\t}\r\n\r\n\t//return all columns that are not groups\r\n\tgetRealColumns(){\r\n\t\treturn this.columnsByIndex;\r\n\t}\r\n\r\n\t//travers across columns and call action\r\n\ttraverse(callback){\r\n\t\tthis.columnsByIndex.forEach((column,i) =>{\r\n\t\t\tcallback(column, i);\r\n\t\t});\r\n\t}\r\n\r\n\t//get defintions of actual columns\r\n\tgetDefinitions(active){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tif(!active || (active && column.visible)){\r\n\t\t\t\toutput.push(column.getDefinition());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t//get full nested definition tree\r\n\tgetDefinitionTree(){\r\n\t\tvar output = [];\r\n\r\n\t\tthis.columns.forEach((column) => {\r\n\t\t\toutput.push(column.getDefinition(true));\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetComponents(structured){\r\n\t\tvar output = [],\r\n\t\tcolumns = structured ? this.columns : this.columnsByIndex;\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\toutput.push(column.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetWidth(){\r\n\t\tvar width = 0;\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tif(column.visible){\r\n\t\t\t\twidth += column.getWidth();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn width;\r\n\t}\r\n\r\n\tmoveColumn(from, to, after){\r\n\t\tthis.moveColumnActual(from, to, after);\r\n\r\n\t\tto.element.parentNode.insertBefore(from.element, to.element);\r\n\r\n\t\tif(after){\r\n\t\t\tto.element.parentNode.insertBefore(to.element, from.element);\r\n\t\t}\r\n\r\n\t\tthis.verticalAlignHeaders();\r\n\r\n\t\tthis.table.rowManager.reinitialize();\r\n\t}\r\n\r\n\tmoveColumnActual(from, to, after){\r\n\t\tif(from.parent.isGroup){\r\n\t\t\tthis._moveColumnInArray(from.parent.columns, from, to, after);\r\n\t\t}else{\r\n\t\t\tthis._moveColumnInArray(this.columns, from, to, after);\r\n\t\t}\r\n\r\n\t\tthis._moveColumnInArray(this.columnsByIndex, from, to, after, true);\r\n\r\n\t\tthis.renderer.rerenderColumns(true);\r\n\r\n\t\tthis.dispatch(\"column-moved\", from, to, after);\r\n\r\n\t\tif(this.subscribedExternal(\"columnMoved\")){\r\n\t\t\tthis.dispatchExternal(\"columnMoved\", from.getComponent(), this.table.columnManager.getComponents());\r\n\t\t}\r\n\t}\r\n\r\n\t_moveColumnInArray(columns, from, to, after, updateRows){\r\n\t\tvar\tfromIndex = columns.indexOf(from),\r\n\t\ttoIndex, rows = [];\r\n\r\n\t\tif (fromIndex > -1) {\r\n\r\n\t\t\tcolumns.splice(fromIndex, 1);\r\n\r\n\t\t\ttoIndex = columns.indexOf(to);\r\n\r\n\t\t\tif (toIndex > -1) {\r\n\r\n\t\t\t\tif(after){\r\n\t\t\t\t\ttoIndex = toIndex+1;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\ttoIndex = fromIndex;\r\n\t\t\t}\r\n\r\n\t\t\tcolumns.splice(toIndex, 0, from);\r\n\r\n\t\t\tif(updateRows){\r\n\r\n\t\t\t\trows = this.chain(\"column-moving-rows\", [from, to, after], null, []) || [];\r\n\r\n\t\t\t\trows = rows.concat(this.table.rowManager.rows);\r\n\r\n\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\tif(row.cells.length){\r\n\t\t\t\t\t\tvar cell = row.cells.splice(fromIndex, 1)[0];\r\n\t\t\t\t\t\trow.cells.splice(toIndex, 0, cell);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToColumn(column, position, ifVisible){\r\n\t\tvar left = 0,\r\n\t\toffset = 0,\r\n\t\tadjust = 0,\r\n\t\tcolEl = column.getElement();\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(typeof position === \"undefined\"){\r\n\t\t\t\tposition = this.table.options.scrollToColumnPosition;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof ifVisible === \"undefined\"){\r\n\t\t\t\tifVisible = this.table.options.scrollToColumnIfVisible;\r\n\t\t\t}\r\n\r\n\t\t\tif(column.visible){\r\n\r\n\t\t\t\t//align to correct position\r\n\t\t\t\tswitch(position){\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\tadjust = -this.element.clientWidth / 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\tadjust = colEl.clientWidth - this.headersElement.clientWidth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check column visibility\r\n\t\t\t\tif(!ifVisible){\r\n\r\n\t\t\t\t\toffset = colEl.offsetLeft;\r\n\r\n\t\t\t\t\tif(offset > 0 && offset + colEl.offsetWidth < this.element.clientWidth){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//calculate scroll position\r\n\t\t\t\tleft = colEl.offsetLeft + adjust;\r\n\r\n\t\t\t\tleft = Math.max(Math.min(left, this.table.rowManager.element.scrollWidth - this.table.rowManager.element.clientWidth),0);\r\n\r\n\t\t\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t\t\t\tthis.scrollHorizontal(left);\r\n\r\n\t\t\t\tresolve();\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - Column not visible\");\r\n\t\t\t\treject(\"Scroll Error - Column not visible\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n\t//////////////// Cell Management /////////////////\r\n\tgenerateCells(row){\r\n\t\tvar cells = [];\r\n\r\n\t\tthis.columnsByIndex.forEach((column) => {\r\n\t\t\tcells.push(column.generateCell(row));\r\n\t\t});\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\t//////////////// Column Management /////////////////\r\n\tgetFlexBaseWidth(){\r\n\t\tvar totalWidth = this.table.element.clientWidth, //table element width\r\n\t\tfixedWidth = 0;\r\n\r\n\t\t//adjust for vertical scrollbar if present\r\n\t\tif(this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight){\r\n\t\t\ttotalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\r\n\t\t}\r\n\r\n\t\tthis.columnsByIndex.forEach(function(column){\r\n\t\t\tvar width, minWidth, colWidth;\r\n\r\n\t\t\tif(column.visible){\r\n\r\n\t\t\t\twidth = column.definition.width || 0;\r\n\r\n\t\t\t\tminWidth = parseInt(column.minWidth);\r\n\r\n\t\t\t\tif(typeof(width) == \"string\"){\r\n\t\t\t\t\tif(width.indexOf(\"%\") > -1){\r\n\t\t\t\t\t\tcolWidth = (totalWidth / 100) * parseInt(width) ;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcolWidth = parseInt(width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcolWidth = width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfixedWidth += colWidth > minWidth ? colWidth : minWidth;\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn fixedWidth;\r\n\t}\r\n\r\n\taddColumn(definition, before, nextToColumn){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar column = this._addColumn(definition, before, nextToColumn);\r\n\r\n\t\t\tthis._reIndexColumns();\r\n\r\n\t\t\tthis.dispatch(\"column-add\", definition, before, nextToColumn);\r\n\r\n\t\t\tif(this.layoutMode() != \"fitColumns\"){\r\n\t\t\t\tcolumn.reinitializeWidth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.redraw(true);\r\n\r\n\t\t\tthis.table.rowManager.reinitialize();\r\n\r\n\t\t\tthis.renderer.rerenderColumns();\r\n\r\n\t\t\tresolve(column);\r\n\t\t});\r\n\t}\r\n\r\n\t//remove column from system\r\n\tderegisterColumn(column){\r\n\t\tvar field = column.getField(),\r\n\t\tindex;\r\n\r\n\t\t//remove from field list\r\n\t\tif(field){\r\n\t\t\tdelete this.columnsByField[field];\r\n\t\t}\r\n\r\n\t\t//remove from index list\r\n\t\tindex = this.columnsByIndex.indexOf(column);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columnsByIndex.splice(index, 1);\r\n\t\t}\r\n\r\n\t\t//remove from column list\r\n\t\tindex = this.columns.indexOf(column);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis.columns.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tthis.verticalAlignHeaders();\r\n\r\n\t\tthis.redraw();\r\n\t}\r\n\r\n\t//redraw columns\r\n\tredraw(force){\r\n\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\tthis.verticalAlignHeaders();\r\n\t\t}\r\n\r\n\t\tif(force){\r\n\t\t\tthis.table.rowManager.resetScroll();\r\n\t\t\tthis.table.rowManager.reinitialize();\r\n\t\t}\r\n\r\n\t\tif(!this.confirm(\"table-redrawing\", force)){\r\n\t\t\tthis.layoutRefresh();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"table-redraw\", force);\r\n\r\n\t\tthis.table.footerManager.redraw();\r\n\t}\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class BaiscVertical extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.verticalFillMode = \"fill\";\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\t}\r\n\r\n\tclearRows(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\t// element.children.detach();\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\telement.scrollTop = 0;\r\n\t\telement.scrollLeft = 0;\r\n\r\n\t\telement.style.minWidth = \"\";\r\n\t\telement.style.minHeight = \"\";\r\n\t\telement.style.display = \"\";\r\n\t\telement.style.visibility = \"\";\r\n\t}\r\n\r\n\trenderRows(){\r\n\t\tvar element = this.tableElement,\r\n\t\tonlyGroupHeaders = true;\r\n\r\n\t\tthis.rows().forEach((row, index) => {\r\n\t\t\tthis.styleRow(row, index);\r\n\t\t\telement.appendChild(row.getElement());\r\n\t\t\trow.initialize(true);\r\n\r\n\t\t\tif(row.type !== \"group\"){\r\n\t\t\t\tonlyGroupHeaders = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(onlyGroupHeaders){\r\n\t\t\telement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t}else{\r\n\t\t\telement.style.minWidth = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trerenderRows(callback){\r\n\t\tthis.render();\r\n\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\tvar rowTop = Helpers.elOffset(row.getElement()).top;\r\n\r\n\t\treturn !(Math.abs(this.elementVertical.scrollTop - rowTop) > Math.abs(this.elementVertical.scrollTop + this.elementVertical.clientHeight - rowTop));\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tthis.elementVertical.scrollTop = Helpers.elOffset(rowEl).top - Helpers.elOffset(this.elementVertical).top + this.elementVertical.scrollTop;\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\treturn this.rows();\r\n\t}\r\n\r\n}","import Renderer from '../Renderer.js';\r\nimport Helpers from '../../tools/Helpers.js';\r\n\r\nexport default class VirtualDomVertical extends Renderer{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.verticalFillMode = \"fill\";\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.vDomRowHeight = 20; //approximation of row heights for padding\r\n\r\n\t\tthis.vDomTop = 0; //hold position for first rendered row in the virtual DOM\r\n\t\tthis.vDomBottom = 0; //hold possition for last rendered row in the virtual DOM\r\n\r\n\t\tthis.vDomScrollPosTop = 0; //last scroll position of the vDom top;\r\n\t\tthis.vDomScrollPosBottom = 0; //last scroll position of the vDom bottom;\r\n\r\n\t\tthis.vDomTopPad = 0; //hold value of padding for top of virtual DOM\r\n\t\tthis.vDomBottomPad = 0; //hold value of padding for bottom of virtual DOM\r\n\r\n\t\tthis.vDomMaxRenderChain = 90; //the maximum number of dom elements that can be rendered in 1 go\r\n\r\n\t\tthis.vDomWindowBuffer = 0; //window row buffer before removing elements, to smooth scrolling\r\n\r\n\t\tthis.vDomWindowMinTotalRows = 20; //minimum number of rows to be generated in virtual dom (prevent buffering issues on tables with tall rows)\r\n\t\tthis.vDomWindowMinMarginRows = 5; //minimum number of rows to be generated in virtual dom margin\r\n\r\n\t\tthis.vDomTopNewRows = []; //rows to normalize after appending to optimize render speed\r\n\t\tthis.vDomBottomNewRows = []; //rows to normalize after appending to optimize render speed\r\n\t}\r\n\r\n\t//////////////////////////////////////\r\n\t///////// Public Functions ///////////\r\n\t//////////////////////////////////////\r\n\r\n\tclearRows(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\t// element.children.detach();\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\telement.style.paddingTop = \"\";\r\n\t\telement.style.paddingBottom = \"\";\r\n\t\t// element.style.minWidth = \"\";\r\n\t\telement.style.minHeight = \"\";\r\n\t\telement.style.display = \"\";\r\n\t\telement.style.visibility = \"\";\r\n\r\n\t\tthis.elementVertical.scrollTop = 0;\r\n\t\tthis.elementVertical.scrollLeft = 0;\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.vDomTop = 0;\r\n\t\tthis.vDomBottom = 0;\r\n\t\tthis.vDomTopPad = 0;\r\n\t\tthis.vDomBottomPad = 0;\r\n\t\tthis.vDomScrollPosTop = 0;\r\n\t\tthis.vDomScrollPosBottom = 0;\r\n\t}\r\n\r\n\trenderRows(){\r\n\t\tthis._virtualRenderFill();\r\n\t}\r\n\r\n\trerenderRows(callback){\r\n\t\tvar scrollTop = this.elementVertical.scrollTop;\r\n\t\tvar topRow = false;\r\n\t\tvar topOffset = false;\r\n\r\n\t\tvar left = this.table.rowManager.scrollLeft;\r\n\r\n\t\tvar rows = this.rows();\r\n\r\n\t\tfor(var i = this.vDomTop; i <= this.vDomBottom; i++){\r\n\r\n\t\t\tif(rows[i]){\r\n\t\t\t\tvar diff = scrollTop - rows[i].getElement().offsetTop;\r\n\r\n\t\t\t\tif(topOffset === false || Math.abs(diff) < topOffset){\r\n\t\t\t\t\ttopOffset = diff;\r\n\t\t\t\t\ttopRow = i;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trows.forEach((row) => {\r\n\t\t\trow.deinitializeHeight();\r\n\t\t});\r\n\r\n\t\tif(callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\r\n\t\tthis._virtualRenderFill((topRow === false ? this.rows.length - 1 : topRow), true, topOffset || 0);\r\n\r\n\t\tthis.scrollColumns(left);\r\n\t}\r\n\r\n\tscrollColumns(left){\r\n\t\tthis.table.rowManager.scrollHorizontal(left);\r\n\t}\r\n\r\n\tscrollRows(top, dir){\r\n\t\tvar topDiff = top - this.vDomScrollPosTop;\r\n\t\tvar bottomDiff = top - this.vDomScrollPosBottom;\r\n\t\tvar margin = this.vDomWindowBuffer * 2;\r\n\t\tvar rows = this.rows();\r\n\r\n\t\tthis.scrollTop = top;\r\n\r\n\t\tif(-topDiff > margin || bottomDiff > margin){\r\n\t\t\t//if big scroll redraw table;\r\n\t\t\tvar left = this.table.rowManager.scrollLeft;\r\n\t\t\tthis._virtualRenderFill(Math.floor((this.elementVertical.scrollTop / this.elementVertical.scrollHeight) * rows.length));\r\n\t\t\tthis.scrollColumns(left);\r\n\t\t}else{\r\n\r\n\t\t\tif(dir){\r\n\t\t\t\t//scrolling up\r\n\t\t\t\tif(topDiff < 0){\r\n\t\t\t\t\tthis._addTopRow(rows, -topDiff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(bottomDiff < 0){\r\n\t\t\t\t\t//hide bottom row if needed\r\n\t\t\t\t\tif(this.vDomScrollHeight - this.scrollTop > this.vDomWindowBuffer){\r\n\t\t\t\t\t\tthis._removeBottomRow(rows, -bottomDiff);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomScrollPosBottom = this.scrollTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\r\n\t\t\t\tif(bottomDiff >= 0){\r\n\t\t\t\t\tthis._addBottomRow(rows, bottomDiff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//scrolling down\r\n\t\t\t\tif(topDiff >= 0){\r\n\t\t\t\t\t//hide top row if needed\r\n\t\t\t\t\tif(this.scrollTop > this.vDomWindowBuffer){\r\n\t\t\t\t\t\tthis._removeTopRow(rows, topDiff);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.vDomScrollPosTop = this.scrollTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tresize(){\r\n\t\tthis.vDomWindowBuffer = this.table.options.renderVerticalBuffer || this.elementVertical.clientHeight;\r\n\t}\r\n\r\n\tscrollToRowNearestTop(row){\r\n\t\tvar rowIndex = this.rows().indexOf(row);\r\n\r\n\t\treturn !(Math.abs(this.vDomTop - rowIndex) > Math.abs(this.vDomBottom - rowIndex));\r\n\t}\r\n\r\n\tscrollToRow(row){\r\n\t\tvar index = this.rows().indexOf(row);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tthis._virtualRenderFill(index, true);\r\n\t\t}\r\n\t}\r\n\r\n\tvisibleRows(includingBuffer){\r\n\t\tvar topEdge = this.elementVertical.scrollTop,\r\n\t\tbottomEdge = this.elementVertical.clientHeight + topEdge,\r\n\t\ttopFound = false,\r\n\t\ttopRow = 0,\r\n\t\tbottomRow = 0,\r\n\t\trows = this.rows();\r\n\r\n\t\tif(includingBuffer){\r\n\t\t\ttopRow = this.vDomTop;\r\n\t\t\tbottomRow = this.vDomBottom;\r\n\t\t}else{\r\n\t\t\tfor(var i = this.vDomTop; i <= this.vDomBottom; i++){\r\n\t\t\t\tif(rows[i]){\r\n\t\t\t\t\tif(!topFound){\r\n\t\t\t\t\t\tif((topEdge - rows[i].getElement().offsetTop) >= 0){\r\n\t\t\t\t\t\t\ttopRow = i;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttopFound = true;\r\n\r\n\t\t\t\t\t\t\tif(bottomEdge - rows[i].getElement().offsetTop >= 0){\r\n\t\t\t\t\t\t\t\tbottomRow = i;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(bottomEdge - rows[i].getElement().offsetTop >= 0){\r\n\t\t\t\t\t\t\tbottomRow = i;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rows.slice(topRow, bottomRow + 1);\r\n\t}\r\n\r\n\t//////////////////////////////////////\r\n\t//////// Internal Rendering //////////\r\n\t//////////////////////////////////////\r\n\r\n\t//full virtual render\r\n\t_virtualRenderFill(position, forceMove, offset){\r\n\t\tvar\telement = this.tableElement,\r\n\t\tholder = this.elementVertical,\r\n\t\ttopPad = 0,\r\n\t\trowsHeight = 0,\r\n\t\theightOccupied = 0,\r\n\t\ttopPadHeight = 0,\r\n\t\ti = 0,\r\n\t\trows = this.rows(),\r\n\t\trowsCount = rows.length,\r\n\t\tcontainerHeight = this.elementVertical.clientHeight;\r\n\r\n\t\tposition = position || 0;\r\n\r\n\t\toffset = offset || 0;\r\n\r\n\t\tif(!position){\r\n\t\t\tthis.clear();\r\n\t\t}else{\r\n\t\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\t\t//check if position is too close to bottom of table\r\n\t\t\theightOccupied = (rowsCount - position + 1) * this.vDomRowHeight;\r\n\r\n\t\t\tif(heightOccupied < containerHeight){\r\n\t\t\t\tposition -= Math.ceil((containerHeight - heightOccupied) / this.vDomRowHeight);\r\n\t\t\t\tif(position < 0){\r\n\t\t\t\t\tposition = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//calculate initial pad\r\n\t\t\ttopPad = Math.min(Math.max(Math.floor(this.vDomWindowBuffer / this.vDomRowHeight),  this.vDomWindowMinMarginRows), position);\r\n\t\t\tposition -= topPad;\r\n\t\t}\r\n\r\n\t\tif(rowsCount && Helpers.elVisible(this.elementVertical)){\r\n\t\t\tthis.vDomTop = position;\r\n\r\n\t\t\tthis.vDomBottom = position -1;\r\n\r\n\t\t\twhile ((rowsHeight <= containerHeight + this.vDomWindowBuffer || i < this.vDomWindowMinTotalRows) && this.vDomBottom < rowsCount -1){\r\n\t\t\t\tvar index = this.vDomBottom + 1,\r\n\t\t\t\trow = rows[index],\r\n\t\t\t\trowHeight = 0;\r\n\r\n\t\t\t\tthis.styleRow(row, index);\r\n\r\n\t\t\t\telement.appendChild(row.getElement());\r\n\r\n\t\t\t\trow.initialize();\r\n\r\n\t\t\t\tif(!row.heightInitialized){\r\n\t\t\t\t\trow.normalizeHeight(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trowHeight = row.getHeight();\r\n\r\n\t\t\t\tif(i < topPad){\r\n\t\t\t\t\ttopPadHeight += rowHeight;\r\n\t\t\t\t}else{\r\n\t\t\t\t\trowsHeight += rowHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.vDomBottom ++;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\r\n\t\t\tif(!position){\r\n\t\t\t\tthis.vDomTopPad = 0;\r\n\t\t\t\t//adjust rowheight to match average of rendered elements\r\n\t\t\t\tthis.vDomRowHeight = Math.floor((rowsHeight + topPadHeight) / i);\r\n\t\t\t\tthis.vDomBottomPad = this.vDomRowHeight * (rowsCount - this.vDomBottom -1);\r\n\r\n\t\t\t\tthis.vDomScrollHeight = topPadHeight + rowsHeight + this.vDomBottomPad - containerHeight;\r\n\t\t\t}else{\r\n\t\t\t\tthis.vDomTopPad = !forceMove ? this.scrollTop - topPadHeight : (this.vDomRowHeight * this.vDomTop) + offset;\r\n\t\t\t\tthis.vDomBottomPad = this.vDomBottom == rowsCount-1 ? 0 : Math.max(this.vDomScrollHeight - this.vDomTopPad - rowsHeight - topPadHeight, 0);\r\n\t\t\t}\r\n\r\n\t\t\telement.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\telement.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\r\n\t\t\tif(forceMove){\r\n\t\t\t\tthis.scrollTop = this.vDomTopPad + (topPadHeight) + offset - (this.elementVertical.scrollWidth > this.elementVertical.clientWidth ? this.elementVertical.offsetHeight - containerHeight : 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scrollTop = Math.min(this.scrollTop, this.elementVertical.scrollHeight - containerHeight);\r\n\r\n\t\t\t//adjust for horizontal scrollbar if present (and not at top of table)\r\n\t\t\tif(this.elementVertical.scrollWidth > this.elementVertical.offsetWidth && forceMove){\r\n\t\t\t\tthis.scrollTop += this.elementVertical.offsetHeight - containerHeight;\r\n\t\t\t}\r\n\r\n\t\t\tthis.vDomScrollPosTop = this.scrollTop;\r\n\t\t\tthis.vDomScrollPosBottom = this.scrollTop;\r\n\r\n\t\t\tholder.scrollTop = this.scrollTop;\r\n\r\n\t\t\tthis.dispatch(\"render-virtual-fill\");\r\n\t\t}\r\n\t}\r\n\r\n\t_addTopRow(rows, fillableSpace){\r\n\t\tvar table = this.tableElement,\r\n\t\taddedRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\tindex = this.vDomTop -1,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tif(this.vDomTop){\r\n\t\t\t\tlet row = rows[index],\r\n\t\t\t\trowHeight, initialized;\r\n\r\n\t\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\t\t\t\t\tinitialized = row.initialized;\r\n\r\n\t\t\t\t\tif(fillableSpace >= rowHeight){\r\n\r\n\t\t\t\t\t\tthis.styleRow(row, index);\r\n\t\t\t\t\t\ttable.insertBefore(row.getElement(), table.firstChild);\r\n\r\n\t\t\t\t\t\tif(!row.initialized || !row.heightInitialized){\r\n\t\t\t\t\t\t\taddedRows.push(row);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trow.initialize();\r\n\r\n\t\t\t\t\t\tif(!initialized){\r\n\t\t\t\t\t\t\trowHeight = row.getElement().offsetHeight;\r\n\r\n\t\t\t\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\t\tthis.vDomTop--;\r\n\t\t\t\t\t\tindex--;\r\n\t\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of addedRows){\r\n\t\t\trow.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis._quickNormalizeRowHeight(addedRows);\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomTopPad -= paddingAdjust;\r\n\r\n\t\t\tif(this.vDomTopPad < 0){\r\n\t\t\t\tthis.vDomTopPad = index * this.vDomRowHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif(index < 1){\r\n\t\t\t\tthis.vDomTopPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\ttable.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\tthis.vDomScrollPosTop -= paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_removeTopRow(rows, fillableSpace){\r\n\t\tvar removableRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[this.vDomTop],\r\n\t\t\trowHeight, diff;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\t\t\t\t\tthis.vDomTop++;\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tremovableRows.push(row);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of removableRows){\r\n\t\t\tlet rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomTopPad += paddingAdjust;\r\n\t\t\tthis.tableElement.style.paddingTop = this.vDomTopPad + \"px\";\r\n\t\t\tthis.vDomScrollPosTop += this.vDomTop ? paddingAdjust : paddingAdjust + this.vDomWindowBuffer;\r\n\t\t}\r\n\t}\r\n\r\n\t_addBottomRow(rows, fillableSpace){\r\n\t\tvar table = this.tableElement,\r\n\t\taddedRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\tindex = this.vDomBottom + 1,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[index],\r\n\t\t\trowHeight, initialized;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\t\t\t\tinitialized = row.initialized;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\r\n\t\t\t\t\tthis.styleRow(row, index);\r\n\t\t\t\t\ttable.appendChild(row.getElement());\r\n\r\n\t\t\t\t\tif(!row.initialized || !row.heightInitialized){\r\n\t\t\t\t\t\taddedRows.push(row);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trow.initialize();\r\n\r\n\t\t\t\t\tif(!initialized){\r\n\t\t\t\t\t\trowHeight = row.getElement().offsetHeight;\r\n\r\n\t\t\t\t\t\tif(rowHeight > this.vDomWindowBuffer){\r\n\t\t\t\t\t\t\tthis.vDomWindowBuffer = rowHeight * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tthis.vDomBottom++;\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of addedRows){\r\n\t\t\trow.clearCellHeight();\r\n\t\t}\r\n\r\n\t\tthis._quickNormalizeRowHeight(addedRows);\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomBottomPad -= paddingAdjust;\r\n\r\n\t\t\tif(this.vDomBottomPad < 0 || index == rows.length -1){\r\n\t\t\t\tthis.vDomBottomPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\ttable.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\t\t\tthis.vDomScrollPosBottom += paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_removeBottomRow(rows, fillableSpace){\r\n\t\tvar removableRows = [],\r\n\t\tpaddingAdjust = 0,\r\n\t\ti = 0;\r\n\r\n\t\twhile(true){\r\n\t\t\tlet row = rows[this.vDomBottom],\r\n\t\t\trowHeight, diff;\r\n\r\n\t\t\tif(row && i < this.vDomMaxRenderChain){\r\n\t\t\t\trowHeight = row.getHeight() || this.vDomRowHeight;\r\n\r\n\t\t\t\tif(fillableSpace >= rowHeight){\r\n\t\t\t\t\tthis.vDomBottom --;\r\n\r\n\t\t\t\t\tfillableSpace -= rowHeight;\r\n\t\t\t\t\tpaddingAdjust += rowHeight;\r\n\r\n\t\t\t\t\tremovableRows.push(row);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let row of removableRows){\r\n\t\t\tlet rowEl = row.getElement();\r\n\r\n\t\t\tif(rowEl.parentNode){\r\n\t\t\t\trowEl.parentNode.removeChild(rowEl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(paddingAdjust){\r\n\t\t\tthis.vDomBottomPad += paddingAdjust;\r\n\r\n\t\t\tif(this.vDomBottomPad < 0){\r\n\t\t\t\tthis.vDomBottomPad = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.tableElement.style.paddingBottom = this.vDomBottomPad + \"px\";\r\n\t\t\tthis.vDomScrollPosBottom -= paddingAdjust;\r\n\t\t}\r\n\t}\r\n\r\n\t_quickNormalizeRowHeight(rows){\r\n\t\tfor(let row of rows){\r\n\t\t\trow.calcHeight();\r\n\t\t}\r\n\r\n\t\tfor(let row of rows){\r\n\t\t\trow.setCellHeight();\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\nimport Row from './row/Row.js';\r\nimport RowComponent from './row/RowComponent.js';\r\nimport Helpers from './tools/Helpers.js';\r\n\r\nimport RendererBasicVertical from './rendering/renderers/BasicVertical.js';\r\nimport RendererVirtualDomVertical from './rendering/renderers/VirtualDomVertical.js';\r\n\r\nexport default class RowManager extends CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.element = this.createHolderElement(); //containing element\r\n\t\tthis.tableElement = this.createTableElement(); //table element\r\n\t\tthis.heightFixer = this.createTableElement(); //table element\r\n\r\n\t\tthis.firstRender = false; //handle first render\r\n\t\tthis.renderMode = \"virtual\"; //current rendering mode\r\n\t\tthis.fixedHeight = false; //current rendering mode\r\n\r\n\t\tthis.rows = []; //hold row data objects\r\n\t\tthis.activeRowsPipeline = []; //hold caluclation of active rows\r\n\t\tthis.activeRows = []; //rows currently available to on display in the table\r\n\t\tthis.activeRowsCount = 0; //count of active rows\r\n\r\n\t\tthis.displayRows = []; //rows currently on display in the table\r\n\t\tthis.displayRowsCount = 0; //count of display rows\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.rowNumColumn = false; //hold column component for row number column\r\n\r\n\t\tthis.redrawBlock = false; //prevent redraws to allow multiple data manipulations becore continuing\r\n\t\tthis.redrawBlockRestoreConfig = false; //store latest redraw function calls for when redraw is needed\r\n\t\tthis.redrawBlockRederInPosition = false; //store latest redraw function calls for when redraw is needed\r\n\r\n\t\tthis.dataPipeline = []; //hold data pipeline tasks\r\n\t\tthis.displayPipeline = []; //hold data display pipeline tasks\r\n\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\t//////////////// Setup Functions /////////////////\r\n\r\n\tcreateHolderElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-tableholder\");\r\n\t\tel.setAttribute(\"tabindex\", 0);\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateTableElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-table\");\r\n\t\tel.setAttribute(\"role\", \"rowgroup\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t//return containing element\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t//return table element\r\n\tgetTableElement(){\r\n\t\treturn this.tableElement;\r\n\t}\r\n\r\n\t//return position of row in table\r\n\tgetRowPosition(row, active){\r\n\t\tif(active){\r\n\t\t\treturn this.activeRows.indexOf(row);\r\n\t\t}else{\r\n\t\t\treturn this.rows.indexOf(row);\r\n\t\t}\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeRenderer();\r\n\r\n\t\t//initialize manager\r\n\t\tthis.element.appendChild(this.tableElement);\r\n\r\n\t\tthis.firstRender = true;\r\n\r\n\t\t//scroll header along with table body\r\n\t\tthis.element.addEventListener(\"scroll\", () => {\r\n\t\t\tvar left = this.element.scrollLeft,\r\n\t\t\tleftDir = this.scrollLeft > left,\r\n\t\t\ttop = this.element.scrollTop,\r\n\t\t\ttopDir = this.scrollTop > top;\r\n\r\n\t\t\t//handle horizontal scrolling\r\n\t\t\tif(this.scrollLeft != left){\r\n\t\t\t\tthis.scrollLeft = left;\r\n\r\n\t\t\t\tthis.dispatch(\"scroll-horizontal\", left, leftDir);\r\n\t\t\t\tthis.dispatchExternal(\"scrollHorizontal\", left, leftDir);\r\n\t\t\t}\r\n\r\n\t\t\t//handle verical scrolling\r\n\t\t\tif(this.scrollTop != top){\r\n\t\t\t\tthis.scrollTop = top;\r\n\r\n\t\t\t\tthis.renderer.scrollRows(top, topDir);\r\n\r\n\t\t\t\tthis.dispatch(\"scroll-vertical\", top, topDir);\r\n\t\t\t\tthis.dispatchExternal(\"scrollVertical\", top, topDir);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t////////////////// Row Manipulation //////////////////\r\n\tfindRow(subject){\r\n\t\tif(typeof subject == \"object\"){\r\n\t\t\tif(subject instanceof Row){\r\n\t\t\t\t//subject is row element\r\n\t\t\t\treturn subject;\r\n\t\t\t}else if(subject instanceof RowComponent){\r\n\t\t\t\t//subject is public row component\r\n\t\t\t\treturn subject._getSelf() || false;\r\n\t\t\t}else if(typeof HTMLElement !== \"undefined\" && subject instanceof HTMLElement){\r\n\t\t\t\t//subject is a HTML element of the row\r\n\t\t\t\tlet match = this.rows.find((row) => {\r\n\t\t\t\t\treturn row.getElement() === subject;\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn match || false;\r\n\t\t\t}\r\n\t\t}else if(typeof subject == \"undefined\" || subject === null){\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\t//subject should be treated as the index of the row\r\n\t\t\tlet match = this.rows.find((row) => {\r\n\t\t\t\treturn row.data[this.table.options.index] == subject;\r\n\t\t\t});\r\n\r\n\t\t\treturn match || false;\r\n\t\t}\r\n\r\n\t\t//catch all for any other type of input\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetRowFromDataObject(data){\r\n\t\tvar match = this.rows.find((row) => {\r\n\t\t\treturn row.data === data;\r\n\t\t});\r\n\r\n\t\treturn match || false;\r\n\t}\r\n\r\n\tgetRowFromPosition(position, active){\r\n\t\tif(active){\r\n\t\t\treturn this.activeRows[position];\r\n\t\t}else{\r\n\t\t\treturn this.rows[position];\r\n\t\t}\r\n\t}\r\n\r\n\tscrollToRow(row, position, ifVisible){\r\n\t\treturn this.renderer.scrollToRowPosition(row, position, ifVisible);\r\n\t}\r\n\r\n\t////////////////// Data Handling //////////////////\r\n\tsetData(data, renderInPosition, columnsChanged){\r\n\t\treturn new Promise((resolve, reject)=>{\r\n\t\t\tif(renderInPosition && this.getDisplayRows().length){\r\n\t\t\t\tif(this.table.options.pagination){\r\n\t\t\t\t\tthis._setDataActual(data, true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.reRenderInPosition(() => {\r\n\t\t\t\t\t\tthis._setDataActual(data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(this.table.options.autoColumns && columnsChanged && this.table.initialized){\r\n\t\t\t\t\tthis.table.columnManager.generateColumnsFromRowData(data);\r\n\t\t\t\t}\r\n\t\t\t\tthis.resetScroll();\r\n\r\n\t\t\t\tthis._setDataActual(data);\r\n\t\t\t}\r\n\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\t_setDataActual(data, renderInPosition){\r\n\t\tthis.dispatchExternal(\"dataProcessing\", data);\r\n\r\n\t\tthis._wipeElements();\r\n\r\n\t\tif(Array.isArray(data)){\r\n\t\t\tthis.dispatch(\"data-processing\", data);\r\n\r\n\t\t\tdata.forEach((def, i) => {\r\n\t\t\t\tif(def && typeof def === \"object\"){\r\n\t\t\t\t\tvar row = new Row(def, this);\r\n\t\t\t\t\tthis.rows.push(row);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Data Loading Warning - Invalid row data detected and ignored, expecting object but received:\", def);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.refreshActiveData(false, false, renderInPosition);\r\n\r\n\t\t\tthis.dispatch(\"data-processed\", data);\r\n\t\t\tthis.dispatchExternal(\"dataProcessed\", data);\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Data Loading Error - Unable to process data due to invalid data type \\nExpecting: array \\nReceived: \", typeof data, \"\\nData:     \", data);\r\n\t\t}\r\n\t}\r\n\r\n\t_wipeElements(){\r\n\t\tthis.dispatch(\"rows-wipe\");\r\n\r\n\t\tthis.rows.forEach((row) => {\r\n\t\t\trow.wipe();\r\n\t\t});\r\n\r\n\t\tthis.rows = [];\r\n\t\tthis.activeRows = [];\r\n\t\tthis.activeRowsPipeline = [];\r\n\t\tthis.activeRowsCount = 0;\r\n\t\tthis.displayRows = [];\r\n\t\tthis.displayRowsCount = 0;\r\n\r\n\t\tthis.adjustTableSize();\r\n\t}\r\n\r\n\tdeleteRow(row, blockRedraw){\r\n\t\tvar allIndex = this.rows.indexOf(row),\r\n\t\tactiveIndex = this.activeRows.indexOf(row);\r\n\r\n\t\tif(activeIndex > -1){\r\n\t\t\tthis.activeRows.splice(activeIndex, 1);\r\n\t\t}\r\n\r\n\t\tif(allIndex > -1){\r\n\t\t\tthis.rows.splice(allIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.setActiveRows(this.activeRows);\r\n\r\n\t\tthis.displayRowIterator((rows) => {\r\n\t\t\tvar displayIndex = rows.indexOf(row);\r\n\r\n\t\t\tif(displayIndex > -1){\r\n\t\t\t\trows.splice(displayIndex, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!blockRedraw){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t}\r\n\r\n\t\tthis.regenerateRowNumbers();\r\n\r\n\t\tthis.dispatchExternal(\"rowDeleted\", row.getComponent());\r\n\r\n\t\tif(!this.displayRowsCount){\r\n\t\t\tthis._showPlaceholder();\r\n\t\t}\r\n\r\n\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\tthis.dispatchExternal(\"dataChanged\", this.getData());\r\n\t\t}\r\n\t}\r\n\r\n\taddRow(data, pos, index, blockRedraw){\r\n\t\tvar row = this.addRowActual(data, pos, index, blockRedraw);\r\n\r\n\t\tthis.dispatch(\"row-added\", row, data, pos, index);\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\t//add multiple rows\r\n\taddRows(data, pos, index){\r\n\t\tvar length = 0,\r\n\t\trows = [];\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tpos = this.findAddRowPos(pos);\r\n\r\n\t\t\tif(!Array.isArray(data)){\r\n\t\t\t\tdata = [data];\r\n\t\t\t}\r\n\r\n\t\t\tlength = data.length - 1;\r\n\r\n\t\t\tif((typeof index == \"undefined\" && pos) || (typeof index !== \"undefined\" && !pos)){\r\n\t\t\t\tdata.reverse();\r\n\t\t\t}\r\n\r\n\t\t\tdata.forEach((item, i) => {\r\n\t\t\t\tvar row = this.addRow(item, pos, index, true);\r\n\t\t\t\trows.push(row);\r\n\t\t\t\tthis.dispatch(\"row-added\", row, data, pos, index);\r\n\t\t\t});\r\n\r\n\t\t\tthis.refreshActiveData(false, false, true);\r\n\r\n\t\t\tthis.regenerateRowNumbers();\r\n\r\n\t\t\tif(rows.length){\r\n\t\t\t\tthis._clearPlaceholder();\r\n\t\t\t}\r\n\r\n\t\t\tresolve(rows);\r\n\t\t});\r\n\t}\r\n\r\n\tfindAddRowPos(pos){\r\n\t\tif(typeof pos === \"undefined\"){\r\n\t\t\tpos = this.table.options.addRowPos;\r\n\t\t}\r\n\r\n\t\tif(pos === \"pos\"){\r\n\t\t\tpos = true;\r\n\t\t}\r\n\r\n\t\tif(pos === \"bottom\"){\r\n\t\t\tpos = false;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t}\r\n\r\n\taddRowActual(data, pos, index, blockRedraw){\r\n\t\tvar row = data instanceof Row ? data : new Row(data || {}, this),\r\n\t\ttop = this.findAddRowPos(pos),\r\n\t\tallIndex = -1,\r\n\t\tactiveIndex, chainResult;\r\n\r\n\t\tif(!index){\r\n\t\t\tchainResult = this.chain(\"row-adding-position\", [row, top], null, {index, top});\r\n\r\n\t\t\tindex = chainResult.index;\r\n\t\t\ttop = chainResult.top;\r\n\t\t}\r\n\r\n\t\tif(typeof index !== \"undefined\"){\r\n\t\t\tindex = this.findRow(index);\r\n\t\t}\r\n\r\n\t\tindex = this.chain(\"row-adding-index\", [row, index, top], null, index);\r\n\r\n\t\tif(index){\r\n\t\t\tallIndex = this.rows.indexOf(index);\r\n\t\t}\r\n\r\n\t\tif(index && allIndex > -1){\r\n\t\t\tactiveIndex = this.activeRows.indexOf(index);\r\n\r\n\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\tvar displayIndex = rows.indexOf(index);\r\n\r\n\t\t\t\tif(displayIndex > -1){\r\n\t\t\t\t\trows.splice((top ? displayIndex : displayIndex + 1), 0, row);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(activeIndex > -1){\r\n\t\t\t\tthis.activeRows.splice((top ? activeIndex : activeIndex + 1), 0, row);\r\n\t\t\t}\r\n\r\n\t\t\tthis.rows.splice((top ? allIndex : allIndex + 1), 0, row);\r\n\r\n\t\t}else{\r\n\r\n\t\t\tif(top){\r\n\r\n\t\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\t\trows.unshift(row);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.activeRows.unshift(row);\r\n\t\t\t\tthis.rows.unshift(row);\r\n\t\t\t}else{\r\n\t\t\t\tthis.displayRowIterator(function(rows){\r\n\t\t\t\t\trows.push(row);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.activeRows.push(row);\r\n\t\t\t\tthis.rows.push(row);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setActiveRows(this.activeRows);\r\n\r\n\t\tthis.dispatchExternal(\"rowAdded\", row.getComponent());\r\n\r\n\t\tif(this.subscribedExternal(\"dataChanged\")){\r\n\t\t\tthis.dispatchExternal(\"dataChanged\", this.table.rowManager.getData());\r\n\t\t}\r\n\r\n\t\tif(!blockRedraw){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t}\r\n\r\n\t\treturn row;\r\n\t}\r\n\r\n\tmoveRow(from, to, after){\r\n\t\tthis.dispatch(\"row-move\", from, to, after);\r\n\r\n\t\tthis.moveRowActual(from, to, after);\r\n\r\n\t\tthis.regenerateRowNumbers();\r\n\r\n\t\tthis.dispatch(\"row-moved\", from, to, after);\r\n\t\tthis.dispatchExternal(\"rowMoved\", from.getComponent());\r\n\t}\r\n\r\n\tmoveRowActual(from, to, after){\r\n\t\tthis.moveRowInArray(this.rows, from, to, after);\r\n\t\tthis.moveRowInArray(this.activeRows, from, to, after);\r\n\r\n\t\tthis.displayRowIterator((rows) => {\r\n\t\t\tthis.moveRowInArray(rows, from, to, after);\r\n\t\t});\r\n\r\n\t\tthis.dispatch(\"row-moving\", from, to, after);\r\n\t}\r\n\r\n\tmoveRowInArray(rows, from, to, after){\r\n\t\tvar\tfromIndex, toIndex, start, end;\r\n\r\n\t\tif(from !== to){\r\n\r\n\t\t\tfromIndex = rows.indexOf(from);\r\n\r\n\t\t\tif (fromIndex > -1) {\r\n\r\n\t\t\t\trows.splice(fromIndex, 1);\r\n\r\n\t\t\t\ttoIndex = rows.indexOf(to);\r\n\r\n\t\t\t\tif (toIndex > -1) {\r\n\r\n\t\t\t\t\tif(after){\r\n\t\t\t\t\t\trows.splice(toIndex+1, 0, from);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\trows.splice(toIndex, 0, from);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\trows.splice(fromIndex, 0, from);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//restyle rows\r\n\t\t\tif(rows === this.getDisplayRows()){\r\n\r\n\t\t\t\tstart = fromIndex < toIndex ? fromIndex : toIndex;\r\n\t\t\t\tend = toIndex > fromIndex ? toIndex : fromIndex +1;\r\n\r\n\t\t\t\tfor(let i = start; i <= end; i++){\r\n\t\t\t\t\tif(rows[i]){\r\n\t\t\t\t\t\tthis.styleRow(rows[i], i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclearData(){\r\n\t\tthis.setData([]);\r\n\t}\r\n\r\n\tgetRowIndex(row){\r\n\t\treturn this.findRowIndex(row, this.rows);\r\n\t}\r\n\r\n\tgetDisplayRowIndex(row){\r\n\t\tvar index = this.getDisplayRows().indexOf(row);\r\n\t\treturn index > -1 ? index : false;\r\n\t}\r\n\r\n\tnextDisplayRow(row, rowOnly){\r\n\t\tvar index = this.getDisplayRowIndex(row),\r\n\t\tnextRow = false;\r\n\r\n\r\n\t\tif(index !== false && index < this.displayRowsCount -1){\r\n\t\t\tnextRow = this.getDisplayRows()[index+1];\r\n\t\t}\r\n\r\n\t\tif(nextRow && (!(nextRow instanceof Row) || nextRow.type != \"row\")){\r\n\t\t\treturn this.nextDisplayRow(nextRow, rowOnly);\r\n\t\t}\r\n\r\n\t\treturn nextRow;\r\n\t}\r\n\r\n\tprevDisplayRow(row, rowOnly){\r\n\t\tvar index = this.getDisplayRowIndex(row),\r\n\t\tprevRow = false;\r\n\r\n\t\tif(index){\r\n\t\t\tprevRow = this.getDisplayRows()[index-1];\r\n\t\t}\r\n\r\n\t\tif(rowOnly && prevRow && (!(prevRow instanceof Row) || prevRow.type != \"row\")){\r\n\t\t\treturn this.prevDisplayRow(prevRow, rowOnly);\r\n\t\t}\r\n\r\n\t\treturn prevRow;\r\n\t}\r\n\r\n\tfindRowIndex(row, list){\r\n\t\tvar rowIndex;\r\n\r\n\t\trow = this.findRow(row);\r\n\r\n\t\tif(row){\r\n\t\t\trowIndex = list.indexOf(row);\r\n\r\n\t\t\tif(rowIndex > -1){\r\n\t\t\t\treturn rowIndex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetData(active, transform){\r\n\t\tvar output = [],\r\n\t\trows = this.getRows(active);\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\tif(row.type == \"row\"){\r\n\t\t\t\toutput.push(row.getData(transform || \"data\"));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetComponents(active){\r\n\t\tvar\toutput = [],\r\n\t\trows = this.getRows(active);\r\n\r\n\t\trows.forEach(function(row){\r\n\t\t\toutput.push(row.getComponent());\r\n\t\t});\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetDataCount(active){\r\n\t\tvar rows = this.getRows(active);\r\n\r\n\t\treturn rows.length;\r\n\t}\r\n\r\n\tscrollHorizontal(left){\r\n\t\tthis.scrollLeft = left;\r\n\t\tthis.element.scrollLeft = left;\r\n\r\n\t\tthis.dispatch(\"scroll-horizontal\", left);\r\n\t}\r\n\r\n\tregisterDataPipelineHandler(handler, priority){\r\n\t\tif(typeof priority !== \"undefined\"){\r\n\t\t\tthis.dataPipeline.push({handler, priority})\r\n\t\t\tthis.dataPipeline.sort((a, b) => {\r\n\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Data pipeline handlers must have a priority in order to be registered\")\r\n\t\t}\r\n\t}\r\n\r\n\tregisterDisplayPipelineHandler(handler, priority){\r\n\t\tif(typeof priority !== \"undefined\"){\r\n\t\t\tthis.displayPipeline.push({handler, priority})\r\n\t\t\tthis.displayPipeline.sort((a, b) => {\r\n\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Display pipeline handlers must have a priority in order to be registered\")\r\n\t\t}\r\n\t}\r\n\r\n\t//set active data set\r\n\trefreshActiveData(handler, skipStage, renderInPosition){\r\n\t\tvar table = this.table,\r\n\t\tstage = \"\",\r\n\t\tindex = 0,\r\n\t\tcascadeOrder = [\"all\", \"dataPipeline\", \"display\", \"displayPipeline\", \"end\"],\r\n\t\tdisplayIndex;\r\n\r\n\r\n\t\tif(typeof handler === \"function\"){\r\n\t\t\tindex = this.dataPipeline.findIndex((item) => {\r\n\t\t\t\treturn item.handler === handler;\r\n\t\t\t});\r\n\r\n\t\t\tif(index > -1){\r\n\t\t\t\tstage = \"dataPipeline\";\r\n\r\n\t\t\t\tif(skipStage){\r\n\t\t\t\t\tif(index == this.dataPipeline.length - 1){\r\n\t\t\t\t\t\tstage = \"display\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindex = this.displayPipeline.findIndex((item) => {\r\n\t\t\t\t\treturn item.handler === handler;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tstage = \"displayPipeline\";\r\n\r\n\t\t\t\t\tif(skipStage){\r\n\t\t\t\t\t\tif(index == this.displayPipeline.length - 1){\r\n\t\t\t\t\t\t\tstage = \"end\";\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.error(\"Unable to refresh data, invalid handler provided\", handler)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tstage = handler || \"all\";\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\tif(this.redrawBlock){\r\n\t\t\tif(!this.redrawBlockRestoreConfig || (this.redrawBlockRestoreConfig && ((this.redrawBlockRestoreConfig.stage === stage && index < this.redrawBlockRestoreConfig.index) || (cascadeOrder.indexOf(stage) < cascadeOrder.indexOf(this.redrawBlockRestoreConfig.stage))))){\r\n\t\t\t\tthis.redrawBlockRestoreConfig = {\r\n\t\t\t\t\thandler: handler,\r\n\t\t\t\t\tskipStage: skipStage,\r\n\t\t\t\t\trenderInPosition: renderInPosition,\r\n\t\t\t\t\tstage:stage,\r\n\t\t\t\t\tindex:index,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tthis.dispatch(\"data-refeshing\");\r\n\r\n\t\t\tif(!handler){\r\n\t\t\t\tthis.activeRowsPipeline[0] = this.rows.slice(0);\r\n\t\t\t}\r\n\r\n\t\t\t//cascade through data refresh stages\r\n\t\t\tswitch(stage){\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\t//handle case where alldata needs refreshing\r\n\r\n\t\t\t\tcase \"dataPipeline\":\r\n\r\n\t\t\t\tfor(let i = index; i < this.dataPipeline.length; i++){\r\n\t\t\t\t\tlet result = this.dataPipeline[i].handler(this.activeRowsPipeline[i].slice(0));\r\n\r\n\t\t\t\t\tthis.activeRowsPipeline[i + 1] = result || this.activeRowsPipeline[i].slice(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setActiveRows(this.activeRowsPipeline[this.dataPipeline.length]);\r\n\r\n\t\t\t\tthis.regenerateRowNumbers();\r\n\r\n\t\t\t\tcase \"display\":\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tthis.resetDisplayRows();\r\n\r\n\t\t\t\tcase \"displayPipeline\":\r\n\t\t\t\tfor(let i = index; i < this.displayPipeline.length; i++){\r\n\t\t\t\t\tlet result = this.displayPipeline[i].handler((i ? this.getDisplayRows(i - 1) : this.activeRows).slice(0), renderInPosition);\r\n\r\n\t\t\t\t\tthis.setDisplayRows(result || this.getDisplayRows(i - 1).slice(0), i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\t//case to handle scenario when trying to skip past end stage\r\n\t\t\t}\r\n\r\n\t\t\tif(Helpers.elVisible(this.element)){\r\n\t\t\t\tif(renderInPosition){\r\n\t\t\t\t\tthis.reRenderInPosition();\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tif(!handler){\r\n\t\t\t\t\t\tthis.table.columnManager.renderer.renderColumns();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.renderTable();\r\n\r\n\t\t\t\t\tif(table.options.layoutColumnsOnNewData){\r\n\t\t\t\t\t\tthis.table.columnManager.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"data-refeshed\");\r\n\t\t}\r\n\t}\r\n\r\n\t//regenerate row numbers for row number formatter if in use\r\n\tregenerateRowNumbers(){\r\n\t\tif(this.rowNumColumn){\r\n\t\t\tthis.activeRows.forEach((row) => {\r\n\t\t\t\tvar cell = row.getCell(this.rowNumColumn);\r\n\r\n\t\t\t\tif(cell){\r\n\t\t\t\t\tcell._generateContents();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tsetActiveRows(activeRows){\r\n\t\tthis.activeRows = activeRows;\r\n\t\tthis.activeRowsCount = this.activeRows.length;\r\n\t}\r\n\r\n\t//reset display rows array\r\n\tresetDisplayRows(){\r\n\t\tthis.displayRows = [];\r\n\r\n\t\tthis.displayRows.push(this.activeRows.slice(0));\r\n\r\n\t\tthis.displayRowsCount = this.displayRows[0].length;\r\n\t}\r\n\r\n\tgetNextDisplayIndex(){\r\n\t\treturn this.displayRows.length;\r\n\t}\r\n\r\n\t//set display row pipeline data\r\n\tsetDisplayRows(displayRows, index){\r\n\r\n\t\tvar output = true;\r\n\r\n\t\tif(index && typeof this.displayRows[index] != \"undefined\"){\r\n\t\t\tthis.displayRows[index] = displayRows;\r\n\t\t\toutput = true;\r\n\t\t}else{\r\n\t\t\tthis.displayRows.push(displayRows)\r\n\t\t\toutput = index = this.displayRows.length -1;\r\n\t\t}\r\n\r\n\t\tif(index == this.displayRows.length -1){\r\n\t\t\tthis.displayRowsCount = this.displayRows[this.displayRows.length -1].length;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tgetDisplayRows(index){\r\n\t\tif(typeof index == \"undefined\"){\r\n\t\t\treturn this.displayRows.length ? this.displayRows[this.displayRows.length -1] : [];\r\n\t\t}else{\r\n\t\t\treturn this.displayRows[index] || [];\r\n\t\t}\r\n\t}\r\n\r\n\tgetVisibleRows(chain, viewable){\r\n\t\tvar rows =  Object.assign([], this.renderer.visibleRows(!viewable));\r\n\r\n\t\tif(chain){\r\n\t\t\trows = this.chain(\"rows-visible\", [viewable], rows, rows);\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t//repeat action accross display rows\r\n\tdisplayRowIterator(callback){\r\n\t\tthis.activeRowsPipeline.forEach(callback);\r\n\t\tthis.displayRows.forEach(callback);\r\n\r\n\t\tthis.displayRowsCount = this.displayRows[this.displayRows.length -1].length;\r\n\t}\r\n\r\n\t//return only actual rows (not group headers etc)\r\n\tgetRows(type){\r\n\t\tvar rows;\r\n\r\n\t\tswitch(type){\r\n\t\t\tcase \"active\":\r\n\t\t\trows = this.activeRows;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"display\":\r\n\t\t\trows = this.table.rowManager.getDisplayRows();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"visible\":\r\n\t\t\trows = this.getVisibleRows(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\trows = this.chain(\"rows-retrieve\", type, null, this.rows) || this.rows;\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t}\r\n\r\n\t///////////////// Table Rendering /////////////////\r\n\t//trigger rerender of table in current position\r\n\treRenderInPosition(callback){\r\n\t\tif(this.redrawBlock){\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback();\r\n\t\t\t}else{\r\n\t\t\t\tthis.redrawBlockRederInPosition = true;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderer.rerenderRows(callback);\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeRenderer(){\r\n\t\tvar renderClass;\r\n\r\n\t\tvar renderers = {\r\n\t\t\t\"virtual\": RendererVirtualDomVertical,\r\n\t\t\t\"basic\": RendererBasicVertical,\r\n\t\t};\r\n\r\n\t\tif(typeof this.table.options.renderVertical === \"string\"){\r\n\t\t\trenderClass = renderers[this.table.options.renderVertical];\r\n\t\t}else{\r\n\t\t\trenderClass = this.table.options.renderVertical;\r\n\t\t}\r\n\r\n\t\tif(renderClass){\r\n\t\t\tthis.renderer = new renderClass(this.table, this.element, this.tableElement);\r\n\t\t\tthis.renderer.initialize();\r\n\r\n\t\t\tif((this.table.element.clientHeight || this.table.options.height)){\r\n\t\t\t\tthis.fixedHeight = true;\r\n\t\t\t}else{\r\n\t\t\t\tthis.fixedHeight = false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Unable to find matching renderer:\", table.options.renderVertical);\r\n\t\t}\r\n\t}\r\n\r\n\tgetRenderMode(){\r\n\t\treturn this.renderMode;\r\n\t}\r\n\r\n\trenderTable(){\r\n\t\tthis.dispatchExternal(\"renderStarted\");\r\n\r\n\t\tthis.element.scrollTop = 0;\r\n\r\n\t\tthis._clearTable();\r\n\r\n\t\tif(this.displayRowsCount){\r\n\t\t\tthis.renderer.renderRows();\r\n\r\n\t\t\tif(this.firstRender){\r\n\t\t\t\tthis.firstRender = false;\r\n\t\t\t\tthis.layoutRefresh();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderEmptyScroll();\r\n\t\t}\r\n\r\n\t\tif(!this.fixedHeight){\r\n\t\t\tthis.adjustTableSize();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"table-layout\");\r\n\r\n\t\tif(!this.displayRowsCount){\r\n\t\t\tthis._showPlaceholder();\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(\"renderComplete\");\r\n\t}\r\n\r\n\t//show scrollbars on empty table div\r\n\trenderEmptyScroll(){\r\n\t\tif(this.table.options.placeholder){\r\n\t\t\tthis.tableElement.style.display = \"none\";\r\n\t\t}else{\r\n\t\t\tthis.tableElement.style.minWidth = this.table.columnManager.getWidth() + \"px\";\r\n\t\t\t// this.tableElement.style.minHeight = \"1px\";\r\n\t\t\t// this.tableElement.style.visibility = \"hidden\";\r\n\t\t}\r\n\t}\r\n\r\n\t_clearTable(){\r\n\t\tvar element = this.tableElement;\r\n\r\n\t\tthis._clearPlaceholder();\r\n\r\n\t\tthis.scrollTop = 0;\r\n\t\tthis.scrollLeft = 0;\r\n\r\n\t\tthis.renderer.clearRows();\r\n\t}\r\n\r\n\t_showPlaceholder(){\r\n\t\tif(this.table.options.placeholder){\r\n\r\n\t\t\tthis.table.options.placeholder.setAttribute(\"tabulator-render-mode\", this.renderMode);\r\n\r\n\t\t\tthis.getElement().appendChild(this.table.options.placeholder);\r\n\t\t\tthis.table.options.placeholder.style.width = this.table.columnManager.getWidth() + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\t_clearPlaceholder(){\r\n\t\tif(this.table.options.placeholder && this.table.options.placeholder.parentNode){\r\n\t\t\tthis.table.options.placeholder.parentNode.removeChild(this.table.options.placeholder);\r\n\t\t}\r\n\t}\r\n\r\n\tstyleRow(row, index){\r\n\t\tvar rowEl = row.getElement();\r\n\r\n\t\tif(index % 2){\r\n\t\t\trowEl.classList.add(\"tabulator-row-even\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-odd\");\r\n\t\t}else{\r\n\t\t\trowEl.classList.add(\"tabulator-row-odd\");\r\n\t\t\trowEl.classList.remove(\"tabulator-row-even\");\r\n\t\t}\r\n\t}\r\n\r\n\t//normalize height of active rows\r\n\tnormalizeHeight(){\r\n\t\tthis.activeRows.forEach(function(row){\r\n\t\t\trow.normalizeHeight();\r\n\t\t});\r\n\t}\r\n\r\n\t//adjust the height of the table holder to fit in the Tabulator element\r\n\tadjustTableSize(){\r\n\t\tvar initialHeight = this.element.clientHeight,\r\n\t\tmodExists;\r\n\r\n\t\tif(this.renderer.verticalFillMode === \"fill\"){\r\n\t\t\tlet otherHeight =  Math.floor(this.table.columnManager.getElement().getBoundingClientRect().height + (this.table.footerManager && this.table.footerManager.active && !this.table.footerManager.external ? this.table.footerManager.getElement().getBoundingClientRect().height : 0));\r\n\r\n\t\t\tif(this.fixedHeight){\r\n\t\t\t\tthis.element.style.minHeight = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t\tthis.element.style.height = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t\tthis.element.style.maxHeight = \"calc(100% - \" + otherHeight + \"px)\";\r\n\t\t\t}else{\r\n\t\t\t\tthis.element.style.height = \"\";\r\n\t\t\t\tthis.element.style.height = (this.table.element.clientHeight - otherHeight) + \"px\";\r\n\t\t\t\tthis.element.scrollTop = this.scrollTop;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderer.resize();\r\n\r\n\t\t\t//check if the table has changed size when dealing with variable height tables\r\n\t\t\tif(!this.fixedHeight && initialHeight != this.element.clientHeight){\r\n\t\t\t\tif(this.subscribed(\"table-resize\")){\r\n\t\t\t\t\tthis.dispatch(\"table-resize\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//renitialize all rows\r\n\treinitialize(){\r\n\t\tthis.rows.forEach(function(row){\r\n\t\t\trow.reinitialize(true);\r\n\t\t});\r\n\t}\r\n\r\n\t//prevent table from being redrawn\r\n\tblockRedraw (){\r\n\t\tthis.redrawBlock = true;\r\n\t\tthis.redrawBlockRestoreConfig = false;\r\n\t}\r\n\r\n\t//restore table redrawing\r\n\trestoreRedraw (){\r\n\t\tthis.redrawBlock = false;\r\n\r\n\t\tif(this.redrawBlockRestoreConfig){\r\n\t\t\tthis.refreshActiveData(this.redrawBlockRestoreConfig.handler, this.redrawBlockRestoreConfig.skipStage, this.redrawBlockRestoreConfig.renderInPosition)\r\n\r\n\t\t\tthis.redrawBlockRestoreConfig = false;\r\n\t\t}else{\r\n\t\t\tif(this.redrawBlockRederInPosition){\r\n\t\t\t\tthis.reRenderInPosition();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.redrawBlockRederInPosition = false;\r\n\t}\r\n\r\n\t//redraw table\r\n\tredraw (force){\r\n\t\tvar pos = 0,\r\n\t\tleft = this.scrollLeft;\r\n\r\n\t\tthis.adjustTableSize();\r\n\r\n\t\tthis.table.tableWidth = this.table.element.clientWidth;\r\n\r\n\t\tif(!force){\r\n\t\t\tthis.reRenderInPosition();\r\n\t\t\tthis.scrollHorizontal(left);\r\n\r\n\t\t\tif(!this.displayRowsCount){\r\n\t\t\t\tif(this.table.options.placeholder){\r\n\t\t\t\t\tthis.getElement().appendChild(this.table.options.placeholder);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.renderTable();\r\n\t\t}\r\n\t}\r\n\r\n\tresetScroll(){\r\n\t\tthis.element.scrollLeft = 0;\r\n\t\tthis.element.scrollTop = 0;\r\n\r\n\t\tif(this.table.browser === \"ie\"){\r\n\t\t\tvar event = document.createEvent(\"Event\");\r\n\t\t\tevent.initEvent(\"scroll\", false, true);\r\n\t\t\tthis.element.dispatchEvent(event);\r\n\t\t}else{\r\n\t\t\tthis.element.dispatchEvent(new Event('scroll'));\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from './CoreFeature.js';\r\n\r\nexport default class FooterManager extends CoreFeature{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.active = false;\r\n\t\tthis.element = this.createElement(); //containing element\r\n\t\tthis.external = false;\r\n\t\tthis.links = [];\r\n\r\n\t\tthis.initializeElement();\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.initializeElement();\r\n\t}\r\n\r\n\tcreateElement (){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-footer\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tinitializeElement(){\r\n\t\tif(this.table.options.footerElement){\r\n\r\n\t\t\tswitch(typeof this.table.options.footerElement){\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tif(this.table.options.footerElement[0] === \"<\"){\r\n\t\t\t\t\tthis.element.innerHTML = this.table.options.footerElement;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.external = true;\r\n\t\t\t\t\tthis.element = document.querySelector(this.table.options.footerElement);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tthis.element = this.table.options.footerElement;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tappend(element, parent){\r\n\t\tthis.activate(parent);\r\n\r\n\t\tthis.element.appendChild(element);\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\tprepend(element, parent){\r\n\t\tthis.activate(parent);\r\n\r\n\t\tthis.element.insertBefore(element, this.element.firstChild);\r\n\t\tthis.table.rowManager.adjustTableSize();\r\n\t}\r\n\r\n\tremove(element){\r\n\t\telement.parentNode.removeChild(element);\r\n\t\tthis.deactivate();\r\n\t}\r\n\r\n\tdeactivate(force){\r\n\t\tif(!this.element.firstChild || force){\r\n\t\t\tif(!this.external){\r\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\r\n\t\t\t}\r\n\t\t\tthis.active = false;\r\n\t\t}\r\n\t}\r\n\r\n\tactivate(parent){\r\n\t\tif(!this.active){\r\n\t\t\tthis.active = true;\r\n\t\t\tif(!this.external){\r\n\t\t\t\tthis.table.element.appendChild(this.getElement());\r\n\t\t\t\tthis.table.element.style.display = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(parent){\r\n\t\t\tthis.links.push(parent);\r\n\t\t}\r\n\t}\r\n\r\n\tredraw(){\r\n\t\tthis.links.forEach(function(link){\r\n\t\t\tlink.footerRedraw();\r\n\t\t});\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\nimport Helpers from './Helpers.js';\r\n\r\nexport default class InteractionManager extends CoreFeature {\r\n\t\r\n\tconstructor (table){\r\n\t\tsuper(table);\r\n\t\t\r\n\t\tthis.el = null;\r\n\t\t\r\n\t\tthis.abortClasses = [\"tabulator-headers\", \"tabulator-table\"];\r\n\t\t\r\n\t\tthis.previousTargets = {};\r\n\t\t\r\n\t\tthis.listeners = [\r\n\t\t\t\"click\",\r\n\t\t\t\"dblclick\",\r\n\t\t\t\"contextmenu\",\r\n\t\t\t\"mouseenter\",\r\n\t\t\t\"mouseleave\",\r\n\t\t\t\"mouseover\",\r\n\t\t\t\"mouseout\",\r\n\t\t\t\"mousemove\",\r\n\t\t\t\"touchstart\",\r\n\t\t\t\"touchend\",\r\n\t\t];\r\n\t\t\r\n\t\tthis.componentMap = {\r\n\t\t\t\"tabulator-cell\":\"cell\",\r\n\t\t\t\"tabulator-row\":\"row\",\r\n\t\t\t\"tabulator-group\":\"group\",\r\n\t\t\t\"tabulator-col\":\"column\",\r\n\t\t};\r\n\r\n\t\tthis.pseudoTrackers = {\r\n\t\t\t\"row\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"cell\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"group\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t\t\"column\":{\r\n\t\t\t\tsubscriber:null,\r\n\t\t\t\ttarget:null,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.pseudoTracking = false;\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.el = this.table.element;\r\n\t\tthis.buildListenerMap();\r\n\t\tthis.bindSubscriptionWatchers();\r\n\t}\r\n\t\r\n\tbuildListenerMap(){\r\n\t\tvar listenerMap = {};\r\n\t\t\r\n\t\tthis.listeners.forEach((listener) => {\r\n\t\t\tlistenerMap[listener] = {\r\n\t\t\t\thandler:null,\r\n\t\t\t\tcomponents:[],\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.listeners = listenerMap;\r\n\t}\r\n\r\n\tbindPseudoEvents(){\r\n\t\tObject.keys(this.pseudoTrackers).forEach((key) => {\r\n\t\t\tthis.pseudoTrackers[key].subscriber = this.pseudoMouseEnter.bind(this, key);\r\n\t\t\tthis.subscribe(key + \"-mouseover\", this.pseudoTrackers[key].subscriber);\r\n\t\t});\r\n\r\n\t\tthis.pseudoTracking = true;\r\n\t}\r\n\r\n\tpseudoMouseEnter(key, e, target){\r\n\t\tif(this.pseudoTrackers[key].target !== target){\r\n\t\t\t\r\n\t\t\tif(this.pseudoTrackers[key].target){\r\n\t\t\t\tthis.dispatch(key + \"-mouseleave\", e, target);\r\n\t\t\t}\r\n\r\n\t\t\tthis.pseudoMouseLeave(key, e);\r\n\r\n\t\t\tthis.pseudoTrackers[key].target = target;\r\n\r\n\t\t\tthis.dispatch(key + \"-mouseenter\", e, target);\r\n\t\t}\r\n\t}\r\n\r\n\tpseudoMouseLeave(key, e){\r\n\t\tvar leaveList = Object.keys(this.pseudoTrackers),\r\n\t\tlinkedKeys = {\r\n\t\t\t\"row\":[\"cell\"],\r\n\t\t\t\"cell\":[\"row\"],\r\n\t\t};\r\n\r\n\t\tleaveList = leaveList.filter((item) => {\r\n\t\t\tvar links = linkedKeys[key];\r\n\t\t\treturn item !== key && (!links || (links && !links.includes(item)));\r\n\t\t});\r\n\r\n\t\r\n\t\tleaveList.forEach((key) => {\r\n\t\t\tvar target = this.pseudoTrackers[key].target;\r\n\r\n\t\t\tif(this.pseudoTrackers[key].target){\r\n\t\t\t\tthis.dispatch(key + \"-mouseleave\", e, target);\r\n\r\n\t\t\t\tthis.pseudoTrackers[key].target = null;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\tbindSubscriptionWatchers(){\r\n\t\tvar listeners = Object.keys(this.listeners),\r\n\t\tcomponents = Object.values(this.componentMap);\r\n\t\t\r\n\t\tfor(let comp of components){\r\n\t\t\tfor(let listener of listeners){\r\n\t\t\t\tlet key = comp + \"-\" + listener;\r\n\t\t\t\t\r\n\t\t\t\tthis.subscriptionChange(key, this.subscriptionChanged.bind(this, comp, listener));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.subscribe(\"table-destroy\", this.clearWatchers.bind(this))\r\n\t}\r\n\t\r\n\tsubscriptionChanged(component, key, added){\r\n\t\tvar listener = this.listeners[key].components,\r\n\t\tindex = listener.indexOf(component),\r\n\t\tchanged = false;\r\n\r\n\t\tif(added){\r\n\t\t\tif(index === -1){\r\n\t\t\t\tlistener.push(component);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(!this.subscribed(component + \"-\" + key)){\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tlistener.splice(index, 1);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif((key === \"mouseenter\" || key === \"mouseleave\") && !this.pseudoTracking){\r\n\t\t\tthis.bindPseudoEvents();\r\n\t\t}\r\n\t\t\r\n\t\tif(changed){\r\n\t\t\tthis.updateEventListeners();\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateEventListeners(){\r\n\t\tfor(let key in this.listeners){\r\n\t\t\tlet listener = this.listeners[key];\r\n\t\t\t\r\n\t\t\tif(listener.components.length){\r\n\t\t\t\tif(!listener.handler){\r\n\t\t\t\t\tlistener.handler = this.track.bind(this, key);\r\n\t\t\t\t\tthis.el.addEventListener(key, listener.handler)\r\n\t\t\t\t\t// this.el.addEventListener(key, listener.handler, {passive: true})\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(listener.handler){\r\n\t\t\t\t\tthis.el.removeEventListener(key, listener.handler)\r\n\t\t\t\t\tlistener.handler = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\ttrack(type, e){\r\n\t\tvar path = (e.composedPath && e.composedPath()) || e.path;\r\n\t\t\r\n\t\tvar targets = this.findTargets(path);\r\n\t\ttargets = this.bindComponents(type, targets);\r\n\r\n\t\tthis.triggerEvents(type, e, targets);\r\n\r\n\t\tif(this.pseudoTracking && (type == \"mouseover\" || type == \"mouseleave\") && !Object.keys(targets).length){\r\n\t\t\tthis.pseudoMouseLeave(\"none\", e);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfindTargets(path){\r\n\t\tvar targets = {};\r\n\t\t\r\n\t\tlet componentMap = Object.keys(this.componentMap);\r\n\t\t\r\n\t\tfor (let el of path) {\r\n\t\t\tlet classList = el.classList ? [...el.classList] : [];\r\n\t\t\t\r\n\t\t\tlet abort = classList.filter((item) => {\r\n\t\t\t\treturn this.abortClasses.includes(item);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tif(abort.length){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet elTargets = classList.filter((item) => {\r\n\t\t\t\treturn componentMap.includes(item);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tfor (let target of elTargets) {\r\n\t\t\t\ttargets[this.componentMap[target]] = el;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(targets.group && targets.group === targets.row){\r\n\t\t\tdelete targets.row;\r\n\t\t}\r\n\t\t\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\tbindComponents(type, targets){\r\n\t\t//ensure row component is looked up before cell\r\n\t\tvar keys = Object.keys(targets).reverse(),\r\n\t\tlistener = this.listeners[type],\r\n\t\ttargetMatches = {};\r\n\t\t\r\n\t\tfor(let key of keys){\r\n\t\t\tlet component;\r\n\t\t\tlet target = targets[key];\r\n\t\t\tlet previousTarget = this.previousTargets[key];\r\n\t\t\t\r\n\t\t\tif(previousTarget && previousTarget.target === target){\r\n\t\t\t\tcomponent = previousTarget.component;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(key){\r\n\t\t\t\t\tcase \"row\":\r\n\t\t\t\t\tcase \"group\":\r\n\t\t\t\t\tif(listener.components.includes(\"row\") || listener.components.includes(\"cell\")){\r\n\t\t\t\t\t\tlet rows = this.table.rowManager.getVisibleRows(true);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcomponent = rows.find((row) => {\r\n\t\t\t\t\t\t\treturn row.getElement() === target;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"column\":\r\n\t\t\t\t\tif(listener.components.includes(\"column\")){\r\n\t\t\t\t\t\tcomponent = this.table.columnManager.findColumn(target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase \"cell\":\r\n\t\t\t\t\tif(listener.components.includes(\"cell\")){\r\n\t\t\t\t\t\tcomponent = targets[\"row\"].findCell(target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(component){\r\n\t\t\t\ttargets[key] = component;\r\n\t\t\t\ttargetMatches[key] = {\r\n\t\t\t\t\ttarget:target,\r\n\t\t\t\t\tcomponent:component,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.previousTargets = targetMatches;\r\n\t\t\r\n\t\treturn targets;\r\n\t}\r\n\t\r\n\ttriggerEvents(type, e, targets){\r\n\t\tvar listener = this.listeners[type];\r\n\t\t\r\n\t\tfor(let key in targets){\r\n\t\t\tif(targets[key] && listener.components.includes(key)){\r\n\t\t\t\tthis.dispatch(key + \"-\" + type, e, targets[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tclearWatchers(){\r\n\t\tfor(let key in this.listeners){\r\n\t\t\tlet listener = this.listeners[key];\r\n\t\t\r\n\t\t\tif(listener.handler){\r\n\t\t\t\tthis.el.removeEventListener(key, listener.handler)\r\n\t\t\t\tlistener.handler = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","export default class ComponentFunctionBinder{\r\n\r\n\tconstructor(table){\r\n\t\tthis.table = table;\r\n\r\n\t\tthis.bindings = {};\r\n\t}\r\n\r\n\tbind(type, funcName, handler){\r\n\t\tif(!this.bindings[type]){\r\n\t\t\tthis.bindings[type] = {};\r\n\t\t}\r\n\r\n\t\tif(this.bindings[type][funcName]){\r\n\t\t\tconsole.warn(\"Unable to bind component handler, a matching function name is already bound\", type, funcName, hanlder)\r\n\t\t}else{\r\n\t\t\tthis.bindings[type][funcName] = handler;\r\n\t\t}\r\n\t}\r\n\r\n\thandle(type, component, name){\r\n\t\tif(this.bindings[type] && this.bindings[type][name]){\r\n\t\t\treturn this.bindings[type][name].bind(null, component);\r\n\t\t}else{\r\n\t\t\tif(name !== \"then\" && typeof name === \"string\" && !name.startsWith(\"_\")){\r\n\t\t\t\t\tconsole.error(\"The \" + type + \" component does not have a \" + name + \" function, have you checked that you have the correct Tabulator module installed?\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import CoreFeature from '../CoreFeature.js';\r\n\r\nexport default class DataLoader extends CoreFeature{\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.loaderElement = this.createLoaderElement(); //loader message div\r\n\t\tthis.msgElement = this.createMsgElement(); //message element\r\n\t\tthis.loadingElement = null;\r\n\t\tthis.errorElement = null;\r\n\r\n\t\tthis.requestOrder = 0; //prevent requests comming out of sequence if overridden by another load request\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tvar template;\r\n\r\n\t\tthis.loaderElement.appendChild(this.msgElement);\r\n\r\n\t\tif(this.table.options.dataLoaderLoading){\r\n\t\t\tif(typeof this.table.options.dataLoaderLoading == \"string\"){\r\n\t\t\t\ttemplate = document.createElement('template');\r\n\t\t\t\ttemplate.innerHTML = this.table.options.dataLoaderLoading.trim();\r\n\t\t\t\tthis.loadingElement = template.firstElementChild;\r\n\t\t\t}else{\r\n\t\t\t\tthis.loadingElement = this.table.options.dataLoaderLoading;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.table.options.dataLoaderError){\r\n\t\t\tif(typeof this.table.options.dataLoaderError == \"string\"){\r\n\t\t\t\ttemplate = document.createElement('template');\r\n\t\t\t\ttemplate.innerHTML = this.table.options.dataLoaderError.trim();\r\n\t\t\t\tthis.errorElement = template.firstElementChild;\r\n\t\t\t}else{\r\n\t\t\t\tthis.errorElement = this.table.options.dataLoaderError;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcreateLoaderElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-loader\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tcreateMsgElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\r\n\t\tel.classList.add(\"tabulator-loader-msg\");\r\n\t\tel.setAttribute(\"role\", \"alert\");\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\tload(data, params, config, replace, silent){\r\n\t\tvar requestNo = ++this.requestOrder;\r\n\r\n\t\tthis.dispatchExternal(\"dataLoading\", data);\r\n\r\n\t\t//parse json data to array\r\n\t\tif (data && (data.indexOf(\"{\") == 0 || data.indexOf(\"[\") == 0)){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(this.confirm(\"data-loading\", [data, params, config, silent])){\r\n\t\t\tthis.loading = true;\r\n\r\n\t\t\tif(!silent){\r\n\t\t\t\tthis.showLoader();\r\n\t\t\t}\r\n\r\n\t\t\t//get params for request\r\n\t\t\tparams = this.chain(\"data-params\", [data, config, silent], params || {}, params || {});\r\n\r\n\t\t\tparams = this.mapParams(params, this.table.options.dataSendParams);\r\n\r\n\t\t\tvar result = this.chain(\"data-load\", [data, params, config, silent], Promise.resolve([]));\r\n\r\n\t\t\treturn result.then((response) => {\r\n\t\t\t\tif(!Array.isArray(response) && typeof response == \"object\"){\r\n\t\t\t\t\tresponse = this.mapParams(response, this.objectInvert(this.table.options.dataReceiveParams));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar rowData = this.chain(\"data-loaded\", response, null, response);\r\n\r\n\t\t\t\tif(requestNo == this.requestOrder){\r\n\t\t\t\t\tthis.hideLoader();\r\n\r\n\t\t\t\t\tif(rowData !== false){\r\n\t\t\t\t\t\tthis.dispatchExternal(\"dataLoaded\", rowData);\r\n\t\t\t\t\t\tthis.table.rowManager.setData(rowData,  replace, !replace);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Data Load Response Blocked - An active data load request was blocked by an attempt to change table data while the request was being made\");\r\n\t\t\t\t}\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tconsole.error(\"Data Load Error: \", error);\r\n\t\t\t\tthis.dispatchExternal(\"dataLoadError\", error);\r\n\r\n\t\t\t\tif(!silent){\r\n\t\t\t\t\tthis.showError();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.hideLoader();\r\n\t\t\t\t}, 3000);\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tthis.dispatchExternal(\"dataLoaded\", data);\r\n\r\n\t\t\tif(!data){\r\n\t\t\t\tdata = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.rowManager.setData(data, replace, !replace);\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n\r\n\tmapParams(params, map){\r\n\t\tvar output = {};\r\n\r\n\t\tfor(let key in params){\r\n\t\t\toutput[map.hasOwnProperty(key) ? map[key] : key] = params[key];\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tobjectInvert(obj){\r\n\t\tvar output = {};\r\n\r\n\t\tfor(let key in obj){\r\n\t\t\toutput[obj[key]] = key;\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tblockActiveLoad(){\r\n\t\tthis.requestOrder++;\r\n\t}\r\n\r\n\tshowLoader(){\r\n\t\tvar shouldLoad = typeof this.table.options.dataLoader === \"function\" ? this.table.options.dataLoader() : this.table.options.dataLoader;\r\n\r\n\t\tif(shouldLoad){\r\n\t\t\tthis.hideLoader();\r\n\r\n\t\t\twhile(this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\r\n\r\n\t\t\tthis.msgElement.classList.remove(\"tabulator-error\");\r\n\t\t\tthis.msgElement.classList.add(\"tabulator-loading\");\r\n\r\n\t\t\tif(this.loadingElement){\r\n\t\t\t\tthis.msgElement.appendChild(this.loadingElement);\r\n\t\t\t}else{\r\n\t\t\t\tthis.msgElement.innerHTML = this.langText(\"data|loading\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.table.element.appendChild(this.loaderElement);\r\n\t\t}\r\n\t}\r\n\r\n\tshowError(){\r\n\t\tthis.hideLoader();\r\n\r\n\t\twhile(this.msgElement.firstChild) this.msgElement.removeChild(this.msgElement.firstChild);\r\n\t\tthis.msgElement.classList.remove(\"tabulator-loading\");\r\n\t\tthis.msgElement.classList.add(\"tabulator-error\");\r\n\r\n\t\tif(this.errorElement){\r\n\t\t\tthis.msgElement.appendChild(this.errorElement);\r\n\t\t}else{\r\n\t\t\tthis.msgElement.innerHTML = this.langText(\"data|error\");\r\n\t\t}\r\n\r\n\t\tthis.table.element.appendChild(this.loaderElement);\r\n\t}\r\n\r\n\r\n\thideLoader(){\r\n\t\tif(this.loaderElement.parentNode){\r\n\t\t\tthis.loaderElement.parentNode.removeChild(this.loaderElement);\r\n\t\t}\r\n\t}\r\n}","export default class ExternalEventBus {\r\n\r\n\tconstructor(table, optionsList, debug){\r\n\t\tthis.table = table;\r\n\t\tthis.events = {};\r\n\t\tthis.optionsList = optionsList || {};\r\n\t\tthis.subscriptionNotifiers = {};\r\n\r\n\t\tthis.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\r\n\t\tthis.debug = debug;\r\n\t}\r\n\r\n\tsubscriptionChange(key, callback){\r\n\t\tif(!this.subscriptionNotifiers[key]){\r\n\t\t\tthis.subscriptionNotifiers[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.subscriptionNotifiers[key].push(callback);\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis._notifiySubscriptionChange(key, true);\r\n\t\t}\r\n\t}\r\n\r\n\tsubscribe(key, callback){\r\n\t\tif(!this.events[key]){\r\n\t\t\tthis.events[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.events[key].push(callback);\r\n\r\n\t\tthis._notifiySubscriptionChange(key, true);\r\n\t}\r\n\r\n\tunsubscribe(key, callback){\r\n\t\tvar index;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tif(callback){\r\n\t\t\t\tindex = this.events[key].findIndex((item) => {\r\n\t\t\t\t\treturn item === callback;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tthis.events[key].splice(index, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Cannot remove event, no matching event found:\", key, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tdelete this.events[key];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cannot remove event, no events set on:\", key);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._notifiySubscriptionChange(key, false);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.events[key] && this.events[key].length;\r\n\t}\r\n\r\n\t_notifiySubscriptionChange(key, subscribed){\r\n\t\tvar notifiers = this.subscriptionNotifiers[key];\r\n\r\n\t\tif(notifiers){\r\n\t\t\tnotifiers.forEach((callback)=>{\r\n\t\t\t\tcallback(subscribed);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_dispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift(),\r\n\t\tresult;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tthis.events[key].forEach((callback, i) => {\r\n\t\t\t\tlet callResult = callback.apply(this.table, args);\r\n\r\n\t\t\t\tif(!i){\r\n\t\t\t\t\tresult = callResult;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t_debugDispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"ExternalEvent:\" + args[0];\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._dispatch(...arguments)\r\n\t}\r\n}","export default class InternalEventBus {\r\n\r\n\tconstructor(debug){\r\n\t\tthis.events = {};\r\n\t\tthis.subscriptionNotifiers = {};\r\n\r\n\t\tthis.dispatch = debug ? this._debugDispatch.bind(this) : this._dispatch.bind(this);\r\n\t\tthis.chain = debug ? this._debugChain.bind(this) : this._chain.bind(this);\r\n\t\tthis.confirm = debug ? this._debugConfirm.bind(this) : this._confirm.bind(this);\r\n\t\tthis.debug = debug;\r\n\t}\r\n\r\n\tsubscriptionChange(key, callback){\r\n\t\tif(!this.subscriptionNotifiers[key]){\r\n\t\t\tthis.subscriptionNotifiers[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.subscriptionNotifiers[key].push(callback);\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis._notifiySubscriptionChange(key, true);\r\n\t\t}\r\n\t}\r\n\r\n\tsubscribe(key, callback, priority = 10000){\r\n\t\tif(!this.events[key]){\r\n\t\t\tthis.events[key] = [];\r\n\t\t}\r\n\r\n\t\tthis.events[key].push({callback, priority});\r\n\r\n\t\tthis.events[key].sort((a, b) => {\r\n\t\t\treturn a.priority - b.priority;\r\n\t\t});\r\n\r\n\t\tthis._notifiySubscriptionChange(key, true);\r\n\t}\r\n\r\n\tunsubscribe(key, callback){\r\n\t\tvar index;\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tif(callback){\r\n\t\t\t\tindex = this.events[key].findIndex((item) => {\r\n\t\t\t\t\treturn item.callback === callback;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tthis.events[key].splice(index, 1);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Cannot remove event, no matching event found:\", key, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Cannot remove event, no events set on:\", key);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._notifiySubscriptionChange(key, false);\r\n\t}\r\n\r\n\tsubscribed(key){\r\n\t\treturn this.events[key] && this.events[key].length;\r\n\t}\r\n\r\n\t_chain(key, args, initialValue, fallback){\r\n\t\tvar value = initialValue;\r\n\r\n\t\tif(!Array.isArray(args)){\r\n\t\t\targs = [args];\r\n\t\t}\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis.events[key].forEach((subscriber, i) => {\r\n\t\t\t\tvalue = subscriber.callback.apply(this, args.concat([value]));\r\n\t\t\t});\r\n\r\n\t\t\treturn value;\r\n\t\t}else{\r\n\t\t\treturn typeof fallback === \"function\" ? fallback() : fallback;\r\n\t\t}\r\n\t}\r\n\r\n\t_confirm(key, args){\r\n\t\tvar confirmed = false;\r\n\r\n\t\tif(!Array.isArray(args)){\r\n\t\t\targs = [args];\r\n\t\t}\r\n\r\n\t\tif(this.subscribed(key)){\r\n\t\t\tthis.events[key].forEach((subscriber, i) => {\r\n\t\t\t\tif(subscriber.callback.apply(this, args)){\r\n\t\t\t\t\tconfirmed = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn confirmed;\r\n\t}\r\n\r\n\t_notifiySubscriptionChange(key, subscribed){\r\n\t\tvar notifiers = this.subscriptionNotifiers[key];\r\n\r\n\t\tif(notifiers){\r\n\t\t\tnotifiers.forEach((callback)=>{\r\n\t\t\t\tcallback(subscribed);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_dispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift();\r\n\r\n\t\tif(this.events[key]){\r\n\t\t\tthis.events[key].forEach((subscriber) => {\r\n\t\t\t\tlet callResult = subscriber.callback.apply(this, args);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_debugDispatch(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._dispatch(...arguments);\r\n\t}\r\n\r\n\t_debugChain(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._chain(...arguments);\r\n\t}\r\n\r\n\t_debugConfirm(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args[0];\r\n\r\n\t\targs[0] = \"InternalEvent:\" + key;\r\n\r\n\t\tif(this.debug === true || this.debug.includes(key)){\r\n\t\t\tconsole.log(...args);\r\n\t\t}\r\n\r\n\t\treturn this._confirm(...arguments);\r\n\t}\r\n}","import Tabulator from '../Tabulator.js';\r\n\r\nclass TableRegistry {\r\n\r\n\tstatic register(table){\r\n\t\tTableRegistry.tables.push(table);\r\n\t}\r\n\r\n\tstatic deregister(table){\r\n\t\tvar index = TableRegistry.tables.indexOf(table);\r\n\r\n\t\tif(index > -1){\r\n\t\t\tTableRegistry.tables.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic lookupTable(query, silent){\r\n\t\tvar results = [],\r\n\t\tmatches, match;\r\n\r\n\t\tif(typeof query === \"string\"){\r\n\t\t\tmatches = document.querySelectorAll(query);\r\n\r\n\t\t\tif(matches.length){\r\n\t\t\t\tfor(var i = 0; i < matches.length; i++){\r\n\t\t\t\t\tmatch = TableRegistry.matchElement(matches[i]);\r\n\r\n\t\t\t\t\tif(match){\r\n\t\t\t\t\t\tresults.push(match);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}else if((typeof HTMLElement !== \"undefined\" && query instanceof HTMLElement) || query instanceof Tabulator){\r\n\t\t\tmatch = TableRegistry.matchElement(query);\r\n\r\n\t\t\tif(match){\r\n\t\t\t\tresults.push(match);\r\n\t\t\t}\r\n\t\t}else if(Array.isArray(query)){\r\n\t\t\tquery.forEach(function(item){\r\n\t\t\t\tresults = results.concat(TableRegistry.lookupTable(item));\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(!silent){\r\n\t\t\t\tconsole.warn(\"Table Connection Error - Invalid Selector\", query);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\tstatic matchElement(element){\r\n\t\treturn TableRegistry.tables.find(function(table){\r\n\t\t\treturn element instanceof Tabulator ? table === element : table.element === element;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nTableRegistry.tables = [];\r\n\r\nexport default TableRegistry;","//resize columns to fit data they contain\r\nexport default function(columns){\r\n\tthis.table.columnManager.renderer.reinitializeColumnWidths(columns);\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n};","//resize columns to fit data they contain and stretch row to fill table, also used for fitDataTable\r\nexport default function(columns){\r\n\tcolumns.forEach(function(column){\r\n\t\tcolumn.reinitializeWidth();\r\n\t});\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n};","//resize columns to fit data the contain and stretch last column to fill table\r\nexport default function(columns){\r\n\tvar colsWidth = 0,\r\n\ttableWidth = this.table.rowManager.element.clientWidth,\r\n\tgap = 0,\r\n\tlastCol = false;\r\n\r\n\tcolumns.forEach((column, i) => {\r\n\t\tif(!column.widthFixed){\r\n\t\t\tcolumn.reinitializeWidth();\r\n\t\t}\r\n\r\n\t\tif(this.table.options.responsiveLayout ? column.modules.responsive.visible : column.visible){\r\n\t\t\tlastCol = column;\r\n\t\t}\r\n\r\n\t\tif(column.visible){\r\n\t\t\tcolsWidth += column.getWidth();\r\n\t\t}\r\n\t});\r\n\r\n\tif(lastCol){\r\n\t\tgap = tableWidth - colsWidth + lastCol.getWidth();\r\n\r\n\t\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\t\tlastCol.setWidth(0);\r\n\t\t\tthis.table.modules.responsiveLayout.update();\r\n\t\t}\r\n\r\n\t\tif(gap > 0){\r\n\t\t\tlastCol.setWidth(gap);\r\n\t\t}else{\r\n\t\t\tlastCol.reinitializeWidth();\r\n\t\t}\r\n\t}else{\r\n\t\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\t\tthis.table.modules.responsiveLayout.update();\r\n\t\t}\r\n\t}\r\n};","//resize columns to fit\r\nexport default function(columns){\r\n\tvar totalWidth = this.table.element.clientWidth; //table element width\r\n\tvar fixedWidth = 0; //total width of columns with a defined width\r\n\tvar flexWidth = 0; //total width available to flexible columns\r\n\tvar flexGrowUnits = 0; //total number of widthGrow blocks accross all columns\r\n\tvar flexColWidth = 0; //desired width of flexible columns\r\n\tvar flexColumns = []; //array of flexible width columns\r\n\tvar fixedShrinkColumns = []; //array of fixed width columns that can shrink\r\n\tvar flexShrinkUnits = 0; //total number of widthShrink blocks accross all columns\r\n\tvar overflowWidth = 0; //horizontal overflow width\r\n\tvar gapFill=0; //number of pixels to be added to final column to close and half pixel gaps\r\n\r\n\tfunction calcWidth(width){\r\n\t\tvar colWidth;\r\n\r\n\t\tif(typeof(width) == \"string\"){\r\n\t\t\tif(width.indexOf(\"%\") > -1){\r\n\t\t\t\tcolWidth = (totalWidth / 100) * parseInt(width);\r\n\t\t\t}else{\r\n\t\t\t\tcolWidth = parseInt(width);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tcolWidth = width;\r\n\t\t}\r\n\r\n\t\treturn colWidth;\r\n\t}\r\n\r\n\t//ensure columns resize to take up the correct amount of space\r\n\tfunction scaleColumns(columns, freeSpace, colWidth, shrinkCols){\r\n\r\n\t\tvar oversizeCols = [],\r\n\t\toversizeSpace = 0,\r\n\t\tremainingSpace = 0,\r\n\t\tnextColWidth = 0,\r\n\t\tremainingFlexGrowUnits = flexGrowUnits,\r\n\t\tgap = 0,\r\n\t\tchangeUnits = 0,\r\n\t\tundersizeCols = [];\r\n\r\n\t\tfunction calcGrow(col){\r\n\t\t\treturn (colWidth * (col.column.definition.widthGrow || 1));\r\n\t\t}\r\n\r\n\t\tfunction calcShrink(col){\r\n\t\t\treturn  (calcWidth(col.width) - (colWidth * (col.column.definition.widthShrink || 0)))\r\n\t\t}\r\n\r\n\t\tcolumns.forEach(function(col, i){\r\n\t\t\tvar width = shrinkCols ? calcShrink(col) : calcGrow(col);\r\n\t\t\tif(col.column.minWidth >= width){\r\n\t\t\t\toversizeCols.push(col);\r\n\t\t\t}else{\r\n\t\t\t\tif(col.column.maxWidth && col.column.maxWidth < width){\r\n\t\t\t\t\tcol.width = col.column.maxWidth;\r\n\t\t\t\t\tfreeSpace -= col.column.maxWidth;\r\n\r\n\t\t\t\t\tremainingFlexGrowUnits -= shrinkCols ? (col.column.definition.widthShrink || 1) : (col.column.definition.widthGrow || 1);\r\n\r\n\t\t\t\t\tif(remainingFlexGrowUnits){\r\n\t\t\t\t\t\tcolWidth = Math.floor(freeSpace/remainingFlexGrowUnits);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tundersizeCols.push(col);\r\n\t\t\t\t\tchangeUnits += shrinkCols ? (col.column.definition.widthShrink || 1) : (col.column.definition.widthGrow || 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(oversizeCols.length){\r\n\t\t\toversizeCols.forEach(function(col){\r\n\t\t\t\toversizeSpace += shrinkCols ?  col.width - col.column.minWidth : col.column.minWidth;\r\n\t\t\t\tcol.width = col.column.minWidth;\r\n\t\t\t});\r\n\r\n\t\t\tremainingSpace = freeSpace - oversizeSpace;\r\n\r\n\t\t\tnextColWidth = changeUnits ? Math.floor(remainingSpace/changeUnits) : remainingSpace;\r\n\r\n\t\t\tgap = remainingSpace - (nextColWidth * changeUnits);\r\n\r\n\t\t\tgap += scaleColumns(undersizeCols, remainingSpace, nextColWidth, shrinkCols);\r\n\t\t}else{\r\n\t\t\tgap = changeUnits ? freeSpace - (Math.floor(freeSpace/changeUnits) * changeUnits) : freeSpace;\r\n\r\n\t\t\tundersizeCols.forEach(function(column){\r\n\t\t\t\tcolumn.width = shrinkCols ? calcShrink(column) : calcGrow(column);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn gap;\r\n\t}\r\n\r\n\tif(this.table.options.responsiveLayout && this.table.modExists(\"responsiveLayout\", true)){\r\n\t\tthis.table.modules.responsiveLayout.update();\r\n\t}\r\n\r\n\t//adjust for vertical scrollbar if present\r\n\tif(this.table.rowManager.element.scrollHeight > this.table.rowManager.element.clientHeight){\r\n\t\ttotalWidth -= this.table.rowManager.element.offsetWidth - this.table.rowManager.element.clientWidth;\r\n\t}\r\n\r\n\tcolumns.forEach(function(column){\r\n\t\tvar width, minWidth, colWidth;\r\n\r\n\t\tif(column.visible){\r\n\r\n\t\t\twidth = column.definition.width;\r\n\t\t\tminWidth =  parseInt(column.minWidth);\r\n\r\n\t\t\tif(width){\r\n\r\n\t\t\t\tcolWidth = calcWidth(width);\r\n\r\n\t\t\t\tfixedWidth += colWidth > minWidth ? colWidth : minWidth;\r\n\r\n\t\t\t\tif(column.definition.widthShrink){\r\n\t\t\t\t\tfixedShrinkColumns.push({\r\n\t\t\t\t\t\tcolumn:column,\r\n\t\t\t\t\t\twidth:colWidth > minWidth ? colWidth : minWidth\r\n\t\t\t\t\t});\r\n\t\t\t\t\tflexShrinkUnits += column.definition.widthShrink;\r\n\t\t\t\t}\r\n\r\n\t\t\t}else{\r\n\t\t\t\tflexColumns.push({\r\n\t\t\t\t\tcolumn:column,\r\n\t\t\t\t\twidth:0,\r\n\t\t\t\t});\r\n\t\t\t\tflexGrowUnits += column.definition.widthGrow || 1;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t//calculate available space\r\n\tflexWidth = totalWidth - fixedWidth;\r\n\r\n\t//calculate correct column size\r\n\tflexColWidth = Math.floor(flexWidth / flexGrowUnits)\r\n\r\n\t//generate column widths\r\n\tvar gapFill = scaleColumns(flexColumns, flexWidth, flexColWidth, false);\r\n\r\n\t//increase width of last column to account for rounding errors\r\n\tif(flexColumns.length && gapFill > 0){\r\n\t\tflexColumns[flexColumns.length-1].width += + gapFill;\r\n\t}\r\n\r\n\t//caculate space for columns to be shrunk into\r\n\tflexColumns.forEach(function(col){\r\n\t\tflexWidth -= col.width;\r\n\t});\r\n\r\n\toverflowWidth = Math.abs(gapFill) + flexWidth;\r\n\r\n\t//shrink oversize columns if there is no available space\r\n\tif(overflowWidth > 0 && flexShrinkUnits){\r\n\t\tgapFill = scaleColumns(fixedShrinkColumns, overflowWidth, Math.floor(overflowWidth / flexShrinkUnits), true);\r\n\t}\r\n\r\n\t//decrease width of last column to account for rounding errors\r\n\tif(fixedShrinkColumns.length){\r\n\t\tfixedShrinkColumns[fixedShrinkColumns.length-1].width -= gapFill;\r\n\t}\r\n\r\n\tflexColumns.forEach(function(col){\r\n\t\tcol.column.setWidth(col.width);\r\n\t});\r\n\r\n\tfixedShrinkColumns.forEach(function(col){\r\n\t\tcol.column.setWidth(col.width);\r\n\t});\r\n};","import fitData from './modes/fitData.js';\r\nimport fitDataGeneral from './modes/fitDataGeneral.js';\r\nimport fitDataStretch from './modes/fitDataStretch.js';\r\nimport fitColumns from './modes/fitColumns.js';\r\n\r\nexport default {\r\n\tfitData:fitData,\r\n\tfitDataFill:fitDataGeneral,\r\n\tfitDataTable:fitDataGeneral,\r\n\tfitDataStretch:fitDataStretch,\r\n\tfitColumns:fitColumns ,\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport defaultModes from './defaults/modes.js';\r\n\r\nclass Layout extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table, \"layout\");\r\n\r\n\t\tthis.mode = null;\r\n\r\n\t\tthis.registerTableOption(\"layout\", \"fitData\"); //layout type\r\n\t\tthis.registerTableOption(\"layoutColumnsOnNewData\", false); //update column widths on setData\r\n\r\n\t\tthis.registerColumnOption(\"widthGrow\");\r\n\t\tthis.registerColumnOption(\"widthShrink\");\r\n\t}\r\n\r\n\t//initialize layout system\r\n\tinitialize(){\r\n\t\tvar layout = this.table.options.layout;\r\n\r\n\t\tif(Layout.modes[layout]){\r\n\t\t\tthis.mode = layout;\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Layout Error - invalid mode set, defaulting to 'fitData' : \" + layout);\r\n\t\t\tthis.mode = 'fitData';\r\n\t\t}\r\n\r\n\t\tthis.table.element.setAttribute(\"tabulator-layout\", this.mode);\r\n\t}\r\n\r\n\tgetMode(){\r\n\t\treturn this.mode;\r\n\t}\r\n\r\n\t//trigger table layout\r\n\tlayout(){\r\n\t\tLayout.modes[this.mode].call(this, this.table.columnManager.columnsByIndex);\r\n\r\n\t\tthis.dispatch(\"layout-refreshed\")\r\n\t}\r\n}\r\n\r\nLayout.moduleName = \"layout\";\r\n\r\n//load defaults\r\nLayout.modes = defaultModes;\r\n\r\nexport default Layout;","export default {\r\n\t\"default\":{ //hold default locale text\r\n\t\t\"groups\":{\r\n\t\t\t\"item\":\"item\",\r\n\t\t\t\"items\":\"items\",\r\n\t\t},\r\n\t\t\"columns\":{\r\n\t\t},\r\n\t\t\"data\":{\r\n\t\t\t\"loading\":\"Loading\",\r\n\t\t\t\"error\":\"Error\",\r\n\t\t},\r\n\t\t\"pagination\":{\r\n\t\t\t\"page_size\":\"Page Size\",\r\n\t\t\t\"page_title\":\"Show Page\",\r\n\t\t\t\"first\":\"First\",\r\n\t\t\t\"first_title\":\"First Page\",\r\n\t\t\t\"last\":\"Last\",\r\n\t\t\t\"last_title\":\"Last Page\",\r\n\t\t\t\"prev\":\"Prev\",\r\n\t\t\t\"prev_title\":\"Prev Page\",\r\n\t\t\t\"next\":\"Next\",\r\n\t\t\t\"next_title\":\"Next Page\",\r\n\t\t\t\"all\":\"All\",\r\n\t\t},\r\n\t\t\"headerFilters\":{\r\n\t\t\t\"default\":\"filter column...\",\r\n\t\t\t\"columns\":{}\r\n\t\t}\r\n\t},\r\n};","import Module from '../../core/Module.js';\r\n\r\nimport Helpers from '../../core/tools/Helpers.js';\r\n\r\nimport defaultLangs from './defaults/langs.js';\r\n\r\nclass Localize extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\r\n\t\tthis.locale = \"default\"; //current locale\r\n\t\tthis.lang = false; //current language\r\n\t\tthis.bindings = {}; //update events to call when locale is changed\r\n\t\tthis.langList = {};\r\n\r\n\t\tthis.registerTableOption(\"locale\", false); //current system language\r\n\t\tthis.registerTableOption(\"langs\", {});\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.langList = Helpers.deepClone(Localize.langs);\r\n\r\n\t\tif(this.table.options.columnDefaults.headerFilterPlaceholder !== false){\r\n\t\t\tthis.setHeaderFilterPlaceholder(this.table.options.columnDefaults.headerFilterPlaceholder);\r\n\t\t}\r\n\r\n\t\tfor(let locale in this.table.options.langs){\r\n\t\t\tthis.installLang(locale, this.table.options.langs[locale]);\r\n\t\t}\r\n\r\n\t\tthis.setLocale(this.table.options.locale);\r\n\r\n\t\tthis.registerTableFunction(\"setLocale\", this.setLocale.bind(this));\r\n\t\tthis.registerTableFunction(\"getLocale\", this.getLocale.bind(this));\r\n\t\tthis.registerTableFunction(\"getLang\", this.getLang.bind(this));\r\n\t}\r\n\r\n\t//set header placehoder\r\n\tsetHeaderFilterPlaceholder(placeholder){\r\n\t\tthis.langList.default.headerFilters.default = placeholder;\r\n\t}\r\n\r\n\t//set header filter placeholder by column\r\n\tsetHeaderFilterColumnPlaceholder(column, placeholder){\r\n\t\tthis.langList.default.headerFilters.columns[column] = placeholder;\r\n\r\n\t\tif(this.lang && !this.lang.headerFilters.columns[column]){\r\n\t\t\tthis.lang.headerFilters.columns[column] = placeholder;\r\n\t\t}\r\n\t}\r\n\r\n\t//setup a lang description object\r\n\tinstallLang(locale, lang){\r\n\t\tif(this.langList[locale]){\r\n\t\t\tthis._setLangProp(this.langList[locale], lang);\r\n\t\t}else{\r\n\t\t\tthis.langList[locale] = lang;\r\n\t\t}\r\n\t}\r\n\r\n\t_setLangProp(lang, values){\r\n\t\tfor(let key in values){\r\n\t\t\tif(lang[key] && typeof lang[key] == \"object\"){\r\n\t\t\t\tthis._setLangProp(lang[key], values[key])\r\n\t\t\t}else{\r\n\t\t\t\tlang[key] = values[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//set current locale\r\n\tsetLocale(desiredLocale){\r\n\t\tdesiredLocale = desiredLocale || \"default\";\r\n\r\n\t\t//fill in any matching languge values\r\n\t\tfunction traverseLang(trans, path){\r\n\t\t\tfor(var prop in trans){\r\n\t\t\t\tif(typeof trans[prop] == \"object\"){\r\n\t\t\t\t\tif(!path[prop]){\r\n\t\t\t\t\t\tpath[prop] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttraverseLang(trans[prop], path[prop]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpath[prop] = trans[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//determing correct locale to load\r\n\t\tif(desiredLocale === true && navigator.language){\r\n\t\t\t//get local from system\r\n\t\t\tdesiredLocale = navigator.language.toLowerCase();\r\n\t\t}\r\n\r\n\t\tif(desiredLocale){\r\n\t\t\t//if locale is not set, check for matching top level locale else use default\r\n\t\t\tif(!this.langList[desiredLocale]){\r\n\t\t\t\tlet prefix = desiredLocale.split(\"-\")[0];\r\n\r\n\t\t\t\tif(this.langList[prefix]){\r\n\t\t\t\t\tconsole.warn(\"Localization Error - Exact matching locale not found, using closest match: \", desiredLocale, prefix);\r\n\t\t\t\t\tdesiredLocale = prefix;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Localization Error - Matching locale not found, using default: \", desiredLocale);\r\n\t\t\t\t\tdesiredLocale = \"default\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.locale = desiredLocale;\r\n\r\n\t\t//load default lang template\r\n\t\tthis.lang = Helpers.deepClone(this.langList.default || {});\r\n\r\n\t\tif(desiredLocale != \"default\"){\r\n\t\t\ttraverseLang(this.langList[desiredLocale], this.lang);\r\n\t\t}\r\n\r\n\t\tthis.dispatchExternal(\"localized\", this.locale, this.lang);\r\n\r\n\t\tthis._executeBindings();\r\n\t}\r\n\r\n\t//get current locale\r\n\tgetLocale(locale){\r\n\t\treturn this.locale;\r\n\t}\r\n\r\n\t//get lang object for given local or current if none provided\r\n\tgetLang(locale){\r\n\t\treturn locale ? this.langList[locale] : this.lang;\r\n\t}\r\n\r\n\t//get text for current locale\r\n\tgetText(path, value){\r\n\t\tvar path = value ? path + \"|\" + value : path,\r\n\t\tpathArray = path.split(\"|\"),\r\n\t\ttext = this._getLangElement(pathArray, this.locale);\r\n\r\n\t\t// if(text === false){\r\n\t\t// \tconsole.warn(\"Localization Error - Matching localized text not found for given path: \", path);\r\n\t\t// }\r\n\r\n\t\treturn text || \"\";\r\n\t}\r\n\r\n\t//traverse langs object and find localized copy\r\n\t_getLangElement(path, locale){\r\n\t\tvar root = this.lang;\r\n\r\n\t\tpath.forEach(function(level){\r\n\t\t\tvar rootPath;\r\n\r\n\t\t\tif(root){\r\n\t\t\t\trootPath = root[level];\r\n\r\n\t\t\t\tif(typeof rootPath != \"undefined\"){\r\n\t\t\t\t\troot = rootPath;\r\n\t\t\t\t}else{\r\n\t\t\t\t\troot = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn root;\r\n\t}\r\n\r\n\t//set update binding\r\n\tbind(path, callback){\r\n\t\tif(!this.bindings[path]){\r\n\t\t\tthis.bindings[path] = [];\r\n\t\t}\r\n\r\n\t\tthis.bindings[path].push(callback);\r\n\r\n\t\tcallback(this.getText(path), this.lang);\r\n\t}\r\n\r\n\t//itterate through bindings and trigger updates\r\n\t_executeBindings(){\r\n\t\tfor(let path in this.bindings){\r\n\t\t\tthis.bindings[path].forEach((binding) => {\r\n\t\t\t\tbinding(this.getText(path), this.lang);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nLocalize.moduleName = \"localize\";\r\n\r\n//load defaults\r\nLocalize.langs = defaultLangs;\r\n\r\nexport default Localize;","import Module from '../../core/Module.js';\r\nimport TableRegistry from '../../core/tools/TableRegistry.js';\r\n\r\nclass Comms extends Module{\r\n\r\n\tconstructor(table){\r\n\t\tsuper(table);\r\n\t}\r\n\r\n\tinitialize(){\r\n\t\tthis.registerTableFunction(\"tableComms\", this.receive.bind(this));\r\n\t}\r\n\r\n\tgetConnections(selectors){\r\n\t\tvar connections = [],\r\n\t\tconnection;\r\n\r\n\t\tconnection = TableRegistry.lookupTable(selectors);\r\n\r\n\t\tconnection.forEach((con) =>{\r\n\t\t\tif(this.table !== con){\r\n\t\t\t\tconnections.push(con);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn connections;\r\n\t}\r\n\r\n\tsend(selectors, module, action, data){\r\n\t\tvar connections = this.getConnections(selectors);\r\n\r\n\t\tconnections.forEach((connection) => {\r\n\t\t\tconnection.tableComms(this.table.element, module, action, data);\r\n\t\t});\r\n\r\n\t\tif(!connections.length && selectors){\r\n\t\t\tconsole.warn(\"Table Connection Error - No tables matching selector found\", selectors);\r\n\t\t}\r\n\t}\r\n\r\n\treceive(table, module, action, data){\r\n\t\tif(this.table.modExists(module)){\r\n\t\t\treturn this.table.modules[module].commsReceived(table, action, data);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Inter-table Comms Error - no such module:\", module);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nComms.moduleName = \"comms\";\r\n\r\nexport default Comms;","import * as coreModules from '../modules/core.js';\r\nimport TableRegistry from './TableRegistry.js';\r\n\r\nexport default class ModuleBinder {\r\n\r\n\tconstructor(tabulator, modules){\r\n\t\tthis.bindStaticFuctionality(tabulator);\r\n\t\tthis.bindModules(tabulator, coreModules, true);\r\n\r\n\t\tif(modules){\r\n\t\t\tthis.bindModules(tabulator, modules);\r\n\t\t}\r\n\t}\r\n\r\n\tbindStaticFuctionality(tabulator){\r\n\t\ttabulator.moduleBindings = {};\r\n\r\n\t\ttabulator.extendModule = function(name, property, values){\r\n\t\t\tif(tabulator.moduleBindings[name]){\r\n\t\t\t\tvar source = tabulator.moduleBindings[name][property];\r\n\r\n\t\t\t\tif(source){\r\n\t\t\t\t\tif(typeof values == \"object\"){\r\n\t\t\t\t\t\tfor(let key in values){\r\n\t\t\t\t\t\t\tsource[key] = values[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.warn(\"Module Error - Invalid value type, it must be an object\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Module Error - property does not exist:\", property);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Module Error - module does not exist:\", name);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\ttabulator.registerModule = function(modules){\r\n\t\t\tif(!Array.isArray(modules)){\r\n\t\t\t\tmodules = [modules];\r\n\t\t\t}\r\n\r\n\t\t\tmodules.forEach((mod) => {\r\n\t\t\t\ttabulator.registerModuleBinding(mod)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttabulator.registerModuleBinding = function(mod){\r\n\t\t\ttabulator.moduleBindings[mod.moduleName] = mod;\r\n\t\t};\r\n\r\n\t\ttabulator.findTable = function(query){\r\n\t\t\tvar results = TableRegistry.lookupTable(query, true);\r\n\t\t\treturn Array.isArray(results) && !results.length ? false : results;\r\n\t\t}\r\n\r\n\t\t//ensure that module are bound to instantiated function\r\n\t\ttabulator.prototype.bindModules = function(){\r\n\t\t\tthis.modules = {};\r\n\r\n\t\t\tfor(var name in tabulator.moduleBindings){\r\n\t\t\t\tlet mod = tabulator.moduleBindings[name];\r\n\r\n\t\t\t\tthis.modules[name] = new mod(this);\r\n\r\n\t\t\t\tif(mod.prototype.moduleCore){\r\n\t\t\t\t\tthis.modulesCore[name] = this.modules[name];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.modulesRegular[name] = this.modules[name];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbindModules(tabulator, modules, core){\r\n\t\tvar mods = Object.values(modules);\r\n\r\n\t\tif(core){\r\n\t\t\tmods.forEach((mod) => {\r\n\t\t\t\tmod.prototype.moduleCore = true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttabulator.registerModule(mods);\r\n\t}\r\n}","'use strict';\r\n\r\nimport defaultOptions from './defaults/options.js';\r\n\r\nimport ColumnManager from './ColumnManager.js';\r\nimport RowManager from './RowManager.js';\r\nimport FooterManager from './FooterManager.js';\r\n\r\nimport InteractionMonitor from './tools/InteractionMonitor.js';\r\nimport ComponentFunctionBinder from './tools/ComponentFunctionBinder.js';\r\nimport DataLoader from './tools/DataLoader.js';\r\n\r\nimport ExternalEventBus from './tools/ExternalEventBus.js';\r\nimport InternalEventBus from './tools/InternalEventBus.js';\r\n\r\nimport TableRegistry from './tools/TableRegistry.js';\r\nimport ModuleBinder from './tools/ModuleBinder.js';\r\n\r\nimport OptionsList from './tools/OptionsList.js';\r\n\r\nclass Tabulator {\r\n\r\n\tconstructor(element, options){\r\n\r\n\t\tthis.options = {};\r\n\r\n\t\tthis.columnManager = null; // hold Column Manager\r\n\t\tthis.rowManager = null; //hold Row Manager\r\n\t\tthis.footerManager = null; //holder Footer Manager\r\n\t\tthis.vdomHoz  = null; //holder horizontal virtual dom\r\n\t\tthis.externalEvents = null; //handle external event messaging\r\n\t\tthis.eventBus = null; //handle internal event messaging\r\n\t\tthis.interactionMonitor = false; //track user interaction\r\n\t\tthis.browser = \"\"; //hold current browser type\r\n\t\tthis.browserSlow = false; //handle reduced functionality for slower browsers\r\n\t\tthis.browserMobile = false; //check if running on mobile, prevent resize cancelling edit on keyboard appearance\r\n\t\tthis.rtl = false; //check if the table is in RTL mode\r\n\t\tthis.originalElement = null; //hold original table element if it has been replaced\r\n\r\n\t\tthis.componentFunctionBinder = new ComponentFunctionBinder(this); //bind component functions\r\n\t\tthis.dataLoader = false; //bind component functions\r\n\r\n\t\tthis.modules = {}; //hold all modules bound to this table\r\n\t\tthis.modulesCore = {}; //hold core modules bound to this table (for initialization purposes)\r\n\t\tthis.modulesRegular = {}; //hold regular modules bound to this table (for initialization purposes)\r\n\r\n\t\tthis.optionsList = new OptionsList(this, \"table constructor\");\r\n\r\n\t\tthis.initialized = false;\r\n\r\n\t\tif(this.initializeElement(element)){\r\n\r\n\t\t\tthis.initialzeCoreSystems(options);\r\n\r\n\t\t\t//delay table creation to allow event bindings immediately after the constructor\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis._create();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tTableRegistry.register(this); //register table for inter-device communication\r\n\t}\r\n\r\n\tinitializeElement(element){\r\n\t\tif(typeof HTMLElement !== \"undefined\" && element instanceof HTMLElement){\r\n\t\t\tthis.element = element;\r\n\t\t\treturn true;\r\n\t\t}else if(typeof element === \"string\"){\r\n\t\t\tthis.element = document.querySelector(element);\r\n\r\n\t\t\tif(this.element){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Tabulator Creation Error - no element found matching selector: \", element);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.error(\"Tabulator Creation Error - Invalid element provided:\", element);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tinitialzeCoreSystems(options){\r\n\t\tthis.columnManager = new ColumnManager(this);\r\n\t\tthis.rowManager = new RowManager(this);\r\n\t\tthis.footerManager = new FooterManager(this);\r\n\t\tthis.dataLoader = new DataLoader(this);\r\n\r\n\t\tthis.bindModules();\r\n\r\n\t\tthis.options = this.optionsList.generate(Tabulator.defaultOptions, options)\r\n\r\n\t\tthis._clearObjectPointers();\r\n\r\n\t\tthis._mapDeprecatedFunctionality();\r\n\r\n\t\tthis.externalEvents = new ExternalEventBus(this, this.options, this.options.debugEventsExternal);\r\n\t\tthis.eventBus = new InternalEventBus(this.options.debugEventsInternal);\r\n\r\n\t\tthis.interactionMonitor = new InteractionMonitor(this);\r\n\r\n\t\tthis.dataLoader.initialize();\r\n\t\tthis.columnManager.initialize();\r\n\t\tthis.rowManager.initialize();\r\n\t\tthis.footerManager.initialize();\r\n\t}\r\n\r\n\t//convert deprecated functionality to new functions\r\n\t_mapDeprecatedFunctionality(){\r\n\t\t//all previously deprecated functionality removed in the 5.0 release\r\n\t}\r\n\r\n\t_clearSelection(){\r\n\r\n\t\tthis.element.classList.add(\"tabulator-block-select\");\r\n\r\n\t\tif (window.getSelection) {\r\n\t\t  if (window.getSelection().empty) {  // Chrome\r\n\t\t  \twindow.getSelection().empty();\r\n\t\t  } else if (window.getSelection().removeAllRanges) {  // Firefox\r\n\t\t  \twindow.getSelection().removeAllRanges();\r\n\t\t  }\r\n\t\t} else if (document.selection) {  // IE?\r\n\t\t\tdocument.selection.empty();\r\n\t\t}\r\n\r\n\t\tthis.element.classList.remove(\"tabulator-block-select\");\r\n\t}\r\n\r\n\t//create table\r\n\t_create(){\r\n\t\tthis.externalEvents.dispatch(\"tableBuilding\");\r\n\t\tthis.eventBus.dispatch(\"table-building\");\r\n\r\n\t\tthis._rtlCheck();\r\n\r\n\t\tthis._buildElement();\r\n\r\n\t\tthis._initializeTable();\r\n\r\n\t\tthis._loadInitialData();\r\n\r\n\t\tthis.initialized = true;\r\n\r\n\t\tthis.externalEvents.dispatch(\"tableBuilt\");\r\n\t}\r\n\r\n\t_rtlCheck(){\r\n\t\tvar style = window.getComputedStyle(this.element);\r\n\r\n\t\tswitch(this.options.textDirection){\r\n\t\t\tcase\"auto\":\r\n\t\t\tif(style.direction !== \"rtl\"){\r\n\t\t\t\tbreak;\r\n\t\t\t};\r\n\r\n\t\t\tcase \"rtl\":\r\n\t\t\tthis.element.classList.add(\"tabulator-rtl\");\r\n\t\t\tthis.rtl = true;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ltr\":\r\n\t\t\tthis.element.classList.add(\"tabulator-ltr\");\r\n\r\n\t\t\tdefault:\r\n\t\t\tthis.rtl = false;\r\n\t\t}\r\n\t}\r\n\r\n\t//clear pointers to objects in default config object\r\n\t_clearObjectPointers(){\r\n\t\tthis.options.columns = this.options.columns.slice(0);\r\n\r\n\t\tif(this.options.data && !this.options.reactiveData){\r\n\t\t\tthis.options.data = this.options.data.slice(0);\r\n\t\t}\r\n\t}\r\n\r\n\t//build tabulator element\r\n\t_buildElement(){\r\n\t\tvar element = this.element,\r\n\t\toptions = this.options,\r\n\t\tnewElement;\r\n\r\n\t\tif(element.tagName === \"TABLE\"){\r\n\t\t\tthis.originalElement = this.element;\r\n\t\t\tnewElement = document.createElement(\"div\");\r\n\r\n\t\t\t//transfer attributes to new element\r\n\t\t\tvar attributes = element.attributes;\r\n\r\n\t\t\t// loop through attributes and apply them on div\r\n\t\t\tfor(var i in attributes){\r\n\t\t\t\tif(typeof attributes[i] == \"object\"){\r\n\t\t\t\t\tnewElement.setAttribute(attributes[i].name, attributes[i].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// replace table with div element\r\n\t\t\telement.parentNode.replaceChild(newElement, element);\r\n\r\n\t\t\tthis.element = element = newElement;\r\n\t\t}\r\n\r\n\t\telement.classList.add(\"tabulator\");\r\n\t\telement.setAttribute(\"role\", \"grid\");\r\n\r\n\t\t//empty element\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\r\n\t\t//set table height\r\n\t\tif(options.height){\r\n\t\t\toptions.height = isNaN(options.height) ? options.height : options.height + \"px\";\r\n\t\t\telement.style.height = options.height;\r\n\t\t}\r\n\r\n\t\t//set table min height\r\n\t\tif(options.minHeight !== false){\r\n\t\t\toptions.minHeight = isNaN(options.minHeight) ? options.minHeight : options.minHeight + \"px\";\r\n\t\t\telement.style.minHeight = options.minHeight;\r\n\t\t}\r\n\r\n\t\t//set table maxHeight\r\n\t\tif(options.maxHeight !== false){\r\n\t\t\toptions.maxHeight = isNaN(options.maxHeight) ? options.maxHeight : options.maxHeight + \"px\";\r\n\t\t\telement.style.maxHeight = options.maxHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//initialize core systems and modules\r\n\t_initializeTable(){\r\n\t\tvar element = this.element,\r\n\t\toptions = this.options;\r\n\r\n\t\tthis.interactionMonitor.initialize();\r\n\r\n\t\tthis.columnManager.initialize();\r\n\t\tthis.rowManager.initialize();\r\n\r\n\t\tthis._detectBrowser();\r\n\r\n\t\t//initialize core modules\r\n\t\tfor (let key in this.modulesCore){\r\n\t\t\tlet mod = this.modulesCore[key];\r\n\r\n\t\t\tmod.initialize();\r\n\t\t}\r\n\r\n\t\t//configure placeholder element\r\n\t\tif(typeof options.placeholder == \"string\"){\r\n\t\t\tvar el = document.createElement(\"div\");\r\n\t\t\tel.classList.add(\"tabulator-placeholder\");\r\n\r\n\t\t\tvar span = document.createElement(\"span\");\r\n\t\t\tspan.innerHTML = options.placeholder;\r\n\r\n\t\t\tel.appendChild(span);\r\n\r\n\t\t\toptions.placeholder = el;\r\n\t\t}\r\n\r\n\t\t//build table elements\r\n\t\telement.appendChild(this.columnManager.getElement());\r\n\t\telement.appendChild(this.rowManager.getElement());\r\n\r\n\t\tif(options.footerElement){\r\n\t\t\tthis.footerManager.activate();\r\n\t\t}\r\n\r\n\t\tif(options.autoColumns && options.data){\r\n\r\n\t\t\tthis.columnManager.generateColumnsFromRowData(this.options.data);\r\n\t\t}\r\n\r\n\t\t//initialize regular modules\r\n\t\tfor (let key in this.modulesRegular){\r\n\t\t\tlet mod = this.modulesRegular[key];\r\n\r\n\t\t\tmod.initialize();\r\n\t\t}\r\n\r\n\t\tthis.columnManager.setColumns(options.columns);\r\n\r\n\t\tthis.eventBus.dispatch(\"table-built\");\r\n\t}\r\n\r\n\t_loadInitialData(){\r\n\t\tthis.dataLoader.load(this.options.data);\r\n\t}\r\n\r\n\t//deconstructor\r\n\tdestroy(){\r\n\t\tvar element = this.element;\r\n\r\n\t\tTableRegistry.deregister(this); //deregister table from inter-device communication\r\n\r\n\t\tthis.eventBus.dispatch(\"table-destroy\");\r\n\r\n\t\t//clear row data\r\n\t\tthis.rowManager.rows.forEach(function(row){\r\n\t\t\trow.wipe();\r\n\t\t});\r\n\r\n\t\tthis.rowManager.rows = [];\r\n\t\tthis.rowManager.activeRows = [];\r\n\t\tthis.rowManager.displayRows = [];\r\n\r\n\t\t//clear DOM\r\n\t\twhile(element.firstChild) element.removeChild(element.firstChild);\r\n\t\telement.classList.remove(\"tabulator\");\r\n\t}\r\n\r\n\t_detectBrowser(){\r\n\t\tvar ua = navigator.userAgent||navigator.vendor||window.opera;\r\n\r\n\t\tif(ua.indexOf(\"Trident\") > -1){\r\n\t\t\tthis.browser = \"ie\";\r\n\t\t\tthis.browserSlow = true;\r\n\t\t}else if(ua.indexOf(\"Edge\") > -1){\r\n\t\t\tthis.browser = \"edge\";\r\n\t\t\tthis.browserSlow = true;\r\n\t\t}else if(ua.indexOf(\"Firefox\") > -1){\r\n\t\t\tthis.browser = \"firefox\";\r\n\t\t\tthis.browserSlow = false;\r\n\t\t}else{\r\n\t\t\tthis.browser = \"other\";\r\n\t\t\tthis.browserSlow = false;\r\n\t\t}\r\n\r\n\t\tthis.browserMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(ua)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(ua.substr(0,4));\r\n\t}\r\n\r\n\t////////////////// Data Handling //////////////////\r\n\t//block table redrawing\r\n\tblockRedraw(){\r\n\t\treturn this.rowManager.blockRedraw();\r\n\t}\r\n\r\n\t//restore table redrawing\r\n\trestoreRedraw(){\r\n\t\treturn this.rowManager.restoreRedraw();\r\n\t}\r\n\r\n\t//local data from local file\r\n\tsetDataFromLocalFile(extensions){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\tinput.type = \"file\";\r\n\t\t\tinput.accept = extensions || \".json,application/json\";\r\n\r\n\t\t\tinput.addEventListener(\"change\", (e) => {\r\n\t\t\t\tvar file = input.files[0],\r\n\t\t\t\treader = new FileReader(),\r\n\t\t\t\tdata;\r\n\r\n\t\t\t\treader.readAsText(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tdata = JSON.parse(reader.result);\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.warn(\"File Load Error - File contents is invalid JSON\", e);\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setData(data)\r\n\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tresolve(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\treader.onerror = (e) => {\r\n\t\t\t\t\tconsole.warn(\"File Load Error - Unable to read file\");\r\n\t\t\t\t\treject();\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tinput.click();\r\n\t\t});\r\n\t}\r\n\r\n\t//load data\r\n\tsetData(data, params, config){\r\n\t\tif(this.initialized){\r\n\t\t\treturn this.dataLoader.load(data, params, config, false);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"setData failed - table not yet initialized. To set initial data please use the 'data' property in the table constructor.\")\r\n\t\t}\r\n\t}\r\n\r\n\t//clear data\r\n\tclearData(){\r\n\t\tthis.dataLoader.blockActiveLoad();\r\n\t\tthis.rowManager.clearData();\r\n\t}\r\n\r\n\t//get table data array\r\n\tgetData(active){\r\n\t\treturn this.rowManager.getData(active);\r\n\t}\r\n\r\n\t//get table data array count\r\n\tgetDataCount(active){\r\n\t\treturn this.rowManager.getDataCount(active);\r\n\t}\r\n\r\n\t//replace data, keeping table in position with same sort\r\n\treplaceData(data, params, config){\r\n\t\tif(this.initialized){\r\n\t\t\treturn this.dataLoader.load(data, params, config, true, true);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"replaceData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update table data\r\n\tupdateData(data){\r\n\t\tvar responses = 0;\r\n\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\t\tvar row = this.rowManager.findRow(item[this.options.index]);\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\tresponses++;\r\n\r\n\t\t\t\t\t\t\trow.updateData(item)\r\n\t\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"updateData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\taddData(data, pos, index){\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tthis.rowManager.addRows(data, pos, index)\r\n\t\t\t\t\t.then((rows) => {\r\n\t\t\t\t\t\tvar output = [];\r\n\r\n\t\t\t\t\t\trows.forEach(function(row){\r\n\t\t\t\t\t\t\toutput.push(row.getComponent());\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tresolve(output);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"addData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update table data\r\n\tupdateOrAddData(data){\r\n\t\tvar rows = [],\r\n\t\tresponses = 0;\r\n\r\n\t\tif(this.initialized){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.dataLoader.blockActiveLoad();\r\n\r\n\t\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tdata.forEach((item) => {\r\n\t\t\t\t\t\tvar row = this.rowManager.findRow(item[this.options.index]);\r\n\r\n\t\t\t\t\t\tresponses++;\r\n\r\n\t\t\t\t\t\tif(row){\r\n\t\t\t\t\t\t\trow.updateData(item)\r\n\t\t\t\t\t\t\t.then(()=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\t\trows.push(row.getComponent());\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve(rows);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.rowManager.addRows(item)\r\n\t\t\t\t\t\t\t.then((newRows)=>{\r\n\t\t\t\t\t\t\t\tresponses--;\r\n\t\t\t\t\t\t\t\trows.push(newRows[0].getComponent());\r\n\r\n\t\t\t\t\t\t\t\tif(!responses){\r\n\t\t\t\t\t\t\t\t\tresolve(rows);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.warn(\"Update Error - No data provided\");\r\n\t\t\t\t\treject(\"Update Error - No data provided\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"updateOrAddData failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//get row object\r\n\tgetRow(index){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching row found:\", index);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//get row object\r\n\tgetRowFromPosition(position, active){\r\n\t\tvar row = this.rowManager.getRowFromPosition(position, active);\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching row found:\", position);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t//delete row from table\r\n\tdeleteRow(index){\r\n\t\tvar foundRows = [];\r\n\r\n\t\tif(!Array.isArray(index)){\r\n\t\t\tindex = [index];\r\n\t\t}\r\n\r\n\t\t//find matching rows\r\n\t\tfor(let item of index){\r\n\t\t\tlet row = this.rowManager.findRow(item, true);\r\n\r\n\t\t\tif(row){\r\n\t\t\t\tfoundRows.push(row);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.error(\"Delete Error - No matching row found:\", item);\r\n\t\t\t\treturn Promise.reject(\"Delete Error - No matching row found\")\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//sort rows into correct order to ensure smooth delete from table\r\n\t\tfoundRows.sort((a, b) => {\r\n\t\t\treturn this.rowManager.rows.indexOf(a) > this.rowManager.rows.indexOf(b) ? 1 : -1;\r\n\t\t});\r\n\r\n\t\t//delete rows\r\n\t\tfoundRows.forEach((row) =>{\r\n\t\t\trow.delete()\r\n\t\t});\r\n\r\n\t\tthis.rowManager.reRenderInPosition();\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t//add row to table\r\n\taddRow(data, pos, index){\r\n\t\tif(this.initialized){\r\n\t\t\tif(typeof data === \"string\"){\r\n\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.rowManager.addRows(data, pos, index)\r\n\t\t\t.then((rows)=>{\r\n\t\t\t\treturn rows[0].getComponent();\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"addRow failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\t//update a row if it exitsts otherwise create it\r\n\tupdateOrAddRow(index, data){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.updateData(data)\r\n\t\t\t.then(()=>{\r\n\t\t\t\treturn row.getComponent();\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\treturn this.rowManager.addRows(data)\r\n\t\t\t.then((rows)=>{\r\n\t\t\t\treturn rows[0].getComponent();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t//update row data\r\n\tupdateRow(index, data){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(typeof data === \"string\"){\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\r\n\t\tif(row){\r\n\t\t\treturn row.updateData(data)\r\n\t\t\t.then(()=>{\r\n\t\t\t\treturn Promise.resolve(row.getComponent());\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Update Error - No matching row found:\", index);\r\n\t\t\treturn Promise.reject(\"Update Error - No matching row found\");\r\n\t\t}\r\n\t}\r\n\r\n\t//scroll to row in DOM\r\n\tscrollToRow(index, position, ifVisible){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn this.rowManager.scrollToRow(row, position, ifVisible)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Scroll Error - No matching row found:\", index);\r\n\t\t\treturn Promise.reject(\"Scroll Error - No matching row found\");\r\n\t\t}\r\n\t}\r\n\r\n\tmoveRow(from, to, after){\r\n\t\tvar fromRow = this.rowManager.findRow(from);\r\n\r\n\t\tif(fromRow){\r\n\t\t\tfromRow.moveToRow(to, after);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching row found:\", from);\r\n\t\t}\r\n\t}\r\n\r\n\tgetRows(active){\r\n\t\treturn this.rowManager.getComponents(active);\r\n\t}\r\n\r\n\t//get position of row in table\r\n\tgetRowPosition(index, active){\r\n\t\tvar row = this.rowManager.findRow(index);\r\n\r\n\t\tif(row){\r\n\t\t\treturn this.rowManager.getRowPosition(row, active);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Position Error - No matching row found:\", index);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/////////////// Column Functions  ///////////////\r\n\tsetColumns(definition){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.columnManager.setColumns(definition);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"setColumns failed - table not yet initialized. To set initial data please use the 'columns' property in the table constructor.\")\r\n\t\t}\r\n\t}\r\n\r\n\tgetColumns(structured){\r\n\t\treturn this.columnManager.getComponents(structured);\r\n\t}\r\n\r\n\tgetColumn(field){\r\n\t\tvar col = this.columnManager.findColumn(field);\r\n\r\n\t\tif(col){\r\n\t\t\treturn col.getComponent();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Find Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetColumnDefinitions(){\r\n\t\treturn this.columnManager.getDefinitionTree();\r\n\t}\r\n\r\n\tshowColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tcolumn.show();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Show Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\thideColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tcolumn.hide();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Hide Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\tif(column.visible){\r\n\t\t\t\tcolumn.hide();\r\n\t\t\t}else{\r\n\t\t\t\tcolumn.show();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Visibility Toggle Error - No matching column found:\", field);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\taddColumn(definition, before, field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\treturn this.columnManager.addColumn(definition, before, column)\r\n\t\t.then((column) => {\r\n\t\t\treturn column.getComponent();\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteColumn(field){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn column.delete();\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Delete Error - No matching column found:\", field);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateColumnDefinition(field, definition){\r\n\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\tif(column){\r\n\t\t\treturn column.updateDefinition(definition)\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Column Update Error - No matching column found:\", field);\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\r\n\tmoveColumn(from, to, after){\r\n\t\tvar fromColumn = this.columnManager.findColumn(from);\r\n\t\tvar toColumn = this.columnManager.findColumn(to);\r\n\r\n\t\tif(fromColumn){\r\n\t\t\tif(toColumn){\r\n\t\t\t\tthis.columnManager.moveColumn(fromColumn, toColumn, after)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Move Error - No matching column found:\", toColumn);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"Move Error - No matching column found:\", from);\r\n\t\t}\r\n\t}\r\n\r\n\t//scroll to column in DOM\r\n\tscrollToColumn(field, position, ifVisible){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar column = this.columnManager.findColumn(field);\r\n\r\n\t\t\tif(column){\r\n\t\t\t\treturn this.columnManager.scrollToColumn(column, position, ifVisible)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.warn(\"Scroll Error - No matching column found:\", field);\r\n\t\t\t\treturn Promise.reject(\"Scroll Error - No matching column found\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//////////// General Public Functions ////////////\r\n\t//redraw list without updating data\r\n\tredraw(force){\r\n\t\tif(this.initialized){\r\n\t\t\tthis.columnManager.redraw(force);\r\n\t\t\tthis.rowManager.redraw(force);\r\n\t\t}else{\r\n\t\t\tconsole.warn(\"redraw failed - table not yet initialized. Please wait for the `tableBuilt` event before calling this function.\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetHeight(height){\r\n\t\tthis.options.height = isNaN(height) ? height : height + \"px\";\r\n\t\tthis.element.style.height = this.options.height;\r\n\t\tthis.rowManager.initializeRenderer();\r\n\t\tthis.rowManager.redraw();\r\n\t}\r\n\r\n\t//////////////////// Event Bus ///////////////////\r\n\r\n\ton(key, callback){\r\n\t\tthis.externalEvents.subscribe(key, callback);\r\n\t}\r\n\r\n\toff(key, callback){\r\n\t\tthis.externalEvents.unsubscribe(key, callback);\r\n\t}\r\n\r\n\tdispatchEvent(){\r\n\t\tvar args = Array.from(arguments),\r\n\t\tkey = args.shift();\r\n\r\n\t\tthis.externalEvents.dispatch(...arguments)\r\n\t}\r\n\r\n\t////////////// Extension Management //////////////\r\n\tmodExists(plugin, required){\r\n\t\tif(this.modules[plugin]){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tif(required){\r\n\t\t\t\tconsole.error(\"Tabulator Module Not Installed: \" + plugin);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tmodule(key){\r\n\t\tvar mod = this.modules[key];\r\n\r\n\t\tif(!mod){\r\n\t\t\tconsole.error(\"Tabulator module not installed: \" + key);\r\n\t\t}\r\n\r\n\t\treturn mod;\r\n\t}\r\n}\r\n\r\n//default setup options\r\nTabulator.defaultOptions = defaultOptions;\r\n\r\n//bind modules and static functionality\r\nnew ModuleBinder(Tabulator);\r\n\r\nexport default Tabulator;","//tabulator with all modules installed\r\nimport {default as Tabulator} from './Tabulator.js';\r\nimport * as modules from '../core/modules/optional.js';\r\nimport ModuleBinder from './tools/ModuleBinder.js';\r\n\r\nclass TabulatorFull extends Tabulator {};\r\n\r\n//bind modules and static functionality\r\nnew ModuleBinder(TabulatorFull, modules);\r\n\r\nexport default TabulatorFull;","export default class PseudoRow {\r\n\r\n\tconstructor (type){\r\n\t\tthis.type = type;\r\n\t\tthis.element = this._createElement();\r\n\t}\r\n\r\n\t_createElement(){\r\n\t\tvar el = document.createElement(\"div\");\r\n\t\tel.classList.add(\"tabulator-row\");\r\n\t\treturn el;\r\n\t}\r\n\r\n\tgetElement(){\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\tgetComponent(){\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetData(){\r\n\t\treturn {};\r\n\t}\r\n\r\n\tgetHeight(){\r\n\t\treturn this.element.outerHeight;\r\n\t}\r\n\r\n\tinitialize(){}\r\n\r\n\treinitialize(){}\r\n\r\n\tnormalizeHeight(){}\r\n\r\n\tgenerateCells(){}\r\n\r\n\treinitializeHeight(){}\r\n\r\n\tcalcHeight(){}\r\n\r\n\tsetCellHeight(){}\r\n\r\n\tclearCellHeight(){}\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}