{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _templateObject, _templateObject2, _templateObject3;\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\nfunction t(t) {\n  var a = t.fragment.code;\n  a.add(e(_templateObject || (_templateObject = _taggedTemplateLiteral([\"vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG)\\n{\\nreturn ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;\\n}\"])))), a.add(e(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"float integratedRadiance(float cosTheta2, float roughness)\\n{\\nreturn (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);\\n}\"])))), a.add(e(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness)\\n{\\nfloat cosTheta2 = 1.0 - RdotNG * RdotNG;\\nfloat intRadTheta = integratedRadiance(cosTheta2, roughness);\\nfloat ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;\\nfloat sky = 2.0 - ground;\\nreturn (ground * ambientGround + sky * ambientSky) * 0.5;\\n}\"]))));\n}\nexport { t as AnalyticalSkyModel };","map":{"version":3,"names":["glsl","e","t","a","fragment","code","add","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","AnalyticalSkyModel"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/AnalyticalSkyModel.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function t(t){const a=t.fragment.code;a.add(e`vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG)\n{\nreturn ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;\n}`),a.add(e`float integratedRadiance(float cosTheta2, float roughness)\n{\nreturn (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);\n}`),a.add(e`vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness)\n{\nfloat cosTheta2 = 1.0 - RdotNG * RdotNG;\nfloat intRadTheta = integratedRadiance(cosTheta2, roughness);\nfloat ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;\nfloat sky = 2.0 - ground;\nreturn (ground * ambientGround + sky * ambientSky) * 0.5;\n}`)}export{t as AnalyticalSkyModel};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAASC,CAACA,CAACA,CAAC,EAAC;EAAC,IAAMC,CAAC,GAACD,CAAC,CAACE,QAAQ,CAACC,IAAI;EAACF,CAAC,CAACG,GAAG,CAACL,CAAC,CAAAM,eAAA,KAAAA,eAAA,GAAAC,sBAAA,0LAGnG,EAACL,CAAC,CAACG,GAAG,CAACL,CAAC,CAAAQ,gBAAA,KAAAA,gBAAA,GAAAD,sBAAA,wJAGR,EAACL,CAAC,CAACG,GAAG,CAACL,CAAC,CAAAS,gBAAA,KAAAA,gBAAA,GAAAF,sBAAA,mYAOR;AAAA;AAAC,SAAON,CAAC,IAAIS,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}