{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\query-table-tabulator.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ReactTabulator } from 'react-tabulator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class QueryTableTabulator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = null;\n    this.columns = [\n    //ColumnDefinition[] = [\n    {\n      rowHandle: true,\n      formatter: \"handle\",\n      headerSort: false,\n      frozen: true,\n      width: 30,\n      minWidth: 30\n    }, {\n      title: \"Title\",\n      field: \"title\"\n    }, {\n      title: \"Created\",\n      field: \"created\"\n    }, {\n      title: \"Tags\",\n      field: \"tags\"\n    }];\n    this.rowClick = (e, row) => {\n      this.setState({\n        selectedTitle: row.getData().title\n      });\n    };\n    this.setData = () => {\n      this.setState(this.props.userItems);\n    };\n    this.clearData = () => {\n      this.setState([]);\n    };\n    this.state = {\n      selectedTitle: \"\"\n    };\n  }\n  render() {\n    console.log(\"query-table-tabulator\");\n    const options = {\n      height: 150,\n      movableRows: true,\n      movableColumns: true,\n      progressiveLoad: 'scroll',\n      progressiveLoadDelay: 200,\n      selectable: true,\n      rowClick: (e, row) => {\n        this.setState({\n          selectedTitle: row.getData().title\n        });\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"toggle-switch modifier-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"toggle-switch-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-switch-track margin-right-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-switch-label font-size--1\",\n          children: \"Inline example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactTabulator, {\n        onRef: r => this.ref = r,\n        columns: this.columns,\n        data: this.props.userItems,\n        events: {\n          rowClick: this.rowClick\n        },\n        layout: \"fitData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}\nQueryTableTabulator.defaultProps = {\n  userItems: [{\n    id: ''\n  }]\n};\nconst mapStateToProps = _ref => {\n  let {\n    query: {\n      userItems,\n      userTags\n    }\n  } = _ref;\n  return {\n    userItems,\n    userTags\n  };\n};\nexport default connect(mapStateToProps)(QueryTableTabulator);","map":{"version":3,"names":["React","connect","ReactTabulator","jsxDEV","_jsxDEV","QueryTableTabulator","Component","constructor","props","ref","columns","rowHandle","formatter","headerSort","frozen","width","minWidth","title","field","rowClick","e","row","setState","selectedTitle","getData","setData","userItems","clearData","state","render","console","log","options","height","movableRows","movableColumns","progressiveLoad","progressiveLoadDelay","selectable","children","className","type","fileName","_jsxFileName","lineNumber","columnNumber","onRef","r","data","events","layout","defaultProps","id","mapStateToProps","_ref","query","userTags"],"sources":["C:/code-challenge-react/frontend/src/components/main/query-table-tabulator.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ColumnDefinition, ReactTabulator } from 'react-tabulator'\n\ninterface Item {\n  id: string,\n  title?: string,\n  created?: Date,\n  tags?: string[],\n}\n\ninterface Tags {\n  tag: string,\n  count: number,\n}\n\ninterface ItemProps {\n  userItems: Item[],\n  userTags?: Tags[],\n}\n\nexport class QueryTableTabulator extends React.Component <ItemProps, any> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      selectedTitle: \"\"\n    }\n  }\n  \n  ref = null\n  public static defaultProps = { userItems: [{id:'',}], }\n\n  columns: any[] = [ //ColumnDefinition[] = [\n    {rowHandle:true, formatter:\"handle\", headerSort:false, frozen:true, width:30, minWidth:30},\n    { title: \"Title\", field: \"title\", },\n    { title: \"Created\", field: \"created\", },\n    { title: \"Tags\", field: \"tags\", },\n  ]\n\n  rowClick = (e:any, row:any) => { this.setState({ selectedTitle: row.getData().title }) }\n  setData = () => { this.setState( this.props.userItems )}\n  clearData = () => { this.setState( [] )}\n\n  render() { console.log(\"query-table-tabulator\")\n    const options = {\n      height: 150,\n      movableRows: true,\n      movableColumns: true,\n      progressiveLoad: 'scroll',\n      progressiveLoadDelay: 200,\n      selectable: true,\n      rowClick: (e:any, row:any) => { this.setState({ selectedTitle: row.getData().title }) }\n    }\n\n    return (\n      <div>\n        <label className=\"toggle-switch modifier-class\">\n  <input type=\"checkbox\" className=\"toggle-switch-input\"></input>\n  <span className=\"toggle-switch-track margin-right-1\"></span>\n  <span className=\"toggle-switch-label font-size--1\">Inline example</span>\n</label>\n        <ReactTabulator \n          onRef={(r) => (this.ref = r)}\n          columns={this.columns}\n          data={this.props.userItems} \n          events={{ rowClick: this.rowClick }}\n          layout={\"fitData\"}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems, userTags }}:any) => ({\n  userItems,\n  userTags\n})\n\nexport default connect(mapStateToProps, )(QueryTableTabulator)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}