{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { ReadLinearDepth as e } from \"../output/ReadLinearDepth.glsl.js\";\nimport { multipassGeometryTest as r } from \"../shading/MultipassGeometryTest.glsl.js\";\nimport { RgbaFloatEncoding as t } from \"../util/RgbaFloatEncoding.glsl.js\";\nimport { texelFetch as o } from \"../util/WebGL2Utils.js\";\nimport { Float2PassUniform as a } from \"../../shaderModules/Float2PassUniform.js\";\nimport { glsl as i } from \"../../shaderModules/interfaces.js\";\nimport { createTexture2DPassSizeUniforms as s } from \"../../shaderModules/Texture2DPassUniform.js\";\nimport { TextureSizeUniformType as n } from \"../../shaderModules/TextureSizeUniformType.js\";\nfunction p(p, l) {\n  const {\n    vertex: d,\n    fragment: c\n  } = p;\n  l.hasMultipassGeometry && d.include(r), l.hasMultipassTerrain && p.varyings.add(\"depth\", \"float\"), d.code.add(i`\n  void main(void) {\n    vec4 posProjCenter;\n    if (dot(position, position) > 0.0) {\n      // Render single point to center of the pixel to avoid subpixel\n      // filtering to affect the marker color\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      posProjCenter = alignToPixelCenter(posProj, viewport.zw);\n\n      ${l.hasMultipassGeometry ? i`\n        // Don't draw vertices behind geometry\n        if(geometryDepthTest(.5 + .5 * posProjCenter.xy / posProjCenter.w, projectAux.posView.z)){\n          posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n        }` : \"\"}\n\n      ${l.hasMultipassTerrain ? \"depth = projectAux.posView.z;\" : \"\"}\n      vec3 vpos = projectAux.posModel;\n      if (rejectBySlice(vpos)) {\n        // Project out of clip space\n        posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n      }\n\n    } else {\n      // Project out of clip space\n      posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n    }\n\n    gl_Position = posProjCenter;\n    gl_PointSize = 1.0;\n  }\n  `), l.hasMultipassTerrain && c.include(e), l.hasMultipassTerrain && c.uniforms.add([...s(\"terrainDepthTexture\", (e, r) => r.multipassTerrain.linearDepthTexture, l.hasWebGL2Context ? n.None : n.InvSize), new a(\"nearFar\", (e, r) => r.camera.nearFar)]), c.include(t), c.code.add(i`\n  void main() {\n    gl_FragColor = vec4(1, 1, 1, 1);\n    ${l.hasMultipassTerrain ? i`\n          vec2 uv = gl_FragCoord.xy;\n\n          // Read the rgba data from the texture linear depth\n          vec4 terrainDepthData = ${o(l, \"terrainDepthTexture\", \"uv\")};\n\n          float terrainDepth = linearDepthFromFloat(rgba2float(terrainDepthData), nearFar);\n\n          // If HUD vertex is behind terrain and the terrain depth is not the initialize value (e.g. we are not looking at the sky)\n          // Mark the HUD vertex as occluded by transparent terrain\n          if(depth < terrainDepth && terrainDepthData != vec4(0,0,0,1)){\n            gl_FragColor.g = 0.5;\n          }` : \"\"}\n  }\n  `);\n}\nexport { p as HUDOcclusionPass };","map":{"version":3,"names":["ReadLinearDepth","e","multipassGeometryTest","r","RgbaFloatEncoding","t","texelFetch","o","Float2PassUniform","a","glsl","i","createTexture2DPassSizeUniforms","s","TextureSizeUniformType","n","p","l","vertex","d","fragment","c","hasMultipassGeometry","include","hasMultipassTerrain","varyings","add","code","uniforms","multipassTerrain","linearDepthTexture","hasWebGL2Context","None","InvSize","camera","nearFar","HUDOcclusionPass"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ReadLinearDepth as e}from\"../output/ReadLinearDepth.glsl.js\";import{multipassGeometryTest as r}from\"../shading/MultipassGeometryTest.glsl.js\";import{RgbaFloatEncoding as t}from\"../util/RgbaFloatEncoding.glsl.js\";import{texelFetch as o}from\"../util/WebGL2Utils.js\";import{Float2PassUniform as a}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as i}from\"../../shaderModules/interfaces.js\";import{createTexture2DPassSizeUniforms as s}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as n}from\"../../shaderModules/TextureSizeUniformType.js\";function p(p,l){const{vertex:d,fragment:c}=p;l.hasMultipassGeometry&&d.include(r),l.hasMultipassTerrain&&p.varyings.add(\"depth\",\"float\"),d.code.add(i`\n  void main(void) {\n    vec4 posProjCenter;\n    if (dot(position, position) > 0.0) {\n      // Render single point to center of the pixel to avoid subpixel\n      // filtering to affect the marker color\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      posProjCenter = alignToPixelCenter(posProj, viewport.zw);\n\n      ${l.hasMultipassGeometry?i`\n        // Don't draw vertices behind geometry\n        if(geometryDepthTest(.5 + .5 * posProjCenter.xy / posProjCenter.w, projectAux.posView.z)){\n          posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n        }`:\"\"}\n\n      ${l.hasMultipassTerrain?\"depth = projectAux.posView.z;\":\"\"}\n      vec3 vpos = projectAux.posModel;\n      if (rejectBySlice(vpos)) {\n        // Project out of clip space\n        posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n      }\n\n    } else {\n      // Project out of clip space\n      posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n    }\n\n    gl_Position = posProjCenter;\n    gl_PointSize = 1.0;\n  }\n  `),l.hasMultipassTerrain&&c.include(e),l.hasMultipassTerrain&&c.uniforms.add([...s(\"terrainDepthTexture\",((e,r)=>r.multipassTerrain.linearDepthTexture),l.hasWebGL2Context?n.None:n.InvSize),new a(\"nearFar\",((e,r)=>r.camera.nearFar))]),c.include(t),c.code.add(i`\n  void main() {\n    gl_FragColor = vec4(1, 1, 1, 1);\n    ${l.hasMultipassTerrain?i`\n          vec2 uv = gl_FragCoord.xy;\n\n          // Read the rgba data from the texture linear depth\n          vec4 terrainDepthData = ${o(l,\"terrainDepthTexture\",\"uv\")};\n\n          float terrainDepth = linearDepthFromFloat(rgba2float(terrainDepthData), nearFar);\n\n          // If HUD vertex is behind terrain and the terrain depth is not the initialize value (e.g. we are not looking at the sky)\n          // Mark the HUD vertex as occluded by transparent terrain\n          if(depth < terrainDepth && terrainDepthData != vec4(0,0,0,1)){\n            gl_FragColor.g = 0.5;\n          }`:\"\"}\n  }\n  `)}export{p as HUDOcclusionPass};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,eAAe,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,qBAAqB,IAAIC,CAAC,QAAK,0CAA0C;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,UAAU,IAAIC,CAAC,QAAK,wBAAwB;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,0CAA0C;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,+BAA+B,IAAIC,CAAC,QAAK,6CAA6C;AAAC,SAAOC,sBAAsB,IAAIC,CAAC,QAAK,+CAA+C;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,MAAK;IAACC,MAAM,EAACC,CAAC;IAACC,QAAQ,EAACC;EAAC,CAAC,GAACL,CAAC;EAACC,CAAC,CAACK,oBAAoB,IAAEH,CAAC,CAACI,OAAO,CAACpB,CAAC,CAAC,EAACc,CAAC,CAACO,mBAAmB,IAAER,CAAC,CAACS,QAAQ,CAACC,GAAG,CAAC,OAAO,EAAC,OAAO,CAAC,EAACP,CAAC,CAACQ,IAAI,CAACD,GAAG,CAACf,CAAE;AAChuB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQM,CAAC,CAACK,oBAAoB,GAACX,CAAE;AACjC;AACA;AACA;AACA,UAAU,GAAC,EAAG;AACd;AACA,QAAQM,CAAC,CAACO,mBAAmB,GAAC,+BAA+B,GAAC,EAAG;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC,EAACP,CAAC,CAACO,mBAAmB,IAAEH,CAAC,CAACE,OAAO,CAACtB,CAAC,CAAC,EAACgB,CAAC,CAACO,mBAAmB,IAAEH,CAAC,CAACO,QAAQ,CAACF,GAAG,CAAC,CAAC,GAAGb,CAAC,CAAC,qBAAqB,EAAE,CAACZ,CAAC,EAACE,CAAC,KAAGA,CAAC,CAAC0B,gBAAgB,CAACC,kBAAkB,EAAEb,CAAC,CAACc,gBAAgB,GAAChB,CAAC,CAACiB,IAAI,GAACjB,CAAC,CAACkB,OAAO,CAAC,EAAC,IAAIxB,CAAC,CAAC,SAAS,EAAE,CAACR,CAAC,EAACE,CAAC,KAAGA,CAAC,CAAC+B,MAAM,CAACC,OAAO,CAAE,CAAC,CAAC,EAACd,CAAC,CAACE,OAAO,CAAClB,CAAC,CAAC,EAACgB,CAAC,CAACM,IAAI,CAACD,GAAG,CAACf,CAAE;AACtQ;AACA;AACA,MAAMM,CAAC,CAACO,mBAAmB,GAACb,CAAE;AAC9B;AACA;AACA;AACA,oCAAoCJ,CAAC,CAACU,CAAC,EAAC,qBAAqB,EAAC,IAAI,CAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAC,EAAG;AAChB;AACA,GAAG,CAAC;AAAA;AAAC,SAAOD,CAAC,IAAIoB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}