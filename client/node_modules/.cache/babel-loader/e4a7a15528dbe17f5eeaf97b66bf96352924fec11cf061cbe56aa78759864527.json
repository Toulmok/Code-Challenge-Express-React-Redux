{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Evented.js\";\nimport { HandleOwner as n } from \"../../../core/HandleOwner.js\";\nimport { isNone as i, isSome as s } from \"../../../core/maybe.js\";\nimport { isAborted as r } from \"../../../core/promiseUtils.js\";\nimport { watch as a, sync as o, syncAndInitial as p } from \"../../../core/reactiveUtils.js\";\nimport { property as c } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as d } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { project as h, initializeProjection as l } from \"../../../geometry/projection.js\";\nimport { absoluteHeightElevationInfo as u } from \"../../../support/elevationInfoUtils.js\";\nimport { defaults as f } from \"./Settings.js\";\nimport { SnappingDomain as _ } from \"./SnappingDomain.js\";\nimport { defaultSnappingEnginesFactory as g } from \"./snappingFactory.js\";\nimport m from \"./SnappingOptions.js\";\nimport { pointToSnappingPoint as S, snappingPointToSnappingOutput as v } from \"./SnappingPoint.js\";\nimport { sortCandidatesInPlace as y, squaredScreenDistance as C } from \"./snappingUtils.js\";\nimport { IntersectionSnappingCandidate as P } from \"./candidates/IntersectionSnappingCandidate.js\";\nimport { vectorToScreenPoint as T } from \"../support/viewUtils.js\";\nlet w = class extends t.EventedMixin(n) {\n  constructor(e) {\n    super(e), this.options = new m(), this.snappingEnginesFactory = g, this._engines = [], this._currentMainCandidate = null, this._currentOtherActiveCandidates = [], this._currentSnappedType = E.MAIN;\n  }\n  initialize() {\n    this.handles.add([a(() => {\n      const {\n        effectiveFeatureEnabled: e,\n        effectiveSelfEnabled: t,\n        touchSensitivityMultiplier: n,\n        distance: i\n      } = this.options;\n      return {\n        effectiveFeatureEnabled: e,\n        effectiveSelfEnabled: t,\n        touchSensitivityMultiplier: n,\n        distance: i\n      };\n    }, () => {\n      this.doneSnapping(), this.emit(\"changed\");\n    }, o), a(() => this.options, e => {\n      for (const t of this._engines) t.options = e;\n    }, o), a(() => ({\n      viewReady: this.view.ready,\n      viewSpatialReference: this.view.spatialReference,\n      snappingEnginesFactory: this.snappingEnginesFactory\n    }), _ref => {\n      let {\n        viewReady: e,\n        snappingEnginesFactory: t\n      } = _ref;\n      return this._recreateEngines(e, t);\n    }, p)]);\n  }\n  destroy() {\n    this._destroyEngines();\n  }\n  get updating() {\n    return this._engines.some(e => e.updating);\n  }\n  _recreateEngines(e, t) {\n    if (this._destroyEngines(), !e) return;\n    const {\n      view: n,\n      options: i\n    } = this;\n    this._engines = t(n, i);\n  }\n  _destroyEngines() {\n    for (const e of this._engines) e.destroy();\n    this._engines = [];\n  }\n  get _squaredMouseProximityTreshold() {\n    return this.options.distance * this.options.distance;\n  }\n  get _squaredTouchProximityThreshold() {\n    const {\n        distance: e,\n        touchSensitivityMultiplier: t\n      } = this.options,\n      n = e * t;\n    return n * n;\n  }\n  get _squaredSatisfiesConstraintThreshold() {\n    return f.satisfiesConstraintScreenThreshold * f.satisfiesConstraintScreenThreshold;\n  }\n  async snap(e) {\n    return M(e) ? this._snapMultiPoint(e) : this._snapSinglePoint(e);\n  }\n  update(e) {\n    const {\n      point: t,\n      context: n\n    } = e;\n    this._removeVisualization();\n    const r = this._currentMainCandidate;\n    if (i(r)) return t;\n    const a = this._selectUpdateInput(e);\n    if (i(a)) return t;\n    const {\n        spatialReference: o\n      } = n,\n      p = h(a, o);\n    if (i(p)) return t;\n    const {\n        view: c\n      } = this,\n      {\n        elevationInfo: d,\n        visualizer: l\n      } = n,\n      u = [],\n      f = S(p, c, n),\n      _ = r.constraint.closestTo(f);\n    if (!this._arePointsWithinScreenThreshold(f, _, n)) return this._resetSnappingState(), t;\n    r.targetPoint = _, u.push(...r.hints);\n    for (const i of this._currentOtherActiveCandidates) i.targetPoint = _, u.push(...i.hints);\n    return s(l) && this.handles.add(l.draw(u, {\n      spatialReference: o,\n      elevationInfo: R(n),\n      view: c,\n      selfSnappingZ: n.selfSnappingZ\n    }), I), v(_, c, {\n      z: t.z,\n      m: t.m,\n      spatialReference: t.spatialReference,\n      elevationInfo: d\n    });\n  }\n  doneSnapping() {\n    this._removeVisualization(), this._resetSnappingState();\n  }\n  _selectUpdateInput(_ref2) {\n    let {\n      point: e,\n      scenePoint: t\n    } = _ref2;\n    switch (this._currentSnappedType) {\n      case E.MAIN:\n        return e;\n      case E.SCENE:\n        return t;\n    }\n  }\n  _resetSnappingState() {\n    this._currentMainCandidate = null, this._currentOtherActiveCandidates = [], this._currentSnappedType = E.MAIN;\n  }\n  _removeVisualization() {\n    this.handles.remove(I);\n  }\n  async _snapSinglePoint(_ref3) {\n    let {\n      point: e,\n      context: t,\n      signal: n\n    } = _ref3;\n    const {\n        view: i\n      } = this,\n      s = S(e, i, t),\n      r = await this._fetchCandidates(s, _.ALL, t, n);\n    return this._createSnapResult(s, E.MAIN, r, i, t, {\n      z: e.z,\n      m: e.m,\n      spatialReference: e.spatialReference,\n      elevationInfo: t.elevationInfo\n    }, n);\n  }\n  async _snapMultiPoint(_ref4) {\n    let {\n      point: e,\n      scenePoint: t,\n      context: n,\n      signal: i\n    } = _ref4;\n    const {\n        view: s\n      } = this,\n      {\n        coordinateHelper: r,\n        spatialReference: a\n      } = n;\n    await l(t.spatialReference, a);\n    const o = h(t, a),\n      p = S(o, s, n),\n      c = await this._fetchCandidates(p, _.FEATURE, n, i);\n    if (c.length > 0) {\n      const e = await this._fetchCandidates(p, _.SELF, n, i);\n      return this._createSnapResult(p, E.SCENE, [...c, ...e], s, n, {\n        z: o.z,\n        m: o.m,\n        spatialReference: o.spatialReference,\n        elevationInfo: n.elevationInfo\n      }, i);\n    }\n    const d = S(e, s, n),\n      u = await this._fetchCandidates(d, _.SELF, n, i);\n    return this._createSnapResult(d, E.MAIN, u, s, n, {\n      z: r.hasZ() && e.hasZ ? e.z ?? 0 : void 0,\n      m: r.hasM() && e.hasM ? e.m ?? 0 : void 0,\n      spatialReference: e.spatialReference,\n      elevationInfo: n.elevationInfo\n    }, i);\n  }\n  async _fetchCandidates(e, t, n, i) {\n    return (await Promise.all(this._engines.map(s => s.fetchCandidates(e, t, n, i)))).flat();\n  }\n  _createSnapResult(e, t, n, i, a, o, p) {\n    return {\n      get valid() {\n        return !r(p);\n      },\n      apply: () => {\n        const {\n            spatialReference: r\n          } = a,\n          {\n            snappedPoint: p,\n            hints: c\n          } = this._processCandidates(e, t, n, a);\n        return this._removeVisualization(), s(a.visualizer) && this.handles.add(a.visualizer.draw(c, {\n          spatialReference: r,\n          elevationInfo: u,\n          view: i,\n          selfSnappingZ: a.selfSnappingZ\n        }), I), v(p, i, o);\n      }\n    };\n  }\n  _processCandidates(e, t, n, i) {\n    if (n.length < 1) return this.doneSnapping(), {\n      snappedPoint: e,\n      hints: []\n    };\n    this._currentSnappedType !== t && this._resetSnappingState(), y(e, n);\n    const r = this._currentMainCandidate;\n    if (s(r)) {\n      const s = this._findOldConstraintInNewCandidates(r, n);\n      if (s >= 0) {\n        if (!(n[s] instanceof P)) return this._intersectWithOtherCandidates(s, n, e, t, i);\n        if (this._arePointsWithinScreenThreshold(e, r.targetPoint, i)) return this._updateSnappingCandidate(r, t, n, i);\n      }\n    }\n    return this._intersectWithOtherCandidates(0, n, e, t, i);\n  }\n  _findOldConstraintInNewCandidates(e, t) {\n    return e instanceof P ? this._findOldCandidateIndex(t, e.first) >= 0 && this._findOldCandidateIndex(t, e.second) >= 0 ? 0 : -1 : this._findOldCandidateIndex(t, e);\n  }\n  _intersectWithOtherCandidates(e, t, n, i, s) {\n    const {\n        coordinateHelper: r\n      } = s,\n      a = t[e],\n      o = [];\n    for (let p = 0; p < t.length; ++p) {\n      if (p === e) continue;\n      const i = t[p];\n      for (const e of a.constraint.intersect(i.constraint)) {\n        const t = e.closestTo(a.targetPoint);\n        o.push([new P(t, a, i, i.isDraped), this._squaredScreenDistance(n, t, r)]);\n      }\n    }\n    return o.length > 0 && (o.sort((e, t) => e[1] - t[1]), o[0][1] < this._squaredPointProximityThreshold(s.pointer)) ? this._updateSnappingCandidate(o[0][0], i, t, s) : this._updateSnappingCandidate(a, i, t, s);\n  }\n  _updateSnappingCandidate(e, t, n, i) {\n    this.doneSnapping(), this._currentMainCandidate = e, this._currentSnappedType = t;\n    const s = this._currentMainCandidate.targetPoint,\n      r = [];\n    r.push(...e.hints);\n    for (const a of n) {\n      if (e instanceof P) {\n        if (a.constraint.equals(e.first.constraint) || a.constraint.equals(e.second.constraint)) continue;\n      } else if (a.constraint.equals(e.constraint)) continue;\n      const t = a.constraint.closestTo(s);\n      this._squaredScreenDistance(t, s, i.coordinateHelper) < this._squaredSatisfiesConstraintThreshold && (a.targetPoint = s, this._currentOtherActiveCandidates.push(a), r.push(...a.hints));\n    }\n    return {\n      snappedPoint: s,\n      hints: r\n    };\n  }\n  _squaredPointProximityThreshold(e) {\n    return \"touch\" === e ? this._squaredTouchProximityThreshold : this._squaredMouseProximityTreshold;\n  }\n  _arePointsWithinScreenThreshold(e, t, n) {\n    return this._squaredScreenDistance(e, t, n.coordinateHelper) < this._squaredPointProximityThreshold(n.pointer);\n  }\n  _squaredScreenDistance(e, t, n) {\n    return C(this._toScreen(e, n), this._toScreen(t, n));\n  }\n  _toScreen(e, t) {\n    return T(e, t.spatialReference, u, this.view);\n  }\n  _findOldCandidateIndex(e, t) {\n    let n = -1;\n    for (let i = 0; i < e.length; ++i) if (t.constraint.equals(e[i].constraint)) {\n      n = i;\n      break;\n    }\n    return n;\n  }\n  get test() {\n    return {\n      visualizationsActive: this.handles.has(I),\n      engines: this._engines\n    };\n  }\n};\nvar E;\ne([c({\n  constructOnly: !0\n})], w.prototype, \"view\", void 0), e([c()], w.prototype, \"options\", void 0), e([c({\n  readOnly: !0\n})], w.prototype, \"updating\", null), e([c()], w.prototype, \"snappingEnginesFactory\", void 0), e([c()], w.prototype, \"_engines\", void 0), e([c()], w.prototype, \"_squaredMouseProximityTreshold\", null), e([c()], w.prototype, \"_squaredTouchProximityThreshold\", null), e([c()], w.prototype, \"_squaredSatisfiesConstraintThreshold\", null), w = e([d(\"esri.views.interactive.snapping.SnappingManager\")], w), function (e) {\n  e[e.MAIN = 0] = \"MAIN\", e[e.SCENE = 1] = \"SCENE\";\n}(E || (E = {}));\nconst I = \"visualization-handle\";\nfunction M(e) {\n  return s(e.scenePoint);\n}\nfunction R(_ref5) {\n  let {\n    coordinateHelper: e,\n    elevationInfo: t\n  } = _ref5;\n  return e.hasZ() ? u : t;\n}\nexport { w as SnappingManager };","map":{"version":3,"names":["_","e","t","HandleOwner","n","isNone","i","isSome","s","isAborted","r","watch","a","sync","o","syncAndInitial","p","property","c","subclass","d","project","h","initializeProjection","l","absoluteHeightElevationInfo","u","defaults","f","SnappingDomain","defaultSnappingEnginesFactory","g","m","pointToSnappingPoint","S","snappingPointToSnappingOutput","v","sortCandidatesInPlace","y","squaredScreenDistance","C","IntersectionSnappingCandidate","P","vectorToScreenPoint","T","w","EventedMixin","constructor","options","snappingEnginesFactory","_engines","_currentMainCandidate","_currentOtherActiveCandidates","_currentSnappedType","E","MAIN","initialize","handles","add","effectiveFeatureEnabled","effectiveSelfEnabled","touchSensitivityMultiplier","distance","doneSnapping","emit","viewReady","view","ready","viewSpatialReference","spatialReference","_ref","_recreateEngines","destroy","_destroyEngines","updating","some","_squaredMouseProximityTreshold","_squaredTouchProximityThreshold","_squaredSatisfiesConstraintThreshold","satisfiesConstraintScreenThreshold","snap","M","_snapMultiPoint","_snapSinglePoint","update","point","context","_removeVisualization","_selectUpdateInput","elevationInfo","visualizer","constraint","closestTo","_arePointsWithinScreenThreshold","_resetSnappingState","targetPoint","push","hints","draw","R","selfSnappingZ","I","z","_ref2","scenePoint","SCENE","remove","_ref3","signal","_fetchCandidates","ALL","_createSnapResult","_ref4","coordinateHelper","FEATURE","length","SELF","hasZ","hasM","Promise","all","map","fetchCandidates","flat","valid","apply","snappedPoint","_processCandidates","_findOldConstraintInNewCandidates","_intersectWithOtherCandidates","_updateSnappingCandidate","_findOldCandidateIndex","first","second","intersect","isDraped","_squaredScreenDistance","sort","_squaredPointProximityThreshold","pointer","equals","_toScreen","test","visualizationsActive","has","engines","constructOnly","prototype","readOnly","_ref5","SnappingManager"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/interactive/snapping/SnappingManager.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Evented.js\";import{HandleOwner as n}from\"../../../core/HandleOwner.js\";import{isNone as i,isSome as s}from\"../../../core/maybe.js\";import{isAborted as r}from\"../../../core/promiseUtils.js\";import{watch as a,sync as o,syncAndInitial as p}from\"../../../core/reactiveUtils.js\";import{property as c}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as d}from\"../../../core/accessorSupport/decorators/subclass.js\";import{project as h,initializeProjection as l}from\"../../../geometry/projection.js\";import{absoluteHeightElevationInfo as u}from\"../../../support/elevationInfoUtils.js\";import{defaults as f}from\"./Settings.js\";import{SnappingDomain as _}from\"./SnappingDomain.js\";import{defaultSnappingEnginesFactory as g}from\"./snappingFactory.js\";import m from\"./SnappingOptions.js\";import{pointToSnappingPoint as S,snappingPointToSnappingOutput as v}from\"./SnappingPoint.js\";import{sortCandidatesInPlace as y,squaredScreenDistance as C}from\"./snappingUtils.js\";import{IntersectionSnappingCandidate as P}from\"./candidates/IntersectionSnappingCandidate.js\";import{vectorToScreenPoint as T}from\"../support/viewUtils.js\";let w=class extends(t.EventedMixin(n)){constructor(e){super(e),this.options=new m,this.snappingEnginesFactory=g,this._engines=[],this._currentMainCandidate=null,this._currentOtherActiveCandidates=[],this._currentSnappedType=E.MAIN}initialize(){this.handles.add([a((()=>{const{effectiveFeatureEnabled:e,effectiveSelfEnabled:t,touchSensitivityMultiplier:n,distance:i}=this.options;return{effectiveFeatureEnabled:e,effectiveSelfEnabled:t,touchSensitivityMultiplier:n,distance:i}}),(()=>{this.doneSnapping(),this.emit(\"changed\")}),o),a((()=>this.options),(e=>{for(const t of this._engines)t.options=e}),o),a((()=>({viewReady:this.view.ready,viewSpatialReference:this.view.spatialReference,snappingEnginesFactory:this.snappingEnginesFactory})),(({viewReady:e,snappingEnginesFactory:t})=>this._recreateEngines(e,t)),p)])}destroy(){this._destroyEngines()}get updating(){return this._engines.some((e=>e.updating))}_recreateEngines(e,t){if(this._destroyEngines(),!e)return;const{view:n,options:i}=this;this._engines=t(n,i)}_destroyEngines(){for(const e of this._engines)e.destroy();this._engines=[]}get _squaredMouseProximityTreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:e,touchSensitivityMultiplier:t}=this.options,n=e*t;return n*n}get _squaredSatisfiesConstraintThreshold(){return f.satisfiesConstraintScreenThreshold*f.satisfiesConstraintScreenThreshold}async snap(e){return M(e)?this._snapMultiPoint(e):this._snapSinglePoint(e)}update(e){const{point:t,context:n}=e;this._removeVisualization();const r=this._currentMainCandidate;if(i(r))return t;const a=this._selectUpdateInput(e);if(i(a))return t;const{spatialReference:o}=n,p=h(a,o);if(i(p))return t;const{view:c}=this,{elevationInfo:d,visualizer:l}=n,u=[],f=S(p,c,n),_=r.constraint.closestTo(f);if(!this._arePointsWithinScreenThreshold(f,_,n))return this._resetSnappingState(),t;r.targetPoint=_,u.push(...r.hints);for(const i of this._currentOtherActiveCandidates)i.targetPoint=_,u.push(...i.hints);return s(l)&&this.handles.add(l.draw(u,{spatialReference:o,elevationInfo:R(n),view:c,selfSnappingZ:n.selfSnappingZ}),I),v(_,c,{z:t.z,m:t.m,spatialReference:t.spatialReference,elevationInfo:d})}doneSnapping(){this._removeVisualization(),this._resetSnappingState()}_selectUpdateInput({point:e,scenePoint:t}){switch(this._currentSnappedType){case E.MAIN:return e;case E.SCENE:return t}}_resetSnappingState(){this._currentMainCandidate=null,this._currentOtherActiveCandidates=[],this._currentSnappedType=E.MAIN}_removeVisualization(){this.handles.remove(I)}async _snapSinglePoint({point:e,context:t,signal:n}){const{view:i}=this,s=S(e,i,t),r=await this._fetchCandidates(s,_.ALL,t,n);return this._createSnapResult(s,E.MAIN,r,i,t,{z:e.z,m:e.m,spatialReference:e.spatialReference,elevationInfo:t.elevationInfo},n)}async _snapMultiPoint({point:e,scenePoint:t,context:n,signal:i}){const{view:s}=this,{coordinateHelper:r,spatialReference:a}=n;await l(t.spatialReference,a);const o=h(t,a),p=S(o,s,n),c=await this._fetchCandidates(p,_.FEATURE,n,i);if(c.length>0){const e=await this._fetchCandidates(p,_.SELF,n,i);return this._createSnapResult(p,E.SCENE,[...c,...e],s,n,{z:o.z,m:o.m,spatialReference:o.spatialReference,elevationInfo:n.elevationInfo},i)}const d=S(e,s,n),u=await this._fetchCandidates(d,_.SELF,n,i);return this._createSnapResult(d,E.MAIN,u,s,n,{z:r.hasZ()&&e.hasZ?e.z??0:void 0,m:r.hasM()&&e.hasM?e.m??0:void 0,spatialReference:e.spatialReference,elevationInfo:n.elevationInfo},i)}async _fetchCandidates(e,t,n,i){return(await Promise.all(this._engines.map((s=>s.fetchCandidates(e,t,n,i))))).flat()}_createSnapResult(e,t,n,i,a,o,p){return{get valid(){return!r(p)},apply:()=>{const{spatialReference:r}=a,{snappedPoint:p,hints:c}=this._processCandidates(e,t,n,a);return this._removeVisualization(),s(a.visualizer)&&this.handles.add(a.visualizer.draw(c,{spatialReference:r,elevationInfo:u,view:i,selfSnappingZ:a.selfSnappingZ}),I),v(p,i,o)}}}_processCandidates(e,t,n,i){if(n.length<1)return this.doneSnapping(),{snappedPoint:e,hints:[]};this._currentSnappedType!==t&&this._resetSnappingState(),y(e,n);const r=this._currentMainCandidate;if(s(r)){const s=this._findOldConstraintInNewCandidates(r,n);if(s>=0){if(!(n[s]instanceof P))return this._intersectWithOtherCandidates(s,n,e,t,i);if(this._arePointsWithinScreenThreshold(e,r.targetPoint,i))return this._updateSnappingCandidate(r,t,n,i)}}return this._intersectWithOtherCandidates(0,n,e,t,i)}_findOldConstraintInNewCandidates(e,t){return e instanceof P?this._findOldCandidateIndex(t,e.first)>=0&&this._findOldCandidateIndex(t,e.second)>=0?0:-1:this._findOldCandidateIndex(t,e)}_intersectWithOtherCandidates(e,t,n,i,s){const{coordinateHelper:r}=s,a=t[e],o=[];for(let p=0;p<t.length;++p){if(p===e)continue;const i=t[p];for(const e of a.constraint.intersect(i.constraint)){const t=e.closestTo(a.targetPoint);o.push([new P(t,a,i,i.isDraped),this._squaredScreenDistance(n,t,r)])}}return o.length>0&&(o.sort(((e,t)=>e[1]-t[1])),o[0][1]<this._squaredPointProximityThreshold(s.pointer))?this._updateSnappingCandidate(o[0][0],i,t,s):this._updateSnappingCandidate(a,i,t,s)}_updateSnappingCandidate(e,t,n,i){this.doneSnapping(),this._currentMainCandidate=e,this._currentSnappedType=t;const s=this._currentMainCandidate.targetPoint,r=[];r.push(...e.hints);for(const a of n){if(e instanceof P){if(a.constraint.equals(e.first.constraint)||a.constraint.equals(e.second.constraint))continue}else if(a.constraint.equals(e.constraint))continue;const t=a.constraint.closestTo(s);this._squaredScreenDistance(t,s,i.coordinateHelper)<this._squaredSatisfiesConstraintThreshold&&(a.targetPoint=s,this._currentOtherActiveCandidates.push(a),r.push(...a.hints))}return{snappedPoint:s,hints:r}}_squaredPointProximityThreshold(e){return\"touch\"===e?this._squaredTouchProximityThreshold:this._squaredMouseProximityTreshold}_arePointsWithinScreenThreshold(e,t,n){return this._squaredScreenDistance(e,t,n.coordinateHelper)<this._squaredPointProximityThreshold(n.pointer)}_squaredScreenDistance(e,t,n){return C(this._toScreen(e,n),this._toScreen(t,n))}_toScreen(e,t){return T(e,t.spatialReference,u,this.view)}_findOldCandidateIndex(e,t){let n=-1;for(let i=0;i<e.length;++i)if(t.constraint.equals(e[i].constraint)){n=i;break}return n}get test(){return{visualizationsActive:this.handles.has(I),engines:this._engines}}};var E;e([c({constructOnly:!0})],w.prototype,\"view\",void 0),e([c()],w.prototype,\"options\",void 0),e([c({readOnly:!0})],w.prototype,\"updating\",null),e([c()],w.prototype,\"snappingEnginesFactory\",void 0),e([c()],w.prototype,\"_engines\",void 0),e([c()],w.prototype,\"_squaredMouseProximityTreshold\",null),e([c()],w.prototype,\"_squaredTouchProximityThreshold\",null),e([c()],w.prototype,\"_squaredSatisfiesConstraintThreshold\",null),w=e([d(\"esri.views.interactive.snapping.SnappingManager\")],w),function(e){e[e.MAIN=0]=\"MAIN\",e[e.SCENE=1]=\"SCENE\"}(E||(E={}));const I=\"visualization-handle\";function M(e){return s(e.scenePoint)}function R({coordinateHelper:e,elevationInfo:t}){return e.hasZ()?u:t}export{w as SnappingManager};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}