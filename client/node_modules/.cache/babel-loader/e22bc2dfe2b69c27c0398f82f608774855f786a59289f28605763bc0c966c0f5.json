{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\nfunction t(t) {\n  t.extensions.add(\"GL_EXT_shader_texture_lod\"), t.extensions.add(\"GL_OES_standard_derivatives\"), t.fragment.code.add(e`#ifndef GL_EXT_shader_texture_lod\nfloat calcMipMapLevel(const vec2 ddx, const vec2 ddy) {\nfloat deltaMaxSqr = max(dot(ddx, ddx), dot(ddy, ddy));\nreturn max(0.0, 0.5 * log2(deltaMaxSqr));\n}\n#endif\nvec4 textureAtlasLookup(sampler2D texture, vec2 textureSize, vec2 textureCoordinates, vec4 atlasRegion) {\nvec2 atlasScale = atlasRegion.zw - atlasRegion.xy;\nvec2 uvAtlas = fract(textureCoordinates) * atlasScale + atlasRegion.xy;\nfloat maxdUV = 0.125;\nvec2 dUVdx = clamp(dFdx(textureCoordinates), -maxdUV, maxdUV) * atlasScale;\nvec2 dUVdy = clamp(dFdy(textureCoordinates), -maxdUV, maxdUV) * atlasScale;\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DGradEXT(texture, uvAtlas, dUVdx, dUVdy);\n#else\nvec2 dUVdxAuto = dFdx(uvAtlas);\nvec2 dUVdyAuto = dFdy(uvAtlas);\nfloat mipMapLevel = calcMipMapLevel(dUVdx * textureSize, dUVdy * textureSize);\nfloat autoMipMapLevel = calcMipMapLevel(dUVdxAuto * textureSize, dUVdyAuto * textureSize);\nreturn texture2D(texture, uvAtlas, mipMapLevel - autoMipMapLevel);\n#endif\n}`);\n}\nexport { t as TextureAtlasLookup };","map":{"version":3,"names":["glsl","e","t","extensions","add","fragment","code","TextureAtlasLookup"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/TextureAtlasLookup.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function t(t){t.extensions.add(\"GL_EXT_shader_texture_lod\"),t.extensions.add(\"GL_OES_standard_derivatives\"),t.fragment.code.add(e`#ifndef GL_EXT_shader_texture_lod\nfloat calcMipMapLevel(const vec2 ddx, const vec2 ddy) {\nfloat deltaMaxSqr = max(dot(ddx, ddx), dot(ddy, ddy));\nreturn max(0.0, 0.5 * log2(deltaMaxSqr));\n}\n#endif\nvec4 textureAtlasLookup(sampler2D texture, vec2 textureSize, vec2 textureCoordinates, vec4 atlasRegion) {\nvec2 atlasScale = atlasRegion.zw - atlasRegion.xy;\nvec2 uvAtlas = fract(textureCoordinates) * atlasScale + atlasRegion.xy;\nfloat maxdUV = 0.125;\nvec2 dUVdx = clamp(dFdx(textureCoordinates), -maxdUV, maxdUV) * atlasScale;\nvec2 dUVdy = clamp(dFdy(textureCoordinates), -maxdUV, maxdUV) * atlasScale;\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DGradEXT(texture, uvAtlas, dUVdx, dUVdy);\n#else\nvec2 dUVdxAuto = dFdx(uvAtlas);\nvec2 dUVdyAuto = dFdy(uvAtlas);\nfloat mipMapLevel = calcMipMapLevel(dUVdx * textureSize, dUVdy * textureSize);\nfloat autoMipMapLevel = calcMipMapLevel(dUVdxAuto * textureSize, dUVdyAuto * textureSize);\nreturn texture2D(texture, uvAtlas, mipMapLevel - autoMipMapLevel);\n#endif\n}`)}export{t as TextureAtlasLookup};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAASC,CAACA,CAACA,CAAC,EAAC;EAACA,CAAC,CAACC,UAAU,CAACC,GAAG,CAAC,2BAA2B,CAAC,EAACF,CAAC,CAACC,UAAU,CAACC,GAAG,CAAC,6BAA6B,CAAC,EAACF,CAAC,CAACG,QAAQ,CAACC,IAAI,CAACF,GAAG,CAACH,CAAE;AAC3L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;AAAA;AAAC,SAAOC,CAAC,IAAIK,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}