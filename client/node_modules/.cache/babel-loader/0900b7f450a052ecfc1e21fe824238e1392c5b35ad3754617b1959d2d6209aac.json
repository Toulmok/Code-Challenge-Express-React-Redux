{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { addCameraPosition as e } from \"./util/View.glsl.js\";\nimport { FloatPassUniform as i } from \"../shaderModules/FloatPassUniform.js\";\nimport { glsl as r } from \"../shaderModules/interfaces.js\";\nfunction o(o, n) {\n  if (!n.screenSizeEnabled) return;\n  const c = o.vertex;\n  e(c, n), c.uniforms.add(new i(\"perScreenPixelRatio\", (e, i) => i.camera.perScreenPixelRatio)), c.uniforms.add(new i(\"screenSizeScale\", e => e.screenSizeScale)), c.code.add(r`float computeRenderPixelSizeAt( vec3 pWorld ){\nvec3 viewForward = - vec3(view[0][2], view[1][2], view[2][2]);\nfloat viewDirectionDistance = abs(dot(viewForward, pWorld - cameraPosition));\nreturn viewDirectionDistance * perScreenPixelRatio;\n}\nvec3 screenSizeScaling(vec3 position, vec3 anchor){\nreturn position * screenSizeScale * computeRenderPixelSizeAt(anchor) + anchor;\n}`);\n}\nexport { o as ScreenSizeScaling };","map":{"version":3,"names":["addCameraPosition","e","FloatPassUniform","i","glsl","r","o","n","screenSizeEnabled","c","vertex","uniforms","add","camera","perScreenPixelRatio","screenSizeScale","code","ScreenSizeScaling"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/ScreenSizeScaling.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{addCameraPosition as e}from\"./util/View.glsl.js\";import{FloatPassUniform as i}from\"../shaderModules/FloatPassUniform.js\";import{glsl as r}from\"../shaderModules/interfaces.js\";function o(o,n){if(!n.screenSizeEnabled)return;const c=o.vertex;e(c,n),c.uniforms.add(new i(\"perScreenPixelRatio\",((e,i)=>i.camera.perScreenPixelRatio))),c.uniforms.add(new i(\"screenSizeScale\",(e=>e.screenSizeScale))),c.code.add(r`float computeRenderPixelSizeAt( vec3 pWorld ){\nvec3 viewForward = - vec3(view[0][2], view[1][2], view[2][2]);\nfloat viewDirectionDistance = abs(dot(viewForward, pWorld - cameraPosition));\nreturn viewDirectionDistance * perScreenPixelRatio;\n}\nvec3 screenSizeScaling(vec3 position, vec3 anchor){\nreturn position * screenSizeScale * computeRenderPixelSizeAt(anchor) + anchor;\n}`)}export{o as ScreenSizeScaling};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,iBAAiB,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,sCAAsC;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,gCAAgC;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,IAAG,CAACA,CAAC,CAACC,iBAAiB,EAAC;EAAO,MAAMC,CAAC,GAACH,CAAC,CAACI,MAAM;EAACT,CAAC,CAACQ,CAAC,EAACF,CAAC,CAAC,EAACE,CAAC,CAACE,QAAQ,CAACC,GAAG,CAAC,IAAIT,CAAC,CAAC,qBAAqB,EAAE,CAACF,CAAC,EAACE,CAAC,KAAGA,CAAC,CAACU,MAAM,CAACC,mBAAmB,CAAE,CAAC,EAACL,CAAC,CAACE,QAAQ,CAACC,GAAG,CAAC,IAAIT,CAAC,CAAC,iBAAiB,EAAEF,CAAC,IAAEA,CAAC,CAACc,eAAe,CAAE,CAAC,EAACN,CAAC,CAACO,IAAI,CAACJ,GAAG,CAACP,CAAE;AAC7Z;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;AAAA;AAAC,SAAOC,CAAC,IAAIW,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}