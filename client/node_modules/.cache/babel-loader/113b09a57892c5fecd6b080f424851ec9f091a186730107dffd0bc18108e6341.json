{"ast":null,"code":"import _toConsumableArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isNone as e, isSome as t } from \"../../../core/maybe.js\";\nimport { polygonCentroid as i, extentCentroid as s } from \"../../../geometry/support/centroid.js\";\nimport { getPolygonExtent as a, getGeometryExtent as r } from \"../../../geometry/support/extentUtils.js\";\nimport { toQuantizationTransform as n } from \"../../../geometry/support/quantizationUtils.js\";\nimport { isValid as o, equals as l } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport u from \"./AttributesBuilder.js\";\nimport { project as c } from \"./projectionSupport.js\";\nimport { makeEdgeCandidate as d, makeVertexCandidate as m } from \"./SnappingCandidate.js\";\nimport { cleanFromGeometryEngine as h, getGeometry as f, transformCentroid as g } from \"./utils.js\";\nimport { isStringField as p } from \"../../support/fieldUtils.js\";\nimport { isNullCountSupported as y, calculateStringStatistics as x, calculateStatistics as I, processSummaryStatisticsResult as T, calculateUniqueValuesCount as V, createUVResult as F, calculateClassBreaks as S, resolveCBResult as _, calculateHistogram as z, getAttributeComparator as v, calculatePercentile as b } from \"../../../statistics/utils.js\";\nimport { loadArcade as R } from \"../../../support/arcadeOnDemand.js\";\nvar A = /*#__PURE__*/function () {\n  function A(e, t, i) {\n    _classCallCheck(this, A);\n    this.items = e, this.query = t, this.geometryType = i.geometryType, this.hasM = i.hasM, this.hasZ = i.hasZ, this.fieldsIndex = i.fieldsIndex, this.objectIdField = i.objectIdField, this.spatialReference = i.spatialReference, this.featureAdapter = i.featureAdapter;\n  }\n  _createClass(A, [{\n    key: \"size\",\n    get: function get() {\n      return this.items.length;\n    }\n  }, {\n    key: \"createQueryResponseForCount\",\n    value: function createQueryResponseForCount() {\n      var e = new u(this.query, this.featureAdapter, this.fieldsIndex);\n      if (!this.query.outStatistics) return e.countDistinctValues(this.items);\n      var _this$query = this.query,\n        t = _this$query.groupByFieldsForStatistics,\n        i = _this$query.having,\n        s = _this$query.outStatistics,\n        a = t === null || t === void 0 ? void 0 : t.length;\n      if (!!!a) return 1;\n      var r = new Map(),\n        n = new Map(),\n        o = new Set();\n      var _iterator = _createForOfIteratorHelper(s),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _l = _step.value;\n          var _s = _l.statisticType,\n            _a = \"exceedslimit\" !== _s ? _l.onStatisticField : void 0;\n          if (!n.has(_a)) {\n            var _i = [];\n            var _iterator2 = _createForOfIteratorHelper(t),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _s2 = _step2.value;\n                var _t = this._getAttributeValues(e, _s2, r);\n                _i.push(_t);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            n.set(_a, this._calculateUniqueValues(_i, e.returnDistinctValues));\n          }\n          var _u = n.get(_a);\n          for (var _t2 in _u) {\n            var _u$_t = _u[_t2],\n              _s3 = _u$_t.data,\n              _a2 = _u$_t.items,\n              _r = _s3.join(\",\");\n            i && !e.validateItems(_a2, i) || o.add(_r);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return o.size;\n    }\n  }, {\n    key: \"createQueryResponse\",\n    value: function () {\n      var _createQueryResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var e, _t3;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.query.outStatistics) {\n                _context.next = 11;\n                break;\n              }\n              if (!this.query.outStatistics.some(function (e) {\n                return \"exceedslimit\" === e.statisticType;\n              })) {\n                _context.next = 5;\n                break;\n              }\n              _context.t0 = this._createExceedsLimitQueryResponse(this.query);\n              _context.next = 8;\n              break;\n            case 5:\n              _context.next = 7;\n              return this._createStatisticsQueryResponse(this.query);\n            case 7:\n              _context.t0 = _context.sent;\n            case 8:\n              e = _context.t0;\n              _context.next = 12;\n              break;\n            case 11:\n              e = this._createFeatureQueryResponse(this.query);\n            case 12:\n              if (this.query.returnQueryGeometry) {\n                _t3 = this.query.geometry;\n                o(this.query.outSR) && !l(_t3.spatialReference, this.query.outSR) ? e.queryGeometry = h(_objectSpread({\n                  spatialReference: this.query.outSR\n                }, c(_t3, _t3.spatialReference, this.query.outSR))) : e.queryGeometry = h(_objectSpread({\n                  spatialReference: this.query.outSR\n                }, _t3));\n              }\n              return _context.abrupt(\"return\", e);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function createQueryResponse() {\n        return _createQueryResponse.apply(this, arguments);\n      }\n      return createQueryResponse;\n    }()\n  }, {\n    key: \"createSnappingResponse\",\n    value: function createSnappingResponse(t, i) {\n      var s = this.featureAdapter,\n        a = N(this.hasZ, this.hasM),\n        r = t.point,\n        n = t.mode,\n        o = \"number\" == typeof t.distance ? t.distance : t.distance.x,\n        l = \"number\" == typeof t.distance ? t.distance : t.distance.y,\n        u = {\n          candidates: []\n        },\n        c = \"esriGeometryPolygon\" === this.geometryType,\n        h = this._getPointCreator(n, this.spatialReference, i),\n        f = new q(null, 0),\n        g = new q(null, 0),\n        p = {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n      var _iterator3 = _createForOfIteratorHelper(this.items),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _y = _step3.value;\n          var _i2 = s.getGeometry(_y);\n          if (e(_i2)) continue;\n          var _n = _i2.coords,\n            _x = _i2.lengths;\n          if (f.coords = _n, g.coords = _n, t.types & D.EDGE) {\n            var _e = 0;\n            for (var _t4 = 0; _t4 < _x.length; _t4++) {\n              var _i3 = _x[_t4];\n              for (var _t5 = 0; _t5 < _i3; _t5++, _e += a) {\n                var _n2 = f;\n                if (_n2.coordsIndex = _e, _t5 !== _i3 - 1) {\n                  var _t6 = g;\n                  _t6.coordsIndex = _e + a;\n                  var _i4 = p;\n                  E(p, r, _n2, _t6);\n                  var _c = (r.x - _i4.x) / o,\n                    _m = (r.y - _i4.y) / l,\n                    _f = _c * _c + _m * _m;\n                  _f <= 1 && u.candidates.push(d(s.getObjectId(_y), h(_i4), Math.sqrt(_f), h(_n2), h(_t6)));\n                }\n              }\n            }\n          }\n          if (t.types & D.VERTEX) {\n            var _e2 = c ? _n.length - a : _n.length;\n            for (var _t7 = 0; _t7 < _e2; _t7 += a) {\n              var _e3 = f;\n              _e3.coordsIndex = _t7;\n              var _i5 = (r.x - _e3.x) / o,\n                _a3 = (r.y - _e3.y) / l,\n                _n3 = _i5 * _i5 + _a3 * _a3;\n              _n3 <= 1 && u.candidates.push(m(s.getObjectId(_y), h(_e3), Math.sqrt(_n3)));\n            }\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return u.candidates.sort(function (e, t) {\n        return e.distance - t.distance;\n      }), u;\n    }\n  }, {\n    key: \"_getPointCreator\",\n    value: function _getPointCreator(e, i, s) {\n      var a = t(s) && !l(i, s) ? function (e) {\n          return c(e, i, s);\n        } : function (e) {\n          return e;\n        },\n        r = this.hasZ,\n        n = 0;\n      return \"3d\" === e ? r ? function (_ref) {\n        var e = _ref.x,\n          t = _ref.y,\n          i = _ref.z;\n        return a({\n          x: e,\n          y: t,\n          z: i\n        });\n      } : function (_ref2) {\n        var e = _ref2.x,\n          t = _ref2.y;\n        return a({\n          x: e,\n          y: t,\n          z: n\n        });\n      } : function (_ref3) {\n        var e = _ref3.x,\n          t = _ref3.y;\n        return a({\n          x: e,\n          y: t\n        });\n      };\n    }\n  }, {\n    key: \"createSummaryStatisticsResponse\",\n    value: function () {\n      var _createSummaryStatisticsResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {\n        var t, i, s, a, r, n, o, l, u, c, d, m, h, f;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              t = e.field;\n              i = e.valueExpression;\n              s = e.normalizationField;\n              a = e.normalizationType;\n              r = e.normalizationTotal;\n              n = e.minValue;\n              o = e.maxValue;\n              l = e.scale;\n              u = this.fieldsIndex.isDateField(t);\n              _context2.next = 11;\n              return this._getDataValues({\n                field: t,\n                valueExpression: i,\n                normalizationField: s,\n                normalizationType: a,\n                normalizationTotal: r,\n                scale: l\n              });\n            case 11:\n              c = _context2.sent;\n              d = y({\n                normalizationType: a,\n                normalizationField: s,\n                minValue: n,\n                maxValue: o\n              });\n              m = this.fieldsIndex.get(t);\n              h = {\n                value: .5,\n                fieldType: m === null || m === void 0 ? void 0 : m.type\n              };\n              f = p(m) ? x({\n                values: c,\n                supportsNullCount: d,\n                percentileParams: h\n              }) : I({\n                values: c,\n                minValue: n,\n                maxValue: o,\n                useSampleStdDev: !a,\n                supportsNullCount: d,\n                percentileParams: h\n              });\n              return _context2.abrupt(\"return\", T(f, u));\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function createSummaryStatisticsResponse(_x2) {\n        return _createSummaryStatisticsResponse.apply(this, arguments);\n      }\n      return createSummaryStatisticsResponse;\n    }()\n  }, {\n    key: \"createUniqueValuesResponse\",\n    value: function () {\n      var _createUniqueValuesResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {\n        var t, i, s, a, r, n, o;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              t = e.field;\n              i = e.valueExpression;\n              s = e.domains;\n              a = e.returnAllCodedValues;\n              r = e.scale;\n              _context3.next = 7;\n              return this._getDataValues({\n                field: t,\n                field2: e.field2,\n                field3: e.field3,\n                fieldDelimiter: e.fieldDelimiter,\n                valueExpression: i,\n                scale: r\n              });\n            case 7:\n              n = _context3.sent;\n              o = V(n);\n              return _context3.abrupt(\"return\", F(o, s, a, e.fieldDelimiter));\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function createUniqueValuesResponse(_x3) {\n        return _createUniqueValuesResponse.apply(this, arguments);\n      }\n      return createUniqueValuesResponse;\n    }()\n  }, {\n    key: \"createClassBreaksResponse\",\n    value: function () {\n      var _createClassBreaksResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {\n        var t, i, s, a, r, n, o, l, u, c, d, m, h;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              t = e.field;\n              i = e.valueExpression;\n              s = e.normalizationField;\n              a = e.normalizationType;\n              r = e.normalizationTotal;\n              n = e.classificationMethod;\n              o = e.standardDeviationInterval;\n              l = e.minValue;\n              u = e.maxValue;\n              c = e.numClasses;\n              d = e.scale;\n              _context4.next = 13;\n              return this._getDataValues({\n                field: t,\n                valueExpression: i,\n                normalizationField: s,\n                normalizationType: a,\n                normalizationTotal: r,\n                scale: d\n              });\n            case 13:\n              m = _context4.sent;\n              h = S(m, {\n                field: t,\n                normalizationField: s,\n                normalizationType: a,\n                normalizationTotal: r,\n                classificationMethod: n,\n                standardDeviationInterval: o,\n                minValue: l,\n                maxValue: u,\n                numClasses: c\n              });\n              return _context4.abrupt(\"return\", _(h, n));\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function createClassBreaksResponse(_x4) {\n        return _createClassBreaksResponse.apply(this, arguments);\n      }\n      return createClassBreaksResponse;\n    }()\n  }, {\n    key: \"createHistogramResponse\",\n    value: function () {\n      var _createHistogramResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {\n        var t, i, s, a, r, n, o, l, u, c, d, m;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              t = e.field;\n              i = e.valueExpression;\n              s = e.normalizationField;\n              a = e.normalizationType;\n              r = e.normalizationTotal;\n              n = e.classificationMethod;\n              o = e.standardDeviationInterval;\n              l = e.minValue;\n              u = e.maxValue;\n              c = e.numBins;\n              d = e.scale;\n              _context5.next = 13;\n              return this._getDataValues({\n                field: t,\n                valueExpression: i,\n                normalizationField: s,\n                normalizationType: a,\n                normalizationTotal: r,\n                scale: d\n              });\n            case 13:\n              m = _context5.sent;\n              return _context5.abrupt(\"return\", z(m, {\n                field: t,\n                normalizationField: s,\n                normalizationType: a,\n                normalizationTotal: r,\n                classificationMethod: n,\n                standardDeviationInterval: o,\n                minValue: l,\n                maxValue: u,\n                numBins: c\n              }));\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function createHistogramResponse(_x5) {\n        return _createHistogramResponse.apply(this, arguments);\n      }\n      return createHistogramResponse;\n    }()\n  }, {\n    key: \"_sortFeatures\",\n    value: function _sortFeatures(e, t, i) {\n      var _this = this;\n      if (e.length > 1 && t && t.length) {\n        var _iterator4 = _createForOfIteratorHelper(t.reverse()),\n          _step4;\n        try {\n          var _loop = function _loop() {\n            var s = _step4.value;\n            var t = s.split(\" \"),\n              a = t[0],\n              r = _this.fieldsIndex.get(a),\n              n = !!t[1] && \"desc\" === t[1].toLowerCase(),\n              o = v(r === null || r === void 0 ? void 0 : r.type, n);\n            e.sort(function (e, t) {\n              var s = i(e, a, r),\n                n = i(t, a, r);\n              return o(s, n);\n            });\n          };\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n    }\n  }, {\n    key: \"_createFeatureQueryResponse\",\n    value: function _createFeatureQueryResponse(e) {\n      var _this2 = this;\n      var t = this.items,\n        i = this.geometryType,\n        s = this.hasM,\n        a = this.hasZ,\n        r = this.objectIdField,\n        o = this.spatialReference,\n        l = e.outFields,\n        u = e.outSR,\n        c = e.quantizationParameters,\n        d = e.resultRecordCount,\n        m = e.resultOffset,\n        f = e.returnZ,\n        g = e.returnM,\n        p = null != d && t.length > (m || 0) + d,\n        y = l && (l.includes(\"*\") ? _toConsumableArray(this.fieldsIndex.fields) : l.map(function (e) {\n          return _this2.fieldsIndex.get(e);\n        }));\n      return {\n        exceededTransferLimit: p,\n        features: this._createFeatures(e, t),\n        fields: y,\n        geometryType: i,\n        hasM: s && g,\n        hasZ: a && f,\n        objectIdFieldName: r,\n        spatialReference: h(u || o),\n        transform: c && n(c) || null\n      };\n    }\n  }, {\n    key: \"_createFeatures\",\n    value: function _createFeatures(e, t) {\n      var i = new u(e, this.featureAdapter, this.fieldsIndex),\n        s = this.hasM,\n        a = this.hasZ,\n        r = e.orderByFields,\n        o = e.quantizationParameters,\n        l = e.returnGeometry,\n        c = e.returnCentroid,\n        d = e.maxAllowableOffset,\n        m = e.resultOffset,\n        h = e.resultRecordCount,\n        _e$returnZ = e.returnZ,\n        p = _e$returnZ === void 0 ? !1 : _e$returnZ,\n        _e$returnM = e.returnM,\n        y = _e$returnM === void 0 ? !1 : _e$returnM,\n        x = a && p,\n        I = s && y;\n      var T = [],\n        V = 0;\n      var F = _toConsumableArray(t);\n      if (this._sortFeatures(F, r, function (e, t, s) {\n        return i.getFieldValue(e, t, s);\n      }), l || c) {\n        var _n4;\n        var _e4 = (_n4 = n(o)) !== null && _n4 !== void 0 ? _n4 : void 0;\n        if (l && !c) {\n          var _iterator5 = _createForOfIteratorHelper(F),\n            _step5;\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var _t8 = _step5.value;\n              T[V++] = {\n                attributes: i.getAttributes(_t8),\n                geometry: f(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(_t8), d, _e4, x, I)\n              };\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n        } else if (!l && c) {\n          var _iterator6 = _createForOfIteratorHelper(F),\n            _step6;\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _t9 = _step6.value;\n              T[V++] = {\n                attributes: i.getAttributes(_t9),\n                centroid: g(this, this.featureAdapter.getCentroid(_t9, this), _e4)\n              };\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        } else {\n          var _iterator7 = _createForOfIteratorHelper(F),\n            _step7;\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var _t10 = _step7.value;\n              T[V++] = {\n                attributes: i.getAttributes(_t10),\n                centroid: g(this, this.featureAdapter.getCentroid(_t10, this), _e4),\n                geometry: f(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(_t10), d, _e4, x, I)\n              };\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n        }\n      } else {\n        var _iterator8 = _createForOfIteratorHelper(F),\n          _step8;\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var _n5 = _step8.value;\n            var _e5 = i.getAttributes(_n5);\n            _e5 && (T[V++] = {\n              attributes: _e5\n            });\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n      }\n      var S = m || 0;\n      if (null != h) {\n        var _e6 = S + h;\n        T = T.slice(S, Math.min(T.length, _e6));\n      }\n      return T;\n    }\n  }, {\n    key: \"_createExceedsLimitQueryResponse\",\n    value: function _createExceedsLimitQueryResponse(e) {\n      var _e$outStatistics;\n      var i = !1,\n        s = Number.POSITIVE_INFINITY,\n        a = Number.POSITIVE_INFINITY,\n        r = Number.POSITIVE_INFINITY;\n      var _iterator9 = _createForOfIteratorHelper((_e$outStatistics = e.outStatistics) !== null && _e$outStatistics !== void 0 ? _e$outStatistics : []),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var _t11 = _step9.value;\n          if (\"exceedslimit\" === _t11.statisticType) {\n            s = null != _t11.maxPointCount ? _t11.maxPointCount : Number.POSITIVE_INFINITY, a = null != _t11.maxRecordCount ? _t11.maxRecordCount : Number.POSITIVE_INFINITY, r = null != _t11.maxVertexCount ? _t11.maxVertexCount : Number.POSITIVE_INFINITY;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      if (\"esriGeometryPoint\" === this.geometryType) i = this.items.length > s;else if (this.items.length > a) i = !0;else {\n        var _e7 = N(this.hasZ, this.hasM),\n          _s4 = this.featureAdapter;\n        i = this.items.reduce(function (e, i) {\n          var a = _s4.getGeometry(i);\n          return e + (t(a) && a.coords.length || 0);\n        }, 0) / _e7 > r;\n      }\n      return {\n        fields: [{\n          name: \"exceedslimit\",\n          type: \"esriFieldTypeInteger\",\n          alias: \"exceedslimit\",\n          sqlType: \"sqlTypeInteger\",\n          domain: null,\n          defaultValue: null\n        }],\n        features: [{\n          attributes: {\n            exceedslimit: Number(i)\n          }\n        }]\n      };\n    }\n  }, {\n    key: \"_createStatisticsQueryResponse\",\n    value: function () {\n      var _createStatisticsQueryResponse2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e) {\n        var _this3 = this;\n        var t, i, s, a, r, n, o, l, c, d, m, h, f, g, p, _iterator10, _step10, _u2, _e8, _l2, _m2, _y2, _x7, _I, _T, _e9, _iterator11, _step11, _t12, _i6, _t13, _loop2, _i7, _yield$this$_getAggre, _e12, _i11, _i12, y;\n        return _regeneratorRuntime().wrap(function _callee6$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              t = {\n                attributes: {}\n              }, i = [], s = new Map(), a = new Map(), r = new Map(), n = new Map(), o = new u(e, this.featureAdapter, this.fieldsIndex), l = e.outStatistics, c = e.groupByFieldsForStatistics, d = e.having, m = e.orderByFields, h = c && c.length, f = !!h, g = f ? c[0] : null, p = f && !this.fieldsIndex.get(g);\n              _iterator10 = _createForOfIteratorHelper(l !== null && l !== void 0 ? l : []);\n              _context7.prev = 2;\n              _iterator10.s();\n            case 4:\n              if ((_step10 = _iterator10.n()).done) {\n                _context7.next = 34;\n                break;\n              }\n              _u2 = _step10.value;\n              _e8 = _u2.outStatisticFieldName, _l2 = _u2.statisticType, _m2 = _u2, _y2 = \"exceedslimit\" !== _l2 ? _u2.onStatisticField : void 0, _x7 = \"percentile_disc\" === _l2 || \"percentile_cont\" === _l2, _I = \"EnvelopeAggregate\" === _l2 || \"CentroidAggregate\" === _l2 || \"ConvexHullAggregate\" === _l2, _T = f && 1 === h && (_y2 === g || p) && \"count\" === _l2;\n              if (!f) {\n                _context7.next = 19;\n                break;\n              }\n              if (!r.has(_y2)) {\n                _e9 = [];\n                _iterator11 = _createForOfIteratorHelper(c);\n                try {\n                  for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                    _t12 = _step11.value;\n                    _i6 = this._getAttributeValues(o, _t12, s);\n                    _e9.push(_i6);\n                  }\n                } catch (err) {\n                  _iterator11.e(err);\n                } finally {\n                  _iterator11.f();\n                }\n                r.set(_y2, this._calculateUniqueValues(_e9, !_I && o.returnDistinctValues));\n              }\n              _t13 = r.get(_y2);\n              _loop2 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop2() {\n                var _t13$_i, a, r, l, u, h, _t14, _yield$_this3$_getAgg, _e10, _i8, _i9, _e11, _t15, _i10;\n                return _regeneratorRuntime().wrap(function _loop2$(_context6) {\n                  while (1) switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _t13$_i = _t13[_i7], a = _t13$_i.count, r = _t13$_i.data, l = _t13$_i.items, u = _t13$_i.itemPositions, h = r.join(\",\");\n                      if (!(!d || o.validateItems(l, d))) {\n                        _context6.next = 18;\n                        break;\n                      }\n                      _t14 = n.get(h) || {\n                        attributes: {}\n                      };\n                      if (!_I) {\n                        _context6.next = 13;\n                        break;\n                      }\n                      _t14.aggregateGeometries || (_t14.aggregateGeometries = {});\n                      _context6.next = 7;\n                      return _this3._getAggregateGeometry(_m2, l);\n                    case 7:\n                      _yield$_this3$_getAgg = _context6.sent;\n                      _e10 = _yield$_this3$_getAgg.aggregateGeometries;\n                      _i8 = _yield$_this3$_getAgg.outStatisticFieldName;\n                      _t14.aggregateGeometries[_i8] = _e10;\n                      _context6.next = 16;\n                      break;\n                    case 13:\n                      _i9 = null;\n                      if (_T) _i9 = a;else {\n                        _e11 = _this3._getAttributeValues(o, _y2, s), _t15 = u.map(function (t) {\n                          return _e11[t];\n                        });\n                        _i9 = _x7 && \"statisticParameters\" in _m2 ? _this3._getPercentileValue(_m2, _t15) : _this3._getStatisticValue(_m2, _t15, null, o.returnDistinctValues);\n                      }\n                      _t14.attributes[_e8] = _i9;\n                    case 16:\n                      _i10 = 0;\n                      c.forEach(function (e, s) {\n                        return _t14.attributes[_this3.fieldsIndex.get(e) ? e : \"EXPR_\" + ++_i10] = r[s];\n                      }), n.set(h, _t14);\n                    case 18:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }, _loop2);\n              });\n              _context7.t0 = _regeneratorRuntime().keys(_t13);\n            case 12:\n              if ((_context7.t1 = _context7.t0()).done) {\n                _context7.next = 17;\n                break;\n              }\n              _i7 = _context7.t1.value;\n              return _context7.delegateYield(_loop2(), \"t2\", 15);\n            case 15:\n              _context7.next = 12;\n              break;\n            case 17:\n              _context7.next = 31;\n              break;\n            case 19:\n              if (!_I) {\n                _context7.next = 29;\n                break;\n              }\n              t.aggregateGeometries || (t.aggregateGeometries = {});\n              _context7.next = 23;\n              return this._getAggregateGeometry(_m2, this.items);\n            case 23:\n              _yield$this$_getAggre = _context7.sent;\n              _e12 = _yield$this$_getAggre.aggregateGeometries;\n              _i11 = _yield$this$_getAggre.outStatisticFieldName;\n              t.aggregateGeometries[_i11] = _e12;\n              _context7.next = 31;\n              break;\n            case 29:\n              _i12 = this._getAttributeValues(o, _y2, s);\n              t.attributes[_e8] = _x7 && \"statisticParameters\" in _m2 ? this._getPercentileValue(_m2, _i12) : this._getStatisticValue(_m2, _i12, a, o.returnDistinctValues);\n            case 31:\n              i.push({\n                name: _e8,\n                alias: _e8,\n                type: \"esriFieldTypeDouble\"\n              });\n            case 32:\n              _context7.next = 4;\n              break;\n            case 34:\n              _context7.next = 39;\n              break;\n            case 36:\n              _context7.prev = 36;\n              _context7.t3 = _context7[\"catch\"](2);\n              _iterator10.e(_context7.t3);\n            case 39:\n              _context7.prev = 39;\n              _iterator10.f();\n              return _context7.finish(39);\n            case 42:\n              y = f ? Array.from(n.values()) : [t];\n              return _context7.abrupt(\"return\", (this._sortFeatures(y, m, function (e, t) {\n                return e.attributes[t];\n              }), {\n                fields: i,\n                features: y\n              }));\n            case 44:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee6, this, [[2, 36, 39, 42]]);\n      }));\n      function _createStatisticsQueryResponse(_x6) {\n        return _createStatisticsQueryResponse2.apply(this, arguments);\n      }\n      return _createStatisticsQueryResponse;\n    }()\n  }, {\n    key: \"_getAggregateGeometry\",\n    value: function () {\n      var _getAggregateGeometry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(e, t) {\n        var n, o, l, u, c, d, m, h, g, p, y, _e13, _e14;\n        return _regeneratorRuntime().wrap(function _callee7$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return import(\"../../../geometry/geometryEngineJSON.js\");\n            case 2:\n              n = _context8.sent;\n              o = e.statisticType;\n              l = e.outStatisticFieldName;\n              u = this.featureAdapter;\n              c = this.spatialReference;\n              d = this.geometryType;\n              m = this.hasZ;\n              h = this.hasM;\n              g = t.map(function (e) {\n                return f(d, m, h, u.getGeometry(e));\n              });\n              p = n.convexHull(c, g, !0)[0];\n              y = {\n                aggregateGeometries: null,\n                outStatisticFieldName: null\n              };\n              if (\"EnvelopeAggregate\" === o) {\n                _e13 = p ? a(p) : r(n.union(c, g));\n                y.aggregateGeometries = _objectSpread(_objectSpread({}, _e13), {}, {\n                  spatialReference: c\n                }), y.outStatisticFieldName = l || \"extent\";\n              } else if (\"CentroidAggregate\" === o) {\n                _e14 = p ? i(p) : s(r(n.union(c, g)));\n                y.aggregateGeometries = {\n                  x: _e14[0],\n                  y: _e14[1],\n                  spatialReference: c\n                }, y.outStatisticFieldName = l || \"centroid\";\n              } else \"ConvexHullAggregate\" === o && (y.aggregateGeometries = p, y.outStatisticFieldName = l || \"convexHull\");\n              return _context8.abrupt(\"return\", y);\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee7, this);\n      }));\n      function _getAggregateGeometry(_x8, _x9) {\n        return _getAggregateGeometry2.apply(this, arguments);\n      }\n      return _getAggregateGeometry;\n    }()\n  }, {\n    key: \"_getStatisticValue\",\n    value: function _getStatisticValue(e, t, i, s) {\n      var a = e.onStatisticField,\n        r = e.statisticType;\n      var n = null;\n      n = i !== null && i !== void 0 && i.has(a) ? i.get(a) : p(this.fieldsIndex.get(a)) ? x({\n        values: t,\n        returnDistinct: s\n      }) : I({\n        values: s ? _toConsumableArray(new Set(t)) : t,\n        minValue: null,\n        maxValue: null,\n        useSampleStdDev: !0\n      }), i && i.set(a, n);\n      return n[\"var\" === r ? \"variance\" : r];\n    }\n  }, {\n    key: \"_getPercentileValue\",\n    value: function _getPercentileValue(e, t) {\n      var i = e.onStatisticField,\n        s = e.statisticParameters,\n        a = e.statisticType,\n        r = s.value,\n        n = s.orderBy,\n        o = this.fieldsIndex.get(i);\n      return b(t, {\n        value: r,\n        orderBy: n,\n        fieldType: o === null || o === void 0 ? void 0 : o.type,\n        isDiscrete: \"percentile_disc\" === a\n      });\n    }\n  }, {\n    key: \"_getAttributeValues\",\n    value: function _getAttributeValues(e, t, i) {\n      if (i.has(t)) return i.get(t);\n      var s = this.fieldsIndex.get(t),\n        a = this.items.map(function (i) {\n          return e.getFieldValue(i, t, s);\n        });\n      return i.set(t, a), a;\n    }\n  }, {\n    key: \"_getAttributeDataValues\",\n    value: function _getAttributeDataValues(e, t) {\n      return this.items.map(function (i) {\n        return e.getDataValue(i, {\n          field: t.field,\n          field2: t.field2,\n          field3: t.field3,\n          fieldDelimiter: t.fieldDelimiter,\n          normalizationField: t.normalizationField,\n          normalizationType: t.normalizationType,\n          normalizationTotal: t.normalizationTotal\n        });\n      });\n    }\n  }, {\n    key: \"_getAttributeExpressionValues\",\n    value: function () {\n      var _getAttributeExpressionValues2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e, t, i) {\n        var _yield$R, s, a, r;\n        return _regeneratorRuntime().wrap(function _callee8$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return R();\n            case 2:\n              _yield$R = _context9.sent;\n              s = _yield$R.arcadeUtils;\n              a = s.createFunction(t);\n              r = i && s.getViewInfo(i);\n              return _context9.abrupt(\"return\", e.getExpressionValues(this.items, a, r, s));\n            case 7:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee8, this);\n      }));\n      function _getAttributeExpressionValues(_x10, _x11, _x12) {\n        return _getAttributeExpressionValues2.apply(this, arguments);\n      }\n      return _getAttributeExpressionValues;\n    }()\n  }, {\n    key: \"_calculateUniqueValues\",\n    value: function _calculateUniqueValues(e, t) {\n      var i = {},\n        s = this.items,\n        a = s.length;\n      for (var _r2 = 0; _r2 < a; _r2++) {\n        var _a4 = s[_r2],\n          _n6 = [];\n        var _iterator12 = _createForOfIteratorHelper(e),\n          _step12;\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var _t16 = _step12.value;\n            _n6.push(_t16[_r2]);\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n        var _o = _n6.join(\",\");\n        null == i[_o] ? i[_o] = {\n          count: 1,\n          data: _n6,\n          items: [_a4],\n          itemPositions: [_r2]\n        } : (t || i[_o].count++, i[_o].items.push(_a4), i[_o].itemPositions.push(_r2));\n      }\n      return i;\n    }\n  }, {\n    key: \"_getDataValues\",\n    value: function () {\n      var _getDataValues2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e) {\n        var t, i, s, a, r, n, o, l;\n        return _regeneratorRuntime().wrap(function _callee9$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              t = new u(this.query, this.featureAdapter, this.fieldsIndex), i = e.valueExpression, s = e.field, a = e.normalizationField, r = e.normalizationType, n = e.normalizationTotal, o = e.scale, l = i ? {\n                viewingMode: \"map\",\n                scale: o,\n                spatialReference: this.query.outSR || this.spatialReference\n              } : null;\n              return _context10.abrupt(\"return\", i ? this._getAttributeExpressionValues(t, i, l) : this._getAttributeDataValues(t, {\n                field: s,\n                field2: e.field2,\n                field3: e.field3,\n                fieldDelimiter: e.fieldDelimiter,\n                normalizationField: a,\n                normalizationType: r,\n                normalizationTotal: n\n              }));\n            case 2:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee9, this);\n      }));\n      function _getDataValues(_x13) {\n        return _getDataValues2.apply(this, arguments);\n      }\n      return _getDataValues;\n    }()\n  }]);\n  return A;\n}();\nfunction E(e, t, i, s) {\n  var a = s.x - i.x,\n    r = s.y - i.y,\n    n = a * a + r * r,\n    o = (t.x - i.x) * a + (t.y - i.y) * r,\n    l = Math.min(1, Math.max(0, o / n));\n  e.x = i.x + a * l, e.y = i.y + r * l;\n}\nfunction N(e, t) {\n  return e ? t ? 4 : 3 : t ? 3 : 2;\n}\nvar D;\n!function (e) {\n  e[e.NONE = 0] = \"NONE\", e[e.EDGE = 1] = \"EDGE\", e[e.VERTEX = 2] = \"VERTEX\";\n}(D || (D = {}));\nvar q = /*#__PURE__*/function () {\n  function q(e, t) {\n    _classCallCheck(this, q);\n    this.coords = e, this.coordsIndex = t;\n  }\n  _createClass(q, [{\n    key: \"x\",\n    get: function get() {\n      return this.coords[this.coordsIndex];\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this.coords[this.coordsIndex + 1];\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this.coords[this.coordsIndex + 2];\n    }\n  }]);\n  return q;\n}();\nexport { A as QueryEngineResult, D as SnappingTypes };","map":{"version":3,"names":["isNone","e","isSome","t","polygonCentroid","i","extentCentroid","s","getPolygonExtent","a","getGeometryExtent","r","toQuantizationTransform","n","isValid","o","equals","l","u","project","c","makeEdgeCandidate","d","makeVertexCandidate","m","cleanFromGeometryEngine","h","getGeometry","f","transformCentroid","g","isStringField","p","isNullCountSupported","y","calculateStringStatistics","x","calculateStatistics","I","processSummaryStatisticsResult","T","calculateUniqueValuesCount","V","createUVResult","F","calculateClassBreaks","S","resolveCBResult","_","calculateHistogram","z","getAttributeComparator","v","calculatePercentile","b","loadArcade","R","A","_classCallCheck","items","query","geometryType","hasM","hasZ","fieldsIndex","objectIdField","spatialReference","featureAdapter","_createClass","key","get","length","value","createQueryResponseForCount","outStatistics","countDistinctValues","_this$query","groupByFieldsForStatistics","having","Map","Set","_iterator","_createForOfIteratorHelper","_step","done","statisticType","onStatisticField","has","_iterator2","_step2","_getAttributeValues","push","err","set","_calculateUniqueValues","returnDistinctValues","_u$_t","data","join","validateItems","add","size","_createQueryResponse","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_t3","wrap","_callee$","_context","prev","next","some","t0","_createExceedsLimitQueryResponse","_createStatisticsQueryResponse","sent","_createFeatureQueryResponse","returnQueryGeometry","geometry","outSR","queryGeometry","_objectSpread","abrupt","stop","createQueryResponse","apply","arguments","createSnappingResponse","N","point","mode","distance","candidates","_getPointCreator","q","_iterator3","_step3","coords","lengths","types","D","EDGE","coordsIndex","E","getObjectId","Math","sqrt","VERTEX","sort","_ref","_ref2","_ref3","_createSummaryStatisticsResponse","_callee2","_callee2$","_context2","field","valueExpression","normalizationField","normalizationType","normalizationTotal","minValue","maxValue","scale","isDateField","_getDataValues","fieldType","type","values","supportsNullCount","percentileParams","useSampleStdDev","createSummaryStatisticsResponse","_x2","_createUniqueValuesResponse","_callee3","_callee3$","_context3","domains","returnAllCodedValues","field2","field3","fieldDelimiter","createUniqueValuesResponse","_x3","_createClassBreaksResponse","_callee4","_callee4$","_context4","classificationMethod","standardDeviationInterval","numClasses","createClassBreaksResponse","_x4","_createHistogramResponse","_callee5","_callee5$","_context5","numBins","createHistogramResponse","_x5","_sortFeatures","_this","_iterator4","reverse","_step4","_loop","split","toLowerCase","_this2","outFields","quantizationParameters","resultRecordCount","resultOffset","returnZ","returnM","includes","_toConsumableArray","fields","map","exceededTransferLimit","features","_createFeatures","objectIdFieldName","transform","orderByFields","returnGeometry","returnCentroid","maxAllowableOffset","_e$returnZ","_e$returnM","getFieldValue","_n4","_iterator5","_step5","attributes","getAttributes","_iterator6","_step6","centroid","getCentroid","_iterator7","_step7","_iterator8","_step8","slice","min","_e$outStatistics","Number","POSITIVE_INFINITY","_iterator9","_step9","maxPointCount","maxRecordCount","maxVertexCount","reduce","name","alias","sqlType","domain","defaultValue","exceedslimit","_createStatisticsQueryResponse2","_callee6","_this3","_iterator10","_step10","_u2","_e8","_l2","_m2","_y2","_x7","_I","_T","_e9","_iterator11","_step11","_t12","_i6","_t13","_loop2","_i7","_yield$this$_getAggre","_e12","_i11","_i12","_callee6$","_context7","outStatisticFieldName","_t13$_i","_t14","_yield$_this3$_getAgg","_e10","_i8","_i9","_e11","_t15","_i10","_loop2$","_context6","count","itemPositions","aggregateGeometries","_getAggregateGeometry","_getPercentileValue","_getStatisticValue","forEach","keys","t1","delegateYield","t3","finish","Array","from","_x6","_getAggregateGeometry2","_callee7","_e13","_e14","_callee7$","_context8","convexHull","union","_x8","_x9","returnDistinct","statisticParameters","orderBy","isDiscrete","_getAttributeDataValues","getDataValue","_getAttributeExpressionValues2","_callee8","_yield$R","_callee8$","_context9","arcadeUtils","createFunction","getViewInfo","getExpressionValues","_getAttributeExpressionValues","_x10","_x11","_x12","_iterator12","_step12","_getDataValues2","_callee9","_callee9$","_context10","viewingMode","_x13","max","NONE","QueryEngineResult","SnappingTypes"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/graphics/data/QueryEngineResult.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as e,isSome as t}from\"../../../core/maybe.js\";import{polygonCentroid as i,extentCentroid as s}from\"../../../geometry/support/centroid.js\";import{getPolygonExtent as a,getGeometryExtent as r}from\"../../../geometry/support/extentUtils.js\";import{toQuantizationTransform as n}from\"../../../geometry/support/quantizationUtils.js\";import{isValid as o,equals as l}from\"../../../geometry/support/spatialReferenceUtils.js\";import u from\"./AttributesBuilder.js\";import{project as c}from\"./projectionSupport.js\";import{makeEdgeCandidate as d,makeVertexCandidate as m}from\"./SnappingCandidate.js\";import{cleanFromGeometryEngine as h,getGeometry as f,transformCentroid as g}from\"./utils.js\";import{isStringField as p}from\"../../support/fieldUtils.js\";import{isNullCountSupported as y,calculateStringStatistics as x,calculateStatistics as I,processSummaryStatisticsResult as T,calculateUniqueValuesCount as V,createUVResult as F,calculateClassBreaks as S,resolveCBResult as _,calculateHistogram as z,getAttributeComparator as v,calculatePercentile as b}from\"../../../statistics/utils.js\";import{loadArcade as R}from\"../../../support/arcadeOnDemand.js\";class A{constructor(e,t,i){this.items=e,this.query=t,this.geometryType=i.geometryType,this.hasM=i.hasM,this.hasZ=i.hasZ,this.fieldsIndex=i.fieldsIndex,this.objectIdField=i.objectIdField,this.spatialReference=i.spatialReference,this.featureAdapter=i.featureAdapter}get size(){return this.items.length}createQueryResponseForCount(){const e=new u(this.query,this.featureAdapter,this.fieldsIndex);if(!this.query.outStatistics)return e.countDistinctValues(this.items);const{groupByFieldsForStatistics:t,having:i,outStatistics:s}=this.query,a=t?.length;if(!!!a)return 1;const r=new Map,n=new Map,o=new Set;for(const l of s){const{statisticType:s}=l,a=\"exceedslimit\"!==s?l.onStatisticField:void 0;if(!n.has(a)){const i=[];for(const s of t){const t=this._getAttributeValues(e,s,r);i.push(t)}n.set(a,this._calculateUniqueValues(i,e.returnDistinctValues))}const u=n.get(a);for(const t in u){const{data:s,items:a}=u[t],r=s.join(\",\");i&&!e.validateItems(a,i)||o.add(r)}}return o.size}async createQueryResponse(){let e;if(this.query.outStatistics){e=this.query.outStatistics.some((e=>\"exceedslimit\"===e.statisticType))?this._createExceedsLimitQueryResponse(this.query):await this._createStatisticsQueryResponse(this.query)}else e=this._createFeatureQueryResponse(this.query);if(this.query.returnQueryGeometry){const t=this.query.geometry;o(this.query.outSR)&&!l(t.spatialReference,this.query.outSR)?e.queryGeometry=h({spatialReference:this.query.outSR,...c(t,t.spatialReference,this.query.outSR)}):e.queryGeometry=h({spatialReference:this.query.outSR,...t})}return e}createSnappingResponse(t,i){const s=this.featureAdapter,a=N(this.hasZ,this.hasM),{point:r,mode:n}=t,o=\"number\"==typeof t.distance?t.distance:t.distance.x,l=\"number\"==typeof t.distance?t.distance:t.distance.y,u={candidates:[]},c=\"esriGeometryPolygon\"===this.geometryType,h=this._getPointCreator(n,this.spatialReference,i),f=new q(null,0),g=new q(null,0),p={x:0,y:0,z:0};for(const y of this.items){const i=s.getGeometry(y);if(e(i))continue;const{coords:n,lengths:x}=i;if(f.coords=n,g.coords=n,t.types&D.EDGE){let e=0;for(let t=0;t<x.length;t++){const i=x[t];for(let t=0;t<i;t++,e+=a){const n=f;if(n.coordsIndex=e,t!==i-1){const t=g;t.coordsIndex=e+a;const i=p;E(p,r,n,t);const c=(r.x-i.x)/o,m=(r.y-i.y)/l,f=c*c+m*m;f<=1&&u.candidates.push(d(s.getObjectId(y),h(i),Math.sqrt(f),h(n),h(t)))}}}}if(t.types&D.VERTEX){const e=c?n.length-a:n.length;for(let t=0;t<e;t+=a){const e=f;e.coordsIndex=t;const i=(r.x-e.x)/o,a=(r.y-e.y)/l,n=i*i+a*a;n<=1&&u.candidates.push(m(s.getObjectId(y),h(e),Math.sqrt(n)))}}}return u.candidates.sort(((e,t)=>e.distance-t.distance)),u}_getPointCreator(e,i,s){const a=t(s)&&!l(i,s)?e=>c(e,i,s):e=>e,{hasZ:r}=this,n=0;return\"3d\"===e?r?({x:e,y:t,z:i})=>a({x:e,y:t,z:i}):({x:e,y:t})=>a({x:e,y:t,z:n}):({x:e,y:t})=>a({x:e,y:t})}async createSummaryStatisticsResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,minValue:n,maxValue:o,scale:l}=e,u=this.fieldsIndex.isDateField(t),c=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:l}),d=y({normalizationType:a,normalizationField:s,minValue:n,maxValue:o}),m=this.fieldsIndex.get(t),h={value:.5,fieldType:m?.type},f=p(m)?x({values:c,supportsNullCount:d,percentileParams:h}):I({values:c,minValue:n,maxValue:o,useSampleStdDev:!a,supportsNullCount:d,percentileParams:h});return T(f,u)}async createUniqueValuesResponse(e){const{field:t,valueExpression:i,domains:s,returnAllCodedValues:a,scale:r}=e,n=await this._getDataValues({field:t,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,valueExpression:i,scale:r}),o=V(n);return F(o,s,a,e.fieldDelimiter)}async createClassBreaksResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c,scale:d}=e,m=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:d}),h=S(m,{field:t,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c});return _(h,n)}async createHistogramResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c,scale:d}=e,m=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:d});return z(m,{field:t,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c})}_sortFeatures(e,t,i){if(e.length>1&&t&&t.length)for(const s of t.reverse()){const t=s.split(\" \"),a=t[0],r=this.fieldsIndex.get(a),n=!!t[1]&&\"desc\"===t[1].toLowerCase(),o=v(r?.type,n);e.sort(((e,t)=>{const s=i(e,a,r),n=i(t,a,r);return o(s,n)}))}}_createFeatureQueryResponse(e){const t=this.items,{geometryType:i,hasM:s,hasZ:a,objectIdField:r,spatialReference:o}=this,{outFields:l,outSR:u,quantizationParameters:c,resultRecordCount:d,resultOffset:m,returnZ:f,returnM:g}=e,p=null!=d&&t.length>(m||0)+d,y=l&&(l.includes(\"*\")?[...this.fieldsIndex.fields]:l.map((e=>this.fieldsIndex.get(e))));return{exceededTransferLimit:p,features:this._createFeatures(e,t),fields:y,geometryType:i,hasM:s&&g,hasZ:a&&f,objectIdFieldName:r,spatialReference:h(u||o),transform:c&&n(c)||null}}_createFeatures(e,t){const i=new u(e,this.featureAdapter,this.fieldsIndex),{hasM:s,hasZ:a}=this,{orderByFields:r,quantizationParameters:o,returnGeometry:l,returnCentroid:c,maxAllowableOffset:d,resultOffset:m,resultRecordCount:h,returnZ:p=!1,returnM:y=!1}=e,x=a&&p,I=s&&y;let T=[],V=0;const F=[...t];if(this._sortFeatures(F,r,((e,t,s)=>i.getFieldValue(e,t,s))),l||c){const e=n(o)??void 0;if(l&&!c)for(const t of F)T[V++]={attributes:i.getAttributes(t),geometry:f(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,x,I)};else if(!l&&c)for(const t of F)T[V++]={attributes:i.getAttributes(t),centroid:g(this,this.featureAdapter.getCentroid(t,this),e)};else for(const t of F)T[V++]={attributes:i.getAttributes(t),centroid:g(this,this.featureAdapter.getCentroid(t,this),e),geometry:f(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,x,I)}}else for(const n of F){const e=i.getAttributes(n);e&&(T[V++]={attributes:e})}const S=m||0;if(null!=h){const e=S+h;T=T.slice(S,Math.min(T.length,e))}return T}_createExceedsLimitQueryResponse(e){let i=!1,s=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY;for(const t of e.outStatistics??[])if(\"exceedslimit\"===t.statisticType){s=null!=t.maxPointCount?t.maxPointCount:Number.POSITIVE_INFINITY,a=null!=t.maxRecordCount?t.maxRecordCount:Number.POSITIVE_INFINITY,r=null!=t.maxVertexCount?t.maxVertexCount:Number.POSITIVE_INFINITY;break}if(\"esriGeometryPoint\"===this.geometryType)i=this.items.length>s;else if(this.items.length>a)i=!0;else{const e=N(this.hasZ,this.hasM),s=this.featureAdapter;i=this.items.reduce(((e,i)=>{const a=s.getGeometry(i);return e+(t(a)&&a.coords.length||0)}),0)/e>r}return{fields:[{name:\"exceedslimit\",type:\"esriFieldTypeInteger\",alias:\"exceedslimit\",sqlType:\"sqlTypeInteger\",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(i)}}]}}async _createStatisticsQueryResponse(e){const t={attributes:{}},i=[],s=new Map,a=new Map,r=new Map,n=new Map,o=new u(e,this.featureAdapter,this.fieldsIndex),l=e.outStatistics,{groupByFieldsForStatistics:c,having:d,orderByFields:m}=e,h=c&&c.length,f=!!h,g=f?c[0]:null,p=f&&!this.fieldsIndex.get(g);for(const u of l??[]){const{outStatisticFieldName:e,statisticType:l}=u,m=u,y=\"exceedslimit\"!==l?u.onStatisticField:void 0,x=\"percentile_disc\"===l||\"percentile_cont\"===l,I=\"EnvelopeAggregate\"===l||\"CentroidAggregate\"===l||\"ConvexHullAggregate\"===l,T=f&&1===h&&(y===g||p)&&\"count\"===l;if(f){if(!r.has(y)){const e=[];for(const t of c){const i=this._getAttributeValues(o,t,s);e.push(i)}r.set(y,this._calculateUniqueValues(e,!I&&o.returnDistinctValues))}const t=r.get(y);for(const i in t){const{count:a,data:r,items:l,itemPositions:u}=t[i],h=r.join(\",\");if(!d||o.validateItems(l,d)){const t=n.get(h)||{attributes:{}};if(I){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:i}=await this._getAggregateGeometry(m,l);t.aggregateGeometries[i]=e}else{let i=null;if(T)i=a;else{const e=this._getAttributeValues(o,y,s),t=u.map((t=>e[t]));i=x&&\"statisticParameters\"in m?this._getPercentileValue(m,t):this._getStatisticValue(m,t,null,o.returnDistinctValues)}t.attributes[e]=i}let i=0;c.forEach(((e,s)=>t.attributes[this.fieldsIndex.get(e)?e:\"EXPR_\"+ ++i]=r[s])),n.set(h,t)}}}else if(I){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:i}=await this._getAggregateGeometry(m,this.items);t.aggregateGeometries[i]=e}else{const i=this._getAttributeValues(o,y,s);t.attributes[e]=x&&\"statisticParameters\"in m?this._getPercentileValue(m,i):this._getStatisticValue(m,i,a,o.returnDistinctValues)}i.push({name:e,alias:e,type:\"esriFieldTypeDouble\"})}const y=f?Array.from(n.values()):[t];return this._sortFeatures(y,m,((e,t)=>e.attributes[t])),{fields:i,features:y}}async _getAggregateGeometry(e,t){const n=await import(\"../../../geometry/geometryEngineJSON.js\"),{statisticType:o,outStatisticFieldName:l}=e,{featureAdapter:u,spatialReference:c,geometryType:d,hasZ:m,hasM:h}=this,g=t.map((e=>f(d,m,h,u.getGeometry(e)))),p=n.convexHull(c,g,!0)[0],y={aggregateGeometries:null,outStatisticFieldName:null};if(\"EnvelopeAggregate\"===o){const e=p?a(p):r(n.union(c,g));y.aggregateGeometries={...e,spatialReference:c},y.outStatisticFieldName=l||\"extent\"}else if(\"CentroidAggregate\"===o){const e=p?i(p):s(r(n.union(c,g)));y.aggregateGeometries={x:e[0],y:e[1],spatialReference:c},y.outStatisticFieldName=l||\"centroid\"}else\"ConvexHullAggregate\"===o&&(y.aggregateGeometries=p,y.outStatisticFieldName=l||\"convexHull\");return y}_getStatisticValue(e,t,i,s){const{onStatisticField:a,statisticType:r}=e;let n=null;n=i?.has(a)?i.get(a):p(this.fieldsIndex.get(a))?x({values:t,returnDistinct:s}):I({values:s?[...new Set(t)]:t,minValue:null,maxValue:null,useSampleStdDev:!0}),i&&i.set(a,n);return n[\"var\"===r?\"variance\":r]}_getPercentileValue(e,t){const{onStatisticField:i,statisticParameters:s,statisticType:a}=e,{value:r,orderBy:n}=s,o=this.fieldsIndex.get(i);return b(t,{value:r,orderBy:n,fieldType:o?.type,isDiscrete:\"percentile_disc\"===a})}_getAttributeValues(e,t,i){if(i.has(t))return i.get(t);const s=this.fieldsIndex.get(t),a=this.items.map((i=>e.getFieldValue(i,t,s)));return i.set(t,a),a}_getAttributeDataValues(e,t){return this.items.map((i=>e.getDataValue(i,{field:t.field,field2:t.field2,field3:t.field3,fieldDelimiter:t.fieldDelimiter,normalizationField:t.normalizationField,normalizationType:t.normalizationType,normalizationTotal:t.normalizationTotal})))}async _getAttributeExpressionValues(e,t,i){const{arcadeUtils:s}=await R(),a=s.createFunction(t),r=i&&s.getViewInfo(i);return e.getExpressionValues(this.items,a,r,s)}_calculateUniqueValues(e,t){const i={},s=this.items,a=s.length;for(let r=0;r<a;r++){const a=s[r],n=[];for(const t of e)n.push(t[r]);const o=n.join(\",\");null==i[o]?i[o]={count:1,data:n,items:[a],itemPositions:[r]}:(t||i[o].count++,i[o].items.push(a),i[o].itemPositions.push(r))}return i}async _getDataValues(e){const t=new u(this.query,this.featureAdapter,this.fieldsIndex),{valueExpression:i,field:s,normalizationField:a,normalizationType:r,normalizationTotal:n,scale:o}=e,l=i?{viewingMode:\"map\",scale:o,spatialReference:this.query.outSR||this.spatialReference}:null;return i?this._getAttributeExpressionValues(t,i,l):this._getAttributeDataValues(t,{field:s,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,normalizationField:a,normalizationType:r,normalizationTotal:n})}}function E(e,t,i,s){const a=s.x-i.x,r=s.y-i.y,n=a*a+r*r,o=(t.x-i.x)*a+(t.y-i.y)*r,l=Math.min(1,Math.max(0,o/n));e.x=i.x+a*l,e.y=i.y+r*l}function N(e,t){return e?t?4:3:t?3:2}var D;!function(e){e[e.NONE=0]=\"NONE\",e[e.EDGE=1]=\"EDGE\",e[e.VERTEX=2]=\"VERTEX\"}(D||(D={}));class q{constructor(e,t){this.coords=e,this.coordsIndex=t}get x(){return this.coords[this.coordsIndex]}get y(){return this.coords[this.coordsIndex+1]}get z(){return this.coords[this.coordsIndex+2]}}export{A as QueryEngineResult,D as SnappingTypes};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}