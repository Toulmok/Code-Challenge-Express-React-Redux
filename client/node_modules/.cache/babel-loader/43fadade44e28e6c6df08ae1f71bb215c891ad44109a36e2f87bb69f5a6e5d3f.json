{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../core/Logger.js\";\nimport { getOrCreateMapValue as t } from \"../../../../../core/MapUtils.js\";\nimport { applySome as s, isSome as r, isNone as i } from \"../../../../../core/maybe.js\";\nimport { j as a } from \"../../../../../chunks/quat.js\";\nimport { I as o, b as n } from \"../../../../../chunks/quatf64.js\";\nimport { k as l } from \"../../../../../chunks/vec3.js\";\nimport { Z as c, a as h, O as f } from \"../../../../../chunks/vec3f64.js\";\nimport u from \"../../../MeshMaterialMetallicRoughness.js\";\nimport p from \"../../../MeshTransform.js\";\nimport { ungeoreferenceByTransform as d } from \"../../georeference.js\";\nimport { Buffer as m } from \"./buffer.js\";\nimport { computeOrigin as g, smoothNormals as _ } from \"./geometry.js\";\nimport { BufferOutputType as x, ImageOutputType as A, AttributeType as T, TargetBuffer as R, AlphaMode as b } from \"./types.js\";\nimport { imageToArrayBuffer as E, imageToDataURI as M } from \"./imageutils.js\";\nimport { isEncodedMeshTexture as O } from \"../../../../../views/3d/glTF/internal/resourceUtils.js\";\nimport { DataType as w, TextureWrapMode as N } from \"../../../../../views/webgl/enums.js\";\nconst B = e.getLogger(\"gltf\");\nclass C {\n  constructor(e, t, s) {\n    this.params = {}, this._materialMap = new Array(), this._imageMap = new Map(), this._textureMap = new Map(), this.gltf = {\n      asset: {\n        version: \"2.0\",\n        copyright: e.copyright,\n        generator: e.generator\n      },\n      extras: {\n        options: t,\n        binChunkBuffer: null,\n        promises: []\n      }\n    }, s && (this.params = s), this._addScenes(e);\n  }\n  _addScenes(e) {\n    this.gltf.scene = e.defaultScene;\n    const t = this.gltf.extras,\n      s = t.options.bufferOutputType === x.GLB || t.options.imageOutputType === A.GLB;\n    s && (t.binChunkBuffer = new m(this.gltf)), e.forEachScene(e => {\n      this._addScene(e);\n    }), s && t.binChunkBuffer.finalize();\n  }\n  _addScene(e) {\n    this.gltf.scenes || (this.gltf.scenes = []);\n    const t = {};\n    e.name && (t.name = e.name), e.forEachNode(e => {\n      t.nodes || (t.nodes = []);\n      const s = this._addNode(e);\n      t.nodes.push(s);\n    }), this.gltf.scenes.push(t);\n  }\n  _addNode(e) {\n    this.gltf.nodes || (this.gltf.nodes = []);\n    const t = {};\n    e.name && (t.name = e.name);\n    const s = e.translation;\n    l(s, c) || (t.translation = h(s));\n    const r = e.rotation;\n    a(r, o) || (t.rotation = n(r));\n    const i = e.scale;\n    l(i, f) || (t.scale = h(i)), e.mesh && e.mesh.vertexAttributes.position ? t.mesh = this._addMesh(e.mesh) : e.forEachNode(e => {\n      t.children || (t.children = []);\n      const s = this._addNode(e);\n      t.children.push(s);\n    });\n    const u = this.gltf.nodes.length;\n    return this.gltf.nodes.push(t), u;\n  }\n  _addMesh(e) {\n    this.gltf.meshes || (this.gltf.meshes = []);\n    const t = {\n        primitives: []\n      },\n      i = this.gltf.extras,\n      a = i.options.bufferOutputType === x.GLB;\n    let o;\n    o = a ? i.binChunkBuffer : new m(this.gltf), this.params.origin || (this.params.origin = g(e));\n    const n = this.params.ignoreLocalTransform ? s(e.transform, e => new p({\n        origin: [e.origin[0], e.origin[1], e.origin[2]],\n        geographic: !1\n      })) : e.transform,\n      l = d(e.vertexAttributes, n, this.params.origin, {\n        geographic: this.params.geographic,\n        unit: \"meters\"\n      });\n    _(e, l), this._flipYZAxis(l);\n    const c = o.addBufferView(w.FLOAT, T.VEC3, R.ARRAY_BUFFER);\n    let h, f, u, A;\n    l.normal && (h = o.addBufferView(w.FLOAT, T.VEC3, R.ARRAY_BUFFER)), e.vertexAttributes.uv && (f = o.addBufferView(w.FLOAT, T.VEC2, R.ARRAY_BUFFER)), l.tangent && (u = o.addBufferView(w.FLOAT, T.VEC4, R.ARRAY_BUFFER)), e.vertexAttributes.color && (A = o.addBufferView(w.UNSIGNED_BYTE, T.VEC4, R.ARRAY_BUFFER)), c.startAccessor(\"POSITION\"), h && h.startAccessor(\"NORMAL\"), f && f.startAccessor(\"TEXCOORD_0\"), u && u.startAccessor(\"TANGENT\"), A && A.startAccessor(\"COLOR_0\");\n    const b = l.position.length / 3,\n      {\n        position: E,\n        normal: M,\n        tangent: O\n      } = l,\n      {\n        color: N,\n        uv: B\n      } = e.vertexAttributes;\n    for (let s = 0; s < b; ++s) c.push(E[3 * s + 0]), c.push(E[3 * s + 1]), c.push(E[3 * s + 2]), h && r(M) && (h.push(M[3 * s + 0]), h.push(M[3 * s + 1]), h.push(M[3 * s + 2])), f && r(B) && (f.push(B[2 * s + 0]), f.push(B[2 * s + 1])), u && r(O) && (u.push(O[4 * s + 0]), u.push(O[4 * s + 1]), u.push(O[4 * s + 2]), u.push(O[4 * s + 3])), A && r(N) && (A.push(N[4 * s + 0]), A.push(N[4 * s + 1]), A.push(N[4 * s + 2]), A.push(N[4 * s + 3]));\n    const C = c.endAccessor(),\n      I = this._addAccessor(c.index, C);\n    let L, v, y, F, S;\n    if (h) {\n      const e = h.endAccessor();\n      L = this._addAccessor(h.index, e);\n    }\n    if (f) {\n      const e = f.endAccessor();\n      v = this._addAccessor(f.index, e);\n    }\n    if (u) {\n      const e = u.endAccessor();\n      y = this._addAccessor(u.index, e);\n    }\n    if (A) {\n      const e = A.endAccessor();\n      F = this._addAccessor(A.index, e);\n    }\n    e.components && e.components.length > 0 && e.components[0].faces ? (S = o.addBufferView(w.UNSIGNED_INT, T.SCALAR, R.ELEMENT_ARRAY_BUFFER), this._addMeshVertexIndexed(S, e.components, t, I, L, v, y, F)) : this._addMeshVertexNonIndexed(e.components, t, I, L, v, y, F), c.finalize(), h && h.finalize(), f && f.finalize(), u && u.finalize(), S && S.finalize(), A && A.finalize(), a || o.finalize();\n    const k = this.gltf.meshes.length;\n    return this.gltf.meshes.push(t), k;\n  }\n  _flipYZAxis(_ref) {\n    let {\n      position: e,\n      normal: t,\n      tangent: s\n    } = _ref;\n    this._flipYZBuffer(e, 3), this._flipYZBuffer(t, 3), this._flipYZBuffer(s, 4);\n  }\n  _flipYZBuffer(e, t) {\n    if (!i(e)) for (let s = 1, r = 2; s < e.length; s += t, r += t) {\n      const t = e[s],\n        i = e[r];\n      e[s] = i, e[r] = -t;\n    }\n  }\n  _addMaterial(e) {\n    if (null === e) return;\n    const t = this._materialMap.indexOf(e);\n    if (-1 !== t) return t;\n    this.gltf.materials || (this.gltf.materials = []);\n    const s = {};\n    switch (e.alphaMode) {\n      case \"mask\":\n        s.alphaMode = b.MASK;\n        break;\n      case \"auto\":\n      case \"blend\":\n        s.alphaMode = b.BLEND;\n    }\n    .5 !== e.alphaCutoff && (s.alphaCutoff = e.alphaCutoff), e.doubleSided && (s.doubleSided = e.doubleSided), s.pbrMetallicRoughness = {};\n    const i = e => e ** 2.1,\n      a = e => {\n        const t = e.toRgba();\n        return t[0] = i(t[0] / 255), t[1] = i(t[1] / 255), t[2] = i(t[2] / 255), t;\n      };\n    if (r(e.color) && (s.pbrMetallicRoughness.baseColorFactor = a(e.color)), r(e.colorTexture) && (s.pbrMetallicRoughness.baseColorTexture = {\n      index: this._addTexture(e.colorTexture)\n    }), r(e.normalTexture) && (s.normalTexture = {\n      index: this._addTexture(e.normalTexture)\n    }), e instanceof u) {\n      if (r(e.emissiveTexture) && (s.emissiveTexture = {\n        index: this._addTexture(e.emissiveTexture)\n      }), r(e.emissiveColor)) {\n        const t = a(e.emissiveColor);\n        s.emissiveFactor = [t[0], t[1], t[2]];\n      }\n      r(e.occlusionTexture) && (s.occlusionTexture = {\n        index: this._addTexture(e.occlusionTexture)\n      }), r(e.metallicRoughnessTexture) && (s.pbrMetallicRoughness.metallicRoughnessTexture = {\n        index: this._addTexture(e.metallicRoughnessTexture)\n      }), s.pbrMetallicRoughness.metallicFactor = e.metallic, s.pbrMetallicRoughness.roughnessFactor = e.roughness;\n    } else s.pbrMetallicRoughness.metallicFactor = 1, s.pbrMetallicRoughness.roughnessFactor = 1, B.warnOnce(\"Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.\");\n    const o = this.gltf.materials.length;\n    return this.gltf.materials.push(s), this._materialMap.push(e), o;\n  }\n  _addTexture(e) {\n    const s = this.gltf.textures ?? [];\n    return this.gltf.textures = s, t(this._textureMap, e, () => {\n      const t = {\n          sampler: this._addSampler(e),\n          source: this._addImage(e)\n        },\n        r = s.length;\n      return s.push(t), r;\n    });\n  }\n  _addImage(e) {\n    const t = this._imageMap.get(e);\n    if (null != t) return t;\n    this.gltf.images || (this.gltf.images = []);\n    const s = {};\n    if (e.url) s.uri = e.url;else {\n      const t = e.data;\n      s.extras = t;\n      for (let e = 0; e < this.gltf.images.length; ++e) if (t === this.gltf.images[e].extras) return e;\n      const i = this.gltf.extras;\n      switch (i.options.imageOutputType) {\n        case A.GLB:\n          {\n            const e = i.binChunkBuffer.addBufferView(w.UNSIGNED_BYTE, T.SCALAR);\n            if (O(t)) r(t.data) && e.writeOutToBuffer(t.data, 0);else {\n              const r = E(t).then(_ref2 => {\n                let {\n                  data: e,\n                  type: t\n                } = _ref2;\n                return s.mimeType = t, e;\n              });\n              e.writeAsync(r).then(() => {\n                e.finalize();\n              });\n            }\n            s.bufferView = e.index;\n            break;\n          }\n        case A.DataURI:\n          if (O(t)) {\n            B.warnOnce(\"Image export for basis compressed textures not available.\");\n            break;\n          }\n          s.uri = M(t);\n          break;\n        default:\n          if (O(t)) {\n            B.warnOnce(\"Image export for basis compressed textures not available.\");\n            break;\n          }\n          i.promises.push(E(t).then(_ref3 => {\n            let {\n              data: e,\n              type: t\n            } = _ref3;\n            s.uri = e, s.mimeType = t;\n          }));\n      }\n    }\n    const i = this.gltf.images.length;\n    return this.gltf.images.push(s), this._imageMap.set(e, i), i;\n  }\n  _addSampler(e) {\n    this.gltf.samplers || (this.gltf.samplers = []);\n    let t = N.REPEAT,\n      s = N.REPEAT;\n    if (\"string\" == typeof e.wrap) switch (e.wrap) {\n      case \"clamp\":\n        t = N.CLAMP_TO_EDGE, s = N.CLAMP_TO_EDGE;\n        break;\n      case \"mirror\":\n        t = N.MIRRORED_REPEAT, s = N.MIRRORED_REPEAT;\n    } else {\n      switch (e.wrap.vertical) {\n        case \"clamp\":\n          s = N.CLAMP_TO_EDGE;\n          break;\n        case \"mirror\":\n          s = N.MIRRORED_REPEAT;\n      }\n      switch (e.wrap.horizontal) {\n        case \"clamp\":\n          t = N.CLAMP_TO_EDGE;\n          break;\n        case \"mirror\":\n          t = N.MIRRORED_REPEAT;\n      }\n    }\n    const r = {\n      wrapS: t,\n      wrapT: s\n    };\n    for (let a = 0; a < this.gltf.samplers.length; ++a) if (JSON.stringify(r) === JSON.stringify(this.gltf.samplers[a])) return a;\n    const i = this.gltf.samplers.length;\n    return this.gltf.samplers.push(r), i;\n  }\n  _addAccessor(e, t) {\n    this.gltf.accessors || (this.gltf.accessors = []);\n    const s = {\n      bufferView: e,\n      byteOffset: t.byteOffset,\n      componentType: t.componentType,\n      count: t.count,\n      type: t.type,\n      min: t.min,\n      max: t.max,\n      name: t.name\n    };\n    t.normalized && (s.normalized = !0);\n    const r = this.gltf.accessors.length;\n    return this.gltf.accessors.push(s), r;\n  }\n  _addMeshVertexIndexed(e, t, s, r, i, a, o, n) {\n    for (const l of t) {\n      e.startAccessor(\"INDICES\");\n      for (let s = 0; s < l.faces.length; ++s) e.push(l.faces[s]);\n      const t = e.endAccessor(),\n        c = {\n          attributes: {\n            POSITION: r\n          },\n          indices: this._addAccessor(e.index, t),\n          material: this._addMaterial(l.material)\n        };\n      i && \"flat\" !== l.shading && (c.attributes.NORMAL = i), a && (c.attributes.TEXCOORD_0 = a), o && \"flat\" !== l.shading && (c.attributes.TANGENT = o), n && (c.attributes.COLOR_0 = n), s.primitives.push(c);\n    }\n  }\n  _addMeshVertexNonIndexed(e, t, s, r, i, a, o) {\n    const n = {\n      attributes: {\n        POSITION: s\n      }\n    };\n    r && (n.attributes.NORMAL = r), i && (n.attributes.TEXCOORD_0 = i), a && (n.attributes.TANGENT = a), o && (n.attributes.COLOR_0 = o), e && (n.material = this._addMaterial(e[0].material)), t.primitives.push(n);\n  }\n}\nexport { C as GLTF };","map":{"version":3,"names":["e","getOrCreateMapValue","t","applySome","s","isSome","r","isNone","i","j","a","I","o","b","n","k","l","Z","c","h","O","f","u","p","ungeoreferenceByTransform","d","Buffer","m","computeOrigin","g","smoothNormals","_","BufferOutputType","x","ImageOutputType","A","AttributeType","T","TargetBuffer","R","AlphaMode","imageToArrayBuffer","E","imageToDataURI","M","isEncodedMeshTexture","DataType","w","TextureWrapMode","N","B","getLogger","C","constructor","params","_materialMap","Array","_imageMap","Map","_textureMap","gltf","asset","version","copyright","generator","extras","options","binChunkBuffer","promises","_addScenes","scene","defaultScene","bufferOutputType","GLB","imageOutputType","forEachScene","_addScene","finalize","scenes","name","forEachNode","nodes","_addNode","push","translation","rotation","scale","mesh","vertexAttributes","position","_addMesh","children","length","meshes","primitives","origin","ignoreLocalTransform","transform","geographic","unit","_flipYZAxis","addBufferView","FLOAT","VEC3","ARRAY_BUFFER","normal","uv","VEC2","tangent","VEC4","color","UNSIGNED_BYTE","startAccessor","endAccessor","_addAccessor","index","L","v","y","F","S","components","faces","UNSIGNED_INT","SCALAR","ELEMENT_ARRAY_BUFFER","_addMeshVertexIndexed","_addMeshVertexNonIndexed","_ref","_flipYZBuffer","_addMaterial","indexOf","materials","alphaMode","MASK","BLEND","alphaCutoff","doubleSided","pbrMetallicRoughness","toRgba","baseColorFactor","colorTexture","baseColorTexture","_addTexture","normalTexture","emissiveTexture","emissiveColor","emissiveFactor","occlusionTexture","metallicRoughnessTexture","metallicFactor","metallic","roughnessFactor","roughness","warnOnce","textures","sampler","_addSampler","source","_addImage","get","images","url","uri","data","writeOutToBuffer","then","_ref2","type","mimeType","writeAsync","bufferView","DataURI","_ref3","set","samplers","REPEAT","wrap","CLAMP_TO_EDGE","MIRRORED_REPEAT","vertical","horizontal","wrapS","wrapT","JSON","stringify","accessors","byteOffset","componentType","count","min","max","normalized","attributes","POSITION","indices","material","shading","NORMAL","TEXCOORD_0","TANGENT","COLOR_0","GLTF"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/geometry/support/meshUtils/exporters/gltf/gltf.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Logger.js\";import{getOrCreateMapValue as t}from\"../../../../../core/MapUtils.js\";import{applySome as s,isSome as r,isNone as i}from\"../../../../../core/maybe.js\";import{j as a}from\"../../../../../chunks/quat.js\";import{I as o,b as n}from\"../../../../../chunks/quatf64.js\";import{k as l}from\"../../../../../chunks/vec3.js\";import{Z as c,a as h,O as f}from\"../../../../../chunks/vec3f64.js\";import u from\"../../../MeshMaterialMetallicRoughness.js\";import p from\"../../../MeshTransform.js\";import{ungeoreferenceByTransform as d}from\"../../georeference.js\";import{Buffer as m}from\"./buffer.js\";import{computeOrigin as g,smoothNormals as _}from\"./geometry.js\";import{BufferOutputType as x,ImageOutputType as A,AttributeType as T,TargetBuffer as R,AlphaMode as b}from\"./types.js\";import{imageToArrayBuffer as E,imageToDataURI as M}from\"./imageutils.js\";import{isEncodedMeshTexture as O}from\"../../../../../views/3d/glTF/internal/resourceUtils.js\";import{DataType as w,TextureWrapMode as N}from\"../../../../../views/webgl/enums.js\";const B=e.getLogger(\"gltf\");class C{constructor(e,t,s){this.params={},this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:\"2.0\",copyright:e.copyright,generator:e.generator},extras:{options:t,binChunkBuffer:null,promises:[]}},s&&(this.params=s),this._addScenes(e)}_addScenes(e){this.gltf.scene=e.defaultScene;const t=this.gltf.extras,s=t.options.bufferOutputType===x.GLB||t.options.imageOutputType===A.GLB;s&&(t.binChunkBuffer=new m(this.gltf)),e.forEachScene((e=>{this._addScene(e)})),s&&t.binChunkBuffer.finalize()}_addScene(e){this.gltf.scenes||(this.gltf.scenes=[]);const t={};e.name&&(t.name=e.name),e.forEachNode((e=>{t.nodes||(t.nodes=[]);const s=this._addNode(e);t.nodes.push(s)})),this.gltf.scenes.push(t)}_addNode(e){this.gltf.nodes||(this.gltf.nodes=[]);const t={};e.name&&(t.name=e.name);const s=e.translation;l(s,c)||(t.translation=h(s));const r=e.rotation;a(r,o)||(t.rotation=n(r));const i=e.scale;l(i,f)||(t.scale=h(i)),e.mesh&&e.mesh.vertexAttributes.position?t.mesh=this._addMesh(e.mesh):e.forEachNode((e=>{t.children||(t.children=[]);const s=this._addNode(e);t.children.push(s)}));const u=this.gltf.nodes.length;return this.gltf.nodes.push(t),u}_addMesh(e){this.gltf.meshes||(this.gltf.meshes=[]);const t={primitives:[]},i=this.gltf.extras,a=i.options.bufferOutputType===x.GLB;let o;o=a?i.binChunkBuffer:new m(this.gltf),this.params.origin||(this.params.origin=g(e));const n=this.params.ignoreLocalTransform?s(e.transform,(e=>new p({origin:[e.origin[0],e.origin[1],e.origin[2]],geographic:!1}))):e.transform,l=d(e.vertexAttributes,n,this.params.origin,{geographic:this.params.geographic,unit:\"meters\"});_(e,l),this._flipYZAxis(l);const c=o.addBufferView(w.FLOAT,T.VEC3,R.ARRAY_BUFFER);let h,f,u,A;l.normal&&(h=o.addBufferView(w.FLOAT,T.VEC3,R.ARRAY_BUFFER)),e.vertexAttributes.uv&&(f=o.addBufferView(w.FLOAT,T.VEC2,R.ARRAY_BUFFER)),l.tangent&&(u=o.addBufferView(w.FLOAT,T.VEC4,R.ARRAY_BUFFER)),e.vertexAttributes.color&&(A=o.addBufferView(w.UNSIGNED_BYTE,T.VEC4,R.ARRAY_BUFFER)),c.startAccessor(\"POSITION\"),h&&h.startAccessor(\"NORMAL\"),f&&f.startAccessor(\"TEXCOORD_0\"),u&&u.startAccessor(\"TANGENT\"),A&&A.startAccessor(\"COLOR_0\");const b=l.position.length/3,{position:E,normal:M,tangent:O}=l,{color:N,uv:B}=e.vertexAttributes;for(let s=0;s<b;++s)c.push(E[3*s+0]),c.push(E[3*s+1]),c.push(E[3*s+2]),h&&r(M)&&(h.push(M[3*s+0]),h.push(M[3*s+1]),h.push(M[3*s+2])),f&&r(B)&&(f.push(B[2*s+0]),f.push(B[2*s+1])),u&&r(O)&&(u.push(O[4*s+0]),u.push(O[4*s+1]),u.push(O[4*s+2]),u.push(O[4*s+3])),A&&r(N)&&(A.push(N[4*s+0]),A.push(N[4*s+1]),A.push(N[4*s+2]),A.push(N[4*s+3]));const C=c.endAccessor(),I=this._addAccessor(c.index,C);let L,v,y,F,S;if(h){const e=h.endAccessor();L=this._addAccessor(h.index,e)}if(f){const e=f.endAccessor();v=this._addAccessor(f.index,e)}if(u){const e=u.endAccessor();y=this._addAccessor(u.index,e)}if(A){const e=A.endAccessor();F=this._addAccessor(A.index,e)}e.components&&e.components.length>0&&e.components[0].faces?(S=o.addBufferView(w.UNSIGNED_INT,T.SCALAR,R.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(S,e.components,t,I,L,v,y,F)):this._addMeshVertexNonIndexed(e.components,t,I,L,v,y,F),c.finalize(),h&&h.finalize(),f&&f.finalize(),u&&u.finalize(),S&&S.finalize(),A&&A.finalize(),a||o.finalize();const k=this.gltf.meshes.length;return this.gltf.meshes.push(t),k}_flipYZAxis({position:e,normal:t,tangent:s}){this._flipYZBuffer(e,3),this._flipYZBuffer(t,3),this._flipYZBuffer(s,4)}_flipYZBuffer(e,t){if(!i(e))for(let s=1,r=2;s<e.length;s+=t,r+=t){const t=e[s],i=e[r];e[s]=i,e[r]=-t}}_addMaterial(e){if(null===e)return;const t=this._materialMap.indexOf(e);if(-1!==t)return t;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(e.alphaMode){case\"mask\":s.alphaMode=b.MASK;break;case\"auto\":case\"blend\":s.alphaMode=b.BLEND}.5!==e.alphaCutoff&&(s.alphaCutoff=e.alphaCutoff),e.doubleSided&&(s.doubleSided=e.doubleSided),s.pbrMetallicRoughness={};const i=e=>e**2.1,a=e=>{const t=e.toRgba();return t[0]=i(t[0]/255),t[1]=i(t[1]/255),t[2]=i(t[2]/255),t};if(r(e.color)&&(s.pbrMetallicRoughness.baseColorFactor=a(e.color)),r(e.colorTexture)&&(s.pbrMetallicRoughness.baseColorTexture={index:this._addTexture(e.colorTexture)}),r(e.normalTexture)&&(s.normalTexture={index:this._addTexture(e.normalTexture)}),e instanceof u){if(r(e.emissiveTexture)&&(s.emissiveTexture={index:this._addTexture(e.emissiveTexture)}),r(e.emissiveColor)){const t=a(e.emissiveColor);s.emissiveFactor=[t[0],t[1],t[2]]}r(e.occlusionTexture)&&(s.occlusionTexture={index:this._addTexture(e.occlusionTexture)}),r(e.metallicRoughnessTexture)&&(s.pbrMetallicRoughness.metallicRoughnessTexture={index:this._addTexture(e.metallicRoughnessTexture)}),s.pbrMetallicRoughness.metallicFactor=e.metallic,s.pbrMetallicRoughness.roughnessFactor=e.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1,B.warnOnce(\"Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.\");const o=this.gltf.materials.length;return this.gltf.materials.push(s),this._materialMap.push(e),o}_addTexture(e){const s=this.gltf.textures??[];return this.gltf.textures=s,t(this._textureMap,e,(()=>{const t={sampler:this._addSampler(e),source:this._addImage(e)},r=s.length;return s.push(t),r}))}_addImage(e){const t=this._imageMap.get(e);if(null!=t)return t;this.gltf.images||(this.gltf.images=[]);const s={};if(e.url)s.uri=e.url;else{const t=e.data;s.extras=t;for(let e=0;e<this.gltf.images.length;++e)if(t===this.gltf.images[e].extras)return e;const i=this.gltf.extras;switch(i.options.imageOutputType){case A.GLB:{const e=i.binChunkBuffer.addBufferView(w.UNSIGNED_BYTE,T.SCALAR);if(O(t))r(t.data)&&e.writeOutToBuffer(t.data,0);else{const r=E(t).then((({data:e,type:t})=>(s.mimeType=t,e)));e.writeAsync(r).then((()=>{e.finalize()}))}s.bufferView=e.index;break}case A.DataURI:if(O(t)){B.warnOnce(\"Image export for basis compressed textures not available.\");break}s.uri=M(t);break;default:if(O(t)){B.warnOnce(\"Image export for basis compressed textures not available.\");break}i.promises.push(E(t).then((({data:e,type:t})=>{s.uri=e,s.mimeType=t})))}}const i=this.gltf.images.length;return this.gltf.images.push(s),this._imageMap.set(e,i),i}_addSampler(e){this.gltf.samplers||(this.gltf.samplers=[]);let t=N.REPEAT,s=N.REPEAT;if(\"string\"==typeof e.wrap)switch(e.wrap){case\"clamp\":t=N.CLAMP_TO_EDGE,s=N.CLAMP_TO_EDGE;break;case\"mirror\":t=N.MIRRORED_REPEAT,s=N.MIRRORED_REPEAT}else{switch(e.wrap.vertical){case\"clamp\":s=N.CLAMP_TO_EDGE;break;case\"mirror\":s=N.MIRRORED_REPEAT}switch(e.wrap.horizontal){case\"clamp\":t=N.CLAMP_TO_EDGE;break;case\"mirror\":t=N.MIRRORED_REPEAT}}const r={wrapS:t,wrapT:s};for(let a=0;a<this.gltf.samplers.length;++a)if(JSON.stringify(r)===JSON.stringify(this.gltf.samplers[a]))return a;const i=this.gltf.samplers.length;return this.gltf.samplers.push(r),i}_addAccessor(e,t){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:e,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type,min:t.min,max:t.max,name:t.name};t.normalized&&(s.normalized=!0);const r=this.gltf.accessors.length;return this.gltf.accessors.push(s),r}_addMeshVertexIndexed(e,t,s,r,i,a,o,n){for(const l of t){e.startAccessor(\"INDICES\");for(let s=0;s<l.faces.length;++s)e.push(l.faces[s]);const t=e.endAccessor(),c={attributes:{POSITION:r},indices:this._addAccessor(e.index,t),material:this._addMaterial(l.material)};i&&\"flat\"!==l.shading&&(c.attributes.NORMAL=i),a&&(c.attributes.TEXCOORD_0=a),o&&\"flat\"!==l.shading&&(c.attributes.TANGENT=o),n&&(c.attributes.COLOR_0=n),s.primitives.push(c)}}_addMeshVertexNonIndexed(e,t,s,r,i,a,o){const n={attributes:{POSITION:s}};r&&(n.attributes.NORMAL=r),i&&(n.attributes.TEXCOORD_0=i),a&&(n.attributes.TANGENT=a),o&&(n.attributes.COLOR_0=o),e&&(n.material=this._addMaterial(e[0].material)),t.primitives.push(n)}}export{C as GLTF};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}