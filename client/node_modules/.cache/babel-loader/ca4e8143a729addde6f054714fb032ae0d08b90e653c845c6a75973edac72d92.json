{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport { AsyncUpdateMixin as r } from \"../../../../core/AsyncUpdate.js\";\nimport { HandleOwner as s } from \"../../../../core/HandleOwner.js\";\nimport t from \"../../../../core/Logger.js\";\nimport { unwrapOr as i } from \"../../../../core/maybe.js\";\nimport { property as o } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../core/arrayUtils.js\";\nimport { subclass as l } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { fixFields as n, collectLabelingFields as a, collectFilterFields as d } from \"../../../../layers/support/fieldUtils.js\";\nconst p = \"esri.views.3d.layers.support.SceneLayerViewRequiredFields\";\nlet c = class extends r(s) {\n  get layer() {\n    return this.layerView.layer;\n  }\n  get requiredFields() {\n    const {\n      layerView: {\n        layer: {\n          fieldsIndex: e\n        },\n        definitionExpressionFields: r\n      },\n      rendererFields: s,\n      labelingFields: t,\n      viewFilterFields: o\n    } = this;\n    return n(e, [...i(r, []), ...i(s, []), ...i(t, []), ...i(o, [])]);\n  }\n  constructor(e) {\n    super(e);\n  }\n  initialize() {\n    this.handles.add([this.autoUpdateAsync(\"rendererFields\", async () => {\n      const {\n        fieldsIndex: e,\n        renderer: r\n      } = this.layer;\n      return r ? y(s => r.collectRequiredFields(s, e)) : null;\n    }), this.autoUpdateAsync(\"labelingFields\", async () => {\n      const {\n        layer: e\n      } = this;\n      return e.labelsVisible ? y(r => a(r, e)) : null;\n    }), this.autoUpdateAsync(\"viewFilterFields\", () => {\n      const {\n        layer: e,\n        filter: r\n      } = this.layerView;\n      return y(s => d(s, e, r));\n    })]);\n  }\n};\nasync function y(e) {\n  const r = new Set();\n  try {\n    return await e(r), Array.from(r).sort();\n  } catch (s) {\n    return t.getLogger(p).error(s), null;\n  }\n}\ne([o()], c.prototype, \"layerView\", void 0), e([o()], c.prototype, \"layer\", null), e([o()], c.prototype, \"requiredFields\", null), e([o()], c.prototype, \"rendererFields\", void 0), e([o()], c.prototype, \"labelingFields\", void 0), e([o()], c.prototype, \"viewFilterFields\", void 0), c = e([l(p)], c);\nexport { c as SceneLayerViewRequiredFields };","map":{"version":3,"names":["_","e","AsyncUpdateMixin","r","HandleOwner","s","t","unwrapOr","i","property","o","subclass","l","fixFields","n","collectLabelingFields","a","collectFilterFields","d","p","c","layer","layerView","requiredFields","fieldsIndex","definitionExpressionFields","rendererFields","labelingFields","viewFilterFields","constructor","initialize","handles","add","autoUpdateAsync","renderer","y","collectRequiredFields","labelsVisible","filter","Set","Array","from","sort","getLogger","error","prototype","SceneLayerViewRequiredFields"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/layers/support/SceneLayerViewRequiredFields.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../chunks/tslib.es6.js\";import{AsyncUpdateMixin as r}from\"../../../../core/AsyncUpdate.js\";import{HandleOwner as s}from\"../../../../core/HandleOwner.js\";import t from\"../../../../core/Logger.js\";import{unwrapOr as i}from\"../../../../core/maybe.js\";import{property as o}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/accessorSupport/ensureType.js\";import\"../../../../core/arrayUtils.js\";import{subclass as l}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{fixFields as n,collectLabelingFields as a,collectFilterFields as d}from\"../../../../layers/support/fieldUtils.js\";const p=\"esri.views.3d.layers.support.SceneLayerViewRequiredFields\";let c=class extends(r(s)){get layer(){return this.layerView.layer}get requiredFields(){const{layerView:{layer:{fieldsIndex:e},definitionExpressionFields:r},rendererFields:s,labelingFields:t,viewFilterFields:o}=this;return n(e,[...i(r,[]),...i(s,[]),...i(t,[]),...i(o,[])])}constructor(e){super(e)}initialize(){this.handles.add([this.autoUpdateAsync(\"rendererFields\",(async()=>{const{fieldsIndex:e,renderer:r}=this.layer;return r?y((s=>r.collectRequiredFields(s,e))):null})),this.autoUpdateAsync(\"labelingFields\",(async()=>{const{layer:e}=this;return e.labelsVisible?y((r=>a(r,e))):null})),this.autoUpdateAsync(\"viewFilterFields\",(()=>{const{layer:e,filter:r}=this.layerView;return y((s=>d(s,e,r)))}))])}};async function y(e){const r=new Set;try{return await e(r),Array.from(r).sort()}catch(s){return t.getLogger(p).error(s),null}}e([o()],c.prototype,\"layerView\",void 0),e([o()],c.prototype,\"layer\",null),e([o()],c.prototype,\"requiredFields\",null),e([o()],c.prototype,\"rendererFields\",void 0),e([o()],c.prototype,\"labelingFields\",void 0),e([o()],c.prototype,\"viewFilterFields\",void 0),c=e([l(p)],c);export{c as SceneLayerViewRequiredFields};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}