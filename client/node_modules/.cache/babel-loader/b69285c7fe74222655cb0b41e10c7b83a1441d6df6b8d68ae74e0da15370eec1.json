{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { result as e, assertResult as t } from \"../../../../core/asyncUtils.js\";\nimport has from \"../../../../core/has.js\";\nimport { clone as r } from \"../../../../core/lang.js\";\nimport { isNone as i, isSome as o } from \"../../../../core/maybe.js\";\nimport { eachAlways as n, isAbortError as s } from \"../../../../core/promiseUtils.js\";\nimport { makeAbsolute as a } from \"../../../../core/urlUtils.js\";\nimport { TextureEncoding as u } from \"./enums.js\";\nimport { readBinaryAttribute as l, createGeometryDescriptor as f } from \"./I3SBinaryReader.js\";\nimport { getMaterialAndTextures as d, getMaterialAndTexturesFromShared as c, selectEncoding as h } from \"./I3SMaterialUtil.js\";\nclass m {\n  constructor(e, t, r, i, o, n) {\n    if (this._streamDataController = t, this._logger = r, this._defaultGeometrySchema = i, this._requiredAttributes = o, this._options = n, this._logLayer = e, this._layerUrl = e.parsedUrl.path, this._geometryDefinitions = e.geometryDefinitions, e.materialDefinitions) {\n      const t = e.textureSetDefinitions;\n      this._materialAndTextures = e.materialDefinitions.map(e => d(t, e));\n    }\n  }\n  _load(e, t, r) {\n    return this._streamDataController.request(e, t, r);\n  }\n  _loadAttribute(e, t, r) {\n    const i = `${this._layerUrl}/nodes/${e.resources.attributes}/attributes/${t.key}/0`;\n    return this._load(i, \"binary\", r).then(e => l(t, e));\n  }\n  loadAttributes(e, t, r) {\n    return n(t.map(t => this._loadAttribute(e, t.attributeStorageInfo, r))).then(r => {\n      const i = {};\n      for (let o = 0; o < t.length; ++o) {\n        const n = r[o].value;\n        if (n) i[t[o].name] = n;else {\n          if (s(r[o].error)) throw r[o].error;\n          this._logger.error(\"#loadAttributes\", this._logLayer, `Failed to load attributeData for '${t[o].name}' on node '${e.id}'`, r[o].error);\n        }\n      }\n      return i;\n    });\n  }\n  async loadNodeData(r, n) {\n    const s = null != this._requiredAttributes && r.resources.attributes ? e(this.loadAttributes(r, this._requiredAttributes, n)) : null,\n      {\n        bufferDefinition: a,\n        bufferIndex: u\n      } = D(this._geometryDefinitions, r),\n      l = !!r.resources.geometry,\n      d = l ? e(this._loadGeometry(r.resources.geometry, u, n)) : null,\n      h = r.resources.hasSharedResource ? await this._loadShared(r, n) : null,\n      m = r.resources.materialDefinition,\n      p = this._materialAndTextures && null != m && m >= 0 ? this._materialAndTextures[m] : null != h ? c(h) : null,\n      x = p?.material,\n      A = p?.textures ?? [],\n      w = `${r.id}`,\n      T = !l && this._options.loadFeatureData,\n      $ = T ? await this._loadFeatureData(w, n) : null,\n      j = T ? _($) : g(x),\n      I = i(j) ? b($) : null,\n      U = A.length > 0 ? e(this.loadTextures(r, A, n)) : null;\n    let S = null,\n      q = null;\n    if (d) {\n      S = t(await d);\n      const e = y(this._defaultGeometrySchema, h);\n      q = f(a, e);\n    }\n    const B = U ? t(await U) : null,\n      C = s ? t(await s) : {},\n      E = C ? {\n        attributeData: C,\n        loadedAttributes: this._requiredAttributes\n      } : null;\n    if (o(j)) return {\n      geometryData: j,\n      attributeDataInfo: E,\n      geometryBuffer: S,\n      geometryDescriptor: q,\n      requiredTextures: A,\n      textureData: B\n    };\n    if (o(I)) return {\n      pointData: I,\n      attributeDataInfo: E,\n      geometryBuffer: S,\n      geometryDescriptor: q,\n      requiredTextures: A,\n      textureData: B\n    };\n    throw new Error();\n  }\n  static _addAbsoluteHrefTexture(e, t) {\n    const r = e.textureDefinitions;\n    if (null != r) for (const i of Object.keys(r)) for (const e of r[i].images) Array.isArray(e.href) ? e.hrefConcat = e.href.map(e => a(e, t)) : e.hrefConcat = a(e.href, t);\n  }\n  static _fixTextureEncodings(e) {\n    const t = e.textureDefinitions;\n    if (null != t) for (const r in t) {\n      const e = t[r];\n      if (Array.isArray(e.encoding)) for (let t = 0; t < e.encoding.length; t++) {\n        const r = e.encoding[t];\n        \"data:\" === r.substring(0, 5) && (e.encoding[t] = r.substring(5));\n      } else {\n        const t = e.encoding;\n        \"data:\" === t.substring(0, 5) && (e.encoding = t.substring(5));\n      }\n    }\n  }\n  _loadShared(e, t) {\n    const r = `${this._layerUrl}/nodes/${e.resources.geometry}/shared`;\n    return this._load(r, \"json\", t).then(e => (m._fixTextureEncodings(e), m._addAbsoluteHrefTexture(e, r), e));\n  }\n  _loadTexture(e, t, r, i, o, n) {\n    let s = !1;\n    return o === u.DDS_S3TC || o === u.KTX2 || o === u.Basis ? this._load(e, \"binary\", n).then(e => ({\n      id: t,\n      usage: r,\n      data: e,\n      encoding: o,\n      downsampled: s\n    })) : this._load(e, \"image\", n).then(e => {\n      let n = e;\n      const a = 4096,\n        u = 2;\n      if (i && e.width * e.height >= a) {\n        const t = Math.ceil(e.width / u),\n          r = Math.ceil(e.height / u),\n          i = document.createElement(\"canvas\");\n        i.width = t, i.height = r;\n        i.getContext(\"2d\").drawImage(e, 0, 0, t, r), n = i, s = !0;\n      }\n      return {\n        id: t,\n        usage: r,\n        data: n,\n        encoding: o,\n        downsampled: s\n      };\n    });\n  }\n  loadTextures(e, t, r) {\n    const i = !!this._options.uncompressedTextureDownsamplingEnabled,\n      o = this._options.textureUsageMask;\n    return Promise.all(t.map(t => {\n      if (0 == (t.usage & o)) return null;\n      const n = h(t.encodings, this._options.textureEncodings);\n      if (null == n) return this._logger.error(\"#loadTextures\", this._logLayer, `No known encoding for texture found on node ${e.id}`), Promise.reject();\n      const s = e.resources.texture || e.id,\n        a = `${this._layerUrl}/nodes/${s}/textures/${n.name}`;\n      return this._loadTexture(a, t.id, t.usage, i, n.encoding, r);\n    }));\n  }\n  _loadFeatureData(e, t) {\n    const r = `${this._layerUrl}/nodes/${e}/features/0`;\n    return this._load(r, \"json\", t);\n  }\n  _loadGeometry(e, t, r) {\n    const i = `${this._layerUrl}/nodes/${e}/geometries/${t}`;\n    return this._load(i, \"binary\", r);\n  }\n}\nfunction g(e) {\n  return {\n    featureIds: [],\n    geometries: [{\n      type: \"ArrayBufferView\",\n      params: {\n        material: e\n      }\n    }],\n    featureDataPosition: [0, 0, 0]\n  };\n}\nfunction _(e) {\n  if (!e) return null;\n  for (const t of e.featureData) {\n    const e = t.geometries;\n    if (null != e) for (const r of e) return {\n      featureIds: [t.id],\n      featureDataPosition: t.position,\n      geometries: [r]\n    };\n  }\n  return null;\n}\nfunction b(e) {\n  if (!e) return null;\n  const t = new Array();\n  for (const r of e.featureData) null != r.position && t.push({\n    featureIds: [r.id],\n    featureDataPosition: r.position,\n    geometries: []\n  });\n  return t;\n}\nfunction y(e, t) {\n  if (!e || !t || !t.materialDefinitions) return e;\n  const i = Object.keys(t.materialDefinitions)[0];\n  return !t.materialDefinitions[i].params.vertexRegions && e.vertexAttributes.region && delete (e = r(e)).vertexAttributes.region, e;\n}\nfunction D(e, t) {\n  const r = {\n      bufferDefinition: null,\n      bufferIndex: 0\n    },\n    i = t.resources.geometryDefinition;\n  if (null == e || null == i || i < 0) return r;\n  const o = i >= 0 ? e[i].geometryBuffers : null;\n  if (null == o) return r;\n  for (let n = 0; n < o.length; n++) {\n    const e = o[n];\n    if (null == e.compressedAttributes) r.bufferIndex = n, r.bufferDefinition = o[n];else if (\"draco\" === e.compressedAttributes.encoding && !has(\"disable-feature:i3s-draco\")) return r.bufferIndex = n, r.bufferDefinition = e, r;\n  }\n  return r;\n}\nexport { m as default };","map":{"version":3,"names":["result","e","assertResult","t","has","clone","r","isNone","i","isSome","o","eachAlways","n","isAbortError","s","makeAbsolute","a","TextureEncoding","u","readBinaryAttribute","l","createGeometryDescriptor","f","getMaterialAndTextures","d","getMaterialAndTexturesFromShared","c","selectEncoding","h","m","constructor","_streamDataController","_logger","_defaultGeometrySchema","_requiredAttributes","_options","_logLayer","_layerUrl","parsedUrl","path","_geometryDefinitions","geometryDefinitions","materialDefinitions","textureSetDefinitions","_materialAndTextures","map","_load","request","_loadAttribute","resources","attributes","key","then","loadAttributes","attributeStorageInfo","length","value","name","error","id","loadNodeData","bufferDefinition","bufferIndex","D","geometry","_loadGeometry","hasSharedResource","_loadShared","materialDefinition","p","x","material","A","textures","w","T","loadFeatureData","$","_loadFeatureData","j","_","g","I","b","U","loadTextures","S","q","y","B","C","E","attributeData","loadedAttributes","geometryData","attributeDataInfo","geometryBuffer","geometryDescriptor","requiredTextures","textureData","pointData","Error","_addAbsoluteHrefTexture","textureDefinitions","Object","keys","images","Array","isArray","href","hrefConcat","_fixTextureEncodings","encoding","substring","_loadTexture","DDS_S3TC","KTX2","Basis","usage","data","downsampled","width","height","Math","ceil","document","createElement","getContext","drawImage","uncompressedTextureDownsamplingEnabled","textureUsageMask","Promise","all","encodings","textureEncodings","reject","texture","featureIds","geometries","type","params","featureDataPosition","featureData","position","push","vertexRegions","vertexAttributes","region","geometryDefinition","geometryBuffers","compressedAttributes","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/layers/i3s/I3SNodeLoader.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{result as e,assertResult as t}from\"../../../../core/asyncUtils.js\";import has from\"../../../../core/has.js\";import{clone as r}from\"../../../../core/lang.js\";import{isNone as i,isSome as o}from\"../../../../core/maybe.js\";import{eachAlways as n,isAbortError as s}from\"../../../../core/promiseUtils.js\";import{makeAbsolute as a}from\"../../../../core/urlUtils.js\";import{TextureEncoding as u}from\"./enums.js\";import{readBinaryAttribute as l,createGeometryDescriptor as f}from\"./I3SBinaryReader.js\";import{getMaterialAndTextures as d,getMaterialAndTexturesFromShared as c,selectEncoding as h}from\"./I3SMaterialUtil.js\";class m{constructor(e,t,r,i,o,n){if(this._streamDataController=t,this._logger=r,this._defaultGeometrySchema=i,this._requiredAttributes=o,this._options=n,this._logLayer=e,this._layerUrl=e.parsedUrl.path,this._geometryDefinitions=e.geometryDefinitions,e.materialDefinitions){const t=e.textureSetDefinitions;this._materialAndTextures=e.materialDefinitions.map((e=>d(t,e)))}}_load(e,t,r){return this._streamDataController.request(e,t,r)}_loadAttribute(e,t,r){const i=`${this._layerUrl}/nodes/${e.resources.attributes}/attributes/${t.key}/0`;return this._load(i,\"binary\",r).then((e=>l(t,e)))}loadAttributes(e,t,r){return n(t.map((t=>this._loadAttribute(e,t.attributeStorageInfo,r)))).then((r=>{const i={};for(let o=0;o<t.length;++o){const n=r[o].value;if(n)i[t[o].name]=n;else{if(s(r[o].error))throw r[o].error;this._logger.error(\"#loadAttributes\",this._logLayer,`Failed to load attributeData for '${t[o].name}' on node '${e.id}'`,r[o].error)}}return i}))}async loadNodeData(r,n){const s=null!=this._requiredAttributes&&r.resources.attributes?e(this.loadAttributes(r,this._requiredAttributes,n)):null,{bufferDefinition:a,bufferIndex:u}=D(this._geometryDefinitions,r),l=!!r.resources.geometry,d=l?e(this._loadGeometry(r.resources.geometry,u,n)):null,h=r.resources.hasSharedResource?await this._loadShared(r,n):null,m=r.resources.materialDefinition,p=this._materialAndTextures&&null!=m&&m>=0?this._materialAndTextures[m]:null!=h?c(h):null,x=p?.material,A=p?.textures??[],w=`${r.id}`,T=!l&&this._options.loadFeatureData,$=T?await this._loadFeatureData(w,n):null,j=T?_($):g(x),I=i(j)?b($):null,U=A.length>0?e(this.loadTextures(r,A,n)):null;let S=null,q=null;if(d){S=t(await d);const e=y(this._defaultGeometrySchema,h);q=f(a,e)}const B=U?t(await U):null,C=s?t(await s):{},E=C?{attributeData:C,loadedAttributes:this._requiredAttributes}:null;if(o(j))return{geometryData:j,attributeDataInfo:E,geometryBuffer:S,geometryDescriptor:q,requiredTextures:A,textureData:B};if(o(I))return{pointData:I,attributeDataInfo:E,geometryBuffer:S,geometryDescriptor:q,requiredTextures:A,textureData:B};throw new Error}static _addAbsoluteHrefTexture(e,t){const r=e.textureDefinitions;if(null!=r)for(const i of Object.keys(r))for(const e of r[i].images)Array.isArray(e.href)?e.hrefConcat=e.href.map((e=>a(e,t))):e.hrefConcat=a(e.href,t)}static _fixTextureEncodings(e){const t=e.textureDefinitions;if(null!=t)for(const r in t){const e=t[r];if(Array.isArray(e.encoding))for(let t=0;t<e.encoding.length;t++){const r=e.encoding[t];\"data:\"===r.substring(0,5)&&(e.encoding[t]=r.substring(5))}else{const t=e.encoding;\"data:\"===t.substring(0,5)&&(e.encoding=t.substring(5))}}}_loadShared(e,t){const r=`${this._layerUrl}/nodes/${e.resources.geometry}/shared`;return this._load(r,\"json\",t).then((e=>(m._fixTextureEncodings(e),m._addAbsoluteHrefTexture(e,r),e)))}_loadTexture(e,t,r,i,o,n){let s=!1;return o===u.DDS_S3TC||o===u.KTX2||o===u.Basis?this._load(e,\"binary\",n).then((e=>({id:t,usage:r,data:e,encoding:o,downsampled:s}))):this._load(e,\"image\",n).then((e=>{let n=e;const a=4096,u=2;if(i&&e.width*e.height>=a){const t=Math.ceil(e.width/u),r=Math.ceil(e.height/u),i=document.createElement(\"canvas\");i.width=t,i.height=r;i.getContext(\"2d\").drawImage(e,0,0,t,r),n=i,s=!0}return{id:t,usage:r,data:n,encoding:o,downsampled:s}}))}loadTextures(e,t,r){const i=!!this._options.uncompressedTextureDownsamplingEnabled,o=this._options.textureUsageMask;return Promise.all(t.map((t=>{if(0==(t.usage&o))return null;const n=h(t.encodings,this._options.textureEncodings);if(null==n)return this._logger.error(\"#loadTextures\",this._logLayer,`No known encoding for texture found on node ${e.id}`),Promise.reject();const s=e.resources.texture||e.id,a=`${this._layerUrl}/nodes/${s}/textures/${n.name}`;return this._loadTexture(a,t.id,t.usage,i,n.encoding,r)})))}_loadFeatureData(e,t){const r=`${this._layerUrl}/nodes/${e}/features/0`;return this._load(r,\"json\",t)}_loadGeometry(e,t,r){const i=`${this._layerUrl}/nodes/${e}/geometries/${t}`;return this._load(i,\"binary\",r)}}function g(e){return{featureIds:[],geometries:[{type:\"ArrayBufferView\",params:{material:e}}],featureDataPosition:[0,0,0]}}function _(e){if(!e)return null;for(const t of e.featureData){const e=t.geometries;if(null!=e)for(const r of e)return{featureIds:[t.id],featureDataPosition:t.position,geometries:[r]}}return null}function b(e){if(!e)return null;const t=new Array;for(const r of e.featureData)null!=r.position&&t.push({featureIds:[r.id],featureDataPosition:r.position,geometries:[]});return t}function y(e,t){if(!e||!t||!t.materialDefinitions)return e;const i=Object.keys(t.materialDefinitions)[0];return!t.materialDefinitions[i].params.vertexRegions&&e.vertexAttributes.region&&delete(e=r(e)).vertexAttributes.region,e}function D(e,t){const r={bufferDefinition:null,bufferIndex:0},i=t.resources.geometryDefinition;if(null==e||null==i||i<0)return r;const o=i>=0?e[i].geometryBuffers:null;if(null==o)return r;for(let n=0;n<o.length;n++){const e=o[n];if(null==e.compressedAttributes)r.bufferIndex=n,r.bufferDefinition=o[n];else if(\"draco\"===e.compressedAttributes.encoding&&!has(\"disable-feature:i3s-draco\"))return r.bufferIndex=n,r.bufferDefinition=e,r}return r}export{m as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}