{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { deg2rad as t } from \"../../../../core/mathUtils.js\";\nimport { isSome as i, isNone as e } from \"../../../../core/maybe.js\";\nimport { a as s, f as n, h as r } from \"../../../../chunks/vec2.js\";\nimport { a as h } from \"../../../../chunks/vec2f64.js\";\nimport { r as o, e as a, o as _, f as c, n as l, a as p, g as d, F as g, c as f } from \"../../../../chunks/vec3.js\";\nimport { c as m, f as u } from \"../../../../chunks/vec3f64.js\";\nimport { create as D, fromPositionAndNormal as E, signedDistance as x, copy as b, isPointInside as I, normal as V, intersectLine as M } from \"../../../../geometry/support/plane.js\";\nimport { angle as X, projectPointSignedLength as Y } from \"../../../../geometry/support/vector.js\";\nimport { intersectLineAndRay as N, LineType as y } from \"../../../support/geometry2dUtils.js\";\nclass P {\n  get plane() {\n    return this._plane;\n  }\n  get requiresSplitEdgeLeft() {\n    return !this._left.isOriginalDirection;\n  }\n  get requiresSplitEdgeRight() {\n    return !this._right.isOriginalDirection;\n  }\n  get edgeDirection() {\n    return this._edgeDirection;\n  }\n  constructor(t, i, e) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let n = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : j.IMMEDIATE;\n    this._helper = t, this._planeType = i, this._edge = e, this.distance = s, this._plane = D(), this._offsetPlane = D(), this._minDistance = -1 / 0, this._maxDistance = 1 / 0, this._selectedArrow = 1, n === j.IMMEDIATE && this._initialize();\n  }\n  _initialize() {\n    this._initializeNeighbors(), this._initializePlane(), this._initializeDistanceConstraints();\n  }\n  _initializeNeighbors() {\n    const t = this._toXYZ(this._edge.leftVertex.pos),\n      i = this._toXYZ(this._edge.leftVertex.leftEdge?.leftVertex?.pos),\n      e = this._toXYZ(this._edge.rightVertex.pos),\n      s = this._toXYZ(this._edge.rightVertex.rightEdge?.rightVertex?.pos);\n    this._edgeDirection = o(m(), t, e), this._left = this._computeNeighbor(t, i, this._edgeDirection), this._right = this._computeNeighbor(e, s, this._edgeDirection);\n  }\n  _toXYZ(t) {\n    return i(t) ? this._helper.toXYZ(t) : null;\n  }\n  _pointToXYZ(t) {\n    return this._toXYZ(this._helper.pointToVector(t));\n  }\n  _computeNeighbor(t, i, s) {\n    if (e(i)) return {\n      start: t,\n      end: i,\n      direction: u(-s[1], s[0], 0),\n      isOriginalDirection: !0\n    };\n    const n = o(m(), t, i),\n      r = !this._passesBisectingAngleThreshold(n, s);\n    return {\n      start: t,\n      end: i,\n      direction: r ? this._bisectVectorsPerpendicular(s, n) : n,\n      isOriginalDirection: !r\n    };\n  }\n  _passesBisectingAngleThreshold(t, i) {\n    const e = Math.abs(X(i, t));\n    return e >= T && e <= Math.PI - T;\n  }\n  _bisectVectorsPerpendicular(t, i) {\n    const e = a(t, i) < 0 ? t : _(m(), t),\n      s = Math.abs(a(e, i));\n    if (!(s < Z || s > 1 - Z)) return this._bisectDirection(e, i);\n    const n = c(m(), e, [0, 0, 1]);\n    return l(n, n);\n  }\n  _bisectDirection(t, i) {\n    const e = p(m(), t, i);\n    return l(e, e);\n  }\n  _initializePlane() {\n    const t = this._computeNormalDirection(this._left),\n      i = this._computeNormalDirection(this._right);\n    a(t, i) < 0 && _(i, i), E(this._left.start, this._bisectDirection(t, i), this._plane);\n  }\n  _computeNormalDirection(t) {\n    const i = c(m(), t.direction, this._edgeDirection);\n    l(i, i);\n    const e = c(m(), this._edgeDirection, i);\n    return this._planeType === A.XY && (e[2] = 0), l(e, e);\n  }\n  _initializeDistanceConstraints() {\n    i(this._left.end) && !this.requiresSplitEdgeLeft && this._updateDistanceConstraint(x(this._plane, this._left.end)), i(this._right.end) && !this.requiresSplitEdgeRight && this._updateDistanceConstraint(x(this._plane, this._right.end)), this._updateIntersectDistanceConstraint(this._plane);\n  }\n  _updateDistanceConstraint(t) {\n    t <= 0 && (this._minDistance = Math.max(this._minDistance, t)), t >= 0 && (this._maxDistance = Math.min(this._maxDistance, t));\n  }\n  _updateIntersectDistanceConstraint(t) {\n    const i = V(t),\n      e = this._edgeDirection,\n      o = p(m(), this._left.start, this._left.direction),\n      a = p(m(), this._right.start, this._right.direction),\n      _ = this._pointInBasis2D(h(), i, e, this._left.start),\n      c = this._pointInBasis2D(h(), i, e, o),\n      l = this._pointInBasis2D(h(), i, e, this._right.start),\n      g = this._pointInBasis2D(h(), i, e, a),\n      [f] = N({\n        start: c,\n        end: _,\n        type: y.LINE\n      }, {\n        start: g,\n        end: l,\n        type: y.LINE\n      });\n    if (!f) return;\n    const u = s(h(), _, c);\n    n(u, u);\n    const D = s(h(), f, c),\n      E = r(u, D),\n      b = p(m(), o, d(m(), this._left.direction, -E)),\n      I = x(t, b);\n    this._updateDistanceConstraint(I);\n  }\n  _pointInBasis2D(t, i, e, s) {\n    return t[0] = Y(i, s), t[1] = Y(e, s), t;\n  }\n  _offset(t, e) {\n    Number.isFinite(this._minDistance) && (e = Math.max(this._minDistance, e)), Number.isFinite(this._maxDistance) && (e = Math.min(this._maxDistance, e)), b(this._offsetPlane, this._plane), this._offsetPlane[3] -= e;\n    const s = (t, e, s) => i(e) && M(this._offsetPlane, t, p(m(), t, e), s),\n      n = m();\n    (t === this._edge.leftVertex ? s(this._left.start, this._left.direction, n) : s(this._right.start, this._right.direction, n)) && this._helper.copy(this._helper.fromXYZ(n, void 0, this._helper.getM(t.pos)), t.pos);\n  }\n  selectArrowFromStartPoint(t) {\n    this._selectedArrow = I(this.plane, this._pointToXYZ(t)) ? 1 : -1;\n  }\n  get selectedArrow() {\n    return this._selectedArrow;\n  }\n  signedDistanceToPoint(t) {\n    return x(this.plane, this._pointToXYZ(t));\n  }\n  apply(t) {\n    this._offset(t, this.distance);\n  }\n  undo(t) {\n    this._offset(t, 0);\n  }\n  canAccumulate(t) {\n    return t instanceof P && this._edge.leftVertex.index === t._edge.leftVertex.index && this._edge.rightVertex.index === t._edge.rightVertex.index && this._edge.component === t._edge.component && this._maybeEqualsVec3(this._left.direction, t._left.direction) && this._maybeEqualsVec3(this._right.direction, t._right.direction) && g(V(this._plane), V(t._plane));\n  }\n  accumulate(t, i) {\n    const e = this._plane[3] - i._plane[3] + i.distance;\n    this._offset(t, e);\n  }\n  accumulateParams(t) {\n    const i = t.distance - t._plane[3];\n    this.distance = i + this._plane[3];\n  }\n  clone() {\n    const t = new P(this._helper, this._planeType, this._edge, this.distance, j.DEFERRED);\n    return b(t._plane, this._plane), b(t._offsetPlane, this._offsetPlane), t._maxDistance = this._maxDistance, t._minDistance = this._minDistance, t._left = this._cloneNeighbor(this._left), t._right = this._cloneNeighbor(this._right), t._edgeDirection = f(m(), this._edgeDirection), t;\n  }\n  _maybeEqualsVec3(t, s) {\n    return e(t) && e(s) || i(t) && i(s) && g(t, s);\n  }\n  _cloneNeighbor(_ref) {\n    let {\n      start: t,\n      end: e,\n      direction: s,\n      isOriginalDirection: n\n    } = _ref;\n    return {\n      start: f(m(), t),\n      end: i(e) ? f(m(), e) : null,\n      direction: f(m(), s),\n      isOriginalDirection: n\n    };\n  }\n}\nconst T = t(15),\n  Z = .001;\nvar A, j;\n!function (t) {\n  t[t.XYZ = 0] = \"XYZ\", t[t.XY = 1] = \"XY\";\n}(A || (A = {})), function (t) {\n  t[t.IMMEDIATE = 0] = \"IMMEDIATE\", t[t.DEFERRED = 1] = \"DEFERRED\";\n}(j || (j = {}));\nexport { P as OffsetEdgeVertex, A as PlaneType };","map":{"version":3,"names":["deg2rad","t","isSome","i","isNone","e","a","s","f","n","h","r","o","_","c","l","p","g","d","F","m","u","create","D","fromPositionAndNormal","E","signedDistance","x","copy","b","isPointInside","I","normal","V","intersectLine","M","angle","X","projectPointSignedLength","Y","intersectLineAndRay","N","LineType","y","P","plane","_plane","requiresSplitEdgeLeft","_left","isOriginalDirection","requiresSplitEdgeRight","_right","edgeDirection","_edgeDirection","constructor","arguments","length","undefined","j","IMMEDIATE","_helper","_planeType","_edge","distance","_offsetPlane","_minDistance","_maxDistance","_selectedArrow","_initialize","_initializeNeighbors","_initializePlane","_initializeDistanceConstraints","_toXYZ","leftVertex","pos","leftEdge","rightVertex","rightEdge","_computeNeighbor","toXYZ","_pointToXYZ","pointToVector","start","end","direction","_passesBisectingAngleThreshold","_bisectVectorsPerpendicular","Math","abs","T","PI","Z","_bisectDirection","_computeNormalDirection","A","XY","_updateDistanceConstraint","_updateIntersectDistanceConstraint","max","min","_pointInBasis2D","type","LINE","_offset","Number","isFinite","fromXYZ","getM","selectArrowFromStartPoint","selectedArrow","signedDistanceToPoint","apply","undo","canAccumulate","index","component","_maybeEqualsVec3","accumulate","accumulateParams","clone","DEFERRED","_cloneNeighbor","_ref","XYZ","OffsetEdgeVertex","PlaneType"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/interactive/editGeometry/operations/OffsetEdgeVertex.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{deg2rad as t}from\"../../../../core/mathUtils.js\";import{isSome as i,isNone as e}from\"../../../../core/maybe.js\";import{a as s,f as n,h as r}from\"../../../../chunks/vec2.js\";import{a as h}from\"../../../../chunks/vec2f64.js\";import{r as o,e as a,o as _,f as c,n as l,a as p,g as d,F as g,c as f}from\"../../../../chunks/vec3.js\";import{c as m,f as u}from\"../../../../chunks/vec3f64.js\";import{create as D,fromPositionAndNormal as E,signedDistance as x,copy as b,isPointInside as I,normal as V,intersectLine as M}from\"../../../../geometry/support/plane.js\";import{angle as X,projectPointSignedLength as Y}from\"../../../../geometry/support/vector.js\";import{intersectLineAndRay as N,LineType as y}from\"../../../support/geometry2dUtils.js\";class P{get plane(){return this._plane}get requiresSplitEdgeLeft(){return!this._left.isOriginalDirection}get requiresSplitEdgeRight(){return!this._right.isOriginalDirection}get edgeDirection(){return this._edgeDirection}constructor(t,i,e,s=0,n=j.IMMEDIATE){this._helper=t,this._planeType=i,this._edge=e,this.distance=s,this._plane=D(),this._offsetPlane=D(),this._minDistance=-1/0,this._maxDistance=1/0,this._selectedArrow=1,n===j.IMMEDIATE&&this._initialize()}_initialize(){this._initializeNeighbors(),this._initializePlane(),this._initializeDistanceConstraints()}_initializeNeighbors(){const t=this._toXYZ(this._edge.leftVertex.pos),i=this._toXYZ(this._edge.leftVertex.leftEdge?.leftVertex?.pos),e=this._toXYZ(this._edge.rightVertex.pos),s=this._toXYZ(this._edge.rightVertex.rightEdge?.rightVertex?.pos);this._edgeDirection=o(m(),t,e),this._left=this._computeNeighbor(t,i,this._edgeDirection),this._right=this._computeNeighbor(e,s,this._edgeDirection)}_toXYZ(t){return i(t)?this._helper.toXYZ(t):null}_pointToXYZ(t){return this._toXYZ(this._helper.pointToVector(t))}_computeNeighbor(t,i,s){if(e(i))return{start:t,end:i,direction:u(-s[1],s[0],0),isOriginalDirection:!0};const n=o(m(),t,i),r=!this._passesBisectingAngleThreshold(n,s);return{start:t,end:i,direction:r?this._bisectVectorsPerpendicular(s,n):n,isOriginalDirection:!r}}_passesBisectingAngleThreshold(t,i){const e=Math.abs(X(i,t));return e>=T&&e<=Math.PI-T}_bisectVectorsPerpendicular(t,i){const e=a(t,i)<0?t:_(m(),t),s=Math.abs(a(e,i));if(!(s<Z||s>1-Z))return this._bisectDirection(e,i);const n=c(m(),e,[0,0,1]);return l(n,n)}_bisectDirection(t,i){const e=p(m(),t,i);return l(e,e)}_initializePlane(){const t=this._computeNormalDirection(this._left),i=this._computeNormalDirection(this._right);a(t,i)<0&&_(i,i),E(this._left.start,this._bisectDirection(t,i),this._plane)}_computeNormalDirection(t){const i=c(m(),t.direction,this._edgeDirection);l(i,i);const e=c(m(),this._edgeDirection,i);return this._planeType===A.XY&&(e[2]=0),l(e,e)}_initializeDistanceConstraints(){i(this._left.end)&&!this.requiresSplitEdgeLeft&&this._updateDistanceConstraint(x(this._plane,this._left.end)),i(this._right.end)&&!this.requiresSplitEdgeRight&&this._updateDistanceConstraint(x(this._plane,this._right.end)),this._updateIntersectDistanceConstraint(this._plane)}_updateDistanceConstraint(t){t<=0&&(this._minDistance=Math.max(this._minDistance,t)),t>=0&&(this._maxDistance=Math.min(this._maxDistance,t))}_updateIntersectDistanceConstraint(t){const i=V(t),e=this._edgeDirection,o=p(m(),this._left.start,this._left.direction),a=p(m(),this._right.start,this._right.direction),_=this._pointInBasis2D(h(),i,e,this._left.start),c=this._pointInBasis2D(h(),i,e,o),l=this._pointInBasis2D(h(),i,e,this._right.start),g=this._pointInBasis2D(h(),i,e,a),[f]=N({start:c,end:_,type:y.LINE},{start:g,end:l,type:y.LINE});if(!f)return;const u=s(h(),_,c);n(u,u);const D=s(h(),f,c),E=r(u,D),b=p(m(),o,d(m(),this._left.direction,-E)),I=x(t,b);this._updateDistanceConstraint(I)}_pointInBasis2D(t,i,e,s){return t[0]=Y(i,s),t[1]=Y(e,s),t}_offset(t,e){Number.isFinite(this._minDistance)&&(e=Math.max(this._minDistance,e)),Number.isFinite(this._maxDistance)&&(e=Math.min(this._maxDistance,e)),b(this._offsetPlane,this._plane),this._offsetPlane[3]-=e;const s=(t,e,s)=>i(e)&&M(this._offsetPlane,t,p(m(),t,e),s),n=m();(t===this._edge.leftVertex?s(this._left.start,this._left.direction,n):s(this._right.start,this._right.direction,n))&&this._helper.copy(this._helper.fromXYZ(n,void 0,this._helper.getM(t.pos)),t.pos)}selectArrowFromStartPoint(t){this._selectedArrow=I(this.plane,this._pointToXYZ(t))?1:-1}get selectedArrow(){return this._selectedArrow}signedDistanceToPoint(t){return x(this.plane,this._pointToXYZ(t))}apply(t){this._offset(t,this.distance)}undo(t){this._offset(t,0)}canAccumulate(t){return t instanceof P&&this._edge.leftVertex.index===t._edge.leftVertex.index&&this._edge.rightVertex.index===t._edge.rightVertex.index&&this._edge.component===t._edge.component&&this._maybeEqualsVec3(this._left.direction,t._left.direction)&&this._maybeEqualsVec3(this._right.direction,t._right.direction)&&g(V(this._plane),V(t._plane))}accumulate(t,i){const e=this._plane[3]-i._plane[3]+i.distance;this._offset(t,e)}accumulateParams(t){const i=t.distance-t._plane[3];this.distance=i+this._plane[3]}clone(){const t=new P(this._helper,this._planeType,this._edge,this.distance,j.DEFERRED);return b(t._plane,this._plane),b(t._offsetPlane,this._offsetPlane),t._maxDistance=this._maxDistance,t._minDistance=this._minDistance,t._left=this._cloneNeighbor(this._left),t._right=this._cloneNeighbor(this._right),t._edgeDirection=f(m(),this._edgeDirection),t}_maybeEqualsVec3(t,s){return e(t)&&e(s)||i(t)&&i(s)&&g(t,s)}_cloneNeighbor({start:t,end:e,direction:s,isOriginalDirection:n}){return{start:f(m(),t),end:i(e)?f(m(),e):null,direction:f(m(),s),isOriginalDirection:n}}}const T=t(15),Z=.001;var A,j;!function(t){t[t.XYZ=0]=\"XYZ\",t[t.XY=1]=\"XY\"}(A||(A={})),function(t){t[t.IMMEDIATE=0]=\"IMMEDIATE\",t[t.DEFERRED=1]=\"DEFERRED\"}(j||(j={}));export{P as OffsetEdgeVertex,A as PlaneType};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}