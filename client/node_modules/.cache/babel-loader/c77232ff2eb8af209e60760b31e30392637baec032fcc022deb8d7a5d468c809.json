{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport has from \"../../../../core/has.js\";\nimport { clamp as e, isPowerOfTwo as a } from \"../../../../core/mathUtils.js\";\nimport { isSome as o, isNone as r } from \"../../../../core/maybe.js\";\nimport { TextureEncoding as s, TextureUsage as t } from \"./enums.js\";\nimport { RenderTexture as n } from \"../../webgl-engine/core/material/RenderTexture.js\";\nimport { PBRSchematicMRRValues as l } from \"../../webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { defaultMaskAlphaCutoff as i } from \"../../webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { getEllipsoidMode as u } from \"../../webgl-engine/core/shaderLibrary/util/EllipsoidMode.js\";\nimport { TextureEncodingMimeType as c, CullFaceOptions as m, AlphaDiscardMode as d } from \"../../webgl-engine/lib/basicInterfaces.js\";\nimport { Texture as g } from \"../../webgl-engine/lib/Texture.js\";\nimport { TextureWrapMode as p } from \"../../../webgl/enums.js\";\nfunction h(e, a) {\n  const s = new Map(),\n    n = (e, a) => {\n      if (r(e)) return -1;\n      const o = s.get(e.id);\n      if (o) return o.usage |= a, o.id;\n      const t = s.size;\n      return s.set(e.id, {\n        id: t,\n        usage: a\n      }), t;\n    },\n    i = a.pbrMetallicRoughness,\n    u = i && i.baseColorFactor,\n    c = a.emissiveFactor,\n    d = null == a.normalTexture && null == a.emissiveTexture && null == a.occlusionTexture && (!i || null == i.metallicRoughnessTexture && 1 === i.roughnessFactor && (1 === i.metallicFactor || 0 === i.metallicFactor)),\n    g = d ? l[0] : i ? i.metallicFactor : 1,\n    p = d ? l[1] : i ? i.roughnessFactor : 1,\n    h = \"mask\" === a.alphaMode ? t.Color | t.AlphaMask : t.Color,\n    x = {\n      baseColorFactor: u ? [u[0], u[1], u[2], u[3]] : [1, 1, 1, 1],\n      baseColorTextureId: n(i && i.baseColorTexture, h),\n      metallicRoughnessTextureId: n(i && i.metallicRoughnessTexture, t.MetallicRoughness),\n      metallicFactor: g,\n      roughnessFactor: p\n    },\n    b = {\n      alphaMode: a.alphaMode,\n      alphaCutoff: a.alphaCutoff,\n      doubleSided: a.doubleSided,\n      cullFace: \"none\" === a.cullFace ? m.None : \"back\" === a.cullFace ? m.Back : \"front\" === a.cullFace ? m.Front : m.None,\n      normalTextureId: n(a.normalTexture, t.Normal),\n      emissiveTextureId: n(a.emissiveTexture, t.Emissive),\n      occlusionTextureId: n(a.occlusionTexture, t.Occlusion),\n      emissiveFactor: c ? [c[0], c[1], c[2]] : [0, 0, 0],\n      metallicRoughness: x,\n      wrapTextures: !1,\n      hasParametersFromSource: d\n    },\n    F = [];\n  return s.forEach((_ref, r) => {\n    let {\n      usage: a\n    } = _ref;\n    const s = o(e) && e[r] && e[r].formats,\n      t = s ? f(s.map(_ref2 => {\n        let {\n          name: e,\n          format: a\n        } = _ref2;\n        return {\n          name: e,\n          encoding: T[a]\n        };\n      })) : [];\n    F.push({\n      id: r,\n      usage: a,\n      encodings: t\n    });\n  }), {\n    material: b,\n    textures: F\n  };\n}\nfunction f(e) {\n  return e.sort((e, a) => e.encoding - a.encoding);\n}\nconst T = {\n    ktx2: s.KTX2,\n    basis: s.Basis,\n    dds: s.DDS_S3TC,\n    png: s.PNG,\n    jpg: s.JPG,\n    \"ktx-etc2\": s.KTX_ETC2\n  },\n  x = {\n    [c.KTX2_ENCODING]: s.Basis,\n    [c.BASIS_ENCODING]: s.Basis,\n    [c.DDS_ENCODING]: s.DDS_S3TC,\n    \"image/png\": s.PNG,\n    \"image/jpg\": s.JPG,\n    \"image/jpeg\": s.JPG,\n    \"image/ktx\": s.KTX_ETC2\n  };\nfunction b(a) {\n  const o = a && a.materialDefinitions ? Object.keys(a.materialDefinitions)[0] : null,\n    r = a && a.textureDefinitions ? Object.keys(a.textureDefinitions)[0] : null,\n    s = o ? a.materialDefinitions?.[o] : null,\n    n = r ? a.textureDefinitions?.[r] : null,\n    l = F();\n  if (null != s) {\n    const a = s.params;\n    a.diffuse && (l.metallicRoughness.baseColorFactor = [a.diffuse[0], a.diffuse[1], a.diffuse[2], 1]), null != a.doubleSided && (l.doubleSided = a.doubleSided, l.cullFace = a.doubleSided ? m.None : m.Back), \"none\" !== a.cullFace && \"front\" !== a.cullFace && \"back\" !== a.cullFace || (l.cullFace = \"none\" === a.cullFace ? m.None : \"back\" === a.cullFace ? m.Back : m.Front), a.transparency && (l.metallicRoughness.baseColorFactor[3] = e(1 - a.transparency, 0, 1)), (a.useVertexColorAlpha || l.metallicRoughness.baseColorFactor[3] < 1) && (l.alphaMode = \"blend\");\n  }\n  const i = [];\n  if (null != n) {\n    const e = 0;\n    !n.wrap || \"repeat\" !== n.wrap[0] && \"repeat\" !== n.wrap[1] || (l.wrapTextures = !0);\n    let a = t.Color;\n    \"rgba\" === n.channels && (l.alphaMode = \"blend\", a |= t.AlphaMask);\n    const o = n.images.length - 1,\n      r = n.images[o],\n      s = e => e && e.split(\"/\").pop(),\n      u = Array.isArray(n.encoding) ? f(n.encoding.map((e, a) => ({\n        name: s(r.href[a]),\n        encoding: x[e] || 0\n      }))) : [{\n        name: s(r.href),\n        encoding: x[n.encoding] || 0\n      }];\n    i.push({\n      id: e,\n      usage: a,\n      encodings: u\n    }), l.metallicRoughness.baseColorTextureId = e;\n  }\n  return {\n    material: l,\n    textures: i\n  };\n}\nconst F = () => ({\n  alphaMode: \"opaque\",\n  alphaCutoff: i,\n  doubleSided: !0,\n  cullFace: m.None,\n  normalTextureId: -1,\n  emissiveTextureId: -1,\n  occlusionTextureId: -1,\n  emissiveFactor: [0, 0, 0],\n  metallicRoughness: {\n    baseColorFactor: [.8, .8, .8, 1],\n    baseColorTextureId: -1,\n    metallicRoughnessTextureId: -1,\n    metallicFactor: 0,\n    roughnessFactor: .6\n  },\n  wrapTextures: !1,\n  hasParametersFromSource: !0\n});\nfunction C(e, o, s, n) {\n  if (r(e) || null == e.data) return null;\n  const l = e.data,\n    i = !(l instanceof HTMLImageElement) || a(l.width) && a(l.height),\n    u = n.renderingContext.parameters.maxMaxAnisotropy,\n    c = s && !n.capabilities.shaderTextureLOD ? 1 : u,\n    m = i && !e.downsampled && c > 1,\n    d = s || !o.wrapTextures ? P : M,\n    p = E(e.encoding),\n    h = e.usage & t.Color ? \"opaque\" === o.alphaMode ? 3 : 4 : 3;\n  return new g(l, {\n    mipmap: m,\n    maxAnisotropy: c,\n    encoding: p,\n    wrap: d,\n    components: h,\n    noUnpackFlip: !0\n  });\n}\nconst P = {\n    s: p.CLAMP_TO_EDGE,\n    t: p.CLAMP_TO_EDGE\n  },\n  M = {\n    s: p.REPEAT,\n    t: p.REPEAT\n  };\nfunction S(a, r, s, l, c, m) {\n  const g = m.rendererTextureUsage,\n    p = e => R(l, s, e & g),\n    h = r.metallicRoughness.baseColorFactor,\n    f = e(r.metallicRoughness.baseColorFactor[3], 0, 1);\n  a.baseColor = [h[0], h[1], h[2], f], a.hasParametersFromSource = !!r.hasParametersFromSource, a.usePBR = m.usePBR, a.mrrFactors = [r.metallicRoughness.metallicFactor, r.metallicRoughness.roughnessFactor, r.hasParametersFromSource ? .2 : .5], a.emissiveFactor = r.emissiveFactor, a.isIntegratedMesh = m.isIntegratedMesh, a.textureAlphaCutoff = \"mask\" === r.alphaMode ? r.alphaCutoff : i, a.alphaDiscardMode = \"opaque\" === r.alphaMode ? d.Opaque : \"mask\" === r.alphaMode ? d.Mask : d.MaskBlend;\n  const T = [],\n    x = p(t.Color | t.AlphaMask);\n  o(x) && (a.baseColorTexture = new n(c, x), T.push(a.baseColorTexture.loadPromise));\n  const b = p(t.MetallicRoughness);\n  o(b) && (a.metallicRoughnessTexture = new n(c, b), T.push(a.metallicRoughnessTexture.loadPromise));\n  const F = p(t.Emissive);\n  o(F) && (a.emissionTexture = new n(c, F), T.push(a.emissionTexture.loadPromise));\n  const C = p(t.Occlusion);\n  o(C) && (a.occlusionTexture = new n(c, C), T.push(a.occlusionTexture.loadPromise));\n  const P = p(t.Normal);\n  return o(P) && (a.normalTexture = new n(c, P), T.push(a.normalTexture.loadPromise)), a.commonMaterialParameters.hasSlicePlane = m.slicePlaneEnabled, a.commonMaterialParameters.doubleSided = r.doubleSided, a.commonMaterialParameters.cullFace = r.cullFace, a.ellipsoidMode = u(m.viewSpatialReference), Promise.all(T);\n}\nfunction D(e) {\n  const a = !!e.compressedTextureS3TC,\n    o = !!e.compressedTextureETC,\n    r = has(\"disable-feature:i3s-basis\") ? 0 : s.Basis | s.KTX2,\n    t = s.JPG | s.PNG,\n    n = r | s.DDS_S3TC;\n  return t | (a ? n : 0) | (o ? r : 0);\n}\nfunction w(e, a) {\n  if (null != a) return e.find(e => 0 != (e.encoding & a));\n}\nfunction R(e, a, s) {\n  if (r(e) || s === t.None) return null;\n  for (let r = 0; r < e.length; r++) {\n    const t = e[r];\n    if (o(t) && 0 != (t.usage & s)) {\n      const e = a[r];\n      return o(e) ? e.id : null;\n    }\n  }\n  return null;\n}\nfunction E(e) {\n  switch (e) {\n    case s.KTX2:\n      return c.KTX2_ENCODING;\n    case s.Basis:\n      return c.BASIS_ENCODING;\n    case s.DDS_S3TC:\n      return c.DDS_ENCODING;\n    case s.PNG:\n      return \"image/png\";\n    case s.JPG:\n      return \"image/jpeg\";\n    case s.KTX_ETC2:\n      return \"image/ktx\";\n    default:\n      return \"\";\n  }\n}\nexport { S as configureMaterial, C as createTexture, F as defaultMaterial, h as getMaterialAndTextures, b as getMaterialAndTexturesFromShared, D as getSupportedEncodings, w as selectEncoding };","map":{"version":3,"names":["has","clamp","e","isPowerOfTwo","a","isSome","o","isNone","r","TextureEncoding","s","TextureUsage","t","RenderTexture","n","PBRSchematicMRRValues","l","defaultMaskAlphaCutoff","i","getEllipsoidMode","u","TextureEncodingMimeType","c","CullFaceOptions","m","AlphaDiscardMode","d","Texture","g","TextureWrapMode","p","h","Map","get","id","usage","size","set","pbrMetallicRoughness","baseColorFactor","emissiveFactor","normalTexture","emissiveTexture","occlusionTexture","metallicRoughnessTexture","roughnessFactor","metallicFactor","alphaMode","Color","AlphaMask","x","baseColorTextureId","baseColorTexture","metallicRoughnessTextureId","MetallicRoughness","b","alphaCutoff","doubleSided","cullFace","None","Back","Front","normalTextureId","Normal","emissiveTextureId","Emissive","occlusionTextureId","Occlusion","metallicRoughness","wrapTextures","hasParametersFromSource","F","forEach","_ref","formats","f","map","_ref2","name","format","encoding","T","push","encodings","material","textures","sort","ktx2","KTX2","basis","Basis","dds","DDS_S3TC","png","PNG","jpg","JPG","KTX_ETC2","KTX2_ENCODING","BASIS_ENCODING","DDS_ENCODING","materialDefinitions","Object","keys","textureDefinitions","params","diffuse","transparency","useVertexColorAlpha","wrap","channels","images","length","split","pop","Array","isArray","href","C","data","HTMLImageElement","width","height","renderingContext","parameters","maxMaxAnisotropy","capabilities","shaderTextureLOD","downsampled","P","M","E","mipmap","maxAnisotropy","components","noUnpackFlip","CLAMP_TO_EDGE","REPEAT","S","rendererTextureUsage","R","baseColor","usePBR","mrrFactors","isIntegratedMesh","textureAlphaCutoff","alphaDiscardMode","Opaque","Mask","MaskBlend","loadPromise","emissionTexture","commonMaterialParameters","hasSlicePlane","slicePlaneEnabled","ellipsoidMode","viewSpatialReference","Promise","all","D","compressedTextureS3TC","compressedTextureETC","w","find","configureMaterial","createTexture","defaultMaterial","getMaterialAndTextures","getMaterialAndTexturesFromShared","getSupportedEncodings","selectEncoding"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/layers/i3s/I3SMaterialUtil.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{clamp as e,isPowerOfTwo as a}from\"../../../../core/mathUtils.js\";import{isSome as o,isNone as r}from\"../../../../core/maybe.js\";import{TextureEncoding as s,TextureUsage as t}from\"./enums.js\";import{RenderTexture as n}from\"../../webgl-engine/core/material/RenderTexture.js\";import{PBRSchematicMRRValues as l}from\"../../webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{defaultMaskAlphaCutoff as i}from\"../../webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{getEllipsoidMode as u}from\"../../webgl-engine/core/shaderLibrary/util/EllipsoidMode.js\";import{TextureEncodingMimeType as c,CullFaceOptions as m,AlphaDiscardMode as d}from\"../../webgl-engine/lib/basicInterfaces.js\";import{Texture as g}from\"../../webgl-engine/lib/Texture.js\";import{TextureWrapMode as p}from\"../../../webgl/enums.js\";function h(e,a){const s=new Map,n=(e,a)=>{if(r(e))return-1;const o=s.get(e.id);if(o)return o.usage|=a,o.id;const t=s.size;return s.set(e.id,{id:t,usage:a}),t},i=a.pbrMetallicRoughness,u=i&&i.baseColorFactor,c=a.emissiveFactor,d=null==a.normalTexture&&null==a.emissiveTexture&&null==a.occlusionTexture&&(!i||null==i.metallicRoughnessTexture&&1===i.roughnessFactor&&(1===i.metallicFactor||0===i.metallicFactor)),g=d?l[0]:i?i.metallicFactor:1,p=d?l[1]:i?i.roughnessFactor:1,h=\"mask\"===a.alphaMode?t.Color|t.AlphaMask:t.Color,x={baseColorFactor:u?[u[0],u[1],u[2],u[3]]:[1,1,1,1],baseColorTextureId:n(i&&i.baseColorTexture,h),metallicRoughnessTextureId:n(i&&i.metallicRoughnessTexture,t.MetallicRoughness),metallicFactor:g,roughnessFactor:p},b={alphaMode:a.alphaMode,alphaCutoff:a.alphaCutoff,doubleSided:a.doubleSided,cullFace:\"none\"===a.cullFace?m.None:\"back\"===a.cullFace?m.Back:\"front\"===a.cullFace?m.Front:m.None,normalTextureId:n(a.normalTexture,t.Normal),emissiveTextureId:n(a.emissiveTexture,t.Emissive),occlusionTextureId:n(a.occlusionTexture,t.Occlusion),emissiveFactor:c?[c[0],c[1],c[2]]:[0,0,0],metallicRoughness:x,wrapTextures:!1,hasParametersFromSource:d},F=[];return s.forEach((({usage:a},r)=>{const s=o(e)&&e[r]&&e[r].formats,t=s?f(s.map((({name:e,format:a})=>({name:e,encoding:T[a]})))):[];F.push({id:r,usage:a,encodings:t})})),{material:b,textures:F}}function f(e){return e.sort(((e,a)=>e.encoding-a.encoding))}const T={ktx2:s.KTX2,basis:s.Basis,dds:s.DDS_S3TC,png:s.PNG,jpg:s.JPG,\"ktx-etc2\":s.KTX_ETC2},x={[c.KTX2_ENCODING]:s.Basis,[c.BASIS_ENCODING]:s.Basis,[c.DDS_ENCODING]:s.DDS_S3TC,\"image/png\":s.PNG,\"image/jpg\":s.JPG,\"image/jpeg\":s.JPG,\"image/ktx\":s.KTX_ETC2};function b(a){const o=a&&a.materialDefinitions?Object.keys(a.materialDefinitions)[0]:null,r=a&&a.textureDefinitions?Object.keys(a.textureDefinitions)[0]:null,s=o?a.materialDefinitions?.[o]:null,n=r?a.textureDefinitions?.[r]:null,l=F();if(null!=s){const a=s.params;a.diffuse&&(l.metallicRoughness.baseColorFactor=[a.diffuse[0],a.diffuse[1],a.diffuse[2],1]),null!=a.doubleSided&&(l.doubleSided=a.doubleSided,l.cullFace=a.doubleSided?m.None:m.Back),\"none\"!==a.cullFace&&\"front\"!==a.cullFace&&\"back\"!==a.cullFace||(l.cullFace=\"none\"===a.cullFace?m.None:\"back\"===a.cullFace?m.Back:m.Front),a.transparency&&(l.metallicRoughness.baseColorFactor[3]=e(1-a.transparency,0,1)),(a.useVertexColorAlpha||l.metallicRoughness.baseColorFactor[3]<1)&&(l.alphaMode=\"blend\")}const i=[];if(null!=n){const e=0;!n.wrap||\"repeat\"!==n.wrap[0]&&\"repeat\"!==n.wrap[1]||(l.wrapTextures=!0);let a=t.Color;\"rgba\"===n.channels&&(l.alphaMode=\"blend\",a|=t.AlphaMask);const o=n.images.length-1,r=n.images[o],s=e=>e&&e.split(\"/\").pop(),u=Array.isArray(n.encoding)?f(n.encoding.map(((e,a)=>({name:s(r.href[a]),encoding:x[e]||0})))):[{name:s(r.href),encoding:x[n.encoding]||0}];i.push({id:e,usage:a,encodings:u}),l.metallicRoughness.baseColorTextureId=e}return{material:l,textures:i}}const F=()=>({alphaMode:\"opaque\",alphaCutoff:i,doubleSided:!0,cullFace:m.None,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[.8,.8,.8,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6},wrapTextures:!1,hasParametersFromSource:!0});function C(e,o,s,n){if(r(e)||null==e.data)return null;const l=e.data,i=!(l instanceof HTMLImageElement)||a(l.width)&&a(l.height),u=n.renderingContext.parameters.maxMaxAnisotropy,c=s&&!n.capabilities.shaderTextureLOD?1:u,m=i&&!e.downsampled&&c>1,d=s||!o.wrapTextures?P:M,p=E(e.encoding),h=e.usage&t.Color?\"opaque\"===o.alphaMode?3:4:3;return new g(l,{mipmap:m,maxAnisotropy:c,encoding:p,wrap:d,components:h,noUnpackFlip:!0})}const P={s:p.CLAMP_TO_EDGE,t:p.CLAMP_TO_EDGE},M={s:p.REPEAT,t:p.REPEAT};function S(a,r,s,l,c,m){const g=m.rendererTextureUsage,p=e=>R(l,s,e&g),h=r.metallicRoughness.baseColorFactor,f=e(r.metallicRoughness.baseColorFactor[3],0,1);a.baseColor=[h[0],h[1],h[2],f],a.hasParametersFromSource=!!r.hasParametersFromSource,a.usePBR=m.usePBR,a.mrrFactors=[r.metallicRoughness.metallicFactor,r.metallicRoughness.roughnessFactor,r.hasParametersFromSource?.2:.5],a.emissiveFactor=r.emissiveFactor,a.isIntegratedMesh=m.isIntegratedMesh,a.textureAlphaCutoff=\"mask\"===r.alphaMode?r.alphaCutoff:i,a.alphaDiscardMode=\"opaque\"===r.alphaMode?d.Opaque:\"mask\"===r.alphaMode?d.Mask:d.MaskBlend;const T=[],x=p(t.Color|t.AlphaMask);o(x)&&(a.baseColorTexture=new n(c,x),T.push(a.baseColorTexture.loadPromise));const b=p(t.MetallicRoughness);o(b)&&(a.metallicRoughnessTexture=new n(c,b),T.push(a.metallicRoughnessTexture.loadPromise));const F=p(t.Emissive);o(F)&&(a.emissionTexture=new n(c,F),T.push(a.emissionTexture.loadPromise));const C=p(t.Occlusion);o(C)&&(a.occlusionTexture=new n(c,C),T.push(a.occlusionTexture.loadPromise));const P=p(t.Normal);return o(P)&&(a.normalTexture=new n(c,P),T.push(a.normalTexture.loadPromise)),a.commonMaterialParameters.hasSlicePlane=m.slicePlaneEnabled,a.commonMaterialParameters.doubleSided=r.doubleSided,a.commonMaterialParameters.cullFace=r.cullFace,a.ellipsoidMode=u(m.viewSpatialReference),Promise.all(T)}function D(e){const a=!!e.compressedTextureS3TC,o=!!e.compressedTextureETC,r=has(\"disable-feature:i3s-basis\")?0:s.Basis|s.KTX2,t=s.JPG|s.PNG,n=r|s.DDS_S3TC;return t|(a?n:0)|(o?r:0)}function w(e,a){if(null!=a)return e.find((e=>0!=(e.encoding&a)))}function R(e,a,s){if(r(e)||s===t.None)return null;for(let r=0;r<e.length;r++){const t=e[r];if(o(t)&&0!=(t.usage&s)){const e=a[r];return o(e)?e.id:null}}return null}function E(e){switch(e){case s.KTX2:return c.KTX2_ENCODING;case s.Basis:return c.BASIS_ENCODING;case s.DDS_S3TC:return c.DDS_ENCODING;case s.PNG:return\"image/png\";case s.JPG:return\"image/jpeg\";case s.KTX_ETC2:return\"image/ktx\";default:return\"\"}}export{S as configureMaterial,C as createTexture,F as defaultMaterial,h as getMaterialAndTextures,b as getMaterialAndTexturesFromShared,D as getSupportedEncodings,w as selectEncoding};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}