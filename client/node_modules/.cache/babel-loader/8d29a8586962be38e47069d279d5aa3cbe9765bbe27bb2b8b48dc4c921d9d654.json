{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { ForwardLinearDepth as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { ShaderOutput as r } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SliceDraw as i } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as o } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { OutputHighlight as a } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { EvaluateAmbientLighting as s } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl.js\";\nimport { MainLighting as n, addMainLightDirection as t, addMainLightIntensity as l } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";\nimport { multipassTerrainTest as d } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { NormalUtils as g } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";\nimport { PBRMode as v } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadShadowMapDraw as m } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { Water as c } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/Water.glsl.js\";\nimport { WaterDistortion as p } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/WaterDistortion.glsl.js\";\nimport { symbolAlphaCutoff as u } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { ColorConversion as w } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";\nimport { addProjViewLocalOrigin as h, addCameraPosition as f } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float4PassUniform as b } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as y } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as j } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as C } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { TransparencyPassType as F } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nimport { VertexAttribute as L } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nfunction P(P) {\n  const _ = new C(),\n    {\n      vertex: M,\n      fragment: S\n    } = _;\n  h(M, P), _.include(o, P), _.attributes.add(L.POSITION, \"vec3\"), _.attributes.add(L.UV0, \"vec2\");\n  const x = new b(\"waterColor\", e => e.color);\n  if (P.output === r.Color && P.isDraped) return _.varyings.add(\"vpos\", \"vec3\"), M.uniforms.add(x), M.code.add(j`\n        void main(void) {\n          if (waterColor.a < ${j.float(u)}) {\n            // Discard this vertex\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n            return;\n          }\n\n          vpos = position;\n          gl_Position = transformPosition(proj, view, vpos);\n        }\n    `), S.uniforms.add(x), S.code.add(j`void main() {\ngl_FragColor = waterColor;\n}`), _;\n  switch (P.output !== r.Color && P.output !== r.Alpha || (_.include(g, P), _.include(e, P), _.varyings.add(\"vuv\", \"vec2\"), _.varyings.add(\"vpos\", \"vec3\"), _.varyings.add(\"vnormal\", \"vec3\"), _.varyings.add(\"vtbnMatrix\", \"mat3\"), P.hasMultipassTerrain && _.varyings.add(\"depth\", \"float\"), M.uniforms.add(x), M.code.add(j`\n      void main(void) {\n        if (waterColor.a < ${j.float(u)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vuv = uv0;\n        vpos = position;\n\n        vnormal = getLocalUp(vpos, localOrigin);\n        vtbnMatrix = getTBNMatrix(vnormal);\n\n        ${P.hasMultipassTerrain ? \"depth = (view * vec4(vpos, 1.0)).z;\" : \"\"}\n\n        gl_Position = transformPosition(proj, view, vpos);\n        ${P.output === r.Color ? \"forwardLinearDepth();\" : \"\"}\n      }\n    `)), _.include(d, P), P.output) {\n    case r.Alpha:\n      _.include(i, P), S.uniforms.add(x), S.code.add(j`\n        void main() {\n          discardBySlice(vpos);\n          ${P.hasMultipassTerrain ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\"}\n\n          gl_FragColor = vec4(waterColor.a);\n        }\n      `);\n      break;\n    case r.Color:\n      _.include(n, P), _.include(s, {\n        pbrMode: v.Disabled,\n        lightingSphericalHarmonicsOrder: 2\n      }), _.include(p), _.include(i, P), _.include(m, P), _.include(c, P), S.uniforms.add([x, new y(\"timeElapsed\", e => e.timeElapsed), M.uniforms.get(\"view\"), M.uniforms.get(\"localOrigin\")]), f(S, P), S.include(w), t(S), l(S), S.code.add(j`\n      void main() {\n        discardBySlice(vpos);\n        ${P.hasMultipassTerrain ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\"}\n        vec3 localUp = vnormal;\n        // the created normal is in tangent space\n        vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);\n\n        // we rotate the normal according to the tangent-bitangent-normal-Matrix\n        vec3 n = normalize(vtbnMatrix * tangentNormalFoam.xyz);\n        vec3 v = -normalize(vpos - cameraPosition);\n        float shadow = ${P.receiveShadows ? j`1.0 - readShadowMap(vpos, linearDepth)` : \"1.0\"};\n        vec4 vPosView = view * vec4(vpos, 1.0);\n        vec4 final = vec4(getSeaColor(n, v, mainLightDirection, waterColor.rgb, mainLightIntensity, localUp, shadow, tangentNormalFoam.w, vPosView.xyz, vpos + localOrigin), waterColor.w);\n\n        // gamma correction\n        gl_FragColor = delinearizeGamma(final);\n        gl_FragColor = highlightSlice(gl_FragColor, vpos);\n        ${P.transparencyPassType === F.Color ? \"gl_FragColor = premultiplyAlpha(gl_FragColor);\" : \"\"}\n      }\n    `);\n      break;\n    case r.Normal:\n      _.include(g, P), _.include(p, P), _.include(i, P), _.varyings.add(\"vpos\", \"vec3\"), _.varyings.add(\"vuv\", \"vec2\"), M.uniforms.add(x), M.code.add(j`\n        void main(void) {\n          if (waterColor.a < ${j.float(u)}) {\n            // Discard this vertex\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n            return;\n          }\n\n          vuv = uv0;\n          vpos = position;\n\n          gl_Position = transformPosition(proj, view, vpos);\n        }\n    `), S.uniforms.add(new y(\"timeElapsed\", e => e.timeElapsed)), S.code.add(j`void main() {\ndiscardBySlice(vpos);\nvec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);\ntangentNormalFoam.xyz = normalize(tangentNormalFoam.xyz);\ngl_FragColor = vec4((tangentNormalFoam.xyz + vec3(1.0)) * 0.5, tangentNormalFoam.w);\n}`);\n      break;\n    case r.Highlight:\n      _.include(a, P), _.varyings.add(\"vpos\", \"vec3\"), M.uniforms.add(x), M.code.add(j`\n      void main(void) {\n        if (waterColor.a < ${j.float(u)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vpos = position;\n        gl_Position = transformPosition(proj, view, vpos);\n      }\n    `), _.include(i, P), S.code.add(j`void main() {\ndiscardBySlice(vpos);\noutputHighlight();\n}`);\n  }\n  return _;\n}\nconst _ = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: P\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { _ as W, P as b };","map":{"version":3,"names":["ForwardLinearDepth","e","ShaderOutput","r","SliceDraw","i","Transform","o","OutputHighlight","a","EvaluateAmbientLighting","s","MainLighting","n","addMainLightDirection","t","addMainLightIntensity","l","multipassTerrainTest","d","NormalUtils","g","PBRMode","v","ReadShadowMapDraw","m","Water","c","WaterDistortion","p","symbolAlphaCutoff","u","ColorConversion","w","addProjViewLocalOrigin","h","addCameraPosition","f","Float4PassUniform","b","FloatPassUniform","y","glsl","j","ShaderBuilder","C","TransparencyPassType","F","VertexAttribute","L","P","_","vertex","M","fragment","S","include","attributes","add","POSITION","UV0","x","color","output","Color","isDraped","varyings","uniforms","code","float","Alpha","hasMultipassTerrain","pbrMode","Disabled","lightingSphericalHarmonicsOrder","timeElapsed","get","receiveShadows","transparencyPassType","Normal","Highlight","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value","W"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/chunks/WaterSurface.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{ShaderOutput as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{OutputHighlight as a}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{EvaluateAmbientLighting as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl.js\";import{MainLighting as n,addMainLightDirection as t,addMainLightIntensity as l}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as d}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{NormalUtils as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";import{PBRMode as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapDraw as m}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{Water as c}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Water.glsl.js\";import{WaterDistortion as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/WaterDistortion.glsl.js\";import{symbolAlphaCutoff as u}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as w}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{addProjViewLocalOrigin as h,addCameraPosition as f}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float4PassUniform as b}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as y}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as j}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as C}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{TransparencyPassType as F}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as L}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function P(P){const _=new C,{vertex:M,fragment:S}=_;h(M,P),_.include(o,P),_.attributes.add(L.POSITION,\"vec3\"),_.attributes.add(L.UV0,\"vec2\");const x=new b(\"waterColor\",(e=>e.color));if(P.output===r.Color&&P.isDraped)return _.varyings.add(\"vpos\",\"vec3\"),M.uniforms.add(x),M.code.add(j`\n        void main(void) {\n          if (waterColor.a < ${j.float(u)}) {\n            // Discard this vertex\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n            return;\n          }\n\n          vpos = position;\n          gl_Position = transformPosition(proj, view, vpos);\n        }\n    `),S.uniforms.add(x),S.code.add(j`void main() {\ngl_FragColor = waterColor;\n}`),_;switch(P.output!==r.Color&&P.output!==r.Alpha||(_.include(g,P),_.include(e,P),_.varyings.add(\"vuv\",\"vec2\"),_.varyings.add(\"vpos\",\"vec3\"),_.varyings.add(\"vnormal\",\"vec3\"),_.varyings.add(\"vtbnMatrix\",\"mat3\"),P.hasMultipassTerrain&&_.varyings.add(\"depth\",\"float\"),M.uniforms.add(x),M.code.add(j`\n      void main(void) {\n        if (waterColor.a < ${j.float(u)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vuv = uv0;\n        vpos = position;\n\n        vnormal = getLocalUp(vpos, localOrigin);\n        vtbnMatrix = getTBNMatrix(vnormal);\n\n        ${P.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n\n        gl_Position = transformPosition(proj, view, vpos);\n        ${P.output===r.Color?\"forwardLinearDepth();\":\"\"}\n      }\n    `)),_.include(d,P),P.output){case r.Alpha:_.include(i,P),S.uniforms.add(x),S.code.add(j`\n        void main() {\n          discardBySlice(vpos);\n          ${P.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n\n          gl_FragColor = vec4(waterColor.a);\n        }\n      `);break;case r.Color:_.include(n,P),_.include(s,{pbrMode:v.Disabled,lightingSphericalHarmonicsOrder:2}),_.include(p),_.include(i,P),_.include(m,P),_.include(c,P),S.uniforms.add([x,new y(\"timeElapsed\",(e=>e.timeElapsed)),M.uniforms.get(\"view\"),M.uniforms.get(\"localOrigin\")]),f(S,P),S.include(w),t(S),l(S),S.code.add(j`\n      void main() {\n        discardBySlice(vpos);\n        ${P.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        vec3 localUp = vnormal;\n        // the created normal is in tangent space\n        vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);\n\n        // we rotate the normal according to the tangent-bitangent-normal-Matrix\n        vec3 n = normalize(vtbnMatrix * tangentNormalFoam.xyz);\n        vec3 v = -normalize(vpos - cameraPosition);\n        float shadow = ${P.receiveShadows?j`1.0 - readShadowMap(vpos, linearDepth)`:\"1.0\"};\n        vec4 vPosView = view * vec4(vpos, 1.0);\n        vec4 final = vec4(getSeaColor(n, v, mainLightDirection, waterColor.rgb, mainLightIntensity, localUp, shadow, tangentNormalFoam.w, vPosView.xyz, vpos + localOrigin), waterColor.w);\n\n        // gamma correction\n        gl_FragColor = delinearizeGamma(final);\n        gl_FragColor = highlightSlice(gl_FragColor, vpos);\n        ${P.transparencyPassType===F.Color?\"gl_FragColor = premultiplyAlpha(gl_FragColor);\":\"\"}\n      }\n    `);break;case r.Normal:_.include(g,P),_.include(p,P),_.include(i,P),_.varyings.add(\"vpos\",\"vec3\"),_.varyings.add(\"vuv\",\"vec2\"),M.uniforms.add(x),M.code.add(j`\n        void main(void) {\n          if (waterColor.a < ${j.float(u)}) {\n            // Discard this vertex\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n            return;\n          }\n\n          vuv = uv0;\n          vpos = position;\n\n          gl_Position = transformPosition(proj, view, vpos);\n        }\n    `),S.uniforms.add(new y(\"timeElapsed\",(e=>e.timeElapsed))),S.code.add(j`void main() {\ndiscardBySlice(vpos);\nvec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);\ntangentNormalFoam.xyz = normalize(tangentNormalFoam.xyz);\ngl_FragColor = vec4((tangentNormalFoam.xyz + vec3(1.0)) * 0.5, tangentNormalFoam.w);\n}`);break;case r.Highlight:_.include(a,P),_.varyings.add(\"vpos\",\"vec3\"),M.uniforms.add(x),M.code.add(j`\n      void main(void) {\n        if (waterColor.a < ${j.float(u)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vpos = position;\n        gl_Position = transformPosition(proj, view, vpos);\n      }\n    `),_.include(i,P),S.code.add(j`void main() {\ndiscardBySlice(vpos);\noutputHighlight();\n}`)}return _}const _=Object.freeze(Object.defineProperty({__proto__:null,build:P},Symbol.toStringTag,{value:\"Module\"}));export{_ as W,P as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}