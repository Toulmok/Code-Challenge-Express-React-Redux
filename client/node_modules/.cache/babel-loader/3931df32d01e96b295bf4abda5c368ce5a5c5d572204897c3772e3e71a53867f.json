{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isSome as t, isNone as e, unwrap as n } from \"../../../core/maybe.js\";\nimport l from \"../PixelBlock.js\";\nimport { getPixelValueRange as i } from \"../rasterFormats/pixelRangeUtils.js\";\nvar o, s;\n!function (t) {\n  t[t.matchAny = 0] = \"matchAny\", t[t.matchAll = 1] = \"matchAll\";\n}(o || (o = {})), function (t) {\n  t[t.bestMatch = 0] = \"bestMatch\", t[t.fail = 1] = \"fail\";\n}(s || (s = {}));\nconst r = 6;\nfunction a(e) {\n  return t(e) && \"esri.layers.support.PixelBlock\" === e.declaredClass && e.pixels && e.pixels.length > 0;\n}\nfunction h(t, e) {\n  if (!e?.length || !a(t)) return t;\n  const n = t.pixels.length;\n  return e && e.some(t => t >= n) || 1 === n && 1 === e.length && 0 === e[0] ? t : n !== e.length || e.some((t, e) => t !== e) ? new l({\n    pixelType: t.pixelType,\n    width: t.width,\n    height: t.height,\n    mask: t.mask,\n    validPixelCount: t.validPixelCount,\n    maskIsAlpha: t.maskIsAlpha,\n    pixels: e.map(e => t.pixels[e]),\n    statistics: t.statistics && e.map(e => t.statistics[e])\n  }) : t;\n}\nfunction f(e) {\n  if (!e?.length || e.some(t => !a(t))) return null;\n  if (1 === e.length) return t(e[0]) ? e[0].clone() : null;\n  const n = e,\n    {\n      width: i,\n      height: o,\n      pixelType: s\n    } = n[0];\n  if (n.some(t => t.width !== i || t.height !== o)) return null;\n  const r = n.map(_ref => {\n    let {\n      mask: t\n    } = _ref;\n    return t;\n  }).filter(t => null != t);\n  let h = null;\n  r.length && (h = new Uint8Array(i * o), h.set(r[0]), r.length > 1 && w(r.slice(1), h));\n  const f = [];\n  n.forEach(_ref2 => {\n    let {\n      pixels: t\n    } = _ref2;\n    return f.push(...t);\n  });\n  const c = n.map(_ref3 => {\n      let {\n        statistics: t\n      } = _ref3;\n      return t;\n    }).filter(t => t?.length),\n    u = [];\n  return c.forEach(t => u.push(...t)), new l({\n    pixelType: s,\n    width: i,\n    height: o,\n    mask: h,\n    pixels: f,\n    statistics: u.length ? u : null\n  });\n}\nfunction c(t) {\n  if (!t) return;\n  const e = t.colormap;\n  if (!e || 0 === e.length) return;\n  const n = e.sort((t, e) => t[0] - e[0]);\n  let l = 0;\n  n[0][0] < 0 && (l = n[0][0]);\n  const i = Math.max(256, n[n.length - 1][0] - l + 1),\n    o = new Uint8Array(4 * i),\n    s = [];\n  let r,\n    a = 0,\n    h = 0;\n  const f = 5 === n[0].length;\n  if (i > 65536) return n.forEach(t => {\n    s[t[0] - l] = f ? t.slice(1) : t.slice(1).concat([255]);\n  }), {\n    indexed2DColormap: s,\n    offset: l,\n    alphaSpecified: f\n  };\n  if (t.fillUnspecified) for (r = n[h], a = r[0] - l; a < i; a++) o[4 * a] = r[1], o[4 * a + 1] = r[2], o[4 * a + 2] = r[3], o[4 * a + 3] = f ? r[4] : 255, a === r[0] - l && (r = h === n.length - 1 ? r : n[++h]);else for (a = 0; a < n.length; a++) r = n[a], h = 4 * (r[0] - l), o[h] = r[1], o[h + 1] = r[2], o[h + 2] = r[3], o[h + 3] = f ? r[4] : 255;\n  return {\n    indexedColormap: o,\n    offset: l,\n    alphaSpecified: f\n  };\n}\nfunction u(e, n) {\n  if (!a(e)) return e;\n  if (!n || !n.indexedColormap && !n.indexed2DColormap) return e;\n  const l = e.clone(),\n    i = l.pixels;\n  let o = l.mask;\n  const s = l.width * l.height;\n  if (1 !== i.length) return e;\n  const {\n    indexedColormap: r,\n    indexed2DColormap: h,\n    offset: f,\n    alphaSpecified: c\n  } = n;\n  let u = 0;\n  const p = i[0],\n    x = new Uint8Array(p.length),\n    m = new Uint8Array(p.length),\n    g = new Uint8Array(p.length);\n  let d,\n    y = 0;\n  if (r) {\n    const e = r.length - 1;\n    if (t(o)) for (u = 0; u < s; u++) o[u] && (y = 4 * (p[u] - f), y < f || y > e ? o[u] = 0 : (x[u] = r[y], m[u] = r[y + 1], g[u] = r[y + 2], o[u] = r[y + 3]));else {\n      for (o = new Uint8Array(s), u = 0; u < s; u++) y = 4 * (p[u] - f), y < f || y > e ? o[u] = 0 : (x[u] = r[y], m[u] = r[y + 1], g[u] = r[y + 2], o[u] = r[y + 3]);\n      l.mask = o;\n    }\n  } else if (h) if (t(o)) for (u = 0; u < s; u++) o[u] && (d = h[p[u]], x[u] = d[0], m[u] = d[1], g[u] = d[2], o[u] = d[3]);else {\n    for (o = new Uint8Array(s), u = 0; u < s; u++) d = h[p[u]], x[u] = d[0], m[u] = d[1], g[u] = d[2], o[u] = d[3];\n    l.mask = o;\n  }\n  return l.pixels = [x, m, g], l.statistics = null, l.pixelType = \"u8\", l.maskIsAlpha = c, l;\n}\nfunction p(t, e) {\n  if (!a(t)) return null;\n  const {\n      pixels: n,\n      mask: i\n    } = t,\n    o = n.length;\n  let s = e.lut;\n  const {\n    offset: r\n  } = e;\n  s && 1 === s[0].length && (s = n.map(() => s));\n  const h = [],\n    f = e.outputPixelType || \"u8\";\n  for (let l = 0; l < o; l++) {\n    const t = x(n[l], i, s[l], r || 0, f);\n    h.push(t);\n  }\n  const c = new l({\n    width: t.width,\n    height: t.height,\n    pixels: h,\n    mask: i,\n    pixelType: f\n  });\n  return c.updateStatistics(), c;\n}\nfunction x(t, e, n, i, o) {\n  const s = t.length,\n    r = l.createEmptyBand(o, s);\n  if (e) for (let l = 0; l < s; l++) e[l] && (r[l] = n[t[l] - i]);else for (let l = 0; l < s; l++) r[l] = n[t[l] - i];\n  return r;\n}\nfunction m(t, e) {\n  if (!a(t)) return null;\n  const n = t.clone(),\n    {\n      pixels: l\n    } = n,\n    i = n.width * n.height,\n    o = e.length,\n    s = Math.floor(o / 2),\n    r = e[Math.floor(s)],\n    h = l[0];\n  let f,\n    c,\n    u,\n    p,\n    x,\n    m,\n    g = !1;\n  const d = new Uint8Array(i),\n    y = new Uint8Array(i),\n    w = new Uint8Array(i);\n  let k = n.mask;\n  const M = 4 === e[0].mappedColor.length;\n  for (k || (k = new Uint8Array(i), k.fill(M ? 255 : 1), n.mask = k), x = 0; x < i; x++) if (k[x]) {\n    for (f = h[x], g = !1, m = s, c = r, u = 0, p = o - 1; p - u > 1;) {\n      if (f === c.value) {\n        g = !0;\n        break;\n      }\n      f > c.value ? u = m : p = m, m = Math.floor((u + p) / 2), c = e[Math.floor(m)];\n    }\n    g || (f === e[u].value ? (c = e[u], g = !0) : f === e[p].value ? (c = e[p], g = !0) : f < e[u].value ? (g = !1, c = null) : f > e[u].value && (f < e[p].value ? (c = e[u], g = !0) : p === o - 1 ? (g = !1, c = null) : (c = e[p], g = !0))), g ? (d[x] = c.mappedColor[0], y[x] = c.mappedColor[1], w[x] = c.mappedColor[2], k[x] = c.mappedColor[3]) : d[x] = y[x] = w[x] = k[x] = 0;\n  }\n  return n.pixels = [d, y, w], n.mask = k, n.pixelType = \"u8\", n.maskIsAlpha = M, n;\n}\nfunction g(t, e) {\n  if (!a(t)) return null;\n  const {\n      width: n,\n      height: o\n    } = t,\n    {\n      inputRanges: s,\n      outputValues: r,\n      outputPixelType: h,\n      noDataRanges: f,\n      allowUnmatched: c,\n      isLastInputRangeInclusive: u\n    } = e,\n    p = t.pixels[0],\n    x = l.createEmptyBand(h, p.length),\n    m = t.mask,\n    g = new Uint8Array(n * o);\n  m ? g.set(m) : g.fill(255);\n  const d = t.pixelType.startsWith(\"f\") ? 1e-6 : 0,\n    y = s.map(t => t - d);\n  y[0] = s[0], y[y.length - 1] = s[s.length - 1] + (u ? 1e-6 : 0);\n  const w = s.length / 2,\n    [k, M] = i(h);\n  for (let l = 0; l < o; l++) for (let t = 0; t < n; t++) {\n    const e = l * n + t;\n    if (g[e]) {\n      const t = p[e];\n      let n = !1;\n      for (let l = w - 1; l >= 0; l--) if (t === y[2 * l] || t > y[2 * l] && t < y[2 * l + 1]) {\n        x[e] = r[l], n = !0;\n        break;\n      }\n      n || (c ? x[e] = t > M ? M : t < k ? k : t : g[e] = 0);\n    }\n  }\n  if (f?.length) for (let l = 0; l < o; l++) for (let t = 0; t < n; t++) {\n    const e = l * n + t;\n    if (!m || m[e]) {\n      const t = p[e];\n      for (let n = 0; n < w; n += 2) if (t >= f[n] && t <= f[n + 1]) {\n        x[e] = 0, g[e] = 0;\n        break;\n      }\n    }\n  }\n  return new l({\n    width: n,\n    height: o,\n    pixelType: h,\n    pixels: [x],\n    mask: g\n  });\n}\nfunction d(t, e, n, l) {\n  const i = null != n && n.length >= 2 ? new Set(n) : null,\n    o = 1 === n?.length ? n[0] : null,\n    s = !!e?.length;\n  for (let r = 0; r < t.length; r++) if (l[r]) {\n    const n = t[r];\n    if (s) {\n      let t = !1;\n      for (let l = 0; l < e.length; l += 2) if (n >= e[l] && n <= e[l + 1]) {\n        t = !0;\n        break;\n      }\n      t || (l[r] = 0);\n    }\n    l[r] && (n === o || i?.has(n)) && (l[r] = 0);\n  }\n}\nfunction y(t, e) {\n  const n = t[0].length;\n  for (let l = 0; l < n; l++) if (e[l]) {\n    let n = !1;\n    for (let e = 0; e < t.length; e++) if (t[e][l]) {\n      n = !0;\n      break;\n    }\n    n || (e[l] = 0);\n  }\n}\nfunction w(t, e) {\n  const n = t[0].length;\n  for (let l = 0; l < n; l++) if (e[l]) {\n    let n = !1;\n    for (let e = 0; e < t.length; e++) if (0 === t[e][l]) {\n      n = !0;\n      break;\n    }\n    n && (e[l] = 0);\n  }\n}\nfunction k(t, e) {\n  if (!a(t)) return null;\n  const {\n      width: n,\n      height: i,\n      pixels: o\n    } = t,\n    s = n * i,\n    r = new Uint8Array(s);\n  t.mask ? r.set(t.mask) : r.fill(255);\n  const h = o.length,\n    {\n      includedRanges: f,\n      noDataValues: c,\n      outputPixelType: u,\n      matchAll: p,\n      lookups: m\n    } = e;\n  if (m) {\n    const t = [];\n    for (let e = 0; e < h; e++) {\n      const n = m[e],\n        l = x(o[e], r, n.lut, n.offset || 0, \"u8\");\n      t.push(l);\n    }\n    1 === t.length ? r.set(t[0]) : p ? y(t, r) : w(t, r);\n  } else if (p) {\n    const t = [];\n    for (let e = 0; e < h; e++) {\n      const n = new Uint8Array(s);\n      n.set(r), d(o[e], f?.slice(2 * e, 2 * e + 2), c?.[e], n), t.push(n);\n    }\n    1 === t.length ? r.set(t[0]) : y(t, r);\n  } else for (let l = 0; l < h; l++) d(o[l], f?.slice(2 * l, 2 * l + 2), c?.[l], r);\n  return new l({\n    width: n,\n    height: i,\n    pixelType: u,\n    pixels: o,\n    mask: r\n  });\n}\nfunction M(t) {\n  const {\n    srcPixelType: e,\n    inputRanges: n,\n    outputValues: o,\n    allowUnmatched: s,\n    noDataRanges: r,\n    isLastInputRangeInclusive: a,\n    outputPixelType: h\n  } = t;\n  if (\"u8\" !== e && \"s8\" !== e && \"u16\" !== e && \"s16\" !== e) return null;\n  const f = e.includes(\"16\") ? 65536 : 256,\n    c = e.includes(\"s\") ? -f / 2 : 0,\n    u = l.createEmptyBand(h, f),\n    p = new Uint8Array(f);\n  s && p.fill(255);\n  const [x, m] = i(h);\n  if (n?.length && o?.length) {\n    const t = 1e-6,\n      e = n.map(e => e - t);\n    e[0] = n[0], a && (e[e.length - 1] = n[n.length - 1]);\n    for (let n = 0; n < e.length; n++) {\n      const t = o[n] > m ? m : o[n] < x ? x : o[n],\n        l = Math.ceil(e[2 * n] - c),\n        i = Math.floor(e[2 * n + 1] - c);\n      for (let e = l; e <= i; e++) u[e] = t, p[e] = 255;\n    }\n  }\n  if (r?.length) for (let l = 0; l < r.length; l++) {\n    const t = Math.ceil(r[2 * l] - c),\n      e = Math.floor(r[2 * l + 1] - c);\n    for (let n = t; n <= e; n++) p[n] = 0;\n  }\n  return {\n    lut: u,\n    offset: c,\n    mask: p\n  };\n}\nfunction A(t, e, n) {\n  if (\"u8\" !== t && \"s8\" !== t && \"u16\" !== t && \"s16\" !== t) return null;\n  const l = t.includes(\"16\") ? 65536 : 256,\n    i = t.includes(\"s\") ? -l / 2 : 0,\n    o = new Uint8Array(l);\n  if (e) for (let s = 0; s < e.length; s++) {\n    const t = Math.ceil(e[2 * s] - i),\n      n = Math.floor(e[2 * s + 1] - i);\n    for (let e = t; e <= n; e++) o[e] = 255;\n  } else o.fill(255);\n  if (n) for (let s = 0; s < n.length; s++) o[n[s] - i] = 0;\n  return {\n    lut: o,\n    offset: i\n  };\n}\nfunction U(t, e, n, l, i, o, s, r) {\n  return {\n    xmin: i <= n * t ? 0 : i < n * t + t ? i - n * t : t,\n    ymin: o <= l * e ? 0 : o < l * e + e ? o - l * e : e,\n    xmax: i + s <= n * t ? 0 : i + s < n * t + t ? i + s - n * t : t,\n    ymax: o + r <= l * e ? 0 : o + r < l * e + e ? o + r - l * e : e\n  };\n}\nfunction T(t, n) {\n  if (!t || 0 === t.length) return null;\n  const l = t.find(t => t.pixelBlock);\n  if (!l || e(l.pixelBlock)) return null;\n  const i = (l.extent.xmax - l.extent.xmin) / l.pixelBlock.width,\n    o = (l.extent.ymax - l.extent.ymin) / l.pixelBlock.height,\n    s = .01 * Math.min(i, o),\n    r = t.sort((t, e) => Math.abs(t.extent.ymax - e.extent.ymax) > s ? e.extent.ymax - t.extent.ymax : Math.abs(t.extent.xmin - e.extent.xmin) > s ? t.extent.xmin - e.extent.xmin : 0),\n    a = Math.min.apply(null, r.map(t => t.extent.xmin)),\n    h = Math.min.apply(null, r.map(t => t.extent.ymin)),\n    f = Math.max.apply(null, r.map(t => t.extent.xmax)),\n    c = Math.max.apply(null, r.map(t => t.extent.ymax)),\n    u = {\n      x: Math.round((n.xmin - a) / i),\n      y: Math.round((c - n.ymax) / o)\n    },\n    p = {\n      width: Math.round((f - a) / i),\n      height: Math.round((c - h) / o)\n    },\n    x = {\n      width: Math.round((n.xmax - n.xmin) / i),\n      height: Math.round((n.ymax - n.ymin) / o)\n    };\n  if (Math.round(p.width / l.pixelBlock.width) * Math.round(p.height / l.pixelBlock.height) !== r.length || u.x < 0 || u.y < 0 || p.width < x.width || p.height < x.height) return null;\n  return {\n    extent: n,\n    pixelBlock: b(r.map(t => t.pixelBlock), p, {\n      clipOffset: u,\n      clipSize: x\n    })\n  };\n}\nfunction C(t, e, n, l, i, o) {\n  const {\n      width: s,\n      height: r\n    } = n.block,\n    {\n      x: a,\n      y: h\n    } = n.offset,\n    {\n      width: f,\n      height: c\n    } = n.mosaic,\n    u = U(s, r, l, i, a, h, f, c);\n  let p = 0,\n    x = 0;\n  if (o) {\n    const t = o.hasGCSSShiftTransform ? 360 : o.halfWorldWidth ?? 0,\n      e = s * o.resolutionX,\n      n = o.startX + l * e;\n    n < t && n + e > t ? x = o.rightPadding : n >= t && (p = o.leftMargin - o.rightPadding, x = 0);\n  }\n  if (u.xmax -= x, \"number\" != typeof e) for (let m = u.ymin; m < u.ymax; m++) {\n    const n = (i * r + m - h) * f + (l * s - a) + p,\n      o = m * s;\n    for (let l = u.xmin; l < u.xmax; l++) t[n + l] = e[o + l];\n  } else for (let m = u.ymin; m < u.ymax; m++) {\n    const n = (i * r + m - h) * f + (l * s - a) + p;\n    for (let l = u.xmin; l < u.xmax; l++) t[n + l] = e;\n  }\n}\nfunction b(n, i) {\n  let o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    clipOffset: s,\n    clipSize: r,\n    alignmentInfo: h,\n    blockWidths: f\n  } = o;\n  if (f) return P(n, i, {\n    blockWidths: f\n  });\n  const c = n.find(t => a(t));\n  if (e(c)) return null;\n  const u = r ? r.width : i.width,\n    p = r ? r.height : i.height,\n    x = c.width,\n    m = c.height,\n    g = i.width / x,\n    d = i.height / m,\n    y = {\n      offset: s || {\n        x: 0,\n        y: 0\n      },\n      mosaic: r || i,\n      block: {\n        width: x,\n        height: m\n      }\n    },\n    w = c.pixelType,\n    k = l.getPixelArrayConstructor(w),\n    M = c.pixels.length,\n    A = [];\n  let U, T;\n  for (let t = 0; t < M; t++) {\n    T = new k(u * p);\n    for (let e = 0; e < d; e++) for (let l = 0; l < g; l++) {\n      const i = n[e * g + l];\n      a(i) && (U = i.pixels[t], C(T, U, y, l, e, h));\n    }\n    A.push(T);\n  }\n  let b;\n  if (n.some(n => e(n) || t(n.mask) && n.mask.length > 0)) {\n    b = new Uint8Array(u * p);\n    for (let e = 0; e < d; e++) for (let l = 0; l < g; l++) {\n      const i = n[e * g + l],\n        o = t(i) ? i.mask : null;\n      t(o) ? C(b, o, y, l, e, h) : C(b, i ? 1 : 0, y, l, e, h);\n    }\n  }\n  const S = new l({\n    width: u,\n    height: p,\n    pixels: A,\n    pixelType: w,\n    mask: b\n  });\n  return S.updateStatistics(), S;\n}\nfunction P(i, o, s) {\n  const r = i.find(e => t(e));\n  if (e(r)) return null;\n  const h = i.some(e => !t(e) || !!e.mask),\n    {\n      width: f,\n      height: c\n    } = o,\n    u = h ? new Uint8Array(f * c) : null,\n    {\n      blockWidths: p\n    } = s,\n    x = [],\n    m = r.getPlaneCount(),\n    g = l.getPixelArrayConstructor(r.pixelType);\n  if (h) for (let t = 0, e = 0; t < i.length; e += p[t], t++) {\n    const l = i[t];\n    if (!a(l)) continue;\n    const o = n(l.mask);\n    for (let n = 0; n < c; n++) for (let i = 0; i < p[t]; i++) u[n * f + i + e] = null == o ? 255 : o[n * l.width + i];\n  }\n  for (let t = 0; t < m; t++) {\n    const e = new g(f * c);\n    for (let n = 0, l = 0; n < i.length; l += p[n], n++) {\n      const o = i[n];\n      if (!a(o)) continue;\n      const s = o.pixels[t];\n      if (null != s) for (let t = 0; t < c; t++) for (let i = 0; i < p[n]; i++) e[t * f + i + l] = s[t * o.width + i];\n    }\n    x.push(e);\n  }\n  const d = new l({\n    width: f,\n    height: c,\n    mask: u,\n    pixels: x,\n    pixelType: r.pixelType\n  });\n  return d.updateStatistics(), d;\n}\nfunction S(t, e, n) {\n  if (!a(t)) return null;\n  const {\n      width: l,\n      height: i\n    } = t,\n    o = e.x,\n    s = e.y,\n    r = n.width + o,\n    h = n.height + s;\n  if (o < 0 || s < 0 || r > l || h > i) return t;\n  if (0 === o && 0 === s && r === l && h === i) return t;\n  t.mask || (t.mask = new Uint8Array(l * i));\n  const f = t.mask;\n  for (let a = 0; a < i; a++) {\n    const t = a * l;\n    for (let e = 0; e < l; e++) f[t + e] = a < s || a >= h || e < o || e >= r ? 0 : 1;\n  }\n  return t.updateStatistics(), t;\n}\nfunction B(t) {\n  if (!a(t)) return null;\n  const e = t.clone(),\n    {\n      width: l,\n      height: i,\n      pixels: o\n    } = t,\n    s = o[0],\n    r = e.pixels[0],\n    h = n(t.mask);\n  for (let n = 2; n < i - 1; n++) {\n    const t = new Map();\n    for (let i = n - 2; i < n + 2; i++) for (let e = 0; e < 4; e++) {\n      const n = i * l + e;\n      _(t, s[n], h ? h[n] : 1);\n    }\n    r[n * l] = v(t), r[n * l + 1] = r[n * l + 2] = r[n * l];\n    let e = 3;\n    for (; e < l - 1; e++) {\n      let i = (n - 2) * l + e + 1;\n      _(t, s[i], h ? h[i] : 1), i = (n - 1) * l + e + 1, _(t, s[i], h ? h[i] : 1), i = n * l + e + 1, _(t, s[i], h ? h[i] : 1), i = (n + 1) * l + e + 1, _(t, s[i], h ? h[i] : 1), i = (n - 2) * l + e - 3, I(t, s[i], h ? h[i] : 1), i = (n - 1) * l + e - 3, I(t, s[i], h ? h[i] : 1), i = n * l + e - 3, I(t, s[i], h ? h[i] : 1), i = (n + 1) * l + e - 3, I(t, s[i], h ? h[i] : 1), r[n * l + e] = v(t);\n    }\n    r[n * l + e + 1] = r[n * l + e];\n  }\n  for (let n = 0; n < l; n++) r[n] = r[l + n] = r[2 * l + n], r[(i - 1) * l + n] = r[(i - 2) * l + n];\n  return e.updateStatistics(), e;\n}\nfunction v(t) {\n  if (0 === t.size) return 0;\n  let e = 0,\n    n = -1,\n    l = 0;\n  const i = t.keys();\n  let o = i.next();\n  for (; !o.done;) l = t.get(o.value), l > e && (n = o.value, e = l), o = i.next();\n  return n;\n}\nfunction I(t, e, n) {\n  if (0 === n) return;\n  const l = t.get(e);\n  1 === l ? t.delete(e) : t.set(e, l - 1);\n}\nfunction _(t, e, n) {\n  0 !== n && t.set(e, t.has(e) ? t.get(e) + 1 : 1);\n}\nfunction W(t, e, i) {\n  let {\n    x: o,\n    y: s\n  } = e;\n  const {\n    width: r,\n    height: h\n  } = i;\n  if (0 === o && 0 === s && h === t.height && r === t.width) return t;\n  const {\n      width: f,\n      height: c\n    } = t,\n    u = Math.max(0, s),\n    p = Math.max(0, o),\n    x = Math.min(o + r, f),\n    m = Math.min(s + h, c);\n  if (x < 0 || m < 0 || !a(t)) return null;\n  o = Math.max(0, -o), s = Math.max(0, -s);\n  const {\n      pixels: g\n    } = t,\n    d = r * h,\n    y = g.length,\n    w = [];\n  for (let n = 0; n < y; n++) {\n    const e = g[n],\n      i = l.createEmptyBand(t.pixelType, d);\n    for (let t = u; t < m; t++) {\n      const n = t * f;\n      let l = (t + s - u) * r + o;\n      for (let t = p; t < x; t++) i[l++] = e[n + t];\n    }\n    w.push(i);\n  }\n  const k = new Uint8Array(d),\n    M = n(t.mask);\n  for (let n = u; n < m; n++) {\n    const t = n * f;\n    let e = (n + s - u) * r + o;\n    for (let n = p; n < x; n++) k[e++] = M ? M[t + n] : 1;\n  }\n  const A = new l({\n    width: i.width,\n    height: i.height,\n    pixelType: t.pixelType,\n    pixels: w,\n    mask: k\n  });\n  return A.updateStatistics(), A;\n}\nfunction E(e) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n  if (!a(e)) return null;\n  const {\n      pixels: i,\n      width: o,\n      height: s,\n      mask: r,\n      pixelType: h\n    } = e,\n    f = [],\n    c = Math.round(o / 2),\n    u = Math.round(s / 2),\n    p = s - 1,\n    x = o - 1;\n  for (let t = 0; t < i.length; t++) {\n    const e = i[t],\n      r = l.createEmptyBand(h, c * u);\n    let a = 0;\n    for (let t = 0; t < s; t += 2) for (let l = 0; l < o; l += 2) {\n      const i = e[t * o + l];\n      if (n) {\n        const n = l === x ? i : e[t * o + l + 1],\n          s = t === p ? i : e[t * o + l + o],\n          h = l === x ? s : t === p ? n : e[t * o + l + o + 1];\n        r[a++] = (i + n + s + h) / 4;\n      } else r[a++] = i;\n    }\n    f.push(r);\n  }\n  let m = null;\n  if (t(r)) {\n    m = new Uint8Array(c * u);\n    let t = 0;\n    for (let e = 0; e < s; e += 2) for (let l = 0; l < o; l += 2) {\n      const i = r[e * o + l];\n      if (n) {\n        const n = l === x ? i : r[e * o + l + 1],\n          s = e === p ? i : r[e * o + l + o],\n          a = l === x ? s : e === p ? n : r[e * o + l + o + 1];\n        m[t++] = i * n * s * a ? 1 : 0;\n      } else m[t++] = i;\n    }\n  }\n  return new l({\n    width: c,\n    height: u,\n    pixelType: h,\n    pixels: f,\n    mask: m\n  });\n}\nfunction R(t, e, n) {\n  if (!a(t)) return null;\n  const {\n    width: l,\n    height: i\n  } = e;\n  let {\n    width: o,\n    height: s\n  } = t;\n  const r = new Map(),\n    h = {\n      x: 0,\n      y: 0\n    },\n    f = null == n ? 1 : 1 + n;\n  let c = t;\n  for (let a = 0; a < f; a++) {\n    const t = Math.ceil(o / l),\n      n = Math.ceil(s / i);\n    for (let o = 0; o < n; o++) {\n      h.y = o * i;\n      for (let n = 0; n < t; n++) {\n        h.x = n * l;\n        const t = W(c, h, e);\n        r.set(`${a}/${o}/${n}`, t);\n      }\n    }\n    a < f - 1 && (c = E(c)), o = Math.round(o / 2), s = Math.round(s / 2);\n  }\n  return r;\n}\nfunction j(t, e, n, l) {\n  let i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  const {\n      width: o,\n      height: s\n    } = t,\n    {\n      width: r,\n      height: a\n    } = e,\n    h = l.cols,\n    f = l.rows,\n    c = Math.ceil(r / h - .1 / h),\n    u = Math.ceil(a / f - .1 / f);\n  let p, x, m, g, d, y, w;\n  const k = c * h,\n    M = k * u * f,\n    A = new Float32Array(M),\n    U = new Float32Array(M),\n    T = new Uint32Array(M),\n    C = new Uint32Array(M);\n  let b,\n    P,\n    S = 0;\n  for (let B = 0; B < u; B++) for (let t = 0; t < c; t++) {\n    p = 12 * (B * c + t), x = n[p], m = n[p + 1], g = n[p + 2], d = n[p + 3], y = n[p + 4], w = n[p + 5];\n    for (let e = 0; e < f; e++) {\n      S = (B * f + e) * k + t * h, P = (e + .5) / f;\n      for (let t = 0; t < e; t++) b = (t + .5) / h, A[S + t] = (x * b + m * P + g) * o + i, U[S + t] = (d * b + y * P + w) * s + i, T[S + t] = Math.floor(A[S + t]), C[S + t] = Math.floor(U[S + t]);\n    }\n    p += 6, x = n[p], m = n[p + 1], g = n[p + 2], d = n[p + 3], y = n[p + 4], w = n[p + 5];\n    for (let e = 0; e < f; e++) {\n      S = (B * f + e) * k + t * h, P = (e + .5) / f;\n      for (let t = e; t < h; t++) b = (t + .5) / h, A[S + t] = (x * b + m * P + g) * o + i, U[S + t] = (d * b + y * P + w) * s + i, T[S + t] = Math.floor(A[S + t]), C[S + t] = Math.floor(U[S + t]);\n    }\n  }\n  return {\n    offsets_x: A,\n    offsets_y: U,\n    offsets_xi: T,\n    offsets_yi: C,\n    gridWidth: k\n  };\n}\nfunction D(t, e) {\n  const {\n      coefficients: n,\n      spacing: l\n    } = e,\n    {\n      offsets_x: i,\n      offsets_y: o,\n      gridWidth: s\n    } = j(t, t, n, {\n      rows: l[0],\n      cols: l[1]\n    }),\n    {\n      width: r,\n      height: a\n    } = t,\n    h = new Float32Array(r * a),\n    f = 180 / Math.PI;\n  for (let c = 0; c < a; c++) for (let t = 0; t < r; t++) {\n    const e = c * s + t,\n      n = 0 === c ? e : e - s,\n      l = c === a - 1 ? e : e + s,\n      u = i[n] - i[l],\n      p = o[l] - o[n];\n    if (isNaN(u) || isNaN(p)) h[c * r + t] = 90;else {\n      let e = Math.atan2(p, u) * f;\n      e = (360 + e) % 360, h[c * r + t] = e;\n    }\n  }\n  return h;\n}\nfunction F(e, n, i, o) {\n  let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"nearest\";\n  if (!a(e)) return null;\n  \"majority\" === s && (e = B(e));\n  const {\n      pixels: r,\n      mask: h,\n      pixelType: f\n    } = e,\n    c = e.width,\n    u = e.height,\n    p = l.getPixelArrayConstructor(f),\n    x = r.length,\n    {\n      width: m,\n      height: g\n    } = n;\n  let d = !1;\n  for (let t = 0; t < i.length; t += 3) -1 === i[t] && -1 === i[t + 1] && -1 === i[t + 2] && (d = !0);\n  const {\n    offsets_x: y,\n    offsets_y: w,\n    offsets_xi: k,\n    offsets_yi: M,\n    gridWidth: A\n  } = j({\n    width: c,\n    height: u\n  }, n, i, o, \"majority\" === s ? .5 : 0);\n  let U;\n  const T = (t, e, n) => {\n      const l = t instanceof Float32Array || t instanceof Float64Array ? 0 : .5;\n      for (let i = 0; i < g; i++) {\n        U = i * A;\n        for (let o = 0; o < m; o++) {\n          if (y[U] < 0 || w[U] < 0) t[i * m + o] = 0;else if (n) t[i * m + o] = e[k[U] + M[U] * c];else {\n            const n = Math.floor(y[U]),\n              s = Math.floor(w[U]),\n              r = Math.ceil(y[U]),\n              a = Math.ceil(w[U]),\n              f = y[U] - n,\n              u = w[U] - s;\n            if (!h || h[n + s * c] && h[n + s * c] && h[n + a * c] && h[r + a * c]) {\n              const h = (1 - f) * e[n + s * c] + f * e[r + s * c],\n                p = (1 - f) * e[n + a * c] + f * e[r + a * c];\n              t[i * m + o] = (1 - u) * h + u * p + l;\n            } else t[i * m + o] = e[k[U] + M[U] * c];\n          }\n          U++;\n        }\n      }\n    },\n    C = [];\n  let b;\n  for (let t = 0; t < x; t++) b = new p(m * g), T(b, r[t], \"nearest\" === s || \"majority\" === s), C.push(b);\n  const P = new l({\n    width: m,\n    height: g,\n    pixelType: f,\n    pixels: C\n  });\n  if (t(h)) P.mask = new Uint8Array(m * g), T(P.mask, h, !0);else if (d) {\n    P.mask = new Uint8Array(m * g);\n    for (let t = 0; t < m * g; t++) P.mask[t] = y[t] < 0 || w[t] < 0 ? 0 : 1;\n  }\n  return P.updateStatistics(), P;\n}\nexport { r as MAX_MAP_SIZE_GPU, s as MissingBandAction, o as NoDataInterpretation, F as approximateTransform, W as clip, u as colorize, f as compositeBands, c as createColormapLUT, A as createMaskLUT, M as createRemapLUT, h as extractBands, U as getClipBounds, D as getLocalArithmeticNorthRotations, j as interpolateOffsets, a as isValidPixelBlock, x as lookupBandValues, p as lookupPixels, k as mask, b as mosaic, T as mosaicPixelData, g as remap, m as remapColor, B as resampleByMajority, S as setValidBoundary, R as split };","map":{"version":3,"names":["isSome","t","isNone","e","unwrap","n","l","getPixelValueRange","i","o","s","matchAny","matchAll","bestMatch","fail","r","a","declaredClass","pixels","length","h","some","pixelType","width","height","mask","validPixelCount","maskIsAlpha","map","statistics","f","clone","_ref","filter","Uint8Array","set","w","slice","forEach","_ref2","push","c","_ref3","u","colormap","sort","Math","max","concat","indexed2DColormap","offset","alphaSpecified","fillUnspecified","indexedColormap","p","x","m","g","d","y","lut","outputPixelType","updateStatistics","createEmptyBand","floor","k","M","mappedColor","fill","value","inputRanges","outputValues","noDataRanges","allowUnmatched","isLastInputRangeInclusive","startsWith","Set","has","includedRanges","noDataValues","lookups","srcPixelType","includes","ceil","A","U","xmin","ymin","xmax","ymax","T","find","pixelBlock","extent","min","abs","apply","round","b","clipOffset","clipSize","C","block","mosaic","hasGCSSShiftTransform","halfWorldWidth","resolutionX","startX","rightPadding","leftMargin","arguments","undefined","alignmentInfo","blockWidths","P","getPixelArrayConstructor","S","getPlaneCount","B","Map","_","v","I","size","keys","next","done","get","delete","W","E","R","j","cols","rows","Float32Array","Uint32Array","offsets_x","offsets_y","offsets_xi","offsets_yi","gridWidth","D","coefficients","spacing","PI","isNaN","atan2","F","Float64Array","MAX_MAP_SIZE_GPU","MissingBandAction","NoDataInterpretation","approximateTransform","clip","colorize","compositeBands","createColormapLUT","createMaskLUT","createRemapLUT","extractBands","getClipBounds","getLocalArithmeticNorthRotations","interpolateOffsets","isValidPixelBlock","lookupBandValues","lookupPixels","mosaicPixelData","remap","remapColor","resampleByMajority","setValidBoundary","split"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as e,unwrap as n}from\"../../../core/maybe.js\";import l from\"../PixelBlock.js\";import{getPixelValueRange as i}from\"../rasterFormats/pixelRangeUtils.js\";var o,s;!function(t){t[t.matchAny=0]=\"matchAny\",t[t.matchAll=1]=\"matchAll\"}(o||(o={})),function(t){t[t.bestMatch=0]=\"bestMatch\",t[t.fail=1]=\"fail\"}(s||(s={}));const r=6;function a(e){return t(e)&&\"esri.layers.support.PixelBlock\"===e.declaredClass&&e.pixels&&e.pixels.length>0}function h(t,e){if(!e?.length||!a(t))return t;const n=t.pixels.length;return e&&e.some((t=>t>=n))||1===n&&1===e.length&&0===e[0]?t:n!==e.length||e.some(((t,e)=>t!==e))?new l({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function f(e){if(!e?.length||e.some((t=>!a(t))))return null;if(1===e.length)return t(e[0])?e[0].clone():null;const n=e,{width:i,height:o,pixelType:s}=n[0];if(n.some((t=>t.width!==i||t.height!==o)))return null;const r=n.map((({mask:t})=>t)).filter((t=>null!=t));let h=null;r.length&&(h=new Uint8Array(i*o),h.set(r[0]),r.length>1&&w(r.slice(1),h));const f=[];n.forEach((({pixels:t})=>f.push(...t)));const c=n.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new l({pixelType:s,width:i,height:o,mask:h,pixels:f,statistics:u.length?u:null})}function c(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let l=0;n[0][0]<0&&(l=n[0][0]);const i=Math.max(256,n[n.length-1][0]-l+1),o=new Uint8Array(4*i),s=[];let r,a=0,h=0;const f=5===n[0].length;if(i>65536)return n.forEach((t=>{s[t[0]-l]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:l,alphaSpecified:f};if(t.fillUnspecified)for(r=n[h],a=r[0]-l;a<i;a++)o[4*a]=r[1],o[4*a+1]=r[2],o[4*a+2]=r[3],o[4*a+3]=f?r[4]:255,a===r[0]-l&&(r=h===n.length-1?r:n[++h]);else for(a=0;a<n.length;a++)r=n[a],h=4*(r[0]-l),o[h]=r[1],o[h+1]=r[2],o[h+2]=r[3],o[h+3]=f?r[4]:255;return{indexedColormap:o,offset:l,alphaSpecified:f}}function u(e,n){if(!a(e))return e;if(!n||!n.indexedColormap&&!n.indexed2DColormap)return e;const l=e.clone(),i=l.pixels;let o=l.mask;const s=l.width*l.height;if(1!==i.length)return e;const{indexedColormap:r,indexed2DColormap:h,offset:f,alphaSpecified:c}=n;let u=0;const p=i[0],x=new Uint8Array(p.length),m=new Uint8Array(p.length),g=new Uint8Array(p.length);let d,y=0;if(r){const e=r.length-1;if(t(o))for(u=0;u<s;u++)o[u]&&(y=4*(p[u]-f),y<f||y>e?o[u]=0:(x[u]=r[y],m[u]=r[y+1],g[u]=r[y+2],o[u]=r[y+3]));else{for(o=new Uint8Array(s),u=0;u<s;u++)y=4*(p[u]-f),y<f||y>e?o[u]=0:(x[u]=r[y],m[u]=r[y+1],g[u]=r[y+2],o[u]=r[y+3]);l.mask=o}}else if(h)if(t(o))for(u=0;u<s;u++)o[u]&&(d=h[p[u]],x[u]=d[0],m[u]=d[1],g[u]=d[2],o[u]=d[3]);else{for(o=new Uint8Array(s),u=0;u<s;u++)d=h[p[u]],x[u]=d[0],m[u]=d[1],g[u]=d[2],o[u]=d[3];l.mask=o}return l.pixels=[x,m,g],l.statistics=null,l.pixelType=\"u8\",l.maskIsAlpha=c,l}function p(t,e){if(!a(t))return null;const{pixels:n,mask:i}=t,o=n.length;let s=e.lut;const{offset:r}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const h=[],f=e.outputPixelType||\"u8\";for(let l=0;l<o;l++){const t=x(n[l],i,s[l],r||0,f);h.push(t)}const c=new l({width:t.width,height:t.height,pixels:h,mask:i,pixelType:f});return c.updateStatistics(),c}function x(t,e,n,i,o){const s=t.length,r=l.createEmptyBand(o,s);if(e)for(let l=0;l<s;l++)e[l]&&(r[l]=n[t[l]-i]);else for(let l=0;l<s;l++)r[l]=n[t[l]-i];return r}function m(t,e){if(!a(t))return null;const n=t.clone(),{pixels:l}=n,i=n.width*n.height,o=e.length,s=Math.floor(o/2),r=e[Math.floor(s)],h=l[0];let f,c,u,p,x,m,g=!1;const d=new Uint8Array(i),y=new Uint8Array(i),w=new Uint8Array(i);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(i),k.fill(M?255:1),n.mask=k),x=0;x<i;x++)if(k[x]){for(f=h[x],g=!1,m=s,c=r,u=0,p=o-1;p-u>1;){if(f===c.value){g=!0;break}f>c.value?u=m:p=m,m=Math.floor((u+p)/2),c=e[Math.floor(m)]}g||(f===e[u].value?(c=e[u],g=!0):f===e[p].value?(c=e[p],g=!0):f<e[u].value?(g=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],g=!0):p===o-1?(g=!1,c=null):(c=e[p],g=!0))),g?(d[x]=c.mappedColor[0],y[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):d[x]=y[x]=w[x]=k[x]=0}return n.pixels=[d,y,w],n.mask=k,n.pixelType=\"u8\",n.maskIsAlpha=M,n}function g(t,e){if(!a(t))return null;const{width:n,height:o}=t,{inputRanges:s,outputValues:r,outputPixelType:h,noDataRanges:f,allowUnmatched:c,isLastInputRangeInclusive:u}=e,p=t.pixels[0],x=l.createEmptyBand(h,p.length),m=t.mask,g=new Uint8Array(n*o);m?g.set(m):g.fill(255);const d=t.pixelType.startsWith(\"f\")?1e-6:0,y=s.map((t=>t-d));y[0]=s[0],y[y.length-1]=s[s.length-1]+(u?1e-6:0);const w=s.length/2,[k,M]=i(h);for(let l=0;l<o;l++)for(let t=0;t<n;t++){const e=l*n+t;if(g[e]){const t=p[e];let n=!1;for(let l=w-1;l>=0;l--)if(t===y[2*l]||t>y[2*l]&&t<y[2*l+1]){x[e]=r[l],n=!0;break}n||(c?x[e]=t>M?M:t<k?k:t:g[e]=0)}}if(f?.length)for(let l=0;l<o;l++)for(let t=0;t<n;t++){const e=l*n+t;if(!m||m[e]){const t=p[e];for(let n=0;n<w;n+=2)if(t>=f[n]&&t<=f[n+1]){x[e]=0,g[e]=0;break}}}return new l({width:n,height:o,pixelType:h,pixels:[x],mask:g})}function d(t,e,n,l){const i=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,s=!!e?.length;for(let r=0;r<t.length;r++)if(l[r]){const n=t[r];if(s){let t=!1;for(let l=0;l<e.length;l+=2)if(n>=e[l]&&n<=e[l+1]){t=!0;break}t||(l[r]=0)}l[r]&&(n===o||i?.has(n))&&(l[r]=0)}}function y(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][l]){n=!0;break}n||(e[l]=0)}}function w(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][l]){n=!0;break}n&&(e[l]=0)}}function k(t,e){if(!a(t))return null;const{width:n,height:i,pixels:o}=t,s=n*i,r=new Uint8Array(s);t.mask?r.set(t.mask):r.fill(255);const h=o.length,{includedRanges:f,noDataValues:c,outputPixelType:u,matchAll:p,lookups:m}=e;if(m){const t=[];for(let e=0;e<h;e++){const n=m[e],l=x(o[e],r,n.lut,n.offset||0,\"u8\");t.push(l)}1===t.length?r.set(t[0]):p?y(t,r):w(t,r)}else if(p){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(s);n.set(r),d(o[e],f?.slice(2*e,2*e+2),c?.[e],n),t.push(n)}1===t.length?r.set(t[0]):y(t,r)}else for(let l=0;l<h;l++)d(o[l],f?.slice(2*l,2*l+2),c?.[l],r);return new l({width:n,height:i,pixelType:u,pixels:o,mask:r})}function M(t){const{srcPixelType:e,inputRanges:n,outputValues:o,allowUnmatched:s,noDataRanges:r,isLastInputRangeInclusive:a,outputPixelType:h}=t;if(\"u8\"!==e&&\"s8\"!==e&&\"u16\"!==e&&\"s16\"!==e)return null;const f=e.includes(\"16\")?65536:256,c=e.includes(\"s\")?-f/2:0,u=l.createEmptyBand(h,f),p=new Uint8Array(f);s&&p.fill(255);const[x,m]=i(h);if(n?.length&&o?.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],a&&(e[e.length-1]=n[n.length-1]);for(let n=0;n<e.length;n++){const t=o[n]>m?m:o[n]<x?x:o[n],l=Math.ceil(e[2*n]-c),i=Math.floor(e[2*n+1]-c);for(let e=l;e<=i;e++)u[e]=t,p[e]=255}}if(r?.length)for(let l=0;l<r.length;l++){const t=Math.ceil(r[2*l]-c),e=Math.floor(r[2*l+1]-c);for(let n=t;n<=e;n++)p[n]=0}return{lut:u,offset:c,mask:p}}function A(t,e,n){if(\"u8\"!==t&&\"s8\"!==t&&\"u16\"!==t&&\"s16\"!==t)return null;const l=t.includes(\"16\")?65536:256,i=t.includes(\"s\")?-l/2:0,o=new Uint8Array(l);if(e)for(let s=0;s<e.length;s++){const t=Math.ceil(e[2*s]-i),n=Math.floor(e[2*s+1]-i);for(let e=t;e<=n;e++)o[e]=255}else o.fill(255);if(n)for(let s=0;s<n.length;s++)o[n[s]-i]=0;return{lut:o,offset:i}}function U(t,e,n,l,i,o,s,r){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:o<=l*e?0:o<l*e+e?o-l*e:e,xmax:i+s<=n*t?0:i+s<n*t+t?i+s-n*t:t,ymax:o+r<=l*e?0:o+r<l*e+e?o+r-l*e:e}}function T(t,n){if(!t||0===t.length)return null;const l=t.find((t=>t.pixelBlock));if(!l||e(l.pixelBlock))return null;const i=(l.extent.xmax-l.extent.xmin)/l.pixelBlock.width,o=(l.extent.ymax-l.extent.ymin)/l.pixelBlock.height,s=.01*Math.min(i,o),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,r.map((t=>t.extent.xmin))),h=Math.min.apply(null,r.map((t=>t.extent.ymin))),f=Math.max.apply(null,r.map((t=>t.extent.xmax))),c=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((n.xmin-a)/i),y:Math.round((c-n.ymax)/o)},p={width:Math.round((f-a)/i),height:Math.round((c-h)/o)},x={width:Math.round((n.xmax-n.xmin)/i),height:Math.round((n.ymax-n.ymin)/o)};if(Math.round(p.width/l.pixelBlock.width)*Math.round(p.height/l.pixelBlock.height)!==r.length||u.x<0||u.y<0||p.width<x.width||p.height<x.height)return null;return{extent:n,pixelBlock:b(r.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:x})}}function C(t,e,n,l,i,o){const{width:s,height:r}=n.block,{x:a,y:h}=n.offset,{width:f,height:c}=n.mosaic,u=U(s,r,l,i,a,h,f,c);let p=0,x=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=s*o.resolutionX,n=o.startX+l*e;n<t&&n+e>t?x=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,x=0)}if(u.xmax-=x,\"number\"!=typeof e)for(let m=u.ymin;m<u.ymax;m++){const n=(i*r+m-h)*f+(l*s-a)+p,o=m*s;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e[o+l]}else for(let m=u.ymin;m<u.ymax;m++){const n=(i*r+m-h)*f+(l*s-a)+p;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e}}function b(n,i,o={}){const{clipOffset:s,clipSize:r,alignmentInfo:h,blockWidths:f}=o;if(f)return P(n,i,{blockWidths:f});const c=n.find((t=>a(t)));if(e(c))return null;const u=r?r.width:i.width,p=r?r.height:i.height,x=c.width,m=c.height,g=i.width/x,d=i.height/m,y={offset:s||{x:0,y:0},mosaic:r||i,block:{width:x,height:m}},w=c.pixelType,k=l.getPixelArrayConstructor(w),M=c.pixels.length,A=[];let U,T;for(let t=0;t<M;t++){T=new k(u*p);for(let e=0;e<d;e++)for(let l=0;l<g;l++){const i=n[e*g+l];a(i)&&(U=i.pixels[t],C(T,U,y,l,e,h))}A.push(T)}let b;if(n.some((n=>e(n)||t(n.mask)&&n.mask.length>0))){b=new Uint8Array(u*p);for(let e=0;e<d;e++)for(let l=0;l<g;l++){const i=n[e*g+l],o=t(i)?i.mask:null;t(o)?C(b,o,y,l,e,h):C(b,i?1:0,y,l,e,h)}}const S=new l({width:u,height:p,pixels:A,pixelType:w,mask:b});return S.updateStatistics(),S}function P(i,o,s){const r=i.find((e=>t(e)));if(e(r))return null;const h=i.some((e=>!t(e)||!!e.mask)),{width:f,height:c}=o,u=h?new Uint8Array(f*c):null,{blockWidths:p}=s,x=[],m=r.getPlaneCount(),g=l.getPixelArrayConstructor(r.pixelType);if(h)for(let t=0,e=0;t<i.length;e+=p[t],t++){const l=i[t];if(!a(l))continue;const o=n(l.mask);for(let n=0;n<c;n++)for(let i=0;i<p[t];i++)u[n*f+i+e]=null==o?255:o[n*l.width+i]}for(let t=0;t<m;t++){const e=new g(f*c);for(let n=0,l=0;n<i.length;l+=p[n],n++){const o=i[n];if(!a(o))continue;const s=o.pixels[t];if(null!=s)for(let t=0;t<c;t++)for(let i=0;i<p[n];i++)e[t*f+i+l]=s[t*o.width+i]}x.push(e)}const d=new l({width:f,height:c,mask:u,pixels:x,pixelType:r.pixelType});return d.updateStatistics(),d}function S(t,e,n){if(!a(t))return null;const{width:l,height:i}=t,o=e.x,s=e.y,r=n.width+o,h=n.height+s;if(o<0||s<0||r>l||h>i)return t;if(0===o&&0===s&&r===l&&h===i)return t;t.mask||(t.mask=new Uint8Array(l*i));const f=t.mask;for(let a=0;a<i;a++){const t=a*l;for(let e=0;e<l;e++)f[t+e]=a<s||a>=h||e<o||e>=r?0:1}return t.updateStatistics(),t}function B(t){if(!a(t))return null;const e=t.clone(),{width:l,height:i,pixels:o}=t,s=o[0],r=e.pixels[0],h=n(t.mask);for(let n=2;n<i-1;n++){const t=new Map;for(let i=n-2;i<n+2;i++)for(let e=0;e<4;e++){const n=i*l+e;_(t,s[n],h?h[n]:1)}r[n*l]=v(t),r[n*l+1]=r[n*l+2]=r[n*l];let e=3;for(;e<l-1;e++){let i=(n-2)*l+e+1;_(t,s[i],h?h[i]:1),i=(n-1)*l+e+1,_(t,s[i],h?h[i]:1),i=n*l+e+1,_(t,s[i],h?h[i]:1),i=(n+1)*l+e+1,_(t,s[i],h?h[i]:1),i=(n-2)*l+e-3,I(t,s[i],h?h[i]:1),i=(n-1)*l+e-3,I(t,s[i],h?h[i]:1),i=n*l+e-3,I(t,s[i],h?h[i]:1),i=(n+1)*l+e-3,I(t,s[i],h?h[i]:1),r[n*l+e]=v(t)}r[n*l+e+1]=r[n*l+e]}for(let n=0;n<l;n++)r[n]=r[l+n]=r[2*l+n],r[(i-1)*l+n]=r[(i-2)*l+n];return e.updateStatistics(),e}function v(t){if(0===t.size)return 0;let e=0,n=-1,l=0;const i=t.keys();let o=i.next();for(;!o.done;)l=t.get(o.value),l>e&&(n=o.value,e=l),o=i.next();return n}function I(t,e,n){if(0===n)return;const l=t.get(e);1===l?t.delete(e):t.set(e,l-1)}function _(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function W(t,e,i){let{x:o,y:s}=e;const{width:r,height:h}=i;if(0===o&&0===s&&h===t.height&&r===t.width)return t;const{width:f,height:c}=t,u=Math.max(0,s),p=Math.max(0,o),x=Math.min(o+r,f),m=Math.min(s+h,c);if(x<0||m<0||!a(t))return null;o=Math.max(0,-o),s=Math.max(0,-s);const{pixels:g}=t,d=r*h,y=g.length,w=[];for(let n=0;n<y;n++){const e=g[n],i=l.createEmptyBand(t.pixelType,d);for(let t=u;t<m;t++){const n=t*f;let l=(t+s-u)*r+o;for(let t=p;t<x;t++)i[l++]=e[n+t]}w.push(i)}const k=new Uint8Array(d),M=n(t.mask);for(let n=u;n<m;n++){const t=n*f;let e=(n+s-u)*r+o;for(let n=p;n<x;n++)k[e++]=M?M[t+n]:1}const A=new l({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function E(e,n=!0){if(!a(e))return null;const{pixels:i,width:o,height:s,mask:r,pixelType:h}=e,f=[],c=Math.round(o/2),u=Math.round(s/2),p=s-1,x=o-1;for(let t=0;t<i.length;t++){const e=i[t],r=l.createEmptyBand(h,c*u);let a=0;for(let t=0;t<s;t+=2)for(let l=0;l<o;l+=2){const i=e[t*o+l];if(n){const n=l===x?i:e[t*o+l+1],s=t===p?i:e[t*o+l+o],h=l===x?s:t===p?n:e[t*o+l+o+1];r[a++]=(i+n+s+h)/4}else r[a++]=i}f.push(r)}let m=null;if(t(r)){m=new Uint8Array(c*u);let t=0;for(let e=0;e<s;e+=2)for(let l=0;l<o;l+=2){const i=r[e*o+l];if(n){const n=l===x?i:r[e*o+l+1],s=e===p?i:r[e*o+l+o],a=l===x?s:e===p?n:r[e*o+l+o+1];m[t++]=i*n*s*a?1:0}else m[t++]=i}}return new l({width:c,height:u,pixelType:h,pixels:f,mask:m})}function R(t,e,n){if(!a(t))return null;const{width:l,height:i}=e;let{width:o,height:s}=t;const r=new Map,h={x:0,y:0},f=null==n?1:1+n;let c=t;for(let a=0;a<f;a++){const t=Math.ceil(o/l),n=Math.ceil(s/i);for(let o=0;o<n;o++){h.y=o*i;for(let n=0;n<t;n++){h.x=n*l;const t=W(c,h,e);r.set(`${a}/${o}/${n}`,t)}}a<f-1&&(c=E(c)),o=Math.round(o/2),s=Math.round(s/2)}return r}function j(t,e,n,l,i=0){const{width:o,height:s}=t,{width:r,height:a}=e,h=l.cols,f=l.rows,c=Math.ceil(r/h-.1/h),u=Math.ceil(a/f-.1/f);let p,x,m,g,d,y,w;const k=c*h,M=k*u*f,A=new Float32Array(M),U=new Float32Array(M),T=new Uint32Array(M),C=new Uint32Array(M);let b,P,S=0;for(let B=0;B<u;B++)for(let t=0;t<c;t++){p=12*(B*c+t),x=n[p],m=n[p+1],g=n[p+2],d=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){S=(B*f+e)*k+t*h,P=(e+.5)/f;for(let t=0;t<e;t++)b=(t+.5)/h,A[S+t]=(x*b+m*P+g)*o+i,U[S+t]=(d*b+y*P+w)*s+i,T[S+t]=Math.floor(A[S+t]),C[S+t]=Math.floor(U[S+t])}p+=6,x=n[p],m=n[p+1],g=n[p+2],d=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){S=(B*f+e)*k+t*h,P=(e+.5)/f;for(let t=e;t<h;t++)b=(t+.5)/h,A[S+t]=(x*b+m*P+g)*o+i,U[S+t]=(d*b+y*P+w)*s+i,T[S+t]=Math.floor(A[S+t]),C[S+t]=Math.floor(U[S+t])}}return{offsets_x:A,offsets_y:U,offsets_xi:T,offsets_yi:C,gridWidth:k}}function D(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:i,offsets_y:o,gridWidth:s}=j(t,t,n,{rows:l[0],cols:l[1]}),{width:r,height:a}=t,h=new Float32Array(r*a),f=180/Math.PI;for(let c=0;c<a;c++)for(let t=0;t<r;t++){const e=c*s+t,n=0===c?e:e-s,l=c===a-1?e:e+s,u=i[n]-i[l],p=o[l]-o[n];if(isNaN(u)||isNaN(p))h[c*r+t]=90;else{let e=Math.atan2(p,u)*f;e=(360+e)%360,h[c*r+t]=e}}return h}function F(e,n,i,o,s=\"nearest\"){if(!a(e))return null;\"majority\"===s&&(e=B(e));const{pixels:r,mask:h,pixelType:f}=e,c=e.width,u=e.height,p=l.getPixelArrayConstructor(f),x=r.length,{width:m,height:g}=n;let d=!1;for(let t=0;t<i.length;t+=3)-1===i[t]&&-1===i[t+1]&&-1===i[t+2]&&(d=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:A}=j({width:c,height:u},n,i,o,\"majority\"===s?.5:0);let U;const T=(t,e,n)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let i=0;i<g;i++){U=i*A;for(let o=0;o<m;o++){if(y[U]<0||w[U]<0)t[i*m+o]=0;else if(n)t[i*m+o]=e[k[U]+M[U]*c];else{const n=Math.floor(y[U]),s=Math.floor(w[U]),r=Math.ceil(y[U]),a=Math.ceil(w[U]),f=y[U]-n,u=w[U]-s;if(!h||h[n+s*c]&&h[n+s*c]&&h[n+a*c]&&h[r+a*c]){const h=(1-f)*e[n+s*c]+f*e[r+s*c],p=(1-f)*e[n+a*c]+f*e[r+a*c];t[i*m+o]=(1-u)*h+u*p+l}else t[i*m+o]=e[k[U]+M[U]*c]}U++}}},C=[];let b;for(let t=0;t<x;t++)b=new p(m*g),T(b,r[t],\"nearest\"===s||\"majority\"===s),C.push(b);const P=new l({width:m,height:g,pixelType:f,pixels:C});if(t(h))P.mask=new Uint8Array(m*g),T(P.mask,h,!0);else if(d){P.mask=new Uint8Array(m*g);for(let t=0;t<m*g;t++)P.mask[t]=y[t]<0||w[t]<0?0:1}return P.updateStatistics(),P}export{r as MAX_MAP_SIZE_GPU,s as MissingBandAction,o as NoDataInterpretation,F as approximateTransform,W as clip,u as colorize,f as compositeBands,c as createColormapLUT,A as createMaskLUT,M as createRemapLUT,h as extractBands,U as getClipBounds,D as getLocalArithmeticNorthRotations,j as interpolateOffsets,a as isValidPixelBlock,x as lookupBandValues,p as lookupPixels,k as mask,b as mosaic,T as mosaicPixelData,g as remap,m as remapColor,B as resampleByMajority,S as setValidBoundary,R as split};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}