{"ast":null,"code":"import _toConsumableArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _get from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _objectSpread from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../../../../geometry.js\";\nimport e from \"../../../../../core/Evented.js\";\nimport has from \"../../../../../core/has.js\";\nimport { isNone as t, isSome as s, applySome as r } from \"../../../../../core/maybe.js\";\nimport { diff as o, hasDiff as a } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport { GeohashTree as i } from \"../../../../../geohash/GeohashTree.js\";\nimport { setGeohashBuf as h, setGeohashXY as n } from \"../../../../../geohash/geohashUtils.js\";\nimport { create as l } from \"../../../../../geometry/support/aaBoundingBox.js\";\nimport { earth as u } from \"../../../../../geometry/support/Ellipsoid.js\";\nimport { getInfo as g } from \"../../../../../geometry/support/spatialReferenceUtils.js\";\nimport { getBoundsOptimizedGeometry as c, quantizeX as d, quantizeY as f, convertFromPolygon as p } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeatureWithGeometry as m, OptimizedFeature as _ } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport y from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { checkProjectionSupport as I, project as b } from \"../../../../../layers/graphics/data/projectionSupport.js\";\nimport { TILE_SIZE as v } from \"../../../engine/webgl/definitions.js\";\nimport { DISPLAY_ID_TEXEL_MASK as R } from \"../../../engine/webgl/DisplayId.js\";\nimport { featureAdapter as M } from \"../FeatureStore2D.js\";\nimport { Store2D as x } from \"../Store2D.js\";\nimport { FeatureSetReaderJSON as C } from \"./FeatureSetReaderJSON.js\";\nimport j from \"../../../../../geometry/SpatialReference.js\";\nimport L from \"../../../../../geometry/Polygon.js\";\nimport B from \"../../../../../geometry/Extent.js\";\nvar F = 12,\n  w = 64,\n  S = 1,\n  V = l();\nvar T = /*#__PURE__*/function (_m) {\n  _inherits(T, _m);\n  var _super = _createSuper(T);\n  function T(e, t, s, r, o) {\n    var _this;\n    _classCallCheck(this, T);\n    _this = _super.call(this, new y([], [t, s]), r, null, e), _this.geohashBoundsInfo = o;\n    return _this;\n  }\n  _createClass(T, [{\n    key: \"count\",\n    get: function get() {\n      return this.attributes.cluster_count;\n    }\n  }, {\n    key: \"update\",\n    value: function update(e, t, s, r, o, a) {\n      return this.geometry.coords[0] = e, this.geometry.coords[1] = t, this.tileLevel = s, this.attributes = r, this.geohashBoundsInfo = o, this.referenceId = null, this.referenceId = a, this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        attributes: _objectSpread(_objectSpread({}, this.attributes), {}, {\n          aggregateId: this.objectId,\n          referenceId: 1 === this.attributes.cluster_count ? this.referenceId : null\n        }),\n        geometry: {\n          x: this.geometry.coords[0],\n          y: this.geometry.coords[1]\n        }\n      };\n    }\n  }], [{\n    key: \"create\",\n    value: function create(e, t, s, r, o, a, i, h) {\n      var n = new T(t, s, r, a, i);\n      return n.displayId = e.createDisplayId(!0), n.referenceId = h, n.tileLevel = o, n;\n    }\n  }]);\n  return T;\n}(m);\nfunction D(e) {\n  return 57.29577951308232 * e;\n}\nvar G = /*#__PURE__*/function (_x) {\n  _inherits(G, _x);\n  var _super2 = _createSuper(G);\n  function G(t, s, r, o) {\n    var _this2;\n    _classCallCheck(this, G);\n    _this2 = _super2.call(this, t, r), _this2.type = \"cluster\", _this2.events = new e(), _this2.objectIdField = \"aggregateId\", _this2.featureAdapter = M, _this2._geohashLevel = 0, _this2._tileLevel = 0, _this2._aggregateValueRanges = {}, _this2._aggregateValueRangesChanged = !1, _this2._geohashBuf = [], _this2._clusters = new Map(), _this2._tiles = new Map(), _this2._serviceInfo = o, _this2.geometryInfo = t.geometryInfo, _this2._spatialReference = s, _this2._projectionSupportCheck = I(s, j.WGS84), _this2._bitsets.geohash = r.getBitset(r.createBitset()), _this2._bitsets.inserted = r.getBitset(r.createBitset());\n    return _this2;\n  }\n  _createClass(G, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this._tree.destroy();\n    }\n  }, {\n    key: \"featureSpatialReference\",\n    get: function get() {\n      return this._spatialReference;\n    }\n  }, {\n    key: \"fields\",\n    get: function get() {\n      return this._fields;\n    }\n  }, {\n    key: \"updateSchema\",\n    value: function () {\n      var _updateSchema = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e, s) {\n        var r, h;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              r = this._schema;\n              _context.prev = 1;\n              _context.next = 4;\n              return _get(_getPrototypeOf(G.prototype), \"updateSchema\", this).call(this, e, s);\n            case 4:\n              _context.next = 6;\n              return this._projectionSupportCheck;\n            case 6:\n              _context.next = 10;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n            case 10:\n              this._fields = this._schema.params.fields;\n              h = o(r, s);\n              s && (!t(h) || e.source || e.storage.filters) ? ((a(h, \"params.fields\") || !this._tree || e.source) && (this._tree && this._tree.destroy(), this._tree = new i(this._statisticFields, this._serviceInfo), this._rebuildTree(), has(\"esri-2d-update-debug\") && console.debug(\"Aggregate mesh needs update due to tree changing\")), has(\"esri-2d-update-debug\") && console.debug(\"Applying Update - ClusterStore:\", h), e.targets[s.name] = !0, e.mesh = !1, this._aggregateValueRanges = {}) : r && (e.mesh = !0);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n      function updateSchema(_x2, _x3) {\n        return _updateSchema.apply(this, arguments);\n      }\n      return updateSchema;\n    }()\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._rebuildTree();\n    }\n  }, {\n    key: \"sweepFeatures\",\n    value: function sweepFeatures(e, t) {\n      var _this3 = this;\n      this._bitsets.inserted.forEachSet(function (s) {\n        if (!e.has(s)) {\n          var _e = t.lookupByDisplayIdUnsafe(s);\n          _this3._remove(_e);\n        }\n      });\n    }\n  }, {\n    key: \"sweepAggregates\",\n    value: function sweepAggregates(e, t, s) {\n      var _this4 = this;\n      this._clusters.forEach(function (r, o) {\n        r && r.tileLevel !== s && (e.releaseDisplayId(r.displayId), t.unsetAttributeData(r.displayId), _this4._clusters.delete(o));\n      });\n    }\n  }, {\n    key: \"onTileData\",\n    value: function onTileData(e, s, r, o) {\n      var a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !0;\n      if (!this._schema || t(s.addOrUpdate)) return s;\n      this.events.emit(\"changed\");\n      var i = this._getTransforms(e, this._spatialReference);\n      {\n        var _e2 = s.addOrUpdate.getCursor();\n        for (; _e2.next();) this._update(_e2, o);\n      }\n      if (s.status.mesh || !a) return s;\n      var h = new Array(),\n        n = this._schema.params.clusterRadius;\n      this._getClustersForTile(h, e, n, r, i), s.addOrUpdate = C.fromOptimizedFeatures(h, this._serviceInfo), s.addOrUpdate.attachStorage(r), s.clear = !0, s.end = !0;\n      {\n        var _t = s.addOrUpdate.getCursor();\n        for (; _t.next();) {\n          var _s = _t.getDisplayId();\n          this._bitsets.computed.unset(_s), this.setComputedAttributes(r, _t, _s, e.scale);\n        }\n      }\n      return this._aggregateValueRangesChanged && s.end && (this.events.emit(\"valueRangesChanged\", {\n        valueRanges: this._aggregateValueRanges\n      }), this._aggregateValueRangesChanged = !1), s;\n    }\n  }, {\n    key: \"onTileUpdate\",\n    value: function onTileUpdate(_ref) {\n      var _this5 = this;\n      var e = _ref.added,\n        t = _ref.removed;\n      if (e.length) {\n        var _t2 = e[0].level;\n        this._tileLevel = _t2, this._setGeohashLevel(_t2);\n      }\n      if (!this._schema) return;\n      var s = this._schema.params.clusterRadius;\n      t.forEach(function (e) {\n        _this5._tiles.delete(e.key.id), _this5._markTileClustersForDeletion(e, s);\n      });\n    }\n  }, {\n    key: \"getAggregate\",\n    value: function getAggregate(e) {\n      var _iterator = _createForOfIteratorHelper(this._clusters.values()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _t3 = _step.value;\n          if (((_t3 === null || _t3 === void 0 ? void 0 : _t3.displayId) & R) == (e & R)) return _t3.toJSON();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"getAggregates\",\n    value: function getAggregates() {\n      var e = [];\n      var _iterator2 = _createForOfIteratorHelper(this._clusters.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _t4 = _step2.value;\n          (_t4 === null || _t4 === void 0 ? void 0 : _t4.tileLevel) === this._tileLevel && e.push(_t4.toJSON());\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return e;\n    }\n  }, {\n    key: \"getDisplayId\",\n    value: function getDisplayId(e) {\n      var t = this._clusters.get(e);\n      return t ? t.displayId : null;\n    }\n  }, {\n    key: \"getFeatureDisplayIdsForAggregate\",\n    value: function getFeatureDisplayIdsForAggregate(e) {\n      var t = this._clusters.get(e);\n      return t ? this._tree.getRegionDisplayIds(t.geohashBoundsInfo) : [];\n    }\n  }, {\n    key: \"getDisplayIdForReferenceId\",\n    value: function getDisplayIdForReferenceId(e) {\n      var _iterator3 = _createForOfIteratorHelper(this._clusters.values()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _t5 = _step3.value;\n          if ((_t5 === null || _t5 === void 0 ? void 0 : _t5.referenceId) === e) return _t5.displayId;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"getAggregateValueRanges\",\n    value: function getAggregateValueRanges() {\n      return this._aggregateValueRanges;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(e) {\n      var _this6 = this;\n      this._clusters.forEach(function (t) {\n        if (!t) return;\n        var s = t.toJSON(),\n          r = C.fromFeatures([s], {\n            objectIdField: _this6.objectIdField,\n            globalIdField: null,\n            geometryType: _this6.geometryInfo.geometryType,\n            fields: _this6.fields\n          }).getCursor();\n        r.next(), e(r);\n      });\n    }\n  }, {\n    key: \"forEachInBounds\",\n    value: function forEachInBounds(e, t) {}\n  }, {\n    key: \"forEachBounds\",\n    value: function forEachBounds(e, s) {\n      var _this$geometryInfo = this.geometryInfo,\n        r = _this$geometryInfo.hasM,\n        o = _this$geometryInfo.hasZ;\n      var _iterator4 = _createForOfIteratorHelper(e),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _a = _step4.value;\n          var _e3 = c(V, _a.readGeometry(), o, r);\n          t(_e3) || s(_e3);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      var e = 0;\n      return this.forEach(function (t) {\n        return e++;\n      }), e;\n    }\n  }, {\n    key: \"_rebuildTree\",\n    value: function _rebuildTree() {\n      this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove(e) {\n      var t = e.getDisplayId(),\n        s = e.getXHydrated(),\n        r = e.getYHydrated(),\n        o = this._geohashBuf[2 * t],\n        a = this._geohashBuf[2 * t + 1];\n      this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, o, a, this._geohashLevel));\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(e, t) {\n      var s = e.getDisplayId(),\n        r = this._bitsets.inserted,\n        o = t.isVisible(s);\n      if (o === r.has(s)) return;\n      if (!o) return void this._remove(e);\n      var a = e.getXHydrated(),\n        i = e.getYHydrated();\n      if (!this._setGeohash(s, a, i)) return;\n      var h = this._geohashBuf[2 * s],\n        n = this._geohashBuf[2 * s + 1];\n      this._tree.insertCursor(e, s, a, i, h, n, this._geohashLevel), r.set(s);\n    }\n  }, {\n    key: \"_setGeohash\",\n    value: function _setGeohash(e, t, s) {\n      if (this._bitsets.geohash.has(e)) return !0;\n      var r = this._geohashBuf;\n      if (this._spatialReference.isWebMercator) {\n        var _o = D(t / u.radius),\n          _a2 = _o - 360 * Math.floor((_o + 180) / 360),\n          _i = D(Math.PI / 2 - 2 * Math.atan(Math.exp(-s / u.radius)));\n        h(r, e, _i, _a2, F);\n      } else {\n        var _o2 = b({\n          x: t,\n          y: s\n        }, this._spatialReference, j.WGS84);\n        if (!_o2) return !1;\n        h(r, e, _o2.y, _o2.x, F);\n      }\n      return this._bitsets.geohash.set(e), !0;\n    }\n  }, {\n    key: \"_getClustersForTile\",\n    value: function _getClustersForTile(e, o, a, i, h) {\n      var _this7 = this;\n      var n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : !0;\n      var l = this._schema.params.clusterPixelBuffer,\n        u = 2 * a,\n        g = Math.ceil(Math.pow(2, o.key.level) * v / u) + 1,\n        c = Math.ceil(l / u) + 0,\n        p = Math.ceil(v / u),\n        _o$key = o.key,\n        m = _o$key.row,\n        y = _o$key.col,\n        I = y * v,\n        b = m * v,\n        R = Math.floor(I / u) - c,\n        M = Math.floor(b / u) - c,\n        x = R + p + 2 * c,\n        C = M + p + 2 * c,\n        j = o.tileInfoView.getLODInfoAt(o.key.level);\n      for (var _v = R; _v <= x; _v++) {\n        var _loop = function _loop() {\n          var l = _v;\n          j.wrap && (l = _v < 0 ? _v + g : _v % g);\n          var u = j.wrap && _v < 0,\n            c = j.wrap && _v % g !== _v,\n            p = _this7._lookupCluster(i, j, o.key.level, l, _a3, o);\n          if (s(p)) {\n            var _o3 = r(h, function (e) {\n              return u ? e.left : c ? e.right : e.tile;\n            });\n            if (n && t(_o3)) return \"continue\";\n            if (!p.count) return \"continue\";\n            if (s(_o3) && n) {\n              var _t6 = p.geometry.clone();\n              var _r = p.attributes;\n              _t6.coords[0] = d(_o3, _t6.coords[0]), _t6.coords[1] = f(_o3, _t6.coords[1]), 1 === p.count && s(p.referenceId) && (_r = _objectSpread(_objectSpread({}, p.attributes), {}, {\n                referenceId: p.referenceId\n              }));\n              var _a4 = new _(_t6, _r);\n              _a4.displayId = p.displayId, e.push(_a4);\n            }\n          }\n        };\n        for (var _a3 = M; _a3 <= C; _a3++) {\n          var _ret = _loop();\n          if (_ret === \"continue\") continue;\n        }\n      }\n    }\n  }, {\n    key: \"_getGeohashLevel\",\n    value: function _getGeohashLevel(e) {\n      return Math.min(Math.ceil(e / 2 + 2), F);\n    }\n  }, {\n    key: \"_setGeohashLevel\",\n    value: function _setGeohashLevel(e) {\n      var t = this._getGeohashLevel(e),\n        s = (Math.floor(t / S) + 1) * S - 1;\n      if (this._geohashLevel !== s) return this._geohashLevel = s, this._rebuildTree(), void this._bitsets.geohash.clear();\n    }\n  }, {\n    key: \"_getTransforms\",\n    value: function _getTransforms(e, t) {\n      var s = {\n          originPosition: \"upperLeft\",\n          scale: [e.resolution, e.resolution],\n          translate: [e.bounds[0], e.bounds[3]]\n        },\n        r = g(t);\n      if (!r) return {\n        tile: s,\n        left: null,\n        right: null\n      };\n      var _r$valid = _slicedToArray(r.valid, 2),\n        o = _r$valid[0],\n        a = _r$valid[1];\n      return {\n        tile: s,\n        left: _objectSpread(_objectSpread({}, s), {}, {\n          translate: [a, e.bounds[3]]\n        }),\n        right: _objectSpread(_objectSpread({}, s), {}, {\n          translate: [o - a + e.bounds[0], e.bounds[3]]\n        })\n      };\n    }\n  }, {\n    key: \"_getClusterId\",\n    value: function _getClusterId(e, t, s) {\n      return (15 & e) << 28 | (16383 & t) << 14 | 16383 & s;\n    }\n  }, {\n    key: \"_markForDeletion\",\n    value: function _markForDeletion(e, t, s) {\n      var r = this._getClusterId(e, t, s);\n      this._clusters.delete(r);\n    }\n  }, {\n    key: \"_getClusterBounds\",\n    value: function _getClusterBounds(e, t, s) {\n      var r = this._schema.params.clusterRadius,\n        o = 2 * r;\n      var a = s % 2 ? t * o : t * o - r;\n      var i = s * o;\n      var h = a + o;\n      var n = i - o,\n        l = Math.pow(2, e.level) * v;\n      e.wrap && a < 0 && (a = 0), e.wrap && h > l && (h = l);\n      var u = a / v,\n        g = i / v,\n        c = h / v,\n        d = n / v;\n      return [e.getXForColumn(u), e.getYForRow(g), e.getXForColumn(c), e.getYForRow(d)];\n    }\n  }, {\n    key: \"_getGeohash\",\n    value: function _getGeohash(e, t, s) {\n      var r = {\n        geohashX: 0,\n        geohashY: 0\n      };\n      return n(r, t, e, s), r;\n    }\n  }, {\n    key: \"_getGeohashBounds\",\n    value: function _getGeohashBounds(e, t) {\n      var s = this._getGeohashLevel(e.key.level);\n      if (this._spatialReference.isWebMercator) {\n        var _t7 = _slicedToArray(t, 4),\n          _e4 = _t7[0],\n          _r2 = _t7[1],\n          _o4 = _t7[2],\n          _a5 = _t7[3],\n          _i2 = {\n            x: _e4,\n            y: _r2\n          },\n          _h = {\n            x: _o4,\n            y: _a5\n          };\n        var _l = 0,\n          _g = 0,\n          _c = 0,\n          _d = 0;\n        {\n          var _e5 = D(_i2.x / u.radius);\n          _l = _e5 - 360 * Math.floor((_e5 + 180) / 360), _g = D(Math.PI / 2 - 2 * Math.atan(Math.exp(-_i2.y / u.radius)));\n        }\n        {\n          var _e6 = D(_h.x / u.radius);\n          _c = _e6 - 360 * Math.floor((_e6 + 180) / 360), _d = D(Math.PI / 2 - 2 * Math.atan(Math.exp(-_h.y / u.radius)));\n        }\n        var _f = {\n            geohashX: 0,\n            geohashY: 0\n          },\n          _p = {\n            geohashX: 0,\n            geohashY: 0\n          };\n        n(_f, _g, _l, s), n(_p, _d, _c, s);\n        return {\n          bounds: [_e4, _r2, _o4, _a5],\n          geohashBounds: {\n            xLL: _f.geohashX,\n            yLL: _f.geohashY,\n            xTR: _p.geohashX,\n            yTR: _p.geohashY\n          },\n          level: s\n        };\n      }\n      var r = L.fromExtent(B.fromBounds(t, this._spatialReference)),\n        o = b(r, this._spatialReference, j.WGS84, {\n          densificationStep: e.resolution * w\n        });\n      if (!o) return null;\n      var a = p(new y(), o, !1, !1),\n        i = a.coords.filter(function (e, t) {\n          return !(t % 2);\n        }),\n        h = a.coords.filter(function (e, t) {\n          return t % 2;\n        }),\n        l = Math.min.apply(Math, _toConsumableArray(i)),\n        g = Math.min.apply(Math, _toConsumableArray(h)),\n        c = Math.max.apply(Math, _toConsumableArray(i)),\n        d = Math.max.apply(Math, _toConsumableArray(h)),\n        f = this._getGeohash(l, g, s),\n        m = this._getGeohash(c, d, s);\n      return {\n        bounds: t,\n        geohashBounds: {\n          xLL: f.geohashX,\n          yLL: f.geohashY,\n          xTR: m.geohashX,\n          yTR: m.geohashY\n        },\n        level: s\n      };\n    }\n  }, {\n    key: \"_lookupCluster\",\n    value: function _lookupCluster(e, r, o, a, i, h) {\n      var n = this._getClusterId(o, a, i),\n        l = this._clusters.get(n),\n        u = this._getClusterBounds(r, a, i),\n        g = this._getGeohashBounds(h, u);\n      if (t(g)) return null;\n      var c = this._tree.getRegionStatistics(g),\n        d = c.count,\n        f = c.xTotal,\n        p = c.yTotal,\n        m = c.referenceId,\n        _ = d ? f / d : 0,\n        y = d ? p / d : 0;\n      if (0 === d) return this._clusters.set(n, null), null;\n      var I = _objectSpread({\n          cluster_count: d\n        }, c.attributes),\n        b = s(l) ? l.update(_, y, o, I, g, m) : T.create(e, n, _, y, o, I, g, m);\n      if (0 === d) {\n        var _u = _slicedToArray(u, 4),\n          _e7 = _u[0],\n          _t8 = _u[1],\n          _s2 = _u[2],\n          _r3 = _u[3];\n        b.geometry.coords[0] = (_e7 + _s2) / 2, b.geometry.coords[1] = (_t8 + _r3) / 2;\n      }\n      return this._clusters.set(n, b), this._updateAggregateValueRangeForCluster(b, b.tileLevel), b;\n    }\n  }, {\n    key: \"_updateAggregateValueRangeForCluster\",\n    value: function _updateAggregateValueRangeForCluster(e, t) {\n      var s = this._aggregateValueRanges[t] || {\n          minValue: 1 / 0,\n          maxValue: 0\n        },\n        r = s.minValue,\n        o = s.maxValue;\n      s.minValue = Math.min(r, e.count), s.maxValue = Math.max(o, e.count), this._aggregateValueRanges[t] = s, r === s.minValue && o === s.maxValue || (this._aggregateValueRangesChanged = !0);\n    }\n  }, {\n    key: \"_markTileClustersForDeletion\",\n    value: function _markTileClustersForDeletion(e, t) {\n      var s = 2 * t,\n        r = Math.ceil(v / s),\n        _e$key = e.key,\n        o = _e$key.row,\n        a = _e$key.col,\n        i = a * v,\n        h = o * v,\n        n = Math.floor(i / s),\n        l = Math.floor(h / s);\n      for (var _u2 = n; _u2 < n + r; _u2++) for (var _t9 = l; _t9 < l + r; _t9++) this._markForDeletion(e.key.level, _u2, _t9);\n    }\n  }]);\n  return G;\n}(x);\nexport { T as ClusterInfo, G as ClusterStore };","map":{"version":3,"names":["e","has","isNone","t","isSome","s","applySome","r","diff","o","hasDiff","a","GeohashTree","i","setGeohashBuf","h","setGeohashXY","n","create","l","earth","u","getInfo","g","getBoundsOptimizedGeometry","c","quantizeX","d","quantizeY","f","convertFromPolygon","p","OptimizedFeatureWithGeometry","m","OptimizedFeature","_","y","checkProjectionSupport","I","project","b","TILE_SIZE","v","DISPLAY_ID_TEXEL_MASK","R","featureAdapter","M","Store2D","x","FeatureSetReaderJSON","C","j","L","B","F","w","S","V","T","_m","_inherits","_super","_createSuper","_this","_classCallCheck","call","geohashBoundsInfo","_createClass","key","get","attributes","cluster_count","value","update","geometry","coords","tileLevel","referenceId","toJSON","_objectSpread","aggregateId","objectId","displayId","createDisplayId","D","G","_x","_super2","_this2","type","events","objectIdField","_geohashLevel","_tileLevel","_aggregateValueRanges","_aggregateValueRangesChanged","_geohashBuf","_clusters","Map","_tiles","_serviceInfo","geometryInfo","_spatialReference","_projectionSupportCheck","WGS84","_bitsets","geohash","getBitset","createBitset","inserted","destroy","_tree","_fields","_updateSchema","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","_schema","_get","_getPrototypeOf","prototype","t0","params","fields","source","storage","filters","_statisticFields","_rebuildTree","console","debug","targets","name","mesh","stop","updateSchema","_x2","_x3","apply","arguments","clear","sweepFeatures","_this3","forEachSet","lookupByDisplayIdUnsafe","_remove","sweepAggregates","_this4","forEach","releaseDisplayId","unsetAttributeData","delete","onTileData","length","undefined","addOrUpdate","emit","_getTransforms","getCursor","_update","status","Array","clusterRadius","_getClustersForTile","fromOptimizedFeatures","attachStorage","end","getDisplayId","computed","unset","setComputedAttributes","scale","valueRanges","onTileUpdate","_ref","_this5","added","removed","level","_setGeohashLevel","id","_markTileClustersForDeletion","getAggregate","_iterator","_createForOfIteratorHelper","values","_step","done","err","getAggregates","_iterator2","_step2","push","getFeatureDisplayIdsForAggregate","getRegionDisplayIds","getDisplayIdForReferenceId","_iterator3","_step3","getAggregateValueRanges","_this6","fromFeatures","globalIdField","geometryType","forEachInBounds","forEachBounds","_this$geometryInfo","hasM","hasZ","_iterator4","_step4","readGeometry","size","getXHydrated","getYHydrated","removeCursor","isVisible","_setGeohash","insertCursor","set","isWebMercator","radius","Math","floor","PI","atan","exp","_this7","clusterPixelBuffer","ceil","pow","_o$key","row","col","tileInfoView","getLODInfoAt","_loop","_lookupCluster","left","right","tile","count","clone","_ret","_getGeohashLevel","min","originPosition","resolution","translate","bounds","_r$valid","_slicedToArray","valid","_getClusterId","_markForDeletion","_getClusterBounds","getXForColumn","getYForRow","_getGeohash","geohashX","geohashY","_getGeohashBounds","_t7","geohashBounds","xLL","yLL","xTR","yTR","fromExtent","fromBounds","densificationStep","filter","_toConsumableArray","max","getRegionStatistics","xTotal","yTotal","_u","_updateAggregateValueRangeForCluster","minValue","maxValue","_e$key","ClusterInfo","ClusterStore"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/2d/layers/features/support/ClusterStore.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../../../geometry.js\";import e from\"../../../../../core/Evented.js\";import has from\"../../../../../core/has.js\";import{isNone as t,isSome as s,applySome as r}from\"../../../../../core/maybe.js\";import{diff as o,hasDiff as a}from\"../../../../../core/accessorSupport/diffUtils.js\";import{GeohashTree as i}from\"../../../../../geohash/GeohashTree.js\";import{setGeohashBuf as h,setGeohashXY as n}from\"../../../../../geohash/geohashUtils.js\";import{create as l}from\"../../../../../geometry/support/aaBoundingBox.js\";import{earth as u}from\"../../../../../geometry/support/Ellipsoid.js\";import{getInfo as g}from\"../../../../../geometry/support/spatialReferenceUtils.js\";import{getBoundsOptimizedGeometry as c,quantizeX as d,quantizeY as f,convertFromPolygon as p}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{OptimizedFeatureWithGeometry as m,OptimizedFeature as _}from\"../../../../../layers/graphics/OptimizedFeature.js\";import y from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{checkProjectionSupport as I,project as b}from\"../../../../../layers/graphics/data/projectionSupport.js\";import{TILE_SIZE as v}from\"../../../engine/webgl/definitions.js\";import{DISPLAY_ID_TEXEL_MASK as R}from\"../../../engine/webgl/DisplayId.js\";import{featureAdapter as M}from\"../FeatureStore2D.js\";import{Store2D as x}from\"../Store2D.js\";import{FeatureSetReaderJSON as C}from\"./FeatureSetReaderJSON.js\";import j from\"../../../../../geometry/SpatialReference.js\";import L from\"../../../../../geometry/Polygon.js\";import B from\"../../../../../geometry/Extent.js\";const F=12,w=64,S=1,V=l();class T extends m{constructor(e,t,s,r,o){super(new y([],[t,s]),r,null,e),this.geohashBoundsInfo=o}get count(){return this.attributes.cluster_count}static create(e,t,s,r,o,a,i,h){const n=new T(t,s,r,a,i);return n.displayId=e.createDisplayId(!0),n.referenceId=h,n.tileLevel=o,n}update(e,t,s,r,o,a){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=o,this.referenceId=null,this.referenceId=a,this}toJSON(){return{attributes:{...this.attributes,aggregateId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function D(e){return 57.29577951308232*e}class G extends x{constructor(t,s,r,o){super(t,r),this.type=\"cluster\",this.events=new e,this.objectIdField=\"aggregateId\",this.featureAdapter=M,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this._serviceInfo=o,this.geometryInfo=t.geometryInfo,this._spatialReference=s,this._projectionSupportCheck=I(s,j.WGS84),this._bitsets.geohash=r.getBitset(r.createBitset()),this._bitsets.inserted=r.getBitset(r.createBitset())}destroy(){this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,s){const r=this._schema;try{await super.updateSchema(e,s),await this._projectionSupportCheck}catch(n){}this._fields=this._schema.params.fields;const h=o(r,s);s&&(!t(h)||e.source||e.storage.filters)?((a(h,\"params.fields\")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new i(this._statisticFields,this._serviceInfo),this._rebuildTree(),has(\"esri-2d-update-debug\")&&console.debug(\"Aggregate mesh needs update due to tree changing\")),has(\"esri-2d-update-debug\")&&console.debug(\"Applying Update - ClusterStore:\",h),e.targets[s.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):r&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepAggregates(e,t,s){this._clusters.forEach(((r,o)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(o))}))}onTileData(e,s,r,o,a=!0){if(!this._schema||t(s.addOrUpdate))return s;this.events.emit(\"changed\");const i=this._getTransforms(e,this._spatialReference);{const e=s.addOrUpdate.getCursor();for(;e.next();)this._update(e,o)}if(s.status.mesh||!a)return s;const h=new Array,n=this._schema.params.clusterRadius;this._getClustersForTile(h,e,n,r,i),s.addOrUpdate=C.fromOptimizedFeatures(h,this._serviceInfo),s.addOrUpdate.attachStorage(r),s.clear=!0,s.end=!0;{const t=s.addOrUpdate.getCursor();for(;t.next();){const s=t.getDisplayId();this._bitsets.computed.unset(s),this.setComputedAttributes(r,t,s,e.scale)}}return this._aggregateValueRangesChanged&&s.end&&(this.events.emit(\"valueRangesChanged\",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),s}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._tileLevel=t,this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){for(const t of this._clusters.values())if((t?.displayId&R)==(e&R))return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())t?.tileLevel===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);return t?this._tree.getRegionDisplayIds(t.geohashBoundsInfo):[]}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if(t?.referenceId===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){this._clusters.forEach((t=>{if(!t)return;const s=t.toJSON(),r=C.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)}))}forEachInBounds(e,t){}forEachBounds(e,s){const{hasM:r,hasZ:o}=this.geometryInfo;for(const a of e){const e=c(V,a.readGeometry(),o,r);t(e)||s(e)}}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),o=this._geohashBuf[2*t],a=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,o,a,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,o=t.isVisible(s);if(o===r.has(s))return;if(!o)return void this._remove(e);const a=e.getXHydrated(),i=e.getYHydrated();if(!this._setGeohash(s,a,i))return;const h=this._geohashBuf[2*s],n=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,a,i,h,n,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const o=D(t/u.radius),a=o-360*Math.floor((o+180)/360),i=D(Math.PI/2-2*Math.atan(Math.exp(-s/u.radius)));h(r,e,i,a,F)}else{const o=b({x:t,y:s},this._spatialReference,j.WGS84);if(!o)return!1;h(r,e,o.y,o.x,F)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,o,a,i,h,n=!0){const l=this._schema.params.clusterPixelBuffer,u=2*a,g=Math.ceil(2**o.key.level*v/u)+1,c=Math.ceil(l/u)+0,p=Math.ceil(v/u),{row:m,col:y}=o.key,I=y*v,b=m*v,R=Math.floor(I/u)-c,M=Math.floor(b/u)-c,x=R+p+2*c,C=M+p+2*c,j=o.tileInfoView.getLODInfoAt(o.key.level);for(let v=R;v<=x;v++)for(let a=M;a<=C;a++){let l=v;j.wrap&&(l=v<0?v+g:v%g);const u=j.wrap&&v<0,c=j.wrap&&v%g!==v,p=this._lookupCluster(i,j,o.key.level,l,a,o);if(s(p)){const o=r(h,(e=>u?e.left:c?e.right:e.tile));if(n&&t(o))continue;if(!p.count)continue;if(s(o)&&n){const t=p.geometry.clone();let r=p.attributes;t.coords[0]=d(o,t.coords[0]),t.coords[1]=f(o,t.coords[1]),1===p.count&&s(p.referenceId)&&(r={...p.attributes,referenceId:p.referenceId});const a=new _(t,r);a.displayId=p.displayId,e.push(a)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),F)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=(Math.floor(t/S)+1)*S-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:\"upperLeft\",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=g(t);if(!r)return{tile:s,left:null,right:null};const[o,a]=r.valid;return{tile:s,left:{...s,translate:[a,e.bounds[3]]},right:{...s,translate:[o-a+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,o=2*r;let a=s%2?t*o:t*o-r;const i=s*o;let h=a+o;const n=i-o,l=2**e.level*v;e.wrap&&a<0&&(a=0),e.wrap&&h>l&&(h=l);const u=a/v,g=i/v,c=h/v,d=n/v;return[e.getXForColumn(u),e.getYForRow(g),e.getXForColumn(c),e.getYForRow(d)]}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return n(r,t,e,s),r}_getGeohashBounds(e,t){const s=this._getGeohashLevel(e.key.level);if(this._spatialReference.isWebMercator){const[e,r,o,a]=t,i={x:e,y:r},h={x:o,y:a};let l=0,g=0,c=0,d=0;{const e=D(i.x/u.radius);l=e-360*Math.floor((e+180)/360),g=D(Math.PI/2-2*Math.atan(Math.exp(-i.y/u.radius)))}{const e=D(h.x/u.radius);c=e-360*Math.floor((e+180)/360),d=D(Math.PI/2-2*Math.atan(Math.exp(-h.y/u.radius)))}const f={geohashX:0,geohashY:0},p={geohashX:0,geohashY:0};n(f,g,l,s),n(p,d,c,s);return{bounds:[e,r,o,a],geohashBounds:{xLL:f.geohashX,yLL:f.geohashY,xTR:p.geohashX,yTR:p.geohashY},level:s}}const r=L.fromExtent(B.fromBounds(t,this._spatialReference)),o=b(r,this._spatialReference,j.WGS84,{densificationStep:e.resolution*w});if(!o)return null;const a=p(new y,o,!1,!1),i=a.coords.filter(((e,t)=>!(t%2))),h=a.coords.filter(((e,t)=>t%2)),l=Math.min(...i),g=Math.min(...h),c=Math.max(...i),d=Math.max(...h),f=this._getGeohash(l,g,s),m=this._getGeohash(c,d,s);return{bounds:t,geohashBounds:{xLL:f.geohashX,yLL:f.geohashY,xTR:m.geohashX,yTR:m.geohashY},level:s}}_lookupCluster(e,r,o,a,i,h){const n=this._getClusterId(o,a,i),l=this._clusters.get(n),u=this._getClusterBounds(r,a,i),g=this._getGeohashBounds(h,u);if(t(g))return null;const c=this._tree.getRegionStatistics(g),{count:d,xTotal:f,yTotal:p,referenceId:m}=c,_=d?f/d:0,y=d?p/d:0;if(0===d)return this._clusters.set(n,null),null;const I={cluster_count:d,...c.attributes},b=s(l)?l.update(_,y,o,I,g,m):T.create(e,n,_,y,o,I,g,m);if(0===d){const[e,t,s,r]=u;b.geometry.coords[0]=(e+s)/2,b.geometry.coords[1]=(t+r)/2}return this._clusters.set(n,b),this._updateAggregateValueRangeForCluster(b,b.tileLevel),b}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,o=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(o,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&o===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(v/s),{row:o,col:a}=e.key,i=a*v,h=o*v,n=Math.floor(i/s),l=Math.floor(h/s);for(let u=n;u<n+r;u++)for(let t=l;t<l+r;t++)this._markForDeletion(e.key.level,u,t)}}export{T as ClusterInfo,G as ClusterStore};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}