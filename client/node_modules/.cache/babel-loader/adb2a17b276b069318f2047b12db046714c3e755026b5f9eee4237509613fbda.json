{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../../../../core/maybe.js\";\nimport t from \"../../../../core/ObjectPool.js\";\nimport n from \"../../../../core/PooledArray.js\";\nimport { g as o, a as s, d as i, c as r, h } from \"../../../../chunks/vec3.js\";\nimport { c as a, f as d } from \"../../../../chunks/vec3f64.js\";\nimport { intersectsSphere as l } from \"../../../../geometry/support/frustum.js\";\nimport { wrap as u } from \"../../../../geometry/support/ray.js\";\nimport { h as c, a as f, g as _, j as m, c as p } from \"../../../../chunks/sphere.js\";\nimport { rayBoxTest as b } from \"./Util.js\";\nclass g {\n  get bounds() {\n    return this._root.bounds;\n  }\n  get halfSize() {\n    return this._root.halfSize;\n  }\n  get root() {\n    return this._root.node;\n  }\n  get maximumObjectsPerNode() {\n    return this._maximumObjectsPerNode;\n  }\n  get maximumDepth() {\n    return this._maximumDepth;\n  }\n  get objectCount() {\n    return this._objectCount;\n  }\n  constructor(e, t) {\n    this._objectToBoundingSphere = e, this._maximumObjectsPerNode = 10, this._maximumDepth = 20, this._degenerateObjects = new Set(), this._root = new S(), this._objectCount = 0, t && (void 0 !== t.maximumObjectsPerNode && (this._maximumObjectsPerNode = t.maximumObjectsPerNode), void 0 !== t.maximumDepth && (this._maximumDepth = t.maximumDepth));\n  }\n  destroy() {\n    this._degenerateObjects.clear(), S.clearPool(), R[0] = null, w.prune(), K.prune();\n  }\n  add(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : e.length;\n    this._objectCount += t, this._grow(e, t);\n    const n = S.acquire();\n    for (let o = 0; o < t; o++) {\n      const t = e[o];\n      this._isDegenerate(t) ? this._degenerateObjects.add(t) : (n.init(this._root), this._add(t, n));\n    }\n    S.release(n);\n  }\n  remove(t) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    this._objectCount -= t.length;\n    const o = S.acquire();\n    for (const s of t) {\n      const t = e(n) ? n : c(this._objectToBoundingSphere(s), C);\n      M(t[3]) ? (o.init(this._root), this._remove(s, t, o)) : this._degenerateObjects.delete(s);\n    }\n    S.release(o), this._shrink();\n  }\n  update(e, t) {\n    if (!M(t[3]) && this._isDegenerate(e)) return;\n    const n = v(e);\n    this.remove(n, t), this.add(n);\n  }\n  forEachAlongRay(e, t, n) {\n    const o = u(e, t);\n    this._forEachNode(this._root, e => {\n      if (!this._intersectsNode(o, e)) return !1;\n      const t = e.node;\n      return t.terminals.forAll(e => {\n        this._intersectsObject(o, e) && n(e);\n      }), null !== t.residents && t.residents.forAll(e => {\n        this._intersectsObject(o, e) && n(e);\n      }), !0;\n    });\n  }\n  forEachAlongRayWithVerticalOffset(e, t, n, o) {\n    const s = u(e, t);\n    this._forEachNode(this._root, e => {\n      if (!this._intersectsNodeWithOffset(s, e, o)) return !1;\n      const t = e.node;\n      return t.terminals.forAll(e => {\n        this._intersectsObjectWithOffset(s, e, o) && n(e);\n      }), null !== t.residents && t.residents.forAll(e => {\n        this._intersectsObjectWithOffset(s, e, o) && n(e);\n      }), !0;\n    });\n  }\n  forEach(e) {\n    this._forEachNode(this._root, t => {\n      const n = t.node;\n      return n.terminals.forAll(e), null !== n.residents && n.residents.forAll(e), !0;\n    }), this._degenerateObjects.forEach(e);\n  }\n  forEachDegenerateObject(e) {\n    this._degenerateObjects.forEach(e);\n  }\n  findClosest(e, t, n) {\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : () => !0;\n    let r = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1 / 0;\n    let h = 1 / 0,\n      a = 1 / 0,\n      d = null;\n    const u = z(e, t),\n      c = o => {\n        if (--r, !i(o)) return;\n        const s = this._objectToBoundingSphere(o);\n        if (!l(n, s)) return;\n        const u = E(e, t, _(s)),\n          c = u - s[3],\n          f = u + s[3];\n        c < h && (h = c, a = f, d = o);\n      };\n    return this._forEachNodeDepthOrdered(this._root, i => {\n      if (r <= 0 || !l(n, i.bounds)) return !1;\n      o(y, u, i.halfSize), s(y, y, i.bounds);\n      if (E(e, t, y) > a) return !1;\n      const h = i.node;\n      return h.terminals.forAll(e => c(e)), null !== h.residents && h.residents.forAll(e => c(e)), !0;\n    }, e, t), d;\n  }\n  forEachInDepthRange(e, t, n, i, r, h, a) {\n    let d = -1 / 0,\n      u = 1 / 0;\n    const c = {\n      setRange: e => {\n        n === g.DepthOrder.FRONT_TO_BACK ? (d = Math.max(d, e.near), u = Math.min(u, e.far)) : (d = Math.max(d, -e.far), u = Math.min(u, -e.near));\n      }\n    };\n    c.setRange(i);\n    const f = E(t, n, e),\n      m = z(t, n),\n      p = z(t, -n),\n      b = e => {\n        if (!a(e)) return;\n        const o = this._objectToBoundingSphere(e),\n          s = _(o),\n          i = E(t, n, s) - f,\n          m = i - o[3],\n          p = i + o[3];\n        m > u || p < d || !l(h, o) || r(e, c);\n      };\n    this._forEachNodeDepthOrdered(this._root, e => {\n      if (!l(h, e.bounds)) return !1;\n      o(y, m, e.halfSize), s(y, y, e.bounds);\n      if (E(t, n, y) - f > u) return !1;\n      o(y, p, e.halfSize), s(y, y, e.bounds);\n      if (E(t, n, y) - f < d) return !1;\n      const i = e.node;\n      return i.terminals.forAll(e => b(e)), null !== i.residents && i.residents.forAll(e => b(e)), !0;\n    }, t, n);\n  }\n  forEachNode(e) {\n    this._forEachNode(this._root, t => e(t.node, t.bounds, t.halfSize));\n  }\n  forEachNeighbor(e, t) {\n    const n = f(t),\n      o = _(t),\n      s = t => {\n        const s = this._objectToBoundingSphere(t),\n          r = f(s),\n          h = n + r;\n        return !(i(_(s), o) - h * h <= 0) || e(t);\n      };\n    let r = !0;\n    const h = e => {\n      r && (r = s(e));\n    };\n    this._forEachNode(this._root, e => {\n      const t = f(e.bounds),\n        s = n + t;\n      if (i(_(e.bounds), o) - s * s > 0) return !1;\n      const a = e.node;\n      return a.terminals.forAll(h), r && null !== a.residents && a.residents.forAll(h), r;\n    }), r && this.forEachDegenerateObject(h);\n  }\n  _intersectsNode(e, t) {\n    return x(t.bounds, 2 * -t.halfSize, k), x(t.bounds, 2 * t.halfSize, q), b(e.origin, e.direction, k, q);\n  }\n  _intersectsNodeWithOffset(e, t, n) {\n    return x(t.bounds, 2 * -t.halfSize, k), x(t.bounds, 2 * t.halfSize, q), n.applyToMinMax(k, q), b(e.origin, e.direction, k, q);\n  }\n  _intersectsObject(e, t) {\n    const n = this._objectToBoundingSphere(t);\n    return !(n[3] > 0) || m(n, e);\n  }\n  _intersectsObjectWithOffset(e, t, n) {\n    const o = this._objectToBoundingSphere(t);\n    return !(o[3] > 0) || m(n.applyToBoundingSphere(o), e);\n  }\n  _forEachNode(e, t) {\n    let n = S.acquire().init(e);\n    const o = [n];\n    for (; 0 !== o.length;) {\n      if (n = o.pop(), t(n) && !n.isLeaf()) for (let e = 0; e < n.node.children.length; e++) {\n        n.node.children[e] && o.push(S.acquire().init(n).advance(e));\n      }\n      S.release(n);\n    }\n  }\n  _forEachNodeDepthOrdered(e, t, n) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : g.DepthOrder.FRONT_TO_BACK;\n    let s = S.acquire().init(e);\n    const i = [s];\n    for (T(n, o, W); 0 !== i.length;) {\n      if (s = i.pop(), t(s) && !s.isLeaf()) for (let e = 7; e >= 0; --e) {\n        const t = W[e];\n        s.node.children[t] && i.push(S.acquire().init(s).advance(t));\n      }\n      S.release(s);\n    }\n  }\n  _remove(e, t, n) {\n    w.clear();\n    const o = n.advanceTo(t, (e, t) => {\n      w.push(e.node), w.push(t);\n    }) ? n.node.terminals : n.node.residents;\n    if (o.removeUnordered(e), 0 === o.length) for (let s = w.length - 2; s >= 0; s -= 2) {\n      const e = w.data[s],\n        t = w.data[s + 1];\n      if (!this._purge(e, t)) break;\n    }\n  }\n  _nodeIsEmpty(e) {\n    if (0 !== e.terminals.length) return !1;\n    if (null !== e.residents) return 0 === e.residents.length;\n    for (let t = 0; t < e.children.length; t++) if (e.children[t]) return !1;\n    return !0;\n  }\n  _purge(e, t) {\n    return t >= 0 && (e.children[t] = null), !!this._nodeIsEmpty(e) && (null === e.residents && (e.residents = new n({\n      shrink: !0\n    })), !0);\n  }\n  _add(e, t) {\n    t.advanceTo(this._objectToBoundingSphere(e)) ? t.node.terminals.push(e) : (t.node.residents.push(e), t.node.residents.length > this._maximumObjectsPerNode && t.depth < this._maximumDepth && this._split(t));\n  }\n  _split(e) {\n    const t = e.node.residents;\n    e.node.residents = null;\n    for (let n = 0; n < t.length; n++) {\n      const o = S.acquire().init(e);\n      this._add(t.getItemAt(n), o), S.release(o);\n    }\n  }\n  _grow(e, t) {\n    if (0 !== t && (N(e, t, e => this._objectToBoundingSphere(e), I), M(I[3]) && !this._fitsInsideTree(I))) if (this._nodeIsEmpty(this._root.node)) c(I, this._root.bounds), this._root.halfSize = 1.25 * this._root.bounds[3], this._root.updateBoundsRadiusFromHalfSize();else {\n      const e = this._rootBoundsForRootAsSubNode(I);\n      this._placingRootViolatesMaxDepth(e) ? this._rebuildTree(I, e) : this._growRootAsSubNode(e), S.release(e);\n    }\n  }\n  _rebuildTree(e, t) {\n    r(P, t.bounds), P[3] = t.halfSize, N([e, P], 2, e => e, L);\n    const n = S.acquire().init(this._root);\n    this._root.initFrom(null, L, L[3]), this._root.increaseHalfSize(1.25), this._forEachNode(n, e => (this.add(e.node.terminals.data, e.node.terminals.length), null !== e.node.residents && this.add(e.node.residents.data, e.node.residents.length), !0)), S.release(n);\n  }\n  _placingRootViolatesMaxDepth(e) {\n    const t = Math.log(e.halfSize / this._root.halfSize) * Math.LOG2E;\n    let n = 0;\n    return this._forEachNode(this._root, e => (n = Math.max(n, e.depth), n + t <= this._maximumDepth)), n + t > this._maximumDepth;\n  }\n  _rootBoundsForRootAsSubNode(e) {\n    const t = e[3],\n      n = e;\n    let o = -1 / 0;\n    const s = this._root.bounds,\n      i = this._root.halfSize;\n    for (let h = 0; h < 3; h++) {\n      const e = s[h] - i - (n[h] - t),\n        r = n[h] + t - (s[h] + i),\n        a = Math.max(0, Math.ceil(e / (2 * i))),\n        d = Math.max(0, Math.ceil(r / (2 * i))) + 1,\n        l = 2 ** Math.ceil(Math.log(a + d) * Math.LOG2E);\n      o = Math.max(o, l), H[h].min = a, H[h].max = d;\n    }\n    for (let h = 0; h < 3; h++) {\n      let e = H[h].min,\n        t = H[h].max;\n      const n = (o - (e + t)) / 2;\n      e += Math.ceil(n), t += Math.floor(n);\n      const r = s[h] - i - e * i * 2;\n      F[h] = r + (t + e) * i;\n    }\n    const r = o * i;\n    return F[3] = r * B, S.acquire().initFrom(null, F, r, 0);\n  }\n  _growRootAsSubNode(e) {\n    const t = this._root.node;\n    r(I, this._root.bounds), I[3] = this._root.halfSize, this._root.init(e), e.advanceTo(I, null, !0), e.node.children = t.children, e.node.residents = t.residents, e.node.terminals = t.terminals;\n  }\n  _shrink() {\n    for (;;) {\n      const e = this._findShrinkIndex();\n      if (-1 === e) break;\n      this._root.advance(e), this._root.depth = 0;\n    }\n  }\n  _findShrinkIndex() {\n    if (0 !== this._root.node.terminals.length || this._root.isLeaf()) return -1;\n    let e = null;\n    const t = this._root.node.children;\n    let n = 0,\n      o = 0;\n    for (; o < t.length && null == e;) n = o++, e = t[n];\n    for (; o < t.length;) if (t[o++]) return -1;\n    return n;\n  }\n  _isDegenerate(e) {\n    return !M(this._objectToBoundingSphere(e)[3]);\n  }\n  _fitsInsideTree(e) {\n    const t = this._root.bounds,\n      n = this._root.halfSize;\n    return e[3] <= n && e[0] >= t[0] - n && e[0] <= t[0] + n && e[1] >= t[1] - n && e[1] <= t[1] + n && e[2] >= t[2] - n && e[2] <= t[2] + n;\n  }\n}\nclass S {\n  constructor() {\n    this.bounds = p(), this.halfSize = 0, this.initFrom(null, null, 0, 0);\n  }\n  init(e) {\n    return this.initFrom(e.node, e.bounds, e.halfSize, e.depth);\n  }\n  initFrom(t, n, o) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.depth;\n    return this.node = e(t) ? t : S.createEmptyNode(), e(n) && c(n, this.bounds), this.halfSize = o, this.depth = s, this;\n  }\n  increaseHalfSize(e) {\n    this.halfSize *= e, this.updateBoundsRadiusFromHalfSize();\n  }\n  updateBoundsRadiusFromHalfSize() {\n    this.bounds[3] = this.halfSize * B;\n  }\n  advance(e) {\n    let t = this.node.children[e];\n    t || (t = S.createEmptyNode(), this.node.children[e] = t), this.node = t, this.halfSize /= 2, this.depth++;\n    const n = A[e];\n    return this.bounds[0] += n[0] * this.halfSize, this.bounds[1] += n[1] * this.halfSize, this.bounds[2] += n[2] * this.halfSize, this.updateBoundsRadiusFromHalfSize(), this;\n  }\n  advanceTo(e, t) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    for (;;) {\n      if (this.isTerminalFor(e)) return t && t(this, -1), !0;\n      if (this.isLeaf()) {\n        if (!n) return t && t(this, -1), !1;\n        this.node.residents = null;\n      }\n      const o = this._childIndex(e);\n      t && t(this, o), this.advance(o);\n    }\n  }\n  isLeaf() {\n    return null != this.node.residents;\n  }\n  isTerminalFor(e) {\n    return e[3] > this.halfSize / 2;\n  }\n  _childIndex(e) {\n    const t = this.bounds;\n    return (t[0] < e[0] ? 1 : 0) + (t[1] < e[1] ? 2 : 0) + (t[2] < e[2] ? 4 : 0);\n  }\n  static createEmptyNode() {\n    return {\n      children: [null, null, null, null, null, null, null, null],\n      terminals: new n({\n        shrink: !0\n      }),\n      residents: new n({\n        shrink: !0\n      })\n    };\n  }\n  static acquire() {\n    return S._pool.acquire();\n  }\n  static release(e) {\n    S._pool.release(e);\n  }\n  static clearPool() {\n    S._pool.prune();\n  }\n}\nfunction O(e, t) {\n  e[0] = Math.min(e[0], t[0] - t[3]), e[1] = Math.min(e[1], t[1] - t[3]), e[2] = Math.min(e[2], t[2] - t[3]);\n}\nfunction j(e, t) {\n  e[0] = Math.max(e[0], t[0] + t[3]), e[1] = Math.max(e[1], t[1] + t[3]), e[2] = Math.max(e[2], t[2] + t[3]);\n}\nfunction x(e, t, n) {\n  n[0] = e[0] + t, n[1] = e[1] + t, n[2] = e[2] + t;\n}\nfunction N(e, t, n, o) {\n  if (1 === t) {\n    const t = n(e[0]);\n    c(t, o);\n  } else {\n    k[0] = 1 / 0, k[1] = 1 / 0, k[2] = 1 / 0, q[0] = -1 / 0, q[1] = -1 / 0, q[2] = -1 / 0;\n    for (let o = 0; o < t; o++) {\n      const t = n(e[o]);\n      M(t[3]) && (O(k, t), j(q, t));\n    }\n    h(o, k, q, .5), o[3] = Math.max(q[0] - k[0], q[1] - k[1], q[2] - k[2]) / 2;\n  }\n}\nfunction T(e, t, n) {\n  if (!K.length) for (let o = 0; o < 8; ++o) K.push({\n    index: 0,\n    distance: 0\n  });\n  for (let o = 0; o < 8; ++o) {\n    const n = A[o];\n    K.data[o].index = o, K.data[o].distance = E(e, t, n);\n  }\n  K.sort((e, t) => e.distance - t.distance);\n  for (let o = 0; o < 8; ++o) n[o] = K.data[o].index;\n}\nfunction z(e, t) {\n  let n,\n    o = 1 / 0;\n  for (let s = 0; s < 8; ++s) {\n    const i = E(e, t, D[s]);\n    i < o && (o = i, n = D[s]);\n  }\n  return n;\n}\nfunction E(e, t, n) {\n  return t * (e[0] * n[0] + e[1] * n[1] + e[2] * n[2]);\n}\nfunction M(e) {\n  return !isNaN(e) && e !== -1 / 0 && e !== 1 / 0 && e > 0;\n}\nS._pool = new t(S), function (e) {\n  var t;\n  (t = e.DepthOrder || (e.DepthOrder = {}))[t.FRONT_TO_BACK = 1] = \"FRONT_TO_BACK\", t[t.BACK_TO_FRONT = -1] = \"BACK_TO_FRONT\";\n}(g || (g = {}));\nconst A = [d(-1, -1, -1), d(1, -1, -1), d(-1, 1, -1), d(1, 1, -1), d(-1, -1, 1), d(1, -1, 1), d(-1, 1, 1), d(1, 1, 1)],\n  D = [d(-1, -1, -1), d(-1, -1, 1), d(-1, 1, -1), d(-1, 1, 1), d(1, -1, -1), d(1, -1, 1), d(1, 1, -1), d(1, 1, 1)],\n  B = Math.sqrt(3),\n  R = [null];\nfunction v(e) {\n  return R[0] = e, R;\n}\nconst F = p(),\n  y = a(),\n  k = a(),\n  q = a(),\n  w = new n(),\n  C = p(),\n  I = p(),\n  P = p(),\n  L = p(),\n  H = [{\n    min: 0,\n    max: 0\n  }, {\n    min: 0,\n    max: 0\n  }, {\n    min: 0,\n    max: 0\n  }],\n  K = new n(),\n  W = [0, 0, 0, 0, 0, 0, 0, 0],\n  V = g;\nexport { V as default };","map":{"version":3,"names":["isSome","e","t","n","g","o","a","s","d","i","c","r","h","f","intersectsSphere","l","wrap","u","_","j","m","p","rayBoxTest","b","bounds","_root","halfSize","root","node","maximumObjectsPerNode","_maximumObjectsPerNode","maximumDepth","_maximumDepth","objectCount","_objectCount","constructor","_objectToBoundingSphere","_degenerateObjects","Set","S","destroy","clear","clearPool","R","w","prune","K","add","arguments","length","undefined","_grow","acquire","_isDegenerate","init","_add","release","remove","C","M","_remove","delete","_shrink","update","v","forEachAlongRay","_forEachNode","_intersectsNode","terminals","forAll","_intersectsObject","residents","forEachAlongRayWithVerticalOffset","_intersectsNodeWithOffset","_intersectsObjectWithOffset","forEach","forEachDegenerateObject","findClosest","z","E","_forEachNodeDepthOrdered","y","forEachInDepthRange","setRange","DepthOrder","FRONT_TO_BACK","Math","max","near","min","far","forEachNode","forEachNeighbor","x","k","q","origin","direction","applyToMinMax","applyToBoundingSphere","pop","isLeaf","children","push","advance","T","W","advanceTo","removeUnordered","data","_purge","_nodeIsEmpty","shrink","depth","_split","getItemAt","N","I","_fitsInsideTree","updateBoundsRadiusFromHalfSize","_rootBoundsForRootAsSubNode","_placingRootViolatesMaxDepth","_rebuildTree","_growRootAsSubNode","P","L","initFrom","increaseHalfSize","log","LOG2E","ceil","H","floor","F","B","_findShrinkIndex","createEmptyNode","A","isTerminalFor","_childIndex","_pool","O","index","distance","sort","D","isNaN","BACK_TO_FRONT","sqrt","V","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/3d/webgl-engine/lib/Octree.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../core/maybe.js\";import t from\"../../../../core/ObjectPool.js\";import n from\"../../../../core/PooledArray.js\";import{g as o,a as s,d as i,c as r,h}from\"../../../../chunks/vec3.js\";import{c as a,f as d}from\"../../../../chunks/vec3f64.js\";import{intersectsSphere as l}from\"../../../../geometry/support/frustum.js\";import{wrap as u}from\"../../../../geometry/support/ray.js\";import{h as c,a as f,g as _,j as m,c as p}from\"../../../../chunks/sphere.js\";import{rayBoxTest as b}from\"./Util.js\";class g{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(e,t){this._objectToBoundingSphere=e,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new S,this._objectCount=0,t&&(void 0!==t.maximumObjectsPerNode&&(this._maximumObjectsPerNode=t.maximumObjectsPerNode),void 0!==t.maximumDepth&&(this._maximumDepth=t.maximumDepth))}destroy(){this._degenerateObjects.clear(),S.clearPool(),R[0]=null,w.prune(),K.prune()}add(e,t=e.length){this._objectCount+=t,this._grow(e,t);const n=S.acquire();for(let o=0;o<t;o++){const t=e[o];this._isDegenerate(t)?this._degenerateObjects.add(t):(n.init(this._root),this._add(t,n))}S.release(n)}remove(t,n=null){this._objectCount-=t.length;const o=S.acquire();for(const s of t){const t=e(n)?n:c(this._objectToBoundingSphere(s),C);M(t[3])?(o.init(this._root),this._remove(s,t,o)):this._degenerateObjects.delete(s)}S.release(o),this._shrink()}update(e,t){if(!M(t[3])&&this._isDegenerate(e))return;const n=v(e);this.remove(n,t),this.add(n)}forEachAlongRay(e,t,n){const o=u(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNode(o,e))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObject(o,e)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObject(o,e)&&n(e)})),!0}))}forEachAlongRayWithVerticalOffset(e,t,n,o){const s=u(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNodeWithOffset(s,e,o))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObjectWithOffset(s,e,o)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObjectWithOffset(s,e,o)&&n(e)})),!0}))}forEach(e){this._forEachNode(this._root,(t=>{const n=t.node;return n.terminals.forAll(e),null!==n.residents&&n.residents.forAll(e),!0})),this._degenerateObjects.forEach(e)}forEachDegenerateObject(e){this._degenerateObjects.forEach(e)}findClosest(e,t,n,i=(()=>!0),r=1/0){let h=1/0,a=1/0,d=null;const u=z(e,t),c=o=>{if(--r,!i(o))return;const s=this._objectToBoundingSphere(o);if(!l(n,s))return;const u=E(e,t,_(s)),c=u-s[3],f=u+s[3];c<h&&(h=c,a=f,d=o)};return this._forEachNodeDepthOrdered(this._root,(i=>{if(r<=0||!l(n,i.bounds))return!1;o(y,u,i.halfSize),s(y,y,i.bounds);if(E(e,t,y)>a)return!1;const h=i.node;return h.terminals.forAll((e=>c(e))),null!==h.residents&&h.residents.forAll((e=>c(e))),!0}),e,t),d}forEachInDepthRange(e,t,n,i,r,h,a){let d=-1/0,u=1/0;const c={setRange:e=>{n===g.DepthOrder.FRONT_TO_BACK?(d=Math.max(d,e.near),u=Math.min(u,e.far)):(d=Math.max(d,-e.far),u=Math.min(u,-e.near))}};c.setRange(i);const f=E(t,n,e),m=z(t,n),p=z(t,-n),b=e=>{if(!a(e))return;const o=this._objectToBoundingSphere(e),s=_(o),i=E(t,n,s)-f,m=i-o[3],p=i+o[3];m>u||p<d||!l(h,o)||r(e,c)};this._forEachNodeDepthOrdered(this._root,(e=>{if(!l(h,e.bounds))return!1;o(y,m,e.halfSize),s(y,y,e.bounds);if(E(t,n,y)-f>u)return!1;o(y,p,e.halfSize),s(y,y,e.bounds);if(E(t,n,y)-f<d)return!1;const i=e.node;return i.terminals.forAll((e=>b(e))),null!==i.residents&&i.residents.forAll((e=>b(e))),!0}),t,n)}forEachNode(e){this._forEachNode(this._root,(t=>e(t.node,t.bounds,t.halfSize)))}forEachNeighbor(e,t){const n=f(t),o=_(t),s=t=>{const s=this._objectToBoundingSphere(t),r=f(s),h=n+r;return!(i(_(s),o)-h*h<=0)||e(t)};let r=!0;const h=e=>{r&&(r=s(e))};this._forEachNode(this._root,(e=>{const t=f(e.bounds),s=n+t;if(i(_(e.bounds),o)-s*s>0)return!1;const a=e.node;return a.terminals.forAll(h),r&&null!==a.residents&&a.residents.forAll(h),r})),r&&this.forEachDegenerateObject(h)}_intersectsNode(e,t){return x(t.bounds,2*-t.halfSize,k),x(t.bounds,2*t.halfSize,q),b(e.origin,e.direction,k,q)}_intersectsNodeWithOffset(e,t,n){return x(t.bounds,2*-t.halfSize,k),x(t.bounds,2*t.halfSize,q),n.applyToMinMax(k,q),b(e.origin,e.direction,k,q)}_intersectsObject(e,t){const n=this._objectToBoundingSphere(t);return!(n[3]>0)||m(n,e)}_intersectsObjectWithOffset(e,t,n){const o=this._objectToBoundingSphere(t);return!(o[3]>0)||m(n.applyToBoundingSphere(o),e)}_forEachNode(e,t){let n=S.acquire().init(e);const o=[n];for(;0!==o.length;){if(n=o.pop(),t(n)&&!n.isLeaf())for(let e=0;e<n.node.children.length;e++){n.node.children[e]&&o.push(S.acquire().init(n).advance(e))}S.release(n)}}_forEachNodeDepthOrdered(e,t,n,o=g.DepthOrder.FRONT_TO_BACK){let s=S.acquire().init(e);const i=[s];for(T(n,o,W);0!==i.length;){if(s=i.pop(),t(s)&&!s.isLeaf())for(let e=7;e>=0;--e){const t=W[e];s.node.children[t]&&i.push(S.acquire().init(s).advance(t))}S.release(s)}}_remove(e,t,n){w.clear();const o=n.advanceTo(t,((e,t)=>{w.push(e.node),w.push(t)}))?n.node.terminals:n.node.residents;if(o.removeUnordered(e),0===o.length)for(let s=w.length-2;s>=0;s-=2){const e=w.data[s],t=w.data[s+1];if(!this._purge(e,t))break}}_nodeIsEmpty(e){if(0!==e.terminals.length)return!1;if(null!==e.residents)return 0===e.residents.length;for(let t=0;t<e.children.length;t++)if(e.children[t])return!1;return!0}_purge(e,t){return t>=0&&(e.children[t]=null),!!this._nodeIsEmpty(e)&&(null===e.residents&&(e.residents=new n({shrink:!0})),!0)}_add(e,t){t.advanceTo(this._objectToBoundingSphere(e))?t.node.terminals.push(e):(t.node.residents.push(e),t.node.residents.length>this._maximumObjectsPerNode&&t.depth<this._maximumDepth&&this._split(t))}_split(e){const t=e.node.residents;e.node.residents=null;for(let n=0;n<t.length;n++){const o=S.acquire().init(e);this._add(t.getItemAt(n),o),S.release(o)}}_grow(e,t){if(0!==t&&(N(e,t,(e=>this._objectToBoundingSphere(e)),I),M(I[3])&&!this._fitsInsideTree(I)))if(this._nodeIsEmpty(this._root.node))c(I,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const e=this._rootBoundsForRootAsSubNode(I);this._placingRootViolatesMaxDepth(e)?this._rebuildTree(I,e):this._growRootAsSubNode(e),S.release(e)}}_rebuildTree(e,t){r(P,t.bounds),P[3]=t.halfSize,N([e,P],2,(e=>e),L);const n=S.acquire().init(this._root);this._root.initFrom(null,L,L[3]),this._root.increaseHalfSize(1.25),this._forEachNode(n,(e=>(this.add(e.node.terminals.data,e.node.terminals.length),null!==e.node.residents&&this.add(e.node.residents.data,e.node.residents.length),!0))),S.release(n)}_placingRootViolatesMaxDepth(e){const t=Math.log(e.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return this._forEachNode(this._root,(e=>(n=Math.max(n,e.depth),n+t<=this._maximumDepth))),n+t>this._maximumDepth}_rootBoundsForRootAsSubNode(e){const t=e[3],n=e;let o=-1/0;const s=this._root.bounds,i=this._root.halfSize;for(let h=0;h<3;h++){const e=s[h]-i-(n[h]-t),r=n[h]+t-(s[h]+i),a=Math.max(0,Math.ceil(e/(2*i))),d=Math.max(0,Math.ceil(r/(2*i)))+1,l=2**Math.ceil(Math.log(a+d)*Math.LOG2E);o=Math.max(o,l),H[h].min=a,H[h].max=d}for(let h=0;h<3;h++){let e=H[h].min,t=H[h].max;const n=(o-(e+t))/2;e+=Math.ceil(n),t+=Math.floor(n);const r=s[h]-i-e*i*2;F[h]=r+(t+e)*i}const r=o*i;return F[3]=r*B,S.acquire().initFrom(null,F,r,0)}_growRootAsSubNode(e){const t=this._root.node;r(I,this._root.bounds),I[3]=this._root.halfSize,this._root.init(e),e.advanceTo(I,null,!0),e.node.children=t.children,e.node.residents=t.residents,e.node.terminals=t.terminals}_shrink(){for(;;){const e=this._findShrinkIndex();if(-1===e)break;this._root.advance(e),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let e=null;const t=this._root.node.children;let n=0,o=0;for(;o<t.length&&null==e;)n=o++,e=t[n];for(;o<t.length;)if(t[o++])return-1;return n}_isDegenerate(e){return!M(this._objectToBoundingSphere(e)[3])}_fitsInsideTree(e){const t=this._root.bounds,n=this._root.halfSize;return e[3]<=n&&e[0]>=t[0]-n&&e[0]<=t[0]+n&&e[1]>=t[1]-n&&e[1]<=t[1]+n&&e[2]>=t[2]-n&&e[2]<=t[2]+n}}class S{constructor(){this.bounds=p(),this.halfSize=0,this.initFrom(null,null,0,0)}init(e){return this.initFrom(e.node,e.bounds,e.halfSize,e.depth)}initFrom(t,n,o,s=this.depth){return this.node=e(t)?t:S.createEmptyNode(),e(n)&&c(n,this.bounds),this.halfSize=o,this.depth=s,this}increaseHalfSize(e){this.halfSize*=e,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*B}advance(e){let t=this.node.children[e];t||(t=S.createEmptyNode(),this.node.children[e]=t),this.node=t,this.halfSize/=2,this.depth++;const n=A[e];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(e,t,n=!1){for(;;){if(this.isTerminalFor(e))return t&&t(this,-1),!0;if(this.isLeaf()){if(!n)return t&&t(this,-1),!1;this.node.residents=null}const o=this._childIndex(e);t&&t(this,o),this.advance(o)}}isLeaf(){return null!=this.node.residents}isTerminalFor(e){return e[3]>this.halfSize/2}_childIndex(e){const t=this.bounds;return(t[0]<e[0]?1:0)+(t[1]<e[1]?2:0)+(t[2]<e[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new n({shrink:!0}),residents:new n({shrink:!0})}}static acquire(){return S._pool.acquire()}static release(e){S._pool.release(e)}static clearPool(){S._pool.prune()}}function O(e,t){e[0]=Math.min(e[0],t[0]-t[3]),e[1]=Math.min(e[1],t[1]-t[3]),e[2]=Math.min(e[2],t[2]-t[3])}function j(e,t){e[0]=Math.max(e[0],t[0]+t[3]),e[1]=Math.max(e[1],t[1]+t[3]),e[2]=Math.max(e[2],t[2]+t[3])}function x(e,t,n){n[0]=e[0]+t,n[1]=e[1]+t,n[2]=e[2]+t}function N(e,t,n,o){if(1===t){const t=n(e[0]);c(t,o)}else{k[0]=1/0,k[1]=1/0,k[2]=1/0,q[0]=-1/0,q[1]=-1/0,q[2]=-1/0;for(let o=0;o<t;o++){const t=n(e[o]);M(t[3])&&(O(k,t),j(q,t))}h(o,k,q,.5),o[3]=Math.max(q[0]-k[0],q[1]-k[1],q[2]-k[2])/2}}function T(e,t,n){if(!K.length)for(let o=0;o<8;++o)K.push({index:0,distance:0});for(let o=0;o<8;++o){const n=A[o];K.data[o].index=o,K.data[o].distance=E(e,t,n)}K.sort(((e,t)=>e.distance-t.distance));for(let o=0;o<8;++o)n[o]=K.data[o].index}function z(e,t){let n,o=1/0;for(let s=0;s<8;++s){const i=E(e,t,D[s]);i<o&&(o=i,n=D[s])}return n}function E(e,t,n){return t*(e[0]*n[0]+e[1]*n[1]+e[2]*n[2])}function M(e){return!isNaN(e)&&e!==-1/0&&e!==1/0&&e>0}S._pool=new t(S),function(e){var t;(t=e.DepthOrder||(e.DepthOrder={}))[t.FRONT_TO_BACK=1]=\"FRONT_TO_BACK\",t[t.BACK_TO_FRONT=-1]=\"BACK_TO_FRONT\"}(g||(g={}));const A=[d(-1,-1,-1),d(1,-1,-1),d(-1,1,-1),d(1,1,-1),d(-1,-1,1),d(1,-1,1),d(-1,1,1),d(1,1,1)],D=[d(-1,-1,-1),d(-1,-1,1),d(-1,1,-1),d(-1,1,1),d(1,-1,-1),d(1,-1,1),d(1,1,-1),d(1,1,1)],B=Math.sqrt(3),R=[null];function v(e){return R[0]=e,R}const F=p(),y=a(),k=a(),q=a(),w=new n,C=p(),I=p(),P=p(),L=p(),H=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],K=new n,W=[0,0,0,0,0,0,0,0],V=g;export{V as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}