{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from \"../request.js\";\nimport r from \"../core/Error.js\";\nimport t from \"../core/Logger.js\";\nimport { isSome as o } from \"../core/maybe.js\";\nimport { getDeepValue as s } from \"../core/object.js\";\nimport { removeTrailingSlash as a } from \"../core/urlUtils.js\";\nimport { asValidOptions as n, parseUrl as i } from \"./utils.js\";\nimport l from \"./support/NetworkServiceDescription.js\";\nconst f = t.getLogger(\"esri.rest.networkService\");\nfunction u(e, r, t, o) {\n  o[t] = [r.length, r.length + e.length], e.forEach(e => {\n    r.push(e.geometry);\n  });\n}\nfunction c(e, r) {\n  for (let t = 0; t < r.length; t++) {\n    const o = e[r[t]];\n    if (o && o.length) for (const e of o) e.z = void 0;\n  }\n  f.warnOnce(\"The remote Network Analysis service is powered by a network dataset which is not Z-aware.\\nZ-coordinates of the input geometry are ignored.\");\n}\nfunction d(e, r) {\n  for (let t = 0; t < r.length; t++) {\n    const s = e[r[t]];\n    if (s && s.length) for (const e of s) if (o(e) && e.hasZ) return !0;\n  }\n  return !1;\n}\nasync function p(t, o, s) {\n  if (!t) throw new r(\"network-service:missing-url\", \"Url to Network service is missing\");\n  const a = n({\n      f: \"json\",\n      token: o\n    }, s),\n    {\n      data: i\n    } = await e(t, a),\n    f = i.currentVersion >= 10.4 ? m(t, o, s) : v(t, s),\n    {\n      defaultTravelMode: u,\n      supportedTravelModes: c\n    } = await f;\n  return i.defaultTravelMode = u, i.supportedTravelModes = c, l.fromJSON(i);\n}\nasync function v(r, t) {\n  const o = n({\n      f: \"json\"\n    }, t),\n    {\n      data: l\n    } = await e(r.replace(/\\/rest\\/.*$/i, \"/info\"), o);\n  if (!l || !l.owningSystemUrl) return {\n    supportedTravelModes: [],\n    defaultTravelMode: null\n  };\n  const {\n      owningSystemUrl: f\n    } = l,\n    u = a(f) + \"/sharing/rest/portals/self\",\n    {\n      data: c\n    } = await e(u, o),\n    d = s(\"helperServices.routingUtilities.url\", c);\n  if (!d) return {\n    supportedTravelModes: [],\n    defaultTravelMode: null\n  };\n  const p = i(f),\n    v = /\\/solve$/i.test(p.path) ? \"Route\" : /\\/solveclosestfacility$/i.test(p.path) ? \"ClosestFacility\" : \"ServiceAreas\",\n    m = n({\n      f: \"json\",\n      serviceName: v\n    }, t),\n    h = a(d) + \"/GetTravelModes/execute\",\n    g = await e(h, m),\n    w = [];\n  let T = null;\n  if (g?.data?.results?.length) {\n    const e = g.data.results;\n    for (const r of e) if (\"supportedTravelModes\" === r.paramName) {\n      if (r.value?.features) for (const {\n        attributes: e\n      } of r.value.features) if (e) {\n        const r = JSON.parse(e.TravelMode);\n        w.push(r);\n      }\n    } else \"defaultTravelMode\" === r.paramName && (T = r.value);\n  }\n  return {\n    supportedTravelModes: w,\n    defaultTravelMode: T\n  };\n}\nasync function m(t, o, s) {\n  try {\n    const r = n({\n        f: \"json\",\n        token: o\n      }, s),\n      i = a(t) + \"/retrieveTravelModes\",\n      {\n        data: {\n          supportedTravelModes: l,\n          defaultTravelMode: f\n        }\n      } = await e(i, r);\n    return {\n      supportedTravelModes: l,\n      defaultTravelMode: f\n    };\n  } catch (i) {\n    throw new r(\"network-service:retrieveTravelModes\", \"Could not get to the NAServer's retrieveTravelModes.\", {\n      error: i\n    });\n  }\n}\nexport { u as collectGeometries, c as dropZValuesOffInputGeometry, p as fetchServiceDescription, d as isInputGeometryZAware };","map":{"version":3,"names":["e","r","t","isSome","o","getDeepValue","s","removeTrailingSlash","a","asValidOptions","n","parseUrl","i","l","f","getLogger","u","length","forEach","push","geometry","c","z","warnOnce","d","hasZ","p","token","data","currentVersion","m","v","defaultTravelMode","supportedTravelModes","fromJSON","replace","owningSystemUrl","test","path","serviceName","h","g","w","T","results","paramName","value","features","attributes","JSON","parse","TravelMode","error","collectGeometries","dropZValuesOffInputGeometry","fetchServiceDescription","isInputGeometryZAware"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/rest/networkService.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport e from\"../request.js\";import r from\"../core/Error.js\";import t from\"../core/Logger.js\";import{isSome as o}from\"../core/maybe.js\";import{getDeepValue as s}from\"../core/object.js\";import{removeTrailingSlash as a}from\"../core/urlUtils.js\";import{asValidOptions as n,parseUrl as i}from\"./utils.js\";import l from\"./support/NetworkServiceDescription.js\";const f=t.getLogger(\"esri.rest.networkService\");function u(e,r,t,o){o[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))}function c(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)e.z=void 0}f.warnOnce(\"The remote Network Analysis service is powered by a network dataset which is not Z-aware.\\nZ-coordinates of the input geometry are ignored.\")}function d(e,r){for(let t=0;t<r.length;t++){const s=e[r[t]];if(s&&s.length)for(const e of s)if(o(e)&&e.hasZ)return!0}return!1}async function p(t,o,s){if(!t)throw new r(\"network-service:missing-url\",\"Url to Network service is missing\");const a=n({f:\"json\",token:o},s),{data:i}=await e(t,a),f=i.currentVersion>=10.4?m(t,o,s):v(t,s),{defaultTravelMode:u,supportedTravelModes:c}=await f;return i.defaultTravelMode=u,i.supportedTravelModes=c,l.fromJSON(i)}async function v(r,t){const o=n({f:\"json\"},t),{data:l}=await e(r.replace(/\\/rest\\/.*$/i,\"/info\"),o);if(!l||!l.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:f}=l,u=a(f)+\"/sharing/rest/portals/self\",{data:c}=await e(u,o),d=s(\"helperServices.routingUtilities.url\",c);if(!d)return{supportedTravelModes:[],defaultTravelMode:null};const p=i(f),v=/\\/solve$/i.test(p.path)?\"Route\":/\\/solveclosestfacility$/i.test(p.path)?\"ClosestFacility\":\"ServiceAreas\",m=n({f:\"json\",serviceName:v},t),h=a(d)+\"/GetTravelModes/execute\",g=await e(h,m),w=[];let T=null;if(g?.data?.results?.length){const e=g.data.results;for(const r of e)if(\"supportedTravelModes\"===r.paramName){if(r.value?.features)for(const{attributes:e}of r.value.features)if(e){const r=JSON.parse(e.TravelMode);w.push(r)}}else\"defaultTravelMode\"===r.paramName&&(T=r.value)}return{supportedTravelModes:w,defaultTravelMode:T}}async function m(t,o,s){try{const r=n({f:\"json\",token:o},s),i=a(t)+\"/retrieveTravelModes\",{data:{supportedTravelModes:l,defaultTravelMode:f}}=await e(i,r);return{supportedTravelModes:l,defaultTravelMode:f}}catch(i){throw new r(\"network-service:retrieveTravelModes\",\"Could not get to the NAServer's retrieveTravelModes.\",{error:i})}}export{u as collectGeometries,c as dropZValuesOffInputGeometry,p as fetchServiceDescription,d as isInputGeometryZAware};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}