{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isNone as t, isSome as n, unwrap as e, assertIsSome as i } from \"../../../core/maybe.js\";\nimport s from \"../PixelBlock.js\";\nimport { getPixelValueRange as o } from \"../rasterFormats/pixelRangeUtils.js\";\nimport { stretchTypeFunctionEnum as r } from \"../../../renderers/support/stretchRendererUtils.js\";\nconst a = 1,\n  l = [.299, .587, .114];\nfunction f(t) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 256;\n  n = Math.min(n, 256);\n  const {\n      size: e,\n      counts: i\n    } = t,\n    s = new Uint8Array(e),\n    o = i.reduce((t, e) => t + e / n, 0);\n  let r = 0,\n    a = 0,\n    l = 0,\n    f = o;\n  for (let u = 0; u < e; u++) if (l += i[u], !(u < e - 1 && l + i[u + 1] < f)) {\n    for (; r < n - 1 && f < l;) r++, f += o;\n    for (let t = a; t <= u; t++) s[t] = r;\n    a = u + 1;\n  }\n  for (let u = a; u < e; u++) s[u] = n - 1;\n  return s;\n}\nfunction u(t) {\n  const {\n      minCutOff: n,\n      maxCutOff: e,\n      gamma: i,\n      pixelType: s,\n      rounding: o\n    } = t,\n    r = t.outMin || 0,\n    a = t.outMax || 255;\n  if (![\"u8\", \"u16\", \"s8\", \"s16\"].includes(s)) return null;\n  const l = n.length;\n  let f,\n    u,\n    c = 0;\n  \"s8\" === s ? c = -127 : \"s16\" === s && (c = -32767);\n  let h = 256;\n  [\"u16\", \"s16\"].includes(s) && (h = 65536);\n  const p = [],\n    g = [],\n    x = a - r;\n  for (f = 0; f < l; f++) g[f] = e[f] - n[f], p[f] = 0 === g[f] ? 0 : x / g[f];\n  let d;\n  const y = [];\n  let C, O, b;\n  if (i && i.length >= l) {\n    const t = M(l, i);\n    for (f = 0; f < l; f++) {\n      for (b = [], u = 0; u < h; u++) if (0 !== g[f]) {\n        if (C = u + c, d = (C - n[f]) / g[f], O = 1, i[f] > 1 && (O -= (1 / x) ** (d * t[f])), C < e[f] && C > n[f]) {\n          const t = O * x * d ** (1 / i[f]) + r;\n          b[u] = \"floor\" === o ? Math.floor(t) : \"round\" === o ? Math.round(t) : t;\n        } else C >= e[f] ? b[u] = a : b[u] = r;\n      } else b[u] = r;\n      y[f] = b;\n    }\n  } else for (f = 0; f < l; f++) {\n    for (b = [], u = 0; u < h; u++) if (C = u + c, C <= n[f]) b[u] = r;else if (C >= e[f]) b[u] = a;else {\n      const t = (C - n[f]) * p[f] + r;\n      b[u] = \"floor\" === o ? Math.floor(t) : \"round\" === o ? Math.round(t) : t;\n    }\n    y[f] = b;\n  }\n  if (null != t.contrastOffset) {\n    const n = m(t.contrastOffset, t.brightnessOffset);\n    for (f = 0; f < l; f++) for (b = y[f], u = 0; u < h; u++) b[u] = n[b[u]];\n  }\n  return {\n    lut: y,\n    offset: c\n  };\n}\nfunction m(t, n) {\n  const e = Math.min(Math.max(t, -100), 100),\n    i = Math.min(Math.max(n ?? 0, -100), 100),\n    s = 255,\n    o = 128;\n  let r = 0,\n    a = 0;\n  const l = new Uint8Array(256);\n  for (r = 0; r < 256; r++) e > 0 && e < 100 ? a = (200 * r - 100 * s + 2 * s * i) / (2 * (100 - e)) + o : e <= 0 && e > -100 ? a = (200 * r - 100 * s + 2 * s * i) * (100 + e) / 2e4 + o : 100 === e ? (a = 200 * r - 100 * s + (s + 1) * (100 - e) + 2 * s * i, a = a > 0 ? s : 0) : -100 === e && (a = o), l[r] = a > s ? s : a < 0 ? 0 : a;\n  return l;\n}\nfunction c(t, n, e) {\n  const i = [];\n  for (let s = 0; s < n.length; s++) {\n    let o = 0,\n      r = 0,\n      a = 0;\n    \"min\" in n[s] ? ({\n      min: o,\n      max: r,\n      avg: a\n    } = n[s]) : [o, r, a] = n[s];\n    let f = a ?? 0;\n    \"u8\" !== t && (f = 255 * (f - o) / (r - o)), e && (f *= l[s]), i.push(h(f));\n  }\n  return i;\n}\nfunction h(t) {\n  if (t <= 0 || t >= 255) return a;\n  let n = 0;\n  150 !== t && (n = t <= 150 ? 45 * Math.cos(.01047 * t) : 17 * Math.sin(.021 * t));\n  const e = 255,\n    i = t + n,\n    s = Math.log(t / e),\n    o = Math.log(i / e);\n  if (0 === o) return a;\n  const r = s / o;\n  return isNaN(r) ? a : Math.min(9.9, Math.max(.01, r));\n}\nfunction p(n) {\n  if (t(n) || !n.pixels?.length) return null;\n  const {\n      pixels: e,\n      mask: i,\n      pixelType: s\n    } = n,\n    o = n.width * n.height,\n    r = e.length;\n  let a, l, f, u, m;\n  const c = [],\n    h = [];\n  let p, g, x, d, M, y, C, O, b, v;\n  const k = 256;\n  for (u = 0; u < r; u++) {\n    if (p = new Uint32Array(k), x = e[u], \"u8\" === s) {\n      if (a = -.5, l = 255.5, i) for (m = 0; m < o; m++) i[m] && p[x[m]]++;else for (m = 0; m < o; m++) p[x[m]]++;\n    } else {\n      let t = !1;\n      n.statistics || (n.updateStatistics(), t = !0);\n      const e = n.statistics;\n      if (a = e[u].minValue, l = e[u].maxValue, f = (l - a) / k, 0 === f) {\n        !e || n.validPixelCount || t || n.updateStatistics();\n        const i = (n.validPixelCount || n.width * n.height) / k;\n        for (let t = 0; t < k; t++) p[t] = Math.round(i * (t + 1)) - Math.round(i * t);\n      } else {\n        for (g = new Uint32Array(k + 1), m = 0; m < o; m++) i && !i[m] || g[Math.floor((x[m] - a) / f)]++;\n        for (m = 0; m < k - 1; m++) p[m] = g[m];\n        p[k - 1] = g[k - 1] + g[k];\n      }\n    }\n    for (c.push({\n      min: a,\n      max: l,\n      size: k,\n      counts: p\n    }), d = 0, M = 0, O = 0, m = 0; m < k; m++) d += p[m], M += m * p[m];\n    for (b = M / d, m = 0; m < k; m++) O += p[m] * (m - b) ** 2;\n    v = Math.sqrt(O / (d - 1)), f = (l - a) / k, y = (b + .5) * f + a, C = v * f, h.push({\n      min: a,\n      max: l,\n      avg: y,\n      stddev: C\n    });\n  }\n  return {\n    statistics: h,\n    histograms: c\n  };\n}\nfunction g(t) {\n  const n = [];\n  for (let e = 0; e < t.length; e++) {\n    const {\n      min: i,\n      max: s,\n      size: o,\n      counts: r\n    } = t[e];\n    let a = 0,\n      l = 0;\n    for (let t = 0; t < o; t++) a += r[t], l += t * r[t];\n    const f = l / a;\n    let u = 0;\n    for (let t = 0; t < o; t++) u += r[t] * (t - f) ** 2;\n    const m = (s - i) / o,\n      c = (f + .5) * m + i,\n      h = Math.sqrt(u / (a - 1)) * m;\n    n.push({\n      min: i,\n      max: s,\n      avg: c,\n      stddev: h\n    });\n  }\n  return n;\n}\nfunction x(t, s) {\n  const {\n    pixelBlock: a,\n    bandIds: l,\n    returnHistogramLut: u,\n    rasterInfo: m\n  } = s;\n  let c = null,\n    h = null,\n    g = t.stretchType;\n  if (\"number\" == typeof g && (g = r[g]), t.dra) {\n    if (\"minMax\" === g && n(a) && a.statistics) c = a.statistics.map(t => [t.minValue, t.maxValue, 0, 0]);else {\n      const t = p(a);\n      c = n(t) ? t.statistics : null, h = n(t) ? t.histograms : null;\n    }\n  } else c = t.statistics?.length > 0 ? t.statistics : e(m.statistics), h = t.histograms || e(m.histograms);\n  \"percentClip\" !== g && \"histogramEqualization\" !== g || h?.length || (g = \"minMax\");\n  const x = c?.length || h?.length || m.bandCount,\n    M = [],\n    y = [];\n  let C, O, b, v, k, w, z, A, U;\n  c && !Array.isArray(c[0]) && (c = c.map(t => [t.min, t.max, t.avg, t.stddev]));\n  const [P, T] = o(m.pixelType);\n  if (!c?.length) {\n    for (c = [], A = 0; A < x; A++) c.push([P, T, 1, 1]);\n    \"standardDeviation\" === g && (g = \"minMax\");\n  }\n  switch (g) {\n    case \"none\":\n      for (A = 0; A < x; A++) M[A] = P, y[A] = T;\n      break;\n    case \"minMax\":\n      for (A = 0; A < x; A++) M[A] = c[A][0], y[A] = c[A][1];\n      break;\n    case \"standardDeviation\":\n      for (A = 0; A < x; A++) M[A] = c[A][2] - t.numberOfStandardDeviations * c[A][3], y[A] = c[A][2] + t.numberOfStandardDeviations * c[A][3], M[A] < c[A][0] && (M[A] = c[A][0]), y[A] > c[A][1] && (y[A] = c[A][1]);\n      break;\n    case \"histogramEqualization\":\n      for (i(h), A = 0; A < x; A++) M[A] = h[A].min, y[A] = h[A].max;\n      break;\n    case \"percentClip\":\n      for (i(h), A = 0; A < h.length; A++) {\n        for (C = h[A], k = new Uint32Array(C.size), v = [...C.counts], v.length >= 20 && (v[0] = v[1] = v[2] = v[v.length - 1] = v[v.length - 2] = 0), b = 0, O = (C.max - C.min) / C.size, z = -.5 === C.min && 1 === O ? .5 : 0, U = 0; U < C.size; U++) b += v[U], k[U] = b;\n        for (w = (t.minPercent || 0) * b / 100, M[A] = C.min + z, U = 0; U < C.size; U++) if (k[U] > w) {\n          M[A] = C.min + O * (U + z);\n          break;\n        }\n        for (w = (1 - (t.maxPercent || 0) / 100) * b, y[A] = C.max + z, U = C.size - 2; U >= 0; U--) if (k[U] < w) {\n          y[A] = C.min + O * (U + 2 - z);\n          break;\n        }\n        if (y[A] < M[A]) {\n          const t = M[A];\n          M[A] = y[A], y[A] = t;\n        }\n      }\n      break;\n    default:\n      for (A = 0; A < x; A++) M[A] = c[A][0], y[A] = c[A][1];\n  }\n  let q, S, j;\n  \"histogramEqualization\" === g ? (i(h), S = h[0].size || 256, q = 0, u && (j = h.map(t => f(t)))) : (S = t.max || 255, q = t.min || 0);\n  return d({\n    minCutOff: M,\n    maxCutOff: y,\n    outMax: S,\n    outMin: q,\n    histogramLut: j\n  }, l);\n}\nfunction d(t, n) {\n  if (null == n || 0 === n.length) return t;\n  const e = Math.max.apply(null, n),\n    {\n      minCutOff: i,\n      maxCutOff: s,\n      outMin: o,\n      outMax: r,\n      histogramLut: a\n    } = t;\n  return i.length === n.length || i.length <= e ? t : {\n    minCutOff: n.map(t => i[t]),\n    maxCutOff: n.map(t => s[t]),\n    histogramLut: a ? n.map(t => a[t]) : null,\n    outMin: o,\n    outMax: r\n  };\n}\nfunction M(t, n) {\n  const e = new Float32Array(t);\n  for (let i = 0; i < t; i++) n[i] > 1 ? n[i] > 2 ? e[i] = 6.5 + (n[i] - 2) ** 2.5 : e[i] = 6.5 + 100 * (2 - n[i]) ** 4 : e[i] = 1;\n  return e;\n}\nfunction y(n, e) {\n  if (t(n) || !n.pixels?.length) return n;\n  const {\n      mask: i,\n      width: o,\n      height: r,\n      pixels: a\n    } = n,\n    {\n      minCutOff: l,\n      maxCutOff: f,\n      gamma: u\n    } = e,\n    m = e.outMin || 0,\n    c = e.outMax || 255,\n    h = o * r,\n    p = e.outputPixelType || \"u8\",\n    g = n.pixels.map(() => s.createEmptyBand(p, h)),\n    x = g.length;\n  let d, y, C, O, b;\n  const v = c - m,\n    k = [],\n    w = [];\n  for (d = 0; d < x; d++) w[d] = f[d] - l[d], k[d] = 0 === w[d] ? 0 : v / w[d];\n  const z = p.startsWith(\"u\") || p.startsWith(\"s\"),\n    A = u && u.length >= x,\n    U = !!e.isRenderer;\n  if (A) {\n    const t = M(x, u);\n    for (y = 0; y < h; y++) if (null == i || i[y]) for (d = 0; d < x; d++) if (0 !== w[d]) {\n      if (C = a[d][y], b = (C - l[d]) / w[d], O = 1, u[d] > 1 && (O -= (1 / v) ** (b * t[d])), C < f[d] && C > l[d]) {\n        const t = O * v * b ** (1 / u[d]) + m;\n        g[d][y] = U ? Math.floor(t) : z ? Math.round(t) : t;\n      } else C >= f[d] ? g[d][y] = c : g[d][y] = m;\n    } else g[d][y] = m;\n  } else for (y = 0; y < h; y++) if (null == i || i[y]) for (d = 0; d < x; d++) if (C = a[d][y], C < f[d] && C > l[d]) {\n    const t = (C - l[d]) * k[d] + m;\n    g[d][y] = U ? Math.floor(t) : z ? Math.round(t) : t;\n  } else C >= f[d] ? g[d][y] = c : g[d][y] = m;\n  const P = new s({\n    width: o,\n    height: r,\n    mask: i,\n    pixels: g,\n    pixelType: p\n  });\n  return P.updateStatistics(), P;\n}\nexport { M as computeGammaCorrection, c as computeGammaValues, m as createContrastBrightnessLUT, f as createHistogramEqualizationLUT, u as createStretchLUT, g as estimateStatisticsFromHistograms, p as estimateStatisticsHistograms, x as getStretchCutoff, y as stretch };","map":{"version":3,"names":["isNone","t","isSome","n","unwrap","e","assertIsSome","i","s","getPixelValueRange","o","stretchTypeFunctionEnum","r","a","l","f","arguments","length","undefined","Math","min","size","counts","Uint8Array","reduce","u","minCutOff","maxCutOff","gamma","pixelType","rounding","outMin","outMax","includes","c","h","p","g","x","d","y","C","O","b","M","floor","round","contrastOffset","m","brightnessOffset","lut","offset","max","avg","push","cos","sin","log","isNaN","pixels","mask","width","height","v","k","Uint32Array","statistics","updateStatistics","minValue","maxValue","validPixelCount","sqrt","stddev","histograms","pixelBlock","bandIds","returnHistogramLut","rasterInfo","stretchType","dra","map","bandCount","w","z","A","U","Array","isArray","P","T","numberOfStandardDeviations","minPercent","maxPercent","q","S","j","histogramLut","apply","Float32Array","outputPixelType","createEmptyBand","startsWith","isRenderer","computeGammaCorrection","computeGammaValues","createContrastBrightnessLUT","createHistogramEqualizationLUT","createStretchLUT","estimateStatisticsFromHistograms","estimateStatisticsHistograms","getStretchCutoff","stretch"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as n,unwrap as e,assertIsSome as i}from\"../../../core/maybe.js\";import s from\"../PixelBlock.js\";import{getPixelValueRange as o}from\"../rasterFormats/pixelRangeUtils.js\";import{stretchTypeFunctionEnum as r}from\"../../../renderers/support/stretchRendererUtils.js\";const a=1,l=[.299,.587,.114];function f(t,n=256){n=Math.min(n,256);const{size:e,counts:i}=t,s=new Uint8Array(e),o=i.reduce(((t,e)=>t+e/n),0);let r=0,a=0,l=0,f=o;for(let u=0;u<e;u++)if(l+=i[u],!(u<e-1&&l+i[u+1]<f)){for(;r<n-1&&f<l;)r++,f+=o;for(let t=a;t<=u;t++)s[t]=r;a=u+1}for(let u=a;u<e;u++)s[u]=n-1;return s}function u(t){const{minCutOff:n,maxCutOff:e,gamma:i,pixelType:s,rounding:o}=t,r=t.outMin||0,a=t.outMax||255;if(![\"u8\",\"u16\",\"s8\",\"s16\"].includes(s))return null;const l=n.length;let f,u,c=0;\"s8\"===s?c=-127:\"s16\"===s&&(c=-32767);let h=256;[\"u16\",\"s16\"].includes(s)&&(h=65536);const p=[],g=[],x=a-r;for(f=0;f<l;f++)g[f]=e[f]-n[f],p[f]=0===g[f]?0:x/g[f];let d;const y=[];let C,O,b;if(i&&i.length>=l){const t=M(l,i);for(f=0;f<l;f++){for(b=[],u=0;u<h;u++)if(0!==g[f])if(C=u+c,d=(C-n[f])/g[f],O=1,i[f]>1&&(O-=(1/x)**(d*t[f])),C<e[f]&&C>n[f]){const t=O*x*d**(1/i[f])+r;b[u]=\"floor\"===o?Math.floor(t):\"round\"===o?Math.round(t):t}else C>=e[f]?b[u]=a:b[u]=r;else b[u]=r;y[f]=b}}else for(f=0;f<l;f++){for(b=[],u=0;u<h;u++)if(C=u+c,C<=n[f])b[u]=r;else if(C>=e[f])b[u]=a;else{const t=(C-n[f])*p[f]+r;b[u]=\"floor\"===o?Math.floor(t):\"round\"===o?Math.round(t):t}y[f]=b}if(null!=t.contrastOffset){const n=m(t.contrastOffset,t.brightnessOffset);for(f=0;f<l;f++)for(b=y[f],u=0;u<h;u++)b[u]=n[b[u]]}return{lut:y,offset:c}}function m(t,n){const e=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(n??0,-100),100),s=255,o=128;let r=0,a=0;const l=new Uint8Array(256);for(r=0;r<256;r++)e>0&&e<100?a=(200*r-100*s+2*s*i)/(2*(100-e))+o:e<=0&&e>-100?a=(200*r-100*s+2*s*i)*(100+e)/2e4+o:100===e?(a=200*r-100*s+(s+1)*(100-e)+2*s*i,a=a>0?s:0):-100===e&&(a=o),l[r]=a>s?s:a<0?0:a;return l}function c(t,n,e){const i=[];for(let s=0;s<n.length;s++){let o=0,r=0,a=0;\"min\"in n[s]?({min:o,max:r,avg:a}=n[s]):[o,r,a]=n[s];let f=a??0;\"u8\"!==t&&(f=255*(f-o)/(r-o)),e&&(f*=l[s]),i.push(h(f))}return i}function h(t){if(t<=0||t>=255)return a;let n=0;150!==t&&(n=t<=150?45*Math.cos(.01047*t):17*Math.sin(.021*t));const e=255,i=t+n,s=Math.log(t/e),o=Math.log(i/e);if(0===o)return a;const r=s/o;return isNaN(r)?a:Math.min(9.9,Math.max(.01,r))}function p(n){if(t(n)||!n.pixels?.length)return null;const{pixels:e,mask:i,pixelType:s}=n,o=n.width*n.height,r=e.length;let a,l,f,u,m;const c=[],h=[];let p,g,x,d,M,y,C,O,b,v;const k=256;for(u=0;u<r;u++){if(p=new Uint32Array(k),x=e[u],\"u8\"===s)if(a=-.5,l=255.5,i)for(m=0;m<o;m++)i[m]&&p[x[m]]++;else for(m=0;m<o;m++)p[x[m]]++;else{let t=!1;n.statistics||(n.updateStatistics(),t=!0);const e=n.statistics;if(a=e[u].minValue,l=e[u].maxValue,f=(l-a)/k,0===f){!e||n.validPixelCount||t||n.updateStatistics();const i=(n.validPixelCount||n.width*n.height)/k;for(let t=0;t<k;t++)p[t]=Math.round(i*(t+1))-Math.round(i*t)}else{for(g=new Uint32Array(k+1),m=0;m<o;m++)i&&!i[m]||g[Math.floor((x[m]-a)/f)]++;for(m=0;m<k-1;m++)p[m]=g[m];p[k-1]=g[k-1]+g[k]}}for(c.push({min:a,max:l,size:k,counts:p}),d=0,M=0,O=0,m=0;m<k;m++)d+=p[m],M+=m*p[m];for(b=M/d,m=0;m<k;m++)O+=p[m]*(m-b)**2;v=Math.sqrt(O/(d-1)),f=(l-a)/k,y=(b+.5)*f+a,C=v*f,h.push({min:a,max:l,avg:y,stddev:C})}return{statistics:h,histograms:c}}function g(t){const n=[];for(let e=0;e<t.length;e++){const{min:i,max:s,size:o,counts:r}=t[e];let a=0,l=0;for(let t=0;t<o;t++)a+=r[t],l+=t*r[t];const f=l/a;let u=0;for(let t=0;t<o;t++)u+=r[t]*(t-f)**2;const m=(s-i)/o,c=(f+.5)*m+i,h=Math.sqrt(u/(a-1))*m;n.push({min:i,max:s,avg:c,stddev:h})}return n}function x(t,s){const{pixelBlock:a,bandIds:l,returnHistogramLut:u,rasterInfo:m}=s;let c=null,h=null,g=t.stretchType;if(\"number\"==typeof g&&(g=r[g]),t.dra)if(\"minMax\"===g&&n(a)&&a.statistics)c=a.statistics.map((t=>[t.minValue,t.maxValue,0,0]));else{const t=p(a);c=n(t)?t.statistics:null,h=n(t)?t.histograms:null}else c=t.statistics?.length>0?t.statistics:e(m.statistics),h=t.histograms||e(m.histograms);\"percentClip\"!==g&&\"histogramEqualization\"!==g||h?.length||(g=\"minMax\");const x=c?.length||h?.length||m.bandCount,M=[],y=[];let C,O,b,v,k,w,z,A,U;c&&!Array.isArray(c[0])&&(c=c.map((t=>[t.min,t.max,t.avg,t.stddev])));const[P,T]=o(m.pixelType);if(!c?.length){for(c=[],A=0;A<x;A++)c.push([P,T,1,1]);\"standardDeviation\"===g&&(g=\"minMax\")}switch(g){case\"none\":for(A=0;A<x;A++)M[A]=P,y[A]=T;break;case\"minMax\":for(A=0;A<x;A++)M[A]=c[A][0],y[A]=c[A][1];break;case\"standardDeviation\":for(A=0;A<x;A++)M[A]=c[A][2]-t.numberOfStandardDeviations*c[A][3],y[A]=c[A][2]+t.numberOfStandardDeviations*c[A][3],M[A]<c[A][0]&&(M[A]=c[A][0]),y[A]>c[A][1]&&(y[A]=c[A][1]);break;case\"histogramEqualization\":for(i(h),A=0;A<x;A++)M[A]=h[A].min,y[A]=h[A].max;break;case\"percentClip\":for(i(h),A=0;A<h.length;A++){for(C=h[A],k=new Uint32Array(C.size),v=[...C.counts],v.length>=20&&(v[0]=v[1]=v[2]=v[v.length-1]=v[v.length-2]=0),b=0,O=(C.max-C.min)/C.size,z=-.5===C.min&&1===O?.5:0,U=0;U<C.size;U++)b+=v[U],k[U]=b;for(w=(t.minPercent||0)*b/100,M[A]=C.min+z,U=0;U<C.size;U++)if(k[U]>w){M[A]=C.min+O*(U+z);break}for(w=(1-(t.maxPercent||0)/100)*b,y[A]=C.max+z,U=C.size-2;U>=0;U--)if(k[U]<w){y[A]=C.min+O*(U+2-z);break}if(y[A]<M[A]){const t=M[A];M[A]=y[A],y[A]=t}}break;default:for(A=0;A<x;A++)M[A]=c[A][0],y[A]=c[A][1]}let q,S,j;\"histogramEqualization\"===g?(i(h),S=h[0].size||256,q=0,u&&(j=h.map((t=>f(t))))):(S=t.max||255,q=t.min||0);return d({minCutOff:M,maxCutOff:y,outMax:S,outMin:q,histogramLut:j},l)}function d(t,n){if(null==n||0===n.length)return t;const e=Math.max.apply(null,n),{minCutOff:i,maxCutOff:s,outMin:o,outMax:r,histogramLut:a}=t;return i.length===n.length||i.length<=e?t:{minCutOff:n.map((t=>i[t])),maxCutOff:n.map((t=>s[t])),histogramLut:a?n.map((t=>a[t])):null,outMin:o,outMax:r}}function M(t,n){const e=new Float32Array(t);for(let i=0;i<t;i++)n[i]>1?n[i]>2?e[i]=6.5+(n[i]-2)**2.5:e[i]=6.5+100*(2-n[i])**4:e[i]=1;return e}function y(n,e){if(t(n)||!n.pixels?.length)return n;const{mask:i,width:o,height:r,pixels:a}=n,{minCutOff:l,maxCutOff:f,gamma:u}=e,m=e.outMin||0,c=e.outMax||255,h=o*r,p=e.outputPixelType||\"u8\",g=n.pixels.map((()=>s.createEmptyBand(p,h))),x=g.length;let d,y,C,O,b;const v=c-m,k=[],w=[];for(d=0;d<x;d++)w[d]=f[d]-l[d],k[d]=0===w[d]?0:v/w[d];const z=p.startsWith(\"u\")||p.startsWith(\"s\"),A=u&&u.length>=x,U=!!e.isRenderer;if(A){const t=M(x,u);for(y=0;y<h;y++)if(null==i||i[y])for(d=0;d<x;d++)if(0!==w[d])if(C=a[d][y],b=(C-l[d])/w[d],O=1,u[d]>1&&(O-=(1/v)**(b*t[d])),C<f[d]&&C>l[d]){const t=O*v*b**(1/u[d])+m;g[d][y]=U?Math.floor(t):z?Math.round(t):t}else C>=f[d]?g[d][y]=c:g[d][y]=m;else g[d][y]=m}else for(y=0;y<h;y++)if(null==i||i[y])for(d=0;d<x;d++)if(C=a[d][y],C<f[d]&&C>l[d]){const t=(C-l[d])*k[d]+m;g[d][y]=U?Math.floor(t):z?Math.round(t):t}else C>=f[d]?g[d][y]=c:g[d][y]=m;const P=new s({width:o,height:r,mask:i,pixels:g,pixelType:p});return P.updateStatistics(),P}export{M as computeGammaCorrection,c as computeGammaValues,m as createContrastBrightnessLUT,f as createHistogramEqualizationLUT,u as createStretchLUT,g as estimateStatisticsFromHistograms,p as estimateStatisticsHistograms,x as getStretchCutoff,y as stretch};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}