{"ast":null,"code":"/* Copyright 2017 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\n\nimport esriConfig from '@arcgis/core/config';\nimport OAuthInfo from '@arcgis/core/identity/OAuthInfo';\nimport IdentityManager from '@arcgis/core/identity/IdentityManager';\nimport { APP_ID, APP_PORTAL_URL } from '../constants/app-constants';\nimport { GET_IDENTITY, LOAD_PORTAL, SIGN_IN, SIGN_OUT } from '../constants/action-types';\nesriConfig.portalUrl = APP_PORTAL_URL;\nconst info = new OAuthInfo({\n  appId: APP_ID,\n  popup: false,\n  portalUrl: APP_PORTAL_URL\n});\nIdentityManager.registerOAuthInfos([info]);\n\n/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */\nconst arcgisMiddleWare = store => next => action => {\n  switch (action.type) {\n    case GET_IDENTITY:\n      {\n        next(action);\n        return IdentityManager.checkSignInStatus(`${info.portalUrl}/sharing`).then(result => {\n          //console.log(result)\n          store.dispatch({\n            type: LOAD_PORTAL\n          });\n        });\n      }\n    case SIGN_IN:\n      {\n        IdentityManager.getCredential(`${info.portalUrl}/sharing`);\n        return next(action);\n      }\n    case SIGN_OUT:\n      {\n        IdentityManager.destroyCredentials();\n        window.location.reload();\n        return next(action);\n      }\n    default:\n      {\n        return next(action);\n      }\n  }\n};\nexport default arcgisMiddleWare;","map":{"version":3,"names":["esriConfig","OAuthInfo","IdentityManager","APP_ID","APP_PORTAL_URL","GET_IDENTITY","LOAD_PORTAL","SIGN_IN","SIGN_OUT","portalUrl","info","appId","popup","registerOAuthInfos","arcgisMiddleWare","store","next","action","type","checkSignInStatus","then","result","dispatch","getCredential","destroyCredentials","window","location","reload"],"sources":["C:/code-challenge-react/frontend/src/middleware/arcgis-authentication.js"],"sourcesContent":["/* Copyright 2017 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n\r\nimport esriConfig from '@arcgis/core/config';\r\nimport OAuthInfo from '@arcgis/core/identity/OAuthInfo';\r\nimport IdentityManager from '@arcgis/core/identity/IdentityManager';\r\n\r\nimport { APP_ID, APP_PORTAL_URL } from '../constants/app-constants'\r\n\r\nimport {\r\n  GET_IDENTITY,\r\n  LOAD_PORTAL,\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n} from '../constants/action-types'\r\n\r\nesriConfig.portalUrl = APP_PORTAL_URL;\r\nconst info = new OAuthInfo({ appId: APP_ID, popup: false, portalUrl: APP_PORTAL_URL })\r\n\r\nIdentityManager.registerOAuthInfos([info])\r\n\r\n/**\r\n * Middleware function with the signature\r\n *\r\n * storeInstance =>\r\n * functionToCallWithAnActionThatWillSendItToTheNextMiddleware =>\r\n * actionThatDispatchWasCalledWith =>\r\n * valueToUseAsTheReturnValueOfTheDispatchCall\r\n *\r\n * Typically written as\r\n *\r\n * store => next => action => result\r\n */\r\nconst arcgisMiddleWare = store => next => (action) => {\r\n  switch (action.type) {\r\n    case GET_IDENTITY: {\r\n      next(action)\r\n      return IdentityManager.checkSignInStatus(`${info.portalUrl}/sharing`)\r\n        .then((result) => { //console.log(result)\r\n          store.dispatch({ type: LOAD_PORTAL })\r\n        })\r\n    }\r\n    case SIGN_IN: {\r\n      IdentityManager.getCredential(`${info.portalUrl}/sharing`)\r\n      return next(action)\r\n    }\r\n    case SIGN_OUT: {\r\n      IdentityManager.destroyCredentials()\r\n      window.location.reload()\r\n      return next(action)\r\n    }\r\n    default: {\r\n      return next(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default arcgisMiddleWare"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,eAAe,MAAM,uCAAuC;AAEnE,SAASC,MAAM,EAAEC,cAAc,QAAQ,4BAA4B;AAEnE,SACEC,YAAY,EACZC,WAAW,EACXC,OAAO,EACPC,QAAQ,QACH,2BAA2B;AAElCR,UAAU,CAACS,SAAS,GAAGL,cAAc;AACrC,MAAMM,IAAI,GAAG,IAAIT,SAAS,CAAC;EAAEU,KAAK,EAAER,MAAM;EAAES,KAAK,EAAE,KAAK;EAAEH,SAAS,EAAEL;AAAe,CAAC,CAAC;AAEtFF,eAAe,CAACW,kBAAkB,CAAC,CAACH,IAAI,CAAC,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAKC,MAAM,IAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKb,YAAY;MAAE;QACjBW,IAAI,CAACC,MAAM,CAAC;QACZ,OAAOf,eAAe,CAACiB,iBAAiB,CAAE,GAAET,IAAI,CAACD,SAAU,UAAS,CAAC,CAClEW,IAAI,CAAEC,MAAM,IAAK;UAAE;UAClBN,KAAK,CAACO,QAAQ,CAAC;YAAEJ,IAAI,EAAEZ;UAAY,CAAC,CAAC;QACvC,CAAC,CAAC;MACN;IACA,KAAKC,OAAO;MAAE;QACZL,eAAe,CAACqB,aAAa,CAAE,GAAEb,IAAI,CAACD,SAAU,UAAS,CAAC;QAC1D,OAAOO,IAAI,CAACC,MAAM,CAAC;MACrB;IACA,KAAKT,QAAQ;MAAE;QACbN,eAAe,CAACsB,kBAAkB,EAAE;QACpCC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QACxB,OAAOX,IAAI,CAACC,MAAM,CAAC;MACrB;IACA;MAAS;QACP,OAAOD,IAAI,CAACC,MAAM,CAAC;MACrB;EAAC;AAEL,CAAC;AAED,eAAeH,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}