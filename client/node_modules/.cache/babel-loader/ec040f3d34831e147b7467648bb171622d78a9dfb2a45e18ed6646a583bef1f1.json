{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { w as e } from \"./mat4.js\";\nimport { c as i } from \"./mat4f64.js\";\nimport { s as o } from \"./vec2.js\";\nimport { a as r } from \"./vec2f64.js\";\nimport { Laserline as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";\nimport { Float2PassUniform as t } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { FloatPassUniform as s } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as n } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4PassUniform as l } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as d } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { VertexAttribute as c } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nfunction v(i) {\n  const r = new d();\n  r.include(a, i);\n  const {\n    vertex: v,\n    fragment: w\n  } = r;\n  return v.uniforms.add([new l(\"modelView\", (i, o) => e(m, o.camera.viewMatrix, i.origin)), new l(\"proj\", (e, i) => i.camera.projectionMatrix), new s(\"glowWidth\", (e, i) => e.glowWidth * i.camera.pixelRatio), new t(\"pixelToNDC\", (e, i) => o(p, 2 / i.camera.fullViewport[2], 2 / i.camera.fullViewport[3]))]), r.attributes.add(c.START, \"vec3\"), r.attributes.add(c.END, \"vec3\"), r.attributes.add(c.UP, \"vec3\"), r.attributes.add(c.EXTRUDE, \"vec2\"), r.varyings.add(\"uv\", \"vec2\"), r.varyings.add(\"vViewStart\", \"vec3\"), r.varyings.add(\"vViewEnd\", \"vec3\"), r.varyings.add(\"vViewPlane\", \"vec4\"), v.code.add(n`void main() {\nvec3 pos = mix(start, end, extrude.x);\nvec4 viewPos = modelView * vec4(pos, 1);\nvec4 projPos = proj * viewPos;\nvec2 ndcPos = projPos.xy / projPos.w;\nvec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;\nvec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);\nvec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);\nvec2 lxy = abs(sign(projExtrudeDir) - ndcPos);\nndcPos += length(lxy) * projExtrudeDir;\nvec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));\nvec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;\nvViewStart = (modelView * vec4(start, 1)).xyz;\nvViewEnd = (modelView * vec4(end, 1)).xyz;\nvViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));\nfloat xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;\nndcPos.x += xPaddingPixels * pixelToNDC.x;\nuv = ndcPos * 0.5 + 0.5;\ngl_Position = vec4(ndcPos, 0, 1);\n}`), w.uniforms.add(new s(\"perScreenPixelRatio\", (e, i) => i.camera.perScreenPixelRatio)), w.code.add(n`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {\nvec3 origin = mix(start, end, 0.5);\nvec3 basis = end - origin;\nvec3 posAtOrigin = pos - origin;\nfloat x = dot(normalize(basis), posAtOrigin);\nfloat y = dot(plane.xyz, posAtOrigin);\nfloat dx = max(abs(x) - length(basis), 0.0);\nfloat dy = y;\nfloat dist = length(vec2(dx, dy));\nfloat width = fwidth(y);\nfloat maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;\nfloat pixelDist = dist / min(width, maxPixelDistance);\nreturn abs(pixelDist);\n}\nvoid main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nfloat distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);\nvec4 color = laserlineProfile(distance);\nfloat alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));\ngl_FragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);\n}`), r;\n}\nconst p = r(),\n  m = i(),\n  w = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    build: v\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { w as L, v as b };","map":{"version":3,"names":["w","e","c","i","s","o","a","r","Laserline","Float2PassUniform","t","FloatPassUniform","glsl","n","Matrix4PassUniform","l","ShaderBuilder","d","VertexAttribute","v","include","vertex","fragment","uniforms","add","m","camera","viewMatrix","origin","projectionMatrix","glowWidth","pixelRatio","p","fullViewport","attributes","START","END","UP","EXTRUDE","varyings","code","perScreenPixelRatio","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value","L","b"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/chunks/LaserlinePath.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{w as e}from\"./mat4.js\";import{c as i}from\"./mat4f64.js\";import{s as o}from\"./vec2.js\";import{a as r}from\"./vec2f64.js\";import{Laserline as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";import{Float2PassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{FloatPassUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as n}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as l}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as d}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{VertexAttribute as c}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function v(i){const r=new d;r.include(a,i);const{vertex:v,fragment:w}=r;return v.uniforms.add([new l(\"modelView\",((i,o)=>e(m,o.camera.viewMatrix,i.origin))),new l(\"proj\",((e,i)=>i.camera.projectionMatrix)),new s(\"glowWidth\",((e,i)=>e.glowWidth*i.camera.pixelRatio)),new t(\"pixelToNDC\",((e,i)=>o(p,2/i.camera.fullViewport[2],2/i.camera.fullViewport[3])))]),r.attributes.add(c.START,\"vec3\"),r.attributes.add(c.END,\"vec3\"),r.attributes.add(c.UP,\"vec3\"),r.attributes.add(c.EXTRUDE,\"vec2\"),r.varyings.add(\"uv\",\"vec2\"),r.varyings.add(\"vViewStart\",\"vec3\"),r.varyings.add(\"vViewEnd\",\"vec3\"),r.varyings.add(\"vViewPlane\",\"vec4\"),v.code.add(n`void main() {\nvec3 pos = mix(start, end, extrude.x);\nvec4 viewPos = modelView * vec4(pos, 1);\nvec4 projPos = proj * viewPos;\nvec2 ndcPos = projPos.xy / projPos.w;\nvec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;\nvec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);\nvec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);\nvec2 lxy = abs(sign(projExtrudeDir) - ndcPos);\nndcPos += length(lxy) * projExtrudeDir;\nvec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));\nvec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;\nvViewStart = (modelView * vec4(start, 1)).xyz;\nvViewEnd = (modelView * vec4(end, 1)).xyz;\nvViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));\nfloat xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;\nndcPos.x += xPaddingPixels * pixelToNDC.x;\nuv = ndcPos * 0.5 + 0.5;\ngl_Position = vec4(ndcPos, 0, 1);\n}`),w.uniforms.add(new s(\"perScreenPixelRatio\",((e,i)=>i.camera.perScreenPixelRatio))),w.code.add(n`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {\nvec3 origin = mix(start, end, 0.5);\nvec3 basis = end - origin;\nvec3 posAtOrigin = pos - origin;\nfloat x = dot(normalize(basis), posAtOrigin);\nfloat y = dot(plane.xyz, posAtOrigin);\nfloat dx = max(abs(x) - length(basis), 0.0);\nfloat dy = y;\nfloat dist = length(vec2(dx, dy));\nfloat width = fwidth(y);\nfloat maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;\nfloat pixelDist = dist / min(width, maxPixelDistance);\nreturn abs(pixelDist);\n}\nvoid main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nfloat distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);\nvec4 color = laserlineProfile(distance);\nfloat alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));\ngl_FragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);\n}`),r}const p=r(),m=i(),w=Object.freeze(Object.defineProperty({__proto__:null,build:v},Symbol.toStringTag,{value:\"Module\"}));export{w as L,v as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}