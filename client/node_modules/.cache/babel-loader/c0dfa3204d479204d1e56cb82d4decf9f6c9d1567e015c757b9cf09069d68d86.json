{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from \"../core/CircularArray.js\";\nimport { isSome as e, mapOr as s } from \"../core/maybe.js\";\nimport { decodeGeohashXY as i } from \"./geohashUtils.js\";\nimport n from \"../geometry/SpatialReference.js\";\nimport { convertFromPolygon as o, quantizeOptimizedGeometry as a, convertFromPoint as r } from \"../layers/graphics/featureConversionUtils.js\";\nimport l from \"../layers/graphics/OptimizedGeometry.js\";\nimport { project as h } from \"../layers/graphics/data/projectionSupport.js\";\nimport { FeatureSetReaderJSON as c } from \"../views/2d/layers/features/support/FeatureSetReaderJSON.js\";\nclass u {\n  constructor() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let s = arguments.length > 1 ? arguments[1] : undefined;\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8096;\n    this.onRelease = t => {}, this._nodes = 0, this._root = new d(this, 0, 0, 0), this._statisticFields = e, this._pool = i ? new t(8096) : null, this._serviceInfo = s;\n  }\n  destroy() {\n    this.clear();\n  }\n  _acquire(t, s, i) {\n    this._nodes++;\n    let n = null;\n    return e(this._pool) && (n = this._pool.dequeue()), e(n) ? n.realloc(t, s, i) : n = new d(this, t, s, i), n;\n  }\n  _release(t) {\n    this.onRelease(t), this._nodes--, e(this._pool) && this._pool.enqueue(t);\n  }\n  get count() {\n    return this._root.count;\n  }\n  get size() {\n    return this._nodes;\n  }\n  get poolSize() {\n    return s(this._pool, 0, t => t.size);\n  }\n  get depth() {\n    let t = 0;\n    return this.forEach(e => t = Math.max(t, e.depth)), t;\n  }\n  dropLevels(t) {\n    this.forEach(e => {\n      if (e.depth >= t) for (let t = 0; t < e.children.length; t++) {\n        const s = e.children[t];\n        s && this._release(s);\n      }\n    }), this.forEach(e => {\n      if (e.depth >= t) for (let t = 0; t < e.children.length; t++) e.children[t] = null;\n    });\n  }\n  clear() {\n    this.forEach(t => this._release(t)), this._root = new d(this, 0, 0, 0);\n  }\n  insert(t, e) {\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const i = c.fromOptimizedFeatures([t], this._serviceInfo).getCursor();\n    i.next();\n    const n = i.readGeometry();\n    if (!n) return;\n    const [o, a] = n.coords,\n      r = t.geohashX,\n      l = t.geohashY;\n    this.insertCursor(i, t.displayId, o, a, r, l, e, s);\n  }\n  insertCursor(t, e, s, i, n, o, a) {\n    let r = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n    let l = this._root,\n      h = 0,\n      c = 0,\n      u = 0;\n    for (; null !== l;) {\n      if (l.depth >= r && (l.count += 1, l.xTotal += s, l.yTotal += i, l.xGeohashTotal += n, l.yGeohashTotal += o, l.referenceId = e, this._updateStatisticsCursor(t, l, 1)), h >= a) return void l.add(e);\n      const d = Math.ceil((h + 1) / 2),\n        f = Math.floor((h + 1) / 2),\n        x = 1 - h % 2,\n        m = 30 - (3 * d + 2 * f),\n        g = 30 - (2 * d + 3 * f),\n        y = (n & 7 * x + 3 * (1 - x) << m) >> m,\n        p = (o & 3 * x + 7 * (1 - x) << g) >> g,\n        _ = y + p * (8 * x + 4 * (1 - x));\n      c = c << 3 * x + 2 * (1 - x) | y, u = u << 2 * x + 3 * (1 - x) | p, null == l.children[_] && (l.children[_] = this._acquire(c, u, h + 1)), h += 1, l = l.children[_];\n    }\n  }\n  remove(t, e) {\n    const s = c.fromOptimizedFeatures([t], this._serviceInfo).getCursor();\n    s.next();\n    const i = s.readGeometry();\n    if (!i) return;\n    const [n, o] = i.coords,\n      a = t.geohashX,\n      r = t.geohashY;\n    this.removeCursor(s, n, o, a, r, e);\n  }\n  removeCursor(t, e, s, i, n, o) {\n    let a = this._root,\n      r = 0;\n    for (; null !== a;) {\n      if (a.count -= 1, a.xTotal -= e, a.yTotal -= s, a.xGeohashTotal -= i, a.yGeohashTotal -= n, this._updateStatisticsCursor(t, a, -1), r >= o) return void a.remove(t.getDisplayId());\n      const l = Math.ceil((r + 1) / 2),\n        h = Math.floor((r + 1) / 2),\n        c = 1 - r % 2,\n        u = 30 - (3 * l + 2 * h),\n        d = 30 - (2 * l + 3 * h),\n        f = ((i & 7 * c + 3 * (1 - c) << u) >> u) + ((n & 3 * c + 7 * (1 - c) << d) >> d) * (8 * c + 4 * (1 - c)),\n        x = a.children[f];\n      1 === x?.count && (this._release(x), a.children[f] = null), r += 1, a = x;\n    }\n  }\n  forEach(t) {\n    let e = this._root;\n    for (; null !== e;) {\n      const s = this._linkChildren(e) || e.next;\n      t(e), e = s;\n    }\n  }\n  find(t, e, s) {\n    return this._root.find(t, e, s, 0, 0, 0);\n  }\n  findIf(t) {\n    let e = null;\n    return this.forEach(s => {\n      t(s) && (e = s);\n    }), e;\n  }\n  findAllIf(t) {\n    const e = [];\n    return this.forEach(s => {\n      t(s) && e.push(s);\n    }), e;\n  }\n  findSingleOccupancyNode(t, e, s, i, n) {\n    let o = this._root;\n    for (; null !== o;) {\n      const a = o.depth,\n        r = o.xNode,\n        l = o.yNode,\n        h = 1 - a % 2,\n        c = o.xGeohashTotal / o.count,\n        u = o.yGeohashTotal / o.count;\n      if (1 === o.count && t < c && c <= s && e < u && u <= i) return o;\n      if (a >= n) {\n        o = o.next;\n        continue;\n      }\n      const d = Math.ceil((a + 1) / 2),\n        f = Math.floor((a + 1) / 2),\n        x = 30 - (3 * d + 2 * f),\n        m = 30 - (2 * d + 3 * f),\n        g = ~((1 << x) - 1),\n        y = ~((1 << m) - 1),\n        p = (t & g) >> x,\n        _ = (e & y) >> m,\n        v = (s & g) >> x,\n        M = (i & y) >> m,\n        T = r << 3 * h + 2 * (1 - h),\n        b = l << 2 * h + 3 * (1 - h),\n        k = T + 8 * h + 4 * (1 - h),\n        N = b + 4 * h + 8 * (1 - h),\n        I = Math.max(T, p),\n        C = Math.max(b, _),\n        G = Math.min(k, v),\n        L = Math.min(N, M);\n      let S = null,\n        w = null;\n      for (let t = C; t <= L; t++) for (let e = I; e <= G; e++) {\n        const s = e - T + (t - b) * (8 * h + 4 * (1 - h)),\n          i = o.children[s];\n        i && (S || (S = i, S.next = o.next), w && (w.next = i), w = i, i.next = o.next);\n      }\n      o = S || o.next;\n    }\n    return null;\n  }\n  getRegionDisplayIds(t) {\n    let e = this._root;\n    const {\n        bounds: s,\n        geohashBounds: i,\n        level: n\n      } = t,\n      [o, a, r, l] = s,\n      h = [];\n    for (; null !== e;) {\n      const t = e.depth,\n        s = e.xNode,\n        c = e.yNode;\n      if (t >= n) {\n        const t = e.xTotal / e.count,\n          s = e.yTotal / e.count;\n        t >= o && t <= r && s >= a && s <= l && e.displayIds.forEach(t => h.push(t)), e = e.next;\n        continue;\n      }\n      const u = Math.ceil((t + 1) / 2),\n        d = Math.floor((t + 1) / 2),\n        f = 1 - t % 2,\n        x = 30 - (3 * u + 2 * d),\n        m = 30 - (2 * u + 3 * d),\n        g = ~((1 << x) - 1),\n        y = ~((1 << m) - 1),\n        p = (i.xLL & g) >> x,\n        _ = (i.yLL & y) >> m,\n        v = (i.xTR & g) >> x,\n        M = (i.yTR & y) >> m,\n        T = s << 3 * f + 2 * (1 - f),\n        b = c << 2 * f + 3 * (1 - f),\n        k = T + 8 * f + 4 * (1 - f),\n        N = b + 4 * f + 8 * (1 - f),\n        I = Math.max(T, p),\n        C = Math.max(b, _),\n        G = Math.min(k, v),\n        L = Math.min(N, M);\n      let S = null,\n        w = null;\n      for (let i = C; i <= L; i++) for (let t = I; t <= G; t++) {\n        const s = t - T + (i - b) * (8 * f + 4 * (1 - f)),\n          n = e.children[s];\n        n && (S || (S = n, S.next = e.next), w && (w.next = n), w = n, n.next = e.next);\n      }\n      e = S || e.next;\n    }\n    return h;\n  }\n  getRegionStatistics(t) {\n    let e = this._root,\n      s = 0,\n      i = 0,\n      n = 0;\n    const o = {},\n      {\n        bounds: a,\n        geohashBounds: r,\n        level: l\n      } = t,\n      [h, c, u, d] = a;\n    let f = 0;\n    for (; null !== e;) {\n      const t = e.depth,\n        a = e.xNode,\n        x = e.yNode;\n      if (t >= l) {\n        const t = e.xTotal / e.count,\n          a = e.yTotal / e.count;\n        t > h && t <= u && a > c && a <= d && (s += e.count, i += e.xTotal, n += e.yTotal, 1 === e.count && (f = e.referenceId), this._aggregateStatistics(o, e.statistics)), e = e.next;\n        continue;\n      }\n      const m = Math.ceil((t + 1) / 2),\n        g = Math.floor((t + 1) / 2),\n        y = 1 - t % 2,\n        p = 30 - (3 * m + 2 * g),\n        _ = 30 - (2 * m + 3 * g),\n        v = ~((1 << p) - 1),\n        M = ~((1 << _) - 1),\n        T = (r.xLL & v) >> p,\n        b = (r.yLL & M) >> _,\n        k = (r.xTR & v) >> p,\n        N = (r.yTR & M) >> _,\n        I = a << 3 * y + 2 * (1 - y),\n        C = x << 2 * y + 3 * (1 - y),\n        G = I + 8 * y + 4 * (1 - y),\n        L = C + 4 * y + 8 * (1 - y),\n        S = Math.max(I, T),\n        w = Math.max(C, b),\n        R = Math.min(G, k),\n        F = Math.min(L, N);\n      let j = null,\n        z = null;\n      for (let r = w; r <= F; r++) for (let t = S; t <= R; t++) {\n        const a = t - I + (r - C) * (8 * y + 4 * (1 - y)),\n          l = e.children[a];\n        if (l) {\n          if (r !== w && r !== F && t !== S && t !== R) {\n            const t = l.xTotal / l.count,\n              e = l.yTotal / l.count;\n            t > h && t <= u && e > c && e <= d && (s += l.count, i += l.xTotal, n += l.yTotal, 1 === l.count && (f = l.referenceId), this._aggregateStatistics(o, l.statistics));\n            continue;\n          }\n          j || (j = l, j.next = e.next), z && (z.next = l), z = l, l.next = e.next;\n        }\n      }\n      e = j || e.next;\n    }\n    return {\n      count: s,\n      attributes: this.normalizeStatistics(o, s),\n      xTotal: i,\n      yTotal: n,\n      referenceId: f\n    };\n  }\n  getBins(t) {\n    const e = [],\n      {\n        geohashBounds: s,\n        level: i\n      } = t;\n    let n = this._root;\n    for (; null !== n;) {\n      const t = n.depth,\n        o = n.xNode,\n        a = n.yNode;\n      if (t >= i) {\n        e.push(n), n = n.next;\n        continue;\n      }\n      const r = Math.ceil((t + 1) / 2),\n        l = Math.floor((t + 1) / 2),\n        h = 1 - t % 2,\n        c = 30 - (3 * r + 2 * l),\n        u = 30 - (2 * r + 3 * l),\n        d = ~((1 << c) - 1),\n        f = ~((1 << u) - 1),\n        x = (s.xLL & d) >> c,\n        m = (s.yLL & f) >> u,\n        g = (s.xTR & d) >> c,\n        y = (s.yTR & f) >> u,\n        p = o << 3 * h + 2 * (1 - h),\n        _ = a << 2 * h + 3 * (1 - h),\n        v = p + 8 * h + 4 * (1 - h),\n        M = _ + 4 * h + 8 * (1 - h),\n        T = Math.max(p, x),\n        b = Math.max(_, m),\n        k = Math.min(v, g),\n        N = Math.min(M, y);\n      let I = null,\n        C = null;\n      for (let e = b; e <= N; e++) for (let t = T; t <= k; t++) {\n        const s = t - p + (e - _) * (8 * h + 4 * (1 - h)),\n          i = n.children[s];\n        i && (I || (I = i, I.next = n.next), C && (C.next = i), C = i, i.next = n.next);\n      }\n      n = I || n.next;\n    }\n    return e;\n  }\n  _linkChildren(t) {\n    let e = null,\n      s = null;\n    for (let i = 0; i <= t.children.length; i++) {\n      const n = t.children[i];\n      n && (e || (e = n, e.next = t.next), s && (s.next = n), s = n, n.next = t.next);\n    }\n    return e;\n  }\n  _updateStatisticsCursor(t, e, s) {\n    for (const i of this._statisticFields) {\n      const n = i.name,\n        o = i.inField ? t.readAttribute(i.inField) : t.getComputedNumericAtIndex(i.inFieldIndex);\n      switch (i.statisticType) {\n        case \"min\":\n          {\n            if (isNaN(o)) break;\n            if (!e.statistics[n]) {\n              e.statistics[n] = {\n                value: o\n              };\n              break;\n            }\n            const t = e.statistics[n].value;\n            e.statistics[n].value = Math.min(t, o);\n            break;\n          }\n        case \"max\":\n          {\n            if (isNaN(o)) break;\n            if (!e.statistics[n]) {\n              e.statistics[n] = {\n                value: o\n              };\n              break;\n            }\n            const t = e.statistics[n].value;\n            e.statistics[n].value = Math.max(t, o);\n            break;\n          }\n        case \"count\":\n          break;\n        case \"sum\":\n        case \"avg\":\n          {\n            e.statistics[n] || (e.statistics[n] = {\n              value: 0,\n              nanCount: 0\n            });\n            const t = e.statistics[n].value,\n              i = e.statistics[n].nanCount ?? 0;\n            null == o || isNaN(o) ? e.statistics[n].nanCount = i + s : e.statistics[n].value = t + s * o;\n            break;\n          }\n        case \"avg_angle\":\n          {\n            e.statistics[n] || (e.statistics[n] = {\n              x: 0,\n              y: 0,\n              nanCount: 0\n            });\n            const t = e.statistics[n].x,\n              i = e.statistics[n].y,\n              a = e.statistics[n].nanCount ?? 0,\n              r = Math.PI / 180;\n            null == o || isNaN(o) ? e.statistics[n].nanCount = a + s : (e.statistics[n].x = t + s * Math.cos(o * r), e.statistics[n].y = i + s * Math.sin(o * r));\n            break;\n          }\n        case \"mode\":\n          {\n            e.statistics[n] || (e.statistics[n] = {});\n            const t = e.statistics[n][o] || 0;\n            e.statistics[n][o] = t + s;\n            break;\n          }\n      }\n    }\n  }\n  _aggregateStatistics(t, e) {\n    for (const s of this._statisticFields) {\n      const i = s.name;\n      switch (s.statisticType) {\n        case \"min\":\n          {\n            if (!t[i]) {\n              t[i] = {\n                value: e[i].value\n              };\n              break;\n            }\n            const s = t[i].value;\n            t[i].value = Math.min(s, e[i].value);\n            break;\n          }\n        case \"max\":\n          {\n            if (!t[i]) {\n              t[i] = {\n                value: e[i].value\n              };\n              break;\n            }\n            const s = t[i].value;\n            t[i].value = Math.max(s, e[i].value);\n            break;\n          }\n        case \"count\":\n          break;\n        case \"sum\":\n        case \"avg\":\n        case \"avg_angle\":\n        case \"mode\":\n          t[i] || (t[i] = {});\n          for (const s in e[i]) {\n            const n = t[i][s] || 0;\n            t[i][s] = n + e[i][s];\n          }\n      }\n    }\n  }\n  normalizeStatistics(t, e) {\n    const s = {};\n    for (const i of this._statisticFields) {\n      const n = i.name;\n      switch (i.statisticType) {\n        case \"min\":\n        case \"max\":\n          {\n            const i = t[n];\n            if (!e || !i) break;\n            s[n] = i.value;\n            break;\n          }\n        case \"count\":\n          if (!e) break;\n          s[n] = e;\n          break;\n        case \"sum\":\n          {\n            if (!e) break;\n            const {\n              value: i,\n              nanCount: o\n            } = t[n];\n            if (!(e - o)) break;\n            s[n] = i;\n            break;\n          }\n        case \"avg\":\n          {\n            if (!e) break;\n            const {\n              value: i,\n              nanCount: o\n            } = t[n];\n            if (!(e - o)) break;\n            s[n] = i / (e - o);\n            break;\n          }\n        case \"avg_angle\":\n          {\n            if (!e) break;\n            const {\n              x: i,\n              y: o,\n              nanCount: a\n            } = t[n];\n            if (!(e - a)) break;\n            const r = i / (e - a),\n              l = o / (e - a),\n              h = 180 / Math.PI,\n              c = Math.atan2(l, r) * h;\n            s[n] = c;\n            break;\n          }\n        case \"mode\":\n          {\n            const e = t[n];\n            let i = 0,\n              o = 0,\n              a = null;\n            for (const t in e) {\n              const s = e[t];\n              s === i ? o += 1 : s > i && (i = s, o = 1, a = t);\n            }\n            s[n] = \"null\" === a || o > 1 ? null : a;\n            break;\n          }\n      }\n    }\n    return s;\n  }\n}\nclass d {\n  constructor(t, e, s, i) {\n    this.count = 0, this.xTotal = 0, this.yTotal = 0, this.statistics = {}, this.displayId = 0, this.referenceId = 0, this.displayIds = new Set(), this.next = null, this.depth = 0, this.xNode = 0, this.yNode = 0, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this._tree = t, this.children = new Array(32);\n    for (let n = 0; n < this.children.length; n++) this.children[n] = null;\n    this.xNode = e, this.yNode = s, this.depth = i;\n  }\n  realloc(t, e, s) {\n    for (let i = 0; i < this.children.length; i++) this.children[i] = null;\n    return this.xNode = t, this.yNode = e, this.depth = s, this.next = null, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this.displayId = 0, this.referenceId = 0, this.xTotal = 0, this.yTotal = 0, this.count = 0, this.statistics = {}, this.displayIds.clear(), this;\n  }\n  get id() {\n    return `${this.xNode}.${this.yNode}`;\n  }\n  add(t) {\n    this.displayIds.add(t);\n  }\n  remove(t) {\n    this.displayIds.delete(t);\n  }\n  getAttributes() {\n    const t = this._tree.normalizeStatistics(this.statistics, this.count);\n    return t.referenceId = null, t.aggregateId = this.id, t.aggregateCount = this.count, t;\n  }\n  getGeometry(t, s) {\n    const i = this.getLngLatBounds(),\n      [r, c, u, d] = i,\n      f = h({\n        rings: [[[r, c], [r, d], [u, d], [u, c], [r, c]]]\n      }, n.WGS84, t),\n      x = o(new l(), f, !1, !1);\n    if (e(s)) {\n      return a(new l(), x, !1, !1, \"esriGeometryPolygon\", s, !1, !1);\n    }\n    return x;\n  }\n  getGeometryCentroid(t, s) {\n    const i = this.getLngLatBounds(),\n      [o, c, u, d] = i,\n      f = h({\n        x: (o + u) / 2,\n        y: (c + d) / 2\n      }, n.WGS84, t),\n      x = r(new l(), f);\n    if (e(s)) {\n      return a(new l(), x, !1, !1, \"esriGeometryPoint\", s, !1, !1);\n    }\n    return x;\n  }\n  getLngLatBounds() {\n    const t = this.depth,\n      e = Math.ceil(t / 2),\n      s = Math.floor(t / 2),\n      n = 30 - (3 * e + 2 * s),\n      o = 30 - (2 * e + 3 * s),\n      a = this.xNode << n,\n      r = this.yNode << o;\n    return i({\n      geohashX: a,\n      geohashY: r\n    }, this.depth);\n  }\n  find(t, e, s, i, n, o) {\n    if (i >= s) return this;\n    const a = 1 - i % 2,\n      r = 3 * a + 2 * (1 - a),\n      l = 2 * a + 3 * (1 - a),\n      h = 30 - n - r,\n      c = 30 - o - l,\n      u = ((t & 7 * a + 3 * (1 - a) << h) >> h) + ((e & 3 * a + 7 * (1 - a) << c) >> c) * (8 * a + 4 * (1 - a)),\n      d = this.children[u];\n    return null == d ? null : d.find(t, e, s, i + 1, n + r, o + l);\n  }\n}\nexport { d as GeohashNode, u as GeohashTree };","map":{"version":3,"names":["t","isSome","e","mapOr","s","decodeGeohashXY","i","n","convertFromPolygon","o","quantizeOptimizedGeometry","a","convertFromPoint","r","l","project","h","FeatureSetReaderJSON","c","u","constructor","arguments","length","undefined","onRelease","_nodes","_root","d","_statisticFields","_pool","_serviceInfo","destroy","clear","_acquire","dequeue","realloc","_release","enqueue","count","size","poolSize","depth","forEach","Math","max","dropLevels","children","insert","fromOptimizedFeatures","getCursor","next","readGeometry","coords","geohashX","geohashY","insertCursor","displayId","xTotal","yTotal","xGeohashTotal","yGeohashTotal","referenceId","_updateStatisticsCursor","add","ceil","f","floor","x","m","g","y","p","_","remove","removeCursor","getDisplayId","_linkChildren","find","findIf","findAllIf","push","findSingleOccupancyNode","xNode","yNode","v","M","T","b","k","N","I","C","G","min","L","S","w","getRegionDisplayIds","bounds","geohashBounds","level","displayIds","xLL","yLL","xTR","yTR","getRegionStatistics","_aggregateStatistics","statistics","R","F","j","z","attributes","normalizeStatistics","getBins","name","inField","readAttribute","getComputedNumericAtIndex","inFieldIndex","statisticType","isNaN","value","nanCount","PI","cos","sin","atan2","Set","_tree","Array","id","delete","getAttributes","aggregateId","aggregateCount","getGeometry","getLngLatBounds","rings","WGS84","getGeometryCentroid","GeohashNode","GeohashTree"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/geohash/GeohashTree.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from\"../core/CircularArray.js\";import{isSome as e,mapOr as s}from\"../core/maybe.js\";import{decodeGeohashXY as i}from\"./geohashUtils.js\";import n from\"../geometry/SpatialReference.js\";import{convertFromPolygon as o,quantizeOptimizedGeometry as a,convertFromPoint as r}from\"../layers/graphics/featureConversionUtils.js\";import l from\"../layers/graphics/OptimizedGeometry.js\";import{project as h}from\"../layers/graphics/data/projectionSupport.js\";import{FeatureSetReaderJSON as c}from\"../views/2d/layers/features/support/FeatureSetReaderJSON.js\";class u{constructor(e=[],s,i=8096){this.onRelease=t=>{},this._nodes=0,this._root=new d(this,0,0,0),this._statisticFields=e,this._pool=i?new t(8096):null,this._serviceInfo=s}destroy(){this.clear()}_acquire(t,s,i){this._nodes++;let n=null;return e(this._pool)&&(n=this._pool.dequeue()),e(n)?n.realloc(t,s,i):n=new d(this,t,s,i),n}_release(t){this.onRelease(t),this._nodes--,e(this._pool)&&this._pool.enqueue(t)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return s(this._pool,0,(t=>t.size))}get depth(){let t=0;return this.forEach((e=>t=Math.max(t,e.depth))),t}dropLevels(t){this.forEach((e=>{if(e.depth>=t)for(let t=0;t<e.children.length;t++){const s=e.children[t];s&&this._release(s)}})),this.forEach((e=>{if(e.depth>=t)for(let t=0;t<e.children.length;t++)e.children[t]=null}))}clear(){this.forEach((t=>this._release(t))),this._root=new d(this,0,0,0)}insert(t,e,s=0){const i=c.fromOptimizedFeatures([t],this._serviceInfo).getCursor();i.next();const n=i.readGeometry();if(!n)return;const[o,a]=n.coords,r=t.geohashX,l=t.geohashY;this.insertCursor(i,t.displayId,o,a,r,l,e,s)}insertCursor(t,e,s,i,n,o,a,r=0){let l=this._root,h=0,c=0,u=0;for(;null!==l;){if(l.depth>=r&&(l.count+=1,l.xTotal+=s,l.yTotal+=i,l.xGeohashTotal+=n,l.yGeohashTotal+=o,l.referenceId=e,this._updateStatisticsCursor(t,l,1)),h>=a)return void l.add(e);const d=Math.ceil((h+1)/2),f=Math.floor((h+1)/2),x=1-h%2,m=30-(3*d+2*f),g=30-(2*d+3*f),y=(n&7*x+3*(1-x)<<m)>>m,p=(o&3*x+7*(1-x)<<g)>>g,_=y+p*(8*x+4*(1-x));c=c<<3*x+2*(1-x)|y,u=u<<2*x+3*(1-x)|p,null==l.children[_]&&(l.children[_]=this._acquire(c,u,h+1)),h+=1,l=l.children[_]}}remove(t,e){const s=c.fromOptimizedFeatures([t],this._serviceInfo).getCursor();s.next();const i=s.readGeometry();if(!i)return;const[n,o]=i.coords,a=t.geohashX,r=t.geohashY;this.removeCursor(s,n,o,a,r,e)}removeCursor(t,e,s,i,n,o){let a=this._root,r=0;for(;null!==a;){if(a.count-=1,a.xTotal-=e,a.yTotal-=s,a.xGeohashTotal-=i,a.yGeohashTotal-=n,this._updateStatisticsCursor(t,a,-1),r>=o)return void a.remove(t.getDisplayId());const l=Math.ceil((r+1)/2),h=Math.floor((r+1)/2),c=1-r%2,u=30-(3*l+2*h),d=30-(2*l+3*h),f=((i&7*c+3*(1-c)<<u)>>u)+((n&3*c+7*(1-c)<<d)>>d)*(8*c+4*(1-c)),x=a.children[f];1===x?.count&&(this._release(x),a.children[f]=null),r+=1,a=x}}forEach(t){let e=this._root;for(;null!==e;){const s=this._linkChildren(e)||e.next;t(e),e=s}}find(t,e,s){return this._root.find(t,e,s,0,0,0)}findIf(t){let e=null;return this.forEach((s=>{t(s)&&(e=s)})),e}findAllIf(t){const e=[];return this.forEach((s=>{t(s)&&e.push(s)})),e}findSingleOccupancyNode(t,e,s,i,n){let o=this._root;for(;null!==o;){const a=o.depth,r=o.xNode,l=o.yNode,h=1-a%2,c=o.xGeohashTotal/o.count,u=o.yGeohashTotal/o.count;if(1===o.count&&t<c&&c<=s&&e<u&&u<=i)return o;if(a>=n){o=o.next;continue}const d=Math.ceil((a+1)/2),f=Math.floor((a+1)/2),x=30-(3*d+2*f),m=30-(2*d+3*f),g=~((1<<x)-1),y=~((1<<m)-1),p=(t&g)>>x,_=(e&y)>>m,v=(s&g)>>x,M=(i&y)>>m,T=r<<3*h+2*(1-h),b=l<<2*h+3*(1-h),k=T+8*h+4*(1-h),N=b+4*h+8*(1-h),I=Math.max(T,p),C=Math.max(b,_),G=Math.min(k,v),L=Math.min(N,M);let S=null,w=null;for(let t=C;t<=L;t++)for(let e=I;e<=G;e++){const s=e-T+(t-b)*(8*h+4*(1-h)),i=o.children[s];i&&(S||(S=i,S.next=o.next),w&&(w.next=i),w=i,i.next=o.next)}o=S||o.next}return null}getRegionDisplayIds(t){let e=this._root;const{bounds:s,geohashBounds:i,level:n}=t,[o,a,r,l]=s,h=[];for(;null!==e;){const t=e.depth,s=e.xNode,c=e.yNode;if(t>=n){const t=e.xTotal/e.count,s=e.yTotal/e.count;t>=o&&t<=r&&s>=a&&s<=l&&e.displayIds.forEach((t=>h.push(t))),e=e.next;continue}const u=Math.ceil((t+1)/2),d=Math.floor((t+1)/2),f=1-t%2,x=30-(3*u+2*d),m=30-(2*u+3*d),g=~((1<<x)-1),y=~((1<<m)-1),p=(i.xLL&g)>>x,_=(i.yLL&y)>>m,v=(i.xTR&g)>>x,M=(i.yTR&y)>>m,T=s<<3*f+2*(1-f),b=c<<2*f+3*(1-f),k=T+8*f+4*(1-f),N=b+4*f+8*(1-f),I=Math.max(T,p),C=Math.max(b,_),G=Math.min(k,v),L=Math.min(N,M);let S=null,w=null;for(let i=C;i<=L;i++)for(let t=I;t<=G;t++){const s=t-T+(i-b)*(8*f+4*(1-f)),n=e.children[s];n&&(S||(S=n,S.next=e.next),w&&(w.next=n),w=n,n.next=e.next)}e=S||e.next}return h}getRegionStatistics(t){let e=this._root,s=0,i=0,n=0;const o={},{bounds:a,geohashBounds:r,level:l}=t,[h,c,u,d]=a;let f=0;for(;null!==e;){const t=e.depth,a=e.xNode,x=e.yNode;if(t>=l){const t=e.xTotal/e.count,a=e.yTotal/e.count;t>h&&t<=u&&a>c&&a<=d&&(s+=e.count,i+=e.xTotal,n+=e.yTotal,1===e.count&&(f=e.referenceId),this._aggregateStatistics(o,e.statistics)),e=e.next;continue}const m=Math.ceil((t+1)/2),g=Math.floor((t+1)/2),y=1-t%2,p=30-(3*m+2*g),_=30-(2*m+3*g),v=~((1<<p)-1),M=~((1<<_)-1),T=(r.xLL&v)>>p,b=(r.yLL&M)>>_,k=(r.xTR&v)>>p,N=(r.yTR&M)>>_,I=a<<3*y+2*(1-y),C=x<<2*y+3*(1-y),G=I+8*y+4*(1-y),L=C+4*y+8*(1-y),S=Math.max(I,T),w=Math.max(C,b),R=Math.min(G,k),F=Math.min(L,N);let j=null,z=null;for(let r=w;r<=F;r++)for(let t=S;t<=R;t++){const a=t-I+(r-C)*(8*y+4*(1-y)),l=e.children[a];if(l){if(r!==w&&r!==F&&t!==S&&t!==R){const t=l.xTotal/l.count,e=l.yTotal/l.count;t>h&&t<=u&&e>c&&e<=d&&(s+=l.count,i+=l.xTotal,n+=l.yTotal,1===l.count&&(f=l.referenceId),this._aggregateStatistics(o,l.statistics));continue}j||(j=l,j.next=e.next),z&&(z.next=l),z=l,l.next=e.next}}e=j||e.next}return{count:s,attributes:this.normalizeStatistics(o,s),xTotal:i,yTotal:n,referenceId:f}}getBins(t){const e=[],{geohashBounds:s,level:i}=t;let n=this._root;for(;null!==n;){const t=n.depth,o=n.xNode,a=n.yNode;if(t>=i){e.push(n),n=n.next;continue}const r=Math.ceil((t+1)/2),l=Math.floor((t+1)/2),h=1-t%2,c=30-(3*r+2*l),u=30-(2*r+3*l),d=~((1<<c)-1),f=~((1<<u)-1),x=(s.xLL&d)>>c,m=(s.yLL&f)>>u,g=(s.xTR&d)>>c,y=(s.yTR&f)>>u,p=o<<3*h+2*(1-h),_=a<<2*h+3*(1-h),v=p+8*h+4*(1-h),M=_+4*h+8*(1-h),T=Math.max(p,x),b=Math.max(_,m),k=Math.min(v,g),N=Math.min(M,y);let I=null,C=null;for(let e=b;e<=N;e++)for(let t=T;t<=k;t++){const s=t-p+(e-_)*(8*h+4*(1-h)),i=n.children[s];i&&(I||(I=i,I.next=n.next),C&&(C.next=i),C=i,i.next=n.next)}n=I||n.next}return e}_linkChildren(t){let e=null,s=null;for(let i=0;i<=t.children.length;i++){const n=t.children[i];n&&(e||(e=n,e.next=t.next),s&&(s.next=n),s=n,n.next=t.next)}return e}_updateStatisticsCursor(t,e,s){for(const i of this._statisticFields){const n=i.name,o=i.inField?t.readAttribute(i.inField):t.getComputedNumericAtIndex(i.inFieldIndex);switch(i.statisticType){case\"min\":{if(isNaN(o))break;if(!e.statistics[n]){e.statistics[n]={value:o};break}const t=e.statistics[n].value;e.statistics[n].value=Math.min(t,o);break}case\"max\":{if(isNaN(o))break;if(!e.statistics[n]){e.statistics[n]={value:o};break}const t=e.statistics[n].value;e.statistics[n].value=Math.max(t,o);break}case\"count\":break;case\"sum\":case\"avg\":{e.statistics[n]||(e.statistics[n]={value:0,nanCount:0});const t=e.statistics[n].value,i=e.statistics[n].nanCount??0;null==o||isNaN(o)?e.statistics[n].nanCount=i+s:e.statistics[n].value=t+s*o;break}case\"avg_angle\":{e.statistics[n]||(e.statistics[n]={x:0,y:0,nanCount:0});const t=e.statistics[n].x,i=e.statistics[n].y,a=e.statistics[n].nanCount??0,r=Math.PI/180;null==o||isNaN(o)?e.statistics[n].nanCount=a+s:(e.statistics[n].x=t+s*Math.cos(o*r),e.statistics[n].y=i+s*Math.sin(o*r));break}case\"mode\":{e.statistics[n]||(e.statistics[n]={});const t=e.statistics[n][o]||0;e.statistics[n][o]=t+s;break}}}}_aggregateStatistics(t,e){for(const s of this._statisticFields){const i=s.name;switch(s.statisticType){case\"min\":{if(!t[i]){t[i]={value:e[i].value};break}const s=t[i].value;t[i].value=Math.min(s,e[i].value);break}case\"max\":{if(!t[i]){t[i]={value:e[i].value};break}const s=t[i].value;t[i].value=Math.max(s,e[i].value);break}case\"count\":break;case\"sum\":case\"avg\":case\"avg_angle\":case\"mode\":t[i]||(t[i]={});for(const s in e[i]){const n=t[i][s]||0;t[i][s]=n+e[i][s]}}}}normalizeStatistics(t,e){const s={};for(const i of this._statisticFields){const n=i.name;switch(i.statisticType){case\"min\":case\"max\":{const i=t[n];if(!e||!i)break;s[n]=i.value;break}case\"count\":if(!e)break;s[n]=e;break;case\"sum\":{if(!e)break;const{value:i,nanCount:o}=t[n];if(!(e-o))break;s[n]=i;break}case\"avg\":{if(!e)break;const{value:i,nanCount:o}=t[n];if(!(e-o))break;s[n]=i/(e-o);break}case\"avg_angle\":{if(!e)break;const{x:i,y:o,nanCount:a}=t[n];if(!(e-a))break;const r=i/(e-a),l=o/(e-a),h=180/Math.PI,c=Math.atan2(l,r)*h;s[n]=c;break}case\"mode\":{const e=t[n];let i=0,o=0,a=null;for(const t in e){const s=e[t];s===i?o+=1:s>i&&(i=s,o=1,a=t)}s[n]=\"null\"===a||o>1?null:a;break}}}return s}}class d{constructor(t,e,s,i){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.referenceId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this._tree=t,this.children=new Array(32);for(let n=0;n<this.children.length;n++)this.children[n]=null;this.xNode=e,this.yNode=s,this.depth=i}realloc(t,e,s){for(let i=0;i<this.children.length;i++)this.children[i]=null;return this.xNode=t,this.yNode=e,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.displayId=0,this.referenceId=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}get id(){return`${this.xNode}.${this.yNode}`}add(t){this.displayIds.add(t)}remove(t){this.displayIds.delete(t)}getAttributes(){const t=this._tree.normalizeStatistics(this.statistics,this.count);return t.referenceId=null,t.aggregateId=this.id,t.aggregateCount=this.count,t}getGeometry(t,s){const i=this.getLngLatBounds(),[r,c,u,d]=i,f=h({rings:[[[r,c],[r,d],[u,d],[u,c],[r,c]]]},n.WGS84,t),x=o(new l,f,!1,!1);if(e(s)){return a(new l,x,!1,!1,\"esriGeometryPolygon\",s,!1,!1)}return x}getGeometryCentroid(t,s){const i=this.getLngLatBounds(),[o,c,u,d]=i,f=h({x:(o+u)/2,y:(c+d)/2},n.WGS84,t),x=r(new l,f);if(e(s)){return a(new l,x,!1,!1,\"esriGeometryPoint\",s,!1,!1)}return x}getLngLatBounds(){const t=this.depth,e=Math.ceil(t/2),s=Math.floor(t/2),n=30-(3*e+2*s),o=30-(2*e+3*s),a=this.xNode<<n,r=this.yNode<<o;return i({geohashX:a,geohashY:r},this.depth)}find(t,e,s,i,n,o){if(i>=s)return this;const a=1-i%2,r=3*a+2*(1-a),l=2*a+3*(1-a),h=30-n-r,c=30-o-l,u=((t&7*a+3*(1-a)<<h)>>h)+((e&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),d=this.children[u];return null==d?null:d.find(t,e,s,i+1,n+r,o+l)}}export{d as GeohashNode,u as GeohashTree};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}