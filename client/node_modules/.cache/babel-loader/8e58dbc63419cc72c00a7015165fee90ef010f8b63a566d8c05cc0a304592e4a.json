{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29;\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { ForwardLinearDepth as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { Offset as o } from \"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";\nimport { ShaderOutput as r } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SliceDraw as i } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { InstancedDoublePrecision as l } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";\nimport { NormalAttribute as t } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { PositionAttribute as s } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";\nimport { SymbolColor as n } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";\nimport { TextureCoordinateAttribute as d } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexColor as c } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";\nimport { VerticalOffset as g } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";\nimport { DefaultMaterialAuxiliaryPasses as m } from \"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";\nimport { EvaluateAmbientOcclusion as v } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as p, addAmbientBoostFactor as u, addLightingGlobalFactor as b } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { addMainLightDirection as h, addMainLightIntensity as w } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";\nimport { multipassTerrainTest as f } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { PhysicallyBasedRendering as x } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";\nimport { PhysicallyBasedRenderingParameters as y, PBRMode as C } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadShadowMapPass as L, ReadShadowMapDraw as j } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { VisualVariables as M } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";\nimport { symbolAlphaCutoff as O } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { DiscardOrAdjustAlphaPass as P } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";\nimport { MixExternalColor as A } from \"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";\nimport { addProjViewLocalOrigin as T, addCameraPosition as E } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float3PassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as _ } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as F } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as $ } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as N } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as D } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { TransparencyPassType as V } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nimport { VertexAttribute as B } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nfunction I(I) {\n  var R = new N(),\n    z = R.vertex,\n    k = R.fragment,\n    G = R.varyings;\n  return T(z, I), R.include(s), G.add(\"vpos\", \"vec3\"), R.include(M, I), R.include(l, I), R.include(g, I), I.output !== r.Color && I.output !== r.Alpha || (E(R.vertex, I), R.include(t, I), R.include(a, I), I.offsetBackfaces && R.include(o), I.instancedColor && R.attributes.add(B.INSTANCECOLOR, \"vec4\"), G.add(\"vNormalWorld\", \"vec3\"), G.add(\"localvpos\", \"vec3\"), I.hasMultipassTerrain && G.add(\"depth\", \"float\"), R.include(d, I), R.include(e, I), R.include(n, I), R.include(c, I), z.uniforms.add(new _(\"externalColor\", function (e) {\n    return e.externalColor;\n  })), G.add(\"vcolorExt\", \"vec4\"), z.code.add($(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n        void main(void) {\\n          forwardNormalizedVertexColor();\\n          vcolorExt = externalColor;\\n          \", \"\\n          vcolorExt *= vvColor();\\n          vcolorExt *= getSymbolColor();\\n          forwardColorMixMode();\\n\\n          if (vcolorExt.a < \", \") {\\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\\n          } else {\\n            vpos = calculateVPos();\\n            localvpos = vpos - view[3].xyz;\\n            vpos = subtractOrigin(vpos);\\n            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\\n            vpos = addVerticalOffset(vpos, localOrigin);\\n            gl_Position = transformPosition(proj, view, vpos);\\n            \", \"\\n          }\\n          \", \"\\n          forwardLinearDepth();\\n          forwardTextureCoordinates();\\n        }\\n      \"])), I.instancedColor ? \"vcolorExt *= instanceColor;\" : \"\", $.float(O), I.offsetBackfaces ? \"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\" : \"\", I.hasMultipassTerrain ? $(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"depth = (view * vec4(vpos, 1.0)).z;\"]))) : \"\"))), I.output === r.Alpha && (R.include(i, I), R.include(P, I), R.include(f, I), k.uniforms.add([new F(\"opacity\", function (e) {\n    return e.opacity;\n  }), new F(\"layerOpacity\", function (e) {\n    return e.layerOpacity;\n  })]), I.hasColorTexture && k.uniforms.add(new D(\"tex\", function (e) {\n    return e.texture;\n  })), k.include(A), k.code.add($(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      void main() {\\n        discardBySlice(vpos);\\n        \", \"\\n        \", \"\\n        \", \"\\n\\n        gl_FragColor = vec4(opacity_);\\n      }\\n    \"])), I.hasMultipassTerrain ? $(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"terrainDepthTest(gl_FragCoord, depth);\"]))) : \"\", I.hasColorTexture ? $(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n                vec4 texColor = texture2D(tex, \", \");\\n                \", \"\\n                discardOrAdjustAlpha(texColor);\"])), I.hasColorTextureTransform ? $(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"colorUV\"]))) : $(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"vuv0\"]))), I.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\") : $(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"vec4 texColor = vec4(1.0);\"]))), I.hasVertexColors ? $(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));\"]))) : $(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));\"])))))), I.output === r.Color && (R.include(i, I), R.include(p, I), R.include(v, I), R.include(P, I), R.include(I.instancedDoublePrecision ? L : j, I), R.include(f, I), E(R.fragment, I), h(k), u(k), b(k), k.uniforms.add([z.uniforms.get(\"localOrigin\"), z.uniforms.get(\"view\"), new S(\"ambient\", function (e) {\n    return e.ambient;\n  }), new S(\"diffuse\", function (e) {\n    return e.diffuse;\n  }), new F(\"opacity\", function (e) {\n    return e.opacity;\n  }), new F(\"layerOpacity\", function (e) {\n    return e.layerOpacity;\n  })]), I.hasColorTexture && k.uniforms.add(new D(\"tex\", function (e) {\n    return e.texture;\n  })), R.include(y, I), R.include(x, I), k.include(A), R.extensions.add(\"GL_OES_standard_derivatives\"), w(k), k.code.add($(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n      void main() {\\n        discardBySlice(vpos);\\n        \", \"\\n        \", \"\\n        vec3 viewDirection = normalize(vpos - cameraPosition);\\n        \", \"\\n        float ssao = evaluateAmbientOcclusionInverse();\\n        ssao *= getBakedOcclusion();\\n\\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\\n        \", \"\\n        vec3 matColor = max(ambient, diffuse);\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\\n        \", \"\\n      }\\n    \"])), I.hasMultipassTerrain ? $(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"terrainDepthTest(gl_FragCoord, depth);\"]))) : \"\", I.hasColorTexture ? $(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n                vec4 texColor = texture2D(tex, \", \");\\n                \", \"\\n                discardOrAdjustAlpha(texColor);\"])), I.hasColorTextureTransform ? $(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"colorUV\"]))) : $(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"vuv0\"]))), I.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\") : $(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"vec4 texColor = vec4(1.0);\"]))), I.pbrMode === C.Normal ? \"applyPBRFactors();\" : \"\", I.receiveShadows ? \"float shadow = readShadowMap(vpos, linearDepth);\" : I.spherical ? \"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\" : \"float shadow = 0.0;\", I.hasVertexColors ? $(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));\"]))) : $(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"\\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));\"]))), I.snowCover ? $(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"albedo = mix(albedo, vec3(1), 0.9);\"]))) : $(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\"\"]))), $(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\"\\n            vec3 shadingNormal = normalize(vNormalWorld);\\n            albedo *= 1.2;\\n            vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\\n            float alignmentLightView = clamp(dot(viewForward, -mainLightDirection), 0.0, 1.0);\\n            float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\\n            float treeRadialFalloff = vColor.r;\\n            float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\\n            additionalLight += backLightFactor * mainLightIntensity;\"]))), I.pbrMode === C.Normal || I.pbrMode === C.Schematic ? I.spherical ? $(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral([\"vec3 normalGround = normalize(vpos + localOrigin);\"]))) : $(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral([\"vec3 normalGround = vec3(0.0, 0.0, 1.0);\"]))) : $(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral([\"\"]))), I.pbrMode === C.Normal || I.pbrMode === C.Schematic ? $(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral([\"\\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\\n                \", \"\\n\\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);\"])), I.snowCover ? $(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral([\"\\n                        mrr = vec3(0.0, 1.0, 0.04);\\n                        emission = vec3(0.0);\"]))) : \"\") : $(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral([\"vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);\"]))), I.transparencyPassType === V.Color ? $(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral([\"gl_FragColor = premultiplyAlpha(gl_FragColor);\"]))) : $(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral([\"\"])))))), R.include(m, I), R;\n}\nvar R = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: I\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { R, I as b };","map":{"version":3,"names":["ForwardLinearDepth","e","Offset","o","ShaderOutput","r","SliceDraw","i","Transform","a","InstancedDoublePrecision","l","NormalAttribute","t","PositionAttribute","s","SymbolColor","n","TextureCoordinateAttribute","d","VertexColor","c","VerticalOffset","g","DefaultMaterialAuxiliaryPasses","m","EvaluateAmbientOcclusion","v","EvaluateSceneLighting","p","addAmbientBoostFactor","u","addLightingGlobalFactor","b","addMainLightDirection","h","addMainLightIntensity","w","multipassTerrainTest","f","PhysicallyBasedRendering","x","PhysicallyBasedRenderingParameters","y","PBRMode","C","ReadShadowMapPass","L","ReadShadowMapDraw","j","VisualVariables","M","symbolAlphaCutoff","O","DiscardOrAdjustAlphaPass","P","MixExternalColor","A","addProjViewLocalOrigin","T","addCameraPosition","E","Float3PassUniform","S","Float4PassUniform","_","FloatPassUniform","F","glsl","$","ShaderBuilder","N","Texture2DPassUniform","D","TransparencyPassType","V","VertexAttribute","B","I","R","z","vertex","k","fragment","G","varyings","include","add","output","Color","Alpha","offsetBackfaces","instancedColor","attributes","INSTANCECOLOR","hasMultipassTerrain","uniforms","externalColor","code","_templateObject","_taggedTemplateLiteral","float","_templateObject2","opacity","layerOpacity","hasColorTexture","texture","_templateObject3","_templateObject4","_templateObject5","hasColorTextureTransform","_templateObject6","_templateObject7","textureAlphaPremultiplied","_templateObject8","hasVertexColors","_templateObject9","_templateObject10","instancedDoublePrecision","get","ambient","diffuse","extensions","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","pbrMode","Normal","receiveShadows","spherical","_templateObject17","_templateObject18","snowCover","_templateObject19","_templateObject20","_templateObject21","Schematic","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","transparencyPassType","_templateObject28","_templateObject29","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/chunks/RealisticTree.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as s}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VerticalOffset as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as m}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{EvaluateAmbientOcclusion as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as p,addAmbientBoostFactor as u,addLightingGlobalFactor as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightDirection as h,addMainLightIntensity as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{PhysicallyBasedRendering as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as y,PBRMode as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as L,ReadShadowMapDraw as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{VisualVariables as M}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as O}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as P}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as A}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as T,addCameraPosition as E}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as _}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as $}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as N}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as V}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as B}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function I(I){const R=new N,{vertex:z,fragment:k,varyings:G}=R;return T(z,I),R.include(s),G.add(\"vpos\",\"vec3\"),R.include(M,I),R.include(l,I),R.include(g,I),I.output!==r.Color&&I.output!==r.Alpha||(E(R.vertex,I),R.include(t,I),R.include(a,I),I.offsetBackfaces&&R.include(o),I.instancedColor&&R.attributes.add(B.INSTANCECOLOR,\"vec4\"),G.add(\"vNormalWorld\",\"vec3\"),G.add(\"localvpos\",\"vec3\"),I.hasMultipassTerrain&&G.add(\"depth\",\"float\"),R.include(d,I),R.include(e,I),R.include(n,I),R.include(c,I),z.uniforms.add(new _(\"externalColor\",(e=>e.externalColor))),G.add(\"vcolorExt\",\"vec4\"),z.code.add($`\n        void main(void) {\n          forwardNormalizedVertexColor();\n          vcolorExt = externalColor;\n          ${I.instancedColor?\"vcolorExt *= instanceColor;\":\"\"}\n          vcolorExt *= vvColor();\n          vcolorExt *= getSymbolColor();\n          forwardColorMixMode();\n\n          if (vcolorExt.a < ${$.float(O)}) {\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          } else {\n            vpos = calculateVPos();\n            localvpos = vpos - view[3].xyz;\n            vpos = subtractOrigin(vpos);\n            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, vpos);\n            ${I.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n          }\n          ${I.hasMultipassTerrain?$`depth = (view * vec4(vpos, 1.0)).z;`:\"\"}\n          forwardLinearDepth();\n          forwardTextureCoordinates();\n        }\n      `)),I.output===r.Alpha&&(R.include(i,I),R.include(P,I),R.include(f,I),k.uniforms.add([new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity))]),I.hasColorTexture&&k.uniforms.add(new D(\"tex\",(e=>e.texture))),k.include(A),k.code.add($`\n      void main() {\n        discardBySlice(vpos);\n        ${I.hasMultipassTerrain?$`terrainDepthTest(gl_FragCoord, depth);`:\"\"}\n        ${I.hasColorTexture?$`\n                vec4 texColor = texture2D(tex, ${I.hasColorTextureTransform?$`colorUV`:$`vuv0`});\n                ${I.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:$`vec4 texColor = vec4(1.0);`}\n        ${I.hasVertexColors?$`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:$`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n\n        gl_FragColor = vec4(opacity_);\n      }\n    `)),I.output===r.Color&&(R.include(i,I),R.include(p,I),R.include(v,I),R.include(P,I),R.include(I.instancedDoublePrecision?L:j,I),R.include(f,I),E(R.fragment,I),h(k),u(k),b(k),k.uniforms.add([z.uniforms.get(\"localOrigin\"),z.uniforms.get(\"view\"),new S(\"ambient\",(e=>e.ambient)),new S(\"diffuse\",(e=>e.diffuse)),new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity))]),I.hasColorTexture&&k.uniforms.add(new D(\"tex\",(e=>e.texture))),R.include(y,I),R.include(x,I),k.include(A),R.extensions.add(\"GL_OES_standard_derivatives\"),w(k),k.code.add($`\n      void main() {\n        discardBySlice(vpos);\n        ${I.hasMultipassTerrain?$`terrainDepthTest(gl_FragCoord, depth);`:\"\"}\n        ${I.hasColorTexture?$`\n                vec4 texColor = texture2D(tex, ${I.hasColorTextureTransform?$`colorUV`:$`vuv0`});\n                ${I.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:$`vec4 texColor = vec4(1.0);`}\n        vec3 viewDirection = normalize(vpos - cameraPosition);\n        ${I.pbrMode===C.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n        ${I.receiveShadows?\"float shadow = readShadowMap(vpos, linearDepth);\":I.spherical?\"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\":\"float shadow = 0.0;\"}\n        vec3 matColor = max(ambient, diffuse);\n        ${I.hasVertexColors?$`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:$`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${I.snowCover?$`albedo = mix(albedo, vec3(1), 0.9);`:$``}\n        ${$`\n            vec3 shadingNormal = normalize(vNormalWorld);\n            albedo *= 1.2;\n            vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\n            float alignmentLightView = clamp(dot(viewForward, -mainLightDirection), 0.0, 1.0);\n            float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\n            float treeRadialFalloff = vColor.r;\n            float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\n            additionalLight += backLightFactor * mainLightIntensity;`}\n        ${I.pbrMode===C.Normal||I.pbrMode===C.Schematic?I.spherical?$`vec3 normalGround = normalize(vpos + localOrigin);`:$`vec3 normalGround = vec3(0.0, 0.0, 1.0);`:$``}\n        ${I.pbrMode===C.Normal||I.pbrMode===C.Schematic?$`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${I.snowCover?$`\n                        mrr = vec3(0.0, 1.0, 0.04);\n                        emission = vec3(0.0);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:$`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${I.transparencyPassType===V.Color?$`gl_FragColor = premultiplyAlpha(gl_FragColor);`:$``}\n      }\n    `)),R.include(m,I),R}const R=Object.freeze(Object.defineProperty({__proto__:null,build:I},Symbol.toStringTag,{value:\"Module\"}));export{R,I as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}