{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { isSome as s, isNone as e } from \"../../../core/maybe.js\";\nimport { property as n } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as r } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { getBandMatrix3 as o } from \"./bandIndexUtils.js\";\nimport i from \"./BaseRasterFunction.js\";\nimport a from \"./ExtractBandFunctionArguments.js\";\nimport { MissingBandAction as u } from \"./pixelUtils.js\";\nlet c = class extends i {\n  constructor() {\n    super(...arguments), this.functionName = \"ExtractBand\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\"];\n  }\n  _bindSourceRasters() {\n    const {\n        sourceRasterInfos: t\n      } = this,\n      e = t[0],\n      {\n        bandCount: n\n      } = e,\n      {\n        bandIds: r,\n        missingBandAction: o\n      } = this.functionArguments;\n    if (o === u.fail && r.some(t => t < 0 || t >= n)) return {\n      success: !1,\n      supportsGPU: !1,\n      error: \"extract-band-function: invalid bandIds\"\n    };\n    this.outputPixelType = this._getOutputPixelType(\"f32\");\n    const i = e.clone();\n    i.pixelType = this.outputPixelType, i.bandCount = r.length;\n    const {\n      statistics: a,\n      histograms: c\n    } = i;\n    s(a) && a.length && (i.statistics = r.map(t => a[t] || a[a.length - 1])), s(c) && c.length && (i.histograms = r.map(t => c[t] || c[c.length - 1])), this.rasterInfo = i;\n    return {\n      success: !0,\n      supportsGPU: i.bandCount <= 3\n    };\n  }\n  _processPixels(t) {\n    const s = t.pixelBlocks?.[0];\n    if (e(s)) return null;\n    const n = s.pixels.length,\n      r = this.functionArguments.bandIds.map(t => t >= n ? n - 1 : t);\n    return s.extractBands(r);\n  }\n  _getWebGLParameters() {\n    let t;\n    if (this.isInputBandIdsSwizzled) t = this.swizzledBandSelection.length ? this.swizzledBandSelection : [0, 1, 2];else {\n      t = [...this.functionArguments.bandIds], 0 === t.length ? t = [0, 1, 2] : t.length < 3 && (t[1] = t[1] ?? t[0], t[2] = t[2] ?? t[1]);\n      for (let s = 0; s < 3; s++) t[s] = Math.min(t[s], 2);\n    }\n    return {\n      bandIndexMat3: o(t)\n    };\n  }\n  _getInputBandIds(t) {\n    const s = t.length;\n    return this.functionArguments.bandIds.map(t => t >= s ? s - 1 : t).map(s => t[s]);\n  }\n};\nt([n({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], c.prototype, \"functionName\", void 0), t([n({\n  type: a,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], c.prototype, \"functionArguments\", void 0), t([n()], c.prototype, \"rasterArgumentNames\", void 0), c = t([r(\"esri.layers.support.rasterFunctions.ExtractBandFunction\")], c);\nconst p = c;\nexport { p as default };","map":{"version":3,"names":["_","t","isSome","s","isNone","e","property","n","subclass","r","getBandMatrix3","o","i","a","MissingBandAction","u","c","constructor","arguments","functionName","functionArguments","rasterArgumentNames","_bindSourceRasters","sourceRasterInfos","bandCount","bandIds","missingBandAction","fail","some","success","supportsGPU","error","outputPixelType","_getOutputPixelType","clone","pixelType","length","statistics","histograms","map","rasterInfo","_processPixels","pixelBlocks","pixels","extractBands","_getWebGLParameters","isInputBandIdsSwizzled","swizzledBandSelection","Math","min","bandIndexMat3","_getInputBandIds","json","write","name","prototype","type","p","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/support/rasterFunctions/ExtractBandFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{isSome as s,isNone as e}from\"../../../core/maybe.js\";import{property as n}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as r}from\"../../../core/accessorSupport/decorators/subclass.js\";import{getBandMatrix3 as o}from\"./bandIndexUtils.js\";import i from\"./BaseRasterFunction.js\";import a from\"./ExtractBandFunctionArguments.js\";import{MissingBandAction as u}from\"./pixelUtils.js\";let c=class extends i{constructor(){super(...arguments),this.functionName=\"ExtractBand\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{bandIds:r,missingBandAction:o}=this.functionArguments;if(o===u.fail&&r.some((t=>t<0||t>=n)))return{success:!1,supportsGPU:!1,error:\"extract-band-function: invalid bandIds\"};this.outputPixelType=this._getOutputPixelType(\"f32\");const i=e.clone();i.pixelType=this.outputPixelType,i.bandCount=r.length;const{statistics:a,histograms:c}=i;s(a)&&a.length&&(i.statistics=r.map((t=>a[t]||a[a.length-1]))),s(c)&&c.length&&(i.histograms=r.map((t=>c[t]||c[c.length-1]))),this.rasterInfo=i;return{success:!0,supportsGPU:i.bandCount<=3}}_processPixels(t){const s=t.pixelBlocks?.[0];if(e(s))return null;const n=s.pixels.length,r=this.functionArguments.bandIds.map((t=>t>=n?n-1:t));return s.extractBands(r)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let s=0;s<3;s++)t[s]=Math.min(t[s],2)}return{bandIndexMat3:o(t)}}_getInputBandIds(t){const s=t.length;return this.functionArguments.bandIds.map((t=>t>=s?s-1:t)).map((s=>t[s]))}};t([n({json:{write:!0,name:\"rasterFunction\"}})],c.prototype,\"functionName\",void 0),t([n({type:a,json:{write:!0,name:\"rasterFunctionArguments\"}})],c.prototype,\"functionArguments\",void 0),t([n()],c.prototype,\"rasterArgumentNames\",void 0),c=t([r(\"esri.layers.support.rasterFunctions.ExtractBandFunction\")],c);const p=c;export{p as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}