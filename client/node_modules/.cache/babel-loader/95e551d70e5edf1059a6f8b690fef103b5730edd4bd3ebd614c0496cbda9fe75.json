{"ast":null,"code":"import _slicedToArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../../../../geometry.js\";\nimport e from \"../../../../../core/Evented.js\";\nimport has from \"../../../../../core/has.js\";\nimport t from \"../../../../../core/Logger.js\";\nimport { isNone as s, applySome as r, mapOr as i } from \"../../../../../core/maybe.js\";\nimport { diff as o, hasDiff as a } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport { GeohashTree as h } from \"../../../../../geohash/GeohashTree.js\";\nimport { setGeohashBuf as n, setGeohashXY as d } from \"../../../../../geohash/geohashUtils.js\";\nimport { create as l } from \"../../../../../geometry/support/aaBoundingBox.js\";\nimport { earth as g } from \"../../../../../geometry/support/Ellipsoid.js\";\nimport { getInfo as p } from \"../../../../../geometry/support/spatialReferenceUtils.js\";\nimport { getBoundsOptimizedGeometry as c, convertToGeometry as f, convertFromPolygon as u } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeature as m } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport _ from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { checkProjectionSupport as y, project as I } from \"../../../../../layers/graphics/data/projectionSupport.js\";\nimport { createDisplayId as b } from \"../../../engine/webgl/DisplayId.js\";\nimport { featureAdapter as j } from \"../FeatureStore2D.js\";\nimport { Store2D as v } from \"../Store2D.js\";\nimport { FeatureSetReaderJSON as B } from \"./FeatureSetReaderJSON.js\";\nimport x from \"../../../../../geometry/SpatialReference.js\";\nimport S from \"../../../../../geometry/Polygon.js\";\nimport F from \"../../../../../geometry/Extent.js\";\nvar G = t.getLogger(\"esri.view.2d.layers.features.support.BinStore\"),\n  R = 12,\n  L = 64,\n  T = l(),\n  A = 5;\nfunction D(e) {\n  return 57.29577951308232 * e;\n}\nvar O = /*#__PURE__*/function (_v) {\n  _inherits(O, _v);\n  var _super = _createSuper(O);\n  function O(t, s, r, i) {\n    var _this;\n    _classCallCheck(this, O);\n    _this = _super.call(this, t, r), _this.type = \"bin\", _this.events = new e(), _this.objectIdField = \"aggregateId\", _this.featureAdapter = j, _this._geohashLevel = A, _this._geohashBuf = [], _this._serviceInfo = i, _this.geometryInfo = t.geometryInfo, _this._spatialReference = s, _this._projectionSupportCheck = y(s, x.WGS84), _this._bitsets.geohash = r.getBitset(r.createBitset()), _this._bitsets.inserted = r.getBitset(r.createBitset());\n    return _this;\n  }\n  _createClass(O, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this._tree && this._tree.destroy();\n    }\n  }, {\n    key: \"featureSpatialReference\",\n    get: function get() {\n      return this._spatialReference;\n    }\n  }, {\n    key: \"fields\",\n    get: function get() {\n      return this._fields;\n    }\n  }, {\n    key: \"updateSchema\",\n    value: function () {\n      var _updateSchema = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e, t) {\n        var _this2 = this;\n        var r, i;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              r = this._schema;\n              _context.prev = 1;\n              _context.next = 4;\n              return _get(_getPrototypeOf(O.prototype), \"updateSchema\", this).call(this, e, t);\n            case 4:\n              _context.next = 6;\n              return this._projectionSupportCheck;\n            case 6:\n              _context.next = 10;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n            case 10:\n              this._fields = this._schema.params.fields;\n              i = o(r, t);\n              t && (!s(i) || e.source || e.storage.filters) ? ((a(i, \"params.fields\") || a(i, \"params\") || !this._tree || e.source) && (this._tree && this._tree.destroy(), this._tree = new h(this._statisticFields, this._serviceInfo), this._tree.onRelease = function (e) {\n                return e.displayId && _this2._storage.releaseDisplayId(e.displayId);\n              }, this._geohashLevel = this._schema.params.fixedBinLevel, this._rebuildTree(), has(\"esri-2d-update-debug\") && G.info(\"Aggregate mesh needs update due to tree changing\")), has(\"esri-2d-update-debug\") && G.info(\"Aggregate mesh needs update due to tree changing\"), e.targets[t.name] = !0, e.mesh = !1) : r && (e.mesh = !0);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n      function updateSchema(_x, _x2) {\n        return _updateSchema.apply(this, arguments);\n      }\n      return updateSchema;\n    }()\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._rebuildTree();\n    }\n  }, {\n    key: \"sweepFeatures\",\n    value: function sweepFeatures(e, t) {\n      var _this3 = this;\n      this._bitsets.inserted.forEachSet(function (s) {\n        if (!e.has(s)) {\n          var _e = t.lookupByDisplayIdUnsafe(s);\n          _this3._remove(_e);\n        }\n      });\n    }\n  }, {\n    key: \"sweepAggregates\",\n    value: function sweepAggregates(e, t, s) {}\n  }, {\n    key: \"onTileData\",\n    value: function onTileData(e, t, r, i) {\n      var o = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !0;\n      if (!this._schema || s(t.addOrUpdate)) return t;\n      this.events.emit(\"changed\");\n      var a = this._getTransforms(e, this._spatialReference);\n      {\n        var _e2 = t.addOrUpdate.getCursor();\n        for (; _e2.next();) this._update(_e2, i);\n      }\n      if (t.status.mesh || !o) return t;\n      var h = new Array();\n      this._getBinsForTile(h, e, a, r), t.addOrUpdate = B.fromOptimizedFeatures(h, _objectSpread(_objectSpread({}, this._serviceInfo), {}, {\n        geometryType: \"esriGeometryPolygon\"\n      })), t.addOrUpdate.attachStorage(r), t.end = !0, t.isRepush || (t.clear = !0);\n      {\n        var _s = t.addOrUpdate.getCursor();\n        for (; _s.next();) {\n          var _t = _s.getDisplayId();\n          this._bitsets.computed.unset(_t), this.setComputedAttributes(r, _s, _t, e.scale);\n        }\n      }\n      return t;\n    }\n  }, {\n    key: \"forEachBin\",\n    value: function forEachBin(e) {\n      this._tree.forEach(e);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(e) {\n      var _this4 = this;\n      this._tree.forEach(function (t) {\n        if (t.depth !== _this4._geohashLevel) return;\n        var s = _this4._toFeatureJSON(t),\n          r = B.fromFeatures([s], {\n            objectIdField: _this4.objectIdField,\n            globalIdField: null,\n            geometryType: _this4.geometryInfo.geometryType,\n            fields: _this4.fields\n          }).getCursor();\n        r.next(), e(r);\n      });\n    }\n  }, {\n    key: \"forEachInBounds\",\n    value: function forEachInBounds(e, t) {}\n  }, {\n    key: \"forEachBounds\",\n    value: function forEachBounds(e, t) {\n      var _this$geometryInfo = this.geometryInfo,\n        r = _this$geometryInfo.hasM,\n        i = _this$geometryInfo.hasZ;\n      var _iterator = _createForOfIteratorHelper(e),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _o = _step.value;\n          var _e3 = c(T, _o.readGeometry(), i, r);\n          s(_e3) || t(_e3);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"onTileUpdate\",\n    value: function onTileUpdate(e) {}\n  }, {\n    key: \"getAggregate\",\n    value: function getAggregate(e) {\n      var _this5 = this;\n      var t = b(e, !0),\n        s = this._tree.findIf(function (e) {\n          return e.displayId === t;\n        });\n      return r(s, function (e) {\n        return _this5._toFeatureJSON(e);\n      });\n    }\n  }, {\n    key: \"getAggregates\",\n    value: function getAggregates() {\n      var _this6 = this;\n      return this._tree.findAllIf(function (e) {\n        return e.depth === _this6._geohashLevel;\n      }).map(this._toFeatureJSON.bind(this));\n    }\n  }, {\n    key: \"getDisplayId\",\n    value: function getDisplayId(e) {\n      var t = this._tree.findIf(function (t) {\n        return t.id === e;\n      });\n      return r(t, function (e) {\n        return e.displayId;\n      });\n    }\n  }, {\n    key: \"getFeatureDisplayIdsForAggregate\",\n    value: function getFeatureDisplayIdsForAggregate(e) {\n      var t = this._tree.findIf(function (t) {\n        return t.id === e;\n      });\n      return i(t, [], function (e) {\n        return Array.from(e.displayIds);\n      });\n    }\n  }, {\n    key: \"getDisplayIdForReferenceId\",\n    value: function getDisplayIdForReferenceId(e) {\n      var t = this._tree.findIf(function (t) {\n        return 1 === t.displayIds.size && t.displayIds.has(e);\n      });\n      return r(t, function (e) {\n        return e.displayId;\n      });\n    }\n  }, {\n    key: \"_toFeatureJSON\",\n    value: function _toFeatureJSON(e) {\n      var t = this._spatialReference;\n      return {\n        displayId: e.displayId,\n        attributes: e.getAttributes(),\n        geometry: f(e.getGeometry(t), \"esriGeometryPolygon\", !1, !1),\n        centroid: null\n      };\n    }\n  }, {\n    key: \"_rebuildTree\",\n    value: function _rebuildTree() {\n      this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove(e) {\n      var t = e.getDisplayId(),\n        s = e.getXHydrated(),\n        r = e.getYHydrated(),\n        i = this._geohashBuf[2 * t],\n        o = this._geohashBuf[2 * t + 1];\n      this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, i, o, this._geohashLevel));\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(e, t) {\n      var s = e.getDisplayId(),\n        r = this._bitsets.inserted,\n        i = t.isVisible(s);\n      if (i === r.has(s)) return;\n      if (!i) return void this._remove(e);\n      var o = e.getXHydrated(),\n        a = e.getYHydrated();\n      if (!this._setGeohash(s, o, a)) return;\n      var h = this._geohashBuf[2 * s],\n        n = this._geohashBuf[2 * s + 1];\n      this._tree.insertCursor(e, s, o, a, h, n, this._geohashLevel), r.set(s);\n    }\n  }, {\n    key: \"_setGeohash\",\n    value: function _setGeohash(e, t, s) {\n      if (this._bitsets.geohash.has(e)) return !0;\n      var r = this._geohashBuf;\n      if (this._spatialReference.isWebMercator) {\n        var _i = D(t / g.radius),\n          _o2 = _i - 360 * Math.floor((_i + 180) / 360),\n          _a = D(Math.PI / 2 - 2 * Math.atan(Math.exp(-s / g.radius)));\n        n(r, e, _a, _o2, R);\n      } else {\n        var _i2 = I({\n          x: t,\n          y: s\n        }, this._spatialReference, x.WGS84);\n        if (!_i2) return !1;\n        n(r, e, _i2.y, _i2.x, R);\n      }\n      return this._bitsets.geohash.set(e), !0;\n    }\n  }, {\n    key: \"_getBinsForTile\",\n    value: function _getBinsForTile(e, t, s, r) {\n      try {\n        var _i3 = this._getGeohashBounds(t),\n          _o3 = this._tree.getBins(_i3);\n        var _iterator2 = _createForOfIteratorHelper(_o3),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _t2 = _step2.value;\n            _t2.displayId || (_t2.displayId = r.createDisplayId(!0));\n            var _i4 = null;\n            var _o4 = _t2.getGeometry(this._spatialReference, s.tile);\n            _o4 || (_i4 = _t2.getGeometryCentroid(this._spatialReference, s.tile));\n            var _a2 = new m(_o4, _t2.getAttributes(), _i4);\n            _a2.objectId = _t2.id, _a2.displayId = _t2.displayId, e.push(_a2);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } catch (i) {\n        return void G.error(\"Unable to get bins for tile\", t.key.id);\n      }\n    }\n  }, {\n    key: \"_getGeohash\",\n    value: function _getGeohash(e, t, s) {\n      var r = {\n        geohashX: 0,\n        geohashY: 0\n      };\n      return d(r, t, e, s), r;\n    }\n  }, {\n    key: \"_getGeohashBounds\",\n    value: function _getGeohashBounds(e) {\n      var t = this._getGeohashLevel(e.key.level),\n        s = [e.extent.xmin, e.extent.ymin, e.extent.xmax, e.extent.ymax],\n        r = S.fromExtent(F.fromBounds(s, this._spatialReference)),\n        i = I(r, this._spatialReference, x.WGS84, {\n          densificationStep: e.resolution * L\n        }),\n        o = u(new _(), i, !1, !1),\n        a = o.coords.filter(function (e, t) {\n          return !(t % 2);\n        }),\n        h = o.coords.filter(function (e, t) {\n          return t % 2;\n        }),\n        n = Math.min.apply(Math, _toConsumableArray(a)),\n        d = Math.min.apply(Math, _toConsumableArray(h)),\n        l = Math.max.apply(Math, _toConsumableArray(a)),\n        g = Math.max.apply(Math, _toConsumableArray(h)),\n        p = this._getGeohash(n, d, t),\n        c = this._getGeohash(l, g, t);\n      return {\n        bounds: s,\n        geohashBounds: {\n          xLL: p.geohashX,\n          yLL: p.geohashY,\n          xTR: c.geohashX,\n          yTR: c.geohashY\n        },\n        level: t\n      };\n    }\n  }, {\n    key: \"_getGeohashLevel\",\n    value: function _getGeohashLevel(e) {\n      return this._schema.params.fixedBinLevel;\n    }\n  }, {\n    key: \"_getTransforms\",\n    value: function _getTransforms(e, t) {\n      var s = {\n          originPosition: \"upperLeft\",\n          scale: [e.resolution, e.resolution],\n          translate: [e.bounds[0], e.bounds[3]]\n        },\n        r = p(t);\n      if (!r) return {\n        tile: s,\n        left: null,\n        right: null\n      };\n      var _r$valid = _slicedToArray(r.valid, 2),\n        i = _r$valid[0],\n        o = _r$valid[1];\n      return {\n        tile: s,\n        left: _objectSpread(_objectSpread({}, s), {}, {\n          translate: [o, e.bounds[3]]\n        }),\n        right: _objectSpread(_objectSpread({}, s), {}, {\n          translate: [i - o + e.bounds[0], e.bounds[3]]\n        })\n      };\n    }\n  }]);\n  return O;\n}(v);\nexport { O as BinStore };","map":{"version":3,"names":["e","has","t","isNone","s","applySome","r","mapOr","i","diff","o","hasDiff","a","GeohashTree","h","setGeohashBuf","n","setGeohashXY","d","create","l","earth","g","getInfo","p","getBoundsOptimizedGeometry","c","convertToGeometry","f","convertFromPolygon","u","OptimizedFeature","m","_","checkProjectionSupport","y","project","I","createDisplayId","b","featureAdapter","j","Store2D","v","FeatureSetReaderJSON","B","x","S","F","G","getLogger","R","L","T","A","D","O","_v","_inherits","_super","_createSuper","_this","_classCallCheck","call","type","events","objectIdField","_geohashLevel","_geohashBuf","_serviceInfo","geometryInfo","_spatialReference","_projectionSupportCheck","WGS84","_bitsets","geohash","getBitset","createBitset","inserted","_createClass","key","value","destroy","_tree","get","_fields","_updateSchema","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this2","wrap","_callee$","_context","prev","next","_schema","_get","_getPrototypeOf","prototype","t0","params","fields","source","storage","filters","_statisticFields","onRelease","displayId","_storage","releaseDisplayId","fixedBinLevel","_rebuildTree","info","targets","name","mesh","stop","updateSchema","_x","_x2","apply","arguments","clear","sweepFeatures","_this3","forEachSet","lookupByDisplayIdUnsafe","_remove","sweepAggregates","onTileData","length","undefined","addOrUpdate","emit","_getTransforms","getCursor","_update","status","Array","_getBinsForTile","fromOptimizedFeatures","_objectSpread","geometryType","attachStorage","end","isRepush","getDisplayId","computed","unset","setComputedAttributes","scale","forEachBin","forEach","_this4","depth","_toFeatureJSON","fromFeatures","globalIdField","forEachInBounds","forEachBounds","_this$geometryInfo","hasM","hasZ","_iterator","_createForOfIteratorHelper","_step","done","readGeometry","err","onTileUpdate","getAggregate","_this5","findIf","getAggregates","_this6","findAllIf","map","bind","id","getFeatureDisplayIdsForAggregate","from","displayIds","getDisplayIdForReferenceId","size","attributes","getAttributes","geometry","getGeometry","centroid","getXHydrated","getYHydrated","removeCursor","isVisible","_setGeohash","insertCursor","set","isWebMercator","radius","Math","floor","PI","atan","exp","_getGeohashBounds","getBins","_iterator2","_step2","tile","getGeometryCentroid","objectId","push","error","_getGeohash","geohashX","geohashY","_getGeohashLevel","level","extent","xmin","ymin","xmax","ymax","fromExtent","fromBounds","densificationStep","resolution","coords","filter","min","_toConsumableArray","max","bounds","geohashBounds","xLL","yLL","xTR","yTR","originPosition","translate","left","right","_r$valid","_slicedToArray","valid","BinStore"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/2d/layers/features/support/BinStore.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../../../geometry.js\";import e from\"../../../../../core/Evented.js\";import has from\"../../../../../core/has.js\";import t from\"../../../../../core/Logger.js\";import{isNone as s,applySome as r,mapOr as i}from\"../../../../../core/maybe.js\";import{diff as o,hasDiff as a}from\"../../../../../core/accessorSupport/diffUtils.js\";import{GeohashTree as h}from\"../../../../../geohash/GeohashTree.js\";import{setGeohashBuf as n,setGeohashXY as d}from\"../../../../../geohash/geohashUtils.js\";import{create as l}from\"../../../../../geometry/support/aaBoundingBox.js\";import{earth as g}from\"../../../../../geometry/support/Ellipsoid.js\";import{getInfo as p}from\"../../../../../geometry/support/spatialReferenceUtils.js\";import{getBoundsOptimizedGeometry as c,convertToGeometry as f,convertFromPolygon as u}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{OptimizedFeature as m}from\"../../../../../layers/graphics/OptimizedFeature.js\";import _ from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{checkProjectionSupport as y,project as I}from\"../../../../../layers/graphics/data/projectionSupport.js\";import{createDisplayId as b}from\"../../../engine/webgl/DisplayId.js\";import{featureAdapter as j}from\"../FeatureStore2D.js\";import{Store2D as v}from\"../Store2D.js\";import{FeatureSetReaderJSON as B}from\"./FeatureSetReaderJSON.js\";import x from\"../../../../../geometry/SpatialReference.js\";import S from\"../../../../../geometry/Polygon.js\";import F from\"../../../../../geometry/Extent.js\";const G=t.getLogger(\"esri.view.2d.layers.features.support.BinStore\"),R=12,L=64,T=l(),A=5;function D(e){return 57.29577951308232*e}class O extends v{constructor(t,s,r,i){super(t,r),this.type=\"bin\",this.events=new e,this.objectIdField=\"aggregateId\",this.featureAdapter=j,this._geohashLevel=A,this._geohashBuf=[],this._serviceInfo=i,this.geometryInfo=t.geometryInfo,this._spatialReference=s,this._projectionSupportCheck=y(s,x.WGS84),this._bitsets.geohash=r.getBitset(r.createBitset()),this._bitsets.inserted=r.getBitset(r.createBitset())}destroy(){this._tree&&this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,t){const r=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch(n){}this._fields=this._schema.params.fields;const i=o(r,t);t&&(!s(i)||e.source||e.storage.filters)?((a(i,\"params.fields\")||a(i,\"params\")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new h(this._statisticFields,this._serviceInfo),this._tree.onRelease=e=>e.displayId&&this._storage.releaseDisplayId(e.displayId),this._geohashLevel=this._schema.params.fixedBinLevel,this._rebuildTree(),has(\"esri-2d-update-debug\")&&G.info(\"Aggregate mesh needs update due to tree changing\")),has(\"esri-2d-update-debug\")&&G.info(\"Aggregate mesh needs update due to tree changing\"),e.targets[t.name]=!0,e.mesh=!1):r&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepAggregates(e,t,s){}onTileData(e,t,r,i,o=!0){if(!this._schema||s(t.addOrUpdate))return t;this.events.emit(\"changed\");const a=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,i)}if(t.status.mesh||!o)return t;const h=new Array;this._getBinsForTile(h,e,a,r),t.addOrUpdate=B.fromOptimizedFeatures(h,{...this._serviceInfo,geometryType:\"esriGeometryPolygon\"}),t.addOrUpdate.attachStorage(r),t.end=!0,t.isRepush||(t.clear=!0);{const s=t.addOrUpdate.getCursor();for(;s.next();){const t=s.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(r,s,t,e.scale)}}return t}forEachBin(e){this._tree.forEach(e)}forEach(e){this._tree.forEach((t=>{if(t.depth!==this._geohashLevel)return;const s=this._toFeatureJSON(t),r=B.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)}))}forEachInBounds(e,t){}forEachBounds(e,t){const{hasM:r,hasZ:i}=this.geometryInfo;for(const o of e){const e=c(T,o.readGeometry(),i,r);s(e)||t(e)}}onTileUpdate(e){}getAggregate(e){const t=b(e,!0),s=this._tree.findIf((e=>e.displayId===t));return r(s,(e=>this._toFeatureJSON(e)))}getAggregates(){return this._tree.findAllIf((e=>e.depth===this._geohashLevel)).map(this._toFeatureJSON.bind(this))}getDisplayId(e){const t=this._tree.findIf((t=>t.id===e));return r(t,(e=>e.displayId))}getFeatureDisplayIdsForAggregate(e){const t=this._tree.findIf((t=>t.id===e));return i(t,[],(e=>Array.from(e.displayIds)))}getDisplayIdForReferenceId(e){const t=this._tree.findIf((t=>1===t.displayIds.size&&t.displayIds.has(e)));return r(t,(e=>e.displayId))}_toFeatureJSON(e){const t=this._spatialReference;return{displayId:e.displayId,attributes:e.getAttributes(),geometry:f(e.getGeometry(t),\"esriGeometryPolygon\",!1,!1),centroid:null}}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),i=this._geohashBuf[2*t],o=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,i,o,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,i=t.isVisible(s);if(i===r.has(s))return;if(!i)return void this._remove(e);const o=e.getXHydrated(),a=e.getYHydrated();if(!this._setGeohash(s,o,a))return;const h=this._geohashBuf[2*s],n=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,o,a,h,n,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const i=D(t/g.radius),o=i-360*Math.floor((i+180)/360),a=D(Math.PI/2-2*Math.atan(Math.exp(-s/g.radius)));n(r,e,a,o,R)}else{const i=I({x:t,y:s},this._spatialReference,x.WGS84);if(!i)return!1;n(r,e,i.y,i.x,R)}return this._bitsets.geohash.set(e),!0}_getBinsForTile(e,t,s,r){try{const i=this._getGeohashBounds(t),o=this._tree.getBins(i);for(const t of o){t.displayId||(t.displayId=r.createDisplayId(!0));let i=null;const o=t.getGeometry(this._spatialReference,s.tile);o||(i=t.getGeometryCentroid(this._spatialReference,s.tile));const a=new m(o,t.getAttributes(),i);a.objectId=t.id,a.displayId=t.displayId,e.push(a)}}catch(i){return void G.error(\"Unable to get bins for tile\",t.key.id)}}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return d(r,t,e,s),r}_getGeohashBounds(e){const t=this._getGeohashLevel(e.key.level),s=[e.extent.xmin,e.extent.ymin,e.extent.xmax,e.extent.ymax],r=S.fromExtent(F.fromBounds(s,this._spatialReference)),i=I(r,this._spatialReference,x.WGS84,{densificationStep:e.resolution*L}),o=u(new _,i,!1,!1),a=o.coords.filter(((e,t)=>!(t%2))),h=o.coords.filter(((e,t)=>t%2)),n=Math.min(...a),d=Math.min(...h),l=Math.max(...a),g=Math.max(...h),p=this._getGeohash(n,d,t),c=this._getGeohash(l,g,t);return{bounds:s,geohashBounds:{xLL:p.geohashX,yLL:p.geohashY,xTR:c.geohashX,yTR:c.geohashY},level:t}}_getGeohashLevel(e){return this._schema.params.fixedBinLevel}_getTransforms(e,t){const s={originPosition:\"upperLeft\",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=p(t);if(!r)return{tile:s,left:null,right:null};const[i,o]=r.valid;return{tile:s,left:{...s,translate:[o,e.bounds[3]]},right:{...s,translate:[i-o+e.bounds[0],e.bounds[3]]}}}}export{O as BinStore};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}