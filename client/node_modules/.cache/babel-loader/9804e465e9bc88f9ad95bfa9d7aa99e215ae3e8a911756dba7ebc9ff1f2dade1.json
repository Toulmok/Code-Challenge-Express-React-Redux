{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport o from \"../../Color.js\";\nimport { toHSV as r, toLAB as e, toLCH as t, toRGB as l } from \"../../core/colorUtils.js\";\nimport { JSONMap as i } from \"../../core/jsonMap.js\";\nconst n = [\"random\", \"ndvi\", \"ndvi2\", \"ndvi3\", \"elevation\", \"gray\", \"hillshade\"],\n  d = [{\n    id: \"aspect_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [190, 190, 190],\n      toColor: [255, 45, 8]\n    }, {\n      fromColor: [255, 45, 8],\n      toColor: [255, 181, 61]\n    }, {\n      fromColor: [255, 181, 61],\n      toColor: [255, 254, 52]\n    }, {\n      fromColor: [255, 254, 52],\n      toColor: [0, 251, 50]\n    }, {\n      fromColor: [0, 251, 50],\n      toColor: [255, 254, 52]\n    }, {\n      fromColor: [0, 253, 255],\n      toColor: [0, 181, 255]\n    }, {\n      fromColor: [0, 181, 255],\n      toColor: [26, 35, 253]\n    }, {\n      fromColor: [26, 35, 253],\n      toColor: [255, 57, 251]\n    }, {\n      fromColor: [255, 57, 251],\n      toColor: [255, 45, 8]\n    }]\n  }, {\n    id: \"blackToWhite_predefined\",\n    fromColor: [0, 0, 0],\n    toColor: [255, 255, 255]\n  }, {\n    id: \"blueBright_predefined\",\n    fromColor: [204, 204, 255],\n    toColor: [0, 0, 224]\n  }, {\n    id: \"blueLightToDark_predefined\",\n    fromColor: [211, 229, 232],\n    toColor: [46, 100, 140]\n  }, {\n    id: \"blueGreenBright_predefined\",\n    fromColor: [203, 245, 234],\n    toColor: [48, 207, 146]\n  }, {\n    id: \"blueGreenLightToDark_predefined\",\n    fromColor: [216, 242, 237],\n    toColor: [21, 79, 74]\n  }, {\n    id: \"brownLightToDark_predefined\",\n    fromColor: [240, 236, 170],\n    toColor: [102, 72, 48]\n  }, {\n    id: \"brownToBlueGreenDivergingBright_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [156, 85, 31],\n      toColor: [255, 255, 191]\n    }, {\n      fromColor: [255, 255, 191],\n      toColor: [33, 130, 145]\n    }]\n  }, {\n    id: \"brownToBlueGreenDivergingDark_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [110, 70, 45],\n      toColor: [204, 204, 102]\n    }, {\n      fromColor: [204, 204, 102],\n      toColor: [48, 100, 102]\n    }]\n  }, {\n    id: \"coefficientBias_predefined\",\n    fromColor: [214, 214, 255],\n    toColor: [0, 57, 148]\n  }, {\n    id: \"coldToHotDiverging_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [69, 117, 181],\n      toColor: [255, 255, 191]\n    }, {\n      fromColor: [255, 255, 191],\n      toColor: [214, 47, 39]\n    }]\n  }, {\n    id: \"conditionNumber_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [0, 97, 0],\n      toColor: [255, 255, 0]\n    }, {\n      fromColor: [255, 255, 0],\n      toColor: [255, 34, 0]\n    }]\n  }, {\n    id: \"cyanToPurple_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [0, 245, 245],\n      toColor: [0, 0, 245]\n    }, {\n      fromColor: [0, 0, 245],\n      toColor: [245, 0, 245]\n    }]\n  }, {\n    id: \"cyanLightToBlueDark_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [182, 237, 240],\n      toColor: [31, 131, 224]\n    }, {\n      fromColor: [31, 131, 224],\n      toColor: [9, 9, 145]\n    }]\n  }, {\n    id: \"distance_predefined\",\n    fromColor: [255, 200, 0],\n    toColor: [0, 0, 255]\n  }, {\n    id: \"elevation1_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [175, 240, 233],\n      toColor: [255, 255, 179]\n    }, {\n      fromColor: [255, 255, 179],\n      toColor: [0, 128, 64]\n    }, {\n      fromColor: [0, 128, 64],\n      toColor: [252, 186, 3]\n    }, {\n      fromColor: [252, 186, 3],\n      toColor: [128, 0, 0]\n    }, {\n      fromColor: [120, 0, 0],\n      toColor: [105, 48, 13]\n    }, {\n      fromColor: [105, 48, 13],\n      toColor: [171, 171, 171]\n    }, {\n      fromColor: [171, 171, 171],\n      toColor: [255, 252, 255]\n    }]\n  }, {\n    id: \"elevation2_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [118, 219, 211],\n      toColor: [255, 255, 199]\n    }, {\n      fromColor: [255, 255, 199],\n      toColor: [255, 255, 128]\n    }, {\n      fromColor: [255, 255, 128],\n      toColor: [217, 194, 121]\n    }, {\n      fromColor: [217, 194, 121],\n      toColor: [135, 96, 38]\n    }, {\n      fromColor: [135, 96, 38],\n      toColor: [150, 150, 181]\n    }, {\n      fromColor: [150, 150, 181],\n      toColor: [181, 150, 181]\n    }, {\n      fromColor: [181, 150, 181],\n      toColor: [255, 252, 255]\n    }]\n  }, {\n    id: \"errors_predefined\",\n    fromColor: [255, 235, 214],\n    toColor: [196, 10, 10]\n  }, {\n    id: \"grayLightToDark_predefined\",\n    fromColor: [219, 219, 219],\n    toColor: [69, 69, 69]\n  }, {\n    id: \"greenBright_predefined\",\n    fromColor: [204, 255, 204],\n    toColor: [14, 204, 14]\n  }, {\n    id: \"greenLightToDark_predefined\",\n    fromColor: [220, 245, 233],\n    toColor: [34, 102, 51]\n  }, {\n    id: \"greenToBlue_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [32, 204, 16],\n      toColor: [0, 242, 242]\n    }, {\n      fromColor: [0, 242, 242],\n      toColor: [2, 33, 227]\n    }]\n  }, {\n    id: \"orangeBright_predefined\",\n    fromColor: [255, 235, 204],\n    toColor: [240, 118, 5]\n  }, {\n    id: \"orangeLightToDark_predefined\",\n    fromColor: [250, 233, 212],\n    toColor: [171, 65, 36]\n  }, {\n    id: \"partialSpectrum_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [242, 241, 162],\n      toColor: [255, 255, 0]\n    }, {\n      fromColor: [255, 255, 0],\n      toColor: [255, 0, 0]\n    }, {\n      fromColor: [252, 3, 69],\n      toColor: [176, 7, 237]\n    }, {\n      fromColor: [176, 7, 237],\n      toColor: [2, 29, 173]\n    }]\n  }, {\n    id: \"partialSpectrum1Diverging_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [135, 38, 38],\n      toColor: [240, 149, 12]\n    }, {\n      fromColor: [240, 149, 12],\n      toColor: [255, 255, 191]\n    }, {\n      fromColor: [255, 255, 191],\n      toColor: [74, 80, 181]\n    }, {\n      fromColor: [74, 80, 181],\n      toColor: [39, 32, 122]\n    }]\n  }, {\n    id: \"partialSpectrum2Diverging_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [115, 77, 42],\n      toColor: [201, 137, 52]\n    }, {\n      fromColor: [201, 137, 52],\n      toColor: [255, 255, 191]\n    }, {\n      fromColor: [255, 255, 191],\n      toColor: [91, 63, 176]\n    }, {\n      fromColor: [91, 63, 176],\n      toColor: [81, 13, 97]\n    }]\n  }, {\n    id: \"pinkToYellowGreenDivergingBright_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [158, 30, 113],\n      toColor: [255, 255, 191]\n    }, {\n      fromColor: [255, 255, 191],\n      toColor: [99, 110, 45]\n    }]\n  }, {\n    id: \"pinkToYellowGreenDivergingDark_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [97, 47, 73],\n      toColor: [204, 204, 102]\n    }, {\n      fromColor: [204, 204, 102],\n      toColor: [22, 59, 15]\n    }]\n  }, {\n    id: \"precipitation_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [194, 82, 60],\n      toColor: [237, 161, 19]\n    }, {\n      fromColor: [237, 161, 19],\n      toColor: [255, 255, 0]\n    }, {\n      fromColor: [255, 255, 0],\n      toColor: [0, 219, 0]\n    }, {\n      fromColor: [0, 219, 0],\n      toColor: [32, 153, 143]\n    }, {\n      fromColor: [32, 153, 143],\n      toColor: [11, 44, 122]\n    }]\n  }, {\n    id: \"prediction_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [40, 146, 199],\n      toColor: [250, 250, 100]\n    }, {\n      fromColor: [250, 250, 100],\n      toColor: [232, 16, 20]\n    }]\n  }, {\n    id: \"purpleBright_predefined\",\n    fromColor: [255, 204, 255],\n    toColor: [199, 0, 199]\n  }, {\n    id: \"purpleToGreenDivergingBright_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [77, 32, 150],\n      toColor: [255, 255, 191]\n    }, {\n      fromColor: [255, 255, 191],\n      toColor: [20, 122, 11]\n    }]\n  }, {\n    id: \"purpleToGreenDivergingDark_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [67, 14, 89],\n      toColor: [204, 204, 102]\n    }, {\n      fromColor: [204, 204, 102],\n      toColor: [24, 79, 15]\n    }]\n  }, {\n    id: \"purpleBlueBright_predefined\",\n    fromColor: [223, 184, 230],\n    toColor: [112, 12, 242]\n  }, {\n    id: \"purpleBlueLightToDark_predefined\",\n    fromColor: [229, 213, 242],\n    toColor: [93, 44, 112]\n  }, {\n    id: \"purpleRedBright_predefined\",\n    fromColor: [255, 204, 225],\n    toColor: [199, 0, 99]\n  }, {\n    id: \"purpleRedLightToDark_predefined\",\n    fromColor: [250, 215, 246],\n    toColor: [143, 17, 57]\n  }, {\n    id: \"redBright_predefined\",\n    fromColor: [255, 204, 204],\n    toColor: [219, 0, 0]\n  }, {\n    id: \"redLightToDark_predefined\",\n    fromColor: [255, 224, 224],\n    toColor: [143, 10, 10]\n  }, {\n    id: \"redToBlueDivergingBright_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [196, 69, 57],\n      toColor: [255, 255, 191]\n    }, {\n      fromColor: [255, 255, 191],\n      toColor: [48, 95, 207]\n    }]\n  }, {\n    id: \"redToBlueDivergingDark_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [107, 13, 13],\n      toColor: [204, 204, 102]\n    }, {\n      fromColor: [204, 204, 102],\n      toColor: [13, 53, 97]\n    }]\n  }, {\n    id: \"redToGreen_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [245, 0, 0],\n      toColor: [245, 245, 0]\n    }, {\n      fromColor: [245, 245, 0],\n      toColor: [0, 245, 0]\n    }]\n  }, {\n    id: \"redToGreenDivergingBright_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [186, 20, 20],\n      toColor: [255, 255, 191]\n    }, {\n      fromColor: [255, 255, 191],\n      toColor: [54, 145, 33]\n    }]\n  }, {\n    id: \"redToGreenDivergingDark_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [97, 21, 13],\n      toColor: [204, 204, 102]\n    }, {\n      fromColor: [204, 204, 102],\n      toColor: [16, 69, 16]\n    }]\n  }, {\n    id: \"slope_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [56, 168, 0],\n      toColor: [255, 255, 0]\n    }, {\n      fromColor: [255, 255, 0],\n      toColor: [255, 0, 0]\n    }]\n  }, {\n    id: \"spectrumFullBright_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [255, 0, 0],\n      toColor: [255, 255, 0]\n    }, {\n      fromColor: [255, 255, 0],\n      toColor: [0, 255, 255]\n    }, {\n      fromColor: [0, 255, 255],\n      toColor: [0, 0, 255]\n    }]\n  }, {\n    id: \"spectrumFullDark_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [153, 0, 0],\n      toColor: [153, 153, 0]\n    }, {\n      fromColor: [153, 153, 0],\n      toColor: [0, 153, 153]\n    }, {\n      fromColor: [0, 153, 153],\n      toColor: [0, 0, 153]\n    }]\n  }, {\n    id: \"spectrumFullLight_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [255, 153, 153],\n      toColor: [255, 255, 153]\n    }, {\n      fromColor: [255, 255, 153],\n      toColor: [153, 255, 255]\n    }, {\n      fromColor: [153, 255, 255],\n      toColor: [153, 153, 255]\n    }]\n  }, {\n    id: \"surface_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [112, 153, 89],\n      toColor: [242, 238, 162]\n    }, {\n      fromColor: [242, 238, 162],\n      toColor: [242, 206, 133]\n    }, {\n      fromColor: [242, 206, 133],\n      toColor: [194, 140, 124]\n    }, {\n      fromColor: [194, 140, 124],\n      toColor: [255, 242, 255]\n    }]\n  }, {\n    id: \"temperature_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [255, 252, 255],\n      toColor: [255, 0, 255]\n    }, {\n      fromColor: [255, 0, 255],\n      toColor: [0, 0, 255]\n    }, {\n      fromColor: [0, 0, 255],\n      toColor: [0, 255, 255]\n    }, {\n      fromColor: [0, 255, 255],\n      toColor: [0, 255, 0]\n    }, {\n      fromColor: [0, 255, 0],\n      toColor: [255, 255, 0]\n    }, {\n      fromColor: [255, 255, 0],\n      toColor: [255, 128, 0]\n    }, {\n      fromColor: [255, 128, 0],\n      toColor: [128, 0, 0]\n    }]\n  }, {\n    id: \"whiteToBlack_predefined\",\n    fromColor: [255, 255, 255],\n    toColor: [0, 0, 0]\n  }, {\n    id: \"yellowToDarkRed_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [255, 255, 128],\n      toColor: [242, 167, 46]\n    }, {\n      fromColor: [242, 167, 46],\n      toColor: [107, 0, 0]\n    }]\n  }, {\n    id: \"yellowToGreenToDarkBlue_predefined\",\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [255, 255, 128],\n      toColor: [56, 224, 9]\n    }, {\n      fromColor: [56, 224, 9],\n      toColor: [26, 147, 171]\n    }, {\n      fromColor: [26, 147, 171],\n      toColor: [12, 16, 120]\n    }]\n  }, {\n    id: \"yellowToRed_predefined\",\n    fromColor: [245, 245, 0],\n    toColor: [255, 0, 0]\n  }, {\n    id: \"yellowGreenBright_predefined\",\n    fromColor: [236, 252, 204],\n    toColor: [157, 204, 16]\n  }, {\n    id: \"yellowGreenLightToDark_predefined\",\n    fromColor: [215, 240, 175],\n    toColor: [96, 107, 45]\n  }],\n  p = {\n    aspect_predefined: \"Aspect\",\n    blackToWhite_predefined: \"Black to White\",\n    blueBright_predefined: \"Blue Bright\",\n    blueLightToDark_predefined: \"Blue Light to Dark\",\n    blueGreenBright_predefined: \"Blue-Green Bright\",\n    blueGreenLightToDark_predefined: \"Blue-Green Light to Dark\",\n    brownLightToDark_predefined: \"Brown Light to Dark\",\n    brownToBlueGreenDivergingBright_predefined: \"Brown to Blue Green Diverging, Bright\",\n    brownToBlueGreenDivergingDark_predefined: \"Brown to Blue Green Diverging, Dark\",\n    coefficientBias_predefined: \"Coefficient Bias\",\n    coldToHotDiverging_predefined: \"Cold to Hot Diverging\",\n    conditionNumber_predefined: \"Condition Number\",\n    cyanToPurple_predefined: \"Cyan to Purple\",\n    cyanLightToBlueDark_predefined: \"Cyan-Light to Blue-Dark\",\n    distance_predefined: \"Distance\",\n    elevation1_predefined: \"Elevation #1\",\n    elevation2_predefined: \"Elevation #2\",\n    errors_predefined: \"Errors\",\n    grayLightToDark_predefined: \"Gray Light to Dark\",\n    greenBright_predefined: \"Green Bright\",\n    greenLightToDark_predefined: \"Green Light to Dark\",\n    greenToBlue_predefined: \"Green to Blue\",\n    orangeBright_predefined: \"Orange Bright\",\n    orangeLightToDark_predefined: \"Orange Light to Dark\",\n    partialSpectrum_predefined: \"Partial Spectrum\",\n    partialSpectrum1Diverging_predefined: \"Partial Spectrum 1 Diverging\",\n    partialSpectrum2Diverging_predefined: \"Partial Spectrum 2 Diverging\",\n    pinkToYellowGreenDivergingBright_predefined: \"Pink to YellowGreen Diverging, Bright\",\n    pinkToYellowGreenDivergingDark_predefined: \"Pink to YellowGreen Diverging, Dark\",\n    precipitation_predefined: \"Precipitation\",\n    prediction_predefined: \"Prediction\",\n    purpleBright_predefined: \"Purple Bright\",\n    purpleToGreenDivergingBright_predefined: \"Purple to Green Diverging, Bright\",\n    purpleToGreenDivergingDark_predefined: \"Purple to Green Diverging, Dark\",\n    purpleBlueBright_predefined: \"Purple-Blue Bright\",\n    purpleBlueLightToDark_predefined: \"Purple-Blue Light to Dark\",\n    purpleRedBright_predefined: \"Purple-Red Bright\",\n    purpleRedLightToDark_predefined: \"Purple-Red Light to Dark\",\n    redBright_predefined: \"Red Bright\",\n    redLightToDark_predefined: \"Red Light to Dark\",\n    redToBlueDivergingBright_predefined: \"Red to Blue Diverging, Bright\",\n    redToBlueDivergingDark_predefined: \"Red to Blue Diverging, Dark\",\n    redToGreen_predefined: \"Red to Green\",\n    redToGreenDivergingBright_predefined: \"Red to Green Diverging, Bright\",\n    redToGreenDivergingDark_predefined: \"Red to Green Diverging, Dark\",\n    slope_predefined: \"Slope\",\n    spectrumFullBright_predefined: \"Spectrum-Full Bright\",\n    spectrumFullDark_predefined: \"Spectrum-Full Dark\",\n    spectrumFullLight_predefined: \"Spectrum-Full Light\",\n    surface_predefined: \"Surface\",\n    temperature_predefined: \"Temperature\",\n    whiteToBlack_predefined: \"White to Black\",\n    yellowToDarkRed_predefined: \"Yellow to Dark Red\",\n    yellowToGreenToDarkBlue_predefined: \"Yellow to Green to Dark Blue\",\n    yellowToRed_predefined: \"Yellow to Red\",\n    yellowGreenBright_predefined: \"Yellow-Green Bright\",\n    yellowGreenLightToDark_predefined: \"Yellow-Green Light to Dark\"\n  },\n  a = new i({\n    Aspect: \"aspect\",\n    \"Black to White\": \"black-to-white\",\n    \"Blue Bright\": \"blue-bright\",\n    \"Blue Light to Dark\": \"blue-light-to-dark\",\n    \"Blue-Green Bright\": \"blue-green-bright\",\n    \"Blue-Green Light to Dark\": \"blue-green-light-to-dark\",\n    \"Brown Light to Dark\": \"brown-light-to-dark\",\n    \"Brown to Blue Green Diverging, Bright\": \"brown-to-blue-green-diverging-right\",\n    \"Brown to Blue Green Diverging, Dark\": \"brown-to-blue-green-diverging-dark\",\n    \"Coefficient Bias\": \"coefficient-bias\",\n    \"Cold to Hot Diverging\": \"cold-to-hot-diverging\",\n    \"Condition Number\": \"condition-number\",\n    \"Cyan to Purple\": \"cyan-to-purple\",\n    \"Cyan-Light to Blue-Dark\": \"cyan-light-to-blue-dark\",\n    Distance: \"distance\",\n    \"Elevation #1\": \"elevation1\",\n    \"Elevation #2\": \"elevation2\",\n    Errors: \"errors\",\n    \"Gray Light to Dark\": \"gray-light-to-dark\",\n    \"Green Bright\": \"green-bright\",\n    \"Green Light to Dark\": \"green-light-to-dark\",\n    \"Green to Blue\": \"green-to-blue\",\n    \"Orange Bright\": \"orange-bright\",\n    \"Orange Light to Dark\": \"orange-light-to-dark\",\n    \"Partial Spectrum\": \"partial-spectrum\",\n    \"Partial Spectrum 1 Diverging\": \"partial-spectrum-1-diverging\",\n    \"Partial Spectrum 2 Diverging\": \"partial-spectrum-2-diverging\",\n    \"Pink to YellowGreen Diverging, Bright\": \"pink-to-yellow-green-diverging-bright\",\n    \"Pink to YellowGreen Diverging, Dark\": \"pink-to-yellow-green-diverging-dark\",\n    Precipitation: \"precipitation\",\n    Prediction: \"prediction\",\n    \"urple Bright\": \"purple-bright\",\n    \"Purple to Green Diverging, Bright\": \"purple-to-green-diverging-bright\",\n    \"Purple to Green Diverging, Dark\": \"purple-to-green-diverging-dark\",\n    \"Purple-Blue Bright\": \"purple-blue-bright\",\n    \"Purple-Blue Light to Dark\": \"purple-blue-light-to-dark\",\n    \"Purple-Red Bright\": \"purple-red-bright\",\n    \"Purple-Red Light to Dark\": \"purple-red-light-to-dark\",\n    \"Red Bright\": \"red-bright\",\n    \"Red Light to Dark\": \"red-light-to-dark\",\n    \"Red to Blue Diverging, Bright\": \"red-to-blue-diverging-bright\",\n    \"Red to Blue Diverging, Dark\": \"red-to-blue-diverging-dark\",\n    \"Red to Green\": \"red-to-green\",\n    \"Red to Green Diverging, Bright\": \"red-to-green-diverging-bright\",\n    \"Red to Green Diverging, Dark\": \"red-to-green-diverging-dark\",\n    Slope: \"slope\",\n    \"Spectrum-Full Bright\": \"spectrum-full-bright\",\n    \"Spectrum-Full Dark\": \"spectrum-full-dark\",\n    \"Spectrum-Full Light\": \"spectrum-full-light\",\n    Surface: \"surface\",\n    Temperature: \"temperature\",\n    \"White to Black\": \"white-to-black\",\n    \"Yellow to Dark Red\": \"yellow-to-dark-red\",\n    \"Yellow to Green to Dark Blue\": \"yellow-to-green-to-dark-blue\",\n    \"Yellow to Red\": \"yellow-to-red\",\n    \"Yellow-Green Bright\": \"yellow-green-bright\",\n    \"Yellow-Green Light to Dark\": \"yellow-green-light-to-dark\"\n  });\nfunction g(o, r) {\n  if (!o || !r || o.length !== r.length) return !1;\n  for (let e = 0; e < o.length; e++) if (o[e] > r[e] + 2 || o[e] < r[e] - 2) return !1;\n  return !0;\n}\nfunction f(r, e) {\n  if (!r) return;\n  const t = e || d;\n  let l = null;\n  return \"algorithmic\" === r.type ? t.some(o => {\n    if (g(r.fromColor.toRgb(), o.fromColor) && g(r.toColor.toRgb(), o.toColor)) return l = o.id, !0;\n  }) : \"multipart\" === r.type && t.some(e => {\n    const t = r.colorRamps,\n      i = e.colorRamps;\n    if (t && i && t.length === i.length && !i.some((r, e) => {\n      if (!g(t[e].fromColor.toRgb(), new o(r.fromColor).toRgb()) || !g(t[e].toColor.toRgb(), new o(r.toColor).toRgb())) return !0;\n    })) {\n      if (l) return !0;\n      l = e.id;\n    }\n  }), l;\n}\nfunction C(o) {\n  const r = f(o);\n  return r ? p[r] : null;\n}\nfunction m(o) {\n  const r = a.toJSON(o),\n    e = Object.entries(p).find(o => o[1] === r)?.[0],\n    t = d.find(o => o.id === e);\n  return t ? t.colorRamps ? {\n    type: \"multipart\",\n    colorRamps: t.colorRamps.map(o => ({\n      type: \"algorithmic\",\n      algorithm: \"esriCIELabAlgorithm\",\n      fromColor: o.fromColor,\n      toColor: o.toColor\n    }))\n  } : {\n    type: \"algorithmic\",\n    algorithm: \"esriCIELabAlgorithm\",\n    fromColor: t.fromColor,\n    toColor: t.toColor\n  } : null;\n}\nfunction u(o) {\n  const r = (o = o || {}).numColors || 256,\n    e = o.distanceOffset || 0,\n    t = null != o.isCustomInterval ? o.isCustomInterval : null !== o.distanceInterval && o.distanceInterval !== 1 / (r - 1),\n    l = o.distanceInterval || 1 / (r - 1);\n  return {\n    ...o,\n    numColors: r,\n    distanceOffset: e,\n    interpolateAlpha: !!o.interpolateAlpha,\n    distanceInterval: l,\n    isCustomInterval: t,\n    weights: o.weights\n  };\n}\nfunction h(o, r, e) {\n  const {\n      numColors: t,\n      distanceOffset: l,\n      distanceInterval: i,\n      isCustomInterval: n\n    } = e,\n    d = 0 === o.s,\n    p = 0 === r.s;\n  let a = o.h,\n    g = r.h;\n  d && !p ? a = g : p && !d && (r = {\n    ...r,\n    h: a\n  }, g = a);\n  let f,\n    C = Math.abs(g - a);\n  const m = 360;\n  C < m / 2 ? f = (g - a) * i : (C = m - C, f = a > g ? C * i : -C * i);\n  const u = (r.s - o.s) * i,\n    h = (r.v - o.v) * i;\n  let {\n      s: c,\n      v: s\n    } = o,\n    D = a;\n  if (l) {\n    const o = l / i;\n    D = (D + o * f + m) % m, c += o * u, s += o * h;\n  }\n  const B = [];\n  for (let k = 0; k < t - 1; k++) B.push({\n    h: D,\n    s: c,\n    v: s\n  }), D = (D + f + m) % m, c += u, s += h;\n  return B.push(n ? {\n    h: D,\n    s: c,\n    v: s\n  } : r), B;\n}\nfunction c(o, r, e) {\n  const {\n    numColors: t,\n    distanceOffset: l,\n    distanceInterval: i,\n    isCustomInterval: n\n  } = e;\n  let {\n    l: d,\n    a: p,\n    b: a\n  } = o;\n  const g = (r.l - d) * i,\n    f = (r.a - p) * i,\n    C = (r.b - a) * i,\n    m = [];\n  if (l) {\n    const o = l / i;\n    d += o * g, p += o * f, a += o * C;\n  }\n  for (let u = 0; u < t - 1; u++) m.push({\n    l: d,\n    a: p,\n    b: a\n  }), d += g, p += f, a += C;\n  return m.push(n ? {\n    l: d,\n    a: p,\n    b: a\n  } : r), m;\n}\nfunction s(o, r, e) {\n  const {\n      numColors: t,\n      distanceOffset: l,\n      distanceInterval: i,\n      isCustomInterval: n\n    } = e,\n    d = o.h,\n    p = r.h,\n    a = 2 * Math.PI;\n  let g;\n  if (d <= p) {\n    const o = p - d,\n      r = p - d - a;\n    g = Math.abs(r) < Math.abs(o) ? r : o;\n  } else {\n    const o = p + a - d,\n      r = p - d;\n    g = Math.abs(r) < Math.abs(o) ? r : o;\n  }\n  const f = g * i,\n    C = (r.l - o.l) * i,\n    m = (r.c - o.c) * i;\n  let {\n    l: u,\n    c: h,\n    h: c\n  } = o;\n  if (l) {\n    const o = l / i;\n    u += o * C, h += o * m, c = (c + o * f + a) % a;\n  }\n  const s = [];\n  for (let D = 0; D < t - 1; D++) s.push({\n    l: u,\n    c: h,\n    h: c\n  }), u += C, h += m, c = (c + f + a) % a;\n  return s.push(n ? {\n    l: u,\n    c: h,\n    h: c\n  } : r), s;\n}\nfunction D(o, i) {\n  let {\n    fromColor: n,\n    toColor: d\n  } = o;\n  3 === n.length && (n = n.concat([255])), 3 === d.length && (d = d.concat([255]));\n  const p = o.algorithm || \"esriCIELabAlgorithm\",\n    a = u(i),\n    {\n      numColors: g,\n      distanceOffset: f,\n      isCustomInterval: C,\n      interpolateAlpha: m\n    } = a;\n  if (1 === g && 0 === f) return [n];\n  if (2 === g && 0 === f && !C) return [n, d];\n  const D = {\n      r: n[0],\n      g: n[1],\n      b: n[2]\n    },\n    B = {\n      r: d[0],\n      g: d[1],\n      b: d[2]\n    },\n    k = \"esriCIELabAlgorithm\" === p ? c(e(D), e(B), a) : \"esriHSVAlgorithm\" === p ? h(r(D), r(B), a) : s(t(D), t(B), a),\n    _ = [],\n    v = n[3] ?? 255,\n    R = ((d[3] ?? 255) - v) / (g - 1);\n  for (let r = 0; r < g; r++) {\n    const {\n        r: o,\n        g: e,\n        b: t\n      } = l(k[r]),\n      i = m ? Math.round(v + R * r) : 255;\n    _.push([o, e, t, i]);\n  }\n  return _;\n}\nfunction B(o, r) {\n  const {\n    numColors: e,\n    interpolateAlpha: t\n  } = u(r);\n  let l = r?.weights;\n  const {\n    colorRamps: i\n  } = o;\n  if (l) {\n    const o = l.reduce((o, r) => o + r);\n    l = l.map(r => r / o);\n  } else {\n    l = [];\n    for (let o = 0; o < i.length; o++) l[o] = 1 / i.length;\n  }\n  const n = [];\n  let d = 0,\n    p = 0;\n  const a = 1 / (e - 1);\n  let g = !1;\n  for (let C = 0; C < i.length; C++) {\n    let o = g ? 0 : d * a - p,\n      r = C === i.length - 1 ? e - 1 - d : (l[C] - o) / a;\n    if (g = Math.ceil(r) === r, r = Math.ceil(r), 0 === r) continue;\n    o /= l[C];\n    const f = D(i[C], {\n      numColors: r,\n      interpolateAlpha: t,\n      distanceOffset: o,\n      distanceInterval: a / l[C]\n    });\n    d += f.length, n.push(...f), p += l[C];\n  }\n  const f = [...i[i.length - 1].toColor];\n  return 3 === f.length && f.push(255), n.push(f), n;\n}\nfunction k(o, r) {\n  const e = \"toJSON\" in o ? o.toJSON() : o;\n  return \"multipart\" === e.type ? B(e, r) : D(e, r);\n}\nfunction _(o, r) {\n  const e = k(o, r),\n    t = r?.interpolateAlpha;\n  return e.forEach((o, r) => {\n    o.unshift(r), t || o.pop();\n  }), e;\n}\nfunction v(o) {\n  const r = C(o);\n  if (o) {\n    if (\"algorithmic\" === o.type) return {\n      ...R(o),\n      Name: r\n    };\n    if (o.colorRamps) {\n      const e = o.colorRamps.map(R);\n      return {\n        type: \"MultiPartColorRamp\",\n        NumColorRamps: e.length,\n        ArrayOfColorRamp: e,\n        Name: r\n      };\n    }\n  }\n}\nfunction R(o) {\n  if (!o) return;\n  return {\n    Algorithm: o.toJSON()?.Algorithm || \"esriHSVAlgorithm\",\n    type: \"AlgorithmicColorRamp\",\n    FromColor: b(o.fromColor),\n    ToColor: b(o.toColor)\n  };\n}\nfunction b(o) {\n  const e = r(o);\n  return {\n    type: \"HsvColor\",\n    Hue: e.h,\n    Saturation: e.s,\n    Value: e.v,\n    AlphaValue: 255\n  };\n}\nfunction y(o) {\n  const r = o.reverse().map(o => {\n    const r = o.toString(16);\n    return r.length < 2 ? \"0\" + r : r;\n  });\n  return 4294967295 & Number.parseInt(r.join(\"\"), 16);\n}\nexport { p as PREDEFINED_COLOR_RAMP_NAME_MAP, d as PREDEFINED_JSON_COLOR_RAMPS, a as colorRampDict, _ as convertColorRampToColormap, k as convertColorRampToColors, f as getColorRampId, m as getColorRampJSON, C as getColorRampName, v as getRFxArgColorRampValue, n as rasterColormapNames, y as rgbaConvertTo32Bit };","map":{"version":3,"names":["o","toHSV","r","toLAB","e","toLCH","t","toRGB","l","JSONMap","i","n","d","id","type","colorRamps","fromColor","toColor","p","aspect_predefined","blackToWhite_predefined","blueBright_predefined","blueLightToDark_predefined","blueGreenBright_predefined","blueGreenLightToDark_predefined","brownLightToDark_predefined","brownToBlueGreenDivergingBright_predefined","brownToBlueGreenDivergingDark_predefined","coefficientBias_predefined","coldToHotDiverging_predefined","conditionNumber_predefined","cyanToPurple_predefined","cyanLightToBlueDark_predefined","distance_predefined","elevation1_predefined","elevation2_predefined","errors_predefined","grayLightToDark_predefined","greenBright_predefined","greenLightToDark_predefined","greenToBlue_predefined","orangeBright_predefined","orangeLightToDark_predefined","partialSpectrum_predefined","partialSpectrum1Diverging_predefined","partialSpectrum2Diverging_predefined","pinkToYellowGreenDivergingBright_predefined","pinkToYellowGreenDivergingDark_predefined","precipitation_predefined","prediction_predefined","purpleBright_predefined","purpleToGreenDivergingBright_predefined","purpleToGreenDivergingDark_predefined","purpleBlueBright_predefined","purpleBlueLightToDark_predefined","purpleRedBright_predefined","purpleRedLightToDark_predefined","redBright_predefined","redLightToDark_predefined","redToBlueDivergingBright_predefined","redToBlueDivergingDark_predefined","redToGreen_predefined","redToGreenDivergingBright_predefined","redToGreenDivergingDark_predefined","slope_predefined","spectrumFullBright_predefined","spectrumFullDark_predefined","spectrumFullLight_predefined","surface_predefined","temperature_predefined","whiteToBlack_predefined","yellowToDarkRed_predefined","yellowToGreenToDarkBlue_predefined","yellowToRed_predefined","yellowGreenBright_predefined","yellowGreenLightToDark_predefined","a","Aspect","Distance","Errors","Precipitation","Prediction","Slope","Surface","Temperature","g","length","f","some","toRgb","C","m","toJSON","Object","entries","find","map","algorithm","u","numColors","distanceOffset","isCustomInterval","distanceInterval","interpolateAlpha","weights","h","s","Math","abs","v","c","D","B","k","push","b","PI","concat","_","R","round","reduce","ceil","forEach","unshift","pop","Name","NumColorRamps","ArrayOfColorRamp","Algorithm","FromColor","ToColor","Hue","Saturation","Value","AlphaValue","y","reverse","toString","Number","parseInt","join","PREDEFINED_COLOR_RAMP_NAME_MAP","PREDEFINED_JSON_COLOR_RAMPS","colorRampDict","convertColorRampToColormap","convertColorRampToColors","getColorRampId","getColorRampJSON","getColorRampName","getRFxArgColorRampValue","rasterColormapNames","rgbaConvertTo32Bit"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/renderers/support/colorRampUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport o from\"../../Color.js\";import{toHSV as r,toLAB as e,toLCH as t,toRGB as l}from\"../../core/colorUtils.js\";import{JSONMap as i}from\"../../core/jsonMap.js\";const n=[\"random\",\"ndvi\",\"ndvi2\",\"ndvi3\",\"elevation\",\"gray\",\"hillshade\"],d=[{id:\"aspect_predefined\",type:\"multipart\",colorRamps:[{fromColor:[190,190,190],toColor:[255,45,8]},{fromColor:[255,45,8],toColor:[255,181,61]},{fromColor:[255,181,61],toColor:[255,254,52]},{fromColor:[255,254,52],toColor:[0,251,50]},{fromColor:[0,251,50],toColor:[255,254,52]},{fromColor:[0,253,255],toColor:[0,181,255]},{fromColor:[0,181,255],toColor:[26,35,253]},{fromColor:[26,35,253],toColor:[255,57,251]},{fromColor:[255,57,251],toColor:[255,45,8]}]},{id:\"blackToWhite_predefined\",fromColor:[0,0,0],toColor:[255,255,255]},{id:\"blueBright_predefined\",fromColor:[204,204,255],toColor:[0,0,224]},{id:\"blueLightToDark_predefined\",fromColor:[211,229,232],toColor:[46,100,140]},{id:\"blueGreenBright_predefined\",fromColor:[203,245,234],toColor:[48,207,146]},{id:\"blueGreenLightToDark_predefined\",fromColor:[216,242,237],toColor:[21,79,74]},{id:\"brownLightToDark_predefined\",fromColor:[240,236,170],toColor:[102,72,48]},{id:\"brownToBlueGreenDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[156,85,31],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[33,130,145]}]},{id:\"brownToBlueGreenDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[110,70,45],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[48,100,102]}]},{id:\"coefficientBias_predefined\",fromColor:[214,214,255],toColor:[0,57,148]},{id:\"coldToHotDiverging_predefined\",type:\"multipart\",colorRamps:[{fromColor:[69,117,181],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[214,47,39]}]},{id:\"conditionNumber_predefined\",type:\"multipart\",colorRamps:[{fromColor:[0,97,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,34,0]}]},{id:\"cyanToPurple_predefined\",type:\"multipart\",colorRamps:[{fromColor:[0,245,245],toColor:[0,0,245]},{fromColor:[0,0,245],toColor:[245,0,245]}]},{id:\"cyanLightToBlueDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[182,237,240],toColor:[31,131,224]},{fromColor:[31,131,224],toColor:[9,9,145]}]},{id:\"distance_predefined\",fromColor:[255,200,0],toColor:[0,0,255]},{id:\"elevation1_predefined\",type:\"multipart\",colorRamps:[{fromColor:[175,240,233],toColor:[255,255,179]},{fromColor:[255,255,179],toColor:[0,128,64]},{fromColor:[0,128,64],toColor:[252,186,3]},{fromColor:[252,186,3],toColor:[128,0,0]},{fromColor:[120,0,0],toColor:[105,48,13]},{fromColor:[105,48,13],toColor:[171,171,171]},{fromColor:[171,171,171],toColor:[255,252,255]}]},{id:\"elevation2_predefined\",type:\"multipart\",colorRamps:[{fromColor:[118,219,211],toColor:[255,255,199]},{fromColor:[255,255,199],toColor:[255,255,128]},{fromColor:[255,255,128],toColor:[217,194,121]},{fromColor:[217,194,121],toColor:[135,96,38]},{fromColor:[135,96,38],toColor:[150,150,181]},{fromColor:[150,150,181],toColor:[181,150,181]},{fromColor:[181,150,181],toColor:[255,252,255]}]},{id:\"errors_predefined\",fromColor:[255,235,214],toColor:[196,10,10]},{id:\"grayLightToDark_predefined\",fromColor:[219,219,219],toColor:[69,69,69]},{id:\"greenBright_predefined\",fromColor:[204,255,204],toColor:[14,204,14]},{id:\"greenLightToDark_predefined\",fromColor:[220,245,233],toColor:[34,102,51]},{id:\"greenToBlue_predefined\",type:\"multipart\",colorRamps:[{fromColor:[32,204,16],toColor:[0,242,242]},{fromColor:[0,242,242],toColor:[2,33,227]}]},{id:\"orangeBright_predefined\",fromColor:[255,235,204],toColor:[240,118,5]},{id:\"orangeLightToDark_predefined\",fromColor:[250,233,212],toColor:[171,65,36]},{id:\"partialSpectrum_predefined\",type:\"multipart\",colorRamps:[{fromColor:[242,241,162],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]},{fromColor:[252,3,69],toColor:[176,7,237]},{fromColor:[176,7,237],toColor:[2,29,173]}]},{id:\"partialSpectrum1Diverging_predefined\",type:\"multipart\",colorRamps:[{fromColor:[135,38,38],toColor:[240,149,12]},{fromColor:[240,149,12],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[74,80,181]},{fromColor:[74,80,181],toColor:[39,32,122]}]},{id:\"partialSpectrum2Diverging_predefined\",type:\"multipart\",colorRamps:[{fromColor:[115,77,42],toColor:[201,137,52]},{fromColor:[201,137,52],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[91,63,176]},{fromColor:[91,63,176],toColor:[81,13,97]}]},{id:\"pinkToYellowGreenDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[158,30,113],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[99,110,45]}]},{id:\"pinkToYellowGreenDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[97,47,73],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[22,59,15]}]},{id:\"precipitation_predefined\",type:\"multipart\",colorRamps:[{fromColor:[194,82,60],toColor:[237,161,19]},{fromColor:[237,161,19],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[0,219,0]},{fromColor:[0,219,0],toColor:[32,153,143]},{fromColor:[32,153,143],toColor:[11,44,122]}]},{id:\"prediction_predefined\",type:\"multipart\",colorRamps:[{fromColor:[40,146,199],toColor:[250,250,100]},{fromColor:[250,250,100],toColor:[232,16,20]}]},{id:\"purpleBright_predefined\",fromColor:[255,204,255],toColor:[199,0,199]},{id:\"purpleToGreenDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[77,32,150],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[20,122,11]}]},{id:\"purpleToGreenDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[67,14,89],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[24,79,15]}]},{id:\"purpleBlueBright_predefined\",fromColor:[223,184,230],toColor:[112,12,242]},{id:\"purpleBlueLightToDark_predefined\",fromColor:[229,213,242],toColor:[93,44,112]},{id:\"purpleRedBright_predefined\",fromColor:[255,204,225],toColor:[199,0,99]},{id:\"purpleRedLightToDark_predefined\",fromColor:[250,215,246],toColor:[143,17,57]},{id:\"redBright_predefined\",fromColor:[255,204,204],toColor:[219,0,0]},{id:\"redLightToDark_predefined\",fromColor:[255,224,224],toColor:[143,10,10]},{id:\"redToBlueDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[196,69,57],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[48,95,207]}]},{id:\"redToBlueDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[107,13,13],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[13,53,97]}]},{id:\"redToGreen_predefined\",type:\"multipart\",colorRamps:[{fromColor:[245,0,0],toColor:[245,245,0]},{fromColor:[245,245,0],toColor:[0,245,0]}]},{id:\"redToGreenDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[186,20,20],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[54,145,33]}]},{id:\"redToGreenDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[97,21,13],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[16,69,16]}]},{id:\"slope_predefined\",type:\"multipart\",colorRamps:[{fromColor:[56,168,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]},{id:\"spectrumFullBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,0,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[0,0,255]}]},{id:\"spectrumFullDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[153,0,0],toColor:[153,153,0]},{fromColor:[153,153,0],toColor:[0,153,153]},{fromColor:[0,153,153],toColor:[0,0,153]}]},{id:\"spectrumFullLight_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,153,153],toColor:[255,255,153]},{fromColor:[255,255,153],toColor:[153,255,255]},{fromColor:[153,255,255],toColor:[153,153,255]}]},{id:\"surface_predefined\",type:\"multipart\",colorRamps:[{fromColor:[112,153,89],toColor:[242,238,162]},{fromColor:[242,238,162],toColor:[242,206,133]},{fromColor:[242,206,133],toColor:[194,140,124]},{fromColor:[194,140,124],toColor:[255,242,255]}]},{id:\"temperature_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,252,255],toColor:[255,0,255]},{fromColor:[255,0,255],toColor:[0,0,255]},{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[0,255,0]},{fromColor:[0,255,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,128,0]},{fromColor:[255,128,0],toColor:[128,0,0]}]},{id:\"whiteToBlack_predefined\",fromColor:[255,255,255],toColor:[0,0,0]},{id:\"yellowToDarkRed_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,255,128],toColor:[242,167,46]},{fromColor:[242,167,46],toColor:[107,0,0]}]},{id:\"yellowToGreenToDarkBlue_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,255,128],toColor:[56,224,9]},{fromColor:[56,224,9],toColor:[26,147,171]},{fromColor:[26,147,171],toColor:[12,16,120]}]},{id:\"yellowToRed_predefined\",fromColor:[245,245,0],toColor:[255,0,0]},{id:\"yellowGreenBright_predefined\",fromColor:[236,252,204],toColor:[157,204,16]},{id:\"yellowGreenLightToDark_predefined\",fromColor:[215,240,175],toColor:[96,107,45]}],p={aspect_predefined:\"Aspect\",blackToWhite_predefined:\"Black to White\",blueBright_predefined:\"Blue Bright\",blueLightToDark_predefined:\"Blue Light to Dark\",blueGreenBright_predefined:\"Blue-Green Bright\",blueGreenLightToDark_predefined:\"Blue-Green Light to Dark\",brownLightToDark_predefined:\"Brown Light to Dark\",brownToBlueGreenDivergingBright_predefined:\"Brown to Blue Green Diverging, Bright\",brownToBlueGreenDivergingDark_predefined:\"Brown to Blue Green Diverging, Dark\",coefficientBias_predefined:\"Coefficient Bias\",coldToHotDiverging_predefined:\"Cold to Hot Diverging\",conditionNumber_predefined:\"Condition Number\",cyanToPurple_predefined:\"Cyan to Purple\",cyanLightToBlueDark_predefined:\"Cyan-Light to Blue-Dark\",distance_predefined:\"Distance\",elevation1_predefined:\"Elevation #1\",elevation2_predefined:\"Elevation #2\",errors_predefined:\"Errors\",grayLightToDark_predefined:\"Gray Light to Dark\",greenBright_predefined:\"Green Bright\",greenLightToDark_predefined:\"Green Light to Dark\",greenToBlue_predefined:\"Green to Blue\",orangeBright_predefined:\"Orange Bright\",orangeLightToDark_predefined:\"Orange Light to Dark\",partialSpectrum_predefined:\"Partial Spectrum\",partialSpectrum1Diverging_predefined:\"Partial Spectrum 1 Diverging\",partialSpectrum2Diverging_predefined:\"Partial Spectrum 2 Diverging\",pinkToYellowGreenDivergingBright_predefined:\"Pink to YellowGreen Diverging, Bright\",pinkToYellowGreenDivergingDark_predefined:\"Pink to YellowGreen Diverging, Dark\",precipitation_predefined:\"Precipitation\",prediction_predefined:\"Prediction\",purpleBright_predefined:\"Purple Bright\",purpleToGreenDivergingBright_predefined:\"Purple to Green Diverging, Bright\",purpleToGreenDivergingDark_predefined:\"Purple to Green Diverging, Dark\",purpleBlueBright_predefined:\"Purple-Blue Bright\",purpleBlueLightToDark_predefined:\"Purple-Blue Light to Dark\",purpleRedBright_predefined:\"Purple-Red Bright\",purpleRedLightToDark_predefined:\"Purple-Red Light to Dark\",redBright_predefined:\"Red Bright\",redLightToDark_predefined:\"Red Light to Dark\",redToBlueDivergingBright_predefined:\"Red to Blue Diverging, Bright\",redToBlueDivergingDark_predefined:\"Red to Blue Diverging, Dark\",redToGreen_predefined:\"Red to Green\",redToGreenDivergingBright_predefined:\"Red to Green Diverging, Bright\",redToGreenDivergingDark_predefined:\"Red to Green Diverging, Dark\",slope_predefined:\"Slope\",spectrumFullBright_predefined:\"Spectrum-Full Bright\",spectrumFullDark_predefined:\"Spectrum-Full Dark\",spectrumFullLight_predefined:\"Spectrum-Full Light\",surface_predefined:\"Surface\",temperature_predefined:\"Temperature\",whiteToBlack_predefined:\"White to Black\",yellowToDarkRed_predefined:\"Yellow to Dark Red\",yellowToGreenToDarkBlue_predefined:\"Yellow to Green to Dark Blue\",yellowToRed_predefined:\"Yellow to Red\",yellowGreenBright_predefined:\"Yellow-Green Bright\",yellowGreenLightToDark_predefined:\"Yellow-Green Light to Dark\"},a=new i({Aspect:\"aspect\",\"Black to White\":\"black-to-white\",\"Blue Bright\":\"blue-bright\",\"Blue Light to Dark\":\"blue-light-to-dark\",\"Blue-Green Bright\":\"blue-green-bright\",\"Blue-Green Light to Dark\":\"blue-green-light-to-dark\",\"Brown Light to Dark\":\"brown-light-to-dark\",\"Brown to Blue Green Diverging, Bright\":\"brown-to-blue-green-diverging-right\",\"Brown to Blue Green Diverging, Dark\":\"brown-to-blue-green-diverging-dark\",\"Coefficient Bias\":\"coefficient-bias\",\"Cold to Hot Diverging\":\"cold-to-hot-diverging\",\"Condition Number\":\"condition-number\",\"Cyan to Purple\":\"cyan-to-purple\",\"Cyan-Light to Blue-Dark\":\"cyan-light-to-blue-dark\",Distance:\"distance\",\"Elevation #1\":\"elevation1\",\"Elevation #2\":\"elevation2\",Errors:\"errors\",\"Gray Light to Dark\":\"gray-light-to-dark\",\"Green Bright\":\"green-bright\",\"Green Light to Dark\":\"green-light-to-dark\",\"Green to Blue\":\"green-to-blue\",\"Orange Bright\":\"orange-bright\",\"Orange Light to Dark\":\"orange-light-to-dark\",\"Partial Spectrum\":\"partial-spectrum\",\"Partial Spectrum 1 Diverging\":\"partial-spectrum-1-diverging\",\"Partial Spectrum 2 Diverging\":\"partial-spectrum-2-diverging\",\"Pink to YellowGreen Diverging, Bright\":\"pink-to-yellow-green-diverging-bright\",\"Pink to YellowGreen Diverging, Dark\":\"pink-to-yellow-green-diverging-dark\",Precipitation:\"precipitation\",Prediction:\"prediction\",\"urple Bright\":\"purple-bright\",\"Purple to Green Diverging, Bright\":\"purple-to-green-diverging-bright\",\"Purple to Green Diverging, Dark\":\"purple-to-green-diverging-dark\",\"Purple-Blue Bright\":\"purple-blue-bright\",\"Purple-Blue Light to Dark\":\"purple-blue-light-to-dark\",\"Purple-Red Bright\":\"purple-red-bright\",\"Purple-Red Light to Dark\":\"purple-red-light-to-dark\",\"Red Bright\":\"red-bright\",\"Red Light to Dark\":\"red-light-to-dark\",\"Red to Blue Diverging, Bright\":\"red-to-blue-diverging-bright\",\"Red to Blue Diverging, Dark\":\"red-to-blue-diverging-dark\",\"Red to Green\":\"red-to-green\",\"Red to Green Diverging, Bright\":\"red-to-green-diverging-bright\",\"Red to Green Diverging, Dark\":\"red-to-green-diverging-dark\",Slope:\"slope\",\"Spectrum-Full Bright\":\"spectrum-full-bright\",\"Spectrum-Full Dark\":\"spectrum-full-dark\",\"Spectrum-Full Light\":\"spectrum-full-light\",Surface:\"surface\",Temperature:\"temperature\",\"White to Black\":\"white-to-black\",\"Yellow to Dark Red\":\"yellow-to-dark-red\",\"Yellow to Green to Dark Blue\":\"yellow-to-green-to-dark-blue\",\"Yellow to Red\":\"yellow-to-red\",\"Yellow-Green Bright\":\"yellow-green-bright\",\"Yellow-Green Light to Dark\":\"yellow-green-light-to-dark\"});function g(o,r){if(!o||!r||o.length!==r.length)return!1;for(let e=0;e<o.length;e++)if(o[e]>r[e]+2||o[e]<r[e]-2)return!1;return!0}function f(r,e){if(!r)return;const t=e||d;let l=null;return\"algorithmic\"===r.type?t.some((o=>{if(g(r.fromColor.toRgb(),o.fromColor)&&g(r.toColor.toRgb(),o.toColor))return l=o.id,!0})):\"multipart\"===r.type&&t.some((e=>{const t=r.colorRamps,i=e.colorRamps;if(t&&i&&t.length===i.length&&!i.some(((r,e)=>{if(!g(t[e].fromColor.toRgb(),new o(r.fromColor).toRgb())||!g(t[e].toColor.toRgb(),new o(r.toColor).toRgb()))return!0}))){if(l)return!0;l=e.id}})),l}function C(o){const r=f(o);return r?p[r]:null}function m(o){const r=a.toJSON(o),e=Object.entries(p).find((o=>o[1]===r))?.[0],t=d.find((o=>o.id===e));return t?t.colorRamps?{type:\"multipart\",colorRamps:t.colorRamps.map((o=>({type:\"algorithmic\",algorithm:\"esriCIELabAlgorithm\",fromColor:o.fromColor,toColor:o.toColor})))}:{type:\"algorithmic\",algorithm:\"esriCIELabAlgorithm\",fromColor:t.fromColor,toColor:t.toColor}:null}function u(o){const r=(o=o||{}).numColors||256,e=o.distanceOffset||0,t=null!=o.isCustomInterval?o.isCustomInterval:null!==o.distanceInterval&&o.distanceInterval!==1/(r-1),l=o.distanceInterval||1/(r-1);return{...o,numColors:r,distanceOffset:e,interpolateAlpha:!!o.interpolateAlpha,distanceInterval:l,isCustomInterval:t,weights:o.weights}}function h(o,r,e){const{numColors:t,distanceOffset:l,distanceInterval:i,isCustomInterval:n}=e,d=0===o.s,p=0===r.s;let a=o.h,g=r.h;d&&!p?a=g:p&&!d&&(r={...r,h:a},g=a);let f,C=Math.abs(g-a);const m=360;C<m/2?f=(g-a)*i:(C=m-C,f=a>g?C*i:-C*i);const u=(r.s-o.s)*i,h=(r.v-o.v)*i;let{s:c,v:s}=o,D=a;if(l){const o=l/i;D=(D+o*f+m)%m,c+=o*u,s+=o*h}const B=[];for(let k=0;k<t-1;k++)B.push({h:D,s:c,v:s}),D=(D+f+m)%m,c+=u,s+=h;return B.push(n?{h:D,s:c,v:s}:r),B}function c(o,r,e){const{numColors:t,distanceOffset:l,distanceInterval:i,isCustomInterval:n}=e;let{l:d,a:p,b:a}=o;const g=(r.l-d)*i,f=(r.a-p)*i,C=(r.b-a)*i,m=[];if(l){const o=l/i;d+=o*g,p+=o*f,a+=o*C}for(let u=0;u<t-1;u++)m.push({l:d,a:p,b:a}),d+=g,p+=f,a+=C;return m.push(n?{l:d,a:p,b:a}:r),m}function s(o,r,e){const{numColors:t,distanceOffset:l,distanceInterval:i,isCustomInterval:n}=e,d=o.h,p=r.h,a=2*Math.PI;let g;if(d<=p){const o=p-d,r=p-d-a;g=Math.abs(r)<Math.abs(o)?r:o}else{const o=p+a-d,r=p-d;g=Math.abs(r)<Math.abs(o)?r:o}const f=g*i,C=(r.l-o.l)*i,m=(r.c-o.c)*i;let{l:u,c:h,h:c}=o;if(l){const o=l/i;u+=o*C,h+=o*m,c=(c+o*f+a)%a}const s=[];for(let D=0;D<t-1;D++)s.push({l:u,c:h,h:c}),u+=C,h+=m,c=(c+f+a)%a;return s.push(n?{l:u,c:h,h:c}:r),s}function D(o,i){let{fromColor:n,toColor:d}=o;3===n.length&&(n=n.concat([255])),3===d.length&&(d=d.concat([255]));const p=o.algorithm||\"esriCIELabAlgorithm\",a=u(i),{numColors:g,distanceOffset:f,isCustomInterval:C,interpolateAlpha:m}=a;if(1===g&&0===f)return[n];if(2===g&&0===f&&!C)return[n,d];const D={r:n[0],g:n[1],b:n[2]},B={r:d[0],g:d[1],b:d[2]},k=\"esriCIELabAlgorithm\"===p?c(e(D),e(B),a):\"esriHSVAlgorithm\"===p?h(r(D),r(B),a):s(t(D),t(B),a),_=[],v=n[3]??255,R=((d[3]??255)-v)/(g-1);for(let r=0;r<g;r++){const{r:o,g:e,b:t}=l(k[r]),i=m?Math.round(v+R*r):255;_.push([o,e,t,i])}return _}function B(o,r){const{numColors:e,interpolateAlpha:t}=u(r);let l=r?.weights;const{colorRamps:i}=o;if(l){const o=l.reduce(((o,r)=>o+r));l=l.map((r=>r/o))}else{l=[];for(let o=0;o<i.length;o++)l[o]=1/i.length}const n=[];let d=0,p=0;const a=1/(e-1);let g=!1;for(let C=0;C<i.length;C++){let o=g?0:d*a-p,r=C===i.length-1?e-1-d:(l[C]-o)/a;if(g=Math.ceil(r)===r,r=Math.ceil(r),0===r)continue;o/=l[C];const f=D(i[C],{numColors:r,interpolateAlpha:t,distanceOffset:o,distanceInterval:a/l[C]});d+=f.length,n.push(...f),p+=l[C]}const f=[...i[i.length-1].toColor];return 3===f.length&&f.push(255),n.push(f),n}function k(o,r){const e=\"toJSON\"in o?o.toJSON():o;return\"multipart\"===e.type?B(e,r):D(e,r)}function _(o,r){const e=k(o,r),t=r?.interpolateAlpha;return e.forEach(((o,r)=>{o.unshift(r),t||o.pop()})),e}function v(o){const r=C(o);if(o){if(\"algorithmic\"===o.type)return{...R(o),Name:r};if(o.colorRamps){const e=o.colorRamps.map(R);return{type:\"MultiPartColorRamp\",NumColorRamps:e.length,ArrayOfColorRamp:e,Name:r}}}}function R(o){if(!o)return;return{Algorithm:o.toJSON()?.Algorithm||\"esriHSVAlgorithm\",type:\"AlgorithmicColorRamp\",FromColor:b(o.fromColor),ToColor:b(o.toColor)}}function b(o){const e=r(o);return{type:\"HsvColor\",Hue:e.h,Saturation:e.s,Value:e.v,AlphaValue:255}}function y(o){const r=o.reverse().map((o=>{const r=o.toString(16);return r.length<2?\"0\"+r:r}));return 4294967295&Number.parseInt(r.join(\"\"),16)}export{p as PREDEFINED_COLOR_RAMP_NAME_MAP,d as PREDEFINED_JSON_COLOR_RAMPS,a as colorRampDict,_ as convertColorRampToColormap,k as convertColorRampToColors,f as getColorRampId,m as getColorRampJSON,C as getColorRampName,v as getRFxArgColorRampValue,n as rasterColormapNames,y as rgbaConvertTo32Bit};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}