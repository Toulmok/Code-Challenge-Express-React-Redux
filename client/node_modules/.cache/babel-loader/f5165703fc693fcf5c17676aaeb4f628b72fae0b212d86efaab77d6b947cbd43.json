{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nexport { setAssetPath, setNonce, setPlatformOptions } from '@stencil/core/internal/client/index.js';\nimport { d as darkMode, a as autoMode } from './dom.js';\n\n/**\n * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.\n */\nfunction initModeChangeEvent() {\n  const {\n    classList\n  } = document.body;\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const getMode = () => classList.contains(darkMode) || classList.contains(autoMode) && prefersDark ? \"dark\" : \"light\";\n  const emitModeChange = mode => document.body.dispatchEvent(new CustomEvent(\"calciteModeChange\", {\n    bubbles: true,\n    detail: {\n      mode\n    }\n  }));\n  const modeChangeHandler = newMode => {\n    currentMode !== newMode && emitModeChange(newMode);\n    currentMode = newMode;\n  };\n  let currentMode = getMode();\n  // emits event on page load\n  emitModeChange(currentMode);\n  // emits event when changing OS mode preferences\n  window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", event => modeChangeHandler(event.matches ? \"dark\" : \"light\"));\n  // emits event when toggling between mode classes on <body>\n  new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {\n    attributes: true,\n    attributeFilter: [\"class\"]\n  });\n}\n\n/**\n * This file is imported in Stencil's `globalScript` config option.\n *\n * @see {@link https://stenciljs.com/docs/config#globalscript}\n */\nfunction appGlobalScript() {\n  const isBrowser = typeof window !== \"undefined\" && typeof location !== \"undefined\" && typeof document !== \"undefined\" && window.location === location && window.document === document;\n  if (isBrowser) {\n    if (document.readyState === \"interactive\") {\n      initModeChangeEvent();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => initModeChangeEvent(), {\n        once: true\n      });\n    }\n  }\n}\nconst globalScripts = appGlobalScript;\nglobalScripts();","map":{"version":3,"names":["setAssetPath","setNonce","setPlatformOptions","d","darkMode","a","autoMode","initModeChangeEvent","classList","document","body","prefersDark","window","matchMedia","matches","getMode","contains","emitModeChange","mode","dispatchEvent","CustomEvent","bubbles","detail","modeChangeHandler","newMode","currentMode","addEventListener","event","MutationObserver","observe","attributes","attributeFilter","appGlobalScript","isBrowser","location","readyState","once","globalScripts"],"sources":["C:/code-challenge-react/frontend/node_modules/@esri/calcite-components/dist/components/index.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nexport { setAssetPath, setNonce, setPlatformOptions } from '@stencil/core/internal/client/index.js';\nimport { d as darkMode, a as autoMode } from './dom.js';\n\n/**\n * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.\n */\nfunction initModeChangeEvent() {\n  const { classList } = document.body;\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const getMode = () => classList.contains(darkMode) || (classList.contains(autoMode) && prefersDark) ? \"dark\" : \"light\";\n  const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent(\"calciteModeChange\", { bubbles: true, detail: { mode } }));\n  const modeChangeHandler = (newMode) => {\n    currentMode !== newMode && emitModeChange(newMode);\n    currentMode = newMode;\n  };\n  let currentMode = getMode();\n  // emits event on page load\n  emitModeChange(currentMode);\n  // emits event when changing OS mode preferences\n  window\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", (event) => modeChangeHandler(event.matches ? \"dark\" : \"light\"));\n  // emits event when toggling between mode classes on <body>\n  new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {\n    attributes: true,\n    attributeFilter: [\"class\"]\n  });\n}\n\n/**\n * This file is imported in Stencil's `globalScript` config option.\n *\n * @see {@link https://stenciljs.com/docs/config#globalscript}\n */\nfunction appGlobalScript () {\n  const isBrowser = typeof window !== \"undefined\" &&\n    typeof location !== \"undefined\" &&\n    typeof document !== \"undefined\" &&\n    window.location === location &&\n    window.document === document;\n  if (isBrowser) {\n    if (document.readyState === \"interactive\") {\n      initModeChangeEvent();\n    }\n    else {\n      document.addEventListener(\"DOMContentLoaded\", () => initModeChangeEvent(), { once: true });\n    }\n  }\n}\n\nconst globalScripts = appGlobalScript;\n\nglobalScripts();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,EAAEC,QAAQ,EAAEC,kBAAkB,QAAQ,wCAAwC;AACnG,SAASC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,QAAQ,QAAQ,UAAU;;AAEvD;AACA;AACA;AACA,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,MAAM;IAAEC;EAAU,CAAC,GAAGC,QAAQ,CAACC,IAAI;EACnC,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EAC7E,MAAMC,OAAO,GAAGA,CAAA,KAAMP,SAAS,CAACQ,QAAQ,CAACZ,QAAQ,CAAC,IAAKI,SAAS,CAACQ,QAAQ,CAACV,QAAQ,CAAC,IAAIK,WAAY,GAAG,MAAM,GAAG,OAAO;EACtH,MAAMM,cAAc,GAAIC,IAAI,IAAKT,QAAQ,CAACC,IAAI,CAACS,aAAa,CAAC,IAAIC,WAAW,CAAC,mBAAmB,EAAE;IAAEC,OAAO,EAAE,IAAI;IAAEC,MAAM,EAAE;MAAEJ;IAAK;EAAE,CAAC,CAAC,CAAC;EACvI,MAAMK,iBAAiB,GAAIC,OAAO,IAAK;IACrCC,WAAW,KAAKD,OAAO,IAAIP,cAAc,CAACO,OAAO,CAAC;IAClDC,WAAW,GAAGD,OAAO;EACvB,CAAC;EACD,IAAIC,WAAW,GAAGV,OAAO,EAAE;EAC3B;EACAE,cAAc,CAACQ,WAAW,CAAC;EAC3B;EACAb,MAAM,CACHC,UAAU,CAAC,8BAA8B,CAAC,CAC1Ca,gBAAgB,CAAC,QAAQ,EAAGC,KAAK,IAAKJ,iBAAiB,CAACI,KAAK,CAACb,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;EAC7F;EACA,IAAIc,gBAAgB,CAAC,MAAML,iBAAiB,CAACR,OAAO,EAAE,CAAC,CAAC,CAACc,OAAO,CAACpB,QAAQ,CAACC,IAAI,EAAE;IAC9EoB,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE,CAAC,OAAO;EAC3B,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAAA,EAAI;EAC1B,MAAMC,SAAS,GAAG,OAAOrB,MAAM,KAAK,WAAW,IAC7C,OAAOsB,QAAQ,KAAK,WAAW,IAC/B,OAAOzB,QAAQ,KAAK,WAAW,IAC/BG,MAAM,CAACsB,QAAQ,KAAKA,QAAQ,IAC5BtB,MAAM,CAACH,QAAQ,KAAKA,QAAQ;EAC9B,IAAIwB,SAAS,EAAE;IACb,IAAIxB,QAAQ,CAAC0B,UAAU,KAAK,aAAa,EAAE;MACzC5B,mBAAmB,EAAE;IACvB,CAAC,MACI;MACHE,QAAQ,CAACiB,gBAAgB,CAAC,kBAAkB,EAAE,MAAMnB,mBAAmB,EAAE,EAAE;QAAE6B,IAAI,EAAE;MAAK,CAAC,CAAC;IAC5F;EACF;AACF;AAEA,MAAMC,aAAa,GAAGL,eAAe;AAErCK,aAAa,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}