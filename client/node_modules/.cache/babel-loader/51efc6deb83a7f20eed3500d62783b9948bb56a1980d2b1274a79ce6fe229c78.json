{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { deg2rad as e } from \"../core/mathUtils.js\";\nimport { s as i } from \"./vec2.js\";\nimport { a as t } from \"./vec2f64.js\";\nimport { b as n, n as a, l as o, i as r, m as l, c as s, f as c, a as d } from \"./vec3.js\";\nimport { c as p } from \"./vec3f64.js\";\nimport { t as f } from \"./vec4.js\";\nimport { c as h } from \"./vec4f64.js\";\nimport { pointAt as g } from \"../geometry/support/lineSegment.js\";\nimport { create as m, fromPositionAndNormal as u } from \"../geometry/support/plane.js\";\nimport { c as w } from \"./sphere.js\";\nimport { Laserline as x } from \"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";\nimport { ScreenSpacePass as P } from \"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";\nimport { Float2PassUniform as v } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float3PassUniform as b } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as D } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as M } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as L } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nconst C = e(6);\nfunction A(e) {\n  const i = new L();\n  i.extensions.add(\"GL_OES_standard_derivatives\"), i.include(P), i.include(x, e);\n  const t = i.fragment;\n  if (e.lineVerticalPlaneEnabled || e.heightManifoldEnabled) if (t.uniforms.add(new S(\"maxPixelDistance\", (i, t) => e.heightManifoldEnabled ? 2 * t.camera.computeScreenPixelSizeAt(i.heightManifoldTarget) : 2 * t.camera.computeScreenPixelSizeAt(i.lineVerticalPlaneSegment.origin))), t.code.add(M`float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`), e.spherical) {\n    const e = (e, i, t) => l(e, i.heightManifoldTarget, t.camera.viewMatrix),\n      i = (e, i) => l(e, [0, 0, 0], i.camera.viewMatrix);\n    t.uniforms.add([new D(\"heightManifoldOrigin\", (t, r) => (e(T, t, r), i(_, r), n(_, _, T), a(G, _), G[3] = o(_), G)), new b(\"globalOrigin\", (e, t) => i(T, t)), new S(\"cosSphericalAngleThreshold\", (e, i) => 1 - Math.max(2, r(i.camera.eye, e.heightManifoldTarget) * i.camera.perRenderPixelRatio) / o(e.heightManifoldTarget))]), t.code.add(M`float globeDistancePixels(float posInGlobalOriginLength) {\nfloat dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}\nfloat heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nvec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);\nfloat cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);\nvec3 posInGlobalOrigin = globalOrigin - pos;\nfloat posInGlobalOriginLength = length(posInGlobalOrigin);\nfloat sphericalDistance = globeDistancePixels(posInGlobalOriginLength);\nfloat planarDistance = planeDistancePixels(heightPlane, pos);\nreturn cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;\n}`);\n  } else t.code.add(M`float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nreturn planeDistancePixels(heightPlane, pos);\n}`);\n  if (e.pointDistanceEnabled && (t.uniforms.add(new S(\"maxPixelDistance\", (e, i) => 2 * i.camera.computeScreenPixelSizeAt(e.pointDistanceTarget))), t.code.add(M`float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`)), e.intersectsLineEnabled && (t.uniforms.add(new S(\"perScreenPixelRatio\", (e, i) => i.camera.perScreenPixelRatio)), t.code.add(M`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}`)), (e.lineVerticalPlaneEnabled || e.intersectsLineEnabled) && t.code.add(M`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}`), t.code.add(M`void main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nvec4 color = vec4(0, 0, 0, 0);`), e.heightManifoldEnabled) {\n    t.uniforms.add([new v(\"angleCutoff\", e => V(e)), new D(\"heightPlane\", (e, i) => z(e.heightManifoldTarget, e.renderCoordsHelper.worldUpAtPosition(e.heightManifoldTarget, T), i.camera.viewMatrix))]);\n    const i = e.spherical ? M`normalize(globalOrigin - pos)` : M`heightPlane.xyz`;\n    t.code.add(M`\n    {\n      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, ${i})));\n      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));\n      color = max(color, heightManifoldColor * heightManifoldAlpha);\n    }\n    `);\n  }\n  return e.pointDistanceEnabled && (t.uniforms.add([new v(\"angleCutoff\", e => V(e)), new D(\"pointDistanceSphere\", (e, i) => O(e, i))]), t.code.add(M`{\nfloat pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);\n}`)), e.lineVerticalPlaneEnabled && (t.uniforms.add([new v(\"angleCutoff\", e => V(e)), new D(\"lineVerticalPlane\", (e, i) => j(e, i)), new b(\"lineVerticalStart\", (e, i) => y(e, i)), new b(\"lineVerticalEnd\", (e, i) => E(e, i))]), t.code.add(M`{\nif (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}\n}`)), e.intersectsLineEnabled && (t.uniforms.add([new v(\"angleCutoff\", e => V(e)), new b(\"intersectsLineStart\", (e, i) => l(T, e.lineStartWorld, i.camera.viewMatrix)), new b(\"intersectsLineEnd\", (e, i) => l(T, e.lineEndWorld, i.camera.viewMatrix)), new b(\"intersectsLineDirection\", (e, i) => (s(G, e.intersectsLineSegment.vector), G[3] = 0, a(T, f(G, G, i.camera.viewMatrix)))), new S(\"intersectsLineRadius\", e => e.intersectsLineRadius)]), t.code.add(M`{\nif (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}\n}`)), t.code.add(M`gl_FragColor = laserlineOutput(color * depthDiscontinuityAlpha);\n}`), i;\n}\nfunction V(t) {\n  return i(I, Math.cos(t.angleCutoff), Math.cos(Math.max(0, t.angleCutoff - e(2))));\n}\nfunction O(e, i) {\n  return l(W, e.pointDistanceOrigin, i.camera.viewMatrix), W[3] = r(e.pointDistanceOrigin, e.pointDistanceTarget), W;\n}\nfunction j(e, i) {\n  const t = g(e.lineVerticalPlaneSegment, .5, T),\n    n = e.renderCoordsHelper.worldUpAtPosition(t, R),\n    o = a(_, e.lineVerticalPlaneSegment.vector),\n    r = c(G, n, o);\n  return a(r, r), z(e.lineVerticalPlaneSegment.origin, r, i.camera.viewMatrix);\n}\nfunction y(e, i) {\n  const t = s(T, e.lineVerticalPlaneSegment.origin);\n  return e.renderCoordsHelper.setAltitude(t, 0), l(t, t, i.camera.viewMatrix);\n}\nfunction E(e, i) {\n  const t = d(T, e.lineVerticalPlaneSegment.origin, e.lineVerticalPlaneSegment.vector);\n  return e.renderCoordsHelper.setAltitude(t, 0), l(t, t, i.camera.viewMatrix);\n}\nfunction z(e, i, t) {\n  return l(U, e, t), s(G, i), G[3] = 0, f(G, G, t), u(U, G, F);\n}\nconst I = t(),\n  T = p(),\n  G = h(),\n  R = p(),\n  _ = p(),\n  U = p(),\n  F = m(),\n  W = w(),\n  H = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    build: A,\n    defaultAngleCutoff: C\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { H as L, A as b, C as d };","map":{"version":3,"names":["deg2rad","e","s","i","a","t","b","n","l","o","r","m","c","f","d","p","h","pointAt","g","create","fromPositionAndNormal","u","w","Laserline","x","ScreenSpacePass","P","Float2PassUniform","v","Float3PassUniform","Float4PassUniform","D","FloatPassUniform","S","glsl","M","ShaderBuilder","L","C","A","extensions","add","include","fragment","lineVerticalPlaneEnabled","heightManifoldEnabled","uniforms","camera","computeScreenPixelSizeAt","heightManifoldTarget","lineVerticalPlaneSegment","origin","code","spherical","viewMatrix","T","_","G","Math","max","eye","perRenderPixelRatio","pointDistanceEnabled","pointDistanceTarget","intersectsLineEnabled","perScreenPixelRatio","V","z","renderCoordsHelper","worldUpAtPosition","O","j","y","E","lineStartWorld","lineEndWorld","intersectsLineSegment","vector","intersectsLineRadius","I","cos","angleCutoff","W","pointDistanceOrigin","R","setAltitude","U","F","H","Object","freeze","defineProperty","__proto__","build","defaultAngleCutoff","Symbol","toStringTag","value"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/chunks/Laserlines.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{deg2rad as e}from\"../core/mathUtils.js\";import{s as i}from\"./vec2.js\";import{a as t}from\"./vec2f64.js\";import{b as n,n as a,l as o,i as r,m as l,c as s,f as c,a as d}from\"./vec3.js\";import{c as p}from\"./vec3f64.js\";import{t as f}from\"./vec4.js\";import{c as h}from\"./vec4f64.js\";import{pointAt as g}from\"../geometry/support/lineSegment.js\";import{create as m,fromPositionAndNormal as u}from\"../geometry/support/plane.js\";import{c as w}from\"./sphere.js\";import{Laserline as x}from\"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";import{ScreenSpacePass as P}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{Float2PassUniform as v}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3PassUniform as b}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as M}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as L}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";const C=e(6);function A(e){const i=new L;i.extensions.add(\"GL_OES_standard_derivatives\"),i.include(P),i.include(x,e);const t=i.fragment;if(e.lineVerticalPlaneEnabled||e.heightManifoldEnabled)if(t.uniforms.add(new S(\"maxPixelDistance\",((i,t)=>e.heightManifoldEnabled?2*t.camera.computeScreenPixelSizeAt(i.heightManifoldTarget):2*t.camera.computeScreenPixelSizeAt(i.lineVerticalPlaneSegment.origin)))),t.code.add(M`float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`),e.spherical){const e=(e,i,t)=>l(e,i.heightManifoldTarget,t.camera.viewMatrix),i=(e,i)=>l(e,[0,0,0],i.camera.viewMatrix);t.uniforms.add([new D(\"heightManifoldOrigin\",((t,r)=>(e(T,t,r),i(_,r),n(_,_,T),a(G,_),G[3]=o(_),G))),new b(\"globalOrigin\",((e,t)=>i(T,t))),new S(\"cosSphericalAngleThreshold\",((e,i)=>1-Math.max(2,r(i.camera.eye,e.heightManifoldTarget)*i.camera.perRenderPixelRatio)/o(e.heightManifoldTarget)))]),t.code.add(M`float globeDistancePixels(float posInGlobalOriginLength) {\nfloat dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}\nfloat heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nvec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);\nfloat cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);\nvec3 posInGlobalOrigin = globalOrigin - pos;\nfloat posInGlobalOriginLength = length(posInGlobalOrigin);\nfloat sphericalDistance = globeDistancePixels(posInGlobalOriginLength);\nfloat planarDistance = planeDistancePixels(heightPlane, pos);\nreturn cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;\n}`)}else t.code.add(M`float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nreturn planeDistancePixels(heightPlane, pos);\n}`);if(e.pointDistanceEnabled&&(t.uniforms.add(new S(\"maxPixelDistance\",((e,i)=>2*i.camera.computeScreenPixelSizeAt(e.pointDistanceTarget)))),t.code.add(M`float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`)),e.intersectsLineEnabled&&(t.uniforms.add(new S(\"perScreenPixelRatio\",((e,i)=>i.camera.perScreenPixelRatio))),t.code.add(M`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}`)),(e.lineVerticalPlaneEnabled||e.intersectsLineEnabled)&&t.code.add(M`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}`),t.code.add(M`void main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nvec4 color = vec4(0, 0, 0, 0);`),e.heightManifoldEnabled){t.uniforms.add([new v(\"angleCutoff\",(e=>V(e))),new D(\"heightPlane\",((e,i)=>z(e.heightManifoldTarget,e.renderCoordsHelper.worldUpAtPosition(e.heightManifoldTarget,T),i.camera.viewMatrix)))]);const i=e.spherical?M`normalize(globalOrigin - pos)`:M`heightPlane.xyz`;t.code.add(M`\n    {\n      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, ${i})));\n      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));\n      color = max(color, heightManifoldColor * heightManifoldAlpha);\n    }\n    `)}return e.pointDistanceEnabled&&(t.uniforms.add([new v(\"angleCutoff\",(e=>V(e))),new D(\"pointDistanceSphere\",((e,i)=>O(e,i)))]),t.code.add(M`{\nfloat pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);\n}`)),e.lineVerticalPlaneEnabled&&(t.uniforms.add([new v(\"angleCutoff\",(e=>V(e))),new D(\"lineVerticalPlane\",((e,i)=>j(e,i))),new b(\"lineVerticalStart\",((e,i)=>y(e,i))),new b(\"lineVerticalEnd\",((e,i)=>E(e,i)))]),t.code.add(M`{\nif (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}\n}`)),e.intersectsLineEnabled&&(t.uniforms.add([new v(\"angleCutoff\",(e=>V(e))),new b(\"intersectsLineStart\",((e,i)=>l(T,e.lineStartWorld,i.camera.viewMatrix))),new b(\"intersectsLineEnd\",((e,i)=>l(T,e.lineEndWorld,i.camera.viewMatrix))),new b(\"intersectsLineDirection\",((e,i)=>(s(G,e.intersectsLineSegment.vector),G[3]=0,a(T,f(G,G,i.camera.viewMatrix))))),new S(\"intersectsLineRadius\",(e=>e.intersectsLineRadius))]),t.code.add(M`{\nif (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}\n}`)),t.code.add(M`gl_FragColor = laserlineOutput(color * depthDiscontinuityAlpha);\n}`),i}function V(t){return i(I,Math.cos(t.angleCutoff),Math.cos(Math.max(0,t.angleCutoff-e(2))))}function O(e,i){return l(W,e.pointDistanceOrigin,i.camera.viewMatrix),W[3]=r(e.pointDistanceOrigin,e.pointDistanceTarget),W}function j(e,i){const t=g(e.lineVerticalPlaneSegment,.5,T),n=e.renderCoordsHelper.worldUpAtPosition(t,R),o=a(_,e.lineVerticalPlaneSegment.vector),r=c(G,n,o);return a(r,r),z(e.lineVerticalPlaneSegment.origin,r,i.camera.viewMatrix)}function y(e,i){const t=s(T,e.lineVerticalPlaneSegment.origin);return e.renderCoordsHelper.setAltitude(t,0),l(t,t,i.camera.viewMatrix)}function E(e,i){const t=d(T,e.lineVerticalPlaneSegment.origin,e.lineVerticalPlaneSegment.vector);return e.renderCoordsHelper.setAltitude(t,0),l(t,t,i.camera.viewMatrix)}function z(e,i,t){return l(U,e,t),s(G,i),G[3]=0,f(G,G,t),u(U,G,F)}const I=t(),T=p(),G=h(),R=p(),_=p(),U=p(),F=m(),W=w(),H=Object.freeze(Object.defineProperty({__proto__:null,build:A,defaultAngleCutoff:C},Symbol.toStringTag,{value:\"Module\"}));export{H as L,A as b,C as d};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}