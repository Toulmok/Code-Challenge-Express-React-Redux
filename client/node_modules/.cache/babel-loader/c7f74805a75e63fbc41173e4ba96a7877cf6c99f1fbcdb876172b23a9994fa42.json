{"ast":null,"code":"import _toConsumableArray from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport { ensureType as s } from \"../symbols.js\";\nimport { JSONMap as t } from \"../core/jsonMap.js\";\nimport { clone as o } from \"../core/lang.js\";\nimport i from \"../core/Logger.js\";\nimport { isNone as r, unwrapOr as a, unwrap as l } from \"../core/maybe.js\";\nimport { property as n } from \"../core/accessorSupport/decorators/property.js\";\nimport { cast as u } from \"../core/accessorSupport/decorators/cast.js\";\nimport { enumeration as c } from \"../core/accessorSupport/decorators/enumeration.js\";\nimport { reader as p } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as m } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { writer as d } from \"../core/accessorSupport/decorators/writer.js\";\nimport { ensureType as h, ensureString as f, ensureNumber as y } from \"../core/accessorSupport/ensureType.js\";\nimport { collectArcadeFieldNames as g, collectField as b } from \"../layers/support/fieldUtils.js\";\nimport k from \"./Renderer.js\";\nimport { VisualVariablesMixin as x } from \"./mixins/VisualVariablesMixin.js\";\nimport I from \"./support/ClassBreakInfo.js\";\nimport { rendererBackgroundFillSymbolProperty as v, rendererSymbolProperty as B } from \"./support/commonProperties.js\";\nimport { LegendOptions as S } from \"./support/LegendOptions.js\";\nimport { loadArcade as F } from \"../support/arcadeOnDemand.js\";\nvar _V;\nvar E = \"log\",\n  j = \"percent-of-total\",\n  z = \"field\",\n  w = new t({\n    esriNormalizeByLog: E,\n    esriNormalizeByPercentOfTotal: j,\n    esriNormalizeByField: z\n  }),\n  T = h(I);\nvar C = _V = /*#__PURE__*/function (_x) {\n  _inherits(V, _x);\n  var _super = _createSuper(V);\n  function V(e) {\n    var _this;\n    _classCallCheck(this, V);\n    _this = _super.call(this, e), _this._compiledValueExpression = {\n      valueExpression: null,\n      compiledFunction: null\n    }, _this.backgroundFillSymbol = null, _this.classBreakInfos = null, _this.defaultLabel = null, _this.defaultSymbol = null, _this.field = null, _this.isMaxInclusive = !0, _this.legendOptions = null, _this.normalizationField = null, _this.normalizationTotal = null, _this.type = \"class-breaks\", _this.valueExpression = null, _this.valueExpressionTitle = null, _this._set(\"classBreakInfos\", []);\n    return _this;\n  }\n  _createClass(V, [{\n    key: \"readClassBreakInfos\",\n    value: function readClassBreakInfos(e, s, t) {\n      if (!Array.isArray(e)) return;\n      var o = s.minValue;\n      return e.map(function (e) {\n        var s = new I();\n        return s.read(e, t), null == s.minValue && (s.minValue = o), null == s.maxValue && (s.maxValue = s.minValue), o = s.maxValue, s;\n      });\n    }\n  }, {\n    key: \"writeClassBreakInfos\",\n    value: function writeClassBreakInfos(e, s, t, o) {\n      var i = e.map(function (e) {\n        return e.write({}, o);\n      });\n      this._areClassBreaksConsecutive() && i.forEach(function (e) {\n        return delete e.classMinValue;\n      }), s[t] = i;\n    }\n  }, {\n    key: \"castField\",\n    value: function castField(e) {\n      return null == e ? e : \"function\" == typeof e ? (i.getLogger(this.declaredClass).error(\".field: field must be a string value\"), null) : f(e);\n    }\n  }, {\n    key: \"minValue\",\n    get: function get() {\n      return this.classBreakInfos && this.classBreakInfos[0] && this.classBreakInfos[0].minValue || 0;\n    }\n  }, {\n    key: \"normalizationType\",\n    get: function get() {\n      var e = this._get(\"normalizationType\");\n      var s = !!this.normalizationField,\n        t = null != this.normalizationTotal;\n      return s || t ? (e = s && z || t && j || null, s && t && i.getLogger(this.declaredClass).warn(\"warning: both normalizationField and normalizationTotal are set!\")) : e !== z && e !== j || (e = null), e;\n    },\n    set: function set(e) {\n      this._set(\"normalizationType\", e);\n    }\n  }, {\n    key: \"addClassBreakInfo\",\n    value: function addClassBreakInfo(e, t, i) {\n      var r = null;\n      r = \"number\" == typeof e ? new I({\n        minValue: e,\n        maxValue: t,\n        symbol: s(i)\n      }) : T(o(e)), this.classBreakInfos.push(r), 1 === this.classBreakInfos.length && this.notifyChange(\"minValue\");\n    }\n  }, {\n    key: \"removeClassBreakInfo\",\n    value: function removeClassBreakInfo(e, s) {\n      var t = this.classBreakInfos.length;\n      for (var _o = 0; _o < t; _o++) {\n        var _t = [this.classBreakInfos[_o].minValue, this.classBreakInfos[_o].maxValue];\n        if (_t[0] === e && _t[1] === s) {\n          this.classBreakInfos.splice(_o, 1);\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getBreakIndex\",\n    value: function getBreakIndex(e, s) {\n      return this.valueExpression && (r(s) || r(s.arcade)) && i.getLogger(this.declaredClass).warn(\"\"), this.valueExpression ? this._getBreakIndexForExpression(e, s) : this._getBreakIndexForField(e);\n    }\n  }, {\n    key: \"getClassBreakInfo\",\n    value: function () {\n      var _getClassBreakInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e, s) {\n        var t, o;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              t = s;\n              _context.t0 = this.valueExpression && (r(s) || r(s.arcade));\n              if (!_context.t0) {\n                _context.next = 11;\n                break;\n              }\n              _context.t1 = _objectSpread;\n              _context.t2 = _objectSpread({}, t);\n              _context.t3 = {};\n              _context.next = 8;\n              return F();\n            case 8:\n              _context.t4 = _context.sent;\n              _context.t5 = {\n                arcade: _context.t4\n              };\n              t = (0, _context.t1)(_context.t2, _context.t3, _context.t5);\n            case 11:\n              o = this.getBreakIndex(e, t);\n              return _context.abrupt(\"return\", -1 !== o ? this.classBreakInfos[o] : null);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getClassBreakInfo(_x2, _x3) {\n        return _getClassBreakInfo.apply(this, arguments);\n      }\n      return getClassBreakInfo;\n    }()\n  }, {\n    key: \"getSymbol\",\n    value: function getSymbol(e, s) {\n      if (this.valueExpression && (r(s) || r(s.arcade))) return void i.getLogger(this.declaredClass).error(\"#getSymbol()\", \"Please use getSymbolAsync if valueExpression is used\");\n      var t = this.getBreakIndex(e, s);\n      return t > -1 ? this.classBreakInfos[t].symbol : this.defaultSymbol;\n    }\n  }, {\n    key: \"getSymbolAsync\",\n    value: function () {\n      var _getSymbolAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e, s) {\n        var t, _e, _s, o;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              t = s;\n              if (!(this.valueExpression && (r(s) || r(s.arcade)))) {\n                _context2.next = 11;\n                break;\n              }\n              _context2.next = 4;\n              return F();\n            case 4:\n              _e = _context2.sent;\n              _s = _e.arcadeUtils;\n              _context2.t0 = _s.hasGeometryOperations(this.valueExpression);\n              if (!_context2.t0) {\n                _context2.next = 10;\n                break;\n              }\n              _context2.next = 10;\n              return _s.enableGeometryOperations();\n            case 10:\n              t = _objectSpread(_objectSpread({}, t), {}, {\n                arcade: _e\n              });\n            case 11:\n              o = this.getBreakIndex(e, t);\n              return _context2.abrupt(\"return\", o > -1 ? this.classBreakInfos[o].symbol : this.defaultSymbol);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getSymbolAsync(_x4, _x5) {\n        return _getSymbolAsync.apply(this, arguments);\n      }\n      return getSymbolAsync;\n    }()\n  }, {\n    key: \"getSymbols\",\n    value: function getSymbols() {\n      var e = [];\n      return this.classBreakInfos.forEach(function (s) {\n        s.symbol && e.push(s.symbol);\n      }), this.defaultSymbol && e.push(this.defaultSymbol), e;\n    }\n  }, {\n    key: \"getAttributeHash\",\n    value: function getAttributeHash() {\n      return this.visualVariables && this.visualVariables.reduce(function (e, s) {\n        return e + s.getAttributeHash();\n      }, \"\");\n    }\n  }, {\n    key: \"getMeshHash\",\n    value: function getMeshHash() {\n      var e = JSON.stringify(this.backgroundFillSymbol),\n        s = JSON.stringify(this.defaultSymbol),\n        t = \"\".concat(this.normalizationField, \".\").concat(this.normalizationType, \".\").concat(this.normalizationTotal);\n      return \"\".concat(e, \".\").concat(s, \".\").concat(this.classBreakInfos.reduce(function (e, s) {\n        return e + s.getMeshHash();\n      }, \"\"), \".\").concat(t, \".\").concat(this.field, \".\").concat(this.valueExpression);\n    }\n  }, {\n    key: \"arcadeRequired\",\n    get: function get() {\n      return this.arcadeRequiredForVisualVariables || !!this.valueExpression;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new _V({\n        field: this.field,\n        backgroundFillSymbol: this.backgroundFillSymbol && this.backgroundFillSymbol.clone(),\n        defaultLabel: this.defaultLabel,\n        defaultSymbol: this.defaultSymbol && this.defaultSymbol.clone(),\n        valueExpression: this.valueExpression,\n        valueExpressionTitle: this.valueExpressionTitle,\n        classBreakInfos: o(this.classBreakInfos),\n        isMaxInclusive: this.isMaxInclusive,\n        normalizationField: this.normalizationField,\n        normalizationTotal: this.normalizationTotal,\n        normalizationType: this.normalizationType,\n        visualVariables: o(this.visualVariables),\n        legendOptions: o(this.legendOptions),\n        authoringInfo: this.authoringInfo && this.authoringInfo.clone()\n      });\n    }\n  }, {\n    key: \"collectRequiredFields\",\n    value: function () {\n      var _collectRequiredFields = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e, s) {\n        var t;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              t = [this.collectVVRequiredFields(e, s), this.collectSymbolFields(e, s)];\n              _context3.next = 3;\n              return Promise.all(t);\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function collectRequiredFields(_x6, _x7) {\n        return _collectRequiredFields.apply(this, arguments);\n      }\n      return collectRequiredFields;\n    }()\n  }, {\n    key: \"collectSymbolFields\",\n    value: function () {\n      var _collectSymbolFields = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e, s) {\n        var t;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              t = [].concat(_toConsumableArray(this.getSymbols().map(function (t) {\n                return t.collectRequiredFields(e, s);\n              })), [g(e, s, this.valueExpression)]);\n              b(e, s, this.field);\n              b(e, s, this.normalizationField);\n              _context4.next = 5;\n              return Promise.all(t);\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function collectSymbolFields(_x8, _x9) {\n        return _collectSymbolFields.apply(this, arguments);\n      }\n      return collectSymbolFields;\n    }()\n  }, {\n    key: \"_getBreakIndexForExpression\",\n    value: function _getBreakIndexForExpression(e, s) {\n      var _a = a(s, {}),\n        t = _a.viewingMode,\n        o = _a.scale,\n        i = _a.spatialReference,\n        r = _a.arcade,\n        n = this.valueExpression;\n      var u = this._compiledValueExpression.valueExpression === n ? this._compiledValueExpression.compiledFunction : null;\n      var c = l(r).arcadeUtils;\n      if (!u) {\n        var _e2 = c.createSyntaxTree(n);\n        u = c.createFunction(_e2), this._compiledValueExpression.compiledFunction = u;\n      }\n      this._compiledValueExpression.valueExpression = n;\n      var p = c.executeFunction(u, c.createExecContext(e, c.getViewInfo({\n        viewingMode: t,\n        scale: o,\n        spatialReference: i\n      })));\n      return this._getBreakIndexfromInfos(p);\n    }\n  }, {\n    key: \"_getBreakIndexForField\",\n    value: function _getBreakIndexForField(e) {\n      var s = this.field,\n        t = e.attributes,\n        o = this.normalizationType;\n      var i = parseFloat(t[s]);\n      if (o) {\n        var _e3 = this.normalizationTotal,\n          _s2 = parseFloat(this.normalizationField ? t[this.normalizationField] : void 0);\n        if (o === E) i = Math.log(i) * Math.LOG10E;else if (o !== j || null == _e3 || isNaN(_e3)) {\n          if (o === z && !isNaN(_s2)) {\n            if (isNaN(i) || isNaN(_s2)) return -1;\n            i /= _s2;\n          }\n        } else i = i / _e3 * 100;\n      }\n      return this._getBreakIndexfromInfos(i);\n    }\n  }, {\n    key: \"_getBreakIndexfromInfos\",\n    value: function _getBreakIndexfromInfos(e) {\n      var s = this.isMaxInclusive;\n      if (null != e && \"number\" == typeof e && !isNaN(e)) for (var _t2 = 0; _t2 < this.classBreakInfos.length; _t2++) {\n        var _o2 = [this.classBreakInfos[_t2].minValue, this.classBreakInfos[_t2].maxValue];\n        if (_o2[0] <= e && (s ? e <= _o2[1] : e < _o2[1])) return _t2;\n      }\n      return -1;\n    }\n  }, {\n    key: \"_areClassBreaksConsecutive\",\n    value: function _areClassBreaksConsecutive() {\n      var e = this.classBreakInfos,\n        s = e.length;\n      for (var _t3 = 1; _t3 < s; _t3++) if (e[_t3 - 1].maxValue !== e[_t3].minValue) return !1;\n      return !0;\n    }\n  }]);\n  return V;\n}(x(k));\ne([n(v)], C.prototype, \"backgroundFillSymbol\", void 0), e([n({\n  type: [I]\n})], C.prototype, \"classBreakInfos\", void 0), e([p(\"classBreakInfos\")], C.prototype, \"readClassBreakInfos\", null), e([d(\"classBreakInfos\")], C.prototype, \"writeClassBreakInfos\", null), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"defaultLabel\", void 0), e([n(B)], C.prototype, \"defaultSymbol\", void 0), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"field\", void 0), e([u(\"field\")], C.prototype, \"castField\", null), e([n({\n  type: Boolean\n})], C.prototype, \"isMaxInclusive\", void 0), e([n({\n  type: S,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"legendOptions\", void 0), e([n({\n  type: Number,\n  readOnly: !0,\n  value: null,\n  json: {\n    read: !1,\n    write: {\n      overridePolicy: function overridePolicy() {\n        return 0 !== this.classBreakInfos.length && this._areClassBreaksConsecutive() ? {\n          enabled: !0\n        } : {\n          enabled: !1\n        };\n      }\n    }\n  }\n})], C.prototype, \"minValue\", null), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"normalizationField\", void 0), e([n({\n  type: Number,\n  cast: function cast(e) {\n    return y(e);\n  },\n  json: {\n    write: !0\n  }\n})], C.prototype, \"normalizationTotal\", void 0), e([n({\n  type: w.apiValues,\n  value: null,\n  json: {\n    type: w.jsonValues,\n    read: w.read,\n    write: w.write\n  }\n})], C.prototype, \"normalizationType\", null), e([c({\n  classBreaks: \"class-breaks\"\n})], C.prototype, \"type\", void 0), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"valueExpression\", void 0), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], C.prototype, \"valueExpressionTitle\", void 0), C = _V = e([m(\"esri.renderers.ClassBreaksRenderer\")], C);\nvar _ = C;\nexport { _ as default };","map":{"version":3,"names":["_","e","ensureType","s","JSONMap","t","clone","o","i","isNone","r","unwrapOr","a","unwrap","l","property","n","cast","u","enumeration","c","reader","p","subclass","m","writer","d","h","ensureString","f","ensureNumber","y","collectArcadeFieldNames","g","collectField","b","k","VisualVariablesMixin","x","I","rendererBackgroundFillSymbolProperty","v","rendererSymbolProperty","B","LegendOptions","S","loadArcade","F","V","E","j","z","w","esriNormalizeByLog","esriNormalizeByPercentOfTotal","esriNormalizeByField","T","C","_x","_inherits","_super","_createSuper","_this","_classCallCheck","call","_compiledValueExpression","valueExpression","compiledFunction","backgroundFillSymbol","classBreakInfos","defaultLabel","defaultSymbol","field","isMaxInclusive","legendOptions","normalizationField","normalizationTotal","type","valueExpressionTitle","_set","_createClass","key","value","readClassBreakInfos","Array","isArray","minValue","map","read","maxValue","writeClassBreakInfos","write","_areClassBreaksConsecutive","forEach","classMinValue","castField","getLogger","declaredClass","error","get","_get","warn","set","addClassBreakInfo","symbol","push","length","notifyChange","removeClassBreakInfo","splice","getBreakIndex","arcade","_getBreakIndexForExpression","_getBreakIndexForField","_getClassBreakInfo","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","t0","t1","_objectSpread","t2","t3","t4","sent","t5","abrupt","stop","getClassBreakInfo","_x2","_x3","apply","arguments","getSymbol","_getSymbolAsync","_callee2","_e","_s","_callee2$","_context2","arcadeUtils","hasGeometryOperations","enableGeometryOperations","getSymbolAsync","_x4","_x5","getSymbols","getAttributeHash","visualVariables","reduce","getMeshHash","JSON","stringify","concat","normalizationType","arcadeRequiredForVisualVariables","authoringInfo","_collectRequiredFields","_callee3","_callee3$","_context3","collectVVRequiredFields","collectSymbolFields","Promise","all","collectRequiredFields","_x6","_x7","_collectSymbolFields","_callee4","_callee4$","_context4","_toConsumableArray","_x8","_x9","_a","viewingMode","scale","spatialReference","createSyntaxTree","createFunction","executeFunction","createExecContext","getViewInfo","_getBreakIndexfromInfos","attributes","parseFloat","Math","log","LOG10E","isNaN","prototype","String","json","Boolean","Number","readOnly","overridePolicy","enabled","apiValues","jsonValues","classBreaks","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/renderers/ClassBreaksRenderer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import{ensureType as s}from\"../symbols.js\";import{JSONMap as t}from\"../core/jsonMap.js\";import{clone as o}from\"../core/lang.js\";import i from\"../core/Logger.js\";import{isNone as r,unwrapOr as a,unwrap as l}from\"../core/maybe.js\";import{property as n}from\"../core/accessorSupport/decorators/property.js\";import{cast as u}from\"../core/accessorSupport/decorators/cast.js\";import{enumeration as c}from\"../core/accessorSupport/decorators/enumeration.js\";import{reader as p}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as m}from\"../core/accessorSupport/decorators/subclass.js\";import{writer as d}from\"../core/accessorSupport/decorators/writer.js\";import{ensureType as h,ensureString as f,ensureNumber as y}from\"../core/accessorSupport/ensureType.js\";import{collectArcadeFieldNames as g,collectField as b}from\"../layers/support/fieldUtils.js\";import k from\"./Renderer.js\";import{VisualVariablesMixin as x}from\"./mixins/VisualVariablesMixin.js\";import I from\"./support/ClassBreakInfo.js\";import{rendererBackgroundFillSymbolProperty as v,rendererSymbolProperty as B}from\"./support/commonProperties.js\";import{LegendOptions as S}from\"./support/LegendOptions.js\";import{loadArcade as F}from\"../support/arcadeOnDemand.js\";var V;const E=\"log\",j=\"percent-of-total\",z=\"field\",w=new t({esriNormalizeByLog:E,esriNormalizeByPercentOfTotal:j,esriNormalizeByField:z}),T=h(I);let C=V=class extends(x(k)){constructor(e){super(e),this._compiledValueExpression={valueExpression:null,compiledFunction:null},this.backgroundFillSymbol=null,this.classBreakInfos=null,this.defaultLabel=null,this.defaultSymbol=null,this.field=null,this.isMaxInclusive=!0,this.legendOptions=null,this.normalizationField=null,this.normalizationTotal=null,this.type=\"class-breaks\",this.valueExpression=null,this.valueExpressionTitle=null,this._set(\"classBreakInfos\",[])}readClassBreakInfos(e,s,t){if(!Array.isArray(e))return;let o=s.minValue;return e.map((e=>{const s=new I;return s.read(e,t),null==s.minValue&&(s.minValue=o),null==s.maxValue&&(s.maxValue=s.minValue),o=s.maxValue,s}))}writeClassBreakInfos(e,s,t,o){const i=e.map((e=>e.write({},o)));this._areClassBreaksConsecutive()&&i.forEach((e=>delete e.classMinValue)),s[t]=i}castField(e){return null==e?e:\"function\"==typeof e?(i.getLogger(this.declaredClass).error(\".field: field must be a string value\"),null):f(e)}get minValue(){return this.classBreakInfos&&this.classBreakInfos[0]&&this.classBreakInfos[0].minValue||0}get normalizationType(){let e=this._get(\"normalizationType\");const s=!!this.normalizationField,t=null!=this.normalizationTotal;return s||t?(e=s&&z||t&&j||null,s&&t&&i.getLogger(this.declaredClass).warn(\"warning: both normalizationField and normalizationTotal are set!\")):e!==z&&e!==j||(e=null),e}set normalizationType(e){this._set(\"normalizationType\",e)}addClassBreakInfo(e,t,i){let r=null;r=\"number\"==typeof e?new I({minValue:e,maxValue:t,symbol:s(i)}):T(o(e)),this.classBreakInfos.push(r),1===this.classBreakInfos.length&&this.notifyChange(\"minValue\")}removeClassBreakInfo(e,s){const t=this.classBreakInfos.length;for(let o=0;o<t;o++){const t=[this.classBreakInfos[o].minValue,this.classBreakInfos[o].maxValue];if(t[0]===e&&t[1]===s){this.classBreakInfos.splice(o,1);break}}}getBreakIndex(e,s){return this.valueExpression&&(r(s)||r(s.arcade))&&i.getLogger(this.declaredClass).warn(\"\"),this.valueExpression?this._getBreakIndexForExpression(e,s):this._getBreakIndexForField(e)}async getClassBreakInfo(e,s){let t=s;this.valueExpression&&(r(s)||r(s.arcade))&&(t={...t,arcade:await F()});const o=this.getBreakIndex(e,t);return-1!==o?this.classBreakInfos[o]:null}getSymbol(e,s){if(this.valueExpression&&(r(s)||r(s.arcade)))return void i.getLogger(this.declaredClass).error(\"#getSymbol()\",\"Please use getSymbolAsync if valueExpression is used\");const t=this.getBreakIndex(e,s);return t>-1?this.classBreakInfos[t].symbol:this.defaultSymbol}async getSymbolAsync(e,s){let t=s;if(this.valueExpression&&(r(s)||r(s.arcade))){const e=await F(),{arcadeUtils:s}=e;s.hasGeometryOperations(this.valueExpression)&&await s.enableGeometryOperations(),t={...t,arcade:e}}const o=this.getBreakIndex(e,t);return o>-1?this.classBreakInfos[o].symbol:this.defaultSymbol}getSymbols(){const e=[];return this.classBreakInfos.forEach((s=>{s.symbol&&e.push(s.symbol)})),this.defaultSymbol&&e.push(this.defaultSymbol),e}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce(((e,s)=>e+s.getAttributeHash()),\"\")}getMeshHash(){const e=JSON.stringify(this.backgroundFillSymbol),s=JSON.stringify(this.defaultSymbol),t=`${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;return`${e}.${s}.${this.classBreakInfos.reduce(((e,s)=>e+s.getMeshHash()),\"\")}.${t}.${this.field}.${this.valueExpression}`}get arcadeRequired(){return this.arcadeRequiredForVisualVariables||!!this.valueExpression}clone(){return new V({field:this.field,backgroundFillSymbol:this.backgroundFillSymbol&&this.backgroundFillSymbol.clone(),defaultLabel:this.defaultLabel,defaultSymbol:this.defaultSymbol&&this.defaultSymbol.clone(),valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,classBreakInfos:o(this.classBreakInfos),isMaxInclusive:this.isMaxInclusive,normalizationField:this.normalizationField,normalizationTotal:this.normalizationTotal,normalizationType:this.normalizationType,visualVariables:o(this.visualVariables),legendOptions:o(this.legendOptions),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}async collectRequiredFields(e,s){const t=[this.collectVVRequiredFields(e,s),this.collectSymbolFields(e,s)];await Promise.all(t)}async collectSymbolFields(e,s){const t=[...this.getSymbols().map((t=>t.collectRequiredFields(e,s))),g(e,s,this.valueExpression)];b(e,s,this.field),b(e,s,this.normalizationField),await Promise.all(t)}_getBreakIndexForExpression(e,s){const{viewingMode:t,scale:o,spatialReference:i,arcade:r}=a(s,{}),{valueExpression:n}=this;let u=this._compiledValueExpression.valueExpression===n?this._compiledValueExpression.compiledFunction:null;const c=l(r).arcadeUtils;if(!u){const e=c.createSyntaxTree(n);u=c.createFunction(e),this._compiledValueExpression.compiledFunction=u}this._compiledValueExpression.valueExpression=n;const p=c.executeFunction(u,c.createExecContext(e,c.getViewInfo({viewingMode:t,scale:o,spatialReference:i})));return this._getBreakIndexfromInfos(p)}_getBreakIndexForField(e){const s=this.field,t=e.attributes,o=this.normalizationType;let i=parseFloat(t[s]);if(o){const e=this.normalizationTotal,s=parseFloat(this.normalizationField?t[this.normalizationField]:void 0);if(o===E)i=Math.log(i)*Math.LOG10E;else if(o!==j||null==e||isNaN(e)){if(o===z&&!isNaN(s)){if(isNaN(i)||isNaN(s))return-1;i/=s}}else i=i/e*100}return this._getBreakIndexfromInfos(i)}_getBreakIndexfromInfos(e){const s=this.isMaxInclusive;if(null!=e&&\"number\"==typeof e&&!isNaN(e))for(let t=0;t<this.classBreakInfos.length;t++){const o=[this.classBreakInfos[t].minValue,this.classBreakInfos[t].maxValue];if(o[0]<=e&&(s?e<=o[1]:e<o[1]))return t}return-1}_areClassBreaksConsecutive(){const e=this.classBreakInfos,s=e.length;for(let t=1;t<s;t++)if(e[t-1].maxValue!==e[t].minValue)return!1;return!0}};e([n(v)],C.prototype,\"backgroundFillSymbol\",void 0),e([n({type:[I]})],C.prototype,\"classBreakInfos\",void 0),e([p(\"classBreakInfos\")],C.prototype,\"readClassBreakInfos\",null),e([d(\"classBreakInfos\")],C.prototype,\"writeClassBreakInfos\",null),e([n({type:String,json:{write:!0}})],C.prototype,\"defaultLabel\",void 0),e([n(B)],C.prototype,\"defaultSymbol\",void 0),e([n({type:String,json:{write:!0}})],C.prototype,\"field\",void 0),e([u(\"field\")],C.prototype,\"castField\",null),e([n({type:Boolean})],C.prototype,\"isMaxInclusive\",void 0),e([n({type:S,json:{write:!0}})],C.prototype,\"legendOptions\",void 0),e([n({type:Number,readOnly:!0,value:null,json:{read:!1,write:{overridePolicy(){return 0!==this.classBreakInfos.length&&this._areClassBreaksConsecutive()?{enabled:!0}:{enabled:!1}}}}})],C.prototype,\"minValue\",null),e([n({type:String,json:{write:!0}})],C.prototype,\"normalizationField\",void 0),e([n({type:Number,cast:e=>y(e),json:{write:!0}})],C.prototype,\"normalizationTotal\",void 0),e([n({type:w.apiValues,value:null,json:{type:w.jsonValues,read:w.read,write:w.write}})],C.prototype,\"normalizationType\",null),e([c({classBreaks:\"class-breaks\"})],C.prototype,\"type\",void 0),e([n({type:String,json:{write:!0}})],C.prototype,\"valueExpression\",void 0),e([n({type:String,json:{write:!0}})],C.prototype,\"valueExpressionTitle\",void 0),C=V=e([m(\"esri.renderers.ClassBreaksRenderer\")],C);const _=C;export{_ as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}