{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from \"./GeographicTransformationStep.js\";\nvar s = /*#__PURE__*/function () {\n  function s(_s3) {\n    _classCallCheck(this, s);\n    if (this.steps = [], this._cachedProjection = {}, this._chain = \"\", this._gtlistentry = null, _s3 && _s3.steps) {\n      var _iterator = _createForOfIteratorHelper(_s3.steps),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n          i instanceof t ? this.steps.push(i) : this.steps.push(new t({\n            wkid: i.wkid,\n            wkt: i.wkt,\n            isInverse: i.isInverse\n          }));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n  _createClass(s, [{\n    key: \"getInverse\",\n    value: function getInverse() {\n      var t = new s();\n      t.steps = [];\n      for (var _s7 = this.steps.length - 1; _s7 >= 0; _s7--) {\n        var i = this.steps[_s7];\n        t.steps.push(i.getInverse());\n      }\n      return t;\n    }\n  }, {\n    key: \"getGTListEntry\",\n    value: function getGTListEntry() {\n      var t = \"\";\n      var _iterator2 = _createForOfIteratorHelper(this.steps),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _s5 = _step2.value;\n          t += _s5.uid.toString() + \",\";\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return t !== this._chain && (this._gtlistentry = null, this._cachedProjection = {}, this._chain = t), this._gtlistentry;\n    }\n  }, {\n    key: \"assignCachedGe\",\n    value: function assignCachedGe(t, i, e) {\n      this._cachedProjection[s.cacheKey(t, i)] = e;\n    }\n  }, {\n    key: \"getCachedGeTransformation\",\n    value: function getCachedGeTransformation(t, i) {\n      var e = \"\";\n      var _iterator3 = _createForOfIteratorHelper(this.steps),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _s6 = _step3.value;\n          e += _s6.uid.toString() + \",\";\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      e !== this._chain && (this._gtlistentry = null, this._cachedProjection = {}, this._chain = e);\n      var n = this._cachedProjection[s.cacheKey(t, i)];\n      return void 0 === n ? null : n;\n    }\n  }], [{\n    key: \"cacheKey\",\n    value: function cacheKey(t, _s) {\n      return [void 0 !== t.wkid && null !== t.wkid ? t.wkid.toString() : \"-1\", void 0 !== t.wkt && null !== t.wkt ? t.wkt.toString() : \"\", void 0 !== _s.wkid && null !== _s.wkid ? _s.wkid.toString() : \"-1\", void 0 !== _s.wkt && null !== _s.wkt ? _s.wkt.toString() : \"\"].join(\",\");\n    }\n  }, {\n    key: \"fromGE\",\n    value: function fromGE(i) {\n      var e = new s();\n      var n = \"\";\n      var _iterator4 = _createForOfIteratorHelper(i.steps),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _s2 = _step4.value;\n          var _i = t.fromGE(_s2);\n          e.steps.push(_i), n += _i.uid.toString() + \",\";\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return e._cachedProjection = {}, e._gtlistentry = null, e._chain = n, e;\n    }\n  }]);\n  return s;\n}();\nexport { s as default };","map":{"version":3,"names":["t","s","_classCallCheck","steps","_cachedProjection","_chain","_gtlistentry","_iterator","_createForOfIteratorHelper","_step","n","done","i","value","push","wkid","wkt","isInverse","err","e","f","_createClass","key","getInverse","length","getGTListEntry","_iterator2","_step2","uid","toString","assignCachedGe","cacheKey","getCachedGeTransformation","_iterator3","_step3","join","fromGE","_iterator4","_step4","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/geometry/support/GeographicTransformation.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from\"./GeographicTransformationStep.js\";class s{static cacheKey(t,s){return[void 0!==t.wkid&&null!==t.wkid?t.wkid.toString():\"-1\",void 0!==t.wkt&&null!==t.wkt?t.wkt.toString():\"\",void 0!==s.wkid&&null!==s.wkid?s.wkid.toString():\"-1\",void 0!==s.wkt&&null!==s.wkt?s.wkt.toString():\"\"].join(\",\")}static fromGE(i){const e=new s;let n=\"\";for(const s of i.steps){const i=t.fromGE(s);e.steps.push(i),n+=i.uid.toString()+\",\"}return e._cachedProjection={},e._gtlistentry=null,e._chain=n,e}constructor(s){if(this.steps=[],this._cachedProjection={},this._chain=\"\",this._gtlistentry=null,s&&s.steps)for(const i of s.steps)i instanceof t?this.steps.push(i):this.steps.push(new t({wkid:i.wkid,wkt:i.wkt,isInverse:i.isInverse}))}getInverse(){const t=new s;t.steps=[];for(let s=this.steps.length-1;s>=0;s--){const i=this.steps[s];t.steps.push(i.getInverse())}return t}getGTListEntry(){let t=\"\";for(const s of this.steps)t+=s.uid.toString()+\",\";return t!==this._chain&&(this._gtlistentry=null,this._cachedProjection={},this._chain=t),this._gtlistentry}assignCachedGe(t,i,e){this._cachedProjection[s.cacheKey(t,i)]=e}getCachedGeTransformation(t,i){let e=\"\";for(const s of this.steps)e+=s.uid.toString()+\",\";e!==this._chain&&(this._gtlistentry=null,this._cachedProjection={},this._chain=e);const n=this._cachedProjection[s.cacheKey(t,i)];return void 0===n?null:n}}export{s as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}