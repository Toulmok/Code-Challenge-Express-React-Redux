{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../chunks/tslib.es6.js\";\nimport e from \"../../core/Error.js\";\nimport { JSONSupport as s } from \"../../core/JSONSupport.js\";\nimport { clone as i } from \"../../core/lang.js\";\nimport l from \"../../core/Logger.js\";\nimport { isSome as r, isNone as o } from \"../../core/maybe.js\";\nimport { property as a } from \"../../core/accessorSupport/decorators/property.js\";\nimport { cast as h } from \"../../core/accessorSupport/decorators/cast.js\";\nimport { subclass as n } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { SimpleBandStatistics as p } from \"./SimpleBandStatistics.js\";\nimport { getPixelValueRange as c } from \"./rasterFormats/pixelRangeUtils.js\";\nvar _u;\nvar g = _u = /*#__PURE__*/function (_s) {\n  _inherits(u, _s);\n  var _super = _createSuper(u);\n  function u(t) {\n    var _this;\n    _classCallCheck(this, u);\n    _this = _super.call(this, t), _this.width = null, _this.height = null, _this.pixelType = \"f32\", _this.validPixelCount = null, _this.mask = null, _this.maskIsAlpha = !1, _this.premultiplyAlpha = !1, _this.statistics = null, _this.depthCount = 1;\n    return _this;\n  }\n  _createClass(u, [{\n    key: \"castPixelType\",\n    value: function castPixelType(t) {\n      if (!t) return \"f32\";\n      var e = t.toLowerCase();\n      return [\"u1\", \"u2\", \"u4\"].includes(e) ? e = \"u8\" : [\"unknown\", \"u8\", \"s8\", \"u16\", \"s16\", \"u32\", \"s32\", \"f32\", \"f64\"].includes(e) || (e = \"f32\"), e;\n    }\n  }, {\n    key: \"getPlaneCount\",\n    value: function getPlaneCount() {\n      var _this$pixels;\n      return (_this$pixels = this.pixels) === null || _this$pixels === void 0 ? void 0 : _this$pixels.length;\n    }\n  }, {\n    key: \"addData\",\n    value: function addData(t) {\n      var _t$statistics;\n      if (!t.pixels || t.pixels.length !== this.width * this.height) throw new e(\"pixelblock:invalid-or-missing-pixels\", \"add data requires valid pixels array that has same length defined by pixel block width * height\");\n      this.pixels || (this.pixels = []), this.statistics || (this.statistics = []), this.pixels.push(t.pixels), this.statistics.push((_t$statistics = t.statistics) !== null && _t$statistics !== void 0 ? _t$statistics : new p());\n    }\n  }, {\n    key: \"getAsRGBA\",\n    value: function getAsRGBA() {\n      var t = new ArrayBuffer(this.width * this.height * 4);\n      switch (this.pixelType) {\n        case \"s8\":\n        case \"s16\":\n        case \"u16\":\n        case \"s32\":\n        case \"u32\":\n        case \"f32\":\n        case \"f64\":\n          this._fillFromNon8Bit(t);\n          break;\n        default:\n          this._fillFrom8Bit(t);\n      }\n      return new Uint8ClampedArray(t);\n    }\n  }, {\n    key: \"getAsRGBAFloat\",\n    value: function getAsRGBAFloat() {\n      var t = new Float32Array(this.width * this.height * 4);\n      return this._fillFrom32Bit(t), t;\n    }\n  }, {\n    key: \"updateStatistics\",\n    value: function updateStatistics() {\n      var _this2 = this;\n      if (!this.pixels) return;\n      this.statistics = this.pixels.map(function (t) {\n        return _this2._calculateBandStatistics(t, _this2.mask);\n      });\n      var t = this.mask;\n      var e = 0;\n      if (r(t)) for (var _s2 = 0; _s2 < t.length; _s2++) t[_s2] && e++;else e = this.width * this.height;\n      this.validPixelCount = e;\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(t) {\n      if (!t || \"f64\" === t || \"f32\" === t || !this.pixels) return;\n      var _c = c(t),\n        _c2 = _slicedToArray(_c, 2),\n        e = _c2[0],\n        s = _c2[1],\n        i = this.pixels,\n        l = this.width * this.height,\n        r = i.length;\n      var o, a, h;\n      var n = [];\n      for (var _p = 0; _p < r; _p++) {\n        h = _u.createEmptyBand(t, l), o = i[_p];\n        for (var _t = 0; _t < l; _t++) a = o[_t], h[_t] = a > s ? s : a < e ? e : a;\n        n.push(h);\n      }\n      this.pixels = n, this.pixelType = t;\n    }\n  }, {\n    key: \"extractBands\",\n    value: function extractBands(t) {\n      var e = this.pixels,\n        s = this.statistics;\n      if (o(t) || 0 === t.length || !e || 0 === e.length) return this;\n      var i = e.length,\n        l = t.some(function (t) {\n          return t >= e.length;\n        }),\n        r = i === t.length && !t.some(function (t, e) {\n          return t !== e;\n        });\n      return l || r ? this : new _u({\n        pixelType: this.pixelType,\n        width: this.width,\n        height: this.height,\n        mask: this.mask,\n        validPixelCount: this.validPixelCount,\n        maskIsAlpha: this.maskIsAlpha,\n        pixels: t.map(function (t) {\n          return e[t];\n        }),\n        statistics: s && t.map(function (t) {\n          return s[t];\n        })\n      });\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var t = new _u({\n        width: this.width,\n        height: this.height,\n        pixelType: this.pixelType,\n        maskIsAlpha: this.maskIsAlpha,\n        validPixelCount: this.validPixelCount\n      });\n      var e;\n      r(this.mask) && (this.mask instanceof Uint8Array ? t.mask = new Uint8Array(this.mask) : t.mask = this.mask.slice(0));\n      var s = _u.getPixelArrayConstructor(this.pixelType);\n      if (this.pixels && this.pixels.length > 0) {\n        t.pixels = [];\n        var _i = !!this.pixels[0].slice;\n        for (e = 0; e < this.pixels.length; e++) t.pixels[e] = _i ? this.pixels[e].slice(0, this.pixels[e].length) : new s(this.pixels[e]);\n      }\n      if (this.statistics) for (t.statistics = [], e = 0; e < this.statistics.length; e++) t.statistics[e] = i(this.statistics[e]);\n      return t.premultiplyAlpha = this.premultiplyAlpha, t;\n    }\n  }, {\n    key: \"_fillFrom8Bit\",\n    value: function _fillFrom8Bit(t) {\n      var e = this.mask,\n        s = this.maskIsAlpha,\n        i = this.premultiplyAlpha,\n        o = this.pixels;\n      if (!t || !o || !o.length) return void l.getLogger(this.declaredClass).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n      var a, h, n, p;\n      a = h = n = o[0], o.length >= 3 ? (h = o[1], n = o[2]) : 2 === o.length && (h = o[1]);\n      var c = new Uint32Array(t),\n        _u2 = this.width * this.height;\n      if (a.length === _u2) {\n        if (r(e) && e.length === _u2) {\n          if (s) for (p = 0; p < _u2; p++) {\n            var _t2 = e[p];\n            if (_t2) {\n              var _e = _t2 / 255;\n              c[p] = i ? _t2 << 24 | n[p] * _e << 16 | h[p] * _e << 8 | a[p] * _e : _t2 << 24 | n[p] << 16 | h[p] << 8 | a[p];\n            }\n          } else for (p = 0; p < _u2; p++) e[p] && (c[p] = 255 << 24 | n[p] << 16 | h[p] << 8 | a[p]);\n        } else for (p = 0; p < _u2; p++) c[p] = 255 << 24 | n[p] << 16 | h[p] << 8 | a[p];\n      } else l.getLogger(this.declaredClass).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n    }\n  }, {\n    key: \"_fillFromNon8Bit\",\n    value: function _fillFromNon8Bit(t) {\n      var e = this.pixels,\n        s = this.mask,\n        i = this.statistics;\n      if (!t || !e || !e.length) return void l.getLogger(this.declaredClass).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n      var o = this.pixelType;\n      var a = 1,\n        h = 0,\n        n = 1;\n      if (i && i.length > 0) {\n        var _iterator = _createForOfIteratorHelper(i),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _t3 = _step.value;\n            if (null != _t3.minValue && (h = Math.min(h, _t3.minValue)), null != _t3.maxValue && null != _t3.minValue) {\n              var _e2 = _t3.maxValue - _t3.minValue;\n              n = Math.max(n, _e2);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        a = 255 / n;\n      } else {\n        var _t4 = 255;\n        \"s8\" === o ? (h = -128, _t4 = 127) : \"u16\" === o ? _t4 = 65535 : \"s16\" === o ? (h = -32768, _t4 = 32767) : \"u32\" === o ? _t4 = 4294967295 : \"s32\" === o ? (h = -2147483648, _t4 = 2147483647) : \"f32\" === o ? (h = -34e38, _t4 = 34e38) : \"f64\" === o && (h = -Number.MAX_VALUE, _t4 = Number.MAX_VALUE), a = 255 / (_t4 - h);\n      }\n      var p = new Uint32Array(t),\n        c = this.width * this.height;\n      var _u3, g, m, d, f;\n      if (_u3 = g = m = e[0], _u3.length !== c) return l.getLogger(this.declaredClass).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n      if (e.length >= 2) {\n        if (g = e[1], e.length >= 3 && (m = e[2]), r(s) && s.length === c) for (d = 0; d < c; d++) s[d] && (p[d] = 255 << 24 | (m[d] - h) * a << 16 | (g[d] - h) * a << 8 | (_u3[d] - h) * a);else for (d = 0; d < c; d++) p[d] = 255 << 24 | (m[d] - h) * a << 16 | (g[d] - h) * a << 8 | (_u3[d] - h) * a;\n      } else if (r(s) && s.length === c) for (d = 0; d < c; d++) f = (_u3[d] - h) * a, s[d] && (p[d] = 255 << 24 | f << 16 | f << 8 | f);else for (d = 0; d < c; d++) f = (_u3[d] - h) * a, p[d] = 255 << 24 | f << 16 | f << 8 | f;\n    }\n  }, {\n    key: \"_fillFrom32Bit\",\n    value: function _fillFrom32Bit(t) {\n      var e = this.pixels,\n        s = this.mask;\n      if (!t || !e || !e.length) return l.getLogger(this.declaredClass).error(\"getAsRGBAFloat()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n      var i, o, a, h;\n      i = o = a = e[0], e.length >= 3 ? (o = e[1], a = e[2]) : 2 === e.length && (o = e[1]);\n      var n = this.width * this.height;\n      if (i.length !== n) return l.getLogger(this.declaredClass).error(\"getAsRGBAFloat()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n      var p = 0;\n      if (r(s) && s.length === n) for (h = 0; h < n; h++) t[p++] = i[h], t[p++] = o[h], t[p++] = a[h], t[p++] = 1 & s[h];else for (h = 0; h < n; h++) t[p++] = i[h], t[p++] = o[h], t[p++] = a[h], t[p++] = 1;\n    }\n  }, {\n    key: \"_calculateBandStatistics\",\n    value: function _calculateBandStatistics(t, e) {\n      var s = 1 / 0,\n        i = -1 / 0;\n      var l = t.length;\n      var o,\n        a = 0;\n      if (r(e)) for (o = 0; o < l; o++) e[o] && (a = t[o], s = a < s ? a : s, i = a > i ? a : i);else for (o = 0; o < l; o++) a = t[o], s = a < s ? a : s, i = a > i ? a : i;\n      return new p(s, i);\n    }\n  }], [{\n    key: \"createEmptyBand\",\n    value: function createEmptyBand(t, e) {\n      return new (_u.getPixelArrayConstructor(t))(e);\n    }\n  }, {\n    key: \"getPixelArrayConstructor\",\n    value: function getPixelArrayConstructor(t) {\n      var e;\n      switch (t) {\n        case \"u1\":\n        case \"u2\":\n        case \"u4\":\n        case \"u8\":\n          e = Uint8Array;\n          break;\n        case \"u16\":\n          e = Uint16Array;\n          break;\n        case \"u32\":\n          e = Uint32Array;\n          break;\n        case \"s8\":\n          e = Int8Array;\n          break;\n        case \"s16\":\n          e = Int16Array;\n          break;\n        case \"s32\":\n          e = Int32Array;\n          break;\n        case \"f32\":\n        case \"c64\":\n        case \"c128\":\n        case \"unknown\":\n          e = Float32Array;\n          break;\n        case \"f64\":\n          e = Float64Array;\n      }\n      return e;\n    }\n  }]);\n  return u;\n}(s);\nt([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"width\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"height\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"pixelType\", void 0), t([h(\"pixelType\")], g.prototype, \"castPixelType\", null), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"validPixelCount\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"mask\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"maskIsAlpha\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"pixels\", void 0), t([a()], g.prototype, \"premultiplyAlpha\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"statistics\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"depthCount\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"noDataValues\", void 0), t([a({\n  json: {\n    write: !0\n  }\n})], g.prototype, \"bandMasks\", void 0), g = _u = t([n(\"esri.layers.support.PixelBlock\")], g);\nvar m = g;\nexport { m as default };","map":{"version":3,"names":["_","t","e","JSONSupport","s","clone","i","l","isSome","r","isNone","o","property","a","cast","h","subclass","n","SimpleBandStatistics","p","getPixelValueRange","c","u","g","_s","_inherits","_super","_createSuper","_this","_classCallCheck","call","width","height","pixelType","validPixelCount","mask","maskIsAlpha","premultiplyAlpha","statistics","depthCount","_createClass","key","value","castPixelType","toLowerCase","includes","getPlaneCount","_this$pixels","pixels","length","addData","_t$statistics","push","getAsRGBA","ArrayBuffer","_fillFromNon8Bit","_fillFrom8Bit","Uint8ClampedArray","getAsRGBAFloat","Float32Array","_fillFrom32Bit","updateStatistics","_this2","map","_calculateBandStatistics","clamp","_c","_c2","_slicedToArray","createEmptyBand","extractBands","some","Uint8Array","slice","getPixelArrayConstructor","getLogger","declaredClass","error","Uint32Array","_iterator","_createForOfIteratorHelper","_step","done","minValue","Math","min","maxValue","max","err","f","Number","MAX_VALUE","m","d","Uint16Array","Int8Array","Int16Array","Int32Array","Float64Array","json","write","prototype","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/support/PixelBlock.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../chunks/tslib.es6.js\";import e from\"../../core/Error.js\";import{JSONSupport as s}from\"../../core/JSONSupport.js\";import{clone as i}from\"../../core/lang.js\";import l from\"../../core/Logger.js\";import{isSome as r,isNone as o}from\"../../core/maybe.js\";import{property as a}from\"../../core/accessorSupport/decorators/property.js\";import{cast as h}from\"../../core/accessorSupport/decorators/cast.js\";import{subclass as n}from\"../../core/accessorSupport/decorators/subclass.js\";import{SimpleBandStatistics as p}from\"./SimpleBandStatistics.js\";import{getPixelValueRange as c}from\"./rasterFormats/pixelRangeUtils.js\";var u;let g=u=class extends s{static createEmptyBand(t,e){return new(u.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case\"u1\":case\"u2\":case\"u4\":case\"u8\":e=Uint8Array;break;case\"u16\":e=Uint16Array;break;case\"u32\":e=Uint32Array;break;case\"s8\":e=Int8Array;break;case\"s16\":e=Int16Array;break;case\"s32\":e=Int32Array;break;case\"f32\":case\"c64\":case\"c128\":case\"unknown\":e=Float32Array;break;case\"f64\":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType=\"f32\",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return\"f32\";let e=t.toLowerCase();return[\"u1\",\"u2\",\"u4\"].includes(e)?e=\"u8\":[\"unknown\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"].includes(e)||(e=\"f32\"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new e(\"pixelblock:invalid-or-missing-pixels\",\"add data requires valid pixels array that has same length defined by pixel block width * height\");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new p)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case\"s8\":case\"s16\":case\"u16\":case\"s32\":case\"u32\":case\"f32\":case\"f64\":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(r(t))for(let s=0;s<t.length;s++)t[s]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||\"f64\"===t||\"f32\"===t||!this.pixels)return;const[e,s]=c(t),i=this.pixels,l=this.width*this.height,r=i.length;let o,a,h;const n=[];for(let p=0;p<r;p++){h=u.createEmptyBand(t,l),o=i[p];for(let t=0;t<l;t++)a=o[t],h[t]=a>s?s:a<e?e:a;n.push(h)}this.pixels=n,this.pixelType=t}extractBands(t){const{pixels:e,statistics:s}=this;if(o(t)||0===t.length||!e||0===e.length)return this;const i=e.length,l=t.some((t=>t>=e.length)),r=i===t.length&&!t.some(((t,e)=>t!==e));return l||r?this:new u({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:s&&t.map((t=>s[t]))})}clone(){const t=new u({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;r(this.mask)&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const s=u.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice(0,this.pixels[e].length):new s(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=i(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:s,premultiplyAlpha:i,pixels:o}=this;if(!t||!o||!o.length)return void l.getLogger(this.declaredClass).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The input pixel block is empty.\");let a,h,n,p;a=h=n=o[0],o.length>=3?(h=o[1],n=o[2]):2===o.length&&(h=o[1]);const c=new Uint32Array(t),u=this.width*this.height;if(a.length===u)if(r(e)&&e.length===u)if(s)for(p=0;p<u;p++){const t=e[p];if(t){const e=t/255;c[p]=i?t<<24|n[p]*e<<16|h[p]*e<<8|a[p]*e:t<<24|n[p]<<16|h[p]<<8|a[p]}}else for(p=0;p<u;p++)e[p]&&(c[p]=255<<24|n[p]<<16|h[p]<<8|a[p]);else for(p=0;p<u;p++)c[p]=255<<24|n[p]<<16|h[p]<<8|a[p];else l.getLogger(this.declaredClass).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The pixelblock is invalid.\")}_fillFromNon8Bit(t){const{pixels:e,mask:s,statistics:i}=this;if(!t||!e||!e.length)return void l.getLogger(this.declaredClass).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The input pixel block is empty.\");const o=this.pixelType;let a=1,h=0,n=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(h=Math.min(h,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;n=Math.max(n,e)}a=255/n}else{let t=255;\"s8\"===o?(h=-128,t=127):\"u16\"===o?t=65535:\"s16\"===o?(h=-32768,t=32767):\"u32\"===o?t=4294967295:\"s32\"===o?(h=-2147483648,t=2147483647):\"f32\"===o?(h=-34e38,t=34e38):\"f64\"===o&&(h=-Number.MAX_VALUE,t=Number.MAX_VALUE),a=255/(t-h)}const p=new Uint32Array(t),c=this.width*this.height;let u,g,m,d,f;if(u=g=m=e[0],u.length!==c)return l.getLogger(this.declaredClass).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The pixelblock is invalid.\");if(e.length>=2)if(g=e[1],e.length>=3&&(m=e[2]),r(s)&&s.length===c)for(d=0;d<c;d++)s[d]&&(p[d]=255<<24|(m[d]-h)*a<<16|(g[d]-h)*a<<8|(u[d]-h)*a);else for(d=0;d<c;d++)p[d]=255<<24|(m[d]-h)*a<<16|(g[d]-h)*a<<8|(u[d]-h)*a;else if(r(s)&&s.length===c)for(d=0;d<c;d++)f=(u[d]-h)*a,s[d]&&(p[d]=255<<24|f<<16|f<<8|f);else for(d=0;d<c;d++)f=(u[d]-h)*a,p[d]=255<<24|f<<16|f<<8|f}_fillFrom32Bit(t){const{pixels:e,mask:s}=this;if(!t||!e||!e.length)return l.getLogger(this.declaredClass).error(\"getAsRGBAFloat()\",\"Unable to convert to RGBA. The input pixel block is empty.\");let i,o,a,h;i=o=a=e[0],e.length>=3?(o=e[1],a=e[2]):2===e.length&&(o=e[1]);const n=this.width*this.height;if(i.length!==n)return l.getLogger(this.declaredClass).error(\"getAsRGBAFloat()\",\"Unable to convert to RGBA. The pixelblock is invalid.\");let p=0;if(r(s)&&s.length===n)for(h=0;h<n;h++)t[p++]=i[h],t[p++]=o[h],t[p++]=a[h],t[p++]=1&s[h];else for(h=0;h<n;h++)t[p++]=i[h],t[p++]=o[h],t[p++]=a[h],t[p++]=1}_calculateBandStatistics(t,e){let s=1/0,i=-1/0;const l=t.length;let o,a=0;if(r(e))for(o=0;o<l;o++)e[o]&&(a=t[o],s=a<s?a:s,i=a>i?a:i);else for(o=0;o<l;o++)a=t[o],s=a<s?a:s,i=a>i?a:i;return new p(s,i)}};t([a({json:{write:!0}})],g.prototype,\"width\",void 0),t([a({json:{write:!0}})],g.prototype,\"height\",void 0),t([a({json:{write:!0}})],g.prototype,\"pixelType\",void 0),t([h(\"pixelType\")],g.prototype,\"castPixelType\",null),t([a({json:{write:!0}})],g.prototype,\"validPixelCount\",void 0),t([a({json:{write:!0}})],g.prototype,\"mask\",void 0),t([a({json:{write:!0}})],g.prototype,\"maskIsAlpha\",void 0),t([a({json:{write:!0}})],g.prototype,\"pixels\",void 0),t([a()],g.prototype,\"premultiplyAlpha\",void 0),t([a({json:{write:!0}})],g.prototype,\"statistics\",void 0),t([a({json:{write:!0}})],g.prototype,\"depthCount\",void 0),t([a({json:{write:!0}})],g.prototype,\"noDataValues\",void 0),t([a({json:{write:!0}})],g.prototype,\"bandMasks\",void 0),g=u=t([n(\"esri.layers.support.PixelBlock\")],g);const m=g;export{m as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}