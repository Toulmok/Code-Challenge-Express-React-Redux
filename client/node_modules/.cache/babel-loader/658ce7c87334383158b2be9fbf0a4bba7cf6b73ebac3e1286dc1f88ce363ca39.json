{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\query-table-tabulator.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ReactTabulator } from 'react-tabulator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar data = [{\n  id: 1,\n  title: \"Oli Bob\",\n  created: \"12\",\n  tags: \"red\"\n}];\nexport class QueryTableTabulator extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      selectedTitle: \"\"\n    };\n    this.ref = null;\n    this.columns = [{\n      title: \"Title\",\n      field: \"title\"\n    }, {\n      title: \"Created\",\n      field: \"created\"\n    }, {\n      title: \"Tags\",\n      field: \"tags\"\n    }];\n    this.setData = () => {\n      this.setState({\n        data\n      });\n    };\n    this.clearData = () => {\n      this.setState({\n        data: []\n      });\n    };\n    this.rowClick = (e, row) => {\n      // console.log(\"ref table: \", this.ref.current); // this is the Tabulator table instance\n      // console.log(\"rowClick id: ${row.getData().id}\", row, e);\n      this.setState({\n        selectedTitle: row.getData().title\n      });\n    };\n  }\n  render() {\n    console.log(\"query-table-tabulator\");\n    const data = this.props.userItems;\n    const options = {\n      height: 150,\n      movableRows: true,\n      movableColumns: true\n    };\n    console.log(this.props.userItems);\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactTabulator, {\n        onRef: r => this.ref = r,\n        columns: this.columns,\n        data: data,\n        events: {\n          rowClick: this.rowClick\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Selected Title: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.selectedTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nQueryTableTabulator.defaultProps = {\n  userItems: [{\n    id: ''\n  }]\n};\nconst mapStateToProps = _ref => {\n  let {\n    query: {\n      userItems\n    }\n  } = _ref;\n  return {\n    userItems\n  };\n};\nexport default connect(mapStateToProps)(QueryTableTabulator);","map":{"version":3,"names":["React","connect","ReactTabulator","jsxDEV","_jsxDEV","data","id","title","created","tags","QueryTableTabulator","Component","constructor","arguments","state","selectedTitle","ref","columns","field","setData","setState","clearData","rowClick","e","row","getData","render","console","log","props","userItems","options","height","movableRows","movableColumns","children","onRef","r","events","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","mapStateToProps","_ref","query"],"sources":["C:/code-challenge-react/frontend/src/components/main/query-table-tabulator.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport 'react-tabulator/lib/styles.css';\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\nimport { ColumnDefinition, ReactTabulator, reactFormatter } from 'react-tabulator'\n\nvar data = [\n  {id:1, title:\"Oli Bob\", created:\"12\", tags:\"red\", },\n]\n\ninterface Item {\n  id: string,\n  title?: string,\n  created?: Date,\n  tags?: string[]\n}\n\ninterface ItemProps {\n  userItems: Item[],\n}\n\nexport class QueryTableTabulator extends React.Component <ItemProps, any> {\n  state = {\n    data: [],\n    selectedTitle: \"\"\n  }\n  ref = null\n  public static defaultProps = { userItems: [{id:'',}], }\n\n  columns: ColumnDefinition[] = [\n    { title: \"Title\", field: \"title\", },\n    { title: \"Created\", field: \"created\", },\n    { title: \"Tags\", field: \"tags\" },\n  ]\n\n  setData = () => { this.setState({ data })}\n  clearData = () => { this.setState({ data: [] })}\n  rowClick = (e:any, row:any) => {\n    // console.log(\"ref table: \", this.ref.current); // this is the Tabulator table instance\n    // console.log(\"rowClick id: ${row.getData().id}\", row, e);\n    this.setState({ selectedTitle: row.getData().title });\n  }\n  \n  render() { console.log(\"query-table-tabulator\")\n    const data = this.props.userItems\n\n    const options = {\n      height: 150,\n      movableRows: true,\n      movableColumns: true,\n    }\n\n    console.log(this.props.userItems)\n    console.log(data)\n    return (\n      <div>\n        <ReactTabulator \n          onRef={(r) => (this.ref = r)}\n          columns={this.columns}\n          data={data} \n          events={{ rowClick: this.rowClick }}\n        />\n        <i>\n          Selected Title: <strong>{this.state.selectedTitle}</strong>\n        </i>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems }}:any) => ({\n  userItems,\n})\n\nexport default connect(mapStateToProps, )(QueryTableTabulator)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}