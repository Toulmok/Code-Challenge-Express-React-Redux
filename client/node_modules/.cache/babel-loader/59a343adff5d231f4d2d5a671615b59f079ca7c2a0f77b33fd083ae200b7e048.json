{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport { isSome as r, unwrap as e } from \"../../core/maybe.js\";\nimport t from \"../../geometry/support/GeographicTransformation.js\";\nimport s from \"./PixelBlock.js\";\nimport { decode as o } from \"./rasterFormats/RasterCodec.js\";\nimport { split as i, mosaic as n, approximateTransform as a, getLocalArithmeticNorthRotations as m } from \"./rasterFunctions/pixelUtils.js\";\nimport { create as l } from \"./rasterFunctions/rasterFunctionHelper.js\";\nimport { requirePE as c, load as f, getProjectionOffsetGrid as p } from \"./rasterFunctions/rasterProjectionHelper.js\";\nimport { estimateStatisticsHistograms as u } from \"./rasterFunctions/stretchUtils.js\";\nimport { convertVectorFieldData as d, convertToLocalDirections as S } from \"./rasterFunctions/vectorFieldUtils.js\";\nimport { readTransform as y } from \"./rasterTransforms/utils.js\";\nimport h from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as x } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport O from \"../../geometry/Extent.js\";\nclass N {\n  convertVectorFieldData(e) {\n    const t = s.fromJSON(e.pixelBlock),\n      o = d(t, e.type);\n    return Promise.resolve(r(o) ? o.toJSON() : null);\n  }\n  async decode(r) {\n    const e = await o(r.data, r.options);\n    return e && e.toJSON();\n  }\n  symbolize(e) {\n    e.pixelBlock = s.fromJSON(e.pixelBlock), e.extent = e.extent ? O.fromJSON(e.extent) : null;\n    const t = this.symbolizer.symbolize(e);\n    return Promise.resolve(r(t) ? t.toJSON() : null);\n  }\n  async updateSymbolizer(r) {\n    this.symbolizer = h.fromJSON(r.symbolizerJSON), r.histograms && \"rasterStretch\" === this.symbolizer?.rendererJSON.type && (this.symbolizer.rendererJSON.histograms = r.histograms);\n  }\n  async updateRasterFunction(r) {\n    this.rasterFunction = l(r.rasterFunctionJSON);\n  }\n  async process(e) {\n    const t = this.rasterFunction.process({\n      extent: O.fromJSON(e.extent),\n      primaryPixelBlocks: e.primaryPixelBlocks.map(e => r(e) ? s.fromJSON(e) : null),\n      primaryRasterIds: e.primaryRasterIds\n    });\n    return r(t) ? t.toJSON() : null;\n  }\n  stretch(e) {\n    const t = this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock), e.stretchParams);\n    return Promise.resolve(r(t) && t.toJSON());\n  }\n  estimateStatisticsHistograms(r) {\n    const e = u(s.fromJSON(r.srcPixelBlock));\n    return Promise.resolve(e);\n  }\n  split(r) {\n    const e = i(s.fromJSON(r.srcPixelBlock), r.tileSize, r.maximumPyramidLevel);\n    return e && e.forEach((r, t) => {\n      e.set(t, r?.toJSON());\n    }), Promise.resolve(e);\n  }\n  async mosaicAndTransform(r) {\n    const t = r.srcPixelBlocks.map(r => r ? new s(r) : null),\n      o = n(t, r.srcMosaicSize, {\n        blockWidths: r.blockWidths,\n        alignmentInfo: r.alignmentInfo,\n        clipOffset: r.clipOffset,\n        clipSize: r.clipSize\n      });\n    let i,\n      l = o;\n    return r.coefs && (l = a(o, r.destDimension, r.coefs, r.sampleSpacing, r.interpolation)), r.projectDirections && r.gcsGrid && (i = m(r.destDimension, r.gcsGrid), l = e(S(l, r.isUV ? \"vector-uv\" : \"vector-magdir\", i))), {\n      pixelBlock: l?.toJSON(),\n      localNorthDirections: i\n    };\n  }\n  async createFlowMesh(r, e) {\n    const t = {\n        data: new Float32Array(r.flowData.buffer),\n        mask: new Uint8Array(r.flowData.maskBuffer),\n        width: r.flowData.width,\n        height: r.flowData.height\n      },\n      {\n        vertexData: s,\n        indexData: o\n      } = await x(r.meshType, r.simulationSettings, t, e.signal);\n    return {\n      result: {\n        vertexBuffer: s.buffer,\n        indexBuffer: o.buffer\n      },\n      transferList: [s.buffer, o.buffer]\n    };\n  }\n  async getProjectionOffsetGrid(r) {\n    const e = O.fromJSON(r.projectedExtent),\n      s = O.fromJSON(r.srcBufferExtent);\n    let o = null;\n    r.datumTransformationSteps && (o = new t({\n      steps: r.datumTransformationSteps\n    })), (r.includeGCSGrid || c(e.spatialReference, s.spatialReference, o)) && (await f());\n    const i = r.rasterTransform ? y(r.rasterTransform) : null;\n    return p({\n      ...r,\n      projectedExtent: e,\n      srcBufferExtent: s,\n      datumTransformation: o,\n      rasterTransform: i\n    });\n  }\n}\nexport { N as default };","map":{"version":3,"names":["isSome","r","unwrap","e","t","s","decode","o","split","i","mosaic","n","approximateTransform","a","getLocalArithmeticNorthRotations","m","create","l","requirePE","c","load","f","getProjectionOffsetGrid","p","estimateStatisticsHistograms","u","convertVectorFieldData","d","convertToLocalDirections","S","readTransform","y","h","createFlowMesh","x","O","N","fromJSON","pixelBlock","type","Promise","resolve","toJSON","data","options","symbolize","extent","symbolizer","updateSymbolizer","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","tileSize","maximumPyramidLevel","forEach","set","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","isUV","localNorthDirections","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","rasterTransform","datumTransformation","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r,unwrap as e}from\"../../core/maybe.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import s from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{split as i,mosaic as n,approximateTransform as a,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{create as l}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as c,load as f,getProjectionOffsetGrid as p}from\"./rasterFunctions/rasterProjectionHelper.js\";import{estimateStatisticsHistograms as u}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as d,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as y}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import O from\"../../geometry/Extent.js\";class N{convertVectorFieldData(e){const t=s.fromJSON(e.pixelBlock),o=d(t,e.type);return Promise.resolve(r(o)?o.toJSON():null)}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=s.fromJSON(e.pixelBlock),e.extent=e.extent?O.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(r(t)?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=l(r.rasterFunctionJSON)}async process(e){const t=this.rasterFunction.process({extent:O.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>r(e)?s.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return r(t)?t.toJSON():null}stretch(e){const t=this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(t)&&t.toJSON())}estimateStatisticsHistograms(r){const e=u(s.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,r?.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new s(r):null)),o=n(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let i,l=o;return r.coefs&&(l=a(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(i=m(r.destDimension,r.gcsGrid),l=e(S(l,r.isUV?\"vector-uv\":\"vector-magdir\",i))),{pixelBlock:l?.toJSON(),localNorthDirections:i}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(r){const e=O.fromJSON(r.projectedExtent),s=O.fromJSON(r.srcBufferExtent);let o=null;r.datumTransformationSteps&&(o=new t({steps:r.datumTransformationSteps})),(r.includeGCSGrid||c(e.spatialReference,s.spatialReference,o))&&await f();const i=r.rasterTransform?y(r.rasterTransform):null;return p({...r,projectedExtent:e,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}