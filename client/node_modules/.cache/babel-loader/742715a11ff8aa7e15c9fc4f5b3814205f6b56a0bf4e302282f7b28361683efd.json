{"ast":null,"code":"import _regeneratorRuntime from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/code-challenge-react/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { createResolver as e } from \"../../../../../core/promiseUtils.js\";\nvar r = /*#__PURE__*/function () {\n  function r() {\n    _classCallCheck(this, r);\n    this._resolver = null;\n  }\n  _createClass(r, [{\n    key: \"isHeld\",\n    value: function isHeld() {\n      return !!this._resolver;\n    }\n  }, {\n    key: \"acquire\",\n    value: function () {\n      var _acquire = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this._resolver) {\n                _context.next = 7;\n                break;\n              }\n              _context.next = 3;\n              return this._resolver.promise;\n            case 3:\n              _context.next = 5;\n              return this.acquire();\n            case 5:\n              _context.next = 8;\n              break;\n            case 7:\n              this._resolver = e();\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function acquire() {\n        return _acquire.apply(this, arguments);\n      }\n      return acquire;\n    }()\n  }, {\n    key: \"release\",\n    value: function release() {\n      var e = this._resolver;\n      this._resolver = null, e === null || e === void 0 ? void 0 : e.resolve();\n    }\n  }]);\n  return r;\n}();\nfunction s(_x, _x2, _x3) {\n  return _s.apply(this, arguments);\n}\nfunction _s() {\n  _s = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e, r, s) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return e.acquire();\n        case 3:\n          _context2.next = 5;\n          return r(s);\n        case 5:\n          e.release();\n          _context2.next = 11;\n          break;\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          throw e.release(), _context2.t0;\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n  return _s.apply(this, arguments);\n}\nexport { r as Lock, s as withLock };","map":{"version":3,"names":["createResolver","e","r","_classCallCheck","_resolver","_createClass","key","value","isHeld","_acquire","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","promise","acquire","stop","apply","arguments","release","resolve","s","_x","_x2","_x3","_s","_callee2","_callee2$","_context2","t0","Lock","withLock"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/views/2d/engine/webgl/util/Lock.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{createResolver as e}from\"../../../../../core/promiseUtils.js\";class r{constructor(){this._resolver=null}isHeld(){return!!this._resolver}async acquire(){this._resolver?(await this._resolver.promise,await this.acquire()):this._resolver=e()}release(){const e=this._resolver;this._resolver=null,e?.resolve()}}async function s(e,r,s){try{await e.acquire(),await r(s),e.release()}catch(t){throw e.release(),t}}export{r as Lock,s as withLock};\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,SAAOA,cAAc,IAAIC,CAAC,QAAK,qCAAqC;AAAC,IAAMC,CAAC;EAAC,SAAAA,EAAA,EAAa;IAAAC,eAAA,OAAAD,CAAA;IAAC,IAAI,CAACE,SAAS,GAAC,IAAI;EAAA;EAACC,YAAA,CAAAH,CAAA;IAAAI,GAAA;IAAAC,KAAA,WAAAC,OAAA,EAAQ;MAAC,OAAM,CAAC,CAAC,IAAI,CAACJ,SAAS;IAAA;EAAC;IAAAE,GAAA;IAAAC,KAAA;MAAA,IAAAE,QAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,KAAgB,IAAI,CAACd,SAAS;gBAAAY,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAAQ,IAAI,CAACd,SAAS,CAACe,OAAO;YAAA;cAAAH,QAAA,CAAAE,IAAA;cAAA,OAAO,IAAI,CAACE,OAAO,EAAE;YAAA;cAAAJ,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAE,IAAI,CAACd,SAAS,GAACH,CAAC,EAAE;YAAA;YAAA;cAAA,OAAAe,QAAA,CAAAK,IAAA;UAAA;QAAA,GAAAR,OAAA;MAAA,CAAC;MAAA,SAAAO,QAAA;QAAA,OAAAX,QAAA,CAAAa,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,OAAA;IAAA;EAAA;IAAAd,GAAA;IAAAC,KAAA,WAAAiB,QAAA,EAAS;MAAC,IAAMvB,CAAC,GAAC,IAAI,CAACG,SAAS;MAAC,IAAI,CAACA,SAAS,GAAC,IAAI,EAACH,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEwB,OAAO,EAAE;IAAA;EAAC;EAAA,OAAAvB,CAAA;AAAA;AAAA,SAAgBwB,CAACA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,EAAA,CAAAR,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAO,GAAA;EAAAA,EAAA,GAAApB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAhB,SAAAmB,SAAiB9B,CAAC,EAACC,CAAC,EAACwB,CAAC;IAAA,OAAAf,mBAAA,GAAAG,IAAA,UAAAkB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAhB,IAAA,GAAAgB,SAAA,CAAAf,IAAA;QAAA;UAAAe,SAAA,CAAAhB,IAAA;UAAAgB,SAAA,CAAAf,IAAA;UAAA,OAAYjB,CAAC,CAACmB,OAAO,EAAE;QAAA;UAAAa,SAAA,CAAAf,IAAA;UAAA,OAAOhB,CAAC,CAACwB,CAAC,CAAC;QAAA;UAACzB,CAAC,CAACuB,OAAO,EAAE;UAAAS,SAAA,CAAAf,IAAA;UAAA;QAAA;UAAAe,SAAA,CAAAhB,IAAA;UAAAgB,SAAA,CAAAC,EAAA,GAAAD,SAAA;UAAA,MAAgBhC,CAAC,CAACuB,OAAO,EAAE,EAAAS,SAAA,CAAAC,EAAE;QAAA;QAAA;UAAA,OAAAD,SAAA,CAAAZ,IAAA;MAAA;IAAA,GAAAU,QAAA;EAAA,CAAE;EAAA,OAAAD,EAAA,CAAAR,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAOrB,CAAC,IAAIiC,IAAI,EAACT,CAAC,IAAIU,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}