{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32;\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../core/maybe.js\";\nimport { I as r } from \"./mat4f64.js\";\nimport { ForwardLinearDepth as o } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { Offset as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";\nimport { ShaderOutput as i } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SliceDraw as l } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as s } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { InstancedDoublePrecision as t } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";\nimport { NormalAttribute as n, NormalAttributeType as d } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { PositionAttribute as c } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";\nimport { SymbolColor as m } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";\nimport { TextureCoordinateAttribute as g } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexColor as u } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";\nimport { VertexNormal as p } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";\nimport { VerticalOffset as v } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";\nimport { DefaultMaterialAuxiliaryPasses as h } from \"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";\nimport { ComputeNormalTexture as b } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";\nimport { EvaluateAmbientOcclusion as f } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as w, addAmbientBoostFactor as x, addLightingGlobalFactor as y } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { addMainLightIntensity as C } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";\nimport { multipassTerrainTest as T } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { Normals as j } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";\nimport { PhysicallyBasedRendering as L } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";\nimport { PhysicallyBasedRenderingParameters as M, PBRMode as O } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadShadowMapPass as P, ReadShadowMapDraw as $ } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { colorTextureUV as A, normalTextureUV as N, emissiveTextureUV as S, occlusionTextureUV as E, metallicRoughnessTextureUV as V } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";\nimport { VisualVariables as _ } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";\nimport { symbolAlphaCutoff as D } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { DiscardOrAdjustAlphaPass as F } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";\nimport { MixExternalColor as U } from \"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";\nimport { addProjViewLocalOrigin as B, addCameraPosition as I } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float3PassUniform as R } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as z } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as W } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as G } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4PassUniform as k } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as q } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as H } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { TransparencyPassType as J } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nimport { VertexAttribute as K } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nfunction Q(Q) {\n  var X = new q(),\n    Y = X.vertex,\n    Z = X.fragment,\n    ee = X.varyings;\n  return B(Y, Q), X.include(c), ee.add(\"vpos\", \"vec3\"), X.include(_, Q), X.include(t, Q), X.include(v, Q), Q.hasColorTextureTransform && X.include(A), Q.output !== i.Color && Q.output !== i.Alpha || (Q.hasNormalTextureTransform && X.include(N), Q.hasEmissionTextureTransform && X.include(S), Q.hasOcclusionTextureTransform && X.include(E), Q.hasMetallicRoughnessTextureTransform && X.include(V), I(Y, Q), X.include(n, Q), X.include(s, Q), Q.normalType === d.Attribute && Q.offsetBackfaces && X.include(a), X.include(b, Q), X.include(p, Q), Q.instancedColor && X.attributes.add(K.INSTANCECOLOR, \"vec4\"), ee.add(\"localvpos\", \"vec3\"), X.include(g, Q), X.include(o, Q), X.include(m, Q), X.include(u, Q), Y.uniforms.add(new z(\"externalColor\", function (e) {\n    return e.externalColor;\n  })), ee.add(\"vcolorExt\", \"vec4\"), Q.hasMultipassTerrain && ee.add(\"depth\", \"float\"), Q.hasModelTransformation && Y.uniforms.add(new k(\"model\", function (o) {\n    return e(o.modelTransformation) ? o.modelTransformation : r;\n  })), Y.code.add(G(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      void main(void) {\\n        forwardNormalizedVertexColor();\\n        vcolorExt = externalColor;\\n        \", \"\\n        vcolorExt *= vvColor();\\n        vcolorExt *= getSymbolColor();\\n        forwardColorMixMode();\\n\\n        if (vcolorExt.a < \", \") {\\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\\n        } else {\\n          vpos = calculateVPos();\\n          localvpos = vpos - view[3].xyz;\\n          vpos = subtractOrigin(vpos);\\n          \", \"\\n          vpos = addVerticalOffset(vpos, localOrigin);\\n          \", \"\\n          gl_Position = transformPosition(proj, view, \", \" vpos);\\n          \", \"\\n        }\\n\\n        \", \"\\n        forwardLinearDepth();\\n        forwardTextureCoordinates();\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n        \", \"\\n      }\\n    \"])), Q.instancedColor ? \"vcolorExt *= instanceColor;\" : \"\", G.float(D), Q.normalType === d.Attribute ? G(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\"]))) : \"\", Q.hasVertexTangents ? \"vTangent = dpTransformVertexTangent(tangent);\" : \"\", Q.hasModelTransformation ? \"model,\" : \"\", Q.normalType === d.Attribute && Q.offsetBackfaces ? \"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\" : \"\", Q.hasMultipassTerrain ? \"depth = (view * vec4(vpos, 1.0)).z;\" : \"\", Q.hasColorTextureTransform ? G(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"forwardColorUV();\"]))) : \"\", Q.hasNormalTextureTransform ? G(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"forwardNormalUV();\"]))) : \"\", Q.hasEmissionTextureTransform ? G(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"forwardEmissiveUV();\"]))) : \"\", Q.hasOcclusionTextureTransform ? G(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"forwardOcclusionUV();\"]))) : \"\", Q.hasMetallicRoughnessTextureTransform ? G(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"forwardMetallicRoughnessUV();\"]))) : \"\"))), Q.output === i.Alpha && (X.include(l, Q), X.include(F, Q), X.include(T, Q), Z.uniforms.add([new W(\"opacity\", function (e) {\n    return e.opacity;\n  }), new W(\"layerOpacity\", function (e) {\n    return e.layerOpacity;\n  })]), Q.hasColorTexture && Z.uniforms.add(new H(\"tex\", function (e) {\n    return e.texture;\n  })), Z.include(U), Z.code.add(G(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n      void main() {\\n        discardBySlice(vpos);\\n        \", \"\\n        \", \"\\n        \", \"\\n        gl_FragColor = vec4(opacity_);\\n      }\\n    \"])), Q.hasMultipassTerrain ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\", Q.hasColorTexture ? G(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n                vec4 texColor = texture2D(tex, \", \");\\n                \", \"\\n                discardOrAdjustAlpha(texColor);\"])), Q.hasColorTextureTransform ? G(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"colorUV\"]))) : G(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"vuv0\"]))), Q.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\") : G(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"vec4 texColor = vec4(1.0);\"]))), Q.hasVertexColors ? G(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));\"]))) : G(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));\"])))))), Q.output === i.Color && (X.include(l, Q), X.include(w, Q), X.include(f, Q), X.include(F, Q), X.include(Q.instancedDoublePrecision ? P : $, Q), X.include(T, Q), I(Z, Q), Z.uniforms.add([Y.uniforms.get(\"localOrigin\"), new R(\"ambient\", function (e) {\n    return e.ambient;\n  }), new R(\"diffuse\", function (e) {\n    return e.diffuse;\n  }), new W(\"opacity\", function (e) {\n    return e.opacity;\n  }), new W(\"layerOpacity\", function (e) {\n    return e.layerOpacity;\n  })]), Q.hasColorTexture && Z.uniforms.add(new H(\"tex\", function (e) {\n    return e.texture;\n  })), X.include(M, Q), X.include(L, Q), Z.include(U), X.include(j, Q), x(Z), y(Z), C(Z), Z.code.add(G(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\\n      void main() {\\n        discardBySlice(vpos);\\n        \", \"\\n        \", \"\\n        shadingParams.viewDirection = normalize(vpos - cameraPosition);\\n        \", \"\\n        \", \"\\n        float ssao = evaluateAmbientOcclusionInverse();\\n        ssao *= getBakedOcclusion();\\n\\n        vec3 posWorld = vpos + localOrigin;\\n\\n        float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\\n        float shadow = \", \";\\n\\n        vec3 matColor = max(ambient, diffuse);\\n        \", \"\\n        \", \"\\n        vec3 normalGround = \", \"\\n\\n        \", \"\\n\\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\\n\\n        \", \"\\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\\n        \", \"\\n      }\\n    \"])), Q.hasMultipassTerrain ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\", Q.hasColorTexture ? G(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\n                vec4 texColor = texture2D(tex, \", \");\\n                \", \"\\n                discardOrAdjustAlpha(texColor);\"])), Q.hasColorTextureTransform ? G(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"colorUV\"]))) : G(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"vuv0\"]))), Q.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\") : G(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"vec4 texColor = vec4(1.0);\"]))), Q.normalType === d.ScreenDerivative ? G(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\"\\n                vec3 normal = screenDerivativeNormal(localvpos);\"]))) : G(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\"\\n                shadingParams.normalView = vNormalWorld;\\n                vec3 normal = shadingNormal(shadingParams);\"]))), Q.pbrMode === O.Normal ? \"applyPBRFactors();\" : \"\", Q.receiveShadows ? \"readShadowMap(vpos, linearDepth)\" : Q.spherical ? \"lightingGlobalFactor * (1.0 - additionalAmbientScale)\" : \"0.0\", Q.hasVertexColors ? G(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral([\"\\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));\"]))) : G(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral([\"\\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));\"]))), Q.hasNormalTexture ? G(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral([\"\\n                mat3 tangentSpace = \", \"\\n                vec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);\"])), Q.hasVertexTangents ? \"computeTangentSpace(normal);\" : \"computeTangentSpace(normal, vpos, vuv0);\") : G(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral([\"vec3 shadingNormal = normal;\"]))), Q.spherical ? G(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral([\"normalize(posWorld);\"]))) : G(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral([\"vec3(0.0, 0.0, 1.0);\"]))), Q.snowCover ? G(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral([\"\\n                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\\n                albedo = mix(albedo, vec3(1), snow);\\n                shadingNormal = mix(shadingNormal, normal, snow);\\n                ssao = mix(ssao, 1.0, snow);\"]))) : \"\", Q.pbrMode === O.Normal || Q.pbrMode === O.Schematic ? G(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral([\"\\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\\n                \", \"\\n\\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);\"])), Q.snowCover ? G(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral([\"\\n                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\\n                        emission = mix(emission, vec3(0.0), snow);\"]))) : \"\") : G(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral([\"vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);\"]))), Q.transparencyPassType === J.Color ? G(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral([\"gl_FragColor = premultiplyAlpha(gl_FragColor);\"]))) : \"\"))), X.include(h, Q), X;\n}\nvar X = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: Q\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { X as D, Q as b };","map":{"version":3,"names":["isSome","e","I","r","ForwardLinearDepth","o","Offset","a","ShaderOutput","i","SliceDraw","l","Transform","s","InstancedDoublePrecision","t","NormalAttribute","n","NormalAttributeType","d","PositionAttribute","c","SymbolColor","m","TextureCoordinateAttribute","g","VertexColor","u","VertexNormal","p","VerticalOffset","v","DefaultMaterialAuxiliaryPasses","h","ComputeNormalTexture","b","EvaluateAmbientOcclusion","f","EvaluateSceneLighting","w","addAmbientBoostFactor","x","addLightingGlobalFactor","y","addMainLightIntensity","C","multipassTerrainTest","T","Normals","j","PhysicallyBasedRendering","L","PhysicallyBasedRenderingParameters","M","PBRMode","O","ReadShadowMapPass","P","ReadShadowMapDraw","$","colorTextureUV","A","normalTextureUV","N","emissiveTextureUV","S","occlusionTextureUV","E","metallicRoughnessTextureUV","V","VisualVariables","_","symbolAlphaCutoff","D","DiscardOrAdjustAlphaPass","F","MixExternalColor","U","addProjViewLocalOrigin","B","addCameraPosition","Float3PassUniform","R","Float4PassUniform","z","FloatPassUniform","W","glsl","G","Matrix4PassUniform","k","ShaderBuilder","q","Texture2DPassUniform","H","TransparencyPassType","J","VertexAttribute","K","Q","X","Y","vertex","Z","fragment","ee","varyings","include","add","hasColorTextureTransform","output","Color","Alpha","hasNormalTextureTransform","hasEmissionTextureTransform","hasOcclusionTextureTransform","hasMetallicRoughnessTextureTransform","normalType","Attribute","offsetBackfaces","instancedColor","attributes","INSTANCECOLOR","uniforms","externalColor","hasMultipassTerrain","hasModelTransformation","modelTransformation","code","_templateObject","_taggedTemplateLiteral","float","_templateObject2","hasVertexTangents","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","opacity","layerOpacity","hasColorTexture","texture","_templateObject8","_templateObject9","_templateObject10","_templateObject11","textureAlphaPremultiplied","_templateObject12","hasVertexColors","_templateObject13","_templateObject14","instancedDoublePrecision","get","ambient","diffuse","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","ScreenDerivative","_templateObject20","_templateObject21","pbrMode","Normal","receiveShadows","spherical","_templateObject22","_templateObject23","hasNormalTexture","_templateObject24","_templateObject25","_templateObject26","_templateObject27","snowCover","_templateObject28","Schematic","_templateObject29","_templateObject30","_templateObject31","transparencyPassType","_templateObject32","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/chunks/DefaultMaterial.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../core/maybe.js\";import{I as r}from\"./mat4f64.js\";import{ForwardLinearDepth as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as i}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as l}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as s}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as n,NormalAttributeType as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as u}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as p}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as h}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as w,addAmbientBoostFactor as x,addLightingGlobalFactor as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as T}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Normals as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as M,PBRMode as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as P,ReadShadowMapDraw as $}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{colorTextureUV as A,normalTextureUV as N,emissiveTextureUV as S,occlusionTextureUV as E,metallicRoughnessTextureUV as V}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as _}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as D}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as F}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as U}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as B,addCameraPosition as I}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as R}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as W}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as G}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as k}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as q}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as H}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as J}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as K}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function Q(Q){const X=new q,{vertex:Y,fragment:Z,varyings:ee}=X;return B(Y,Q),X.include(c),ee.add(\"vpos\",\"vec3\"),X.include(_,Q),X.include(t,Q),X.include(v,Q),Q.hasColorTextureTransform&&X.include(A),Q.output!==i.Color&&Q.output!==i.Alpha||(Q.hasNormalTextureTransform&&X.include(N),Q.hasEmissionTextureTransform&&X.include(S),Q.hasOcclusionTextureTransform&&X.include(E),Q.hasMetallicRoughnessTextureTransform&&X.include(V),I(Y,Q),X.include(n,Q),X.include(s,Q),Q.normalType===d.Attribute&&Q.offsetBackfaces&&X.include(a),X.include(b,Q),X.include(p,Q),Q.instancedColor&&X.attributes.add(K.INSTANCECOLOR,\"vec4\"),ee.add(\"localvpos\",\"vec3\"),X.include(g,Q),X.include(o,Q),X.include(m,Q),X.include(u,Q),Y.uniforms.add(new z(\"externalColor\",(e=>e.externalColor))),ee.add(\"vcolorExt\",\"vec4\"),Q.hasMultipassTerrain&&ee.add(\"depth\",\"float\"),Q.hasModelTransformation&&Y.uniforms.add(new k(\"model\",(o=>e(o.modelTransformation)?o.modelTransformation:r))),Y.code.add(G`\n      void main(void) {\n        forwardNormalizedVertexColor();\n        vcolorExt = externalColor;\n        ${Q.instancedColor?\"vcolorExt *= instanceColor;\":\"\"}\n        vcolorExt *= vvColor();\n        vcolorExt *= getSymbolColor();\n        forwardColorMixMode();\n\n        if (vcolorExt.a < ${G.float(D)}) {\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        } else {\n          vpos = calculateVPos();\n          localvpos = vpos - view[3].xyz;\n          vpos = subtractOrigin(vpos);\n          ${Q.normalType===d.Attribute?G`vNormalWorld = dpNormal(vvLocalNormal(normalModel()));`:\"\"}\n          vpos = addVerticalOffset(vpos, localOrigin);\n          ${Q.hasVertexTangents?\"vTangent = dpTransformVertexTangent(tangent);\":\"\"}\n          gl_Position = transformPosition(proj, view, ${Q.hasModelTransformation?\"model,\":\"\"} vpos);\n          ${Q.normalType===d.Attribute&&Q.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n        }\n\n        ${Q.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n        forwardLinearDepth();\n        forwardTextureCoordinates();\n        ${Q.hasColorTextureTransform?G`forwardColorUV();`:\"\"}\n        ${Q.hasNormalTextureTransform?G`forwardNormalUV();`:\"\"}\n        ${Q.hasEmissionTextureTransform?G`forwardEmissiveUV();`:\"\"}\n        ${Q.hasOcclusionTextureTransform?G`forwardOcclusionUV();`:\"\"}\n        ${Q.hasMetallicRoughnessTextureTransform?G`forwardMetallicRoughnessUV();`:\"\"}\n      }\n    `)),Q.output===i.Alpha&&(X.include(l,Q),X.include(F,Q),X.include(T,Q),Z.uniforms.add([new W(\"opacity\",(e=>e.opacity)),new W(\"layerOpacity\",(e=>e.layerOpacity))]),Q.hasColorTexture&&Z.uniforms.add(new H(\"tex\",(e=>e.texture))),Z.include(U),Z.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Q.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        ${Q.hasColorTexture?G`\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform?G`colorUV`:G`vuv0`});\n                ${Q.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\n        ${Q.hasVertexColors?G`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        gl_FragColor = vec4(opacity_);\n      }\n    `)),Q.output===i.Color&&(X.include(l,Q),X.include(w,Q),X.include(f,Q),X.include(F,Q),X.include(Q.instancedDoublePrecision?P:$,Q),X.include(T,Q),I(Z,Q),Z.uniforms.add([Y.uniforms.get(\"localOrigin\"),new R(\"ambient\",(e=>e.ambient)),new R(\"diffuse\",(e=>e.diffuse)),new W(\"opacity\",(e=>e.opacity)),new W(\"layerOpacity\",(e=>e.layerOpacity))]),Q.hasColorTexture&&Z.uniforms.add(new H(\"tex\",(e=>e.texture))),X.include(M,Q),X.include(L,Q),Z.include(U),X.include(j,Q),x(Z),y(Z),C(Z),Z.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Q.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        ${Q.hasColorTexture?G`\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform?G`colorUV`:G`vuv0`});\n                ${Q.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\n        shadingParams.viewDirection = normalize(vpos - cameraPosition);\n        ${Q.normalType===d.ScreenDerivative?G`\n                vec3 normal = screenDerivativeNormal(localvpos);`:G`\n                shadingParams.normalView = vNormalWorld;\n                vec3 normal = shadingNormal(shadingParams);`}\n        ${Q.pbrMode===O.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        vec3 posWorld = vpos + localOrigin;\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\n        float shadow = ${Q.receiveShadows?\"readShadowMap(vpos, linearDepth)\":Q.spherical?\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\":\"0.0\"};\n\n        vec3 matColor = max(ambient, diffuse);\n        ${Q.hasVertexColors?G`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${Q.hasNormalTexture?G`\n                mat3 tangentSpace = ${Q.hasVertexTangents?\"computeTangentSpace(normal);\":\"computeTangentSpace(normal, vpos, vuv0);\"}\n                vec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);`:G`vec3 shadingNormal = normal;`}\n        vec3 normalGround = ${Q.spherical?G`normalize(posWorld);`:G`vec3(0.0, 0.0, 1.0);`}\n\n        ${Q.snowCover?G`\n                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\n                albedo = mix(albedo, vec3(1), snow);\n                shadingNormal = mix(shadingNormal, normal, snow);\n                ssao = mix(ssao, 1.0, snow);`:\"\"}\n\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n\n        ${Q.pbrMode===O.Normal||Q.pbrMode===O.Schematic?G`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${Q.snowCover?G`\n                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\n                        emission = mix(emission, vec3(0.0), snow);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:G`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${Q.transparencyPassType===J.Color?G`gl_FragColor = premultiplyAlpha(gl_FragColor);`:\"\"}\n      }\n    `)),X.include(h,Q),X}const X=Object.freeze(Object.defineProperty({__proto__:null,build:Q},Symbol.toStringTag,{value:\"Module\"}));export{X as D,Q as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}