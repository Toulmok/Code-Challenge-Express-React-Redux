{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/code-challenge-react/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { s as e } from \"../../../../../../chunks/vec4.js\";\nimport { c as r } from \"../../../../../../chunks/vec4f64.js\";\nimport { ScreenSizePerspective as t, addScreenSizePerspectiveAlignment as l } from \"../util/ScreenSizePerspective.glsl.js\";\nimport { addCameraPosition as o } from \"../util/View.glsl.js\";\nimport { Float4PassUniform as c } from \"../../shaderModules/Float4PassUniform.js\";\nimport { glsl as s } from \"../../shaderModules/interfaces.js\";\nfunction a(e, r) {\n  var c = e.vertex;\n  r.hasVerticalOffset ? (f(c), r.hasScreenSizePerspective && (e.include(t), l(c), o(e.vertex, r)), c.code.add(s(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\\n        \", \"\\n        \", \"\\n        // Screen sized offset in world space, used for example for line callouts\\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\\n        return worldNormal * worldOffset;\\n      }\\n\\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\\n      }\\n    \"])), r.spherical ? s(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"vec3 worldNormal = normalize(worldPos + localOrigin);\"]))) : s(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"vec3 worldNormal = vec3(0.0, 0.0, 1.0);\"]))), r.hasScreenSizePerspective ? s(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);\"]))) : s(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n            float verticalOffsetScreenHeight = verticalOffset.x;\"])))))) : c.code.add(s(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }\"]))));\n}\nvar i = r();\nfunction f(r) {\n  r.uniforms.add(new c(\"verticalOffset\", function (r, t) {\n    var _r$verticalOffset = r.verticalOffset,\n      l = _r$verticalOffset.minWorldLength,\n      o = _r$verticalOffset.maxWorldLength,\n      c = _r$verticalOffset.screenLength,\n      s = Math.tan(.5 * t.camera.fovY) / (.5 * t.camera.fullViewport[3]),\n      a = t.camera.pixelRatio || 1;\n    return e(i, c * a, s, l, o);\n  }));\n}\nexport { a as VerticalOffset, f as addVerticalOffset };","map":{"version":3,"names":["s","e","c","r","ScreenSizePerspective","t","addScreenSizePerspectiveAlignment","l","addCameraPosition","o","Float4PassUniform","glsl","a","vertex","hasVerticalOffset","f","hasScreenSizePerspective","include","code","add","_templateObject","_taggedTemplateLiteral","spherical","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","i","uniforms","_r$verticalOffset","verticalOffset","minWorldLength","maxWorldLength","screenLength","Math","tan","camera","fovY","fullViewport","pixelRatio","VerticalOffset","addVerticalOffset"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{s as e}from\"../../../../../../chunks/vec4.js\";import{c as r}from\"../../../../../../chunks/vec4f64.js\";import{ScreenSizePerspective as t,addScreenSizePerspectiveAlignment as l}from\"../util/ScreenSizePerspective.glsl.js\";import{addCameraPosition as o}from\"../util/View.glsl.js\";import{Float4PassUniform as c}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";function a(e,r){const c=e.vertex;r.hasVerticalOffset?(f(c),r.hasScreenSizePerspective&&(e.include(t),l(c),o(e.vertex,r)),c.code.add(s`\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ${r.spherical?s`vec3 worldNormal = normalize(worldPos + localOrigin);`:s`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\n        ${r.hasScreenSizePerspective?s`\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);`:s`\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    `)):c.code.add(s`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`)}const i=r();function f(r){r.uniforms.add(new c(\"verticalOffset\",((r,t)=>{const{minWorldLength:l,maxWorldLength:o,screenLength:c}=r.verticalOffset,s=Math.tan(.5*t.camera.fovY)/(.5*t.camera.fullViewport[3]),a=t.camera.pixelRatio||1;return e(i,c*a,s,l,o)})))}export{a as VerticalOffset,f as addVerticalOffset};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAC,QAAK,kCAAkC;AAAC,SAAOC,CAAC,IAAIC,CAAC,QAAK,qCAAqC;AAAC,SAAOC,qBAAqB,IAAIC,CAAC,EAACC,iCAAiC,IAAIC,CAAC,QAAK,uCAAuC;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,sBAAsB;AAAC,SAAOC,iBAAiB,IAAIR,CAAC,QAAK,0CAA0C;AAAC,SAAOS,IAAI,IAAIX,CAAC,QAAK,mCAAmC;AAAC,SAASY,CAACA,CAACX,CAAC,EAACE,CAAC,EAAC;EAAC,IAAMD,CAAC,GAACD,CAAC,CAACY,MAAM;EAACV,CAAC,CAACW,iBAAiB,IAAEC,CAAC,CAACb,CAAC,CAAC,EAACC,CAAC,CAACa,wBAAwB,KAAGf,CAAC,CAACgB,OAAO,CAACZ,CAAC,CAAC,EAACE,CAAC,CAACL,CAAC,CAAC,EAACO,CAAC,CAACR,CAAC,CAACY,MAAM,EAACV,CAAC,CAAC,CAAC,EAACD,CAAC,CAACgB,IAAI,CAACC,GAAG,CAACnB,CAAC,CAAAoB,eAAA,KAAAA,eAAA,GAAAC,sBAAA,8lBAG5hBlB,CAAC,CAACmB,SAAS,GAACtB,CAAC,CAAAuB,gBAAA,KAAAA,gBAAA,GAAAF,sBAAA,gEAAwDrB,CAAC,CAAAwB,gBAAA,KAAAA,gBAAA,GAAAH,sBAAA,+CAAyC,EAC/GlB,CAAC,CAACa,wBAAwB,GAAChB,CAAC,CAAAyB,gBAAA,KAAAA,gBAAA,GAAAJ,sBAAA,iQAE0HrB,CAAC,CAAA0B,gBAAA,KAAAA,gBAAA,GAAAL,sBAAA,0EAChG,EAS3D,IAAEnB,CAAC,CAACgB,IAAI,CAACC,GAAG,CAACnB,CAAC,CAAA2B,gBAAA,KAAAA,gBAAA,GAAAN,sBAAA,qFAA+E;AAAA;AAAC,IAAMO,CAAC,GAACzB,CAAC,EAAE;AAAC,SAASY,CAACA,CAACZ,CAAC,EAAC;EAACA,CAAC,CAAC0B,QAAQ,CAACV,GAAG,CAAC,IAAIjB,CAAC,CAAC,gBAAgB,EAAE,UAACC,CAAC,EAACE,CAAC,EAAG;IAAC,IAAAyB,iBAAA,GAAwD3B,CAAC,CAAC4B,cAAc;MAAnDxB,CAAC,GAAAuB,iBAAA,CAAhBE,cAAc;MAAkBvB,CAAC,GAAAqB,iBAAA,CAAhBG,cAAc;MAAgB/B,CAAC,GAAA4B,iBAAA,CAAdI,YAAY;MAAqBlC,CAAC,GAACmC,IAAI,CAACC,GAAG,CAAC,EAAE,GAAC/B,CAAC,CAACgC,MAAM,CAACC,IAAI,CAAC,IAAE,EAAE,GAACjC,CAAC,CAACgC,MAAM,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;MAAC3B,CAAC,GAACP,CAAC,CAACgC,MAAM,CAACG,UAAU,IAAE,CAAC;IAAC,OAAOvC,CAAC,CAAC2B,CAAC,EAAC1B,CAAC,GAACU,CAAC,EAACZ,CAAC,EAACO,CAAC,EAACE,CAAC,CAAC;EAAA,CAAC,CAAE,CAAC;AAAA;AAAC,SAAOG,CAAC,IAAI6B,cAAc,EAAC1B,CAAC,IAAI2B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}