{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { c as t } from \"../../../../chunks/mat2f64.js\";\nimport { w as e, d as i } from \"../../../../chunks/mat4.js\";\nimport { c as s } from \"../../../../chunks/mat4f64.js\";\nimport { s as r, h as o, q as h, a as n, b as a, j as l, f as u, i as p } from \"../../../../chunks/vec2.js\";\nimport { a as f, d as x, f as c } from \"../../../../chunks/vec2f64.js\";\nimport { e as d, c as m, a as v, n as g, g as b, b as V, f as A, l as C, s as D, m as I } from \"../../../../chunks/vec3.js\";\nimport { c as N } from \"../../../../chunks/vec3f64.js\";\nimport { create as P, fromPositionAndNormal as R, intersectRay as S } from \"../../../../geometry/support/plane.js\";\nimport { wrap as T } from \"../../../../geometry/support/ray.js\";\nimport { Attribute as _ } from \"./Attribute.js\";\nimport { newFloatArray as y } from \"./FloatArray.js\";\nimport { makeOrthoBasisDirUpFallback as U } from \"./GeometryUtil.js\";\nimport { compactIndices as L } from \"./Indices.js\";\nimport { VertexAttribute as O } from \"./VertexAttribute.js\";\nimport { intersectTriangles as E } from \"../materials/internal/MaterialUtil.js\";\nfunction M() {\n  return {\n    up: N(),\n    right: N()\n  };\n}\nfunction k(t, e, i) {\n  I(t.up, e.up, i), I(t.right, e.right, i);\n}\nfunction w(t, e, i) {\n  t[0] = i[0] * e.right[0] + i[1] * e.up[0], t[1] = i[0] * e.right[1] + i[1] * e.up[1], t[2] = i[0] * e.right[2] + i[1] * e.up[2];\n}\nfunction B(t, e, i) {\n  r(t, d(i, e.right), d(i, e.up));\n}\nclass G {\n  constructor() {\n    this.pos = N(), this.posES = N(), this.vLeft = N(), this.vRight = N(), this.vMinSiblingLength = 0, this.frame = M(), this.rotationFrameUp = N(), this.rotationRight = f(), this.rotationAngle = 0, this.miterStretch = t(), this.maxStretchDistance = 0;\n  }\n  setFrameFromUpVector(t) {\n    m(this.frame.up, t), v(at, this.vLeft, this.vRight), g(at, at), b(nt, this.frame.up, d(at, this.frame.up)), V(pt, at, nt), g(pt, pt), A(this.frame.right, pt, this.frame.up);\n  }\n}\nclass j {\n  constructor() {\n    this.vertices = [], this.vertexIndices = [], this.vertexNormals = [], this.poles = [], this.poleIndices = [];\n  }\n  addVertex(t, e) {\n    return this.vertices.push(x(t)), this.vertexNormals.push(x(e)), this.vertices.length - 1;\n  }\n  addPole(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return this.poles.push({\n      position: x(t),\n      normal: e ? x(e) : null\n    }), this.poles.length - 1;\n  }\n  addSegment(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    this.vertexIndices.push(t.v0), this.vertexIndices.push(t.v1), e && (this.poleIndices.push(e.v0), this.poleIndices.push(e.v1));\n  }\n  get numSegments() {\n    return this.vertexIndices.length / 2;\n  }\n  translate(t, e) {\n    for (const i of this.vertices) i[0] += t, i[1] += e;\n    for (const i of this.poles) i.position[0] += t, i.position[1] += e;\n  }\n}\nfunction F() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n  const e = .5,\n    i = new j(),\n    s = {\n      v0: 0,\n      v1: 0\n    };\n  i.addPole(c(0, 0));\n  for (let o = 0; o < t; ++o) {\n    const s = 2 * o * Math.PI / t,\n      r = Math.cos(s),\n      h = Math.sin(s),\n      n = c(r * e, h * e),\n      a = c(r, h);\n    i.addVertex(n, a);\n  }\n  for (let o = 0; o < t - 1; ++o) {\n    const t = {\n      v0: o,\n      v1: o + 1\n    };\n    i.addSegment(t, s);\n  }\n  const r = {\n    v0: t - 1,\n    v1: 0\n  };\n  return i.addSegment(r, s), i;\n}\nfunction z() {\n  const t = 1,\n    e = 1,\n    i = new j(),\n    s = c(.5 * -t, .5 * -e),\n    r = c(.5 * t, .5 * -e),\n    o = c(.5 * t, .5 * e),\n    h = c(.5 * -t, .5 * e),\n    n = c(0, -1),\n    a = c(1, 0),\n    l = c(0, 1),\n    u = c(-1, 0);\n  return i.addPole(c(0, .5 * e), l), i.addPole(c(0, .5 * e)), i.addPole(c(0, .5 * -e)), i.addPole(c(0, .5 * -e), n), i.addVertex(s, n), i.addVertex(r, n), i.addSegment({\n    v0: 0,\n    v1: 1\n  }, {\n    v0: 3,\n    v1: 3\n  }), i.addVertex(r, a), i.addVertex(o, a), i.addSegment({\n    v0: 2,\n    v1: 3\n  }, {\n    v0: 2,\n    v1: 1\n  }), i.addVertex(o, l), i.addVertex(h, l), i.addSegment({\n    v0: 4,\n    v1: 5\n  }, {\n    v0: 0,\n    v1: 0\n  }), i.addVertex(h, u), i.addVertex(s, u), i.addSegment({\n    v0: 6,\n    v1: 7\n  }, {\n    v0: 1,\n    v1: 2\n  }), i;\n}\nclass J {\n  constructor(t) {\n    this.vertices = t, this.offset = N(), this.xform = s();\n    const i = Math.floor((t.length - 1) / 2);\n    m(this.offset, this.vertices[i].pos);\n    for (const e of this.vertices) V(e.pos, e.pos, this.offset);\n    e(this.xform, this.xform, this.offset), this.updatePathVertexInformation();\n  }\n  updatePathVertexInformation() {\n    const t = this.vertices.length,\n      e = this.vertices[0];\n    e.index = 0, e.vLeft = N(), V(e.vRight, this.vertices[1].pos, e.pos);\n    let i = C(e.vRight);\n    e.vMinSiblingLength = i, g(e.vRight, e.vRight);\n    let s = e;\n    for (let r = 1; r < t; ++r) {\n      const e = this.vertices[r];\n      if (e.index = r, e.vLeft = s.vRight, r < t - 1) {\n        V(e.vRight, this.vertices[r + 1].pos, e.pos);\n        const t = C(e.vRight);\n        e.vMinSiblingLength = Math.min(i, t), i = t, g(e.vRight, e.vRight);\n      } else m(e.vRight, e.vLeft), e.vMinSiblingLength = i;\n      s = e;\n    }\n  }\n}\nfunction q(t, e) {\n  let i = null;\n  const s = t.vertices.length,\n    r = .99619469809,\n    o = N(),\n    h = N(),\n    n = N(),\n    a = N(),\n    l = N(),\n    u = N(),\n    p = P();\n  let f = t.vertices[0];\n  m(h, e), D(o, 0, 1, 0), U(f.vRight, h, o, o, n, h, r), m(f.frame.up, h), m(f.frame.right, n), i = f;\n  for (let x = 1; x < s; ++x) {\n    f = t.vertices[x], v(l, f.vLeft, f.vRight);\n    let e = C(l);\n    e > 0 ? (e = 1 / Math.sqrt(e), l[0] = l[0] * e, l[1] = l[1] * e, l[2] = l[2] * e) : (l[0] = f.vRight[0], l[1] = f.vRight[1], l[2] = f.vRight[2]), v(u, i.pos, i.frame.up), R(f.pos, l, p);\n    S(p, T(u, f.vLeft), a) ? (V(a, a, f.pos), g(h, a), A(n, l, h), g(n, n)) : U(l, i.frame.up, i.frame.right, o, n, h, r), m(f.frame.up, h), m(f.frame.right, n), i = f;\n  }\n}\nclass H {}\nclass X {\n  numProfilesPerJoin() {\n    return 1;\n  }\n  extrude(t, e, i) {\n    for (let s = 0; s < e.vertices.length; ++s) i(t.index, t.frame, e.vertices[s], e.vertexNormals[s], !1);\n  }\n}\nclass K {\n  constructor() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : .8 * Math.PI;\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    this.cutoffAngle = t, this.numBendSubdivisions = e;\n  }\n  numProfilesPerJoin() {\n    return this.numBendSubdivisions + 1;\n  }\n  extrude(t, e, s) {\n    const r = ft;\n    if (Math.abs(t.rotationAngle) >= this.cutoffAngle) for (let n = 0; n < this.numBendSubdivisions + 1; ++n) {\n      i(xt, .5 * -t.rotationAngle + n * t.rotationAngle / this.numBendSubdivisions, t.rotationFrameUp), k(r, t.frame, xt);\n      for (let i = 0; i < e.vertices.length; ++i) {\n        o(e.vertices[i], t.rotationRight) * t.rotationAngle >= 0 ? s(t.index, r, e.vertices[i], e.vertexNormals[i], !1) : (h(rt, e.vertices[i], t.miterStretch), s(t.index, t.frame, rt, e.vertexNormals[i], !0));\n      }\n    } else for (let i = 0; i < this.numBendSubdivisions + 1; ++i) for (let r = 0; r < e.vertices.length; ++r) {\n      const i = o(e.vertices[r], t.rotationRight) * t.rotationAngle >= 0;\n      h(rt, e.vertices[r], t.miterStretch), s(t.index, t.frame, rt, e.vertexNormals[r], !i);\n    }\n  }\n}\nclass Q {\n  rebuildConnectingProfileGeometry(t, e, i) {\n    for (let s = 0; s < e.vertices.length; ++s) i(t.index, t.frame, e.vertices[s], e.vertexNormals[s], 0, 0);\n  }\n}\nclass W extends Q {\n  constructor() {\n    super();\n  }\n  getNumVertices() {\n    return 0;\n  }\n  getNumIndices() {\n    return 0;\n  }\n  rebuildCapGeometry() {}\n  buildTopology() {}\n}\nclass Y extends Q {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    super(), this.profile = t, this.profilePlaneOffset = e, this.flip = i;\n  }\n  getNumVertices() {\n    return this.profile.vertices.length;\n  }\n  getNumIndices() {\n    return 3 * this.profile.numSegments;\n  }\n  rebuildConnectingProfileGeometry(t, e, i) {\n    for (let s = 0; s < e.vertices.length; ++s) i(t.index, t.frame, e.vertices[s], e.vertexNormals[s], this.profilePlaneOffset, 0);\n  }\n  rebuildCapGeometry(t, e) {\n    const i = ot;\n    r(i, 0, 0);\n    const s = this.flip ? 1 : -1;\n    for (let r = 0; r < this.profile.vertices.length; ++r) e(t.index, t.frame, this.profile.vertices[r], i, this.profilePlaneOffset, s);\n  }\n  buildTopology(t, e) {\n    const i = this.vertexBufferStart + this.profile.vertexIndices[0];\n    for (let s = 1; s < this.profile.numSegments; ++s) {\n      const t = this.profile.vertexIndices[2 * s + 0],\n        r = this.profile.vertexIndices[2 * s + 1],\n        o = this.vertexBufferStart + t,\n        h = this.vertexBufferStart + r;\n      this.flip ? e(h, o, i) : e(i, o, h);\n    }\n  }\n}\nclass Z extends Q {\n  constructor(t) {\n    super(), this.flip = !1, this.sign = 0, this.breakNormals = !1, this.numSegments = 3, this.profile = t.profile, this.flip = t.flip, this.sign = this.flip ? 1 : -1, this.breakNormals = t.breakNormals, this.numSegments = t.subdivisions;\n  }\n  getNumVertices() {\n    let t = 0;\n    return t = this.profile.vertices.length * (this.numSegments - 1), this.breakNormals && (t += this.profile.vertices.length), t += this.profile.poles.length, t;\n  }\n  getNumIndices() {\n    let t = 0;\n    t += 2 * this.profile.numSegments * (this.numSegments - 1);\n    for (let e = 0; e < this.profile.numSegments; ++e) {\n      const i = this.profile.vertexIndices[2 * e + 0],\n        s = this.profile.vertexIndices[2 * e + 1];\n      this.profile.poleIndices[i] === this.profile.poleIndices[s] ? t += 1 : t += 2;\n    }\n    return 3 * t;\n  }\n  rebuildCapGeometry(t, e) {\n    const i = t.frame,\n      s = .5 * this.sign,\n      o = rt,\n      h = ot;\n    r(h, 0, 0);\n    for (let r = 0; r < this.profile.poles.length; ++r) {\n      const o = this.profile.poles[r];\n      o.normal ? e(t.index, i, o.position, o.normal, s, 0) : e(t.index, i, o.position, h, s, this.sign);\n    }\n    if (this.breakNormals) for (let r = 0; r < this.profile.vertices.length; ++r) e(t.index, i, this.profile.vertices[r], this.profile.vertexNormals[r], 0, 0);\n    for (let r = 0; r < this.numSegments - 1; ++r) {\n      const p = (1 - (r + 1) / this.numSegments) * Math.PI * .5,\n        f = Math.sin(p),\n        x = Math.cos(p);\n      for (let r = 0; r < this.profile.vertices.length; ++r) {\n        const p = this.profile.poles[this.profile.poleIndices[r]];\n        n(o, this.profile.vertices[r], p.position), a(o, o, f), p.normal ? (l(o, o, p.position), e(t.index, i, o, p.normal, s * x, 0)) : (u(h, o), a(h, h, f), l(o, o, p.position), e(t.index, i, o, h, s * x, this.sign * x));\n      }\n    }\n  }\n  buildTopology(t, e) {\n    const i = this.breakNormals ? this.vertexBufferStart + this.profile.poles.length : this.firstProfileVertexIndex,\n      s = this.breakNormals ? this.vertexBufferStart + this.profile.poles.length + this.profile.vertices.length : this.vertexBufferStart + this.profile.poles.length;\n    for (let r = 0; r < this.profile.numSegments; ++r) {\n      const t = this.profile.vertexIndices[2 * r + 0],\n        o = this.profile.vertexIndices[2 * r + 1],\n        h = this.vertexBufferStart + this.profile.poleIndices[t],\n        n = this.vertexBufferStart + this.profile.poleIndices[o];\n      let a = i + t,\n        l = i + o;\n      for (let i = 0; i < this.numSegments - 1; ++i) {\n        const r = s + i * this.profile.vertices.length + t,\n          h = s + i * this.profile.vertices.length + o;\n        this.flip ? (e(r, l, a), e(l, r, h)) : (e(a, l, r), e(h, r, l)), a = r, l = h;\n      }\n      this.flip ? (e(h, l, a), h !== n && e(h, n, l)) : (e(a, l, h), h !== n && e(l, n, h));\n    }\n  }\n}\nclass $ {\n  constructor(t, e, i, s, r) {\n    let o = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    this.options = o, this._extrusionVertexCount = 0, this.numExtrusionProfiles = 0, this.numVerticesTotal = 0, this.numNormalsTotal = 0, this.profile = e, this.path = t, this.extruder = i, this.startCap = s, this.endCap = r;\n    const h = this.path.vertices.length - 2;\n    this.numExtrusionProfiles = i.numProfilesPerJoin() * h + 2, this.numVerticesTotal = e.vertices.length * this.numExtrusionProfiles, this.numNormalsTotal = this.numVerticesTotal, this.startCap.vertexBufferStart = this.numVerticesTotal;\n    const n = this.startCap.getNumVertices();\n    this.numVerticesTotal += n, this.numNormalsTotal += n, this.endCap.vertexBufferStart = this.numVerticesTotal;\n    const a = this.endCap.getNumVertices();\n    this.numVerticesTotal += a, this.numNormalsTotal += a, this.pathVertexData = y(1 * this.numVerticesTotal), this.profileRightAxisData = y(4 * this.numVerticesTotal), this.profileUpAxisData = y(4 * this.numVerticesTotal), this.profileVertexAndNormalData = y(4 * this.numVerticesTotal), this.originData = y(3 * this.path.vertices.length), this._rebuildGeometry(), this.buildTopology();\n  }\n  emitVertex(t, e, i, s, r) {\n    if (this.profileRightAxisData[4 * this._extrusionVertexCount + 0] = e.right[0], this.profileRightAxisData[4 * this._extrusionVertexCount + 1] = e.right[1], this.profileRightAxisData[4 * this._extrusionVertexCount + 2] = e.right[2], this.profileUpAxisData[4 * this._extrusionVertexCount + 0] = e.up[0], this.profileUpAxisData[4 * this._extrusionVertexCount + 1] = e.up[1], this.profileUpAxisData[4 * this._extrusionVertexCount + 2] = e.up[2], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 0] = i[0], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 1] = i[1], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 2] = s[0], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 3] = s[1], this.pathVertexData[this._extrusionVertexCount] = t, r) {\n      const e = this.path.vertices[t];\n      this.profileRightAxisData[4 * this._extrusionVertexCount + 3] = e.rotationRight[0] * e.maxStretchDistance, this.profileUpAxisData[4 * this._extrusionVertexCount + 3] = e.rotationRight[1] * e.maxStretchDistance;\n    } else this.profileRightAxisData[4 * this._extrusionVertexCount + 3] = 0, this.profileUpAxisData[4 * this._extrusionVertexCount + 3] = 0;\n    ++this._extrusionVertexCount;\n  }\n  emitCapVertex(t, e, i, s, r, o) {\n    this.profileRightAxisData[4 * this._extrusionVertexCount + 0] = e.right[0], this.profileRightAxisData[4 * this._extrusionVertexCount + 1] = e.right[1], this.profileRightAxisData[4 * this._extrusionVertexCount + 2] = e.right[2], this.profileUpAxisData[4 * this._extrusionVertexCount + 0] = e.up[0], this.profileUpAxisData[4 * this._extrusionVertexCount + 1] = e.up[1], this.profileUpAxisData[4 * this._extrusionVertexCount + 2] = e.up[2], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 0] = i[0], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 1] = i[1], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 2] = s[0], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 3] = s[1], this.pathVertexData[this._extrusionVertexCount] = t, this.profileRightAxisData[4 * this._extrusionVertexCount + 3] = r, this.profileUpAxisData[4 * this._extrusionVertexCount + 3] = o, ++this._extrusionVertexCount;\n  }\n  _rebuildGeometry() {\n    const t = (t, e, i, s, r) => this.emitVertex(t, e, i, s, r),\n      e = (t, e, i, s, r, o) => this.emitCapVertex(t, e, i, s, r, o);\n    this._extrusionVertexCount = 0;\n    for (const i of this.path.vertices) this.originData[3 * i.index + 0] = i.pos[0], this.originData[3 * i.index + 1] = i.pos[1], this.originData[3 * i.index + 2] = i.pos[2];\n    this.startCap.rebuildConnectingProfileGeometry(this.path.vertices[0], this.profile, e);\n    for (let i = 1; i < this.path.vertices.length - 1; ++i) this.extruder.extrude(this.path.vertices[i], this.profile, t);\n    this.endCap.rebuildConnectingProfileGeometry(this.path.vertices[this.path.vertices.length - 1], this.profile, e), this.startCap.rebuildCapGeometry(this.path.vertices[0], e), this.endCap.rebuildCapGeometry(this.path.vertices[this.path.vertices.length - 1], e);\n  }\n  buildTopology() {\n    const t = this.profile.vertices.length,\n      e = this.profile.numSegments,\n      i = this.numExtrusionProfiles - 1;\n    let s = 3 * (2 * (e * i));\n    this.startCap.indexBufferStart = s, this.startCap.firstProfileVertexIndex = 0, s += this.startCap.getNumIndices(), this.endCap.indexBufferStart = s, this.endCap.firstProfileVertexIndex = t * (this.numExtrusionProfiles - 1);\n    const r = new Array(),\n      o = new Array(),\n      h = new Array(),\n      n = (t, e, i) => {\n        r.push(t), r.push(e), r.push(i), o.push(t), o.push(e), o.push(i), h.push(this.pathVertexData[t]), h.push(this.pathVertexData[e]), h.push(this.pathVertexData[i]);\n      };\n    for (let a = 0; a < e; ++a) {\n      const e = this.profile.vertexIndices[2 * a],\n        s = this.profile.vertexIndices[2 * a + 1];\n      for (let r = 0; r < i; ++r) {\n        const i = r * t + e,\n          o = (r + 1) * t + s,\n          h = r * t + s;\n        n(i, (r + 1) * t + e, o), n(i, o, h);\n      }\n    }\n    this.startCap.buildTopology(this.path.vertices[0], n), this.endCap.buildTopology(this.path.vertices[this.path.vertices.length - 1], n), this.vertexIndices = L(r), this.normalIndices = L(o), this.pathVertexIndices = L(h);\n  }\n  onPathChanged() {\n    this._rebuildGeometry();\n  }\n}\nclass tt {\n  constructor(t) {\n    this.builder = t;\n  }\n  get xform() {\n    return this.builder.path.xform;\n  }\n  onPathChanged() {\n    this.builder.onPathChanged();\n  }\n}\nclass et extends tt {\n  constructor(t) {\n    super(t), this.vertexAttributePosition = null, this.vertexAttributeNormal = null, this.vertexAttributeColor = null, this.vertexAttributePosition = y(3 * this.builder.numVerticesTotal), this.vertexAttributeNormal = y(3 * this.builder.numNormalsTotal), this.vertexAttributeColor = new Uint8Array(4), this.vertexAttributeColor[0] = 255, this.vertexAttributeColor[1] = 255, this.vertexAttributeColor[2] = 255, this.vertexAttributeColor[3] = 255;\n  }\n  bakeVertexColors(t) {\n    this.vertexAttributeColor[0] = 255 * t[0], this.vertexAttributeColor[1] = 255 * t[1], this.vertexAttributeColor[2] = 255 * t[2], this.vertexAttributeColor[3] = 255 * (t.length > 3 ? t[3] : 1);\n  }\n  bake(t) {\n    this.size = t;\n    for (let e = 0; e < this.builder.numVerticesTotal; ++e) {\n      let i = this.builder.pathVertexData[e];\n      const s = 0 === i || i === this.builder.path.vertices.length - 1;\n      i *= 3;\n      const h = st;\n      D(h, this.builder.originData[i++], this.builder.originData[i++], this.builder.originData[i]);\n      const n = 4 * e,\n        f = nt,\n        x = rt,\n        c = at,\n        d = lt,\n        m = ut;\n      let v = 0,\n        g = 0;\n      if (D(d, this.builder.profileRightAxisData[n], this.builder.profileRightAxisData[n + 1], this.builder.profileRightAxisData[n + 2]), D(m, this.builder.profileUpAxisData[n], this.builder.profileUpAxisData[n + 1], this.builder.profileUpAxisData[n + 2]), r(x, this.builder.profileVertexAndNormalData[n] * t[0], this.builder.profileVertexAndNormalData[n + 1] * t[1]), s) A(c, m, d), v = this.builder.profileRightAxisData[n + 3] * t[0], g = this.builder.profileUpAxisData[n + 3];else {\n        const t = ot,\n          e = ht;\n        r(t, this.builder.profileRightAxisData[n + 3], this.builder.profileUpAxisData[n + 3]);\n        const i = p(t);\n        u(t, t);\n        const s = o(x, t);\n        if (Math.abs(s) > i) {\n          r(e, -t[1], t[0]);\n          const h = o(x, e);\n          a(t, t, i * Math.sign(s)), a(e, e, h), l(x, t, e);\n        }\n        D(c, 0, 0, 0);\n      }\n      D(f, d[0] * x[0] + m[0] * x[1], d[1] * x[0] + m[1] * x[1], d[2] * x[0] + m[2] * x[1]), this.vertexAttributePosition[3 * e + 0] = h[0] + f[0] + c[0] * v, this.vertexAttributePosition[3 * e + 1] = h[1] + f[1] + c[1] * v, this.vertexAttributePosition[3 * e + 2] = h[2] + f[2] + c[2] * v;\n      const b = rt;\n      r(b, this.builder.profileVertexAndNormalData[n + 2], this.builder.profileVertexAndNormalData[n + 3]), this.vertexAttributeNormal[3 * e + 0] = d[0] * b[0] + m[0] * b[1] + c[0] * g, this.vertexAttributeNormal[3 * e + 1] = d[1] * b[0] + m[1] * b[1] + c[1] * g, this.vertexAttributeNormal[3 * e + 2] = d[2] * b[0] + m[2] * b[1] + c[2] * g;\n    }\n  }\n  createGeometryData() {\n    const t = [[O.POSITION, this.builder.vertexIndices], [O.NORMAL, this.builder.normalIndices]],\n      e = [[O.POSITION, new _(this.vertexAttributePosition, 3, !0)], [O.NORMAL, new _(this.vertexAttributeNormal, 3, !0)]];\n    if (this.vertexAttributeColor) {\n      const i = this.builder.vertexIndices.length;\n      t.push([O.COLOR, new Array(i).fill(0)]), e.push([O.COLOR, new _(this.vertexAttributeColor, 4)]);\n    }\n    return {\n      vertexAttributes: e,\n      indices: t\n    };\n  }\n  onPathChanged() {\n    super.onPathChanged(), this.bake(this.size);\n  }\n  intersect(t, e, i) {\n    const s = this.builder.vertexIndices,\n      r = new _(this.vertexAttributePosition, 3),\n      o = s.length / 3;\n    E(t, e, 0, o, s, r, void 0, void 0, i);\n  }\n}\nclass it extends tt {\n  constructor(t, e, i, s) {\n    super(t), this.sizeAttributeValue = e, this.colorAttributeValue = i, this.opacityAttributeValue = s, this.vvData = null, this.baked = new et(t), this.vvData = y(4 * this.builder.path.vertices.length);\n    for (let r = 0; r < this.builder.path.vertices.length; ++r) {\n      this.vvData[4 * r + 0] = e, this.vvData[4 * r + 1] = i, this.vvData[4 * r + 2] = s;\n      const t = 0 === r || r === this.builder.path.vertices.length - 1;\n      this.vvData[4 * r + 3] = t ? 1 : 0;\n    }\n  }\n  createGeometryData() {\n    return {\n      vertexAttributes: [[O.POSITION, new _(this.builder.originData, 3, !0)], [O.PROFILERIGHT, new _(this.builder.profileRightAxisData, 4, !0)], [O.PROFILEUP, new _(this.builder.profileUpAxisData, 4, !0)], [O.PROFILEVERTEXANDNORMAL, new _(this.builder.profileVertexAndNormalData, 4, !0)], [O.FEATUREVALUE, new _(this.vvData, 4, !0)]],\n      indices: [[O.POSITION, this.builder.pathVertexIndices], [O.PROFILERIGHT, this.builder.vertexIndices], [O.PROFILEUP, this.builder.vertexIndices], [O.PROFILEVERTEXANDNORMAL, this.builder.vertexIndices], [O.FEATUREVALUE, this.builder.pathVertexIndices]]\n    };\n  }\n}\nconst st = N(),\n  rt = f(),\n  ot = f(),\n  ht = f(),\n  nt = N(),\n  at = N(),\n  lt = N(),\n  ut = N(),\n  pt = N(),\n  ft = M(),\n  xt = s();\nexport { $ as Builder, Q as CapBuilder, H as Extruder, it as FastUpdatePathGeometry, K as MiterExtruder, W as NoCapBuilder, J as Path, tt as PathGeometryData, G as PathVertex, j as Profile, Z as RoundCapBuilder, X as SimpleExtruder, et as StaticPathGeometry, Y as TriangulationCapBuilder, q as computeMinimumRotationTangentFrame, z as creatQuadProfile, F as createCircleProfile, M as makeFrame, w as profileSpaceToVertexSpace, B as vertexSpaceToProfileSpace };","map":{"version":3,"names":["c","t","w","e","d","i","s","r","h","o","q","a","n","b","j","l","f","u","p","x","m","v","g","V","A","C","D","I","N","create","P","fromPositionAndNormal","R","intersectRay","S","wrap","T","Attribute","_","newFloatArray","y","makeOrthoBasisDirUpFallback","U","compactIndices","L","VertexAttribute","O","intersectTriangles","E","M","up","right","k","B","G","constructor","pos","posES","vLeft","vRight","vMinSiblingLength","frame","rotationFrameUp","rotationRight","rotationAngle","miterStretch","maxStretchDistance","setFrameFromUpVector","at","nt","pt","vertices","vertexIndices","vertexNormals","poles","poleIndices","addVertex","push","length","addPole","arguments","undefined","position","normal","addSegment","v0","v1","numSegments","translate","F","Math","PI","cos","sin","z","J","offset","xform","floor","updatePathVertexInformation","index","min","sqrt","H","X","numProfilesPerJoin","extrude","K","cutoffAngle","numBendSubdivisions","ft","abs","xt","rt","Q","rebuildConnectingProfileGeometry","W","getNumVertices","getNumIndices","rebuildCapGeometry","buildTopology","Y","profile","profilePlaneOffset","flip","ot","vertexBufferStart","Z","sign","breakNormals","subdivisions","firstProfileVertexIndex","$","options","_extrusionVertexCount","numExtrusionProfiles","numVerticesTotal","numNormalsTotal","path","extruder","startCap","endCap","pathVertexData","profileRightAxisData","profileUpAxisData","profileVertexAndNormalData","originData","_rebuildGeometry","emitVertex","emitCapVertex","indexBufferStart","Array","normalIndices","pathVertexIndices","onPathChanged","tt","builder","et","vertexAttributePosition","vertexAttributeNormal","vertexAttributeColor","Uint8Array","bakeVertexColors","bake","size","st","lt","ut","ht","createGeometryData","POSITION","NORMAL","COLOR","fill","vertexAttributes","indices","intersect","it","sizeAttributeValue","colorAttributeValue","opacityAttributeValue","vvData","baked","PROFILERIGHT","PROFILEUP","PROFILEVERTEXANDNORMAL","FEATUREVALUE","Builder","CapBuilder","Extruder","FastUpdatePathGeometry","MiterExtruder","NoCapBuilder","Path","PathGeometryData","PathVertex","Profile","RoundCapBuilder","SimpleExtruder","StaticPathGeometry","TriangulationCapBuilder","computeMinimumRotationTangentFrame","creatQuadProfile","createCircleProfile","makeFrame","profileSpaceToVertexSpace","vertexSpaceToProfileSpace"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/lib/pathGeometryUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{c as t}from\"../../../../chunks/mat2f64.js\";import{w as e,d as i}from\"../../../../chunks/mat4.js\";import{c as s}from\"../../../../chunks/mat4f64.js\";import{s as r,h as o,q as h,a as n,b as a,j as l,f as u,i as p}from\"../../../../chunks/vec2.js\";import{a as f,d as x,f as c}from\"../../../../chunks/vec2f64.js\";import{e as d,c as m,a as v,n as g,g as b,b as V,f as A,l as C,s as D,m as I}from\"../../../../chunks/vec3.js\";import{c as N}from\"../../../../chunks/vec3f64.js\";import{create as P,fromPositionAndNormal as R,intersectRay as S}from\"../../../../geometry/support/plane.js\";import{wrap as T}from\"../../../../geometry/support/ray.js\";import{Attribute as _}from\"./Attribute.js\";import{newFloatArray as y}from\"./FloatArray.js\";import{makeOrthoBasisDirUpFallback as U}from\"./GeometryUtil.js\";import{compactIndices as L}from\"./Indices.js\";import{VertexAttribute as O}from\"./VertexAttribute.js\";import{intersectTriangles as E}from\"../materials/internal/MaterialUtil.js\";function M(){return{up:N(),right:N()}}function k(t,e,i){I(t.up,e.up,i),I(t.right,e.right,i)}function w(t,e,i){t[0]=i[0]*e.right[0]+i[1]*e.up[0],t[1]=i[0]*e.right[1]+i[1]*e.up[1],t[2]=i[0]*e.right[2]+i[1]*e.up[2]}function B(t,e,i){r(t,d(i,e.right),d(i,e.up))}class G{constructor(){this.pos=N(),this.posES=N(),this.vLeft=N(),this.vRight=N(),this.vMinSiblingLength=0,this.frame=M(),this.rotationFrameUp=N(),this.rotationRight=f(),this.rotationAngle=0,this.miterStretch=t(),this.maxStretchDistance=0}setFrameFromUpVector(t){m(this.frame.up,t),v(at,this.vLeft,this.vRight),g(at,at),b(nt,this.frame.up,d(at,this.frame.up)),V(pt,at,nt),g(pt,pt),A(this.frame.right,pt,this.frame.up)}}class j{constructor(){this.vertices=[],this.vertexIndices=[],this.vertexNormals=[],this.poles=[],this.poleIndices=[]}addVertex(t,e){return this.vertices.push(x(t)),this.vertexNormals.push(x(e)),this.vertices.length-1}addPole(t,e=null){return this.poles.push({position:x(t),normal:e?x(e):null}),this.poles.length-1}addSegment(t,e=null){this.vertexIndices.push(t.v0),this.vertexIndices.push(t.v1),e&&(this.poleIndices.push(e.v0),this.poleIndices.push(e.v1))}get numSegments(){return this.vertexIndices.length/2}translate(t,e){for(const i of this.vertices)i[0]+=t,i[1]+=e;for(const i of this.poles)i.position[0]+=t,i.position[1]+=e}}function F(t=20){const e=.5,i=new j,s={v0:0,v1:0};i.addPole(c(0,0));for(let o=0;o<t;++o){const s=2*o*Math.PI/t,r=Math.cos(s),h=Math.sin(s),n=c(r*e,h*e),a=c(r,h);i.addVertex(n,a)}for(let o=0;o<t-1;++o){const t={v0:o,v1:o+1};i.addSegment(t,s)}const r={v0:t-1,v1:0};return i.addSegment(r,s),i}function z(){const t=1,e=1,i=new j,s=c(.5*-t,.5*-e),r=c(.5*t,.5*-e),o=c(.5*t,.5*e),h=c(.5*-t,.5*e),n=c(0,-1),a=c(1,0),l=c(0,1),u=c(-1,0);return i.addPole(c(0,.5*e),l),i.addPole(c(0,.5*e)),i.addPole(c(0,.5*-e)),i.addPole(c(0,.5*-e),n),i.addVertex(s,n),i.addVertex(r,n),i.addSegment({v0:0,v1:1},{v0:3,v1:3}),i.addVertex(r,a),i.addVertex(o,a),i.addSegment({v0:2,v1:3},{v0:2,v1:1}),i.addVertex(o,l),i.addVertex(h,l),i.addSegment({v0:4,v1:5},{v0:0,v1:0}),i.addVertex(h,u),i.addVertex(s,u),i.addSegment({v0:6,v1:7},{v0:1,v1:2}),i}class J{constructor(t){this.vertices=t,this.offset=N(),this.xform=s();const i=Math.floor((t.length-1)/2);m(this.offset,this.vertices[i].pos);for(const e of this.vertices)V(e.pos,e.pos,this.offset);e(this.xform,this.xform,this.offset),this.updatePathVertexInformation()}updatePathVertexInformation(){const t=this.vertices.length,e=this.vertices[0];e.index=0,e.vLeft=N(),V(e.vRight,this.vertices[1].pos,e.pos);let i=C(e.vRight);e.vMinSiblingLength=i,g(e.vRight,e.vRight);let s=e;for(let r=1;r<t;++r){const e=this.vertices[r];if(e.index=r,e.vLeft=s.vRight,r<t-1){V(e.vRight,this.vertices[r+1].pos,e.pos);const t=C(e.vRight);e.vMinSiblingLength=Math.min(i,t),i=t,g(e.vRight,e.vRight)}else m(e.vRight,e.vLeft),e.vMinSiblingLength=i;s=e}}}function q(t,e){let i=null;const s=t.vertices.length,r=.99619469809,o=N(),h=N(),n=N(),a=N(),l=N(),u=N(),p=P();let f=t.vertices[0];m(h,e),D(o,0,1,0),U(f.vRight,h,o,o,n,h,r),m(f.frame.up,h),m(f.frame.right,n),i=f;for(let x=1;x<s;++x){f=t.vertices[x],v(l,f.vLeft,f.vRight);let e=C(l);e>0?(e=1/Math.sqrt(e),l[0]=l[0]*e,l[1]=l[1]*e,l[2]=l[2]*e):(l[0]=f.vRight[0],l[1]=f.vRight[1],l[2]=f.vRight[2]),v(u,i.pos,i.frame.up),R(f.pos,l,p);S(p,T(u,f.vLeft),a)?(V(a,a,f.pos),g(h,a),A(n,l,h),g(n,n)):U(l,i.frame.up,i.frame.right,o,n,h,r),m(f.frame.up,h),m(f.frame.right,n),i=f}}class H{}class X{numProfilesPerJoin(){return 1}extrude(t,e,i){for(let s=0;s<e.vertices.length;++s)i(t.index,t.frame,e.vertices[s],e.vertexNormals[s],!1)}}class K{constructor(t=.8*Math.PI,e=1){this.cutoffAngle=t,this.numBendSubdivisions=e}numProfilesPerJoin(){return this.numBendSubdivisions+1}extrude(t,e,s){const r=ft;if(Math.abs(t.rotationAngle)>=this.cutoffAngle)for(let n=0;n<this.numBendSubdivisions+1;++n){i(xt,.5*-t.rotationAngle+n*t.rotationAngle/this.numBendSubdivisions,t.rotationFrameUp),k(r,t.frame,xt);for(let i=0;i<e.vertices.length;++i){o(e.vertices[i],t.rotationRight)*t.rotationAngle>=0?s(t.index,r,e.vertices[i],e.vertexNormals[i],!1):(h(rt,e.vertices[i],t.miterStretch),s(t.index,t.frame,rt,e.vertexNormals[i],!0))}}else for(let i=0;i<this.numBendSubdivisions+1;++i)for(let r=0;r<e.vertices.length;++r){const i=o(e.vertices[r],t.rotationRight)*t.rotationAngle>=0;h(rt,e.vertices[r],t.miterStretch),s(t.index,t.frame,rt,e.vertexNormals[r],!i)}}}class Q{rebuildConnectingProfileGeometry(t,e,i){for(let s=0;s<e.vertices.length;++s)i(t.index,t.frame,e.vertices[s],e.vertexNormals[s],0,0)}}class W extends Q{constructor(){super()}getNumVertices(){return 0}getNumIndices(){return 0}rebuildCapGeometry(){}buildTopology(){}}class Y extends Q{constructor(t,e=0,i=!1){super(),this.profile=t,this.profilePlaneOffset=e,this.flip=i}getNumVertices(){return this.profile.vertices.length}getNumIndices(){return 3*this.profile.numSegments}rebuildConnectingProfileGeometry(t,e,i){for(let s=0;s<e.vertices.length;++s)i(t.index,t.frame,e.vertices[s],e.vertexNormals[s],this.profilePlaneOffset,0)}rebuildCapGeometry(t,e){const i=ot;r(i,0,0);const s=this.flip?1:-1;for(let r=0;r<this.profile.vertices.length;++r)e(t.index,t.frame,this.profile.vertices[r],i,this.profilePlaneOffset,s)}buildTopology(t,e){const i=this.vertexBufferStart+this.profile.vertexIndices[0];for(let s=1;s<this.profile.numSegments;++s){const t=this.profile.vertexIndices[2*s+0],r=this.profile.vertexIndices[2*s+1],o=this.vertexBufferStart+t,h=this.vertexBufferStart+r;this.flip?e(h,o,i):e(i,o,h)}}}class Z extends Q{constructor(t){super(),this.flip=!1,this.sign=0,this.breakNormals=!1,this.numSegments=3,this.profile=t.profile,this.flip=t.flip,this.sign=this.flip?1:-1,this.breakNormals=t.breakNormals,this.numSegments=t.subdivisions}getNumVertices(){let t=0;return t=this.profile.vertices.length*(this.numSegments-1),this.breakNormals&&(t+=this.profile.vertices.length),t+=this.profile.poles.length,t}getNumIndices(){let t=0;t+=2*this.profile.numSegments*(this.numSegments-1);for(let e=0;e<this.profile.numSegments;++e){const i=this.profile.vertexIndices[2*e+0],s=this.profile.vertexIndices[2*e+1];this.profile.poleIndices[i]===this.profile.poleIndices[s]?t+=1:t+=2}return 3*t}rebuildCapGeometry(t,e){const i=t.frame,s=.5*this.sign,o=rt,h=ot;r(h,0,0);for(let r=0;r<this.profile.poles.length;++r){const o=this.profile.poles[r];o.normal?e(t.index,i,o.position,o.normal,s,0):e(t.index,i,o.position,h,s,this.sign)}if(this.breakNormals)for(let r=0;r<this.profile.vertices.length;++r)e(t.index,i,this.profile.vertices[r],this.profile.vertexNormals[r],0,0);for(let r=0;r<this.numSegments-1;++r){const p=(1-(r+1)/this.numSegments)*Math.PI*.5,f=Math.sin(p),x=Math.cos(p);for(let r=0;r<this.profile.vertices.length;++r){const p=this.profile.poles[this.profile.poleIndices[r]];n(o,this.profile.vertices[r],p.position),a(o,o,f),p.normal?(l(o,o,p.position),e(t.index,i,o,p.normal,s*x,0)):(u(h,o),a(h,h,f),l(o,o,p.position),e(t.index,i,o,h,s*x,this.sign*x))}}}buildTopology(t,e){const i=this.breakNormals?this.vertexBufferStart+this.profile.poles.length:this.firstProfileVertexIndex,s=this.breakNormals?this.vertexBufferStart+this.profile.poles.length+this.profile.vertices.length:this.vertexBufferStart+this.profile.poles.length;for(let r=0;r<this.profile.numSegments;++r){const t=this.profile.vertexIndices[2*r+0],o=this.profile.vertexIndices[2*r+1],h=this.vertexBufferStart+this.profile.poleIndices[t],n=this.vertexBufferStart+this.profile.poleIndices[o];let a=i+t,l=i+o;for(let i=0;i<this.numSegments-1;++i){const r=s+i*this.profile.vertices.length+t,h=s+i*this.profile.vertices.length+o;this.flip?(e(r,l,a),e(l,r,h)):(e(a,l,r),e(h,r,l)),a=r,l=h}this.flip?(e(h,l,a),h!==n&&e(h,n,l)):(e(a,l,h),h!==n&&e(l,n,h))}}}class ${constructor(t,e,i,s,r,o={}){this.options=o,this._extrusionVertexCount=0,this.numExtrusionProfiles=0,this.numVerticesTotal=0,this.numNormalsTotal=0,this.profile=e,this.path=t,this.extruder=i,this.startCap=s,this.endCap=r;const h=this.path.vertices.length-2;this.numExtrusionProfiles=i.numProfilesPerJoin()*h+2,this.numVerticesTotal=e.vertices.length*this.numExtrusionProfiles,this.numNormalsTotal=this.numVerticesTotal,this.startCap.vertexBufferStart=this.numVerticesTotal;const n=this.startCap.getNumVertices();this.numVerticesTotal+=n,this.numNormalsTotal+=n,this.endCap.vertexBufferStart=this.numVerticesTotal;const a=this.endCap.getNumVertices();this.numVerticesTotal+=a,this.numNormalsTotal+=a,this.pathVertexData=y(1*this.numVerticesTotal),this.profileRightAxisData=y(4*this.numVerticesTotal),this.profileUpAxisData=y(4*this.numVerticesTotal),this.profileVertexAndNormalData=y(4*this.numVerticesTotal),this.originData=y(3*this.path.vertices.length),this._rebuildGeometry(),this.buildTopology()}emitVertex(t,e,i,s,r){if(this.profileRightAxisData[4*this._extrusionVertexCount+0]=e.right[0],this.profileRightAxisData[4*this._extrusionVertexCount+1]=e.right[1],this.profileRightAxisData[4*this._extrusionVertexCount+2]=e.right[2],this.profileUpAxisData[4*this._extrusionVertexCount+0]=e.up[0],this.profileUpAxisData[4*this._extrusionVertexCount+1]=e.up[1],this.profileUpAxisData[4*this._extrusionVertexCount+2]=e.up[2],this.profileVertexAndNormalData[4*this._extrusionVertexCount+0]=i[0],this.profileVertexAndNormalData[4*this._extrusionVertexCount+1]=i[1],this.profileVertexAndNormalData[4*this._extrusionVertexCount+2]=s[0],this.profileVertexAndNormalData[4*this._extrusionVertexCount+3]=s[1],this.pathVertexData[this._extrusionVertexCount]=t,r){const e=this.path.vertices[t];this.profileRightAxisData[4*this._extrusionVertexCount+3]=e.rotationRight[0]*e.maxStretchDistance,this.profileUpAxisData[4*this._extrusionVertexCount+3]=e.rotationRight[1]*e.maxStretchDistance}else this.profileRightAxisData[4*this._extrusionVertexCount+3]=0,this.profileUpAxisData[4*this._extrusionVertexCount+3]=0;++this._extrusionVertexCount}emitCapVertex(t,e,i,s,r,o){this.profileRightAxisData[4*this._extrusionVertexCount+0]=e.right[0],this.profileRightAxisData[4*this._extrusionVertexCount+1]=e.right[1],this.profileRightAxisData[4*this._extrusionVertexCount+2]=e.right[2],this.profileUpAxisData[4*this._extrusionVertexCount+0]=e.up[0],this.profileUpAxisData[4*this._extrusionVertexCount+1]=e.up[1],this.profileUpAxisData[4*this._extrusionVertexCount+2]=e.up[2],this.profileVertexAndNormalData[4*this._extrusionVertexCount+0]=i[0],this.profileVertexAndNormalData[4*this._extrusionVertexCount+1]=i[1],this.profileVertexAndNormalData[4*this._extrusionVertexCount+2]=s[0],this.profileVertexAndNormalData[4*this._extrusionVertexCount+3]=s[1],this.pathVertexData[this._extrusionVertexCount]=t,this.profileRightAxisData[4*this._extrusionVertexCount+3]=r,this.profileUpAxisData[4*this._extrusionVertexCount+3]=o,++this._extrusionVertexCount}_rebuildGeometry(){const t=(t,e,i,s,r)=>this.emitVertex(t,e,i,s,r),e=(t,e,i,s,r,o)=>this.emitCapVertex(t,e,i,s,r,o);this._extrusionVertexCount=0;for(const i of this.path.vertices)this.originData[3*i.index+0]=i.pos[0],this.originData[3*i.index+1]=i.pos[1],this.originData[3*i.index+2]=i.pos[2];this.startCap.rebuildConnectingProfileGeometry(this.path.vertices[0],this.profile,e);for(let i=1;i<this.path.vertices.length-1;++i)this.extruder.extrude(this.path.vertices[i],this.profile,t);this.endCap.rebuildConnectingProfileGeometry(this.path.vertices[this.path.vertices.length-1],this.profile,e),this.startCap.rebuildCapGeometry(this.path.vertices[0],e),this.endCap.rebuildCapGeometry(this.path.vertices[this.path.vertices.length-1],e)}buildTopology(){const t=this.profile.vertices.length,e=this.profile.numSegments,i=this.numExtrusionProfiles-1;let s=3*(2*(e*i));this.startCap.indexBufferStart=s,this.startCap.firstProfileVertexIndex=0,s+=this.startCap.getNumIndices(),this.endCap.indexBufferStart=s,this.endCap.firstProfileVertexIndex=t*(this.numExtrusionProfiles-1);const r=new Array,o=new Array,h=new Array,n=(t,e,i)=>{r.push(t),r.push(e),r.push(i),o.push(t),o.push(e),o.push(i),h.push(this.pathVertexData[t]),h.push(this.pathVertexData[e]),h.push(this.pathVertexData[i])};for(let a=0;a<e;++a){const e=this.profile.vertexIndices[2*a],s=this.profile.vertexIndices[2*a+1];for(let r=0;r<i;++r){const i=r*t+e,o=(r+1)*t+s,h=r*t+s;n(i,(r+1)*t+e,o),n(i,o,h)}}this.startCap.buildTopology(this.path.vertices[0],n),this.endCap.buildTopology(this.path.vertices[this.path.vertices.length-1],n),this.vertexIndices=L(r),this.normalIndices=L(o),this.pathVertexIndices=L(h)}onPathChanged(){this._rebuildGeometry()}}class tt{constructor(t){this.builder=t}get xform(){return this.builder.path.xform}onPathChanged(){this.builder.onPathChanged()}}class et extends tt{constructor(t){super(t),this.vertexAttributePosition=null,this.vertexAttributeNormal=null,this.vertexAttributeColor=null,this.vertexAttributePosition=y(3*this.builder.numVerticesTotal),this.vertexAttributeNormal=y(3*this.builder.numNormalsTotal),this.vertexAttributeColor=new Uint8Array(4),this.vertexAttributeColor[0]=255,this.vertexAttributeColor[1]=255,this.vertexAttributeColor[2]=255,this.vertexAttributeColor[3]=255}bakeVertexColors(t){this.vertexAttributeColor[0]=255*t[0],this.vertexAttributeColor[1]=255*t[1],this.vertexAttributeColor[2]=255*t[2],this.vertexAttributeColor[3]=255*(t.length>3?t[3]:1)}bake(t){this.size=t;for(let e=0;e<this.builder.numVerticesTotal;++e){let i=this.builder.pathVertexData[e];const s=0===i||i===this.builder.path.vertices.length-1;i*=3;const h=st;D(h,this.builder.originData[i++],this.builder.originData[i++],this.builder.originData[i]);const n=4*e,f=nt,x=rt,c=at,d=lt,m=ut;let v=0,g=0;if(D(d,this.builder.profileRightAxisData[n],this.builder.profileRightAxisData[n+1],this.builder.profileRightAxisData[n+2]),D(m,this.builder.profileUpAxisData[n],this.builder.profileUpAxisData[n+1],this.builder.profileUpAxisData[n+2]),r(x,this.builder.profileVertexAndNormalData[n]*t[0],this.builder.profileVertexAndNormalData[n+1]*t[1]),s)A(c,m,d),v=this.builder.profileRightAxisData[n+3]*t[0],g=this.builder.profileUpAxisData[n+3];else{const t=ot,e=ht;r(t,this.builder.profileRightAxisData[n+3],this.builder.profileUpAxisData[n+3]);const i=p(t);u(t,t);const s=o(x,t);if(Math.abs(s)>i){r(e,-t[1],t[0]);const h=o(x,e);a(t,t,i*Math.sign(s)),a(e,e,h),l(x,t,e)}D(c,0,0,0)}D(f,d[0]*x[0]+m[0]*x[1],d[1]*x[0]+m[1]*x[1],d[2]*x[0]+m[2]*x[1]),this.vertexAttributePosition[3*e+0]=h[0]+f[0]+c[0]*v,this.vertexAttributePosition[3*e+1]=h[1]+f[1]+c[1]*v,this.vertexAttributePosition[3*e+2]=h[2]+f[2]+c[2]*v;const b=rt;r(b,this.builder.profileVertexAndNormalData[n+2],this.builder.profileVertexAndNormalData[n+3]),this.vertexAttributeNormal[3*e+0]=d[0]*b[0]+m[0]*b[1]+c[0]*g,this.vertexAttributeNormal[3*e+1]=d[1]*b[0]+m[1]*b[1]+c[1]*g,this.vertexAttributeNormal[3*e+2]=d[2]*b[0]+m[2]*b[1]+c[2]*g}}createGeometryData(){const t=[[O.POSITION,this.builder.vertexIndices],[O.NORMAL,this.builder.normalIndices]],e=[[O.POSITION,new _(this.vertexAttributePosition,3,!0)],[O.NORMAL,new _(this.vertexAttributeNormal,3,!0)]];if(this.vertexAttributeColor){const i=this.builder.vertexIndices.length;t.push([O.COLOR,new Array(i).fill(0)]),e.push([O.COLOR,new _(this.vertexAttributeColor,4)])}return{vertexAttributes:e,indices:t}}onPathChanged(){super.onPathChanged(),this.bake(this.size)}intersect(t,e,i){const s=this.builder.vertexIndices,r=new _(this.vertexAttributePosition,3),o=s.length/3;E(t,e,0,o,s,r,void 0,void 0,i)}}class it extends tt{constructor(t,e,i,s){super(t),this.sizeAttributeValue=e,this.colorAttributeValue=i,this.opacityAttributeValue=s,this.vvData=null,this.baked=new et(t),this.vvData=y(4*this.builder.path.vertices.length);for(let r=0;r<this.builder.path.vertices.length;++r){this.vvData[4*r+0]=e,this.vvData[4*r+1]=i,this.vvData[4*r+2]=s;const t=0===r||r===this.builder.path.vertices.length-1;this.vvData[4*r+3]=t?1:0}}createGeometryData(){return{vertexAttributes:[[O.POSITION,new _(this.builder.originData,3,!0)],[O.PROFILERIGHT,new _(this.builder.profileRightAxisData,4,!0)],[O.PROFILEUP,new _(this.builder.profileUpAxisData,4,!0)],[O.PROFILEVERTEXANDNORMAL,new _(this.builder.profileVertexAndNormalData,4,!0)],[O.FEATUREVALUE,new _(this.vvData,4,!0)]],indices:[[O.POSITION,this.builder.pathVertexIndices],[O.PROFILERIGHT,this.builder.vertexIndices],[O.PROFILEUP,this.builder.vertexIndices],[O.PROFILEVERTEXANDNORMAL,this.builder.vertexIndices],[O.FEATUREVALUE,this.builder.pathVertexIndices]]}}}const st=N(),rt=f(),ot=f(),ht=f(),nt=N(),at=N(),lt=N(),ut=N(),pt=N(),ft=M(),xt=s();export{$ as Builder,Q as CapBuilder,H as Extruder,it as FastUpdatePathGeometry,K as MiterExtruder,W as NoCapBuilder,J as Path,tt as PathGeometryData,G as PathVertex,j as Profile,Z as RoundCapBuilder,X as SimpleExtruder,et as StaticPathGeometry,Y as TriangulationCapBuilder,q as computeMinimumRotationTangentFrame,z as creatQuadProfile,F as createCircleProfile,M as makeFrame,w as profileSpaceToVertexSpace,B as vertexSpaceToProfileSpace};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}