{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../chunks/tslib.es6.js\";\nimport { JSONSupport as e } from \"../core/JSONSupport.js\";\nimport { clone as r } from \"../core/lang.js\";\nimport { property as o } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/accessorSupport/ensureType.js\";\nimport { enumeration as s } from \"../core/accessorSupport/decorators/enumeration.js\";\nimport { reader as i } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as a } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { writer as p } from \"../core/accessorSupport/decorators/writer.js\";\nimport { stretchTypeJSONDict as m, stretchTypeFunctionEnum as n } from \"./support/stretchRendererUtils.js\";\nimport { fromJSON as c, types as u } from \"../rest/support/colorRamps.js\";\nvar d;\nlet h = d = class extends e {\n  constructor(t) {\n    super(t), this.colorRamp = null, this.computeGamma = !1, this.dynamicRangeAdjustment = !1, this.gamma = [], this.maxPercent = null, this.minPercent = null, this.numberOfStandardDeviations = null, this.outputMax = null, this.outputMin = null, this.sigmoidStrengthLevel = null, this.statistics = [], this.histograms = null, this.useGamma = !1, this.stretchType = \"none\", this.type = \"raster-stretch\";\n  }\n  readColorRamp(t) {\n    if (t) return c(t);\n  }\n  writeStatistics(t, e, r) {\n    t?.length && (Array.isArray(t[0]) || (t = t.map(t => [t.min, t.max, t.avg, t.stddev])), e[r] = t);\n  }\n  readStretchType(t, e) {\n    let r = e.stretchType;\n    return \"number\" == typeof r && (r = n[r]), m.read(r);\n  }\n  clone() {\n    return new d({\n      stretchType: this.stretchType,\n      outputMin: this.outputMin,\n      outputMax: this.outputMax,\n      useGamma: this.useGamma,\n      computeGamma: this.computeGamma,\n      statistics: r(this.statistics),\n      gamma: r(this.gamma),\n      sigmoidStrengthLevel: this.sigmoidStrengthLevel,\n      numberOfStandardDeviations: this.numberOfStandardDeviations,\n      minPercent: this.minPercent,\n      maxPercent: this.maxPercent,\n      colorRamp: r(this.colorRamp),\n      histograms: r(this.histograms),\n      dynamicRangeAdjustment: this.dynamicRangeAdjustment\n    });\n  }\n};\nt([o({\n  types: u,\n  json: {\n    write: !0\n  }\n})], h.prototype, \"colorRamp\", void 0), t([i(\"colorRamp\")], h.prototype, \"readColorRamp\", null), t([o({\n  type: Boolean,\n  json: {\n    write: !0\n  }\n})], h.prototype, \"computeGamma\", void 0), t([o({\n  type: Boolean,\n  json: {\n    write: {\n      target: \"dra\"\n    },\n    read: {\n      source: \"dra\"\n    }\n  }\n})], h.prototype, \"dynamicRangeAdjustment\", void 0), t([o({\n  type: [Number],\n  json: {\n    write: !0\n  }\n})], h.prototype, \"gamma\", void 0), t([o({\n  type: Number,\n  json: {\n    write: !0\n  }\n})], h.prototype, \"maxPercent\", void 0), t([o({\n  type: Number,\n  json: {\n    write: !0\n  }\n})], h.prototype, \"minPercent\", void 0), t([o({\n  type: Number,\n  json: {\n    write: !0\n  }\n})], h.prototype, \"numberOfStandardDeviations\", void 0), t([o({\n  type: Number,\n  json: {\n    read: {\n      source: \"max\"\n    },\n    write: {\n      target: \"max\"\n    }\n  }\n})], h.prototype, \"outputMax\", void 0), t([o({\n  type: Number,\n  json: {\n    read: {\n      source: \"min\"\n    },\n    write: {\n      target: \"min\"\n    }\n  }\n})], h.prototype, \"outputMin\", void 0), t([o({\n  type: Number,\n  json: {\n    write: !0\n  }\n})], h.prototype, \"sigmoidStrengthLevel\", void 0), t([o({\n  json: {\n    type: [[Number]],\n    write: !0\n  }\n})], h.prototype, \"statistics\", void 0), t([o()], h.prototype, \"histograms\", void 0), t([p(\"statistics\")], h.prototype, \"writeStatistics\", null), t([o({\n  type: Boolean,\n  json: {\n    write: !0\n  }\n})], h.prototype, \"useGamma\", void 0), t([o({\n  type: m.apiValues,\n  json: {\n    type: m.jsonValues,\n    write: m.write\n  }\n})], h.prototype, \"stretchType\", void 0), t([i(\"stretchType\", [\"stretchType\"])], h.prototype, \"readStretchType\", null), t([s({\n  rasterStretch: \"raster-stretch\"\n})], h.prototype, \"type\", void 0), h = d = t([a(\"esri.renderers.RasterStretchRenderer\")], h);\nconst y = h;\nexport { y as default };","map":{"version":3,"names":["_","t","JSONSupport","e","clone","r","property","o","enumeration","s","reader","i","subclass","a","writer","p","stretchTypeJSONDict","m","stretchTypeFunctionEnum","n","fromJSON","c","types","u","d","h","constructor","colorRamp","computeGamma","dynamicRangeAdjustment","gamma","maxPercent","minPercent","numberOfStandardDeviations","outputMax","outputMin","sigmoidStrengthLevel","statistics","histograms","useGamma","stretchType","type","readColorRamp","writeStatistics","length","Array","isArray","map","min","max","avg","stddev","readStretchType","read","json","write","prototype","Boolean","target","source","Number","apiValues","jsonValues","rasterStretch","y","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/renderers/RasterStretchRenderer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../chunks/tslib.es6.js\";import{JSONSupport as e}from\"../core/JSONSupport.js\";import{clone as r}from\"../core/lang.js\";import{property as o}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import{enumeration as s}from\"../core/accessorSupport/decorators/enumeration.js\";import{reader as i}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as a}from\"../core/accessorSupport/decorators/subclass.js\";import{writer as p}from\"../core/accessorSupport/decorators/writer.js\";import{stretchTypeJSONDict as m,stretchTypeFunctionEnum as n}from\"./support/stretchRendererUtils.js\";import{fromJSON as c,types as u}from\"../rest/support/colorRamps.js\";var d;let h=d=class extends e{constructor(t){super(t),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.statistics=[],this.histograms=null,this.useGamma=!1,this.stretchType=\"none\",this.type=\"raster-stretch\"}readColorRamp(t){if(t)return c(t)}writeStatistics(t,e,r){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[r]=t)}readStretchType(t,e){let r=e.stretchType;return\"number\"==typeof r&&(r=n[r]),m.read(r)}clone(){return new d({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:r(this.statistics),gamma:r(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:r(this.colorRamp),histograms:r(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment})}};t([o({types:u,json:{write:!0}})],h.prototype,\"colorRamp\",void 0),t([i(\"colorRamp\")],h.prototype,\"readColorRamp\",null),t([o({type:Boolean,json:{write:!0}})],h.prototype,\"computeGamma\",void 0),t([o({type:Boolean,json:{write:{target:\"dra\"},read:{source:\"dra\"}}})],h.prototype,\"dynamicRangeAdjustment\",void 0),t([o({type:[Number],json:{write:!0}})],h.prototype,\"gamma\",void 0),t([o({type:Number,json:{write:!0}})],h.prototype,\"maxPercent\",void 0),t([o({type:Number,json:{write:!0}})],h.prototype,\"minPercent\",void 0),t([o({type:Number,json:{write:!0}})],h.prototype,\"numberOfStandardDeviations\",void 0),t([o({type:Number,json:{read:{source:\"max\"},write:{target:\"max\"}}})],h.prototype,\"outputMax\",void 0),t([o({type:Number,json:{read:{source:\"min\"},write:{target:\"min\"}}})],h.prototype,\"outputMin\",void 0),t([o({type:Number,json:{write:!0}})],h.prototype,\"sigmoidStrengthLevel\",void 0),t([o({json:{type:[[Number]],write:!0}})],h.prototype,\"statistics\",void 0),t([o()],h.prototype,\"histograms\",void 0),t([p(\"statistics\")],h.prototype,\"writeStatistics\",null),t([o({type:Boolean,json:{write:!0}})],h.prototype,\"useGamma\",void 0),t([o({type:m.apiValues,json:{type:m.jsonValues,write:m.write}})],h.prototype,\"stretchType\",void 0),t([i(\"stretchType\",[\"stretchType\"])],h.prototype,\"readStretchType\",null),t([s({rasterStretch:\"raster-stretch\"})],h.prototype,\"type\",void 0),h=d=t([a(\"esri.renderers.RasterStretchRenderer\")],h);const y=h;export{y as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}