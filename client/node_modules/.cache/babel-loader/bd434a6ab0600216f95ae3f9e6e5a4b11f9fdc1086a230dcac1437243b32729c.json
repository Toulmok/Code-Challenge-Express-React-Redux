{"ast":null,"code":"var _jsxFileName = \"C:\\\\code-challenge-react\\\\frontend\\\\src\\\\components\\\\main\\\\query.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as qActions from '../../reducer/portal/query/actions';\nimport { autoFormatTitle } from './query-form-helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Query extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    console.log(\"query\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"queryForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"GET\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"type\",\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"type\",\n          name: \"type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"created\",\n          children: \"Created:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"created\",\n          name: \"created\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Query\",\n          onClick: this.props.getUserItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n    const title = document.getElementById(\"qTitle\");\n    if (title != null) {\n      title.oninput = e => {\n        e.target.value = autoFormatTitle(e.target.value);\n      };\n    }\n  }\n}\nQuery.defaultProps = {\n  portalQueryParam: \"\"\n};\nconst mapStateToProps = _ref => {\n  let {\n    query: {\n      userItems\n    }\n  } = _ref;\n  return {\n    userItems\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  getUserItems() {\n    console.log(\"getting user items\");\n    return () => {\n      dispatch(qActions.getUserItems);\n    };\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Query);","map":{"version":3,"names":["React","connect","qActions","autoFormatTitle","jsxDEV","_jsxDEV","Query","Component","constructor","props","state","render","console","log","className","children","method","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onClick","getUserItems","title","document","getElementById","oninput","e","target","defaultProps","portalQueryParam","mapStateToProps","_ref","query","userItems","mapDispatchToProps","dispatch"],"sources":["C:/code-challenge-react/frontend/src/components/main/query.tsx"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport * as qActions from '../../reducer/portal/query/actions'\nimport * as uActions from '../../reducer/portal/user/actions'\nimport { autoFormatTitle } from './query-form-helpers'\n\ninterface ViewProps {\n  portalQueryParam: string,\n  getUserItems: Function,\n}\n\nexport class Query extends React.Component <ViewProps, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      \n    }\n  }\n\n  public static defaultProps = {\n    portalQueryParam: \"\",\n  }\n\n  render() {\n    console.log(\"query\")\n   \n    return (\n      <div className=\"queryForm\">\n         <form method=\"GET\">\n            <label htmlFor=\"title\">Title:</label>\n            <input type=\"text\" id=\"title\" name=\"title\"></input>\n            <label htmlFor=\"type\">Type:</label>\n            <input type=\"text\" id=\"type\" name=\"type\"></input>\n            <label htmlFor=\"created\">Created:</label>\n            <input type=\"text\" id=\"created\" name=\"created\"></input>\n            <input type=\"submit\" value=\"Query\" onClick={this.props.getUserItems()}></input>\n          </form>\n      </div>\n    )\n\n    const title = document.getElementById(\"qTitle\")\n    if(title != null) { \n      title.oninput = (e:any) => {\n        e.target.value = autoFormatTitle(e.target.value)\n      }\n    }\n  }\n}\n\nconst mapStateToProps = ({ query: { userItems }}:any) => ({\n  userItems,\n})\nconst mapDispatchToProps = (dispatch:any) => ({\n  getUserItems() {\n    console.log(\"getting user items\")\n    return () => {\n      dispatch(qActions.getUserItems)\n    }\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Query)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}