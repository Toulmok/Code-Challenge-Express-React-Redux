{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isSome as t } from \"../../../core/maybe.js\";\nimport { getInfo as r } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport o from \"./TileKey.js\";\nfunction i(t, r) {\n  return [t, r];\n}\nfunction e(t, r, o) {\n  return t[0] = r, t[1] = o, t;\n}\nfunction s(t, r, o, i, e) {\n  return t[0] = r, t[1] = o, t[2] = i, t[3] = e, t;\n}\nconst n = new o(\"0/0/0/0\");\nclass l {\n  static create(o, s) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const h = r(o.spatialReference),\n      a = s.origin || i(o.origin.x, o.origin.y),\n      u = i(o.size[0] * s.resolution, o.size[1] * s.resolution),\n      m = i(-1 / 0, -1 / 0),\n      g = i(1 / 0, 1 / 0),\n      w = i(1 / 0, 1 / 0);\n    t(n) && (e(m, Math.max(0, Math.floor((n.xmin - a[0]) / u[0])), Math.max(0, Math.floor((a[1] - n.ymax) / u[1]))), e(g, Math.max(0, Math.floor((n.xmax - a[0]) / u[0])), Math.max(0, Math.floor((a[1] - n.ymin) / u[1]))), e(w, g[0] - m[0] + 1, g[1] - m[1] + 1));\n    const {\n      cols: c,\n      rows: d\n    } = s;\n    let f, F, z, p;\n    return !n && c && d && (e(m, c[0], d[0]), e(g, c[1], d[1]), e(w, c[1] - c[0] + 1, d[1] - d[0] + 1)), o.isWrappable ? (f = i(Math.ceil(Math.round((h.valid[1] - h.valid[0]) / s.resolution) / o.size[0]), w[1]), F = i(Math.floor((h.origin[0] - a[0]) / u[0]), m[1]), z = i(f[0] + F[0] - 1, g[1]), p = !0) : (F = m, z = g, f = w, p = !1), new l(s.level, s.resolution, s.scale, a, m, g, w, u, F, z, f, p);\n  }\n  constructor(t, r, o, i, e, s, n, l, h, a, u, m) {\n    this.level = t, this.resolution = r, this.scale = o, this.origin = i, this.first = e, this.last = s, this.size = n, this.norm = l, this.worldStart = h, this.worldEnd = a, this.worldSize = u, this.wrap = m;\n  }\n  normalizeCol(t) {\n    if (!this.wrap) return t;\n    const r = this.worldSize[0];\n    return t < 0 ? r - 1 - Math.abs((t + 1) % r) : t % r;\n  }\n  denormalizeCol(t, r) {\n    return this.wrap ? this.worldSize[0] * r + t : t;\n  }\n  getWorldForColumn(t) {\n    return this.wrap ? Math.floor(t / this.worldSize[0]) : 0;\n  }\n  getFirstColumnForWorld(t) {\n    return t * this.worldSize[0] + this.first[0];\n  }\n  getLastColumnForWorld(t) {\n    return t * this.worldSize[0] + this.first[0] + this.size[0] - 1;\n  }\n  getColumnForX(t) {\n    return (t - this.origin[0]) / this.norm[0];\n  }\n  getXForColumn(t) {\n    return this.origin[0] + t * this.norm[0];\n  }\n  getRowForY(t) {\n    return (this.origin[1] - t) / this.norm[1];\n  }\n  getYForRow(t) {\n    return this.origin[1] - t * this.norm[1];\n  }\n  getTileBounds(t, r) {\n    let o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    n.set(r);\n    const i = o ? n.col : this.denormalizeCol(n.col, n.world),\n      e = n.row;\n    return s(t, this.getXForColumn(i), this.getYForRow(e + 1), this.getXForColumn(i + 1), this.getYForRow(e)), t;\n  }\n  getTileCoords(t, r) {\n    let o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    n.set(r);\n    const i = o ? n.col : this.denormalizeCol(n.col, n.world);\n    return Array.isArray(t) ? e(t, this.getXForColumn(i), this.getYForRow(n.row)) : (t.x = this.getXForColumn(i), t.y = this.getYForRow(n.row)), t;\n  }\n}\nexport { l as default };","map":{"version":3,"names":["isSome","t","getInfo","r","o","i","e","s","n","l","create","arguments","length","undefined","h","spatialReference","a","origin","x","y","u","size","resolution","m","g","w","Math","max","floor","xmin","ymax","xmax","ymin","cols","c","rows","d","f","F","z","p","isWrappable","ceil","round","valid","level","scale","constructor","first","last","norm","worldStart","worldEnd","worldSize","wrap","normalizeCol","abs","denormalizeCol","getWorldForColumn","getFirstColumnForWorld","getLastColumnForWorld","getColumnForX","getXForColumn","getRowForY","getYForRow","getTileBounds","set","col","world","row","getTileCoords","Array","isArray","default"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/2d/tiling/LODInfo.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as t}from\"../../../core/maybe.js\";import{getInfo as r}from\"../../../geometry/support/spatialReferenceUtils.js\";import o from\"./TileKey.js\";function i(t,r){return[t,r]}function e(t,r,o){return t[0]=r,t[1]=o,t}function s(t,r,o,i,e){return t[0]=r,t[1]=o,t[2]=i,t[3]=e,t}const n=new o(\"0/0/0/0\");class l{static create(o,s,n=null){const h=r(o.spatialReference),a=s.origin||i(o.origin.x,o.origin.y),u=i(o.size[0]*s.resolution,o.size[1]*s.resolution),m=i(-1/0,-1/0),g=i(1/0,1/0),w=i(1/0,1/0);t(n)&&(e(m,Math.max(0,Math.floor((n.xmin-a[0])/u[0])),Math.max(0,Math.floor((a[1]-n.ymax)/u[1]))),e(g,Math.max(0,Math.floor((n.xmax-a[0])/u[0])),Math.max(0,Math.floor((a[1]-n.ymin)/u[1]))),e(w,g[0]-m[0]+1,g[1]-m[1]+1));const{cols:c,rows:d}=s;let f,F,z,p;return!n&&c&&d&&(e(m,c[0],d[0]),e(g,c[1],d[1]),e(w,c[1]-c[0]+1,d[1]-d[0]+1)),o.isWrappable?(f=i(Math.ceil(Math.round((h.valid[1]-h.valid[0])/s.resolution)/o.size[0]),w[1]),F=i(Math.floor((h.origin[0]-a[0])/u[0]),m[1]),z=i(f[0]+F[0]-1,g[1]),p=!0):(F=m,z=g,f=w,p=!1),new l(s.level,s.resolution,s.scale,a,m,g,w,u,F,z,f,p)}constructor(t,r,o,i,e,s,n,l,h,a,u,m){this.level=t,this.resolution=r,this.scale=o,this.origin=i,this.first=e,this.last=s,this.size=n,this.norm=l,this.worldStart=h,this.worldEnd=a,this.worldSize=u,this.wrap=m}normalizeCol(t){if(!this.wrap)return t;const r=this.worldSize[0];return t<0?r-1-Math.abs((t+1)%r):t%r}denormalizeCol(t,r){return this.wrap?this.worldSize[0]*r+t:t}getWorldForColumn(t){return this.wrap?Math.floor(t/this.worldSize[0]):0}getFirstColumnForWorld(t){return t*this.worldSize[0]+this.first[0]}getLastColumnForWorld(t){return t*this.worldSize[0]+this.first[0]+this.size[0]-1}getColumnForX(t){return(t-this.origin[0])/this.norm[0]}getXForColumn(t){return this.origin[0]+t*this.norm[0]}getRowForY(t){return(this.origin[1]-t)/this.norm[1]}getYForRow(t){return this.origin[1]-t*this.norm[1]}getTileBounds(t,r,o=!1){n.set(r);const i=o?n.col:this.denormalizeCol(n.col,n.world),e=n.row;return s(t,this.getXForColumn(i),this.getYForRow(e+1),this.getXForColumn(i+1),this.getYForRow(e)),t}getTileCoords(t,r,o=!1){n.set(r);const i=o?n.col:this.denormalizeCol(n.col,n.world);return Array.isArray(t)?e(t,this.getXForColumn(i),this.getYForRow(n.row)):(t.x=this.getXForColumn(i),t.y=this.getYForRow(n.row)),t}}export{l as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}