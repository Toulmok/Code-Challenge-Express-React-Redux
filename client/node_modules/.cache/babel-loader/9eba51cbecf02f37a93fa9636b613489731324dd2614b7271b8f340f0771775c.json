{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport { rasterRendererTypes as e } from \"../../rasterRenderers.js\";\nimport r from \"../../request.js\";\nimport i from \"../../core/Error.js\";\nimport s from \"../../core/Logger.js\";\nimport { isNone as n, isSome as o } from \"../../core/maybe.js\";\nimport { property as a } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport \"../../core/arrayUtils.js\";\nimport { subclass as l } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { getInfo as u } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { sanitizeUrl as m } from \"../support/arcgisLayerUrl.js\";\nimport { url as d } from \"../support/commonProperties.js\";\nimport c from \"../support/DimensionalDefinition.js\";\nimport h from \"../support/MultidimensionalSubset.js\";\nimport f from \"../support/RasterFunction.js\";\nimport p from \"../support/RasterJobHandler.js\";\nimport y from \"../support/TileInfo.js\";\nimport b from \"../support/rasterDatasets/FunctionRaster.js\";\nimport { getDefaultMultidimensionalDefinition as g, hasExcludedVariableOrDimension as J, getDefaultVariablInfo as _, isMultiSliceOrRangeDefinition as F, getSubsetVariablesFromMdInfo as I } from \"../support/rasterDatasets/multidimensionalUtils.js\";\nimport { create as R } from \"../support/rasterFunctions/rasterFunctionHelper.js\";\nimport { convertVectorFieldData as S } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { normalizeRendererJSON as v, getVariableRasterInfo as x, getDefaultInterpolation as D, getDefaultBandCombination as j, createDefaultRenderer as H } from \"../../renderers/support/rasterRendererHelper.js\";\nimport T from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as w } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport N from \"../../geometry/SpatialReference.js\";\nconst O = s.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),\n  z = s => {\n    let z = class extends s {\n      constructor() {\n        super(...arguments), this._isConstructedFromFunctionRaster = !1, this._rasterJobHandler = {\n          instance: null,\n          refCount: 0,\n          connectionPromise: null\n        }, this.bandIds = null, this.copyright = null, this.interpolation = \"nearest\", this.multidimensionalSubset = null, this.raster = null, this.rasterFunction = null, this.rasterInfo = null, this.sourceJSON = null, this.spatialReference = null, this.symbolizer = null, this._isConstructedFromFunctionRaster = \"Function\" === (arguments.length <= 0 ? undefined : arguments[0])?.raster?.datasetFormat;\n      }\n      get fullExtent() {\n        return this.rasterInfo?.extent;\n      }\n      set multidimensionalDefinition(t) {\n        this._set(\"multidimensionalDefinition\", t), this.updateRenderer();\n      }\n      get tileInfo() {\n        return this.rasterInfo?.storageInfo.tileInfo;\n      }\n      set url(t) {\n        this._set(\"url\", m(t, O));\n      }\n      set renderer(t) {\n        this._set(\"renderer\", t), this.updateRenderer();\n      }\n      async convertVectorFieldData(t, e) {\n        if (n(t) || !this.rasterInfo) return null;\n        const r = this._rasterJobHandler.instance,\n          i = this.rasterInfo.dataType;\n        return r ? r.convertVectorFieldData({\n          pixelBlock: t,\n          dataType: i\n        }, e) : S(t, i);\n      }\n      async createFlowMesh(t, e) {\n        const r = this._rasterJobHandler.instance;\n        return r ? r.createFlowMesh(t, e) : w(t.meshType, t.simulationSettings, t.flowData, o(e.signal) ? e.signal : new AbortController().signal);\n      }\n      normalizeRasterFetchOptions(t) {\n        const {\n          multidimensionalInfo: e\n        } = this.rasterInfo ?? {};\n        if (n(e)) return t;\n        let r = t.multidimensionalDefinition || this.multidimensionalDefinition;\n        !n(r) && r.length || (r = g(this.raster.rasterInfo, {\n          multidimensionalSubset: this.multidimensionalSubset\n        }));\n        const i = t.timeExtent || this.timeExtent;\n        if (o(r) && o(i) && (o(i.start) || o(i.end))) {\n          r = r.map(t => t.clone());\n          const s = e.variables.find(_ref => {\n              let {\n                name: t\n              } = _ref;\n              return t === r[0].variableName;\n            })?.dimensions?.find(_ref2 => {\n              let {\n                name: t\n              } = _ref2;\n              return \"StdTime\" === t;\n            }),\n            a = r.find(_ref3 => {\n              let {\n                dimensionName: t\n              } = _ref3;\n              return \"StdTime\" === t;\n            });\n          if (!s || !a) return {\n            ...t,\n            multidimensionalDefinition: null\n          };\n          const {\n              start: l,\n              end: u\n            } = i,\n            m = n(l) ? null : l.getTime(),\n            d = n(u) ? null : u.getTime(),\n            c = m ?? d,\n            h = d ?? m;\n          if (o(s.values)) {\n            const t = s.values.filter(t => {\n              if (Array.isArray(t)) {\n                if (c === h) return t[0] <= c && t[1] >= c;\n                const e = t[0] <= c && t[1] > c || t[0] < h && t[1] >= h,\n                  r = t[0] >= c && t[1] <= h || t[0] < c && t[1] > h;\n                return e || r;\n              }\n              return c === h ? t === c : t >= c && t <= h;\n            });\n            if (t.length) {\n              const e = t.sort((t, e) => {\n                if (c === h) return (t[0] ?? t) - (e[0] ?? e);\n                return Math.abs((t[1] ?? t) - h) - Math.abs((e[1] ?? e) - h);\n              })[0];\n              a.values = [e];\n            } else r = null;\n          } else if (s.hasRegularIntervals && s.extent) {\n            const [t, e] = s.extent;\n            c > e || h < t ? r = null : a.values = c === h ? [c] : [Math.max(t, c), Math.min(e, h)];\n          }\n        }\n        return o(r) && J(r, this.multidimensionalSubset) ? {\n          ...t,\n          multidimensionalDefinition: null\n        } : {\n          ...t,\n          multidimensionalDefinition: r\n        };\n      }\n      async updateRasterFunction() {\n        if (\"imagery-tile\" !== this.type || !this.rasterFunction && !this._cachedRasterFunctionJson || JSON.stringify(this.rasterFunction) === JSON.stringify(this._cachedRasterFunctionJson)) return;\n        if (this._isConstructedFromFunctionRaster && \"Function\" === this.raster.datasetFormat) {\n          const t = this.raster.rasterFunction.toJSON();\n          return !this.rasterFunction && t && this._set(\"rasterFunction\", f.fromJSON(t)), void (this._cachedRasterFunctionJson = this.rasterFunction?.toJSON());\n        }\n        let t,\n          e = this.raster,\n          r = !1;\n        \"Function\" === e.datasetFormat ? (t = e.primaryRasters.rasters, e = t[0], r = !0) : t = [e];\n        const {\n          rasterFunction: i\n        } = this;\n        if (i) {\n          const r = {\n            raster: e\n          };\n          t.length > 1 && t.forEach(t => r[t.url] = t);\n          const s = R(i.rasterFunctionDefinition ?? i.toJSON(), r),\n            n = new b({\n              rasterFunction: s\n            });\n          n.rasterJobHandler = this._rasterJobHandler.instance, await n.open(), this._cachedRasterFunctionJson = this.rasterFunction?.toJSON(), this.raster = n;\n        } else this.raster = e, this._cachedRasterFunctionJson = null;\n        if (this._cachedRendererJson = null, !r && !i) return;\n        const {\n            bandIds: s\n          } = this,\n          {\n            bandCount: n\n          } = this.raster.rasterInfo,\n          o = s?.length ? s.some(t => t >= n) : n >= 3;\n        s && (o || \"raster-stretch\" !== this.renderer.type) && this._set(\"bandIds\", null), this._configDefaultRenderer(\"auto\");\n      }\n      async updateRenderer() {\n        const {\n          loaded: t,\n          symbolizer: e\n        } = this;\n        if (!t || !e) return;\n        const {\n            rasterInfo: r\n          } = this.raster,\n          i = _(r, {\n            multidimensionalDefinition: this.multidimensionalDefinition,\n            multidimensionalSubset: this.multidimensionalSubset\n          })?.name,\n          s = v({\n            ...this.renderer.toJSON(),\n            variableName: i\n          });\n        if (JSON.stringify(this._cachedRendererJson) === JSON.stringify(s)) return;\n        const n = this._rasterJobHandler.instance;\n        n && (e.rasterInfo = x(r, i), e.rendererJSON = s, e.bind(), await n.updateSymbolizer(e), this._cachedRendererJson = s);\n      }\n      async applyRenderer(t, e) {\n        const r = t && t.pixelBlock;\n        if (!(o(r) && r.pixels && r.pixels.length > 0)) return null;\n        let i;\n        await this.updateRenderer();\n        const s = this._rasterJobHandler.instance,\n          n = this.bandIds ?? [];\n        return i = s ? await s.symbolize({\n          ...t,\n          simpleStretchParams: e,\n          bandIds: n\n        }) : this.symbolizer.symbolize({\n          ...t,\n          simpleStretchParams: e,\n          bandIds: n\n        }), i;\n      }\n      getTileUrl(t, e, r) {\n        return \"RasterTileServer\" === this.raster.datasetFormat ? `${this.url}/tile/${t}/${e}/${r}` : \"\";\n      }\n      getCompatibleTileInfo(t, e) {\n        let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n        if (!this.loaded || n(e)) return null;\n        if (r && t.equals(this.spatialReference)) return this.tileInfo;\n        const i = u(t);\n        return y.create({\n          size: 256,\n          spatialReference: t,\n          origin: i ? {\n            x: i.origin[0],\n            y: i.origin[1]\n          } : {\n            x: e.xmin,\n            y: e.ymax\n          }\n        });\n      }\n      getCompatibleFullExtent(t) {\n        return this.loaded ? (this._compatibleFullExtent && this._compatibleFullExtent.spatialReference.equals(t) || (this._compatibleFullExtent = this.raster.computeExtent(t)), this._compatibleFullExtent) : null;\n      }\n      async fetchTile(t, e, i) {\n        let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        if (C(this), s.requestAsImageElement) {\n          const n = this.getTileUrl(t, e, i);\n          return r(n, {\n            responseType: \"image\",\n            query: {\n              ...this.refreshParameters,\n              ...this.raster.ioConfig.customFetchParameters\n            },\n            signal: s.signal\n          }).then(t => t.data);\n        }\n        const {\n          rasterInfo: a\n        } = this;\n        if (o(a.multidimensionalInfo) && (s = this.normalizeRasterFetchOptions(s), n(s.multidimensionalDefinition))) {\n          const r = s.tileInfo || a.storageInfo.tileInfo;\n          return {\n            extent: this.raster.getTileExtentFromTileInfo(t, e, i, r),\n            pixelBlock: null\n          };\n        }\n        return await this._initJobHandler(), await this.updateRasterFunction(), \"raster-shaded-relief\" === this.renderer.type && (s = {\n          ...s,\n          buffer: {\n            cols: 1,\n            rows: 1\n          }\n        }), this.raster.fetchTile(t, e, i, s);\n      }\n      async fetchPixels(t, e, r) {\n        let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        return o(this.rasterInfo.multidimensionalInfo) && (i = this.normalizeRasterFetchOptions(i), n(i.multidimensionalDefinition)) ? {\n          extent: t,\n          pixelBlock: null\n        } : (await this._initJobHandler(), await this.updateRasterFunction(), this.raster.fetchPixels(t, e, r, i));\n      }\n      async identify(t) {\n        let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const {\n          raster: r,\n          rasterInfo: s\n        } = this;\n        if (o(s.multidimensionalInfo)) {\n          if (!(s.hasMultidimensionalTranspose && !!(F(e.multidimensionalDefinition) || e.transposedVariableName || e.timeExtent)) && (e = this.normalizeRasterFetchOptions(e), n(e.multidimensionalDefinition))) return {\n            location: t,\n            value: null\n          };\n        }\n        const a = this.multidimensionalSubset?.areaOfInterest;\n        if (a && !a.contains(t)) throw new i(\"imagery-tile-mixin:identify\", \"the request cannot be fulfilled when falling outside of the multidimensional subset\");\n        return r.identify(t, e);\n      }\n      increaseRasterJobHandlerUsage() {\n        this._rasterJobHandler.refCount++;\n      }\n      decreaseRasterJobHandlerUsage() {\n        this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n      }\n      hasStandardTime() {\n        const t = this.rasterInfo?.multidimensionalInfo;\n        if (n(t) || \"standard-time\" !== this.rasterInfo?.dataType) return !1;\n        const e = this.multidimensionalDefinition,\n          r = e?.[0]?.variableName;\n        return t.variables.some(t => t.name === r && (!e?.[0].dimensionName || t.dimensions.some(t => \"StdTime\" === t.name)));\n      }\n      getStandardTimeValue(t) {\n        return new Date(24 * (t - 25569) * 3600 * 1e3).toString();\n      }\n      getMultidimensionalSubsetVariables(t) {\n        const e = t ?? this.rasterInfo?.multidimensionalInfo;\n        return I(this.multidimensionalSubset, e);\n      }\n      _configDefaultSettings() {\n        this._configDefaultInterpolation(), this.multidimensionalDefinition || (this.multidimensionalDefinition = g(this.raster.rasterInfo, {\n          multidimensionalSubset: this.multidimensionalSubset\n        })), this._configDefaultRenderer();\n      }\n      _initJobHandler() {\n        if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n        const t = new p();\n        return this._rasterJobHandler.connectionPromise = t.initialize().then(() => {\n          C(this), this._rasterJobHandler.instance = t, this.raster.rasterJobHandler = t, this.renderer && this.updateRenderer(), \"Function\" === this.raster.datasetFormat && this.raster.syncJobHandler();\n        }).catch(() => {}), this._rasterJobHandler.connectionPromise;\n      }\n      _shutdownJobHandler() {\n        this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this._cachedRendererJson = null, this.raster && (this.raster.rasterJobHandler = null);\n      }\n      _configDefaultInterpolation() {\n        if (null == this.interpolation) {\n          C(this);\n          const {\n              raster: t\n            } = this,\n            e = D(t.rasterInfo, t.tileType, this.sourceJSON?.defaultResamplingMethod);\n          this._set(\"interpolation\", e);\n        }\n      }\n      _configDefaultRenderer() {\n        let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"no\";\n        C(this);\n        const {\n          rasterInfo: e\n        } = this.raster;\n        !this.bandIds && e.bandCount > 1 && (this.bandIds = j(e));\n        const r = _(e, {\n          multidimensionalDefinition: this.multidimensionalDefinition,\n          multidimensionalSubset: this.multidimensionalSubset\n        })?.name;\n        if (!this.renderer || \"override\" === t) {\n          const t = H(e, {\n            bandIds: this.bandIds,\n            variableName: r\n          });\n          \"WCSServer\" === this.raster.datasetFormat && \"raster-stretch\" === t.type && ((e.statistics?.[0].max ?? 0) > 1e24 || (e.statistics?.[0].min ?? 0) < -1e24) && (t.dynamicRangeAdjustment = !0, t.statistics = null, \"none\" === t.stretchType && (t.stretchType = \"min-max\")), this.renderer = t;\n        }\n        const i = v({\n            ...this.renderer.toJSON(),\n            variableName: r\n          }),\n          s = x(e, r);\n        this.symbolizer ? (this.symbolizer.rendererJSON = i, this.symbolizer.rasterInfo = s) : this.symbolizer = new T({\n          rendererJSON: i,\n          rasterInfo: s\n        });\n        const n = this.symbolizer.bind();\n        if (n.success) {\n          if (\"auto\" === t) {\n            const {\n                colormap: t\n              } = this.raster.rasterInfo,\n              e = this.renderer;\n            if (o(t)) {\n              if (\"raster-colormap\" !== e.type) this._configDefaultRenderer(\"override\");else {\n                const t = H(this.raster.rasterInfo);\n                JSON.stringify(t) !== JSON.stringify(e) && this._configDefaultRenderer(\"override\");\n              }\n            } else if (\"raster-stretch\" === e.type) {\n              const t = this.bandIds?.length,\n                r = e.statistics?.length;\n              !e.dynamicRangeAdjustment && r && t && r !== t && this._configDefaultRenderer(\"override\");\n            }\n          }\n        } else O.warn(\"imagery-tile-mixin\", n.error || \"The given renderer is not supported by the layer.\"), \"auto\" === t && this._configDefaultRenderer(\"override\");\n      }\n    };\n    function C(t) {\n      if (!t.raster || !t.rasterInfo) throw new i(\"imagery-tile\", \"no raster\");\n    }\n    return t([a()], z.prototype, \"_cachedRendererJson\", void 0), t([a()], z.prototype, \"_cachedRasterFunctionJson\", void 0), t([a()], z.prototype, \"_compatibleFullExtent\", void 0), t([a()], z.prototype, \"_isConstructedFromFunctionRaster\", void 0), t([a()], z.prototype, \"_rasterJobHandler\", void 0), t([a()], z.prototype, \"bandIds\", void 0), t([a({\n      json: {\n        origins: {\n          service: {\n            read: {\n              source: \"copyrightText\"\n            }\n          }\n        }\n      }\n    })], z.prototype, \"copyright\", void 0), t([a({\n      json: {\n        read: !1\n      }\n    })], z.prototype, \"fullExtent\", null), t([a()], z.prototype, \"interpolation\", void 0), t([a()], z.prototype, \"ioConfig\", void 0), t([a({\n      type: [c],\n      json: {\n        write: !0\n      }\n    })], z.prototype, \"multidimensionalDefinition\", null), t([a({\n      type: h,\n      json: {\n        write: !0\n      }\n    })], z.prototype, \"multidimensionalSubset\", void 0), t([a()], z.prototype, \"raster\", void 0), t([a({\n      type: f\n    })], z.prototype, \"rasterFunction\", void 0), t([a()], z.prototype, \"rasterInfo\", void 0), t([a()], z.prototype, \"sourceJSON\", void 0), t([a({\n      readOnly: !0,\n      type: N,\n      json: {\n        read: !1\n      }\n    })], z.prototype, \"spatialReference\", void 0), t([a({\n      json: {\n        read: !1\n      }\n    })], z.prototype, \"tileInfo\", null), t([a(d)], z.prototype, \"url\", null), t([a({\n      types: e\n    })], z.prototype, \"renderer\", null), t([a()], z.prototype, \"symbolizer\", void 0), z = t([l(\"esri.layers.ImageryTileMixin\")], z), z;\n  };\nexport { z as ImageryTileMixin };","map":{"version":3,"names":["_","t","rasterRendererTypes","e","r","i","s","isNone","n","isSome","o","property","a","subclass","l","getInfo","u","sanitizeUrl","m","url","d","c","h","f","p","y","b","getDefaultMultidimensionalDefinition","g","hasExcludedVariableOrDimension","J","getDefaultVariablInfo","isMultiSliceOrRangeDefinition","F","getSubsetVariablesFromMdInfo","I","create","R","convertVectorFieldData","S","normalizeRendererJSON","v","getVariableRasterInfo","x","getDefaultInterpolation","D","getDefaultBandCombination","j","createDefaultRenderer","H","T","createFlowMesh","w","N","O","getLogger","z","constructor","arguments","_isConstructedFromFunctionRaster","_rasterJobHandler","instance","refCount","connectionPromise","bandIds","copyright","interpolation","multidimensionalSubset","raster","rasterFunction","rasterInfo","sourceJSON","spatialReference","symbolizer","length","undefined","datasetFormat","fullExtent","extent","multidimensionalDefinition","_set","updateRenderer","tileInfo","storageInfo","renderer","dataType","pixelBlock","meshType","simulationSettings","flowData","signal","AbortController","normalizeRasterFetchOptions","multidimensionalInfo","timeExtent","start","end","map","clone","variables","find","_ref","name","variableName","dimensions","_ref2","_ref3","dimensionName","getTime","values","filter","Array","isArray","sort","Math","abs","hasRegularIntervals","max","min","updateRasterFunction","type","_cachedRasterFunctionJson","JSON","stringify","toJSON","fromJSON","primaryRasters","rasters","forEach","rasterFunctionDefinition","rasterJobHandler","open","_cachedRendererJson","bandCount","some","_configDefaultRenderer","loaded","rendererJSON","bind","updateSymbolizer","applyRenderer","pixels","symbolize","simpleStretchParams","getTileUrl","getCompatibleTileInfo","equals","size","origin","xmin","ymax","getCompatibleFullExtent","_compatibleFullExtent","computeExtent","fetchTile","C","requestAsImageElement","responseType","query","refreshParameters","ioConfig","customFetchParameters","then","data","getTileExtentFromTileInfo","_initJobHandler","buffer","cols","rows","fetchPixels","identify","hasMultidimensionalTranspose","transposedVariableName","location","value","areaOfInterest","contains","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_shutdownJobHandler","hasStandardTime","getStandardTimeValue","Date","toString","getMultidimensionalSubsetVariables","_configDefaultSettings","_configDefaultInterpolation","initialize","syncJobHandler","catch","destroy","tileType","defaultResamplingMethod","statistics","dynamicRangeAdjustment","stretchType","success","colormap","warn","error","prototype","json","origins","service","read","source","write","readOnly","types","ImageryTileMixin"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import{rasterRendererTypes as e}from\"../../rasterRenderers.js\";import r from\"../../request.js\";import i from\"../../core/Error.js\";import s from\"../../core/Logger.js\";import{isNone as n,isSome as o}from\"../../core/maybe.js\";import{property as a}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/accessorSupport/ensureType.js\";import\"../../core/arrayUtils.js\";import{subclass as l}from\"../../core/accessorSupport/decorators/subclass.js\";import{getInfo as u}from\"../../geometry/support/spatialReferenceUtils.js\";import{sanitizeUrl as m}from\"../support/arcgisLayerUrl.js\";import{url as d}from\"../support/commonProperties.js\";import c from\"../support/DimensionalDefinition.js\";import h from\"../support/MultidimensionalSubset.js\";import f from\"../support/RasterFunction.js\";import p from\"../support/RasterJobHandler.js\";import y from\"../support/TileInfo.js\";import b from\"../support/rasterDatasets/FunctionRaster.js\";import{getDefaultMultidimensionalDefinition as g,hasExcludedVariableOrDimension as J,getDefaultVariablInfo as _,isMultiSliceOrRangeDefinition as F,getSubsetVariablesFromMdInfo as I}from\"../support/rasterDatasets/multidimensionalUtils.js\";import{create as R}from\"../support/rasterFunctions/rasterFunctionHelper.js\";import{convertVectorFieldData as S}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{normalizeRendererJSON as v,getVariableRasterInfo as x,getDefaultInterpolation as D,getDefaultBandCombination as j,createDefaultRenderer as H}from\"../../renderers/support/rasterRendererHelper.js\";import T from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as w}from\"../../views/2d/engine/flow/dataUtils.js\";import N from\"../../geometry/SpatialReference.js\";const O=s.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),z=s=>{let z=class extends s{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=\"nearest\",this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=\"Function\"===t[0]?.raster?.datasetFormat}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(t){this._set(\"multidimensionalDefinition\",t),this.updateRenderer()}get tileInfo(){return this.rasterInfo?.storageInfo.tileInfo}set url(t){this._set(\"url\",m(t,O))}set renderer(t){this._set(\"renderer\",t),this.updateRenderer()}async convertVectorFieldData(t,e){if(n(t)||!this.rasterInfo)return null;const r=this._rasterJobHandler.instance,i=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:t,dataType:i},e):S(t,i)}async createFlowMesh(t,e){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(t,e):w(t.meshType,t.simulationSettings,t.flowData,o(e.signal)?e.signal:(new AbortController).signal)}normalizeRasterFetchOptions(t){const{multidimensionalInfo:e}=this.rasterInfo??{};if(n(e))return t;let r=t.multidimensionalDefinition||this.multidimensionalDefinition;!n(r)&&r.length||(r=g(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const i=t.timeExtent||this.timeExtent;if(o(r)&&o(i)&&(o(i.start)||o(i.end))){r=r.map((t=>t.clone()));const s=e.variables.find((({name:t})=>t===r[0].variableName))?.dimensions?.find((({name:t})=>\"StdTime\"===t)),a=r.find((({dimensionName:t})=>\"StdTime\"===t));if(!s||!a)return{...t,multidimensionalDefinition:null};const{start:l,end:u}=i,m=n(l)?null:l.getTime(),d=n(u)?null:u.getTime(),c=m??d,h=d??m;if(o(s.values)){const t=s.values.filter((t=>{if(Array.isArray(t)){if(c===h)return t[0]<=c&&t[1]>=c;const e=t[0]<=c&&t[1]>c||t[0]<h&&t[1]>=h,r=t[0]>=c&&t[1]<=h||t[0]<c&&t[1]>h;return e||r}return c===h?t===c:t>=c&&t<=h}));if(t.length){const e=t.sort(((t,e)=>{if(c===h)return(t[0]??t)-(e[0]??e);return Math.abs((t[1]??t)-h)-Math.abs((e[1]??e)-h)}))[0];a.values=[e]}else r=null}else if(s.hasRegularIntervals&&s.extent){const[t,e]=s.extent;c>e||h<t?r=null:a.values=c===h?[c]:[Math.max(t,c),Math.min(e,h)]}}return o(r)&&J(r,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:r}}async updateRasterFunction(){if(\"imagery-tile\"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&\"Function\"===this.raster.datasetFormat){const t=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&t&&this._set(\"rasterFunction\",f.fromJSON(t)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let t,e=this.raster,r=!1;\"Function\"===e.datasetFormat?(t=e.primaryRasters.rasters,e=t[0],r=!0):t=[e];const{rasterFunction:i}=this;if(i){const r={raster:e};t.length>1&&t.forEach((t=>r[t.url]=t));const s=R(i.rasterFunctionDefinition??i.toJSON(),r),n=new b({rasterFunction:s});n.rasterJobHandler=this._rasterJobHandler.instance,await n.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=n}else this.raster=e,this._cachedRasterFunctionJson=null;if(this._cachedRendererJson=null,!r&&!i)return;const{bandIds:s}=this,{bandCount:n}=this.raster.rasterInfo,o=s?.length?s.some((t=>t>=n)):n>=3;s&&(o||\"raster-stretch\"!==this.renderer.type)&&this._set(\"bandIds\",null),this._configDefaultRenderer(\"auto\")}async updateRenderer(){const{loaded:t,symbolizer:e}=this;if(!t||!e)return;const{rasterInfo:r}=this.raster,i=_(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name,s=v({...this.renderer.toJSON(),variableName:i});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(s))return;const n=this._rasterJobHandler.instance;n&&(e.rasterInfo=x(r,i),e.rendererJSON=s,e.bind(),await n.updateSymbolizer(e),this._cachedRendererJson=s)}async applyRenderer(t,e){const r=t&&t.pixelBlock;if(!(o(r)&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const s=this._rasterJobHandler.instance,n=this.bandIds??[];return i=s?await s.symbolize({...t,simpleStretchParams:e,bandIds:n}):this.symbolizer.symbolize({...t,simpleStretchParams:e,bandIds:n}),i}getTileUrl(t,e,r){return\"RasterTileServer\"===this.raster.datasetFormat?`${this.url}/tile/${t}/${e}/${r}`:\"\"}getCompatibleTileInfo(t,e,r=!1){if(!this.loaded||n(e))return null;if(r&&t.equals(this.spatialReference))return this.tileInfo;const i=u(t);return y.create({size:256,spatialReference:t,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:e.xmin,y:e.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,e,i,s={}){if(C(this),s.requestAsImageElement){const n=this.getTileUrl(t,e,i);return r(n,{responseType:\"image\",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:s.signal}).then((t=>t.data))}const{rasterInfo:a}=this;if(o(a.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),n(s.multidimensionalDefinition))){const r=s.tileInfo||a.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,e,i,r),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),\"raster-shaded-relief\"===this.renderer.type&&(s={...s,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,e,i,s)}async fetchPixels(t,e,r,i={}){return o(this.rasterInfo.multidimensionalInfo)&&(i=this.normalizeRasterFetchOptions(i),n(i.multidimensionalDefinition))?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),this.raster.fetchPixels(t,e,r,i))}async identify(t,e={}){const{raster:r,rasterInfo:s}=this;if(o(s.multidimensionalInfo)){if(!(s.hasMultidimensionalTranspose&&!!(F(e.multidimensionalDefinition)||e.transposedVariableName||e.timeExtent))&&(e=this.normalizeRasterFetchOptions(e),n(e.multidimensionalDefinition)))return{location:t,value:null}}const a=this.multidimensionalSubset?.areaOfInterest;if(a&&!a.contains(t))throw new i(\"imagery-tile-mixin:identify\",\"the request cannot be fulfilled when falling outside of the multidimensional subset\");return r.identify(t,e)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.rasterInfo?.multidimensionalInfo;if(n(t)||\"standard-time\"!==this.rasterInfo?.dataType)return!1;const e=this.multidimensionalDefinition,r=e?.[0]?.variableName;return t.variables.some((t=>t.name===r&&(!e?.[0].dimensionName||t.dimensions.some((t=>\"StdTime\"===t.name)))))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){const e=t??this.rasterInfo?.multidimensionalInfo;return I(this.multidimensionalSubset,e)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=g(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const t=new p;return this._rasterJobHandler.connectionPromise=t.initialize().then((()=>{C(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.renderer&&this.updateRenderer(),\"Function\"===this.raster.datasetFormat&&this.raster.syncJobHandler()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){C(this);const{raster:t}=this,e=D(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set(\"interpolation\",e)}}_configDefaultRenderer(t=\"no\"){C(this);const{rasterInfo:e}=this.raster;!this.bandIds&&e.bandCount>1&&(this.bandIds=j(e));const r=_(e,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||\"override\"===t){const t=H(e,{bandIds:this.bandIds,variableName:r});\"WCSServer\"===this.raster.datasetFormat&&\"raster-stretch\"===t.type&&((e.statistics?.[0].max??0)>1e24||(e.statistics?.[0].min??0)<-1e24)&&(t.dynamicRangeAdjustment=!0,t.statistics=null,\"none\"===t.stretchType&&(t.stretchType=\"min-max\")),this.renderer=t}const i=v({...this.renderer.toJSON(),variableName:r}),s=x(e,r);this.symbolizer?(this.symbolizer.rendererJSON=i,this.symbolizer.rasterInfo=s):this.symbolizer=new T({rendererJSON:i,rasterInfo:s});const n=this.symbolizer.bind();if(n.success){if(\"auto\"===t){const{colormap:t}=this.raster.rasterInfo,e=this.renderer;if(o(t))if(\"raster-colormap\"!==e.type)this._configDefaultRenderer(\"override\");else{const t=H(this.raster.rasterInfo);JSON.stringify(t)!==JSON.stringify(e)&&this._configDefaultRenderer(\"override\")}else if(\"raster-stretch\"===e.type){const t=this.bandIds?.length,r=e.statistics?.length;!e.dynamicRangeAdjustment&&r&&t&&r!==t&&this._configDefaultRenderer(\"override\")}}}else O.warn(\"imagery-tile-mixin\",n.error||\"The given renderer is not supported by the layer.\"),\"auto\"===t&&this._configDefaultRenderer(\"override\")}};function C(t){if(!t.raster||!t.rasterInfo)throw new i(\"imagery-tile\",\"no raster\")}return t([a()],z.prototype,\"_cachedRendererJson\",void 0),t([a()],z.prototype,\"_cachedRasterFunctionJson\",void 0),t([a()],z.prototype,\"_compatibleFullExtent\",void 0),t([a()],z.prototype,\"_isConstructedFromFunctionRaster\",void 0),t([a()],z.prototype,\"_rasterJobHandler\",void 0),t([a()],z.prototype,\"bandIds\",void 0),t([a({json:{origins:{service:{read:{source:\"copyrightText\"}}}}})],z.prototype,\"copyright\",void 0),t([a({json:{read:!1}})],z.prototype,\"fullExtent\",null),t([a()],z.prototype,\"interpolation\",void 0),t([a()],z.prototype,\"ioConfig\",void 0),t([a({type:[c],json:{write:!0}})],z.prototype,\"multidimensionalDefinition\",null),t([a({type:h,json:{write:!0}})],z.prototype,\"multidimensionalSubset\",void 0),t([a()],z.prototype,\"raster\",void 0),t([a({type:f})],z.prototype,\"rasterFunction\",void 0),t([a()],z.prototype,\"rasterInfo\",void 0),t([a()],z.prototype,\"sourceJSON\",void 0),t([a({readOnly:!0,type:N,json:{read:!1}})],z.prototype,\"spatialReference\",void 0),t([a({json:{read:!1}})],z.prototype,\"tileInfo\",null),t([a(d)],z.prototype,\"url\",null),t([a({types:e})],z.prototype,\"renderer\",null),t([a()],z.prototype,\"symbolizer\",void 0),z=t([l(\"esri.layers.ImageryTileMixin\")],z),z};export{z as ImageryTileMixin};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}