{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { unwrap as r, isSome as i, isNone as s } from \"../../../core/maybe.js\";\nimport { property as a } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as n } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport o from \"../RasterInfo.js\";\nimport f from \"../RasterStorageInfo.js\";\nimport l from \"./BaseRaster.js\";\nimport u from \"./DBFParser.js\";\nimport { parseSpatialReference as c, parsePAMInfo as p } from \"./pamParser.js\";\nimport { parseSignature as m, getPyramidIFDs as h, getMaskIFDs as d, getImageInfo as y, parseIFD as g, parseFieldValues as T, isBSQConfig as x } from \"../rasterFormats/TiffDecoder.js\";\nimport I from \"../rasterFormats/TiffTags.js\";\nimport { estimateStatisticsFromHistograms as w } from \"../rasterFunctions/stretchUtils.js\";\nimport _ from \"../rasterTransforms/PolynomialTransform.js\";\nimport b from \"../../../rest/support/FeatureSet.js\";\nimport F from \"../../../geometry/SpatialReference.js\";\nimport S from \"../../../geometry/Extent.js\";\nimport R from \"../../../geometry/Point.js\";\nconst E = (e, t) => e.get(t)?.values,\n  k = (e, t) => e.get(t)?.values?.[0];\nlet D = class extends l {\n  constructor() {\n    super(...arguments), this._files = null, this._headerInfo = null, this._bufferSize = 1048576, this.datasetFormat = \"TIFF\";\n  }\n  async open(e) {\n    await this.init();\n    const s = e ? r(e.signal) : null,\n      {\n        data: a\n      } = await this.request(this.url, {\n        range: {\n          from: 0,\n          to: this._bufferSize\n        },\n        responseType: \"array-buffer\",\n        signal: s\n      });\n    if (!a) throw new t(\"tiffraster:open\", \"failed to open url \" + this.url);\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1, this.url.lastIndexOf(\".\"));\n    const {\n        littleEndian: n,\n        firstIFDPos: o,\n        isBigTiff: f\n      } = m(a),\n      l = [];\n    await this._readIFDs(l, a, n, o, 0, f ? 8 : 4, s);\n    const {\n        imageInfo: u,\n        rasterInfo: c\n      } = this._parseIFDs(l),\n      p = h(l),\n      y = d(l);\n    if (this._headerInfo = {\n      littleEndian: n,\n      isBigTiff: f,\n      ifds: l,\n      pyramidIFDs: p,\n      maskIFDs: y,\n      ...u\n    }, this._set(\"rasterInfo\", c), !u.isSupported) throw new t(\"tiffraster:open\", \"this tiff is not supported: \" + u.message);\n    if (!u.tileWidth) throw new t(\"tiffraster:open\", \"none-tiled tiff is not optimized for access, convert to COG and retry.\");\n    const {\n      skipExtensions: g = []\n    } = this.ioConfig;\n    if (!g.includes(\"aux.xml\")) {\n      const t = await this._fetchAuxiliaryMetaData(e);\n      null != t && this._processPAMInfo(t, c);\n    }\n    g.includes(\"vat.dbf\") || 1 !== c.bandCount || \"u8\" !== c.pixelType || (c.attributeTable = await this._fetchAuxiliaryTable(e), i(c.attributeTable) && (c.keyProperties.DataType = \"thematic\")), this.updateTileInfo();\n  }\n  async fetchRawTile(e, t, r) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (!this._headerInfo?.isSupported || this.isBlockOutside(e, t, r)) return null;\n    const a = await this._fetchRawTiffTile(e, t, r, !1, s);\n    if (i(a) && this._headerInfo.hasMaskBand) {\n      const n = await this._fetchRawTiffTile(e, t, r, !0, s);\n      i(n) && n.pixels[0] instanceof Uint8Array && (a.mask = n.pixels[0]);\n    }\n    return a;\n  }\n  _parseIFDs(e) {\n    const t = y(e),\n      {\n        width: r,\n        height: i,\n        tileWidth: s,\n        tileHeight: a,\n        planes: n,\n        pixelType: l,\n        compression: u,\n        firstPyramidLevel: p,\n        maximumPyramidLevel: m,\n        pyramidBlockWidth: h,\n        pyramidBlockHeight: d,\n        tileBoundary: g,\n        affine: T,\n        metadata: x\n      } = t,\n      I = t.extent.spatialReference?.wkt || t.extent.spatialReference?.wkid;\n    let w = c(I),\n      b = !!t.isPseudoGeographic;\n    null == w && (b = !0, w = new F({\n      wkid: 3857\n    }));\n    const D = new S({\n        ...t.extent,\n        spatialReference: w\n      }),\n      v = new R(D ? {\n        x: D.xmin,\n        y: D.ymax,\n        spatialReference: w\n      } : {\n        x: 0,\n        y: 0\n      }),\n      P = new f({\n        blockWidth: s,\n        blockHeight: a,\n        pyramidBlockWidth: h,\n        pyramidBlockHeight: d,\n        compression: u,\n        origin: v,\n        firstPyramidLevel: p,\n        maximumPyramidLevel: m,\n        blockBoundary: g\n      }),\n      O = new R({\n        x: (D.xmax - D.xmin) / r,\n        y: (D.ymax - D.ymin) / i,\n        spatialReference: w\n      }),\n      j = x ? {\n        BandProperties: x.bandProperties,\n        DataType: x.dataType\n      } : {};\n    let B = null;\n    const L = k(e[0], \"PHOTOMETRICINTERPRETATION\"),\n      A = E(e[0], \"COLORMAP\");\n    if (L <= 3 && A?.length > 3 && A.length % 3 == 0) {\n      B = [];\n      const e = A.length / 3;\n      for (let t = 0; t < e; t++) B.push([t, A[t] >>> 8, A[t + e] >>> 8, A[t + 2 * e] >>> 8]);\n    }\n    const z = new o({\n      width: r,\n      height: i,\n      bandCount: n,\n      pixelType: l,\n      pixelSize: O,\n      storageInfo: P,\n      spatialReference: w,\n      isPseudoSpatialReference: b,\n      keyProperties: j,\n      extent: D,\n      colormap: B,\n      statistics: x ? x.statistics : null\n    });\n    return T?.length && (z.nativeExtent = new S({\n      xmin: -.5,\n      ymin: .5 - i,\n      xmax: r - .5,\n      ymax: .5,\n      spatialReference: w\n    }), z.transform = new _({\n      polynomialOrder: 1,\n      forwardCoefficients: [T[2] + T[0] / 2, T[5] - T[3] / 2, T[0], T[3], -T[1], -T[4]]\n    }), z.extent = z.transform.forwardTransform(z.nativeExtent), z.pixelSize = new R({\n      x: (D.xmax - D.xmin) / r,\n      y: (D.ymax - D.ymin) / i,\n      spatialReference: w\n    }), P.origin.x = -.5, P.origin.y = .5), {\n      imageInfo: t,\n      rasterInfo: z\n    };\n  }\n  _processPAMInfo(e, t) {\n    if (t.statistics = e.statistics ?? t.statistics, t.histograms = e.histograms, e.histograms && s(t.statistics) && (t.statistics = w(e.histograms)), e.transform && s(t.transform)) {\n      t.transform = e.transform, t.nativeExtent = t.extent;\n      const r = t.transform.forwardTransform(t.nativeExtent);\n      t.pixelSize = new R({\n        x: (r.xmax - r.xmin) / t.width,\n        y: (r.ymax - r.ymin) / t.height,\n        spatialReference: t.spatialReference\n      }), t.extent = r;\n    }\n    t.isPseudoSpatialReference && e.spatialReference && (t.spatialReference = e.spatialReference);\n  }\n  async _readIFDs(e, t, r, i, s) {\n    let a = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 4;\n    let n = arguments.length > 6 ? arguments[6] : undefined;\n    if (!i) return null;\n    if (i >= t.byteLength || i < 0) {\n      t = (await this.request(this.url, {\n        range: {\n          from: i + s,\n          to: i + s + this._bufferSize\n        },\n        responseType: \"array-buffer\",\n        signal: n\n      })).data, s = i + s, i = 0;\n    }\n    const o = await this._readIFD(t, r, i, s, I.TIFF_TAGS, a, n);\n    if (e.push(o.ifd), !o.nextIFD) return null;\n    await this._readIFDs(e, t, r, o.nextIFD - s, s, a, n);\n  }\n  async _readIFD(e, t, r, s) {\n    let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : I.TIFF_TAGS;\n    let n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 4;\n    let o = arguments.length > 6 ? arguments[6] : undefined;\n    if (!e) return null;\n    const f = g(e, t, r, s, a, n);\n    if (f.success) {\n      const r = [];\n      if (f.ifd?.forEach(e => {\n        e.values || r.push(e);\n      }), r.length > 0) {\n        const a = r.map(e => e.offlineOffsetSize).filter(i),\n          n = Math.min.apply(null, a.map(e => e[0]));\n        if (Math.min.apply(null, a.map(e => e[0] + e[1])) - n <= this._bufferSize) {\n          const {\n            data: i\n          } = await this.request(this.url, {\n            range: {\n              from: n,\n              to: n + this._bufferSize\n            },\n            responseType: \"array-buffer\",\n            signal: o\n          });\n          e = i, s = n, r.forEach(r => T(e, t, r, s));\n        }\n      }\n      if (f.ifd?.has(\"GEOKEYDIRECTORY\")) {\n        const r = f.ifd.get(\"GEOKEYDIRECTORY\"),\n          i = r?.values;\n        if (i && i.length > 4) {\n          const a = i[0] + \".\" + i[1] + \".\" + i[2],\n            n = await this._readIFD(e, t, r.valueOffset + 6 - s, s, I.GEO_KEYS, 2, o);\n          r.data = n.ifd, r.data && r.data.set(\"GEOTIFFVersion\", {\n            id: 0,\n            type: 2,\n            valueCount: 1,\n            valueOffset: null,\n            values: [a]\n          });\n        }\n      }\n      return f;\n    }\n    if (f.requiredBufferSize && f.requiredBufferSize !== e.byteLength) {\n      const r = await this.request(this.url, {\n        range: {\n          from: s,\n          to: s + f.requiredBufferSize + 4\n        },\n        responseType: \"array-buffer\",\n        signal: o\n      });\n      return (e = r.data).byteLength < f.requiredBufferSize ? null : this._readIFD(e, t, 0, s, I.TIFF_TAGS, 4, o);\n    }\n  }\n  async _fetchRawTiffTile(e, t, r, i) {\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    const a = this._getTileLocation(e, t, r, i);\n    if (!a) return null;\n    const {\n        ranges: n,\n        actualTileWidth: o,\n        actualTileHeight: f,\n        ifd: l\n      } = a,\n      u = n.map(e => this.request(this.url, {\n        range: e,\n        responseType: \"array-buffer\",\n        signal: s.signal\n      })),\n      c = await Promise.all(u),\n      p = c.map(e => e.data.byteLength).reduce((e, t) => e + t),\n      m = 1 === c.length ? c[0].data : new ArrayBuffer(p),\n      h = [0],\n      d = [0];\n    if (c.length > 1) {\n      const e = new Uint8Array(m);\n      for (let t = 0, r = 0; t < c.length; t++) {\n        const i = c[t].data;\n        e.set(new Uint8Array(i), r), h[t] = r, r += i.byteLength, d[t] = i.byteLength;\n      }\n    }\n    const {\n        blockWidth: y,\n        blockHeight: g\n      } = this.getBlockWidthHeight(e),\n      T = await this.decodePixelBlock(m, {\n        format: \"tiff\",\n        customOptions: {\n          headerInfo: this._headerInfo,\n          ifd: l,\n          offsets: h,\n          sizes: d\n        },\n        width: y,\n        height: g,\n        planes: null,\n        pixelType: null\n      });\n    if (null == T) return null;\n    let x, I, w;\n    if (o !== y || f !== g) {\n      let e = T.mask;\n      if (e) {\n        for (x = 0; x < g; x++) if (w = x * y, x < f) for (I = o; I < y; I++) e[w + I] = 0;else for (I = 0; I < y; I++) e[w + I] = 0;\n      } else for (e = new Uint8Array(y * g), T.mask = e, x = 0; x < f; x++) for (w = x * y, I = 0; I < o; I++) e[w + I] = 1;\n    }\n    return T;\n  }\n  _getTileLocation(e, t, r) {\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    const {\n        firstPyramidLevel: s,\n        blockBoundary: a\n      } = this.rasterInfo.storageInfo,\n      n = 0 === e ? 0 : e - (s - 1),\n      {\n        _headerInfo: o\n      } = this;\n    if (!o) return null;\n    const f = i ? o.maskIFDs[n] : 0 === n ? o?.ifds[0] : o?.pyramidIFDs[n - 1];\n    if (!f) return null;\n    const l = x(f, o),\n      u = E(f, \"TILEOFFSETS\");\n    if (void 0 === u) return null;\n    const c = E(f, \"TILEBYTECOUNTS\"),\n      {\n        minRow: p,\n        minCol: m,\n        maxRow: h,\n        maxCol: d\n      } = a[n];\n    if (t > h || r > d || t < p || r < m) return null;\n    const y = k(f, \"IMAGEWIDTH\"),\n      g = k(f, \"IMAGELENGTH\"),\n      T = k(f, \"TILEWIDTH\"),\n      I = k(f, \"TILELENGTH\"),\n      w = l ? this.rasterInfo.bandCount : 1,\n      _ = w * t * (d + 1) + r,\n      b = [{\n        from: u[_],\n        to: u[_ + w - 1] + c[_ + w - 1] - 1\n      }];\n    if (l) {\n      let e = !0;\n      for (let t = 0; t < w; t++) if (u[_ + t] + c[_ + t] !== u[_ + t + 1]) {\n        e = !1;\n        break;\n      }\n      if (!e) for (let t = 0; t < w; t++) b[t] = {\n        from: u[_ + t],\n        to: u[_ + t] + c[_ + t] - 1\n      };\n    }\n    const F = u[_],\n      S = c[_];\n    if (null == F || null == S) return null;\n    return {\n      ranges: b,\n      ifd: f,\n      actualTileWidth: r === d && y % T || T,\n      actualTileHeight: t === h && g % I || I\n    };\n  }\n  async _fetchAuxiliaryMetaData(e) {\n    try {\n      const {\n        data: t\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: e?.signal\n      });\n      return p(t);\n    } catch {\n      return null;\n    }\n  }\n  async _fetchAuxiliaryTable(e) {\n    try {\n      const {\n          data: t\n        } = await this.request(this.url + \".vat.dbf\", {\n          responseType: \"array-buffer\",\n          signal: e?.signal\n        }),\n        r = u.parse(t);\n      return r?.recordSet ? b.fromJSON(r.recordSet) : null;\n    } catch {\n      return null;\n    }\n  }\n};\ne([a()], D.prototype, \"_files\", void 0), e([a()], D.prototype, \"_headerInfo\", void 0), e([a()], D.prototype, \"_bufferSize\", void 0), e([a({\n  type: String,\n  json: {\n    write: !0\n  }\n})], D.prototype, \"datasetFormat\", void 0), D = e([n(\"esri.layers.support.rasterDatasets.TIFFRaster\")], D);\nconst v = D;\nexport { v as default };","map":{"version":3,"names":["_","e","t","unwrap","r","isSome","i","isNone","s","property","a","subclass","n","o","f","l","u","parseSpatialReference","c","parsePAMInfo","p","parseSignature","m","getPyramidIFDs","h","getMaskIFDs","d","getImageInfo","y","parseIFD","g","parseFieldValues","T","isBSQConfig","x","I","estimateStatisticsFromHistograms","w","b","F","S","R","E","get","values","k","D","constructor","arguments","_files","_headerInfo","_bufferSize","datasetFormat","open","init","signal","data","request","url","range","from","to","responseType","datasetName","slice","lastIndexOf","littleEndian","firstIFDPos","isBigTiff","_readIFDs","imageInfo","rasterInfo","_parseIFDs","ifds","pyramidIFDs","maskIFDs","_set","isSupported","message","tileWidth","skipExtensions","ioConfig","includes","_fetchAuxiliaryMetaData","_processPAMInfo","bandCount","pixelType","attributeTable","_fetchAuxiliaryTable","keyProperties","DataType","updateTileInfo","fetchRawTile","length","undefined","isBlockOutside","_fetchRawTiffTile","hasMaskBand","pixels","Uint8Array","mask","width","height","tileHeight","planes","compression","firstPyramidLevel","maximumPyramidLevel","pyramidBlockWidth","pyramidBlockHeight","tileBoundary","affine","metadata","extent","spatialReference","wkt","wkid","isPseudoGeographic","v","xmin","ymax","P","blockWidth","blockHeight","origin","blockBoundary","O","xmax","ymin","j","BandProperties","bandProperties","dataType","B","L","A","push","z","pixelSize","storageInfo","isPseudoSpatialReference","colormap","statistics","nativeExtent","transform","polynomialOrder","forwardCoefficients","forwardTransform","histograms","byteLength","_readIFD","TIFF_TAGS","ifd","nextIFD","success","forEach","map","offlineOffsetSize","filter","Math","min","apply","has","valueOffset","GEO_KEYS","set","id","type","valueCount","requiredBufferSize","_getTileLocation","ranges","actualTileWidth","actualTileHeight","Promise","all","reduce","ArrayBuffer","getBlockWidthHeight","decodePixelBlock","format","customOptions","headerInfo","offsets","sizes","minRow","minCol","maxRow","maxCol","parse","recordSet","fromJSON","prototype","String","json","write","default"],"sources":["C:/code-challenge-react/client/node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{unwrap as r,isSome as i,isNone as s}from\"../../../core/maybe.js\";import{property as a}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as n}from\"../../../core/accessorSupport/decorators/subclass.js\";import o from\"../RasterInfo.js\";import f from\"../RasterStorageInfo.js\";import l from\"./BaseRaster.js\";import u from\"./DBFParser.js\";import{parseSpatialReference as c,parsePAMInfo as p}from\"./pamParser.js\";import{parseSignature as m,getPyramidIFDs as h,getMaskIFDs as d,getImageInfo as y,parseIFD as g,parseFieldValues as T,isBSQConfig as x}from\"../rasterFormats/TiffDecoder.js\";import I from\"../rasterFormats/TiffTags.js\";import{estimateStatisticsFromHistograms as w}from\"../rasterFunctions/stretchUtils.js\";import _ from\"../rasterTransforms/PolynomialTransform.js\";import b from\"../../../rest/support/FeatureSet.js\";import F from\"../../../geometry/SpatialReference.js\";import S from\"../../../geometry/Extent.js\";import R from\"../../../geometry/Point.js\";const E=(e,t)=>e.get(t)?.values,k=(e,t)=>e.get(t)?.values?.[0];let D=class extends l{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat=\"TIFF\"}async open(e){await this.init();const s=e?r(e.signal):null,{data:a}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:\"array-buffer\",signal:s});if(!a)throw new t(\"tiffraster:open\",\"failed to open url \"+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1,this.url.lastIndexOf(\".\"));const{littleEndian:n,firstIFDPos:o,isBigTiff:f}=m(a),l=[];await this._readIFDs(l,a,n,o,0,f?8:4,s);const{imageInfo:u,rasterInfo:c}=this._parseIFDs(l),p=h(l),y=d(l);if(this._headerInfo={littleEndian:n,isBigTiff:f,ifds:l,pyramidIFDs:p,maskIFDs:y,...u},this._set(\"rasterInfo\",c),!u.isSupported)throw new t(\"tiffraster:open\",\"this tiff is not supported: \"+u.message);if(!u.tileWidth)throw new t(\"tiffraster:open\",\"none-tiled tiff is not optimized for access, convert to COG and retry.\");const{skipExtensions:g=[]}=this.ioConfig;if(!g.includes(\"aux.xml\")){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,c)}g.includes(\"vat.dbf\")||1!==c.bandCount||\"u8\"!==c.pixelType||(c.attributeTable=await this._fetchAuxiliaryTable(e),i(c.attributeTable)&&(c.keyProperties.DataType=\"thematic\")),this.updateTileInfo()}async fetchRawTile(e,t,r,s={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,r))return null;const a=await this._fetchRawTiffTile(e,t,r,!1,s);if(i(a)&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(e,t,r,!0,s);i(n)&&n.pixels[0]instanceof Uint8Array&&(a.mask=n.pixels[0])}return a}_parseIFDs(e){const t=y(e),{width:r,height:i,tileWidth:s,tileHeight:a,planes:n,pixelType:l,compression:u,firstPyramidLevel:p,maximumPyramidLevel:m,pyramidBlockWidth:h,pyramidBlockHeight:d,tileBoundary:g,affine:T,metadata:x}=t,I=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let w=c(I),b=!!t.isPseudoGeographic;null==w&&(b=!0,w=new F({wkid:3857}));const D=new S({...t.extent,spatialReference:w}),v=new R(D?{x:D.xmin,y:D.ymax,spatialReference:w}:{x:0,y:0}),P=new f({blockWidth:s,blockHeight:a,pyramidBlockWidth:h,pyramidBlockHeight:d,compression:u,origin:v,firstPyramidLevel:p,maximumPyramidLevel:m,blockBoundary:g}),O=new R({x:(D.xmax-D.xmin)/r,y:(D.ymax-D.ymin)/i,spatialReference:w}),j=x?{BandProperties:x.bandProperties,DataType:x.dataType}:{};let B=null;const L=k(e[0],\"PHOTOMETRICINTERPRETATION\"),A=E(e[0],\"COLORMAP\");if(L<=3&&A?.length>3&&A.length%3==0){B=[];const e=A.length/3;for(let t=0;t<e;t++)B.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8])}const z=new o({width:r,height:i,bandCount:n,pixelType:l,pixelSize:O,storageInfo:P,spatialReference:w,isPseudoSpatialReference:b,keyProperties:j,extent:D,colormap:B,statistics:x?x.statistics:null});return T?.length&&(z.nativeExtent=new S({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:w}),z.transform=new _({polynomialOrder:1,forwardCoefficients:[T[2]+T[0]/2,T[5]-T[3]/2,T[0],T[3],-T[1],-T[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new R({x:(D.xmax-D.xmin)/r,y:(D.ymax-D.ymin)/i,spatialReference:w}),P.origin.x=-.5,P.origin.y=.5),{imageInfo:t,rasterInfo:z}}_processPAMInfo(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&s(t.statistics)&&(t.statistics=w(e.histograms)),e.transform&&s(t.transform)){t.transform=e.transform,t.nativeExtent=t.extent;const r=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new R({x:(r.xmax-r.xmin)/t.width,y:(r.ymax-r.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=r}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference)}async _readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:\"array-buffer\",signal:n})).data,s=i+s,i=0}const o=await this._readIFD(t,r,i,s,I.TIFF_TAGS,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-s,s,a,n)}async _readIFD(e,t,r,s,a=I.TIFF_TAGS,n=4,o){if(!e)return null;const f=g(e,t,r,s,a,n);if(f.success){const r=[];if(f.ifd?.forEach((e=>{e.values||r.push(e)})),r.length>0){const a=r.map((e=>e.offlineOffsetSize)).filter(i),n=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:i}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:\"array-buffer\",signal:o});e=i,s=n,r.forEach((r=>T(e,t,r,s)))}}if(f.ifd?.has(\"GEOKEYDIRECTORY\")){const r=f.ifd.get(\"GEOKEYDIRECTORY\"),i=r?.values;if(i&&i.length>4){const a=i[0]+\".\"+i[1]+\".\"+i[2],n=await this._readIFD(e,t,r.valueOffset+6-s,s,I.GEO_KEYS,2,o);r.data=n.ifd,r.data&&r.data.set(\"GEOTIFFVersion\",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return f}if(f.requiredBufferSize&&f.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:s,to:s+f.requiredBufferSize+4},responseType:\"array-buffer\",signal:o});return(e=r.data).byteLength<f.requiredBufferSize?null:this._readIFD(e,t,0,s,I.TIFF_TAGS,4,o)}}async _fetchRawTiffTile(e,t,r,i,s={}){const a=this._getTileLocation(e,t,r,i);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:f,ifd:l}=a,u=n.map((e=>this.request(this.url,{range:e,responseType:\"array-buffer\",signal:s.signal}))),c=await Promise.all(u),p=c.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),m=1===c.length?c[0].data:new ArrayBuffer(p),h=[0],d=[0];if(c.length>1){const e=new Uint8Array(m);for(let t=0,r=0;t<c.length;t++){const i=c[t].data;e.set(new Uint8Array(i),r),h[t]=r,r+=i.byteLength,d[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),T=await this.decodePixelBlock(m,{format:\"tiff\",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:h,sizes:d},width:y,height:g,planes:null,pixelType:null});if(null==T)return null;let x,I,w;if(o!==y||f!==g){let e=T.mask;if(e)for(x=0;x<g;x++)if(w=x*y,x<f)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),T.mask=e,x=0;x<f;x++)for(w=x*y,I=0;I<o;I++)e[w+I]=1}return T}_getTileLocation(e,t,r,i=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,n=0===e?0:e-(s-1),{_headerInfo:o}=this;if(!o)return null;const f=i?o.maskIFDs[n]:0===n?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!f)return null;const l=x(f,o),u=E(f,\"TILEOFFSETS\");if(void 0===u)return null;const c=E(f,\"TILEBYTECOUNTS\"),{minRow:p,minCol:m,maxRow:h,maxCol:d}=a[n];if(t>h||r>d||t<p||r<m)return null;const y=k(f,\"IMAGEWIDTH\"),g=k(f,\"IMAGELENGTH\"),T=k(f,\"TILEWIDTH\"),I=k(f,\"TILELENGTH\"),w=l?this.rasterInfo.bandCount:1,_=w*t*(d+1)+r,b=[{from:u[_],to:u[_+w-1]+c[_+w-1]-1}];if(l){let e=!0;for(let t=0;t<w;t++)if(u[_+t]+c[_+t]!==u[_+t+1]){e=!1;break}if(!e)for(let t=0;t<w;t++)b[t]={from:u[_+t],to:u[_+t]+c[_+t]-1}}const F=u[_],S=c[_];if(null==F||null==S)return null;return{ranges:b,ifd:f,actualTileWidth:r===d&&y%T||T,actualTileHeight:t===h&&g%I||I}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:e?.signal});return p(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+\".vat.dbf\",{responseType:\"array-buffer\",signal:e?.signal}),r=u.parse(t);return r?.recordSet?b.fromJSON(r.recordSet):null}catch{return null}}};e([a()],D.prototype,\"_files\",void 0),e([a()],D.prototype,\"_headerInfo\",void 0),e([a()],D.prototype,\"_bufferSize\",void 0),e([a({type:String,json:{write:!0}})],D.prototype,\"datasetFormat\",void 0),D=e([n(\"esri.layers.support.rasterDatasets.TIFFRaster\")],D);const v=D;export{v as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}