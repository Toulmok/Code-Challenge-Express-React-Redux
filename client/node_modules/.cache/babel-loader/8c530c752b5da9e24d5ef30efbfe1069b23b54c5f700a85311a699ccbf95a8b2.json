{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { textureSize as e } from \"../util/WebGL2Utils.js\";\nimport { glsl as r } from \"../../shaderModules/interfaces.js\";\nimport { createTexture2DPassSizeUniforms as s } from \"../../shaderModules/Texture2DPassUniform.js\";\nimport { TextureSizeUniformType as o } from \"../../shaderModules/TextureSizeUniformType.js\";\nimport { blurSizePixels as t } from \"../../../lib/SSAOHelper.js\";\nfunction n(n, a) {\n  const i = n.fragment;\n  a.receiveAmbientOcclusion ? (i.uniforms.add(s(\"ssaoTex\", (e, r) => r.ssaoHelper.colorTexture, a.hasWebGL2Context ? o.None : o.InvSize)), i.constants.add(\"blurSizePixelsInverse\", \"float\", 1 / t), i.code.add(r`\n      float evaluateAmbientOcclusionInverse() {\n        vec2 ssaoTextureSizeInverse = ${e(a, \"ssaoTex\", !0)};\n        return texture2D(ssaoTex, gl_FragCoord.xy * blurSizePixelsInverse * ssaoTextureSizeInverse).a;\n      }\n\n      float evaluateAmbientOcclusion() {\n        return 1.0 - evaluateAmbientOcclusionInverse();\n      }\n    `)) : i.code.add(r`float evaluateAmbientOcclusionInverse() { return 1.0; }\nfloat evaluateAmbientOcclusion() { return 0.0; }`);\n}\nexport { n as EvaluateAmbientOcclusion };","map":{"version":3,"names":["textureSize","e","glsl","r","createTexture2DPassSizeUniforms","s","TextureSizeUniformType","o","blurSizePixels","t","n","a","i","fragment","receiveAmbientOcclusion","uniforms","add","ssaoHelper","colorTexture","hasWebGL2Context","None","InvSize","constants","code","EvaluateAmbientOcclusion"],"sources":["C:/code-challenge-react/frontend/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{textureSize as e}from\"../util/WebGL2Utils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{createTexture2DPassSizeUniforms as s}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as o}from\"../../shaderModules/TextureSizeUniformType.js\";import{blurSizePixels as t}from\"../../../lib/SSAOHelper.js\";function n(n,a){const i=n.fragment;a.receiveAmbientOcclusion?(i.uniforms.add(s(\"ssaoTex\",((e,r)=>r.ssaoHelper.colorTexture),a.hasWebGL2Context?o.None:o.InvSize)),i.constants.add(\"blurSizePixelsInverse\",\"float\",1/t),i.code.add(r`\n      float evaluateAmbientOcclusionInverse() {\n        vec2 ssaoTextureSizeInverse = ${e(a,\"ssaoTex\",!0)};\n        return texture2D(ssaoTex, gl_FragCoord.xy * blurSizePixelsInverse * ssaoTextureSizeInverse).a;\n      }\n\n      float evaluateAmbientOcclusion() {\n        return 1.0 - evaluateAmbientOcclusionInverse();\n      }\n    `)):i.code.add(r`float evaluateAmbientOcclusionInverse() { return 1.0; }\nfloat evaluateAmbientOcclusion() { return 0.0; }`)}export{n as EvaluateAmbientOcclusion};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,WAAW,IAAIC,CAAC,QAAK,wBAAwB;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,+BAA+B,IAAIC,CAAC,QAAK,6CAA6C;AAAC,SAAOC,sBAAsB,IAAIC,CAAC,QAAK,+CAA+C;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,MAAMC,CAAC,GAACF,CAAC,CAACG,QAAQ;EAACF,CAAC,CAACG,uBAAuB,IAAEF,CAAC,CAACG,QAAQ,CAACC,GAAG,CAACX,CAAC,CAAC,SAAS,EAAE,CAACJ,CAAC,EAACE,CAAC,KAAGA,CAAC,CAACc,UAAU,CAACC,YAAY,EAAEP,CAAC,CAACQ,gBAAgB,GAACZ,CAAC,CAACa,IAAI,GAACb,CAAC,CAACc,OAAO,CAAC,CAAC,EAACT,CAAC,CAACU,SAAS,CAACN,GAAG,CAAC,uBAAuB,EAAC,OAAO,EAAC,CAAC,GAACP,CAAC,CAAC,EAACG,CAAC,CAACW,IAAI,CAACP,GAAG,CAACb,CAAE;AACnkB;AACA,wCAAwCF,CAAC,CAACU,CAAC,EAAC,SAAS,EAAC,CAAC,CAAC,CAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,IAAEC,CAAC,CAACW,IAAI,CAACP,GAAG,CAACb,CAAE;AACrB,iDAAiD,CAAC;AAAA;AAAC,SAAOO,CAAC,IAAIc,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}